[{"title": null, "description": null, "source_url": "https://docs.substrate.io/build/", "markdown": "[](https://substrate.io)\n\n*   Technology\n*   Developers\n*   Vision\n*   Ecosystem\n\n[Docs](https://docs.substrate.io/)\n\nSearch documentation\n\n*   [Quick start](/quick-start/)\n    \n\n*   [Learn](/learn/)\n    \n\n*   [Install](/install/)\n    \n\n*   [Build](/build/)\n    *   [Smart contracts](/build/smart-contracts-strategy/)\n        \n    *   [Custom pallets](/build/custom-pallets/)\n        \n    *   [Runtime storage](/build/runtime-storage/)\n        \n    *   [Transactions, weights, and fees](/build/tx-weights-fees/)\n        \n    *   [Pallet coupling](/build/pallet-coupling/)\n        \n    *   [Events and errors](/build/events-and-errors/)\n        \n    *   [Randomness](/build/randomness/)\n        \n    *   [Privileged calls and origins](/build/origins/)\n        \n    *   [Remote procedure calls](/build/remote-procedure-calls/)\n        \n    *   [Application development](/build/application-development/)\n        \n    *   [Chain specification](/build/chain-spec/)\n        \n    *   [Genesis configuration](/build/genesis-configuration/)\n        \n    *   [Build process](/build/build-process/)\n        \n    *   [Build a deterministic runtime](/build/build-a-deterministic-runtime/)\n        \n    *   [Troubleshoot your code](/build/troubleshoot-your-code/)\n        \n\n*   [Test](/test/)\n    \n\n*   [Deploy](/deploy/)\n    \n\n*   [Maintain](/maintain/)\n    \n\n*   [Tutorials](/tutorials/)\n    \n\n*   [Reference](/reference/)\n    \n\n*   [Community](/community/)\n    \n\n\u00a0 Documentation\n\nSearch documentation\n\n*   [Quick start](/quick-start/)\n    \n\n*   [Learn](/learn/)\n    \n\n*   [Install](/install/)\n    \n\n*   [Build](/build/)\n    *   [Smart contracts](/build/smart-contracts-strategy/)\n        \n    *   [Custom pallets](/build/custom-pallets/)\n        \n    *   [Runtime storage](/build/runtime-storage/)\n        \n    *   [Transactions, weights, and fees](/build/tx-weights-fees/)\n        \n    *   [Pallet coupling](/build/pallet-coupling/)\n        \n    *   [Events and errors](/build/events-and-errors/)\n        \n    *   [Randomness](/build/randomness/)\n        \n    *   [Privileged calls and origins](/build/origins/)\n        \n    *   [Remote procedure calls](/build/remote-procedure-calls/)\n        \n    *   [Application development](/build/application-development/)\n        \n    *   [Chain specification](/build/chain-spec/)\n        \n    *   [Genesis configuration](/build/genesis-configuration/)\n        \n    *   [Build process](/build/build-process/)\n        \n    *   [Build a deterministic runtime](/build/build-a-deterministic-runtime/)\n        \n    *   [Troubleshoot your code](/build/troubleshoot-your-code/)\n        \n\n*   [Test](/test/)\n    \n\n*   [Deploy](/deploy/)\n    \n\n*   [Maintain](/maintain/)\n    \n\n*   [Tutorials](/tutorials/)\n    \n\n*   [Reference](/reference/)\n    \n\n*   [Community](/community/)\n    \n\n[Home](/)\nBuild\n\n[Edit this page](https://github.com/substrate-developer-hub/substrate-docs/blob/main/content/md/en/docs/build/index.md)\n | [Submit an issue](https://github.com/substrate-developer-hub/substrate-docs/issues/new/choose)\n\nBuild\n=====\n\nThe topics in this section provide a more detailed exploration of the code used to construct the runtime logic, including the libraries and tools available for building and interacting with the node and a closer look at how the logic is compiled to build a Substrate node.\n\n*   [Smart contracts](/build/smart-contracts-strategy/)\n     summarizes how you can use build smart contracts as an approach to application development in a Substrate-based chain.\n*   [Custom pallets](/build/custom-pallets/)\n     exposes the macros and attributes that form the foundation for building custom pallets.\n*   [Runtime storage](/build/runtime-storage/)\n     offers a closer look at storage structure and how to navigate to data stored in the runtime.\n*   [Transactions, weights, and fees](/build/tx-weights-fees/)\n     explains the role of weights and fees in executing transactions and the mechanics of how fees are calculated and refunded.\n*   [Pallet coupling](/build/pallet-coupling/)\n     describes how pallets can be tightly or loosely coupled in a runtime.\n*   [Events and errors](/build/events-and-errors/)\n     explains how to emit events and errors from the runtime.\n*   [Randomness](/build/randomness/)\n     suggests ways you can include randomness in applications that run on a Substrate-based blockchain.\n*   [Privileged calls and origins](/build/origins/)\n     describes how you can use predefined or custom origins to identify the originator of a function call.\n*   [Remote procedure calls](/build/remote-procedure-calls/)\n     summarizes how you can use remote procedure calls and RPC methods to interact with a Substrate node.\n*   [Application development](/build/application-development/)\n     introduces the role of metadata and front-end libraries as tools for building applications that run on the blockchain.\n*   [Chain specification](/build/chain-spec/)\n     discusses the use of chain specifications, including what you can and can't modify, and how to distribute customized chain specifications.\n*   [Genesis configuration](/build/genesis-configuration/)\n     describes the main elements of the genesis configuration.\n*   [Build process](/build/build-process/)\n     delves into the details of how the Rust code compiles to a Rust binary and a WebAssembly target and how these two targets are used to optimize node operations.\n*   [Build a deterministic runtime](/build/build-a-deterministic-runtime/)\n    s xplains how to use the Substrate runtime toolbox (`srtool`) and Docker to build the WebAssembly runtime for Substrate-based chains.\n*   [Troubleshoot your code](/build/troubleshoot-your-code/)\n     highlights general and Substrate-specific coding techniques for troubleshooting issues and following best practices.\n\n**Last edit:** April 4, 2023\n\n[\u2190 Previous](/install/troubleshoot-rust-issues/)\n[Next \u2192](/build/smart-contracts-strategy/)\n\n[](/)\n\n*   Technology\n    *   [Overview](https://substrate.io/technology/)\n        \n    *   [Flexible](https://substrate.io/technology/flexible/)\n        \n    *   [Open](https://substrate.io/technology/open/)\n        \n    *   [Interoperable](https://substrate.io/technology/interoperable/)\n        \n    *   [Future-Proof](https://substrate.io/technology/future-proof/)\n        \n*   Developers\n    *   [Home](https://substrate.io/developers/)\n        \n    *   [Docs](/)\n        \n    *   [Rust Docs](https://paritytech.github.io/substrate/master/sc_service/)\n        \n    *   [Smart Contracts](https://substrate.io/developers/smart-contracts/)\n        \n    *   [Substrate Connect](https://substrate.io/developers/substrate-connect/)\n        \n    *   [Rococo Network](https://substrate.io/developers/rococo-network/)\n        \n*   Vision\n    *   [Substrate & Polkadot](https://substrate.io/vision/substrate-and-polkadot/)\n        \n*   Ecosystem\n    *   [Home](https://substrate.io/ecosystem/)\n        \n    *   [Projects](https://substrate.io/ecosystem/projects/)\n        \n    *   [Builders Program](https://substrate.io/ecosystem/substrate-builders-program/)\n        \n    *   [Hackathons](https://substrate.io/ecosystem/opportunities/hackathons/)\n        \n    *   [Grants](https://substrate.io/ecosystem/opportunities/grants/)\n        \n    *   [Substrate Seminar](https://substrate.io/ecosystem/resources/seminar/)\n        \n    *   [Past Seminars](https://substrate.io/ecosystem/resources/past-seminars/)\n        \n    *   [Awesome Substrate](https://github.com/substrate-developer-hub/awesome-substrate/blob/master/README.md)\n        \n    *   [Contact](https://substrate.io/ecosystem/connect/contact/)\n        \n    *   [Events](https://www.parity.io/events/)\n        \n    *   [Newsletter](https://substrate.io/ecosystem/connect/newsletter/)\n        \n    *   [Blog](https://www.parity.io/blog/tag/parity-substrate/)\n        \n    *   [Square One](https://substrate.io/ecosystem/square-one/)\n        \n\n[](https://substrate.stackexchange.com)\n[](https://github.com/paritytech/)\n[](https://twitter.com/substrate_io)\n\n\u00a9 2024 Parity Technologies All Rights Reserved\n\n*   [Privacy Policy](https://www.parity.io/privacy/)\n    \n*   [Terms of Services](https://www.parity.io/terms/)\n    \n\n![spacer](https://cloudcdn-img.com/static/sbs/spacer.gif)"}, {"title": null, "description": null, "source_url": "https://docs.substrate.io/community/", "markdown": "\n\nNavigation Menu\n---------------\n\nToggle navigation\n\n[](https://github.com/)\n\n[Sign in](/login?return_to=https%3A%2F%2Fgithub.com%2Fsubstrate-developer-hub%2Fawesome-substrate%2Fblob%2Fmaster%2FREADME.md)\n\n*   Product\n    \n    *   [Actions\\\n        \\\n        Automate any workflow](https://github.com/features/actions)\n        \n    *   [Packages\\\n        \\\n        Host and manage packages](https://github.com/features/packages)\n        \n    *   [Security\\\n        \\\n        Find and fix vulnerabilities](https://github.com/features/security)\n        \n    *   [Codespaces\\\n        \\\n        Instant dev environments](https://github.com/features/codespaces)\n        \n    *   [GitHub Copilot\\\n        \\\n        Write better code with AI](https://github.com/features/copilot)\n        \n    *   [Code review\\\n        \\\n        Manage code changes](https://github.com/features/code-review)\n        \n    *   [Issues\\\n        \\\n        Plan and track work](https://github.com/features/issues)\n        \n    *   [Discussions\\\n        \\\n        Collaborate outside of code](https://github.com/features/discussions)\n        \n    \n    Explore\n    \n    *   [All features](https://github.com/features)\n        \n    *   [Documentation](https://docs.github.com)\n        \n    *   [GitHub Skills](https://skills.github.com)\n        \n    *   [Blog](https://github.blog)\n        \n    \n*   Solutions\n    \n    For\n    \n    *   [Enterprise](https://github.com/enterprise)\n        \n    *   [Teams](https://github.com/team)\n        \n    *   [Startups](https://github.com/enterprise/startups)\n        \n    *   [Education](https://education.github.com)\n        \n    \n    By Solution\n    \n    *   [CI/CD & Automation](https://github.com/solutions/ci-cd)\n        \n    *   [DevOps](https://github.com/solutions/devops)\n        \n    *   [DevSecOps](https://github.com/solutions/devsecops)\n        \n    \n    Resources\n    \n    *   [Learning Pathways](https://resources.github.com/learn/pathways)\n        \n    *   [White papers, Ebooks, Webinars](https://resources.github.com)\n        \n    *   [Customer Stories](https://github.com/customer-stories)\n        \n    *   [Partners](https://partner.github.com)\n        \n    \n*   Open Source\n    \n    *   [GitHub Sponsors\\\n        \\\n        Fund open source developers](/sponsors)\n        \n    \n    *   [The ReadME Project\\\n        \\\n        GitHub community articles](https://github.com/readme)\n        \n    \n    Repositories\n    \n    *   [Topics](https://github.com/topics)\n        \n    *   [Trending](https://github.com/trending)\n        \n    *   [Collections](https://github.com/collections)\n        \n    \n*   Enterprise\n    \n    *   [Enterprise platform\\\n        \\\n        AI-powered developer platform](/enterprise)\n        \n    \n    Available add-ons\n    \n    *   [Advanced Security\\\n        \\\n        Enterprise-grade security features](https://github.com/enterprise/advanced-security)\n        \n    *   [GitHub Copilot\\\n        \\\n        Enterprise-grade AI features](/features/copilot#enterprise)\n        \n    *   [Premium Support\\\n        \\\n        Enterprise-grade 24/7 support](/premium-support)\n        \n    \n*   [Pricing](https://github.com/pricing)\n    \n\nSearch or jump to...\n\nSearch code, repositories, users, issues, pull requests...\n==========================================================\n\nSearch\n\nClear\n\n[Search syntax tips](https://docs.github.com/search-github/github-code-search/understanding-github-code-search-syntax)\n\nProvide feedback\n================\n\nWe read every piece of feedback, and take your input very seriously.\n\n Include my email address so I can be contacted\n\nCancel Submit feedback\n\nSaved searches\n==============\n\nUse saved searches to filter your results more quickly\n------------------------------------------------------\n\nName  \n\nQuery \n\nTo see all available qualifiers, see our [documentation](https://docs.github.com/search-github/github-code-search/understanding-github-code-search-syntax)\n.\n\nCancel Create saved search\n\n[Sign in](/login?return_to=https%3A%2F%2Fgithub.com%2Fsubstrate-developer-hub%2Fawesome-substrate%2Fblob%2Fmaster%2FREADME.md)\n\n[Sign up](/signup?ref_cta=Sign+up&ref_loc=header+logged+out&ref_page=%2F%3Cuser-name%3E%2F%3Crepo-name%3E%2Fblob%2Fshow&source=header-repo&source_repo=substrate-developer-hub%2Fawesome-substrate)\n\nYou signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session. You switched accounts on another tab or window. Reload to refresh your session. Dismiss alert\n\n[substrate-developer-hub](/substrate-developer-hub) / **[awesome-substrate](/substrate-developer-hub/awesome-substrate)** Public\n\n*   [Notifications](/login?return_to=%2Fsubstrate-developer-hub%2Fawesome-substrate)\n     You must be signed in to change notification settings\n*   [Fork 139](/login?return_to=%2Fsubstrate-developer-hub%2Fawesome-substrate)\n    \n*   [Star 733](/login?return_to=%2Fsubstrate-developer-hub%2Fawesome-substrate)\n    \n\n*   [Code](/substrate-developer-hub/awesome-substrate)\n    \n*   [Issues 8](/substrate-developer-hub/awesome-substrate/issues)\n    \n*   [Pull requests 4](/substrate-developer-hub/awesome-substrate/pulls)\n    \n*   [Actions](/substrate-developer-hub/awesome-substrate/actions)\n    \n*   [Security](/substrate-developer-hub/awesome-substrate/security)\n    \n*   [Insights](/substrate-developer-hub/awesome-substrate/pulse)\n    \n\nAdditional navigation options\n\n*   [Code](/substrate-developer-hub/awesome-substrate)\n    \n*   [Issues](/substrate-developer-hub/awesome-substrate/issues)\n    \n*   [Pull requests](/substrate-developer-hub/awesome-substrate/pulls)\n    \n*   [Actions](/substrate-developer-hub/awesome-substrate/actions)\n    \n*   [Security](/substrate-developer-hub/awesome-substrate/security)\n    \n*   [Insights](/substrate-developer-hub/awesome-substrate/pulse)\n    \n\nFiles\n-----\n\n\u00a0master\n\n*   .github\n    \n*   .editorconfig\n    \n*   LICENSE\n    \n*   README.md\n    \n*   contributing.md\n    \n\nBreadcrumbs\n-----------\n\n1.  [awesome-substrate](/substrate-developer-hub/awesome-substrate/tree/master)\n    \n\n/\n\nREADME.md\n=========\n\nBlame\n\nBlame\n\nLatest commit\n-------------\n\nHistory\n-------\n\n[History](/substrate-developer-hub/awesome-substrate/commits/master/README.md)\n\n[](/substrate-developer-hub/awesome-substrate/commits/master/README.md)\n\n244 lines (208 loc) \u00b7 23.5 KB\n\nBreadcrumbs\n-----------\n\n1.  [awesome-substrate](/substrate-developer-hub/awesome-substrate/tree/master)\n    \n\n/\n\nREADME.md\n=========\n\nTop\n\nFile metadata and controls\n--------------------------\n\n*   Preview\n    \n*   Code\n    \n*   Blame\n    \n\n244 lines (208 loc) \u00b7 23.5 KB\n\n[Raw](https://github.com/substrate-developer-hub/awesome-substrate/raw/master/README.md)\n\nAwesome Substrate [![Awesome](https://camo.githubusercontent.com/d8a7a4fac2f2d3bf4b2c51bcfd52e313ba9f174d739073645c5b7efbce171fd4/68747470733a2f2f617765736f6d652e72652f62616467652d666c61742e737667)](https://awesome.re)\n\n===========================================================================================================================================================================================================================\n\n[](#awesome-substrate-)\n\n> Please see [`awesome-dot`](https://github.com/haquefardeen/awesome-dot)\n>  for a similar list that is more general to the entire Polkadot ecosystem, not just Substrate.\n\n* * *\n\n> An awesome list is a list of awesome things curated by the Substrate community.\n\nSubstrate is a framework for building upgradable, modular and efficient blockchains. Substrate is an open-source library of [Rust](https://www.rust-lang.org/)\n code that is maintained by [Parity Technologies](https://www.parity.io/)\n. Source code available on [GitHub](https://github.com/paritytech/substrate)\n.\n\nContents\n--------\n\n[](#contents)\n\n*   [Resources](#resources)\n    \n*   [Support](#support)\n    \n*   [Social](#social)\n    \n*   [Events](#events)\n    \n*   [Blogs](#blogs)\n    \n*   [Videos](#videos)\n    \n*   [Templates](#templates)\n    \n*   [FRAME Pallets](#frame-pallets)\n    \n*   [Framework Extensions](#framework-extensions)\n    \n*   [Client Libraries](#client-libraries)\n    \n*   [Mobile](#mobile)\n    \n*   [Tools](#tools)\n    \n*   [Products and Services](#products-and-services)\n    \n*   [Alternative Implementations](#alternative-implementations)\n    \n*   [SCALE Codec](#scale-codec)\n    \n\nResources\n---------\n\n[](#resources)\n\n*   [DotJobs](https://dotjobs.net/)\n     - A job board for the Substrate and Polkadot ecosystem projects, maintained by [Stateless.Money](https://stateless.money/)\n    .\n*   [Developer Hub GitHub](https://github.com/substrate-developer-hub/)\n     - Substrate Developer Hub repositories.\n*   [Ecosystem Projects](https://substrate.io/ecosystem/projects/)\n     - Projects and teams building with Substrate.\n*   [Polkadot Stack](https://github.com/w3f/Grants-Program/blob/master/docs/polkadot_stack.md)\n     - An `awesome list` maintained by our friends at [Web3 Foundation](https://web3.foundation/)\n    .\n*   [Official Homepage](https://substrate.io/)\n     - Vision, ecosystem, opportunities, and much more.\n    *   [Docs](https://docs.substrate.io/)\n         - Developer documentation.\n    *   [Tutorials](https://docs.substrate.io/tutorials)\n         - Guided exercises to get you started.\n    *   [How-to guides](https://docs.substrate.io/how-to-guides)\n         - Workflows outlined to achieve a specific goal.\n    *   [Reference Docs](https://docs.substrate.io/rustdocs)\n         - Versioned API documentation.\n*   Technical Papers\n    *   [Polkadot Lightpaper](https://polkadot.network/Polkadot-lightpaper.pdf)\n        \n    *   [Polkadot: Vision for a heterogeneous multi-chain framework](https://github.com/polkadot-io/polkadotpaper/raw/master/PolkaDotPaper.pdf)\n        \n    *   [Overview of Polkadot and its Design Considerations](https://arxiv.org/abs/2005.13456.pdf)\n        *   [Chinese Translation](https://github.com/AmadeusGB/Overview-of-Polkadot)\n             (by community)\n\nSupport\n-------\n\n[](#support)\n\n*   [Builders Program](https://substrate.io/ecosystem/substrate-builders-program/)\n     - White-glove solutions and dedicated support team for visionary teams using Substrate.\n*   [Stack Exchange](https://substrate.stackexchange.com/)\n     - The best place for all technical questions.\n*   [Web3 Foundation Grants](https://web3.foundation/grants)\n     - Funding for ecosystem development.\n*   [Polkadot Treasury](https://wiki.polkadot.network/docs/learn-treasury#creating-a-treasury-proposal)\n     - The Treasury funds are allocated through the voting on spending proposal.\n\nSocial\n------\n\n[](#social)\n\n*   [Substrate Developers Chat (Telegram)](https://t.me/substratedevs)\n     - Chat with other Substrate developers, also bridged to [matrix](https://matrix.to/#/#substratedevs:matrix.org)\n    .\n*   [Twitter](https://twitter.com/substrate_io)\n     - Follow us to stay up-to-date.\n*   [Polkaverse](https://polkaverse.com)\n     - A decentralized news-feed style social platform for the Polkadot community to discuss, share knowledge, post ecosystem updates and interact with posts. Built on top of [Subsocial](https://subsocial.network)\n    .\n\nEvents\n------\n\n[](#events)\n\n*   [Sub0 Developer Conference](https://sub0.parity.io/)\n     - Semiannual, online and in-person for all things Substrate.\n*   [Substrate Seminar](https://substrate.io/ecosystem/resources/seminar/)\n     - Bi-weekly collaborative learning sessions.\n\nBlogs\n-----\n\n[](#blogs)\n\n*   [DotLeap](https://dotleap.com/)\n     - Polkadot and Substrate Community blog and newsletter.\n*   [Official](https://www.parity.io/blog/tag/parity-substrate)\n     - Published by Parity.\n\nVideos\n------\n\n[](#videos)\n\n*   [Parity YouTube](https://www.youtube.com/c/paritytech)\n    *   [Substrate Seminar (YouTube Archive)](https://www.youtube.com/playlist?list=PLp0_ueXY_enXRfoaW7sTudeQH10yDvFOS)\n        \n    *   [Sub0 Conference Nov. 2022](https://youtube.com/playlist?list=PLOyWqupZ-WGvywLqJDsMIYdCn8QEa2ShQ)\n        \n    *   [Sub0 Conference Oct. 2020](https://www.youtube.com/playlist?list=PLp0_ueXY_enUZk1RuEAU9ly5h0wy5FuLs)\n        \n    *   [Sub0 Conference Dec. 2019](https://www.youtube.com/playlist?list=PLp0_ueXY_enWZ4UZE7rM0hdT8Z_ZTjU5V)\n        \n    *   [Sub0 Conference Apr. 2019](https://www.youtube.com/playlist?list=PLp0_ueXY_enWqrfP_vR4PLhzQj76fLT8y)\n        \n*   [Polkadot Network Technical Explainers](https://www.youtube.com/playlist?list=PLOyWqupZ-WGuAuS00rK-pebTMAOxW41W8)\n    \n*   [Substrate Seminar Twitch](https://www.twitch.tv/polkadotdev)\n     - Biweekly stream hosted by Polkadot Developers Twitch.\n    *   [Old Seminar Crowdcast](https://www.crowdcast.io/e/substrate-seminar-2/)\n         - Seminar archive.\n    *   [Older Seminar Crowdcast](https://www.crowdcast.io/e/substrate-seminar/)\n         - Older still Seminar archive.\n*   [Substrate: A Rustic Vision for Polkadot by Gavin Wood at Web3 Summit 2018](https://www.youtube.com/watch?v=0IoUZdDi5Is)\n    \n\nTemplates\n---------\n\n[](#templates)\n\n*   [Base](https://github.com/substrate-developer-hub/substrate-node-template)\n     - Minimal FRAME-based node, derived from [upstream](https://github.com/paritytech/substrate/tree/master/bin/node-template)\n    .\n*   [Frontier](https://github.com/paritytech/frontier/tree/master/template)\n     - Fronter enabled EVM and Ethereum RPC compatible Substrate node, ready for hacking.\n*   [Front-End](https://github.com/substrate-developer-hub/substrate-front-end-template)\n     - Polkadot-JS API and [React](https://reactjs.org/)\n     app to build front-ends for Substrate-based chains.\n*   [Parachain](https://github.com/substrate-developer-hub/substrate-parachain-template)\n     - Cumulus enabled Substrate node, derived from [upstream](https://github.com/paritytech/cumulus/tree/master/parachain-template)\n    .\n*   [`substrate-stencil`](https://github.com/kaichaosun/substrate-stencil)\n     - A template for a Substrate node that includes staking and governance capabilities.\n*   [polkadot-js-api-ts-template](https://github.com/kianenigma/polkadot-js-api-ts-template)\n     - A template project to kickstart hacking on top of `@polkadot/api`.\n*   [INK!athon](https://inkathon.xyz/)\n     - Full-stack dApp boilerplate with ink! smart contracts and a React frontend using the `useInkathon` (listed below) hooks library maintained by [Scio Labs](https://scio.xyz)\n    .\n*   [Subsocial Starter Kit](https://docs.subsocial.network/docs/develop/developer-quickstart)\n     - A starter-kit for building web3 social apps for the Polkadot ecosystem, powered by the [Subsocial blockchain](https://subsocial.network)\n    .\n\nFRAME Pallets\n-------------\n\n[](#frame-pallets)\n\n*   [Chainlink Feed Pallet](https://github.com/smartcontractkit/chainlink-polkadot)\n     - Chainlink feed token interface.\n*   [Official in Substrate](https://github.com/paritytech/substrate/tree/master/frame)\n     - Large collection, Parity maintained.\n*   [Open Runtime Module Library (ORML)](https://github.com/open-web3-stack/open-runtime-module-library)\n     - Community maintained collection of Substrate runtime modules.\n*   [Sunshine Bounty](https://github.com/sunshine-protocol/sunshine-bounty/tree/master/pallets)\n     - Distributed autonomous organization (DAO) for administering a bounty program.\n*   [Sunshine Identity](https://github.com/sunshine-protocol/sunshine-keybase/tree/master/identity/pallet)\n     - Keybase-inspired identity management.\n*   [Sunshine Faucet](https://github.com/sunshine-protocol/sunshine-keybase/tree/master/faucet/pallet)\n     - Dispense resources for a development chain.\n*   [RMRK Pallets](https://github.com/rmrk-team/rmrk-substrate)\n     - Nested, conditional & Multi-resourced NFTs.\n\nFramework Extensions\n--------------------\n\n[](#framework-extensions)\n\n*   [Bridges](https://github.com/paritytech/parity-bridges-common)\n     - A collection of tools for cross-chain communication.\n*   [Cumulus](https://github.com/paritytech/cumulus)\n     - A set of tools for writing Substrate-based Polkadot parachains.\n*   [FRAME](https://docs.substrate.io/v3/runtime/frame/)\n     - A system for building Substrate runtimes.\n*   [Frontier](https://github.com/paritytech/frontier)\n     - End-to-end Ethereum emulation for Substrate chains.\n*   [ink!](https://github.com/paritytech/ink)\n     - Rust smart contract language for Substrate chains.\n*   [IntegriTEE](https://book.integritee.network/)\n     - Trusted off-chain execution framework that uses [Intel SGX](https://en.wikipedia.org/wiki/Software_Guard_Extensions)\n     trusted execution environments.\n*   [Polkadot-JS](https://polkadot.js.org/)\n     - Rich JavaScript API framework for front-end development.\n\nClient Libraries\n----------------\n\n[](#client-libraries)\n\n*   [.Net API](https://github.com/usetech-llc/polkadot_api_dotnet)\n     - Maintained by [Usetech](https://usetech.com/blockchain/)\n    .\n*   [.NET Substrate API](https://github.com/ajuna-network/Ajuna.NetApi)\n     - Used in [nuget](https://www.nuget.org/packages/Ajuna.NetApi/)\n    , and [Unity Example](https://github.com/ajuna-network/SubstrateNET/tree/master/SubstrateNET.UnityDemo)\n    ; Maintained by [Ajuna Network](https://ajuna.io/)\n    .\n*   [.NET Toolchain/SDK](https://github.com/ajuna-network/Ajuna.SDK)\n     - Toolchain for Substrate .NET. Pre-generated [SubstrateNET](https://github.com/ajuna-network/SubstrateNET)\n    ; Maintained by Ajuna Network.\n*   [`go-substrate-gen`](https://github.com/Aphoh/go-substrate-gen)\n     - Generate Go (de)serialization/client code from Substrate metadata.\n*   [`sube`](https://github.com/virto-network/sube)\n     - Lightweight Rust client library and CLI with support for type information.\n*   [`subxt`](https://github.com/paritytech/substrate-subxt)\n     - Official Rust client.\n*   [C++ API](https://github.com/usetech-llc/polkadot_api_cpp)\n     - Maintained by Usetech.\n*   [Go RPC Client](https://github.com/centrifuge/go-substrate-rpc-client/)\n     - Maintained by [Centrifuge](https://centrifuge.io/)\n    .\n*   [Kotlin Client](https://github.com/NodleCode/substrate-client-kotlin)\n     - Maintained by [Nodle.io](https://github.com/NodleCode)\n    .\n*   [Polkadot-JS API](https://github.com/polkadot-js/api/)\n     - Semi-official JavaScript library for Substrate-based chains.\n*   [Python Interface](https://github.com/polkascan/py-substrate-interface)\n     - Maintained by [Polkascan Foundation](https://polkascan.org/)\n    .\n*   [Rust API Client](https://github.com/scs/substrate-api-client)\n     - Rust client maintained by [Supercomputers Systems AG](https://www.scs.ch/)\n    .\n*   [Subscan Go Utilities](https://github.com/itering/subscan-essentials)\n     - SS58 and more, developed by Subscan.\n*   [Sub-Api](https://github.com/kodadot/packages/tree/main/sub-api)\n     - Friendly wrapper for Polkadot.js API maintained by KodaDot.\n*   [`useInkathon`](https://github.com/scio-labs/use-inkathon)\n     - Typesafe React Hooks library abstracting functionality by polkadot.js for working with Substrate-based networks and ink! smart contracts maintained by Scio Labs.\n*   [Subsocial JS SDK](https://github.com/dappforce/subsocial-js)\n     - A JS SDK for developers to build web3 social apps on top of Subsocial.\n\nMobile\n------\n\n[](#mobile)\n\n*   [Fearless Utils Android](https://github.com/soramitsu/fearless-utils-Android)\n     - Android Substrate tools.\n*   [Fearless Utils iOS](https://github.com/soramitsu/fearless-utils-iOS)\n     - iOS Substrate tools.\n*   [Nova Substrate SDK Android](https://github.com/nova-wallet/substrate-sdk-android)\n     - Substrate SDK and tools for Android.\n*   [Nova Substrate SDK iOS](https://github.com/nova-wallet/substrate-sdk-ios)\n     - Substrate SDK and tools for iOS.\n*   [Polkadot-Dart](https://github.com/Pocket4D/Polkadot-Dart)\n     - Dart Substrate API.\n*   [PolkaWallet SDK](https://github.com/polkawallet-io/sdk)\n     - Flutter SDK for Substrate-based App.\n*   [React-Native-Substrate-Sign](https://github.com/paritytech/react-native-substrate-sign)\n     - Rust library for React Native.\n\nTools\n-----\n\n[](#tools)\n\n*   [`offline-election`](https://github.com/paritytech/substrate-debug-kit/tree/master/offline-election)\n     - Tool to predict nominated proof-of-stake elections.\n*   [`offchain::ipfs`](https://rs-ipfs.github.io/offchain-ipfs-manual/)\n     - Substrate infused with [IPFS](https://ipfs.io/)\n    .\n*   [`polkadot-js-bundle`](https://github.com/shawntabrizi/polkadot-js-bundle)\n     - A standalone JS bundle that contains Polkadot{JS} libraries.\n*   [`polkadot-launch`](https://github.com/shawntabrizi/polkadot-launch)\n     - Simple CLI tool to launch a local Polkadot test network.\n*   [`polkadot-runtime-prom-exporter`](https://github.com/paritytech/polkadot-runtime-prom-exporter/)\n     - A [Prometheus](https://prometheus.io/)\n     exporter for Polkadot runtime metrics (modifiable for Substrate use).\n*   [`polkadot-scripts`](https://github.com/paritytech/polkadot-scripts)\n     - A collection of scripts Parity uses to diagnose Polkadot/Kusama.\n*   [`polkadot-starship`](https://github.com/koute/polkadot-starship)\n     - Another tool to launch a local Polkadot test network, with emphasis on the ability to run big testnets.\n*   [`srtool-actions`](https://github.com/chevdor/srtool-actions)\n     - GitHub actions to easily use the `srtool` Docker image to build your own runtime.\n*   [`srtool-cli`](https://github.com/chevdor/srtool-cli)\n     - CLI frontend for the `srtool` Docker image.\n*   [`srtool`](https://github.com/paritytech/srtool)\n     - Docker image to deterministically build a runtime.\n*   [`subsee`](https://github.com/ascjones/subsee)\n     - CLI to inspect metadata of a Substrate node as JSON.\n*   [`subalfred`](https://github.com/hack-ink/subalfred)\n     - An all-in-one Substrate development toolbox.\n*   [`substrate-balance-calculator`](https://github.com/shawntabrizi/substrate-balance-calculator)\n     - Breakdown the balances of your Substrate account.\n*   [`substrate-balance-graph`](https://github.com/shawntabrizi/substrate-balance-graph)\n     - Create a graph of the token balance over time of a Substrate address.\n*   [`substrate-graph-benchmarks`](https://github.com/shawntabrizi/substrate-graph-benchmarks)\n     - Graph the benchmark output of FRAME pallets.\n*   [`substrate-js-utils`](https://github.com/shawntabrizi/substrate-js-utilities)\n     - A set of useful JavaScript utilities for Substrate that uses the Polkadot{JS} API; Also [deployed as a website](https://www.shawntabrizi.com/substrate-js-utilities/)\n    .\n*   [`substrate-society`](https://github.com/shawntabrizi/substrate-society)\n     - A basic front-end for the FRAME Society pallet.\n*   [`substrate-toml-lint`](https://github.com/shawntabrizi/substrate-toml-lint)\n     - A toml parser and checker to avoid common errors in Substrate projects.\n*   [`subwasm`](https://github.com/chevdor/subwasm)\n     - CLI to inspect a runtime WASM blob offline. It shows information, metadata and can compare runtimes. It can also help you fetch a runtime directly from a node.\n*   [`sup`](https://github.com/clearloop/sup)\n     - Command line tool for generating or upgrading a Substrate node.\n*   [`scale-value`](https://github.com/paritytech/scale-value)\n     - Analogous to `serde_json` but for SCALE; Library to decode arbitrary SCALE encoded bytes into a dynamic `Value` given type info from `scale-info`.\n*   [`scale-decode`](https://github.com/paritytech/scale-decode)\n     - Decode SCALE bytes into arbitrary custom types by implementing a visitor trait.\n*   [Aleph.im](https://aleph.im)\n     - Scalable, decentralized database, file storage, and computation services for Substrate chains and more.\n*   [Archive](https://github.com/paritytech/substrate-archive)\n     - Indexing engine for Substrate chains.\n*   [Dev Hub Utils](https://github.com/danforbes/substrate-devhub-utils)\n     - _Unofficial_ utilities for working with official Substrate Developer Hub resources.\n*   [Europa](https://github.com/patractlabs/europa)\n     - A sandbox for the Substrate runtime execution environment.\n*   [Fork Off Substrate](https://github.com/maxsam4/fork-off-substrate)\n     - Script to help bootstrap a new chain with the state of a running chain.\n*   [fudge](https://github.com/centrifuge/fudge)\n     - Core lib for accessing and (arbitrarily) manipulating substrate databases, including the building and importing of local blocks.\n*   [Gantree Library](https://github.com/gantree-io/gantree-lib-nodejs)\n     - A suite of technologies for managing Substrate-powered parachain networks via rapid spin-up & tear-down.\n*   [Halva](https://github.com/halva-suite/halva)\n     - A toolchain for improving the experience of developing on Substrate.\n*   [Hydra](https://github.com/Joystream/hydra)\n     - A GraphQL framework for Substrate nodes.\n*   [Jupiter](https://github.com/patractlabs/jupiter)\n     - Testnet for smart contracts written for the FRAME Contracts pallet and ink!.\n*   [Megaclite](https://github.com/patractlabs/megaclite)\n     - Zero-knowledge tools for the Polkadot ecosystem.\n*   [Metadata Portal](https://nova-wallet.github.io/metadata-portal/)\n     - A self-hosted webpage that shows the latest metadata and chain specs for any given network.\n*   [Minimark](https://github.com/kodadot/packages)\n     - Implementation of RMRK NFT v1/v2 protocol maintained by KodaDot.\n*   [Nova Polkadot Utils](https://github.com/nova-wallet/nova-utils)\n     - Contains static info & metadata to support client apps in Polkadot ecosystem to map it to various netowrks.\n*   [Polkadot Vault](https://signer.parity.io/)\n     (formerly Parity Signer) - Upcycle an unused mobile phone into an air-gapped hardware wallet.\n*   [Polkadot PANIC](https://github.com/SimplyVC/panic_polkadot)\n     - Monitoring and alerting solution for Polkadot nodes by Simply VC, compatible with many Substrate chains.\n*   [Polkadot Tool Index](https://wiki.polkadot.network/docs/build-tools-index)\n     - List of tools available for your development with Polkadot and any Substrate chain including Block Explorers, Wallets, Network Monitoring & Reporting, Clients, Benchmarking, Fuzzing, Forking, SCALE Codec, CLI Tools and much more.\n*   [Polkadot-JS Apps UI](https://polkadot.js.org/apps/)\n     - Semi-official block explorer & front-end for Substrate-based chains.\n*   [Polkadot-JS Extension](https://github.com/polkadot-js/extension)\n     - Browser extension for interacting with Substrate-based chains.\n*   [Polkascan](https://polkascan.io/)\n     - Multi-chain block explorer maintained by Polkascan Foundation.\n*   [Proxy Hot Wallet Demo](https://github.com/emostov/proxy-hot-wallet)\n     - A demonstration of a secure, convenient, and flexible hot wallet architecture built on Substrate primitives.\n*   [Redspot](https://github.com/patractlabs/redspot)\n     - A [Truffle](https://www.trufflesuite.com/truffle)\n    \\-like toolkit for smart contracts for the FRAME Contracts pallet and ink!.\n*   [Sidecar](https://github.com/paritytech/substrate-api-sidecar)\n     - REST service that runs alongside Substrate nodes.\n*   [SS58 Transform](https://polkadot.subscan.io/tools/ss58_transform)\n     - Display key's addressees with all SS58 prefixes.\n*   [Staking Rewards Collector](https://github.com/w3f/staking-rewards-collector)\n     - A script to parse and output staking rewards for a given Kusama or Polkadot address and cross-reference them with daily price data.\n*   [Subkey](https://docs.substrate.io/reference/command-line-tools/subkey/)\n     - Command line utility for working with cryptographic keys.\n*   [SubQuery](https://subquery.network)\n     - A GraphQL indexer and query service that allows users to easily create indexed data sources and host them online for free.\n    *   [Nova SubQuery API](https://github.com/nova-wallet/subquery-nova)\n         - A SubQuery API implementation for operation history and staking analytics.\n*   [Subscan](https://www.subscan.io/)\n     - Multi-network explorer for Substrate-based chains.\n*   [Subsquid](https://subsquid.io)\n     - An indexing framework (SDK + infrastructure) to quickly and easily turn Substrate and EVM on-chain data into APIs and host them.\n*   [Substate](https://github.com/arrudagates/substate)\n     - 100% no-std/wasm compatible Substrate storage key generator library for Rust.\n*   [Substrate debug-kit](https://github.com/paritytech/substrate-debug-kit)\n     - A collection of tools and libraries for debugging Substrate-based chains.\n*   [Substrate Docker Builders](https://github.com/ETeissonniere/substrate-nodeops)\n     - A set of Dockerfiles and GitHub Actions to auto-build and push a Docker image for Substrate-based chains.\n*   [Substrate Faucet Bot](https://github.com/starkleytech/substrate-faucet)\n     - Python-based faucet for development purposes.\n*   [Substrate Graph](https://github.com/playzero/substrate-graph)\n     - GraphQL indexer for Substrate-based chains.\n*   [Typechain-Polkadot](https://github.com/Supercolony-net/typechain-polkadot)\n     - Hepls users to generate typescript types from contract ABIs (ink!) and generate runtime code to interact with contracts and deploy them.\n*   [TxWrapper](https://github.com/paritytech/txwrapper)\n     - Helpful library for offline transaction creation.\n*   [VSCode Substrate](https://marketplace.visualstudio.com/items?itemName=paritytech.vscode-substrate)\n     - Plugin for Visual Studio Code.\n*   [Polkaholic.io](https://polkaholic.io)\n     - Multi-chain block explorer with API and DeFi support across 40+ parachains.\n*   [SubID](https://github.com/dappforce/subid)\n     - An advanced cross-chain portfolio management tool for the Polkadot ecosystem, allowing any user to see their balances across chains; view their crowdloan history; view their NFTs across Polkadot ecosystem chains; claim their vested tokens and perform cross-chain transfers.\n*   [Subsocial SDK Playground](https://play.subsocial.network)\n     - Subsocial JS SDK Playground allows you to fetch spaces, send transactions on blockchain and test the SDK code snippets on the go without the need to download or setup anything locally.\n*   [Uptest Runtime upgrade tool](https://github.com/uptest-sc/uptest)\n     - Uptest command line client and libuptest Rust library are two tools used for debugging storage changes and runtime upgrades.\n\nProducts and Services\n---------------------\n\n[](#products-and-services)\n\n*   [OnFinality](https://onfinality.io)\n     - Free and paid services to shared Substrate based nodes.\n*   [PrivHost](https://privhost.laissez-faire.trade/)\n     - Public Tor .onion supported nodes for Polkadot, Kusama and Edgeware.\n*   [Substrate Devops Guide](https://paritytech.github.io/devops-guide/)\n     - Parity devops team's configuration and guidance on deploying, monitoring, and maintaining node infrastructure.\n\nAlternative Implementations\n---------------------------\n\n[](#alternative-implementations)\n\n*   [Gossamer](https://github.com/ChainSafe/gossamer)\n     - A Polkadot client implemented in Go; from [ChainSafe](https://chainsafe.io/)\n    .\n*   [Kagome](https://kagome.readthedocs.io/en/latest/)\n     - A C++17 implementation of the Polkadot client; from [Soramitsu](http://www.soramitsu.co.jp/)\n    .\n*   [LimeChain AssemblyScript Runtime](https://github.com/LimeChain/as-substrate-runtime)\n     - An account-based Substrate proof-of-concept runtime written in AssemblyScript; from [LimeChain](https://limechain.tech/)\n    .\n\nSCALE Codec\n-----------\n\n[](#scale-codec)\n\n*   [AssemblyScript](https://github.com/LimeChain/as-scale-codec)\n     - Maintained by LimeChain.\n*   [C](https://github.com/MatthewDarnell/cScale)\n     - Maintained by Matthew Darnell.\n*   [C++](https://github.com/soramitsu/scale-codec-cpp)\n     - Maintained by Soramitsu.\n*   [Codec Definition](https://docs.substrate.io/v3/advanced/scale-codec/)\n     - Official codec documentation.\n*   [Go](https://github.com/itering/scale.go)\n     - Maintained by [Itering](https://www.itering.com/)\n    .\n*   [Haskell](https://github.com/airalab/hs-web3/tree/master/src/Codec)\n     - Maintained by [Robonomics Network](https://robonomics.network/)\n    .\n*   [Java](https://github.com/emeraldpay/polkaj/tree/master/polkaj-scale)\n     - Maintained by [Emerald](https://emerald.cash/)\n    .\n*   [Parity SCALE Codec](https://github.com/paritytech/parity-scale-codec)\n     - Reference implementation written in Rust.\n*   [Python](https://github.com/polkascan/py-scale-codec)\n     - Maintained by Polkascan Foundation.\n*   [Ruby](https://github.com/itering/scale.rb)\n     - Maintained by Itering.\n*   [Scales](https://github.com/virto-network/scales)\n     - Serializing SCALE using type information from a type registry.\n*   JavaScript / TypeScript implementations:\n    *   [polkadot-js/api](https://github.com/polkadot-js/api/tree/master/packages/types)\n         - Maintained by Polkadot-JS.\n    *   [scale-ts](https://github.com/unstoppablejs/unstoppablejs/tree/main/packages/scale-ts#scale-ts)\n         - Maintained by Josep M Sobrepere.\n    *   [soramitsu/scale-codec-js-library](https://github.com/soramitsu/scale-codec-js-library)\n         - Maintained by Soramitsu.\n\nFooter\n------\n\n[](https://github.com \"GitHub\")\n\u00a9 2024 GitHub,\u00a0Inc.\n\n### Footer navigation\n\n*   [Terms](https://docs.github.com/site-policy/github-terms/github-terms-of-service)\n    \n*   [Privacy](https://docs.github.com/site-policy/privacy-policies/github-privacy-statement)\n    \n*   [Security](https://github.com/security)\n    \n*   [Status](https://www.githubstatus.com/)\n    \n*   [Docs](https://docs.github.com/)\n    \n*   [Contact](https://support.github.com?tags=dotcom-footer)\n    \n*   Manage cookies\n*   Do not share my personal information\n\nYou can\u2019t perform that action at this time."}, {"title": null, "description": null, "source_url": "https://docs.substrate.io/deploy/", "markdown": "[](https://substrate.io)\n\n*   Technology\n*   Developers\n*   Vision\n*   Ecosystem\n\n[Docs](https://docs.substrate.io/)\n\nSearch documentation\n\n*   [Quick start](/quick-start/)\n    \n\n*   [Learn](/learn/)\n    \n\n*   [Install](/install/)\n    \n\n*   [Build](/build/)\n    \n\n*   [Test](/test/)\n    \n\n*   [Deploy](/deploy/)\n    *   [Prepare to deploy](/deploy/prepare-to-deploy/)\n        \n    *   [Deployment options](/deploy/deployment-options/)\n        \n    *   [Keys and network operations](/deploy/keys-and-network-operations/)\n        \n\n*   [Maintain](/maintain/)\n    \n\n*   [Tutorials](/tutorials/)\n    \n\n*   [Reference](/reference/)\n    \n\n*   [Community](/community/)\n    \n\n\u00a0 Documentation\n\nSearch documentation\n\n*   [Quick start](/quick-start/)\n    \n\n*   [Learn](/learn/)\n    \n\n*   [Install](/install/)\n    \n\n*   [Build](/build/)\n    \n\n*   [Test](/test/)\n    \n\n*   [Deploy](/deploy/)\n    *   [Prepare to deploy](/deploy/prepare-to-deploy/)\n        \n    *   [Deployment options](/deploy/deployment-options/)\n        \n    *   [Keys and network operations](/deploy/keys-and-network-operations/)\n        \n\n*   [Maintain](/maintain/)\n    \n\n*   [Tutorials](/tutorials/)\n    \n\n*   [Reference](/reference/)\n    \n\n*   [Community](/community/)\n    \n\n[Home](/)\nDeploy\n\n[Edit this page](https://github.com/substrate-developer-hub/substrate-docs/blob/main/content/md/en/docs/deploy/index.md)\n | [Submit an issue](https://github.com/substrate-developer-hub/substrate-docs/issues/new/choose)\n\nDeploy\n======\n\nMoving a project from a test network into production requires a clear view of your infrastructure and network operations. The topics in this section are intended to provide some guidance on how to deploy a parachain and how to prepare for network maintenance after you deploy. Before diving into specific deployments options and operations, however, there are a few important considerations that should act as the foundation for your deployment process. At a high level, you should apply the following general principles throughout all phases of your network deployment:\n\n*   Infrastructure operations should be code-driven and kept under version control.\n*   Security should be a central concern in all of your infrastructure decisions.\n*   Securing on-chain operations is critical to a successful deployment.\n\n[](/deploy/#build-a-code-driven-infrastructure)\nBuild a code-driven infrastructure\n----------------------------------------------------------------------------------\n\nAs a general rule, you should take an infrastructure-as-code approach to your deployment planning and preparation. All of the infrastructure components used to deploy the network should be written in code and managed through a version control system.\n\nFollowing an infrastructure-as-code process helps to ensure that:\n\n*   Your infrastructure components are always in a known state.\n*   You can track changes, enforce reviews, and audit activity through version control.\n*   You can easily roll back to a known state, if needed.\n*   You can automate operations and won't need to perform manual tasks to redeploy.\n\n![](data:image/svg+xml;charset=utf-8,%3Csvg height='580' width='1600' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E)\n\n![Infrastructure as code](https://docs.substrate.io/static/a931d28390a2b466c8991c9c2814fd89/c6414/deploy-infra.png)\n\n[](/deploy/#build-security-into-the-infrastructure)\nBuild security into the infrastructure\n------------------------------------------------------------------------------------------\n\nSecurity is one of the most important properties of a blockchain, so making your infrastructure **secure by default** should be a top priority when you plan to deploy a new network.\n\nHaving strict access control rules and blocking any non-required communication is a good starting point, but you should also consider how you can enhance security through the following:\n\n*   Log monitoring\n*   Bastion hosts for access\n*   Two-factor authentication for secure shell (ssh) access\n\n[](/deploy/#build-security-into-chain-operations)\nBuild security into chain operations\n--------------------------------------------------------------------------------------\n\nIn addition to the infrastructure that your network relies on, it's important to keep on-chain operations as secure as possible. For example, by setting up your chain to use cold, warm, and hot keys, you can limit the damage that the compromise of a session key could do. The following diagram illustrates using keys for different operations to help prevent funds from being stolen.\n\n![](data:image/svg+xml;charset=utf-8,%3Csvg height='337.7049180327869' width='1600' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E)\n\n![Keeping session keys separate from account keys](https://docs.substrate.io/static/b3011ae9567fbe77a9b81916360a84f6/056bd/deploy-cold-warm-hot-keys.png)\n\nYou can also use multi-signature accounts on offline devices to improve security and to provide an on-chain audit trail of all actions. The record of on-chain activity could then be used to send alert notification for specific on-chain actions.\n\nProxy accounts also let you limit the permission that an account or multi-signature account has on a particular target account. For example, you might use a proxy account to specify that a multi-signature staking controller account can only execute staking transactions and the transaction can only be executed if three of the five people that make up the multi-signature account approve.\n\n**Last edit:** May 7, 2023\n\n[\u2190 Previous](/test/check-runtime/)\n[Next \u2192](/deploy/prepare-to-deploy/)\n\nON THIS PAGE\n\n[Build a code-driven infrastructure](#build-a-code-driven-infrastructure)\n[Build security into the infrastructure](#build-security-into-the-infrastructure)\n[Build security into chain operations](#build-security-into-chain-operations)\n\n[](/)\n\n*   Technology\n    *   [Overview](https://substrate.io/technology/)\n        \n    *   [Flexible](https://substrate.io/technology/flexible/)\n        \n    *   [Open](https://substrate.io/technology/open/)\n        \n    *   [Interoperable](https://substrate.io/technology/interoperable/)\n        \n    *   [Future-Proof](https://substrate.io/technology/future-proof/)\n        \n*   Developers\n    *   [Home](https://substrate.io/developers/)\n        \n    *   [Docs](/)\n        \n    *   [Rust Docs](https://paritytech.github.io/substrate/master/sc_service/)\n        \n    *   [Smart Contracts](https://substrate.io/developers/smart-contracts/)\n        \n    *   [Substrate Connect](https://substrate.io/developers/substrate-connect/)\n        \n    *   [Rococo Network](https://substrate.io/developers/rococo-network/)\n        \n*   Vision\n    *   [Substrate & Polkadot](https://substrate.io/vision/substrate-and-polkadot/)\n        \n*   Ecosystem\n    *   [Home](https://substrate.io/ecosystem/)\n        \n    *   [Projects](https://substrate.io/ecosystem/projects/)\n        \n    *   [Builders Program](https://substrate.io/ecosystem/substrate-builders-program/)\n        \n    *   [Hackathons](https://substrate.io/ecosystem/opportunities/hackathons/)\n        \n    *   [Grants](https://substrate.io/ecosystem/opportunities/grants/)\n        \n    *   [Substrate Seminar](https://substrate.io/ecosystem/resources/seminar/)\n        \n    *   [Past Seminars](https://substrate.io/ecosystem/resources/past-seminars/)\n        \n    *   [Awesome Substrate](https://github.com/substrate-developer-hub/awesome-substrate/blob/master/README.md)\n        \n    *   [Contact](https://substrate.io/ecosystem/connect/contact/)\n        \n    *   [Events](https://www.parity.io/events/)\n        \n    *   [Newsletter](https://substrate.io/ecosystem/connect/newsletter/)\n        \n    *   [Blog](https://www.parity.io/blog/tag/parity-substrate/)\n        \n    *   [Square One](https://substrate.io/ecosystem/square-one/)\n        \n\n[](https://substrate.stackexchange.com)\n[](https://github.com/paritytech/)\n[](https://twitter.com/substrate_io)\n\n\u00a9 2024 Parity Technologies All Rights Reserved\n\n*   [Privacy Policy](https://www.parity.io/privacy/)\n    \n*   [Terms of Services](https://www.parity.io/terms/)\n    \n\n![spacer](https://cloudcdn-img.com/static/sbs/spacer.gif)"}, {"title": null, "description": null, "source_url": "https://docs.substrate.io/design/", "markdown": "[](https://substrate.io)\n\n*   Technology\n*   Developers\n*   Vision\n*   Ecosystem\n\n[Docs](https://docs.substrate.io/)\n\nSearch documentation\n\n*   [Quick start](/quick-start/)\n    \n\n*   [Learn](/learn/)\n    \n\n*   [Install](/install/)\n    \n\n*   [Build](/build/)\n    \n\n*   [Test](/test/)\n    \n\n*   [Deploy](/deploy/)\n    \n\n*   [Maintain](/maintain/)\n    \n\n*   [Tutorials](/tutorials/)\n    \n\n*   [Reference](/reference/)\n    \n\n*   [Community](/community/)\n    \n\n\u00a0 Documentation\n\nSearch documentation\n\n*   [Quick start](/quick-start/)\n    \n\n*   [Learn](/learn/)\n    \n\n*   [Install](/install/)\n    \n\n*   [Build](/build/)\n    \n\n*   [Test](/test/)\n    \n\n*   [Deploy](/deploy/)\n    \n\n*   [Maintain](/maintain/)\n    \n\n*   [Tutorials](/tutorials/)\n    \n\n*   [Reference](/reference/)\n    \n\n*   [Community](/community/)\n    \n\n[Home](/)\nDesign\n\n[Edit this page](https://github.com/substrate-developer-hub/substrate-docs/blob/main/content/md/en/docs/design/index.md)\n | [Submit an issue](https://github.com/substrate-developer-hub/substrate-docs/issues/new/choose)\n\nDesign\n======\n\nIn [Runtime development](/learn/runtime-development/)\n, you learned that Substrate provides a modular and flexible approach to blockchain development that enables you to focus on defining the **application** or **business logic** you want to implement. With Substrate, you can reuse common components and compose an upgradeable runtime with prebuilt or customized modules. So, with all of this flexibility, one of the most daunting questions might be what to buiild.\n\n[](/design/#what-you-can-build-with-these-tools)\nWhat you can build with these tools?\n-------------------------------------------------------------------------------------\n\nVirtually anything is possible, but it\u2019s important to keep in mind that a blockchain is a resource-constrained environment. Depending on your project, there might be many design decisions you have to make along the way. If you\u2019re starting small, your first decision might be whether to design a **smart contract** or a **pallet**. If you have a grander vision, you might need to consider whether what you want to you build is best delivered as an independent **solo chain** or would benefit from the shared security and liveness guarantees of a **parachain**.\n\n[](/design/#what-are-your-goals)\nWhat are your goals?\n-----------------------------------------------------\n\nBefore diving into whether you should build a smart contract, an application-specific pallet, a fully customized runtime, or a custom node infrastructure, you should consider the goals of your project and how it benefits users as a blockchain project.\n\n*   Is your primary concern decentralization of a product or service?\n*   Is provable data integrity central to your project?\n*   Is the immutability of records of primary importance?\n*   Is community participation crucial to the success of your project?\n\n[](/design/#what-issues-do-you-need-to-consider)\nWhat issues do you need to consider?\n-------------------------------------------------------------------------------------\n\nAs part of the design process, there are important issues and trade-offs to consider. For example:\n\n*   Processing transactions requires resources\u2014computing power, memory, storage, network bandwidth\u2014so you should consider how to ensure your project is economically viable.\n*   Protecting a network from accidental or intentional disruptions can be challenging, so you should consider what incentives and safeguards you'll need.\n*   Storing, reading, and writing to storage is expensive, so you should give careful consideration to what data needs to be stored onchain and persisted or if there are ways to structure your application to use temporary or offchain storage to perform some operations and minimizing your storage requirements.\n\nThe topics in this section are intended to highlight and help you navigate design decisions and architectural options you should consider as part of the planning process.\n\n**Last edit:** May 7, 2023\n\n[Next \u2192](/quick-start/)\n\nON THIS PAGE\n\n[What you can build with these tools?](#what-you-can-build-with-these-tools)\n[What are your goals?](#what-are-your-goals)\n[What issues do you need to consider?](#what-issues-do-you-need-to-consider)\n\n[](/)\n\n*   Technology\n    *   [Overview](https://substrate.io/technology/)\n        \n    *   [Flexible](https://substrate.io/technology/flexible/)\n        \n    *   [Open](https://substrate.io/technology/open/)\n        \n    *   [Interoperable](https://substrate.io/technology/interoperable/)\n        \n    *   [Future-Proof](https://substrate.io/technology/future-proof/)\n        \n*   Developers\n    *   [Home](https://substrate.io/developers/)\n        \n    *   [Docs](/)\n        \n    *   [Rust Docs](https://paritytech.github.io/substrate/master/sc_service/)\n        \n    *   [Smart Contracts](https://substrate.io/developers/smart-contracts/)\n        \n    *   [Substrate Connect](https://substrate.io/developers/substrate-connect/)\n        \n    *   [Rococo Network](https://substrate.io/developers/rococo-network/)\n        \n*   Vision\n    *   [Substrate & Polkadot](https://substrate.io/vision/substrate-and-polkadot/)\n        \n*   Ecosystem\n    *   [Home](https://substrate.io/ecosystem/)\n        \n    *   [Projects](https://substrate.io/ecosystem/projects/)\n        \n    *   [Builders Program](https://substrate.io/ecosystem/substrate-builders-program/)\n        \n    *   [Hackathons](https://substrate.io/ecosystem/opportunities/hackathons/)\n        \n    *   [Grants](https://substrate.io/ecosystem/opportunities/grants/)\n        \n    *   [Substrate Seminar](https://substrate.io/ecosystem/resources/seminar/)\n        \n    *   [Past Seminars](https://substrate.io/ecosystem/resources/past-seminars/)\n        \n    *   [Awesome Substrate](https://github.com/substrate-developer-hub/awesome-substrate/blob/master/README.md)\n        \n    *   [Contact](https://substrate.io/ecosystem/connect/contact/)\n        \n    *   [Events](https://www.parity.io/events/)\n        \n    *   [Newsletter](https://substrate.io/ecosystem/connect/newsletter/)\n        \n    *   [Blog](https://www.parity.io/blog/tag/parity-substrate/)\n        \n    *   [Square One](https://substrate.io/ecosystem/square-one/)\n        \n\n[](https://substrate.stackexchange.com)\n[](https://github.com/paritytech/)\n[](https://twitter.com/substrate_io)\n\n\u00a9 2024 Parity Technologies All Rights Reserved\n\n*   [Privacy Policy](https://www.parity.io/privacy/)\n    \n*   [Terms of Services](https://www.parity.io/terms/)\n    \n\n![spacer](https://cloudcdn-img.com/static/sbs/spacer.gif)"}, {"title": null, "description": null, "source_url": "https://docs.substrate.io/install/", "markdown": "[](https://substrate.io)\n\n*   Technology\n*   Developers\n*   Vision\n*   Ecosystem\n\n[Docs](https://docs.substrate.io/)\n\nSearch documentation\n\n*   [Quick start](/quick-start/)\n    \n\n*   [Learn](/learn/)\n    \n\n*   [Install](/install/)\n    *   [Rust toolchain](/install/rust-toolchain/)\n        \n    *   [Linux](/install/linux/)\n        \n    *   [macOS](/install/macos/)\n        \n    *   [Windows](/install/windows/)\n        \n    *   [Developer tools](/install/developer-tools/)\n        \n    *   [Troubleshoot Rust issues](/install/troubleshoot-rust-issues/)\n        \n\n*   [Build](/build/)\n    \n\n*   [Test](/test/)\n    \n\n*   [Deploy](/deploy/)\n    \n\n*   [Maintain](/maintain/)\n    \n\n*   [Tutorials](/tutorials/)\n    \n\n*   [Reference](/reference/)\n    \n\n*   [Community](/community/)\n    \n\n\u00a0 Documentation\n\nSearch documentation\n\n*   [Quick start](/quick-start/)\n    \n\n*   [Learn](/learn/)\n    \n\n*   [Install](/install/)\n    *   [Rust toolchain](/install/rust-toolchain/)\n        \n    *   [Linux](/install/linux/)\n        \n    *   [macOS](/install/macos/)\n        \n    *   [Windows](/install/windows/)\n        \n    *   [Developer tools](/install/developer-tools/)\n        \n    *   [Troubleshoot Rust issues](/install/troubleshoot-rust-issues/)\n        \n\n*   [Build](/build/)\n    \n\n*   [Test](/test/)\n    \n\n*   [Deploy](/deploy/)\n    \n\n*   [Maintain](/maintain/)\n    \n\n*   [Tutorials](/tutorials/)\n    \n\n*   [Reference](/reference/)\n    \n\n*   [Community](/community/)\n    \n\n[Home](/)\nInstall\n\n[Edit this page](https://github.com/substrate-developer-hub/substrate-docs/blob/main/content/md/en/docs/install/index.md)\n | [Submit an issue](https://github.com/substrate-developer-hub/substrate-docs/issues/new/choose)\n\nInstall\n=======\n\nBefore you can start developing a Substrate-based blockchain, you need to prepare your development environment with the required compiler and tools. Because Substrate\u2014and most of the developer tools for working with Substrate\u2014are written in the [Rust](https://www.rust-lang.org/)\n programming language, the first step in preparing your computer is to install Rust. The steps for installing Rust depend on the operating system of the computer you are using for Substrate development. For installation instructions, see the appropriate topic for your operating system.\n\n*   [Linux](/install/linux/)\n    \n*   [macOS](/install/macos/)\n    \n*   [Windows](/install/windows/)\n    \n\nIf you already have Rust installed, you can skip the installation instructions. For additional information about installing and upgrading the Rust compiler and toolchain or troubleshooting installation issues, see the following topics:\n\n*   [Rust toolchain](/install/rust-toolchain/)\n    \n*   [Developer tools](/install/developer-tools/)\n    \n*   [Troubleshoot Rust issues](/install/troubleshoot-rust-issues/)\n    \n\n**Last edit:** August 17, 2022\n\n[\u2190 Previous](/learn/xcm-communication/)\n[Next \u2192](/install/rust-toolchain/)\n\n[](/)\n\n*   Technology\n    *   [Overview](https://substrate.io/technology/)\n        \n    *   [Flexible](https://substrate.io/technology/flexible/)\n        \n    *   [Open](https://substrate.io/technology/open/)\n        \n    *   [Interoperable](https://substrate.io/technology/interoperable/)\n        \n    *   [Future-Proof](https://substrate.io/technology/future-proof/)\n        \n*   Developers\n    *   [Home](https://substrate.io/developers/)\n        \n    *   [Docs](/)\n        \n    *   [Rust Docs](https://paritytech.github.io/substrate/master/sc_service/)\n        \n    *   [Smart Contracts](https://substrate.io/developers/smart-contracts/)\n        \n    *   [Substrate Connect](https://substrate.io/developers/substrate-connect/)\n        \n    *   [Rococo Network](https://substrate.io/developers/rococo-network/)\n        \n*   Vision\n    *   [Substrate & Polkadot](https://substrate.io/vision/substrate-and-polkadot/)\n        \n*   Ecosystem\n    *   [Home](https://substrate.io/ecosystem/)\n        \n    *   [Projects](https://substrate.io/ecosystem/projects/)\n        \n    *   [Builders Program](https://substrate.io/ecosystem/substrate-builders-program/)\n        \n    *   [Hackathons](https://substrate.io/ecosystem/opportunities/hackathons/)\n        \n    *   [Grants](https://substrate.io/ecosystem/opportunities/grants/)\n        \n    *   [Substrate Seminar](https://substrate.io/ecosystem/resources/seminar/)\n        \n    *   [Past Seminars](https://substrate.io/ecosystem/resources/past-seminars/)\n        \n    *   [Awesome Substrate](https://github.com/substrate-developer-hub/awesome-substrate/blob/master/README.md)\n        \n    *   [Contact](https://substrate.io/ecosystem/connect/contact/)\n        \n    *   [Events](https://www.parity.io/events/)\n        \n    *   [Newsletter](https://substrate.io/ecosystem/connect/newsletter/)\n        \n    *   [Blog](https://www.parity.io/blog/tag/parity-substrate/)\n        \n    *   [Square One](https://substrate.io/ecosystem/square-one/)\n        \n\n[](https://substrate.stackexchange.com)\n[](https://github.com/paritytech/)\n[](https://twitter.com/substrate_io)\n\n\u00a9 2024 Parity Technologies All Rights Reserved\n\n*   [Privacy Policy](https://www.parity.io/privacy/)\n    \n*   [Terms of Services](https://www.parity.io/terms/)\n    \n\n![spacer](https://cloudcdn-img.com/static/sbs/spacer.gif)"}, {"title": null, "description": null, "source_url": "https://docs.substrate.io/learn/", "markdown": "[](https://substrate.io)\n\n*   Technology\n*   Developers\n*   Vision\n*   Ecosystem\n\n[Docs](https://docs.substrate.io/)\n\nSearch documentation\n\n*   [Quick start](/quick-start/)\n    \n\n*   [Learn](/learn/)\n    *   [Welcome to Substrate](/learn/welcome-to-substrate/)\n        \n    *   [Blockchain basics](/learn/blockchain-basics/)\n        \n    *   [Architecture and Rust libraries](/learn/architecture/)\n        \n    *   [Networks and nodes](/learn/networks-and-nodes/)\n        \n    *   [What can you build](/learn/what-can-you-build/)\n        \n    *   [Runtime development](/learn/runtime-development/)\n        \n    *   [Transactions and block basics](/learn/transaction-types/)\n        \n    *   [Transaction lifecycle](/learn/transaction-lifecycle/)\n        \n    *   [State transitions and storage](/learn/state-transitions-and-storage/)\n        \n    *   [Accounts, addresses, and keys](/learn/accounts-addresses-keys/)\n        \n    *   [Rust for Substrate](/learn/rust-basics/)\n        \n    *   [Offchain operations](/learn/offchain-operations/)\n        \n    *   [Light clients in Substrate Connect](/learn/light-clients-in-substrate-connect/)\n        \n    *   [Cryptography](/learn/cryptography/)\n        \n    *   [Consensus](/learn/consensus/)\n        \n    *   [Cross-consensus messaging](/learn/xcm-communication/)\n        \n\n*   [Install](/install/)\n    \n\n*   [Build](/build/)\n    \n\n*   [Test](/test/)\n    \n\n*   [Deploy](/deploy/)\n    \n\n*   [Maintain](/maintain/)\n    \n\n*   [Tutorials](/tutorials/)\n    \n\n*   [Reference](/reference/)\n    \n\n*   [Community](/community/)\n    \n\n\u00a0 Documentation\n\nSearch documentation\n\n*   [Quick start](/quick-start/)\n    \n\n*   [Learn](/learn/)\n    *   [Welcome to Substrate](/learn/welcome-to-substrate/)\n        \n    *   [Blockchain basics](/learn/blockchain-basics/)\n        \n    *   [Architecture and Rust libraries](/learn/architecture/)\n        \n    *   [Networks and nodes](/learn/networks-and-nodes/)\n        \n    *   [What can you build](/learn/what-can-you-build/)\n        \n    *   [Runtime development](/learn/runtime-development/)\n        \n    *   [Transactions and block basics](/learn/transaction-types/)\n        \n    *   [Transaction lifecycle](/learn/transaction-lifecycle/)\n        \n    *   [State transitions and storage](/learn/state-transitions-and-storage/)\n        \n    *   [Accounts, addresses, and keys](/learn/accounts-addresses-keys/)\n        \n    *   [Rust for Substrate](/learn/rust-basics/)\n        \n    *   [Offchain operations](/learn/offchain-operations/)\n        \n    *   [Light clients in Substrate Connect](/learn/light-clients-in-substrate-connect/)\n        \n    *   [Cryptography](/learn/cryptography/)\n        \n    *   [Consensus](/learn/consensus/)\n        \n    *   [Cross-consensus messaging](/learn/xcm-communication/)\n        \n\n*   [Install](/install/)\n    \n\n*   [Build](/build/)\n    \n\n*   [Test](/test/)\n    \n\n*   [Deploy](/deploy/)\n    \n\n*   [Maintain](/maintain/)\n    \n\n*   [Tutorials](/tutorials/)\n    \n\n*   [Reference](/reference/)\n    \n\n*   [Community](/community/)\n    \n\n[Home](/)\nLearn\n\n[Edit this page](https://github.com/substrate-developer-hub/substrate-docs/blob/main/content/md/en/docs/learn/index.md)\n | [Submit an issue](https://github.com/substrate-developer-hub/substrate-docs/issues/new/choose)\n\nLearn\n=====\n\nSubstrate is a Software Development Kit (SDK) that uses Rust-based libraries and tools to enable you to build application-specific blockchains from modular and extensible components. The topics in this section explain many of the core principles and unique features of the Substrate development environment.\n\nThese topics are intended to help you learn what's possible when you build a Substrate-based blockchain and how Substrate can help you build a blockchain that best serves your specific project requirements or business model.\n\n*   [Welcome to Substrate](/learn/welcome-to-substrate/)\n     highlights the key benefits of developing with Substrate that most blockchain and smart contract platforms can't provide.\n*   [Blockchain basics](/learn/blockchain-basics/)\n     provides context about the complexity associated with blockchain development and introduces common blockchain concepts, components, and terminology.\n*   [Architecture and Rust libraries](/learn/architecture/)\n     describes the Substrate architecture and the relationship between the architecture and the core Rust libraries.\n*   [Networks and nodes](/learn/networks-and-nodes/)\n     defines the different types of network topologies that can be built with Substrate and the different roles that nodes can fill.\n*   [What can you build](/learn/what-can-you-build/)\n     introduces the advantages and limitations of different development options and why you might select one approach over another.\n*   [Runtime development](/learn/runtime-development/)\n     highlights the importance of the Substrate runtime and introduces the core application interfaces and primitives required for Substrate runtime development.\n*   [Transactions and block basics](/learn/transaction-types/)\n     introduces transaction types and the components that make up a block.\n*   [Transaction lifecycle](/learn/transaction-lifecycle/)\n     explains how transactions are received, queued, and executed to be included in a block.\n*   [State transitions and storage](/learn/state-transitions-and-storage/)\n     describes how the state changes processed in the runtime are stored and managed using trie data structures and a key-value database.\n*   [Accounts, addresses, and keys](/learn/accounts-addresses-keys/)\n     explains the relationship between accounts, addresses, and keys and how they are used.\n*   [Rust for Substrate](/learn/rust-basics/)\n     highlights the specific Rust features\u2014including traits, generics, associated types, and macros\u2014that you should be most familiar with to build a Substrate-based blockchain.\n*   [Offchain operations](/learn/offchain-operations/)\n     explores reasons for handling some operations offchain and alternatives for performing those offchain operations.\n*   [Light clients in Substrate Connect](/learn/light-clients-in-substrate-connect/)\n     describes how to use Substrate Connect to integrate a light client into your applications and enable interaction with any Substrate-based chain.\n*   [Cryptography](/learn/cryptography/)\n     provides an overview of the hashing algorithms and signature schemes used for cryptography in Substrate.\n*   [Consensus](/learn/consensus/)\n     describes the most common consensus models and the types of consensus you can implement for a Substrate blockchain.\n*   [Cross-consensus messaging](/learn/xcm-communication/)\n     provides an overview of cross-consensus communication and the cross-consensus messaging (XCM) format.\n\nAfter you digest the information in these introductory sections, you'll be ready to start designing, building, and testing your own custom blockchain solution.\n\n**Last edit:** April 3, 2023\n\n[\u2190 Previous](/quick-start/modify-the-runtime/)\n[Next \u2192](/learn/welcome-to-substrate/)\n\n[](/)\n\n*   Technology\n    *   [Overview](https://substrate.io/technology/)\n        \n    *   [Flexible](https://substrate.io/technology/flexible/)\n        \n    *   [Open](https://substrate.io/technology/open/)\n        \n    *   [Interoperable](https://substrate.io/technology/interoperable/)\n        \n    *   [Future-Proof](https://substrate.io/technology/future-proof/)\n        \n*   Developers\n    *   [Home](https://substrate.io/developers/)\n        \n    *   [Docs](/)\n        \n    *   [Rust Docs](https://paritytech.github.io/substrate/master/sc_service/)\n        \n    *   [Smart Contracts](https://substrate.io/developers/smart-contracts/)\n        \n    *   [Substrate Connect](https://substrate.io/developers/substrate-connect/)\n        \n    *   [Rococo Network](https://substrate.io/developers/rococo-network/)\n        \n*   Vision\n    *   [Substrate & Polkadot](https://substrate.io/vision/substrate-and-polkadot/)\n        \n*   Ecosystem\n    *   [Home](https://substrate.io/ecosystem/)\n        \n    *   [Projects](https://substrate.io/ecosystem/projects/)\n        \n    *   [Builders Program](https://substrate.io/ecosystem/substrate-builders-program/)\n        \n    *   [Hackathons](https://substrate.io/ecosystem/opportunities/hackathons/)\n        \n    *   [Grants](https://substrate.io/ecosystem/opportunities/grants/)\n        \n    *   [Substrate Seminar](https://substrate.io/ecosystem/resources/seminar/)\n        \n    *   [Past Seminars](https://substrate.io/ecosystem/resources/past-seminars/)\n        \n    *   [Awesome Substrate](https://github.com/substrate-developer-hub/awesome-substrate/blob/master/README.md)\n        \n    *   [Contact](https://substrate.io/ecosystem/connect/contact/)\n        \n    *   [Events](https://www.parity.io/events/)\n        \n    *   [Newsletter](https://substrate.io/ecosystem/connect/newsletter/)\n        \n    *   [Blog](https://www.parity.io/blog/tag/parity-substrate/)\n        \n    *   [Square One](https://substrate.io/ecosystem/square-one/)\n        \n\n[](https://substrate.stackexchange.com)\n[](https://github.com/paritytech/)\n[](https://twitter.com/substrate_io)\n\n\u00a9 2024 Parity Technologies All Rights Reserved\n\n*   [Privacy Policy](https://www.parity.io/privacy/)\n    \n*   [Terms of Services](https://www.parity.io/terms/)\n    \n\n![spacer](https://cloudcdn-img.com/static/sbs/spacer.gif)"}, {"title": null, "description": null, "source_url": "https://docs.substrate.io/maintain/", "markdown": "[](https://substrate.io)\n\n*   Technology\n*   Developers\n*   Vision\n*   Ecosystem\n\n[Docs](https://docs.substrate.io/)\n\nSearch documentation\n\n*   [Quick start](/quick-start/)\n    \n\n*   [Learn](/learn/)\n    \n\n*   [Install](/install/)\n    \n\n*   [Build](/build/)\n    \n\n*   [Test](/test/)\n    \n\n*   [Deploy](/deploy/)\n    \n\n*   [Maintain](/maintain/)\n    *   [Monitor](/maintain/monitor/)\n        \n    *   [Runtime upgrades](/maintain/runtime-upgrades/)\n        \n\n*   [Tutorials](/tutorials/)\n    \n\n*   [Reference](/reference/)\n    \n\n*   [Community](/community/)\n    \n\n\u00a0 Documentation\n\nSearch documentation\n\n*   [Quick start](/quick-start/)\n    \n\n*   [Learn](/learn/)\n    \n\n*   [Install](/install/)\n    \n\n*   [Build](/build/)\n    \n\n*   [Test](/test/)\n    \n\n*   [Deploy](/deploy/)\n    \n\n*   [Maintain](/maintain/)\n    *   [Monitor](/maintain/monitor/)\n        \n    *   [Runtime upgrades](/maintain/runtime-upgrades/)\n        \n\n*   [Tutorials](/tutorials/)\n    \n\n*   [Reference](/reference/)\n    \n\n*   [Community](/community/)\n    \n\n[Home](/)\nMaintain\n\n[Edit this page](https://github.com/substrate-developer-hub/substrate-docs/blob/main/content/md/en/docs/maintain/index.md)\n | [Submit an issue](https://github.com/substrate-developer-hub/substrate-docs/issues/new/choose)\n\nMaintain\n========\n\nIn many ways, deploying your project as a parachain, parathread, paraobject, or private solo chain is the beginning of your journey. To keep your application viable and evolving, it's important to build your community and manage your network, including staying up-to-date with hardware and software upgrades, managing new releases, and maintaining your infrastructure. The topics in this section are intended to highlight\u2014in a generalized form\u2014some of the most important maintenance tasks. However, every project is different and most projects will require their own specialized set of instructions, processes, and policies.\n\n*   [Monitor](/maintain/monitor/)\n     describes the default telemetry available for Substrate nodes and the Polkadot ecosystem, including how to view and filter the information available.\n*   [Runtime upgrades](/maintain/runtime-upgrades/)\n     explains how runtime versioning and storage migration support runtime upgrades, enabling your blockchain to evolve over time.\n\nThe following topics are planned but not available at this time:\n\n*   [Operate](/maintain/operate/)\n    \n*   [Client upgrades](/maintain/client-upgrades/)\n    \n*   [Network upgrades](/maintain/network-upgrades/)\n    \n*   [Storage migration](/maintain/storage-migration/)\n    \n\n**Last edit:** May 7, 2023\n\n[\u2190 Previous](/deploy/keys-and-network-operations/)\n[Next \u2192](/maintain/monitor/)\n\n[](/)\n\n*   Technology\n    *   [Overview](https://substrate.io/technology/)\n        \n    *   [Flexible](https://substrate.io/technology/flexible/)\n        \n    *   [Open](https://substrate.io/technology/open/)\n        \n    *   [Interoperable](https://substrate.io/technology/interoperable/)\n        \n    *   [Future-Proof](https://substrate.io/technology/future-proof/)\n        \n*   Developers\n    *   [Home](https://substrate.io/developers/)\n        \n    *   [Docs](/)\n        \n    *   [Rust Docs](https://paritytech.github.io/substrate/master/sc_service/)\n        \n    *   [Smart Contracts](https://substrate.io/developers/smart-contracts/)\n        \n    *   [Substrate Connect](https://substrate.io/developers/substrate-connect/)\n        \n    *   [Rococo Network](https://substrate.io/developers/rococo-network/)\n        \n*   Vision\n    *   [Substrate & Polkadot](https://substrate.io/vision/substrate-and-polkadot/)\n        \n*   Ecosystem\n    *   [Home](https://substrate.io/ecosystem/)\n        \n    *   [Projects](https://substrate.io/ecosystem/projects/)\n        \n    *   [Builders Program](https://substrate.io/ecosystem/substrate-builders-program/)\n        \n    *   [Hackathons](https://substrate.io/ecosystem/opportunities/hackathons/)\n        \n    *   [Grants](https://substrate.io/ecosystem/opportunities/grants/)\n        \n    *   [Substrate Seminar](https://substrate.io/ecosystem/resources/seminar/)\n        \n    *   [Past Seminars](https://substrate.io/ecosystem/resources/past-seminars/)\n        \n    *   [Awesome Substrate](https://github.com/substrate-developer-hub/awesome-substrate/blob/master/README.md)\n        \n    *   [Contact](https://substrate.io/ecosystem/connect/contact/)\n        \n    *   [Events](https://www.parity.io/events/)\n        \n    *   [Newsletter](https://substrate.io/ecosystem/connect/newsletter/)\n        \n    *   [Blog](https://www.parity.io/blog/tag/parity-substrate/)\n        \n    *   [Square One](https://substrate.io/ecosystem/square-one/)\n        \n\n[](https://substrate.stackexchange.com)\n[](https://github.com/paritytech/)\n[](https://twitter.com/substrate_io)\n\n\u00a9 2024 Parity Technologies All Rights Reserved\n\n*   [Privacy Policy](https://www.parity.io/privacy/)\n    \n*   [Terms of Services](https://www.parity.io/terms/)\n    \n\n![spacer](https://cloudcdn-img.com/static/sbs/spacer.gif)"}, {"title": null, "description": null, "source_url": "https://docs.substrate.io/quick-start/", "markdown": "[](https://substrate.io)\n\n*   Technology\n*   Developers\n*   Vision\n*   Ecosystem\n\n[Docs](https://docs.substrate.io/)\n\nSearch documentation\n\n*   [Quick start](/quick-start/)\n    *   [Substrate at a glance](/quick-start/substrate-at-a-glance/)\n        \n    *   [Start a node](/quick-start/start-a-node/)\n        \n    *   [Explore the code](/quick-start/explore-the-code/)\n        \n    *   [Modify the runtime](/quick-start/modify-the-runtime/)\n        \n\n*   [Learn](/learn/)\n    \n\n*   [Install](/install/)\n    \n\n*   [Build](/build/)\n    \n\n*   [Test](/test/)\n    \n\n*   [Deploy](/deploy/)\n    \n\n*   [Maintain](/maintain/)\n    \n\n*   [Tutorials](/tutorials/)\n    \n\n*   [Reference](/reference/)\n    \n\n*   [Community](/community/)\n    \n\n\u00a0 Documentation\n\nSearch documentation\n\n*   [Quick start](/quick-start/)\n    *   [Substrate at a glance](/quick-start/substrate-at-a-glance/)\n        \n    *   [Start a node](/quick-start/start-a-node/)\n        \n    *   [Explore the code](/quick-start/explore-the-code/)\n        \n    *   [Modify the runtime](/quick-start/modify-the-runtime/)\n        \n\n*   [Learn](/learn/)\n    \n\n*   [Install](/install/)\n    \n\n*   [Build](/build/)\n    \n\n*   [Test](/test/)\n    \n\n*   [Deploy](/deploy/)\n    \n\n*   [Maintain](/maintain/)\n    \n\n*   [Tutorials](/tutorials/)\n    \n\n*   [Reference](/reference/)\n    \n\n*   [Community](/community/)\n    \n\n[Home](/)\nQuick start\n\n[Edit this page](https://github.com/substrate-developer-hub/substrate-docs/blob/main/content/md/en/docs/quick-start/index.md)\n | [Submit an issue](https://github.com/substrate-developer-hub/substrate-docs/issues/new/choose)\n\nQuick start\n===========\n\nThe _Quick start_ assumes that you are a new developer without any prior experience working with Substrate or FRAME, but that you are aware that these tools exist. The _Quick start_ also assumes that you want a simplified entry point for setting up a development environment and starting a blockchain node on your local computer.\n\nIn the _Quick start_, you'll get a brief overview of what Substrate is, learn how to compile and start a node, and take a short tour through the node template code. The following topics are intended to be read in order as a fast path to learning to build with Substrate:\n\n*   [Substrate at a glance](/quick-start/substrate-at-a-glance/)\n    \n*   [Start a node](/quick-start/start-a-node/)\n    \n*   [Explore the code](/quick-start/explore-the-code/)\n    \n*   [Modify the runtime](/quick-start/modify-the-runtime/)\n    \n\nIf the _Quick start_ isn't your route of choice, there are other ways to approach the documentation for learning to build with Substrate. For example, you can dive directly into core concepts in the [Learn](/learn/)\n section or work through hands-on exercises in the [Tutorials](/tutorials/)\n section.\n\nTo help you find your way, think of Substrate documentation as being divided into three parts: the developer journey, the tutorials, and an API and reference section. Although the parts are interrelated, each part presents information in a different way and with a different purpose:\n\nThe **Developer journey** presents information in the form of a narrative arc:\n\n*   [Learn](/learn/)\n     covers core blockchain and Substrate concepts and operations.\n*   [Install](/install/)\n     provides platorm-specific installation instructions and troubleshooting tips for installation-related issues.\n*   [Build](/build/)\n     exposes the tools and techniques for building custom blockchain applications.\n*   [Test](/test/)\n     highlights approaches for unit testing and benchmarking code before deploying on a test network or in a production environment.\n*   [Deploy](/deploy/)\n     describes different options for deploying nodes, how to prepare for deployment, and how to move from a test network to a production network.\n*   [Maintain](/maintain/)\n     provides general information about maintaining your network with hardware and software upgrades, managing new releases, and maintaining your infrastructure.\n\nThe **Tutorials** provide hands-on learning experiences that cover different aspects of building and managing a Substrate-based blockchain:\n\n*   [Build a blockchain](/tutorials/build-a-blockchain/)\n     tutorials are focused on network basics from starting a single node to creating a private four node blockchain, monitoring node operations, and upgrading a running network.\n*   [Build application logic](/tutorials/build-application-logic/add-a-pallet/)\n     tutorials are focused on how to implement application-specific logic working with existing and custom pallets.\n*   [Build a parachain](/tutorials/build-a-parachain/connect-a-local-parachain/)\n     tutorials are focused on how to move from a standalone chain to a parachain, connect a parachain to a relay chain, and send messages between chains.\n\nThe **Reference** provides direct access to technical information such as the Rust API and help for command-line tools.\n\n**Last edit:** July 27, 2023\n\n[Next \u2192](/quick-start/substrate-at-a-glance/)\n\n[](/)\n\n*   Technology\n    *   [Overview](https://substrate.io/technology/)\n        \n    *   [Flexible](https://substrate.io/technology/flexible/)\n        \n    *   [Open](https://substrate.io/technology/open/)\n        \n    *   [Interoperable](https://substrate.io/technology/interoperable/)\n        \n    *   [Future-Proof](https://substrate.io/technology/future-proof/)\n        \n*   Developers\n    *   [Home](https://substrate.io/developers/)\n        \n    *   [Docs](/)\n        \n    *   [Rust Docs](https://paritytech.github.io/substrate/master/sc_service/)\n        \n    *   [Smart Contracts](https://substrate.io/developers/smart-contracts/)\n        \n    *   [Substrate Connect](https://substrate.io/developers/substrate-connect/)\n        \n    *   [Rococo Network](https://substrate.io/developers/rococo-network/)\n        \n*   Vision\n    *   [Substrate & Polkadot](https://substrate.io/vision/substrate-and-polkadot/)\n        \n*   Ecosystem\n    *   [Home](https://substrate.io/ecosystem/)\n        \n    *   [Projects](https://substrate.io/ecosystem/projects/)\n        \n    *   [Builders Program](https://substrate.io/ecosystem/substrate-builders-program/)\n        \n    *   [Hackathons](https://substrate.io/ecosystem/opportunities/hackathons/)\n        \n    *   [Grants](https://substrate.io/ecosystem/opportunities/grants/)\n        \n    *   [Substrate Seminar](https://substrate.io/ecosystem/resources/seminar/)\n        \n    *   [Past Seminars](https://substrate.io/ecosystem/resources/past-seminars/)\n        \n    *   [Awesome Substrate](https://github.com/substrate-developer-hub/awesome-substrate/blob/master/README.md)\n        \n    *   [Contact](https://substrate.io/ecosystem/connect/contact/)\n        \n    *   [Events](https://www.parity.io/events/)\n        \n    *   [Newsletter](https://substrate.io/ecosystem/connect/newsletter/)\n        \n    *   [Blog](https://www.parity.io/blog/tag/parity-substrate/)\n        \n    *   [Square One](https://substrate.io/ecosystem/square-one/)\n        \n\n[](https://substrate.stackexchange.com)\n[](https://github.com/paritytech/)\n[](https://twitter.com/substrate_io)\n\n\u00a9 2024 Parity Technologies All Rights Reserved\n\n*   [Privacy Policy](https://www.parity.io/privacy/)\n    \n*   [Terms of Services](https://www.parity.io/terms/)\n    \n\n![spacer](https://cloudcdn-img.com/static/sbs/spacer.gif)"}, {"title": null, "description": null, "source_url": "https://docs.substrate.io/reference/", "markdown": "[](https://substrate.io)\n\n*   Technology\n*   Developers\n*   Vision\n*   Ecosystem\n\n[Docs](https://docs.substrate.io/)\n\nSearch documentation\n\n*   [Quick start](/quick-start/)\n    \n\n*   [Learn](/learn/)\n    \n\n*   [Install](/install/)\n    \n\n*   [Build](/build/)\n    \n\n*   [Test](/test/)\n    \n\n*   [Deploy](/deploy/)\n    \n\n*   [Maintain](/maintain/)\n    \n\n*   [Tutorials](/tutorials/)\n    \n\n*   [Reference](/reference/)\n    *   [Rust API](/reference/rust-api/)\n        \n    *   [Glossary](/reference/glossary/)\n        \n    *   [Command-line tools](/reference/command-line-tools/)\n        \n    *   [Runtime APIs](/reference/runtime-apis/)\n        \n    *   [FRAME pallets](/reference/frame-pallets/)\n        \n    *   [FRAME macros](/reference/frame-macros/)\n        \n    *   [Account data structures](/reference/account-data-structures/)\n        \n    *   [Type encoding (SCALE)](/reference/scale-codec/)\n        \n    *   [Address formats](/reference/address-formats/)\n        \n    *   [Transaction formats](/reference/transaction-format/)\n        \n    *   [XCM reference](/reference/xcm-reference/)\n        \n    *   [How-to reference guides](/reference/how-to-guides/)\n        \n\n*   [Community](/community/)\n    \n\n\u00a0 Documentation\n\nSearch documentation\n\n*   [Quick start](/quick-start/)\n    \n\n*   [Learn](/learn/)\n    \n\n*   [Install](/install/)\n    \n\n*   [Build](/build/)\n    \n\n*   [Test](/test/)\n    \n\n*   [Deploy](/deploy/)\n    \n\n*   [Maintain](/maintain/)\n    \n\n*   [Tutorials](/tutorials/)\n    \n\n*   [Reference](/reference/)\n    *   [Rust API](/reference/rust-api/)\n        \n    *   [Glossary](/reference/glossary/)\n        \n    *   [Command-line tools](/reference/command-line-tools/)\n        \n    *   [Runtime APIs](/reference/runtime-apis/)\n        \n    *   [FRAME pallets](/reference/frame-pallets/)\n        \n    *   [FRAME macros](/reference/frame-macros/)\n        \n    *   [Account data structures](/reference/account-data-structures/)\n        \n    *   [Type encoding (SCALE)](/reference/scale-codec/)\n        \n    *   [Address formats](/reference/address-formats/)\n        \n    *   [Transaction formats](/reference/transaction-format/)\n        \n    *   [XCM reference](/reference/xcm-reference/)\n        \n    *   [How-to reference guides](/reference/how-to-guides/)\n        \n\n*   [Community](/community/)\n    \n\n[Home](/)\nReference\n\n[Edit this page](https://github.com/substrate-developer-hub/substrate-docs/blob/main/content/md/en/docs/reference/index.md)\n | [Submit an issue](https://github.com/substrate-developer-hub/substrate-docs/issues/new/choose)\n\nReference\n=========\n\nThis section contains links to the Rust API documentation and technical reference materials for Substrate and FRAME tools and libraries.\n\n*   [Rust API](/reference/rust-api/)\n     highlights entry points into the Rust API documentation that is generated directly from the Substrate source code.\n*   [Glossary](/reference/glossary/)\n     defines and explains concepts and terminology that are specific to blockchain technology or the Substrate ecosystem.\n*   [Command-line tools](/reference/command-line-tools/)\n     provides reference information for the most commonly-used command-line interface (CLI) tools.\n*   [Runtime APIs](/reference/runtime-apis/)\n     highlights the application programming interfaces that the runtime provides to support communication with outer node services.\n*   [FRAME pallets](/reference/frame-pallets/)\n     lists all of the pre-built pallets that you can include in your runtime.\n*   [FRAME macros](/reference/frame-macros/)\n     describes the all of the FRAME macros you can use to build custom pallets.\n*   [Account data structures](/reference/account-data-structures/)\n     describes account-related data structures and how account properties are used to manage the account lifecycle in the runtime logic.\n*   [Type encoding (SCALE)](/reference/scale-codec/)\n     describes the encoding scheme used in Substrate to minimize the data transferred over the network.\n*   [How-to reference guides](/reference/how-to-guides/)\n     lists the _How-to_ quick reference guides that provide abbreviated instructions for accomplishing specific tasks. The _How-to_ guides assume that you are already familiar with Substrate and programming in Rust.\n*   [XCM reference](/reference/xcm-reference/)\n     provides basic reference information for the cross-consensus message format, including descriptions of XCM instructions, registers, origins, and errors.\n\n**Last edit:** May 7, 2023\n\n[\u2190 Previous](/tutorials/build-a-parachain/transfer-assets-with-xcm/)\n[Next \u2192](/reference/rust-api/)\n\n[](/)\n\n*   Technology\n    *   [Overview](https://substrate.io/technology/)\n        \n    *   [Flexible](https://substrate.io/technology/flexible/)\n        \n    *   [Open](https://substrate.io/technology/open/)\n        \n    *   [Interoperable](https://substrate.io/technology/interoperable/)\n        \n    *   [Future-Proof](https://substrate.io/technology/future-proof/)\n        \n*   Developers\n    *   [Home](https://substrate.io/developers/)\n        \n    *   [Docs](/)\n        \n    *   [Rust Docs](https://paritytech.github.io/substrate/master/sc_service/)\n        \n    *   [Smart Contracts](https://substrate.io/developers/smart-contracts/)\n        \n    *   [Substrate Connect](https://substrate.io/developers/substrate-connect/)\n        \n    *   [Rococo Network](https://substrate.io/developers/rococo-network/)\n        \n*   Vision\n    *   [Substrate & Polkadot](https://substrate.io/vision/substrate-and-polkadot/)\n        \n*   Ecosystem\n    *   [Home](https://substrate.io/ecosystem/)\n        \n    *   [Projects](https://substrate.io/ecosystem/projects/)\n        \n    *   [Builders Program](https://substrate.io/ecosystem/substrate-builders-program/)\n        \n    *   [Hackathons](https://substrate.io/ecosystem/opportunities/hackathons/)\n        \n    *   [Grants](https://substrate.io/ecosystem/opportunities/grants/)\n        \n    *   [Substrate Seminar](https://substrate.io/ecosystem/resources/seminar/)\n        \n    *   [Past Seminars](https://substrate.io/ecosystem/resources/past-seminars/)\n        \n    *   [Awesome Substrate](https://github.com/substrate-developer-hub/awesome-substrate/blob/master/README.md)\n        \n    *   [Contact](https://substrate.io/ecosystem/connect/contact/)\n        \n    *   [Events](https://www.parity.io/events/)\n        \n    *   [Newsletter](https://substrate.io/ecosystem/connect/newsletter/)\n        \n    *   [Blog](https://www.parity.io/blog/tag/parity-substrate/)\n        \n    *   [Square One](https://substrate.io/ecosystem/square-one/)\n        \n\n[](https://substrate.stackexchange.com)\n[](https://github.com/paritytech/)\n[](https://twitter.com/substrate_io)\n\n\u00a9 2024 Parity Technologies All Rights Reserved\n\n*   [Privacy Policy](https://www.parity.io/privacy/)\n    \n*   [Terms of Services](https://www.parity.io/terms/)\n    \n\n![spacer](https://cloudcdn-img.com/static/sbs/spacer.gif)"}, {"title": null, "description": null, "source_url": "https://docs.substrate.io/test/", "markdown": "[](https://substrate.io)\n\n*   Technology\n*   Developers\n*   Vision\n*   Ecosystem\n\n[Docs](https://docs.substrate.io/)\n\nSearch documentation\n\n*   [Quick start](/quick-start/)\n    \n\n*   [Learn](/learn/)\n    \n\n*   [Install](/install/)\n    \n\n*   [Build](/build/)\n    \n\n*   [Test](/test/)\n    *   [Unit test](/test/unit-testing/)\n        \n    *   [Debug](/test/debug/)\n        \n    *   [Benchmark](/test/benchmark/)\n        \n    *   [Simulate parachains](/test/simulate-parachains/)\n        \n    *   [Check runtime](/test/check-runtime/)\n        \n\n*   [Deploy](/deploy/)\n    \n\n*   [Maintain](/maintain/)\n    \n\n*   [Tutorials](/tutorials/)\n    \n\n*   [Reference](/reference/)\n    \n\n*   [Community](/community/)\n    \n\n\u00a0 Documentation\n\nSearch documentation\n\n*   [Quick start](/quick-start/)\n    \n\n*   [Learn](/learn/)\n    \n\n*   [Install](/install/)\n    \n\n*   [Build](/build/)\n    \n\n*   [Test](/test/)\n    *   [Unit test](/test/unit-testing/)\n        \n    *   [Debug](/test/debug/)\n        \n    *   [Benchmark](/test/benchmark/)\n        \n    *   [Simulate parachains](/test/simulate-parachains/)\n        \n    *   [Check runtime](/test/check-runtime/)\n        \n\n*   [Deploy](/deploy/)\n    \n\n*   [Maintain](/maintain/)\n    \n\n*   [Tutorials](/tutorials/)\n    \n\n*   [Reference](/reference/)\n    \n\n*   [Community](/community/)\n    \n\n[Home](/)\nTest\n\n[Edit this page](https://github.com/substrate-developer-hub/substrate-docs/blob/main/content/md/en/docs/test/index.md)\n | [Submit an issue](https://github.com/substrate-developer-hub/substrate-docs/issues/new/choose)\n\nTest\n====\n\nRegardless of the type of chain you ultimately want to build, you are likely to start with a local development environment for unit testing and debugging. As your project progresses, you'll want to evaluate the performance of different operations under different conditions to establish benchmarks around the execution time and storage requirements used by the functions in your chain.\n\nIf you are building a parachain, you'll also want to simulate the operation of one or more parachains in a local network before you attempt to deploy on a test network like Rococo or a live production network like Kusama or Polkadot where real-world economics are in play.\n\nIn a local development network, you have full control over your node. You can start and stop the node. You can modify, recompile, and upgrade the runtime at your discretion. You can write to and clear stored state as often as you like. You can use predefined accounts and pallets to try things out. But testing is the key to making your chain accessible to a wider audience and economically viable in the network.\n\nThe topics in this section highlight tools and techniques for testing your blockchain logic to help you move from local development to deployment on a live test network and ultimately into production as part of the Polkadot ecosystem.\n\n*   [Unit test](/test/unit-testing/)\n     explains how you can use the Rust testing framework and a mock runtime environment to execute unit tests that validate individual functions or modules of code.\n*   [Debug](/test/debug/)\n     describes how you can use the Rust logging functions to debug your runtime.\n*   [Benchmark](/test/benchmark/)\n     explains the role of benchmarks, how you can use the benchmarking framework to evaluate the performance of the function calls in your code and to adjust transaction weight to accurately reflect execution time.\n*   [Simulate parachains](/test/simulate-parachains/)\n     steps through how you can set up a local test network to simulate a relay chain network with validators, parachain collator nodes, and XCM messaging.\n*   [Check runtime](/test/check-runtime/)\n     explains how you can use the `try-runtime` command-line tool for testing runtime state against a production snapshot of the chain state.\n\n**Last edit:** May 7, 2023\n\n[\u2190 Previous](/build/troubleshoot-your-code/)\n[Next \u2192](/test/unit-testing/)\n\n[](/)\n\n*   Technology\n    *   [Overview](https://substrate.io/technology/)\n        \n    *   [Flexible](https://substrate.io/technology/flexible/)\n        \n    *   [Open](https://substrate.io/technology/open/)\n        \n    *   [Interoperable](https://substrate.io/technology/interoperable/)\n        \n    *   [Future-Proof](https://substrate.io/technology/future-proof/)\n        \n*   Developers\n    *   [Home](https://substrate.io/developers/)\n        \n    *   [Docs](/)\n        \n    *   [Rust Docs](https://paritytech.github.io/substrate/master/sc_service/)\n        \n    *   [Smart Contracts](https://substrate.io/developers/smart-contracts/)\n        \n    *   [Substrate Connect](https://substrate.io/developers/substrate-connect/)\n        \n    *   [Rococo Network](https://substrate.io/developers/rococo-network/)\n        \n*   Vision\n    *   [Substrate & Polkadot](https://substrate.io/vision/substrate-and-polkadot/)\n        \n*   Ecosystem\n    *   [Home](https://substrate.io/ecosystem/)\n        \n    *   [Projects](https://substrate.io/ecosystem/projects/)\n        \n    *   [Builders Program](https://substrate.io/ecosystem/substrate-builders-program/)\n        \n    *   [Hackathons](https://substrate.io/ecosystem/opportunities/hackathons/)\n        \n    *   [Grants](https://substrate.io/ecosystem/opportunities/grants/)\n        \n    *   [Substrate Seminar](https://substrate.io/ecosystem/resources/seminar/)\n        \n    *   [Past Seminars](https://substrate.io/ecosystem/resources/past-seminars/)\n        \n    *   [Awesome Substrate](https://github.com/substrate-developer-hub/awesome-substrate/blob/master/README.md)\n        \n    *   [Contact](https://substrate.io/ecosystem/connect/contact/)\n        \n    *   [Events](https://www.parity.io/events/)\n        \n    *   [Newsletter](https://substrate.io/ecosystem/connect/newsletter/)\n        \n    *   [Blog](https://www.parity.io/blog/tag/parity-substrate/)\n        \n    *   [Square One](https://substrate.io/ecosystem/square-one/)\n        \n\n[](https://substrate.stackexchange.com)\n[](https://github.com/paritytech/)\n[](https://twitter.com/substrate_io)\n\n\u00a9 2024 Parity Technologies All Rights Reserved\n\n*   [Privacy Policy](https://www.parity.io/privacy/)\n    \n*   [Terms of Services](https://www.parity.io/terms/)\n    \n\n![spacer](https://cloudcdn-img.com/static/sbs/spacer.gif)"}]