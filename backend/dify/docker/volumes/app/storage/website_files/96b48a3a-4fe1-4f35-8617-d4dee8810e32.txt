[{"title": null, "description": null, "source_url": "https://polkadot.js.org/docs/", "markdown": "[Skip to main content](#__docusaurus_skipToContent_fallback)\n\n[![polkadot{.js}](https://polkadot.js.org/docs/img/logo.svg)\\\n\\\n**polkadot{.js}**](/docs/)\n\n[Apps UI (Wallet)](https://polkadot.js.org/apps/)\n[GitHub](https://github.com/polkadot-js/docs)\n\nSearch...\n\n*   [Introduction](#)\n    \n    *   [Overview](/docs/)\n        \n*   [API](#)\n    \n*   [Metadata](#)\n    \n*   [Keyring](#)\n    \n*   [Crypto Utilities](#)\n    \n*   [Contracts (API)](#)\n    \n*   [Identicon (UI)](#)\n    \n*   [Keyring (UI)](#)\n    \n*   [Extension](#)\n    \n*   [Run, Bundle, Test](#)\n    \n\n*   [](/docs/)\n    \n*   Introduction\n*   Overview\n\nOn this page\n\nOverview\n========\n\nGot here looking for the [Apps UI (Wallet)](https://polkadot.js.org/apps/)\n? Just follow the preceding link. Looking for developer documentation? Then you are at the right place.\n\nThis is an effort to provide a collection of tools, utilities and libraries for interacting with the [Polkadot network](https://polkadot.network)\n from JavaScript. All code is made available on [GitHub](https://github.com/polkadot-js/)\n with a [permissive Apache-2.0 license](https://en.wikipedia.org/wiki/Apache_License#Version_2.0)\n.\n\nWhile there is a slant towards developer tools, providing libraries to allow others to build tools on top of, a collection of applications are made available that allows for interaction with the network from a pure user perspective. The documentation contained here has a focus on the developer libraries.\n\nIf you are a end-user looking to interact with the network, you can interact with [Polkadot/Substrate (latest, project hosted)](https://polkadot.js.org/apps/)\n or [IPFS (stable, weekly releases)](https://dotapps.io/)\n.\n\nHelp us help others[\u200b](#help-us-help-others \"Direct link to Help us help others\")\n\n----------------------------------------------------------------------------------\n\nIf you spot gaps in the information provided, or are uncertain about any specific area, please do [log an issue](https://github.com/polkadot-js/docs/issues)\n or if you are that way inclined, make a pull-request. We really want to have good documentation in these areas and allow people to be productive right from the start.\n\nContributing[\u200b](#contributing \"Direct link to Contributing\")\n\n-------------------------------------------------------------\n\nThis is a community effort to trial tooling while the network is being developed. Contributions are welcome. Feel free to use the tools and libraries, log issues as you find them or create pull requests for your bug-bears or features.\n\nAs a new collection of projects, we take quality seriously - library code should be comprehensively [unit tested](https://facebook.github.io/jest/)\n and interfaces should have [full type definitions](http://typescriptlang.org)\n.\n\n[Edit this page](https://github.com/polkadot-js/docs/edit/master/docs/intro.md)\n\n[Next\\\n\\\nOverview](/docs/api)\n\n*   [Help us help others](#help-us-help-others)\n    \n*   [Contributing](#contributing)"}, {"title": null, "description": null, "source_url": "https://polkadot.js.org/docs/api", "markdown": "[Skip to main content](#__docusaurus_skipToContent_fallback)\n\n[![polkadot{.js}](https://polkadot.js.org/docs/img/logo.svg)\\\n\\\n**polkadot{.js}**](/docs/)\n\n[Apps UI (Wallet)](https://polkadot.js.org/apps/)\n[GitHub](https://github.com/polkadot-js/docs)\n\nSearch...\n\n*   [Introduction](#)\n    \n*   [API](#)\n    \n    *   [Overview](/docs/api)\n        \n    *   [Getting started](#)\n        \n    *   [Cookbook](#)\n        \n    *   [Examples](#)\n        \n    *   [FAQ](/docs/api/FAQ)\n        \n*   [Metadata](#)\n    \n*   [Keyring](#)\n    \n*   [Crypto Utilities](#)\n    \n*   [Contracts (API)](#)\n    \n*   [Identicon (UI)](#)\n    \n*   [Keyring (UI)](#)\n    \n*   [Extension](#)\n    \n*   [Run, Bundle, Test](#)\n    \n\n*   [](/docs/)\n    \n*   API\n*   Overview\n\nOverview\n========\n\nThe API provides application developers the ability to query a node and interact with the Polkadot or Substrate chains using Javascript. Here you will find documentation and examples to get you started.\n\n[Jump right in](/docs/api/start)\n and get an overview on using the API in your projects, from installation all the way through to making it do magic. Have things working and want tips? The [cookbook](/docs/api/cookbook)\n provides some tips and tricks. Getting started and want some full examples? [The ApiPromise examples](/docs/api/examples/promise)\n provide some basic examples.\n\nFor oft-repeated questions, the [FAQ](/docs/api/FAQ)\n may have what you are looking for.\n\nSeparated from the API you will also find the [Substrate metadata](/docs/substrate)\n section that has an overview of the RPC, extrinsics, events and errors available on a typical Substrate node.\n\n[Edit this page](https://github.com/polkadot-js/docs/edit/master/docs/api/intro.md)\n\n[Previous\\\n\\\nOverview](/docs/)\n[Next\\\n\\\nOverview](/docs/api/start)"}, {"title": null, "description": null, "source_url": "https://polkadot.js.org/docs/api-contract", "markdown": "[Skip to main content](#__docusaurus_skipToContent_fallback)\n\n[![polkadot{.js}](https://polkadot.js.org/docs/img/logo.svg)\\\n\\\n**polkadot{.js}**](/docs/)\n\n[Apps UI (Wallet)](https://polkadot.js.org/apps/)\n[GitHub](https://github.com/polkadot-js/docs)\n\nSearch...\n\n*   [Introduction](#)\n    \n*   [API](#)\n    \n*   [Metadata](#)\n    \n*   [Keyring](#)\n    \n*   [Crypto Utilities](#)\n    \n*   [Contracts (API)](#)\n    \n    *   [Overview](/docs/api-contract)\n        \n    *   [Getting started](#)\n        \n    *   [FAQ](/docs/api-contract/FAQ)\n        \n*   [Identicon (UI)](#)\n    \n*   [Keyring (UI)](#)\n    \n*   [Extension](#)\n    \n*   [Run, Bundle, Test](#)\n    \n\n*   [](/docs/)\n    \n*   Contracts (API)\n*   Overview\n\nOverview\n========\n\nThe `@polkadot/api-contract` interfaces provide a thin layer on-top of the available API transactions to allow you to manage Substrate contracts in a consistent way.\n\nSince not all Substrate chains have contracts available, we assume that you are connecting to a chain that has the FRAME [contracts pallet](https://github.com/paritytech/substrate/tree/master/frame/contracts#readme)\n and that you are using a compatible compiler [cargo-contract for ink!](https://github.com/paritytech/cargo-contract)\n, or [Solang for Solidity](https://github.com/hyperledger-labs/solang#build-for-substrate)\n.\n\nThe API contracts interfaces transparently handle any encoding and decoding of messages and results using the available ABIs, allowing the developer to work with contract deployments and calls without having to handle encoding themselves.\n\nTo get started, follow the [getting started](/docs/api-contract/start)\n journey for installation and use for the [Promise-based version](https://github.com/polkadot-js/api/tree/master/packages/api-contract/src/promise)\n for the contracts interfaces.\n\n[Edit this page](https://github.com/polkadot-js/docs/edit/master/docs/api-contract/intro.md)\n\n[Previous\\\n\\\nFAQ](/docs/util-crypto/FAQ)\n[Next\\\n\\\nOverview](/docs/api-contract/start)"}, {"title": null, "description": null, "source_url": "https://polkadot.js.org/docs/api-contract/FAQ", "markdown": "[Skip to main content](#__docusaurus_skipToContent_fallback)\n\n[![polkadot{.js}](https://polkadot.js.org/docs/img/logo.svg)\\\n\\\n**polkadot{.js}**](/docs/)\n\n[Apps UI (Wallet)](https://polkadot.js.org/apps/)\n[GitHub](https://github.com/polkadot-js/docs)\n\nSearch...\n\n*   [Introduction](#)\n    \n*   [API](#)\n    \n*   [Metadata](#)\n    \n*   [Keyring](#)\n    \n*   [Crypto Utilities](#)\n    \n*   [Contracts (API)](#)\n    \n    *   [Overview](/docs/api-contract)\n        \n    *   [Getting started](#)\n        \n    *   [FAQ](/docs/api-contract/FAQ)\n        \n*   [Identicon (UI)](#)\n    \n*   [Keyring (UI)](#)\n    \n*   [Extension](#)\n    \n*   [Run, Bundle, Test](#)\n    \n\n*   [](/docs/)\n    \n*   Contracts (API)\n*   FAQ\n\nOn this page\n\nFAQ\n===\n\nThe list will be updated/expanded as questions come up, dealing with some common issues that API users find.\n\nMy ABI cannot be parsed[\u200b](#my-abi-cannot-be-parsed \"Direct link to My ABI cannot be parsed\")\n\n----------------------------------------------------------------------------------------------\n\nWhen passing an older pre ink! 3.0-rc1 version of the ABI, you will have an \"Invalid JSON ABI structure supplied, expected a recent metadata version\" error being returned. As explained in the [getting started guide](/docs/api-contract/start/install)\n as of `@polkadot/api-contract` 2.2+ the older ink! 2.1 versions are not supported.\n\nIf you are using an older version you would need to use an older version of the API or upgrade your contracts to ink! 3.0.\n\nWhy is there a snake\\_case vs camelCase difference[\u200b](#why-is-there-a-snake_case-vs-camelcase-difference \"Direct link to Why is there a snake_case vs camelCase difference\")\n\n-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nThe API always tries to use `camelCase` naming where available. This aligns with the de-facto standards that are generally (not always!) used in JS interfaces. This means that when decorating the ABIs into `contract.<query|tx>.methodName` the `methodName` part would be in camelCase format.\n\nAn example of this would be in the erc20 ink! ABI - the method in the above would be `balance_of` however the API (for consistency with the full suite of libraries), decorate this as `contract.query.balanceOf`.\n\nHow do I subscribe to a contract query?[\u200b](#how-do-i-subscribe-to-a-contract-query \"Direct link to How do I subscribe to a contract query?\")\n\n---------------------------------------------------------------------------------------------------------------------------------------------\n\nSubscriptions, and queries to the raw storage are on their way! Unfortunately until then there isn't a proper way to subscribe to a contract query. A temporary workaround is to subscribe to `api.query.contracts.contractInfoOf`.\n\n    const unsub = await api.query.contracts.contractInfoOf(contractAddress, async () => {    // Perform a read of the contract's `get` message    const callValue = await contract.query.get(alicePair.address, value, gasLimit);    // Do something with callValue  });\n\nBut this workaround is not without drawbacks. Since the callback will be executed every time the contract's storage is affected you will ultimately end up calling your contract query more often than necessary.\n\n[Edit this page](https://github.com/polkadot-js/docs/edit/master/docs/api-contract/FAQ.md)\n\n[Previous\\\n\\\nContract tx](/docs/api-contract/start/contract.tx)\n[Next\\\n\\\nOverview](/docs/ui-identicon)\n\n*   [My ABI cannot be parsed](#my-abi-cannot-be-parsed)\n    \n*   [Why is there a snake\\_case vs camelCase difference](#why-is-there-a-snake_case-vs-camelcase-difference)\n    \n*   [How do I subscribe to a contract query?](#how-do-i-subscribe-to-a-contract-query)"}, {"title": null, "description": null, "source_url": "https://polkadot.js.org/docs/api-contract/start", "markdown": "[Skip to main content](#__docusaurus_skipToContent_fallback)\n\n[![polkadot{.js}](https://polkadot.js.org/docs/img/logo.svg)\\\n\\\n**polkadot{.js}**](/docs/)\n\n[Apps UI (Wallet)](https://polkadot.js.org/apps/)\n[GitHub](https://github.com/polkadot-js/docs)\n\nSearch...\n\n*   [Introduction](#)\n    \n*   [API](#)\n    \n*   [Metadata](#)\n    \n*   [Keyring](#)\n    \n*   [Crypto Utilities](#)\n    \n*   [Contracts (API)](#)\n    \n    *   [Overview](/docs/api-contract)\n        \n    *   [Getting started](#)\n        \n        *   [Overview](/docs/api-contract/start)\n            \n        *   [Installation](/docs/api-contract/start/install)\n            \n        *   [Basics](/docs/api-contract/start/basics)\n            \n        *   [Prerequisites](/docs/api-contract/start/prerequisites)\n            \n        *   [Code](/docs/api-contract/start/code)\n            \n        *   [Blueprint](/docs/api-contract/start/blueprint)\n            \n        *   [Contract](/docs/api-contract/start/contract.read)\n            \n        *   [Contract tx](/docs/api-contract/start/contract.tx)\n            \n    *   [FAQ](/docs/api-contract/FAQ)\n        \n*   [Identicon (UI)](#)\n    \n*   [Keyring (UI)](#)\n    \n*   [Extension](#)\n    \n*   [Run, Bundle, Test](#)\n    \n\n*   [](/docs/)\n    \n*   Contracts (API)\n*   Getting started\n*   Overview\n\nOn this page\n\nOverview\n========\n\nThese sections should provide you with all the information needed to install the `@polkadot/api-contract` package, understand the structure of the interfaces and allow you to start using it. For existing users this really should be titled \"Things I wish I knew before I started using contracts\" - it really aims to close the gap to allow anybody to get to grips with using the package.\n\nES2015 Usage and examples[\u200b](#es2015-usage-and-examples \"Direct link to ES2015 Usage and examples\")\n\n----------------------------------------------------------------------------------------------------\n\nBefore we jump into the guide, be aware that in all cases we are using ES2015, including using things like `async`/`await`, `import` and others. Depending on your environment, this may require some adjustments.\n\nWe are using the `await` naked in all examples (removing boilerplate allows us to focus on the actual libraries), so unless your environment supports top-level await, you will need to wrap the code samples in an `async` block `async function main () { ... }` and then just call `main().then(() => console.log('completed'))`.\n\nWhat this is not[\u200b](#what-this-is-not \"Direct link to What this is not\")\n\n-------------------------------------------------------------------------\n\nThis is not line-by-line documentation of all the existing function calls available, nor it is tied to a specific environment. There will be some things in the Keyring that are probably not covered, which brings us to the next point...\n\nHelp us help others[\u200b](#help-us-help-others \"Direct link to Help us help others\")\n\n----------------------------------------------------------------------------------\n\nIf you spot gaps in the information provided, or are uncertain about any specific area, please do [log an issue](https://github.com/polkadot-js/docs/issues)\n or if you are that way inclined, make a pull-request. We really want to have good documentation in these areas and allow people to be productive right from the start.\n\nReady? Steady? Go![\u200b](https://polkadot.js.org/docs/api-contract/start#ready-steady-go%20%22Direct%20link%20to%20Ready?%20Steady?%20Go!%22)\n\n----------------------------------------------------------------------------\n\nLet's get started... [What should be installed, and how should we do it?](/docs/api-contract/start/install)\n\n[Edit this page](https://github.com/polkadot-js/docs/edit/master/docs/api-contract/start/intro.md)\n\n[Previous\\\n\\\nOverview](/docs/api-contract)\n[Next\\\n\\\nInstallation](/docs/api-contract/start/install)\n\n*   [ES2015 Usage and examples](#es2015-usage-and-examples)\n    \n*   [What this is not](#what-this-is-not)\n    \n*   [Help us help others](#help-us-help-others)\n    \n*   [Ready? Steady? Go!](#ready-steady-go)"}, {"title": null, "description": null, "source_url": "https://polkadot.js.org/docs/api/cookbook", "markdown": "[Skip to main content](#__docusaurus_skipToContent_fallback)\n\n[![polkadot{.js}](https://polkadot.js.org/docs/img/logo.svg)\\\n\\\n**polkadot{.js}**](/docs/)\n\n[Apps UI (Wallet)](https://polkadot.js.org/apps/)\n[GitHub](https://github.com/polkadot-js/docs)\n\nSearch...\n\n*   [Introduction](#)\n    \n*   [API](#)\n    \n    *   [Overview](/docs/api)\n        \n    *   [Getting started](#)\n        \n    *   [Cookbook](#)\n        \n        *   [Overview](/docs/api/cookbook)\n            \n        *   [Blocks](/docs/api/cookbook/blocks)\n            \n        *   [Storage](/docs/api/cookbook/storage)\n            \n        *   [Transactions](/docs/api/cookbook/tx)\n            \n    *   [Examples](#)\n        \n    *   [FAQ](/docs/api/FAQ)\n        \n*   [Metadata](#)\n    \n*   [Keyring](#)\n    \n*   [Crypto Utilities](#)\n    \n*   [Contracts (API)](#)\n    \n*   [Identicon (UI)](#)\n    \n*   [Keyring (UI)](#)\n    \n*   [Extension](#)\n    \n*   [Run, Bundle, Test](#)\n    \n\n*   [](/docs/)\n    \n*   API\n*   Cookbook\n*   Overview\n\nOn this page\n\nOverview\n========\n\nThe cookbook hosts small code snippets in a question-answer format. It does not walk you through the whole setup, like the [basic examples](/docs/api/examples/promise)\n, but rather aims to answer some questions around specific uses. It also does not replace the [FAQ](/docs/api/FAQ)\n, rather this is focussed explicitly on code samples, instead of general trouble-shooting for common mishaps.\n\nThese questions are added as they do come up and the hope is that the snippets here is will be useful to others, instead of just the original person who asked on a specific use-case. As of today, it is only making a start and not fully comprehensive yet - check back early, check back often.\n\nSections[\u200b](#sections \"Direct link to Sections\")\n\n-------------------------------------------------\n\nThe following cookbook sections are available -\n\n*   [Blocks](/docs/api/cookbook/blocks)\n     - Snippets around working with blocks and headers\n*   [Storage](/docs/api/cookbook/storage)\n     - Snippets for working with storage\n*   [Transactions](/docs/api/cookbook/tx)\n     - Snippets for working with transactions\n\n... more to come.\n\nContribute[\u200b](#contribute \"Direct link to Contribute\")\n\n-------------------------------------------------------\n\nAnd as always, if you have an addition to make, or a question to ask any [any PRs](https://github.com/polkadot-js/api/tree/master/docs)\n or [issues](https://github.com/polkadot-js/api/issues)\n are appreciated. The initial content was generate from exactly such questions, either in Riot chat or as submitted as issues.\n\n[Edit this page](https://github.com/polkadot-js/docs/edit/master/docs/api/cookbook/intro.md)\n\n[Previous\\\n\\\nTypeScript user generated](/docs/api/start/typescript.user)\n[Next\\\n\\\nBlocks](/docs/api/cookbook/blocks)\n\n*   [Sections](#sections)\n    \n*   [Contribute](#contribute)"}, {"title": null, "description": null, "source_url": "https://polkadot.js.org/docs/api/FAQ", "markdown": "[Skip to main content](#__docusaurus_skipToContent_fallback)\n\n[![polkadot{.js}](https://polkadot.js.org/docs/img/logo.svg)\\\n\\\n**polkadot{.js}**](/docs/)\n\n[Apps UI (Wallet)](https://polkadot.js.org/apps/)\n[GitHub](https://github.com/polkadot-js/docs)\n\nSearch...\n\n*   [Introduction](#)\n    \n*   [API](#)\n    \n    *   [Overview](/docs/api)\n        \n    *   [Getting started](#)\n        \n    *   [Cookbook](#)\n        \n    *   [Examples](#)\n        \n    *   [FAQ](/docs/api/FAQ)\n        \n*   [Metadata](#)\n    \n*   [Keyring](#)\n    \n*   [Crypto Utilities](#)\n    \n*   [Contracts (API)](#)\n    \n*   [Identicon (UI)](#)\n    \n*   [Keyring (UI)](#)\n    \n*   [Extension](#)\n    \n*   [Run, Bundle, Test](#)\n    \n\n*   [](/docs/)\n    \n*   API\n*   FAQ\n\nOn this page\n\nFAQ\n===\n\nThe list will be updated/expanded as questions come up, dealing with some common issues that API users find.\n\nI am getting a \"Unknown types found, no types for ...\" error[\u200b](#i-am-getting-a-unknown-types-found-no-types-for--error \"Direct link to I am getting a \"Unknown types found, no types for ...\" error\")\n\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nThere are 2 causes for this, both related to the version of the API that you are using and the support of types. As explained in the elsewhere, types on Polkadot/Substrate are continuously evolving - the latest version of the API always tries to support types for the latest Polkadot networks, such as [Kusama](https://kusama.network/)\n. So for Polkadot public chains, ensure that you are using the latest released API version.\n\nIf you are connected to a customized chain, you would rather want to [register the types](/docs/api/start/types.extend)\n either on your own, or via packages that the chain vendor provides.\n\nIf however you are running against a master branch of either Polkadot or Substrate, and the type additions are very new and have not made it into an API release yet you may well be better suited running [a beta version, tracking master](/docs/api/start/install#betas)\n.\n\nI am getting a \"Metadata:: failed on MagicNumber\" error[\u200b](#i-am-getting-a-metadata-failed-on-magicnumber-error \"Direct link to I am getting a \"Metadata:: failed on MagicNumber\" error\")\n\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nUpdate your version of the API to the [latest version](/docs/api/start/install)\n. Like types, the [metadata interfaces](/docs/api/start/basics)\n are continuously evolving. For instance with the Polkadot Alexander network, only metadata v3 is available. By the time Kusama launched, this has been bumped to v7. As these versions are added to the Polkadot/Substrate codebase, they are added to the API.\n\nThe node returns a \"Could not convert\" error on send[\u200b](#the-node-returns-a-could-not-convert-error-on-send \"Direct link to The node returns a \"Could not convert\" error on send\")\n\n-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nThe typical error that you would see is `Verification Error: Execution(ApiError(\"Could not convert parameter 'tx' between node and runtime`. This means that the transaction data serialized from the API cannot be deserialized on the node.\n\nAll data transferred between the API and the Node is in a SCALE-encoded binary format, so the [definition of the types](/docs/api/start/types.extend)\n between the API and the node needs to match 100%. When you find the above, it would mean the definition of the types on the API side does not match what is on the node. Specifically the API encodes against the definition, but since there is a mismatch the Node cannot parse the data correctly.\n\nTo fix this, you should look at the specific `api.tx.*` params and adjust the type definitions for those param types to match what is found on the node side. In some rare cases the cause could be extrinsic formatting related, to track these make an `api.tx.system.remark(data: Bytes)` call, if it fails, the API and node cannot agree on [an extrinsic format and adjustments are required](/docs/api/start/types.extend#impact-on-extrinsics)\n.\n\nAlso see the next entry for causes related to wrong `Address` formats.\n\nI cannot send transactions, sending yields decoding failures[\u200b](#i-cannot-send-transactions-sending-yields-decoding-failures \"Direct link to I cannot send transactions, sending yields decoding failures\")\n\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nDepending on the chain, you could get either an `Address` or `Signature` or extensions decoding error when sending the transaction returned from the node. This is due to a type mismatch on the `Address` types defined on the node vs what the API uses. This is not something the API can detect via the metadata and it is generally configured on a per-chain basis.\n\nThe API always injects the default type definitions as specified by the Substrate master fully-featured node. This means that any customizations to chains needs to be applied as types, should there be differences in specific user-implementations.\n\nDue to these customizations and differences that bleed through to the transaction formats, out-of-the-box chains based on the node-template will have issues when sending transactions. To fix this, you would need to add [the customized Address types into your API](/docs/api/start/types.extend#impact-on-extrinsics)\n instances (or UIs), allowing the API to have the information required to adjust the encoding.\n\nThere are 3 `Address` types that are generally configured in different chains, and one variant should be passed to the `Api.create({ ... })` [options as types](https://polkadot.js.org/docs/api/start/types.extend/#extension)\n -\n\n*   `type Address = MultiAddress` (Rust), this is the current default in Substrate master and the API and used in chains such as Polkadot/Kusama from runtime 28. It allows an enhancement to the original `Indices` lookup, catering for a wide array of address types. To configure this type in the API, use `{ \"Address\": \"MultiAddress\", \"LookupSource\": \"MultiAddress\" }`\n    \n*   `type Address = <Indices as StaticLookup>::Source` (Rust), this is the previous the default as applied in the API and yields types `{ \"Address\": \"IndicesLookupSource\", \"LookupSource\": \"IndicesLookupSource\" }` when explicitly specified;\n    \n*   `type Address = AccountId` (Rust), this is used in a number of chains such as Kusama/Polkadot (prior to the 28 runtime) and a previous default for the node-template chain as well. To override to this type of Address, use the API types `{ \"Address\": \"AccountId\", \"LookupSource\": \"AccountId\" }`\n    \n\nThe above may also apply when you use [polkadot-js/apps](https://github.com/polkadot-js/apps)\n to connect to your node. Known chains are correctly configured, however any custom chain may need additional types.\n\nI would like to sign transactions offline[\u200b](#i-would-like-to-sign-transactions-offline \"Direct link to I would like to sign transactions offline\")\n\n----------------------------------------------------------------------------------------------------------------------------------------------------\n\nThe API itself is independent of where the signature comes from and how it is injected. Additionally it implements a signer interface, that can be used for external signing - an example of this is the [polkadot-js/apps](https://github.com/polkadot-js/apps)\n support for signing via extensions and even the [polkadot-js/extension](https://github.com/polkadot-js/extension)\n support for tools such as the [Parity Signer](https://github.com/paritytech/parity-signer)\n.\n\nAs of this writing we don't have an explicit example of implementing the signer interface in these docs, although we do use one in [our tests](https://github.com/polkadot-js/api/blob/master/packages/api/src/test/SingleAccountSigner.ts)\n. Additionally, the [polkadot-js/tools](https://github.com/polkadot-js/tools)\n has an implementation of [a very basic offline signer](https://github.com/polkadot-js/tools/tree/master/packages/signer-cli)\n where transactions are generated in one process and signatures in another non-connected process.\n\nI would like to send a root transaction[\u200b](#i-would-like-to-send-a-root-transaction \"Direct link to I would like to send a root transaction\")\n\n----------------------------------------------------------------------------------------------------------------------------------------------\n\nSome calls in Polkadot/Substrate can only be submitted as root, these are indicated by `ensure_root(origin)` in the Rust codebase. Root here does not refer to the actual account, i.e. `//Alice` on a `--dev` chain, but rather that it cannot be submitted as a bare user transaction. This restriction applies to chain upgrades, changing balances or anything that modifies the state and/or chain operation.\n\nTo submit these transactions, it needs to be sent as a [wrapped transaction](/docs/api/start/api.tx.wrap#sudo-use)\n via either `sudo.sudo` (assuming you have access on your chain) or `democracy.proposal` (which would allow users of the chain to vote on it).\n\nHow do I call a function with a Tuple input[\u200b](#how-do-i-call-a-function-with-a-tuple-input \"Direct link to How do I call a function with a Tuple input\")\n\n----------------------------------------------------------------------------------------------------------------------------------------------------------\n\nTuples, as defined in the Polkadot/Substrate types appear as `(TypeA, TypeB)`. For instance we may have an `(AccountId, u64)` input as defined in the metadata or as part of the user types. To specify a Tuple as an input, wrap it in an array format, for instance to call `query.module.get((u32, u64))` where a `(u32, u64)` Tuple input is expected, you would do `query.module.get([123, 456])`\n\nHow long do transactions live[\u200b](#how-long-do-transactions-live \"Direct link to How long do transactions live\")\n\n----------------------------------------------------------------------------------------------------------------\n\nPolkadot/Substrate supports both immortal and mortal transactions. For immortal, this means that the transaction has an infinite lifetime, for mortals, the transactions expire after a defined period. By default the API sends mortal transactions when no explicit extrinsic era has been specified. This means that all transaction has a limited lifetime and will expire if not included in the period set.\n\nThe length for this transaction validity is set to 5 minutes, calculated based on the blocktime for the chain. (10 blocks per minute in this default 6s Substrate configuration).\n\nMy chain does not support system.account queries[\u200b](#my-chain-does-not-support-systemaccount-queries \"Direct link to My chain does not support system.account queries\")\n\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nThe API always tracks the latest Substrate master in terms of examples. This means that nonce & balance queries are done via the `api.query.system.account(<account>)` which returns a struct `{ nonce: Index, data: AccountData }` where the `data` is struct containing the free and reserved balances. As with all `api.query.*` endpoints, this is decorated based on what the chain you connect to support, via the metadata exchange.\n\nIt is possible that you are connecting to an older chain that has not been upgraded yet. For these chains, this storage entry won't be available (yet). To query the nonce on older chains, you can do a query to `api.query.system.accountNonce(<account>)` and balances can be retrieved via `api.query.balances.freeBalance(<account>)`.\n\nLikewise, if your chain has been upgraded recently and you are still using the old `system.accountNonce` or `balances.freeBalance` queries in your code (which is now not available in the chain metadata), you need to update it to query the new location.\n\nUsing a non-current-master node, I have issues parsing events[\u200b](#using-a-non-current-master-node-i-have-issues-parsing-events \"Direct link to Using a non-current-master node, I have issues parsing events\")\n\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nRecently Substrate master updated the `Weight` type from `u32` -> `u64`. This type is used in the `DispatchInfo` struct in the `system.ExtrinsicSuccess` events, to return the applied call weights as well as the resulting fees. Since the API master branch tracks Substrate master, this means the change has been applied by default, with the default set to `u64`.\n\nIf you are on a chain that has not been upgraded yet, you need to add `Weight: 'u32'` to your types to allow for successful parsing of all events. Without this override, parsing will fail. As soon as one event in the `Vec<EventRecord>` structure from `system.events` fails to parse, all subsequent events are affected and the decoding will return an error.\n\nOn a non-current, non Substrate 2.0 branch, my balances are wrong[\u200b](#on-a-non-current-non-substrate-20-branch-my-balances-are-wrong \"Direct link to On a non-current, non Substrate 2.0 branch, my balances are wrong\")\n\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nAs part of the Substrate 2.0 release, the `RefCount` type has been changed from `u8` to a `u32`. Since the API always tracks latest Substrate, this change has been applied by default. The impact of this type is that it is used in the `AccountInfo` type which is returned from `system.account`, which, in turn, tracks balances.\n\nIf on an older version of the chain, apply the older type via `RefCount: 'u8'` to your types.\n\nWhich API can I use to query by transaction hash?[\u200b](#which-api-can-i-use-to-query-by-transaction-hash \"Direct link to Which API can I use to query by transaction hash?\")\n\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nThere is no such API. Substrate does not expose a \"query-by-tx-hash\" RPC, nor are transactions indexed by hash on the Substrate node. The reason for this is that transaction hashes are non-unique across the chain, although they will generally be unique inside a block.\n\nFor more information around this, refer to the Polkadot wiki [on unique extrinsic identifiers](https://wiki.polkadot.network/docs/en/build-protocol-info#unique-identifiers-for-extrinsics)\n.\n\nSince upgrading to the 7.x series, TypeScript augmentation is missing[\u200b](#since-upgrading-to-the-7x-series-typescript-augmentation-is-missing \"Direct link to Since upgrading to the 7.x series, TypeScript augmentation is missing\")\n\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nFor TS users, since the 7.x release, type augmentation is not applied by default to the API anymore. This could manifest in various ways,\n\n*   query results may just return `Codec` instead of the actual expected type\n*   dependent packages, e.g. `api-derive` or `api-contract` may yield TS errors\n\nHistorically Substrate-specific types and endpoints were auto-augmented, which worked in 95% of cases, until any known module was changed/extended from default Substrate behavior or types were extended or adjusted from what Substrate exposes. This resulted in any type overrides working in some cases and returning type errors in other critical areas, without a way of adjusting this correctly for the TS compiler.\n\nSince the start of the 7.x series, type augmentation is to be applied explicitly. To restore Substrate-only types as found earlier versions, an `import '@polkadot/api-augment'` is to be added to your codebase entry point _before_ any imports from the API itself. The various shipped aliases available are the folowing -\n\n*   `import '@polkadot/api-augment/substrate'` - same as the `@polkadot/api-augment` form, the default (and what was applied before the 7.x release)\n*   `import '@polkadot/api-augment/kusama'` - applies Kusama types and endpoint augmentation\n*   `import '@polkadot/api-augment/polkadot'` - applies Polkadot types and endpoint augmentation\n\nFor non-Kusama/Polkadot chains, the above imports should be skipped completely and only the augmentation for the specific chain, as published by the teams themselves (generated via the `typegen` package), should be imported.\n\nInternally the `api-augment` when included applies 3 different API augmentations based on the import applied -\n\n*   applies all augmentation for tx, query, const, event endpoints for the specific chain\n*   `import '@polkadot/rpc-augment'` - to decorate all RPC endpoints with defaults for Substrate\n*   `import '@polkadot/types-augment'` - applying all generic Substrate types, this includes\n    *   `import '@polkadot/types-augment/lookup'` for Substrate/Kusama/Polkadot lookup types\n    *   `import '@polkadot/types-augment/registry'` for Substrate-specific registry types\n\nThe above breakdown could be useful to tweak and include _some_ types, while excluding others.\n\n[Edit this page](https://github.com/polkadot-js/docs/edit/master/docs/api/FAQ.md)\n\n[Previous\\\n\\\nGet chain information](/docs/api/examples/promise/chain-info)\n[Next\\\n\\\nOverview](/docs/substrate)\n\n*   [I am getting a \"Unknown types found, no types for ...\" error](#i-am-getting-a-unknown-types-found-no-types-for--error)\n    \n*   [I am getting a \"Metadata:: failed on MagicNumber\" error](#i-am-getting-a-metadata-failed-on-magicnumber-error)\n    \n*   [The node returns a \"Could not convert\" error on send](#the-node-returns-a-could-not-convert-error-on-send)\n    \n*   [I cannot send transactions, sending yields decoding failures](#i-cannot-send-transactions-sending-yields-decoding-failures)\n    \n*   [I would like to sign transactions offline](#i-would-like-to-sign-transactions-offline)\n    \n*   [I would like to send a root transaction](#i-would-like-to-send-a-root-transaction)\n    \n*   [How do I call a function with a Tuple input](#how-do-i-call-a-function-with-a-tuple-input)\n    \n*   [How long do transactions live](#how-long-do-transactions-live)\n    \n*   [My chain does not support system.account queries](#my-chain-does-not-support-systemaccount-queries)\n    \n*   [Using a non-current-master node, I have issues parsing events](#using-a-non-current-master-node-i-have-issues-parsing-events)\n    \n*   [On a non-current, non Substrate 2.0 branch, my balances are wrong](#on-a-non-current-non-substrate-20-branch-my-balances-are-wrong)\n    \n*   [Which API can I use to query by transaction hash?](#which-api-can-i-use-to-query-by-transaction-hash)\n    \n*   [Since upgrading to the 7.x series, TypeScript augmentation is missing](#since-upgrading-to-the-7x-series-typescript-augmentation-is-missing)"}, {"title": null, "description": null, "source_url": "https://polkadot.js.org/docs/api/start", "markdown": "[Skip to main content](#__docusaurus_skipToContent_fallback)\n\n[![polkadot{.js}](https://polkadot.js.org/docs/img/logo.svg)\\\n\\\n**polkadot{.js}**](/docs/)\n\n[Apps UI (Wallet)](https://polkadot.js.org/apps/)\n[GitHub](https://github.com/polkadot-js/docs)\n\nSearch...\n\n*   [Introduction](#)\n    \n*   [API](#)\n    \n    *   [Overview](/docs/api)\n        \n    *   [Getting started](#)\n        \n        *   [Overview](/docs/api/start)\n            \n        *   [Installation](/docs/api/start/install)\n            \n        *   [Basics & Metadata](/docs/api/start/basics)\n            \n        *   [Create an instance](/docs/api/start/create)\n            \n        *   [Runtime constants](/docs/api/start/api.consts)\n            \n        *   [State queries](/docs/api/start/api.query)\n            \n        *   [RPC queries](/docs/api/start/api.rpc)\n            \n        *   [Query subscriptions](/docs/api/start/api.query.subs)\n            \n        *   [Multi queries](/docs/api/start/api.query.multi)\n            \n        *   [Query extras](/docs/api/start/api.query.other)\n            \n        *   [Transactions](/docs/api/start/api.tx)\n            \n        *   [Keyring](/docs/api/start/keyring)\n            \n        *   [Transaction subscriptions](/docs/api/start/api.tx.subs)\n            \n        *   [Complex transactions](/docs/api/start/api.tx.wrap)\n            \n        *   [Type basics](/docs/api/start/types.basics)\n            \n        *   [Extending types](/docs/api/start/types.extend)\n            \n        *   [Custom RPC](/docs/api/start/rpc.custom)\n            \n        *   [Type creation](/docs/api/start/types.create)\n            \n        *   [TypeScript interfaces](/docs/api/start/typescript)\n            \n        *   [TypeScript user generated](/docs/api/start/typescript.user)\n            \n    *   [Cookbook](#)\n        \n    *   [Examples](#)\n        \n    *   [FAQ](/docs/api/FAQ)\n        \n*   [Metadata](#)\n    \n*   [Keyring](#)\n    \n*   [Crypto Utilities](#)\n    \n*   [Contracts (API)](#)\n    \n*   [Identicon (UI)](#)\n    \n*   [Keyring (UI)](#)\n    \n*   [Extension](#)\n    \n*   [Run, Bundle, Test](#)\n    \n\n*   [](/docs/)\n    \n*   API\n*   Getting started\n*   Overview\n\nOn this page\n\nOverview\n========\n\nThese sections should provide you with all the information needed to install the `@polkadot/api` package, understand the structure of the interfaces and allow you to start using it. For existing users this really should be titled \"Things I wish I knew before I started using the api\" - it really aims to close the gap to allow anybody to get to grips with using the packages.\n\nWe are basing all our examples on the [ApiPromise](/docs/api/examples/promise)\n version of the API, however there is also an RxJS version available. Since Promises are a part of the ES2015 specification, it covers the greater amount of use and is the one that will be used in 95% of the cases and should be familiar to 100% of all developers.\n\nFor now... just ignore the various flavors and focus on understanding the concepts.\n\nES2015 Usage and examples[\u200b](#es2015-usage-and-examples \"Direct link to ES2015 Usage and examples\")\n\n----------------------------------------------------------------------------------------------------\n\nBefore we jump into the guide, be aware that in all cases we are using ES2015, including using things like `async`/`await`, `import` and others. Depending on your environment, this may require some adjustments.\n\nWhile we are using the `await` naked in all examples (this removes boilerplate and allows us to focus on the actual libraries), and unless your environment supports top-level await, it will need to be wrapped in an `async` block. So basically to make it run-able we should wrap all samples inside a `async function main () { ... }` and then just call `main().then(() => console.log('completed'))`.\n\nIn the case of Node.js you would change the `import` into `require`, i.e.\n\n    // Importconst { ApiPromise, WsProvider } = require('@polkadot/api');...\n\nWhile Node.js versions `>=12` support the `import` syntax, we are only exporting CommonJS modules, hence the need for require.\n\nWhat this is not[\u200b](#what-this-is-not \"Direct link to What this is not\")\n\n-------------------------------------------------------------------------\n\nThis is not line-by-line documentation of all the existing function calls available, nor it is tied to a specific chain. (Although the examples do refer to the base Polkadot & Substrate chains). There will be some things in the API that are probably not covered, which brings us to the next point...\n\nHelp us help others[\u200b](#help-us-help-others \"Direct link to Help us help others\")\n\n----------------------------------------------------------------------------------\n\nIf you spot gaps in the information provided, or are uncertain about any specific area, please do [log an issue](https://github.com/polkadot-js/docs/issues)\n or if you are that way inclined, make a pull-request. We really want to have good documentation in these areas and allow people to be productive right from the start.\n\nReady? Steady? Go![\u200b](https://polkadot.js.org/docs/api/start#ready-steady-go%20%22Direct%20link%20to%20Ready?%20Steady?%20Go!%22)\n\n----------------------------------------------------------------------------\n\nIf you already have a good grasp on the API and are just looking for a specific answer, you may want to take a look at the [Frequently Asked Questions](/docs/api/FAQ)\n. With all that said, let's get started... [What should be installed, and how should we do it?](/docs/api/start/install)\n\n[Edit this page](https://github.com/polkadot-js/docs/edit/master/docs/api/start/intro.md)\n\n[Previous\\\n\\\nOverview](/docs/api)\n[Next\\\n\\\nInstallation](/docs/api/start/install)\n\n*   [ES2015 Usage and examples](#es2015-usage-and-examples)\n    \n*   [What this is not](#what-this-is-not)\n    \n*   [Help us help others](#help-us-help-others)\n    \n*   [Ready? Steady? Go!](#ready-steady-go)"}, {"title": null, "description": null, "source_url": "https://polkadot.js.org/docs/extension", "markdown": "[Skip to main content](#__docusaurus_skipToContent_fallback)\n\n[![polkadot{.js}](https://polkadot.js.org/docs/img/logo.svg)\\\n\\\n**polkadot{.js}**](/docs/)\n\n[Apps UI (Wallet)](https://polkadot.js.org/apps/)\n[GitHub](https://github.com/polkadot-js/docs)\n\nSearch...\n\n*   [Introduction](#)\n    \n*   [API](#)\n    \n*   [Metadata](#)\n    \n*   [Keyring](#)\n    \n*   [Crypto Utilities](#)\n    \n*   [Contracts (API)](#)\n    \n*   [Identicon (UI)](#)\n    \n*   [Keyring (UI)](#)\n    \n*   [Extension](#)\n    \n    *   [Overview](/docs/extension)\n        \n    *   [Usage](/docs/extension/usage)\n        \n    *   [Cookbook](/docs/extension/cookbook)\n        \n    *   [FAQ](/docs/extension/FAQ)\n        \n*   [Run, Bundle, Test](#)\n    \n\n*   [](/docs/)\n    \n*   Extension\n*   Overview\n\nOverview\n========\n\nThe [@polkadot/extension-dapp](https://www.npmjs.com/package/@polkadot/extension-dapp)\n package provides an extractor that manipulates the `window.injectedWeb3` to retrieve all the providers added to the page. It has a number of utilities\n\n*   `web3Enable(dappName: string): Promise<InjectedExtension[]>` - to be called before anything else, retrieves the list of all injected extensions/providers\n*   `web3Accounts(): Promise<InjectedAccountWithMeta[]>` - returns a list of all the injected accounts, across all extensions (source in meta)\n*   `web3AccountsSubscribe(cb: (accounts: InjectedAccountWithMeta[]) => any): Promise<Unsubcall>` - subscribes to the accounts across all extensions, returning a full list as changes are made\n*   `web3FromAddress(address: string): Promise<InjectedExtension>` - Retrieves a provider for a specific address\n*   `web3FromSource(name: string): Promise<InjectedExtension>` - Retrieves a provider identified by the name\n*   `isWeb3Injected: boolean` - boolean to indicate if `injectedWeb3` was found on the page\n*   `web3EnablePromise: Promise<InjectedExtension[]> | null` - `null` or the promise as a result of the last call to `web3Enable`\n\nTo get started, follow the [installation and usage](/docs/extension/usage)\n walk through.\n\n[Edit this page](https://github.com/polkadot-js/docs/edit/master/docs/extension/intro.md)\n\n[Previous\\\n\\\nLoading saved pairs](/docs/ui-keyring/start/loading)\n[Next\\\n\\\nUsage](/docs/extension/usage)"}, {"title": null, "description": null, "source_url": "https://polkadot.js.org/docs/extension/cookbook", "markdown": "[Skip to main content](#__docusaurus_skipToContent_fallback)\n\n[![polkadot{.js}](https://polkadot.js.org/docs/img/logo.svg)\\\n\\\n**polkadot{.js}**](/docs/)\n\n[Apps UI (Wallet)](https://polkadot.js.org/apps/)\n[GitHub](https://github.com/polkadot-js/docs)\n\nSearch...\n\n*   [Introduction](#)\n    \n*   [API](#)\n    \n*   [Metadata](#)\n    \n*   [Keyring](#)\n    \n*   [Crypto Utilities](#)\n    \n*   [Contracts (API)](#)\n    \n*   [Identicon (UI)](#)\n    \n*   [Keyring (UI)](#)\n    \n*   [Extension](#)\n    \n    *   [Overview](/docs/extension)\n        \n    *   [Usage](/docs/extension/usage)\n        \n    *   [Cookbook](/docs/extension/cookbook)\n        \n    *   [FAQ](/docs/extension/FAQ)\n        \n*   [Run, Bundle, Test](#)\n    \n\n*   [](/docs/)\n    \n*   Extension\n*   Cookbook\n\nOn this page\n\nCookbook\n========\n\nA set of code snippets ready to be used.\n\nGet all extensions accounts[\u200b](#get-all-extensions-accounts \"Direct link to Get all extensions accounts\")\n\n----------------------------------------------------------------------------------------------------------\n\nA dapp will not be aware whether or not the user has the extension installed on their browser until the `web3Enable` function is called. Calling this function returns the amount of extensions installed and for which the user has accepted to share their accounts. Using `web3Accounts`, you can then retrieve the visible accounts. See [below for `web3AccountsSubscribe`](#subscription-to-extensions-accounts)\n usage.\n\n    import { web3Accounts, web3Enable, web3FromSource } from '@polkadot/extension-dapp';// this call fires up the authorization popupconst extensions = await web3Enable('my cool dapp');if (extensions.length === 0) {    // no extension installed, or the user did not accept the authorization    // in this case we should inform the use and give a link to the extension    return;}// we are now informed that the user has at least one extension and that we// will be able to show and use accountsconst allAccounts = await web3Accounts();\n\nSign a message[\u200b](#sign-a-message \"Direct link to Sign a message\")\n\n-------------------------------------------------------------------\n\nHere is an example on how to sign a message with an account that was injected by the extension.\n\n    import { stringToHex } from \"@polkadot/util\";// `account` is of type InjectedAccountWithMeta // We arbitrarily select the first account returned from the above snippetconst account = allAccounts[0];// to be able to retrieve the signer interface from this account// we can use web3FromSource which will return an InjectedExtension typeconst injector = await web3FromSource(account.meta.source);// this injector object has a signer and a signRaw method// to be able to sign raw bytesconst signRaw = injector?.signer?.signRaw;if (!!signRaw) {    // after making sure that signRaw is defined    // we can use it to sign our message    const { signature } = await signRaw({        address: account.address,        data: stringToHex('message to sign'),        type: 'bytes'    });}\n\nHead to the relevant [util-crypto](/docs/util-crypto/examples/verify-signature)\n example to see how to verify a signature.\n\nSign and send a transaction[\u200b](#sign-and-send-a-transaction \"Direct link to Sign and send a transaction\")\n\n----------------------------------------------------------------------------------------------------------\n\nThe api is able to retrieve the signer when `signAndSend` is called with the address from an account retrieved from the extension.\n\n    // `account` is of type InjectedAccountWithMeta // We arbitrarily select the first account returned from the above snippetconst account = allAccounts[0];// here we use the api to create a balance transfer to some account of a value of 12344const transferExtrinsic = api.tx.balances.transfer('5C5555yEXUcmEJ5kkcCMvdZjUo7NGJiQJMS7vZXEeoMhj3VQ', 123456)// to be able to retrieve the signer interface from this account// we can use web3FromSource which will return an InjectedExtension typeconst injector = await web3FromSource(account.meta.source);// passing the injected account address as the first argument of signAndSend// will allow the api to retrieve the signer and the user will see the extension// popup asking to sign the balance transfer transactiontransferExtrinsic.signAndSend(account.address, { signer: injector.signer }, ({ status }) => {    if (status.isInBlock) {        console.log(`Completed at block hash #${status.asInBlock.toString()}`);    } else {        console.log(`Current status: ${status.type}`);    }}).catch((error: any) => {    console.log(':( transaction failed', error);});\n\nSubscription to extensions' accounts[\u200b](#subscription-to-extensions-accounts \"Direct link to Subscription to extensions' accounts\")\n\n------------------------------------------------------------------------------------------------------------------------------------\n\nUsing `web3AccountsSubscribe` similarly as what we did above with `web3Accounts` allows to get all injected accounts, in this case though because we use a subscription, we will be aware of any account change.\n\n    import { web3AccountsSubscribe, web3Enable } from '@polkadot/extension-dapp';// this call fires up the authorization popupconst extensions = await web3Enable('my cool dapp');if (extensions.length === 0) {    // no extension installed, or the user did not accept the authorization    // in this case we should inform the user and give a link to the extension    return;}// we are now informed that the user has at least one extension and that we// will be able to show and use accountslet unsubscribe; // this is the function of type `() => void` that should be called to unsubscribe// we subscribe to any account change and log the new list.// note that `web3AccountsSubscribe` returns the function to unsubscribeunsubscribe = await web3AccountsSubscribe(( injectedAccounts ) => {     injectedAccounts.map(( account ) => {        console.log(account.address);    }) });// don't forget to unsubscribe when needed, e.g when unmounting a componentunsubscribe && unsubscribe();\n\n[Edit this page](https://github.com/polkadot-js/docs/edit/master/docs/extension/cookbook.md)\n\n[Previous\\\n\\\nUsage](/docs/extension/usage)\n[Next\\\n\\\nFAQ](/docs/extension/FAQ)\n\n*   [Get all extensions accounts](#get-all-extensions-accounts)\n    \n*   [Sign a message](#sign-a-message)\n    \n*   [Sign and send a transaction](#sign-and-send-a-transaction)\n    \n*   [Subscription to extensions' accounts](#subscription-to-extensions-accounts)"}, {"title": null, "description": null, "source_url": "https://polkadot.js.org/docs/extension/FAQ", "markdown": "[Skip to main content](#__docusaurus_skipToContent_fallback)\n\n[![polkadot{.js}](https://polkadot.js.org/docs/img/logo.svg)\\\n\\\n**polkadot{.js}**](/docs/)\n\n[Apps UI (Wallet)](https://polkadot.js.org/apps/)\n[GitHub](https://github.com/polkadot-js/docs)\n\nSearch...\n\n*   [Introduction](#)\n    \n*   [API](#)\n    \n*   [Metadata](#)\n    \n*   [Keyring](#)\n    \n*   [Crypto Utilities](#)\n    \n*   [Contracts (API)](#)\n    \n*   [Identicon (UI)](#)\n    \n*   [Keyring (UI)](#)\n    \n*   [Extension](#)\n    \n    *   [Overview](/docs/extension)\n        \n    *   [Usage](/docs/extension/usage)\n        \n    *   [Cookbook](/docs/extension/cookbook)\n        \n    *   [FAQ](/docs/extension/FAQ)\n        \n*   [Run, Bundle, Test](#)\n    \n\n*   [](/docs/)\n    \n*   Extension\n*   FAQ\n\nOn this page\n\nFAQ\n===\n\nThe list will be updated/expanded as questions come up.\n\nHow to report a phishing website so that the extension can warn users?[\u200b](#how-to-report-a-phishing-website-so-that-the-extension-can-warn-users \"Direct link to How to report a phishing website so that the extension can warn users?\")\n\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nThe extension fetches the list of denied website from [https://github.com/polkadot-js/phishing](https://github.com/polkadot-js/phishing)\n repository. To help populate this list, please submit a pull request by editing [all.json](https://github.com/polkadot-js/phishing/edit/master/all.json)\n and adding any new sites in alphabetical order.  \nAlternatively, you can [submit an issue](https://github.com/polkadot-js/phishing/issues/new)\n to mention any new website.\n\nHow to help with the translation of the extension's interface?[\u200b](#how-to-help-with-the-translation-of-the-extensions-interface \"Direct link to How to help with the translation of the extension's interface?\")\n\n-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nTo add a new language, you can submit a PR to the [extension's repository](https://github.com/polkadot-js/extension)\n. Start by creating a new directory in `extension/packages/extension/public/locales/` named after the language code you wish to add (e.g \"es\", for spanish).  \nCopy the file `translation.json` [from the english directory](https://github.com/polkadot-js/extension/blob/master/packages/extension/public/locales/en/translation.json)\n to the newly created directory and fill in the blanks. Take a look at the other translation files to see how it works.  \nFinally, add the new language in the selection menu by adding its name and code to the array returned by the [getLanguageOptions](https://github.com/polkadot-js/extension/blob/master/packages/extension-ui/src/util/getLanguageOptions.ts#L12-L27)\n.  \nOnce your PR is submitted and approved, the new language will be available in the next release of the extension.\n\nI want to send funds directly from the extension.[\u200b](#i-want-to-send-funds-directly-from-the-extension \"Direct link to I want to send funds directly from the extension.\")\n\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nThe extension is not meant to be a full wallet replacement. It tries to focus on pure account management while making this as smooth as possible. The extension simply makes the stored/imported accounts available to any dApp that can perform transfers, allows you to vote on democracy proposals, and helps you participate in any features available on Polkadot and Substrate. We really aim to keep this singular account-only focus with no network connectivity, leaving the hard-work of understanding chains and their intricacies over to over to wallets such as [polkadot-js/apps](https://polkadot.js.org/apps/)\n.\n\nMy addresses display differently on the extension vs a dapp.[\u200b](#my-addresses-display-differently-on-the-extension-vs-a-dapp \"Direct link to My addresses display differently on the extension vs a dapp.\")\n\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nUnlike a dapp, the extension itself does not connect to a network. The addresses are formatted with a network-specific prefix, which on a dapp, is retrieved upon connection from the chain properties. The underlying public keys can be the same, but based on the address formatting, the display could be different. This does not affect operation at all. You can choose which format to display the addresses in your extension via the \"Options\" screen.\n\nWhat does it mean to derive an account?[\u200b](#what-does-it-mean-to-derive-an-account \"Direct link to What does it mean to derive an account?\")\n\n---------------------------------------------------------------------------------------------------------------------------------------------\n\nWe can imagine that accounts are stored as a tree. It allows us to structure accounts by our own needs. The root account is created at first and all the new ones will be its children by default. If we want to derive from other accounts, it can be done by selecting Derive New Account option in the parent account\u2019s context menu. Before deriving an account, the [HDKD derivation path](https://github.com/paritytech/parity-signer/wiki/HDKD-on-Parity-Signer#the-form-of-path)\n can be provided - it is a great tool that could be used for further account structuring.\n\nThe format of a derivation path is `//<hard>/<soft>///<password>` where\n\n*   `//hard` means that the connection between accounts is not \u201cvisible\u201d for public addresses.\n*   `/soft` connects accounts in a manner that can be proven.\n*   `///password` provides an additional (optional) encryption.\n\nWhy can't I import an account with a hex-encoded private key?[\u200b](#why-cant-i-import-an-account-with-a-hex-encoded-private-key \"Direct link to Why can't I import an account with a hex-encoded private key?\")\n\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nThis is a deliberate choice since mnemonic phrases are easier to write down, to memorize or type in a field. They have a checksum (not every 12/24 words list is a valid mnemonic) and constitute a much better means of holding un-encrypted information. Therefore, this extension does not and will not have the functionality to recover an account from a hex seed phrase.\n\n[Edit this page](https://github.com/polkadot-js/docs/edit/master/docs/extension/FAQ.md)\n\n[Previous\\\n\\\nCookbook](/docs/extension/cookbook)\n[Next\\\n\\\nFAQ](/docs/usage/FAQ)\n\n*   [How to report a phishing website so that the extension can warn users?](#how-to-report-a-phishing-website-so-that-the-extension-can-warn-users)\n    \n*   [How to help with the translation of the extension's interface?](#how-to-help-with-the-translation-of-the-extensions-interface)\n    \n*   [I want to send funds directly from the extension.](#i-want-to-send-funds-directly-from-the-extension)\n    \n*   [My addresses display differently on the extension vs a dapp.](#my-addresses-display-differently-on-the-extension-vs-a-dapp)\n    \n*   [What does it mean to derive an account?](#what-does-it-mean-to-derive-an-account)\n    \n*   [Why can't I import an account with a hex-encoded private key?](#why-cant-i-import-an-account-with-a-hex-encoded-private-key)"}, {"title": null, "description": null, "source_url": "https://polkadot.js.org/docs/extension/usage", "markdown": "[Skip to main content](#__docusaurus_skipToContent_fallback)\n\n[![polkadot{.js}](https://polkadot.js.org/docs/img/logo.svg)\\\n\\\n**polkadot{.js}**](/docs/)\n\n[Apps UI (Wallet)](https://polkadot.js.org/apps/)\n[GitHub](https://github.com/polkadot-js/docs)\n\nSearch...\n\n*   [Introduction](#)\n    \n*   [API](#)\n    \n*   [Metadata](#)\n    \n*   [Keyring](#)\n    \n*   [Crypto Utilities](#)\n    \n*   [Contracts (API)](#)\n    \n*   [Identicon (UI)](#)\n    \n*   [Keyring (UI)](#)\n    \n*   [Extension](#)\n    \n    *   [Overview](/docs/extension)\n        \n    *   [Usage](/docs/extension/usage)\n        \n    *   [Cookbook](/docs/extension/cookbook)\n        \n    *   [FAQ](/docs/extension/FAQ)\n        \n*   [Run, Bundle, Test](#)\n    \n\n*   [](/docs/)\n    \n*   Extension\n*   Usage\n\nUsage\n=====\n\nTo install the component, do `yarn add @polkadot/extension-dapp` Here is a brief walk through how to use the different utilities from @polkadot/extension-dapp.\n\n    import { web3Accounts, web3Enable, web3FromAddress } from '@polkadot/extension-dapp';// returns an array of all the injected sources// (this needs to be called first, before other requests)const allInjected = await web3Enable('my cool dapp');// returns an array of { address, meta: { name, source } }// meta.source contains the name of the extension that provides this accountconst allAccounts = await web3Accounts();// the address we use to use for signing, as injectedconst SENDER = '5DTestUPts3kjeXSTMyerHihn1uwMfLj8vU8sqF7qYrFabHE';// finds an injector for an addressconst injector = await web3FromAddress(SENDER);// sign and send our transaction - notice here that the address of the account// (as retrieved injected) is passed through as the param to the `signAndSend`,// the API then calls the extension to present to the user and get it signed.// Once complete, the api sends the tx + signature via the normal processapi.tx.balances  .transfer('5C5555yEXUcmEJ5kkcCMvdZjUo7NGJiQJMS7vZXEeoMhj3VQ', 123456)  .signAndSend(SENDER, { signer: injector.signer }, (status) => { ... });\n\n[Edit this page](https://github.com/polkadot-js/docs/edit/master/docs/extension/usage.md)\n\n[Previous\\\n\\\nOverview](/docs/extension)\n[Next\\\n\\\nCookbook](/docs/extension/cookbook)"}, {"title": null, "description": null, "source_url": "https://polkadot.js.org/docs/keyring", "markdown": "[Skip to main content](#__docusaurus_skipToContent_fallback)\n\n[![polkadot{.js}](https://polkadot.js.org/docs/img/logo.svg)\\\n\\\n**polkadot{.js}**](/docs/)\n\n[Apps UI (Wallet)](https://polkadot.js.org/apps/)\n[GitHub](https://github.com/polkadot-js/docs)\n\nSearch...\n\n*   [Introduction](#)\n    \n*   [API](#)\n    \n*   [Metadata](#)\n    \n*   [Keyring](#)\n    \n    *   [Overview](/docs/keyring)\n        \n    *   [Getting started](#)\n        \n    *   [FAQ](/docs/keyring/FAQ)\n        \n*   [Crypto Utilities](#)\n    \n*   [Contracts (API)](#)\n    \n*   [Identicon (UI)](#)\n    \n*   [Keyring (UI)](#)\n    \n*   [Extension](#)\n    \n*   [Run, Bundle, Test](#)\n    \n\n*   [](/docs/)\n    \n*   Keyring\n*   Overview\n\nOverview\n========\n\nThe Keyring allows you to manage a set of keys in a consistent environment, allows you to perform operations on these keys (such as sign/verify) and never exposes the secretKey to the outside world.\n\nTo get started, follow the [getting started](/docs/keyring/start)\n journey for installation and use. For oft-repeated questions, the [FAQ](/docs/keyring/FAQ)\n may have what you are looking for.\n\n[Edit this page](https://github.com/polkadot-js/docs/edit/master/docs/keyring/intro.md)\n\n[Previous\\\n\\\nErrors](/docs/kusama/errors)\n[Next\\\n\\\nOverview](/docs/keyring/start)"}, {"title": null, "description": null, "source_url": "https://polkadot.js.org/docs/keyring/examples", "markdown": "[Skip to main content](#__docusaurus_skipToContent_fallback)\n\n[![polkadot{.js}](https://polkadot.js.org/docs/img/logo.svg)\\\n\\\n**polkadot{.js}**](/docs/)\n\n[Apps UI (Wallet)](https://polkadot.js.org/apps/)\n[GitHub](https://github.com/polkadot-js/docs)\n\nSearch...\n\nOn this page\n\nOverview\n========\n\nHere you will find a list of examples that takes you through the basics of using the keyring.\n\nRunning the examples[\u200b](#running-the-examples \"Direct link to Running the examples\")\n\n-------------------------------------------------------------------------------------\n\nFrom within each folder run the following to install required dependencies and to execute the example:\n\n    yarn;yarn start\n\n[Edit this page](https://github.com/polkadot-js/docs/edit/master/docs/keyring/examples/intro.md)\n\n*   [Running the examples](#running-the-examples)"}, {"title": null, "description": null, "source_url": "https://polkadot.js.org/docs/keyring/FAQ", "markdown": "[Skip to main content](#__docusaurus_skipToContent_fallback)\n\n[![polkadot{.js}](https://polkadot.js.org/docs/img/logo.svg)\\\n\\\n**polkadot{.js}**](/docs/)\n\n[Apps UI (Wallet)](https://polkadot.js.org/apps/)\n[GitHub](https://github.com/polkadot-js/docs)\n\nSearch...\n\n*   [Introduction](#)\n    \n*   [API](#)\n    \n*   [Metadata](#)\n    \n*   [Keyring](#)\n    \n    *   [Overview](/docs/keyring)\n        \n    *   [Getting started](#)\n        \n    *   [FAQ](/docs/keyring/FAQ)\n        \n*   [Crypto Utilities](#)\n    \n*   [Contracts (API)](#)\n    \n*   [Identicon (UI)](#)\n    \n*   [Keyring (UI)](#)\n    \n*   [Extension](#)\n    \n*   [Run, Bundle, Test](#)\n    \n\n*   [](/docs/)\n    \n*   Keyring\n*   FAQ\n\nOn this page\n\nFAQ\n===\n\nThe list will be updated/expanded as questions come up, dealing with some common issues that Keyring users find.\n\nHow do I extract the secretKey from the keypair?[\u200b](#how-do-i-extract-the-secretkey-from-the-keypair \"Direct link to How do I extract the secretKey from the keypair?\")\n\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nIt is not possible. Each pair has a closure around the actual sensitive information and while it exposes functions to use the secret, it does not expose the secret itself. So while there is a `.publicKey` getter on a pair, the equivalent `.secretKey` does not exist. Doing this allows extra protection for a certain kinds of attacks and leaks of keys in all JS-based environments.\n\nIf the interfaces on the pair are not enough and explicit access to the secret is required, the best approach would be to explicitly derive the keys (e.g., the mnemonic). As example of an [ed25519 secretKey extraction](/docs/util-crypto/examples/create-mnemonic)\n can be found in the util-crypto examples.\n\nMy pair address does not match with my chain[\u200b](#my-pair-address-does-not-match-with-my-chain \"Direct link to My pair address does not match with my chain\")\n\n-------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nBy default the keyring will use the substrate generic 42 as an ss58Format [when not specified](/docs/keyring/start/create)\n. In these cases all addresses will start with a `5`. To match with the address for a specific Substrate chain, pass the correct format as defined in the chain properties.\n\nWhile the address [represents the same underlying publicKey](/docs/keyring/start/ss58)\n despite how it is represented, the human-readable format will be different based on the formatting provided.\n\n[Edit this page](https://github.com/polkadot-js/docs/edit/master/docs/keyring/FAQ.md)\n\n[Previous\\\n\\\nSubstrate Uri](/docs/keyring/start/suri)\n[Next\\\n\\\nOverview](/docs/util-crypto)\n\n*   [How do I extract the secretKey from the keypair?](#how-do-i-extract-the-secretkey-from-the-keypair)\n    \n*   [My pair address does not match with my chain](#my-pair-address-does-not-match-with-my-chain)"}, {"title": null, "description": null, "source_url": "https://polkadot.js.org/docs/keyring/start", "markdown": "[Skip to main content](#__docusaurus_skipToContent_fallback)\n\n[![polkadot{.js}](https://polkadot.js.org/docs/img/logo.svg)\\\n\\\n**polkadot{.js}**](/docs/)\n\n[Apps UI (Wallet)](https://polkadot.js.org/apps/)\n[GitHub](https://github.com/polkadot-js/docs)\n\nSearch...\n\n*   [Introduction](#)\n    \n*   [API](#)\n    \n*   [Metadata](#)\n    \n*   [Keyring](#)\n    \n    *   [Overview](/docs/keyring)\n        \n    *   [Getting started](#)\n        \n        *   [Overview](/docs/keyring/start)\n            \n        *   [Installation](/docs/keyring/start/install)\n            \n        *   [Basics](/docs/keyring/start/basics)\n            \n        *   [Create](/docs/keyring/start/create)\n            \n        *   [ss58 Formats](/docs/keyring/start/ss58)\n            \n        *   [Sign & Verify](/docs/keyring/start/sign-verify)\n            \n        *   [Substrate Uri](/docs/keyring/start/suri)\n            \n    *   [FAQ](/docs/keyring/FAQ)\n        \n*   [Crypto Utilities](#)\n    \n*   [Contracts (API)](#)\n    \n*   [Identicon (UI)](#)\n    \n*   [Keyring (UI)](#)\n    \n*   [Extension](#)\n    \n*   [Run, Bundle, Test](#)\n    \n\n*   [](/docs/)\n    \n*   Keyring\n*   Getting started\n*   Overview\n\nOn this page\n\nOverview\n========\n\nThese sections should provide you with all the information needed to install the `@polkadot/keyring` package, understand the structure of the interfaces and allow you to start using it. For existing users this really should be titled \"Things I wish I knew before I started using the keyring\" - it really aims to close the gap to allow anybody to get to grips with using the package.\n\nES2015 Usage and examples[\u200b](#es2015-usage-and-examples \"Direct link to ES2015 Usage and examples\")\n\n----------------------------------------------------------------------------------------------------\n\nBefore we jump into the guide, be aware that in all cases we are using ES2015, including using things like `async`/`await`, `import` and others. Depending on your environment, this may require some adjustments.\n\nWhile we are using the `await` naked in all examples (this removes boilerplate and allows us to focus on the actual libraries), and unless your environment supports top-level await, it will need to be wrapped in an `async` block. So basically to make it run-able we should wrap all samples inside a `async function main () { ... }` and then just call `main().then(() => console.log('completed'))`.\n\nIn the case of Node.js you would change the `import` into `require`, i.e.\n\n    // Importconst { Keyring } = require('@polkadot/keyring');...\n\nWhile Node.js as of later versions supports the `import` syntax, we are only exporting CommonJS modules, hence the need for require.\n\nWhat this is not[\u200b](#what-this-is-not \"Direct link to What this is not\")\n\n-------------------------------------------------------------------------\n\nThis is not line-by-line documentation of all the existing function calls available, nor it is tied to a specific environment. There will be some things in the Keyring that are probably not covered, which brings us to the next point...\n\nHelp us help others[\u200b](#help-us-help-others \"Direct link to Help us help others\")\n\n----------------------------------------------------------------------------------\n\nIf you spot gaps in the information provided, or are uncertain about any specific area, please do [log an issue](https://github.com/polkadot-js/docs/issues)\n or if you are that way inclined, make a pull-request. We really want to have good documentation in these areas and allow people to be productive right from the start.\n\nReady? Steady? Go![\u200b](https://polkadot.js.org/docs/keyring/start#ready-steady-go%20%22Direct%20link%20to%20Ready?%20Steady?%20Go!%22)\n\n----------------------------------------------------------------------------\n\nIf you already have a good grasp on the API and are just looking for a specific answer, you may want to take a look at the [Frequently Asked Questions](/docs/keyring/FAQ)\n. With all that said, let's get started... [What should be installed, and how should we do it?](/docs/keyring/start/install)\n\n[Edit this page](https://github.com/polkadot-js/docs/edit/master/docs/keyring/start/intro.md)\n\n[Previous\\\n\\\nOverview](/docs/keyring)\n[Next\\\n\\\nInstallation](/docs/keyring/start/install)\n\n*   [ES2015 Usage and examples](#es2015-usage-and-examples)\n    \n*   [What this is not](#what-this-is-not)\n    \n*   [Help us help others](#help-us-help-others)\n    \n*   [Ready? Steady? Go!](#ready-steady-go)"}, {"title": null, "description": null, "source_url": "https://polkadot.js.org/docs/kusama", "markdown": "[Skip to main content](#__docusaurus_skipToContent_fallback)\n\n[![polkadot{.js}](https://polkadot.js.org/docs/img/logo.svg)\\\n\\\n**polkadot{.js}**](/docs/)\n\n[Apps UI (Wallet)](https://polkadot.js.org/apps/)\n[GitHub](https://github.com/polkadot-js/docs)\n\nSearch...\n\n*   [Introduction](#)\n    \n*   [API](#)\n    \n*   [Metadata](#)\n    \n    *   [Substrate](#)\n        \n    *   [Polkadot](#)\n        \n    *   [Kusama](#)\n        \n        *   [Overview](/docs/kusama)\n            \n        *   [Runtime](/docs/kusama/runtime)\n            \n        *   [JSON-RPC](/docs/kusama/rpc)\n            \n        *   [Constants](/docs/kusama/constants)\n            \n        *   [Storage](/docs/kusama/storage)\n            \n        *   [Extrinsics](/docs/kusama/extrinsics)\n            \n        *   [Events](/docs/kusama/events)\n            \n        *   [Errors](/docs/kusama/errors)\n            \n*   [Keyring](#)\n    \n*   [Crypto Utilities](#)\n    \n*   [Contracts (API)](#)\n    \n*   [Identicon (UI)](#)\n    \n*   [Keyring (UI)](#)\n    \n*   [Extension](#)\n    \n*   [Run, Bundle, Test](#)\n    \n\n*   [](/docs/)\n    \n*   Metadata\n*   Kusama\n*   Overview\n\nOverview\n========\n\nAs part of a running node, some information is exposed as part of the metadata. These sections provide a static list of available interfaces as generated from a running Kusama node.\n\n[Edit this page](https://github.com/polkadot-js/docs/edit/master/docs/kusama/intro.md)\n\n[Previous\\\n\\\nErrors](/docs/polkadot/errors)\n[Next\\\n\\\nRuntime](/docs/kusama/runtime)"}, {"title": null, "description": null, "source_url": "https://polkadot.js.org/docs/kusama/constants", "markdown": "[Skip to main content](#__docusaurus_skipToContent_fallback)\n\n[![polkadot{.js}](https://polkadot.js.org/docs/img/logo.svg)\\\n\\\n**polkadot{.js}**](/docs/)\n\n[Apps UI (Wallet)](https://polkadot.js.org/apps/)\n[GitHub](https://github.com/polkadot-js/docs)\n\nSearch...\n\n*   [Introduction](#)\n    \n*   [API](#)\n    \n*   [Metadata](#)\n    \n    *   [Substrate](#)\n        \n    *   [Polkadot](#)\n        \n    *   [Kusama](#)\n        \n        *   [Overview](/docs/kusama)\n            \n        *   [Runtime](/docs/kusama/runtime)\n            \n        *   [JSON-RPC](/docs/kusama/rpc)\n            \n        *   [Constants](/docs/kusama/constants)\n            \n        *   [Storage](/docs/kusama/storage)\n            \n        *   [Extrinsics](/docs/kusama/extrinsics)\n            \n        *   [Events](/docs/kusama/events)\n            \n        *   [Errors](/docs/kusama/errors)\n            \n*   [Keyring](#)\n    \n*   [Crypto Utilities](#)\n    \n*   [Contracts (API)](#)\n    \n*   [Identicon (UI)](#)\n    \n*   [Keyring (UI)](#)\n    \n*   [Extension](#)\n    \n*   [Run, Bundle, Test](#)\n    \n\n*   [](/docs/)\n    \n*   Metadata\n*   Kusama\n*   Constants\n\nOn this page\n\nConstants\n=========\n\nThe following sections contain the module constants, also known as parameter types. These can only be changed as part of a runtime upgrade. On the api, these are exposed via `api.consts.<module>.<method>`.\n\n(NOTE: These were generated from a static/snapshot view of a recent default Kusama runtime. Some items may not be available in older nodes, or in any customized implementations.)\n\n*   **[auctions](#auctions)\n    **\n    \n*   **[babe](#babe)\n    **\n    \n*   **[balances](#balances)\n    **\n    \n*   **[beefy](#beefy)\n    **\n    \n*   **[bounties](#bounties)\n    **\n    \n*   **[childBounties](#childbounties)\n    **\n    \n*   **[claims](#claims)\n    **\n    \n*   **[convictionVoting](#convictionvoting)\n    **\n    \n*   **[crowdloan](#crowdloan)\n    **\n    \n*   **[electionProviderMultiPhase](#electionprovidermultiphase)\n    **\n    \n*   **[fastUnstake](#fastunstake)\n    **\n    \n*   **[fellowshipReferenda](#fellowshipreferenda)\n    **\n    \n*   **[grandpa](#grandpa)\n    **\n    \n*   **[identity](#identity)\n    **\n    \n*   **[imOnline](#imonline)\n    **\n    \n*   **[indices](#indices)\n    **\n    \n*   **[messageQueue](#messagequeue)\n    **\n    \n*   **[multisig](#multisig)\n    **\n    \n*   **[nis](#nis)\n    **\n    \n*   **[nisCounterpartBalances](#niscounterpartbalances)\n    **\n    \n*   **[nominationPools](#nominationpools)\n    **\n    \n*   **[paras](#paras)\n    **\n    \n*   **[proxy](#proxy)\n    **\n    \n*   **[recovery](#recovery)\n    **\n    \n*   **[referenda](#referenda)\n    **\n    \n*   **[registrar](#registrar)\n    **\n    \n*   **[scheduler](#scheduler)\n    **\n    \n*   **[slots](#slots)\n    **\n    \n*   **[society](#society)\n    **\n    \n*   **[staking](#staking)\n    **\n    \n*   **[stateTrieMigration](#statetriemigration)\n    **\n    \n*   **[system](#system)\n    **\n    \n*   **[timestamp](#timestamp)\n    **\n    \n*   **[transactionPayment](#transactionpayment)\n    **\n    \n*   **[treasury](#treasury)\n    **\n    \n*   **[utility](#utility)\n    **\n    \n*   **[vesting](#vesting)\n    **\n    \n*   **[voterList](#voterlist)\n    **\n    \n\n* * *\n\nauctions[\u200b](#auctions \"Direct link to auctions\")\n\n-------------------------------------------------\n\n### endingPeriod: `u32`[\u200b](#endingperiod-u32 \"Direct link to endingperiod-u32\")\n\n*   **interface**: `api.consts.auctions.endingPeriod`\n*   **summary**: The number of blocks over which an auction may be retroactively ended.\n\n### leasePeriodsPerSlot: `u32`[\u200b](#leaseperiodsperslot-u32 \"Direct link to leaseperiodsperslot-u32\")\n\n*   **interface**: `api.consts.auctions.leasePeriodsPerSlot`\n\n### sampleLength: `u32`[\u200b](#samplelength-u32 \"Direct link to samplelength-u32\")\n\n*   **interface**: `api.consts.auctions.sampleLength`\n    \n*   **summary**: The length of each sample to take during the ending period.\n    \n    `EndingPeriod` / `SampleLength` = Total # of Samples\n    \n\n### slotRangeCount: `u32`[\u200b](#slotrangecount-u32 \"Direct link to slotrangecount-u32\")\n\n*   **interface**: `api.consts.auctions.slotRangeCount`\n\n* * *\n\nbabe[\u200b](#babe \"Direct link to babe\")\n\n-------------------------------------\n\n### epochDuration: `u64`[\u200b](#epochduration-u64 \"Direct link to epochduration-u64\")\n\n*   **interface**: `api.consts.babe.epochDuration`\n*   **summary**: The amount of time, in slots, that each epoch should last. NOTE: Currently it is not possible to change the epoch duration after the chain has started. Attempting to do so will brick block production.\n\n### expectedBlockTime: `u64`[\u200b](#expectedblocktime-u64 \"Direct link to expectedblocktime-u64\")\n\n*   **interface**: `api.consts.babe.expectedBlockTime`\n*   **summary**: The expected average block time at which BABE should be creating blocks. Since BABE is probabilistic it is not trivial to figure out what the expected average block time should be based on the slot duration and the security parameter `c` (where `1 - c` represents the probability of a slot being empty).\n\n### maxAuthorities: `u32`[\u200b](#maxauthorities-u32 \"Direct link to maxauthorities-u32\")\n\n*   **interface**: `api.consts.babe.maxAuthorities`\n*   **summary**: Max number of authorities allowed\n\n### maxNominators: `u32`[\u200b](#maxnominators-u32 \"Direct link to maxnominators-u32\")\n\n*   **interface**: `api.consts.babe.maxNominators`\n*   **summary**: The maximum number of nominators for each validator.\n\n* * *\n\nbalances[\u200b](#balances \"Direct link to balances\")\n\n-------------------------------------------------\n\n### existentialDeposit: `u128`[\u200b](#existentialdeposit-u128 \"Direct link to existentialdeposit-u128\")\n\n*   **interface**: `api.consts.balances.existentialDeposit`\n    \n*   **summary**: The minimum amount required to keep an account open. MUST BE GREATER THAN ZERO!\n    \n    If you _really_ need it to be zero, you can enable the feature `insecure_zero_ed` for this pallet. However, you do so at your own risk: this will open up a major DoS vector. In case you have multiple sources of provider references, you may also get unexpected behaviour if you set this to zero.\n    \n    Bottom line: Do yourself a favour and make it at least one!\n    \n\n### maxFreezes: `u32`[\u200b](#maxfreezes-u32 \"Direct link to maxfreezes-u32\")\n\n*   **interface**: `api.consts.balances.maxFreezes`\n*   **summary**: The maximum number of individual freeze locks that can exist on an account at any time.\n\n### maxHolds: `u32`[\u200b](#maxholds-u32 \"Direct link to maxholds-u32\")\n\n*   **interface**: `api.consts.balances.maxHolds`\n*   **summary**: The maximum number of holds that can exist on an account at any time.\n\n### maxLocks: `u32`[\u200b](#maxlocks-u32 \"Direct link to maxlocks-u32\")\n\n*   **interface**: `api.consts.balances.maxLocks`\n*   **summary**: The maximum number of locks that should exist on an account. Not strictly enforced, but used for weight estimation.\n\n### maxReserves: `u32`[\u200b](#maxreserves-u32 \"Direct link to maxreserves-u32\")\n\n*   **interface**: `api.consts.balances.maxReserves`\n*   **summary**: The maximum number of named reserves that can exist on an account.\n\n* * *\n\nbeefy[\u200b](#beefy \"Direct link to beefy\")\n\n----------------------------------------\n\n### maxAuthorities: `u32`[\u200b](#maxauthorities-u32-1 \"Direct link to maxauthorities-u32-1\")\n\n*   **interface**: `api.consts.beefy.maxAuthorities`\n*   **summary**: The maximum number of authorities that can be added.\n\n### maxNominators: `u32`[\u200b](#maxnominators-u32-1 \"Direct link to maxnominators-u32-1\")\n\n*   **interface**: `api.consts.beefy.maxNominators`\n*   **summary**: The maximum number of nominators for each validator.\n\n### maxSetIdSessionEntries: `u64`[\u200b](#maxsetidsessionentries-u64 \"Direct link to maxsetidsessionentries-u64\")\n\n*   **interface**: `api.consts.beefy.maxSetIdSessionEntries`\n    \n*   **summary**: The maximum number of entries to keep in the set id to session index mapping.\n    \n    Since the `SetIdSession` map is only used for validating equivocations this value should relate to the bonding duration of whatever staking system is being used (if any). If equivocation handling is not enabled then this value can be zero.\n    \n\n* * *\n\nbounties[\u200b](#bounties \"Direct link to bounties\")\n\n-------------------------------------------------\n\n### bountyDepositBase: `u128`[\u200b](#bountydepositbase-u128 \"Direct link to bountydepositbase-u128\")\n\n*   **interface**: `api.consts.bounties.bountyDepositBase`\n*   **summary**: The amount held on deposit for placing a bounty proposal.\n\n### bountyDepositPayoutDelay: `u32`[\u200b](#bountydepositpayoutdelay-u32 \"Direct link to bountydepositpayoutdelay-u32\")\n\n*   **interface**: `api.consts.bounties.bountyDepositPayoutDelay`\n*   **summary**: The delay period for which a bounty beneficiary need to wait before claim the payout.\n\n### bountyUpdatePeriod: `u32`[\u200b](#bountyupdateperiod-u32 \"Direct link to bountyupdateperiod-u32\")\n\n*   **interface**: `api.consts.bounties.bountyUpdatePeriod`\n*   **summary**: Bounty duration in blocks.\n\n### bountyValueMinimum: `u128`[\u200b](#bountyvalueminimum-u128 \"Direct link to bountyvalueminimum-u128\")\n\n*   **interface**: `api.consts.bounties.bountyValueMinimum`\n*   **summary**: Minimum value for a bounty.\n\n### curatorDepositMax: `Option<u128>`[\u200b](#curatordepositmax-optionu128 \"Direct link to curatordepositmax-optionu128\")\n\n*   **interface**: `api.consts.bounties.curatorDepositMax`\n*   **summary**: Maximum amount of funds that should be placed in a deposit for making a proposal.\n\n### curatorDepositMin: `Option<u128>`[\u200b](#curatordepositmin-optionu128 \"Direct link to curatordepositmin-optionu128\")\n\n*   **interface**: `api.consts.bounties.curatorDepositMin`\n*   **summary**: Minimum amount of funds that should be placed in a deposit for making a proposal.\n\n### curatorDepositMultiplier: `Permill`[\u200b](#curatordepositmultiplier-permill \"Direct link to curatordepositmultiplier-permill\")\n\n*   **interface**: `api.consts.bounties.curatorDepositMultiplier`\n    \n*   **summary**: The curator deposit is calculated as a percentage of the curator fee.\n    \n    This deposit has optional upper and lower bounds with `CuratorDepositMax` and `CuratorDepositMin`.\n    \n\n### dataDepositPerByte: `u128`[\u200b](#datadepositperbyte-u128 \"Direct link to datadepositperbyte-u128\")\n\n*   **interface**: `api.consts.bounties.dataDepositPerByte`\n*   **summary**: The amount held on deposit per byte within the tip report reason or bounty description.\n\n### maximumReasonLength: `u32`[\u200b](#maximumreasonlength-u32 \"Direct link to maximumreasonlength-u32\")\n\n*   **interface**: `api.consts.bounties.maximumReasonLength`\n    \n*   **summary**: Maximum acceptable reason length.\n    \n    Benchmarks depend on this value, be sure to update weights file when changing this value\n    \n\n* * *\n\nchildBounties[\u200b](#childbounties \"Direct link to childBounties\")\n\n----------------------------------------------------------------\n\n### childBountyValueMinimum: `u128`[\u200b](#childbountyvalueminimum-u128 \"Direct link to childbountyvalueminimum-u128\")\n\n*   **interface**: `api.consts.childBounties.childBountyValueMinimum`\n*   **summary**: Minimum value for a child-bounty.\n\n### maxActiveChildBountyCount: `u32`[\u200b](#maxactivechildbountycount-u32 \"Direct link to maxactivechildbountycount-u32\")\n\n*   **interface**: `api.consts.childBounties.maxActiveChildBountyCount`\n*   **summary**: Maximum number of child bounties that can be added to a parent bounty.\n\n* * *\n\nclaims[\u200b](#claims \"Direct link to claims\")\n\n-------------------------------------------\n\n### prefix: `Bytes`[\u200b](#prefix-bytes \"Direct link to prefix-bytes\")\n\n*   **interface**: `api.consts.claims.prefix`\n\n* * *\n\nconvictionVoting[\u200b](#convictionvoting \"Direct link to convictionVoting\")\n\n-------------------------------------------------------------------------\n\n### maxVotes: `u32`[\u200b](#maxvotes-u32 \"Direct link to maxvotes-u32\")\n\n*   **interface**: `api.consts.convictionVoting.maxVotes`\n    \n*   **summary**: The maximum number of concurrent votes an account may have.\n    \n    Also used to compute weight, an overly large value can lead to extrinsics with large weight estimation: see `delegate` for instance.\n    \n\n### voteLockingPeriod: `u32`[\u200b](#votelockingperiod-u32 \"Direct link to votelockingperiod-u32\")\n\n*   **interface**: `api.consts.convictionVoting.voteLockingPeriod`\n    \n*   **summary**: The minimum period of vote locking.\n    \n    It should be no shorter than enactment period to ensure that in the case of an approval, those successful voters are locked into the consequences that their votes entail.\n    \n\n* * *\n\ncrowdloan[\u200b](#crowdloan \"Direct link to crowdloan\")\n\n----------------------------------------------------\n\n### minContribution: `u128`[\u200b](#mincontribution-u128 \"Direct link to mincontribution-u128\")\n\n*   **interface**: `api.consts.crowdloan.minContribution`\n*   **summary**: The minimum amount that may be contributed into a crowdloan. Should almost certainly be at least `ExistentialDeposit`.\n\n### palletId: `FrameSupportPalletId`[\u200b](#palletid-framesupportpalletid \"Direct link to palletid-framesupportpalletid\")\n\n*   **interface**: `api.consts.crowdloan.palletId`\n*   **summary**: `PalletId` for the crowdloan pallet. An appropriate value could be `PalletId(*b\"py/cfund\")`\n\n### removeKeysLimit: `u32`[\u200b](#removekeyslimit-u32 \"Direct link to removekeyslimit-u32\")\n\n*   **interface**: `api.consts.crowdloan.removeKeysLimit`\n*   **summary**: Max number of storage keys to remove per extrinsic call.\n\n* * *\n\nelectionProviderMultiPhase[\u200b](#electionprovidermultiphase \"Direct link to electionProviderMultiPhase\")\n\n-------------------------------------------------------------------------------------------------------\n\n### betterSignedThreshold: `Perbill`[\u200b](#bettersignedthreshold-perbill \"Direct link to bettersignedthreshold-perbill\")\n\n*   **interface**: `api.consts.electionProviderMultiPhase.betterSignedThreshold`\n*   **summary**: The minimum amount of improvement to the solution score that defines a solution as \"better\" in the Signed phase.\n\n### betterUnsignedThreshold: `Perbill`[\u200b](#betterunsignedthreshold-perbill \"Direct link to betterunsignedthreshold-perbill\")\n\n*   **interface**: `api.consts.electionProviderMultiPhase.betterUnsignedThreshold`\n*   **summary**: The minimum amount of improvement to the solution score that defines a solution as \"better\" in the Unsigned phase.\n\n### maxWinners: `u32`[\u200b](#maxwinners-u32 \"Direct link to maxwinners-u32\")\n\n*   **interface**: `api.consts.electionProviderMultiPhase.maxWinners`\n    \n*   **summary**: The maximum number of winners that can be elected by this `ElectionProvider` implementation.\n    \n    Note: This must always be greater or equal to `T::DataProvider::desired_targets()`.\n    \n\n### minerMaxLength: `u32`[\u200b](#minermaxlength-u32 \"Direct link to minermaxlength-u32\")\n\n*   **interface**: `api.consts.electionProviderMultiPhase.minerMaxLength`\n\n### minerMaxVotesPerVoter: `u32`[\u200b](#minermaxvotespervoter-u32 \"Direct link to minermaxvotespervoter-u32\")\n\n*   **interface**: `api.consts.electionProviderMultiPhase.minerMaxVotesPerVoter`\n\n### minerMaxWeight: `SpWeightsWeightV2Weight`[\u200b](#minermaxweight-spweightsweightv2weight \"Direct link to minermaxweight-spweightsweightv2weight\")\n\n*   **interface**: `api.consts.electionProviderMultiPhase.minerMaxWeight`\n\n### minerMaxWinners: `u32`[\u200b](#minermaxwinners-u32 \"Direct link to minermaxwinners-u32\")\n\n*   **interface**: `api.consts.electionProviderMultiPhase.minerMaxWinners`\n\n### minerTxPriority: `u64`[\u200b](#minertxpriority-u64 \"Direct link to minertxpriority-u64\")\n\n*   **interface**: `api.consts.electionProviderMultiPhase.minerTxPriority`\n*   **summary**: The priority of the unsigned transaction submitted in the unsigned-phase\n\n### offchainRepeat: `u32`[\u200b](#offchainrepeat-u32 \"Direct link to offchainrepeat-u32\")\n\n*   **interface**: `api.consts.electionProviderMultiPhase.offchainRepeat`\n    \n*   **summary**: The repeat threshold of the offchain worker.\n    \n    For example, if it is 5, that means that at least 5 blocks will elapse between attempts to submit the worker's solution.\n    \n\n### signedDepositBase: `u128`[\u200b](#signeddepositbase-u128 \"Direct link to signeddepositbase-u128\")\n\n*   **interface**: `api.consts.electionProviderMultiPhase.signedDepositBase`\n*   **summary**: Base deposit for a signed solution.\n\n### signedDepositByte: `u128`[\u200b](#signeddepositbyte-u128 \"Direct link to signeddepositbyte-u128\")\n\n*   **interface**: `api.consts.electionProviderMultiPhase.signedDepositByte`\n*   **summary**: Per-byte deposit for a signed solution.\n\n### signedDepositWeight: `u128`[\u200b](#signeddepositweight-u128 \"Direct link to signeddepositweight-u128\")\n\n*   **interface**: `api.consts.electionProviderMultiPhase.signedDepositWeight`\n*   **summary**: Per-weight deposit for a signed solution.\n\n### signedMaxRefunds: `u32`[\u200b](#signedmaxrefunds-u32 \"Direct link to signedmaxrefunds-u32\")\n\n*   **interface**: `api.consts.electionProviderMultiPhase.signedMaxRefunds`\n*   **summary**: The maximum amount of unchecked solutions to refund the call fee for.\n\n### signedMaxSubmissions: `u32`[\u200b](#signedmaxsubmissions-u32 \"Direct link to signedmaxsubmissions-u32\")\n\n*   **interface**: `api.consts.electionProviderMultiPhase.signedMaxSubmissions`\n    \n*   **summary**: Maximum number of signed submissions that can be queued.\n    \n    It is best to avoid adjusting this during an election, as it impacts downstream data structures. In particular, `SignedSubmissionIndices<T>` is bounded on this value. If you update this value during an election, you _must_ ensure that `SignedSubmissionIndices.len()` is less than or equal to the new value. Otherwise, attempts to submit new solutions may cause a runtime panic.\n    \n\n### signedMaxWeight: `SpWeightsWeightV2Weight`[\u200b](#signedmaxweight-spweightsweightv2weight \"Direct link to signedmaxweight-spweightsweightv2weight\")\n\n*   **interface**: `api.consts.electionProviderMultiPhase.signedMaxWeight`\n    \n*   **summary**: Maximum weight of a signed solution.\n    \n    If \\[`Config::MinerConfig`\\] is being implemented to submit signed solutions (outside of this pallet), then \\[`MinerConfig::solution_weight`\\] is used to compare against this value.\n    \n\n### signedPhase: `u32`[\u200b](#signedphase-u32 \"Direct link to signedphase-u32\")\n\n*   **interface**: `api.consts.electionProviderMultiPhase.signedPhase`\n*   **summary**: Duration of the signed phase.\n\n### signedRewardBase: `u128`[\u200b](#signedrewardbase-u128 \"Direct link to signedrewardbase-u128\")\n\n*   **interface**: `api.consts.electionProviderMultiPhase.signedRewardBase`\n*   **summary**: Base reward for a signed solution\n\n### unsignedPhase: `u32`[\u200b](#unsignedphase-u32 \"Direct link to unsignedphase-u32\")\n\n*   **interface**: `api.consts.electionProviderMultiPhase.unsignedPhase`\n*   **summary**: Duration of the unsigned phase.\n\n* * *\n\nfastUnstake[\u200b](#fastunstake \"Direct link to fastUnstake\")\n\n----------------------------------------------------------\n\n### deposit: `u128`[\u200b](#deposit-u128 \"Direct link to deposit-u128\")\n\n*   **interface**: `api.consts.fastUnstake.deposit`\n*   **summary**: Deposit to take for unstaking, to make sure we're able to slash the it in order to cover the costs of resources on unsuccessful unstake.\n\n* * *\n\nfellowshipReferenda[\u200b](#fellowshipreferenda \"Direct link to fellowshipReferenda\")\n\n----------------------------------------------------------------------------------\n\n### alarmInterval: `u32`[\u200b](#alarminterval-u32 \"Direct link to alarminterval-u32\")\n\n*   **interface**: `api.consts.fellowshipReferenda.alarmInterval`\n*   **summary**: Quantization level for the referendum wakeup scheduler. A higher number will result in fewer storage reads/writes needed for smaller voters, but also result in delays to the automatic referendum status changes. Explicit servicing instructions are unaffected.\n\n### maxQueued: `u32`[\u200b](#maxqueued-u32 \"Direct link to maxqueued-u32\")\n\n*   **interface**: `api.consts.fellowshipReferenda.maxQueued`\n*   **summary**: Maximum size of the referendum queue for a single track.\n\n### submissionDeposit: `u128`[\u200b](#submissiondeposit-u128 \"Direct link to submissiondeposit-u128\")\n\n*   **interface**: `api.consts.fellowshipReferenda.submissionDeposit`\n*   **summary**: The minimum amount to be used as a deposit for a public referendum proposal.\n\n### tracks: `Vec<(u16,PalletReferendaTrackInfo)>`[\u200b](#tracks-vecu16palletreferendatrackinfo \"Direct link to tracks-vecu16palletreferendatrackinfo\")\n\n*   **interface**: `api.consts.fellowshipReferenda.tracks`\n*   **summary**: Information concerning the different referendum tracks.\n\n### undecidingTimeout: `u32`[\u200b](#undecidingtimeout-u32 \"Direct link to undecidingtimeout-u32\")\n\n*   **interface**: `api.consts.fellowshipReferenda.undecidingTimeout`\n*   **summary**: The number of blocks after submission that a referendum must begin being decided by. Once this passes, then anyone may cancel the referendum.\n\n* * *\n\ngrandpa[\u200b](#grandpa \"Direct link to grandpa\")\n\n----------------------------------------------\n\n### maxAuthorities: `u32`[\u200b](#maxauthorities-u32-2 \"Direct link to maxauthorities-u32-2\")\n\n*   **interface**: `api.consts.grandpa.maxAuthorities`\n*   **summary**: Max Authorities in use\n\n### maxNominators: `u32`[\u200b](#maxnominators-u32-2 \"Direct link to maxnominators-u32-2\")\n\n*   **interface**: `api.consts.grandpa.maxNominators`\n*   **summary**: The maximum number of nominators for each validator.\n\n### maxSetIdSessionEntries: `u64`[\u200b](#maxsetidsessionentries-u64-1 \"Direct link to maxsetidsessionentries-u64-1\")\n\n*   **interface**: `api.consts.grandpa.maxSetIdSessionEntries`\n    \n*   **summary**: The maximum number of entries to keep in the set id to session index mapping.\n    \n    Since the `SetIdSession` map is only used for validating equivocations this value should relate to the bonding duration of whatever staking system is being used (if any). If equivocation handling is not enabled then this value can be zero.\n    \n\n* * *\n\nidentity[\u200b](#identity \"Direct link to identity\")\n\n-------------------------------------------------\n\n### basicDeposit: `u128`[\u200b](#basicdeposit-u128 \"Direct link to basicdeposit-u128\")\n\n*   **interface**: `api.consts.identity.basicDeposit`\n*   **summary**: The amount held on deposit for a registered identity\n\n### fieldDeposit: `u128`[\u200b](#fielddeposit-u128 \"Direct link to fielddeposit-u128\")\n\n*   **interface**: `api.consts.identity.fieldDeposit`\n*   **summary**: The amount held on deposit per additional field for a registered identity.\n\n### maxAdditionalFields: `u32`[\u200b](#maxadditionalfields-u32 \"Direct link to maxadditionalfields-u32\")\n\n*   **interface**: `api.consts.identity.maxAdditionalFields`\n*   **summary**: Maximum number of additional fields that may be stored in an ID. Needed to bound the I/O required to access an identity, but can be pretty high.\n\n### maxRegistrars: `u32`[\u200b](#maxregistrars-u32 \"Direct link to maxregistrars-u32\")\n\n*   **interface**: `api.consts.identity.maxRegistrars`\n*   **summary**: Maxmimum number of registrars allowed in the system. Needed to bound the complexity of, e.g., updating judgements.\n\n### maxSubAccounts: `u32`[\u200b](#maxsubaccounts-u32 \"Direct link to maxsubaccounts-u32\")\n\n*   **interface**: `api.consts.identity.maxSubAccounts`\n*   **summary**: The maximum number of sub-accounts allowed per identified account.\n\n### subAccountDeposit: `u128`[\u200b](#subaccountdeposit-u128 \"Direct link to subaccountdeposit-u128\")\n\n*   **interface**: `api.consts.identity.subAccountDeposit`\n*   **summary**: The amount held on deposit for a registered subaccount. This should account for the fact that one storage item's value will increase by the size of an account ID, and there will be another trie item whose value is the size of an account ID plus 32 bytes.\n\n* * *\n\nimOnline[\u200b](#imonline \"Direct link to imOnline\")\n\n-------------------------------------------------\n\n### unsignedPriority: `u64`[\u200b](#unsignedpriority-u64 \"Direct link to unsignedpriority-u64\")\n\n*   **interface**: `api.consts.imOnline.unsignedPriority`\n    \n*   **summary**: A configuration for base priority of unsigned transactions.\n    \n    This is exposed so that it can be tuned for particular runtime, when multiple pallets send unsigned transactions.\n    \n\n* * *\n\nindices[\u200b](#indices \"Direct link to indices\")\n\n----------------------------------------------\n\n### deposit: `u128`[\u200b](#deposit-u128-1 \"Direct link to deposit-u128-1\")\n\n*   **interface**: `api.consts.indices.deposit`\n*   **summary**: The deposit needed for reserving an index.\n\n* * *\n\nmessageQueue[\u200b](#messagequeue \"Direct link to messageQueue\")\n\n-------------------------------------------------------------\n\n### heapSize: `u32`[\u200b](#heapsize-u32 \"Direct link to heapsize-u32\")\n\n*   **interface**: `api.consts.messageQueue.heapSize`\n    \n*   **summary**: The size of the page; this implies the maximum message size which can be sent.\n    \n    A good value depends on the expected message sizes, their weights, the weight that is available for processing them and the maximal needed message size. The maximal message size is slightly lower than this as defined by \\[`MaxMessageLenOf`\\].\n    \n\n### maxStale: `u32`[\u200b](#maxstale-u32 \"Direct link to maxstale-u32\")\n\n*   **interface**: `api.consts.messageQueue.maxStale`\n*   **summary**: The maximum number of stale pages (i.e. of overweight messages) allowed before culling can happen. Once there are more stale pages than this, then historical pages may be dropped, even if they contain unprocessed overweight messages.\n\n### serviceWeight: `Option<SpWeightsWeightV2Weight>`[\u200b](#serviceweight-optionspweightsweightv2weight \"Direct link to serviceweight-optionspweightsweightv2weight\")\n\n*   **interface**: `api.consts.messageQueue.serviceWeight`\n    \n*   **summary**: The amount of weight (if any) which should be provided to the message queue for servicing enqueued items.\n    \n    This may be legitimately `None` in the case that you will call `ServiceQueues::service_queues` manually.\n    \n\n* * *\n\nmultisig[\u200b](#multisig \"Direct link to multisig\")\n\n-------------------------------------------------\n\n### depositBase: `u128`[\u200b](#depositbase-u128 \"Direct link to depositbase-u128\")\n\n*   **interface**: `api.consts.multisig.depositBase`\n    \n*   **summary**: The base amount of currency needed to reserve for creating a multisig execution or to store a dispatch call for later.\n    \n    This is held for an additional storage item whose value size is `4 + sizeof((BlockNumber, Balance, AccountId))` bytes and whose key size is `32 + sizeof(AccountId)` bytes.\n    \n\n### depositFactor: `u128`[\u200b](#depositfactor-u128 \"Direct link to depositfactor-u128\")\n\n*   **interface**: `api.consts.multisig.depositFactor`\n    \n*   **summary**: The amount of currency needed per unit threshold when creating a multisig execution.\n    \n    This is held for adding 32 bytes more into a pre-existing storage value.\n    \n\n### maxSignatories: `u32`[\u200b](#maxsignatories-u32 \"Direct link to maxsignatories-u32\")\n\n*   **interface**: `api.consts.multisig.maxSignatories`\n*   **summary**: The maximum amount of signatories allowed in the multisig.\n\n* * *\n\nnis[\u200b](#nis \"Direct link to nis\")\n\n----------------------------------\n\n### basePeriod: `u32`[\u200b](#baseperiod-u32 \"Direct link to baseperiod-u32\")\n\n*   **interface**: `api.consts.nis.basePeriod`\n*   **summary**: The base period for the duration queues. This is the common multiple across all supported freezing durations that can be bid upon.\n\n### fifoQueueLen: `u32`[\u200b](#fifoqueuelen-u32 \"Direct link to fifoqueuelen-u32\")\n\n*   **interface**: `api.consts.nis.fifoQueueLen`\n    \n*   **summary**: Portion of the queue which is free from ordering and just a FIFO.\n    \n    Must be no greater than `MaxQueueLen`.\n    \n\n### intakePeriod: `u32`[\u200b](#intakeperiod-u32 \"Direct link to intakeperiod-u32\")\n\n*   **interface**: `api.consts.nis.intakePeriod`\n    \n*   **summary**: The number of blocks between consecutive attempts to dequeue bids and create receipts.\n    \n    A larger value results in fewer storage hits each block, but a slower period to get to the target.\n    \n\n### maxIntakeWeight: `SpWeightsWeightV2Weight`[\u200b](#maxintakeweight-spweightsweightv2weight \"Direct link to maxintakeweight-spweightsweightv2weight\")\n\n*   **interface**: `api.consts.nis.maxIntakeWeight`\n*   **summary**: The maximum amount of bids that can consolidated into receipts in a single intake. A larger value here means less of the block available for transactions should there be a glut of bids.\n\n### maxQueueLen: `u32`[\u200b](#maxqueuelen-u32 \"Direct link to maxqueuelen-u32\")\n\n*   **interface**: `api.consts.nis.maxQueueLen`\n    \n*   **summary**: Maximum number of items that may be in each duration queue.\n    \n    Must be larger than zero.\n    \n\n### minBid: `u128`[\u200b](#minbid-u128 \"Direct link to minbid-u128\")\n\n*   **interface**: `api.consts.nis.minBid`\n    \n*   **summary**: The minimum amount of funds that may be placed in a bid. Note that this does not actually limit the amount which may be represented in a receipt since bids may be split up by the system.\n    \n    It should be at least big enough to ensure that there is no possible storage spam attack or queue-filling attack.\n    \n\n### minReceipt: `Perquintill`[\u200b](#minreceipt-perquintill \"Direct link to minreceipt-perquintill\")\n\n*   **interface**: `api.consts.nis.minReceipt`\n*   **summary**: The minimum amount of funds which may intentionally be left remaining under a single receipt.\n\n### palletId: `FrameSupportPalletId`[\u200b](#palletid-framesupportpalletid-1 \"Direct link to palletid-framesupportpalletid-1\")\n\n*   **interface**: `api.consts.nis.palletId`\n*   **summary**: The treasury's pallet id, used for deriving its sovereign account ID.\n\n### queueCount: `u32`[\u200b](#queuecount-u32 \"Direct link to queuecount-u32\")\n\n*   **interface**: `api.consts.nis.queueCount`\n*   **summary**: Number of duration queues in total. This sets the maximum duration supported, which is this value multiplied by `Period`.\n\n### thawThrottle: `(Perquintill,u32)`[\u200b](#thawthrottle-perquintillu32 \"Direct link to thawthrottle-perquintillu32\")\n\n*   **interface**: `api.consts.nis.thawThrottle`\n*   **summary**: The maximum proportion which may be thawed and the period over which it is reset.\n\n* * *\n\nnisCounterpartBalances[\u200b](#niscounterpartbalances \"Direct link to nisCounterpartBalances\")\n\n-------------------------------------------------------------------------------------------\n\n### existentialDeposit: `u128`[\u200b](#existentialdeposit-u128-1 \"Direct link to existentialdeposit-u128-1\")\n\n*   **interface**: `api.consts.nisCounterpartBalances.existentialDeposit`\n    \n*   **summary**: The minimum amount required to keep an account open. MUST BE GREATER THAN ZERO!\n    \n    If you _really_ need it to be zero, you can enable the feature `insecure_zero_ed` for this pallet. However, you do so at your own risk: this will open up a major DoS vector. In case you have multiple sources of provider references, you may also get unexpected behaviour if you set this to zero.\n    \n    Bottom line: Do yourself a favour and make it at least one!\n    \n\n### maxFreezes: `u32`[\u200b](#maxfreezes-u32-1 \"Direct link to maxfreezes-u32-1\")\n\n*   **interface**: `api.consts.nisCounterpartBalances.maxFreezes`\n*   **summary**: The maximum number of individual freeze locks that can exist on an account at any time.\n\n### maxHolds: `u32`[\u200b](#maxholds-u32-1 \"Direct link to maxholds-u32-1\")\n\n*   **interface**: `api.consts.nisCounterpartBalances.maxHolds`\n*   **summary**: The maximum number of holds that can exist on an account at any time.\n\n### maxLocks: `u32`[\u200b](#maxlocks-u32-1 \"Direct link to maxlocks-u32-1\")\n\n*   **interface**: `api.consts.nisCounterpartBalances.maxLocks`\n*   **summary**: The maximum number of locks that should exist on an account. Not strictly enforced, but used for weight estimation.\n\n### maxReserves: `u32`[\u200b](#maxreserves-u32-1 \"Direct link to maxreserves-u32-1\")\n\n*   **interface**: `api.consts.nisCounterpartBalances.maxReserves`\n*   **summary**: The maximum number of named reserves that can exist on an account.\n\n* * *\n\nnominationPools[\u200b](#nominationpools \"Direct link to nominationPools\")\n\n----------------------------------------------------------------------\n\n### maxPointsToBalance: `u8`[\u200b](#maxpointstobalance-u8 \"Direct link to maxpointstobalance-u8\")\n\n*   **interface**: `api.consts.nominationPools.maxPointsToBalance`\n    \n*   **summary**: The maximum pool points-to-balance ratio that an `open` pool can have.\n    \n    This is important in the event slashing takes place and the pool's points-to-balance ratio becomes disproportional.\n    \n    Moreover, this relates to the `RewardCounter` type as well, as the arithmetic operations are a function of number of points, and by setting this value to e.g. 10, you ensure that the total number of points in the system are at most 10 times the total\\_issuance of the chain, in the absolute worse case.\n    \n    For a value of 10, the threshold would be a pool points-to-balance ratio of 10:1. Such a scenario would also be the equivalent of the pool being 90% slashed.\n    \n\n### palletId: `FrameSupportPalletId`[\u200b](#palletid-framesupportpalletid-2 \"Direct link to palletid-framesupportpalletid-2\")\n\n*   **interface**: `api.consts.nominationPools.palletId`\n*   **summary**: The nomination pool's pallet id.\n\n* * *\n\nparas[\u200b](#paras \"Direct link to paras\")\n\n----------------------------------------\n\n### unsignedPriority: `u64`[\u200b](#unsignedpriority-u64-1 \"Direct link to unsignedpriority-u64-1\")\n\n*   **interface**: `api.consts.paras.unsignedPriority`\n\n* * *\n\nproxy[\u200b](#proxy \"Direct link to proxy\")\n\n----------------------------------------\n\n### announcementDepositBase: `u128`[\u200b](#announcementdepositbase-u128 \"Direct link to announcementdepositbase-u128\")\n\n*   **interface**: `api.consts.proxy.announcementDepositBase`\n    \n*   **summary**: The base amount of currency needed to reserve for creating an announcement.\n    \n    This is held when a new storage item holding a `Balance` is created (typically 16 bytes).\n    \n\n### announcementDepositFactor: `u128`[\u200b](#announcementdepositfactor-u128 \"Direct link to announcementdepositfactor-u128\")\n\n*   **interface**: `api.consts.proxy.announcementDepositFactor`\n    \n*   **summary**: The amount of currency needed per announcement made.\n    \n    This is held for adding an `AccountId`, `Hash` and `BlockNumber` (typically 68 bytes) into a pre-existing storage value.\n    \n\n### maxPending: `u32`[\u200b](#maxpending-u32 \"Direct link to maxpending-u32\")\n\n*   **interface**: `api.consts.proxy.maxPending`\n*   **summary**: The maximum amount of time-delayed announcements that are allowed to be pending.\n\n### maxProxies: `u32`[\u200b](#maxproxies-u32 \"Direct link to maxproxies-u32\")\n\n*   **interface**: `api.consts.proxy.maxProxies`\n*   **summary**: The maximum amount of proxies allowed for a single account.\n\n### proxyDepositBase: `u128`[\u200b](#proxydepositbase-u128 \"Direct link to proxydepositbase-u128\")\n\n*   **interface**: `api.consts.proxy.proxyDepositBase`\n    \n*   **summary**: The base amount of currency needed to reserve for creating a proxy.\n    \n    This is held for an additional storage item whose value size is `sizeof(Balance)` bytes and whose key size is `sizeof(AccountId)` bytes.\n    \n\n### proxyDepositFactor: `u128`[\u200b](#proxydepositfactor-u128 \"Direct link to proxydepositfactor-u128\")\n\n*   **interface**: `api.consts.proxy.proxyDepositFactor`\n    \n*   **summary**: The amount of currency needed per proxy added.\n    \n    This is held for adding 32 bytes plus an instance of `ProxyType` more into a pre-existing storage value. Thus, when configuring `ProxyDepositFactor` one should take into account `32 + proxy_type.encode().len()` bytes of data.\n    \n\n* * *\n\nrecovery[\u200b](#recovery \"Direct link to recovery\")\n\n-------------------------------------------------\n\n### configDepositBase: `u128`[\u200b](#configdepositbase-u128 \"Direct link to configdepositbase-u128\")\n\n*   **interface**: `api.consts.recovery.configDepositBase`\n    \n*   **summary**: The base amount of currency needed to reserve for creating a recovery configuration.\n    \n    This is held for an additional storage item whose value size is `2 + sizeof(BlockNumber, Balance)` bytes.\n    \n\n### friendDepositFactor: `u128`[\u200b](#frienddepositfactor-u128 \"Direct link to frienddepositfactor-u128\")\n\n*   **interface**: `api.consts.recovery.friendDepositFactor`\n    \n*   **summary**: The amount of currency needed per additional user when creating a recovery configuration.\n    \n    This is held for adding `sizeof(AccountId)` bytes more into a pre-existing storage value.\n    \n\n### maxFriends: `u32`[\u200b](#maxfriends-u32 \"Direct link to maxfriends-u32\")\n\n*   **interface**: `api.consts.recovery.maxFriends`\n    \n*   **summary**: The maximum amount of friends allowed in a recovery configuration.\n    \n    NOTE: The threshold programmed in this Pallet uses u16, so it does not really make sense to have a limit here greater than u16::MAX. But also, that is a lot more than you should probably set this value to anyway...\n    \n\n### recoveryDeposit: `u128`[\u200b](#recoverydeposit-u128 \"Direct link to recoverydeposit-u128\")\n\n*   **interface**: `api.consts.recovery.recoveryDeposit`\n    \n*   **summary**: The base amount of currency needed to reserve for starting a recovery.\n    \n    This is primarily held for deterring malicious recovery attempts, and should have a value large enough that a bad actor would choose not to place this deposit. It also acts to fund additional storage item whose value size is `sizeof(BlockNumber, Balance + T * AccountId)` bytes. Where T is a configurable threshold.\n    \n\n* * *\n\nreferenda[\u200b](#referenda \"Direct link to referenda\")\n\n----------------------------------------------------\n\n### alarmInterval: `u32`[\u200b](#alarminterval-u32-1 \"Direct link to alarminterval-u32-1\")\n\n*   **interface**: `api.consts.referenda.alarmInterval`\n*   **summary**: Quantization level for the referendum wakeup scheduler. A higher number will result in fewer storage reads/writes needed for smaller voters, but also result in delays to the automatic referendum status changes. Explicit servicing instructions are unaffected.\n\n### maxQueued: `u32`[\u200b](#maxqueued-u32-1 \"Direct link to maxqueued-u32-1\")\n\n*   **interface**: `api.consts.referenda.maxQueued`\n*   **summary**: Maximum size of the referendum queue for a single track.\n\n### submissionDeposit: `u128`[\u200b](#submissiondeposit-u128-1 \"Direct link to submissiondeposit-u128-1\")\n\n*   **interface**: `api.consts.referenda.submissionDeposit`\n*   **summary**: The minimum amount to be used as a deposit for a public referendum proposal.\n\n### tracks: `Vec<(u16,PalletReferendaTrackInfo)>`[\u200b](#tracks-vecu16palletreferendatrackinfo-1 \"Direct link to tracks-vecu16palletreferendatrackinfo-1\")\n\n*   **interface**: `api.consts.referenda.tracks`\n*   **summary**: Information concerning the different referendum tracks.\n\n### undecidingTimeout: `u32`[\u200b](#undecidingtimeout-u32-1 \"Direct link to undecidingtimeout-u32-1\")\n\n*   **interface**: `api.consts.referenda.undecidingTimeout`\n*   **summary**: The number of blocks after submission that a referendum must begin being decided by. Once this passes, then anyone may cancel the referendum.\n\n* * *\n\nregistrar[\u200b](#registrar \"Direct link to registrar\")\n\n----------------------------------------------------\n\n### dataDepositPerByte: `u128`[\u200b](#datadepositperbyte-u128-1 \"Direct link to datadepositperbyte-u128-1\")\n\n*   **interface**: `api.consts.registrar.dataDepositPerByte`\n*   **summary**: The deposit to be paid per byte stored on chain.\n\n### paraDeposit: `u128`[\u200b](#paradeposit-u128 \"Direct link to paradeposit-u128\")\n\n*   **interface**: `api.consts.registrar.paraDeposit`\n*   **summary**: The deposit to be paid to run a on-demand parachain. This should include the cost for storing the genesis head and validation code.\n\n* * *\n\nscheduler[\u200b](#scheduler \"Direct link to scheduler\")\n\n----------------------------------------------------\n\n### maximumWeight: `SpWeightsWeightV2Weight`[\u200b](#maximumweight-spweightsweightv2weight \"Direct link to maximumweight-spweightsweightv2weight\")\n\n*   **interface**: `api.consts.scheduler.maximumWeight`\n*   **summary**: The maximum weight that may be scheduled per block for any dispatchables.\n\n### maxScheduledPerBlock: `u32`[\u200b](#maxscheduledperblock-u32 \"Direct link to maxscheduledperblock-u32\")\n\n*   **interface**: `api.consts.scheduler.maxScheduledPerBlock`\n    \n*   **summary**: The maximum number of scheduled calls in the queue for a single block.\n    \n    NOTE: + Dependent pallets' benchmarks might require a higher limit for the setting. Set a higher limit under `runtime-benchmarks` feature.\n    \n\n* * *\n\nslots[\u200b](#slots \"Direct link to slots\")\n\n----------------------------------------\n\n### leaseOffset: `u32`[\u200b](#leaseoffset-u32 \"Direct link to leaseoffset-u32\")\n\n*   **interface**: `api.consts.slots.leaseOffset`\n*   **summary**: The number of blocks to offset each lease period by.\n\n### leasePeriod: `u32`[\u200b](#leaseperiod-u32 \"Direct link to leaseperiod-u32\")\n\n*   **interface**: `api.consts.slots.leasePeriod`\n*   **summary**: The number of blocks over which a single period lasts.\n\n* * *\n\nsociety[\u200b](#society \"Direct link to society\")\n\n----------------------------------------------\n\n### challengePeriod: `u32`[\u200b](#challengeperiod-u32 \"Direct link to challengeperiod-u32\")\n\n*   **interface**: `api.consts.society.challengePeriod`\n*   **summary**: The number of blocks between membership challenges.\n\n### claimPeriod: `u32`[\u200b](#claimperiod-u32 \"Direct link to claimperiod-u32\")\n\n*   **interface**: `api.consts.society.claimPeriod`\n*   **summary**: The number of blocks on which new candidates can claim their membership and be the named head.\n\n### graceStrikes: `u32`[\u200b](#gracestrikes-u32 \"Direct link to gracestrikes-u32\")\n\n*   **interface**: `api.consts.society.graceStrikes`\n*   **summary**: The maximum number of strikes before a member gets funds slashed.\n\n### maxBids: `u32`[\u200b](#maxbids-u32 \"Direct link to maxbids-u32\")\n\n*   **interface**: `api.consts.society.maxBids`\n*   **summary**: The maximum number of bids at once.\n\n### maxLockDuration: `u32`[\u200b](#maxlockduration-u32 \"Direct link to maxlockduration-u32\")\n\n*   **interface**: `api.consts.society.maxLockDuration`\n*   **summary**: The maximum duration of the payout lock.\n\n### maxPayouts: `u32`[\u200b](#maxpayouts-u32 \"Direct link to maxpayouts-u32\")\n\n*   **interface**: `api.consts.society.maxPayouts`\n*   **summary**: The maximum number of payouts a member may have waiting unclaimed.\n\n### palletId: `FrameSupportPalletId`[\u200b](#palletid-framesupportpalletid-3 \"Direct link to palletid-framesupportpalletid-3\")\n\n*   **interface**: `api.consts.society.palletId`\n*   **summary**: The societies's pallet id\n\n### periodSpend: `u128`[\u200b](#periodspend-u128 \"Direct link to periodspend-u128\")\n\n*   **interface**: `api.consts.society.periodSpend`\n*   **summary**: The amount of incentive paid within each period. Doesn't include VoterTip.\n\n### votingPeriod: `u32`[\u200b](#votingperiod-u32 \"Direct link to votingperiod-u32\")\n\n*   **interface**: `api.consts.society.votingPeriod`\n*   **summary**: The number of blocks on which new candidates should be voted on. Together with `ClaimPeriod`, this sums to the number of blocks between candidate intake periods.\n\n* * *\n\nstaking[\u200b](#staking \"Direct link to staking\")\n\n----------------------------------------------\n\n### bondingDuration: `u32`[\u200b](#bondingduration-u32 \"Direct link to bondingduration-u32\")\n\n*   **interface**: `api.consts.staking.bondingDuration`\n*   **summary**: Number of eras that staked funds must remain bonded for.\n\n### historyDepth: `u32`[\u200b](#historydepth-u32 \"Direct link to historydepth-u32\")\n\n*   **interface**: `api.consts.staking.historyDepth`\n    \n*   **summary**: Number of eras to keep in history.\n    \n    Following information is kept for eras in `[current_era - HistoryDepth, current_era]`: `ErasStakers`, `ErasStakersClipped`, `ErasValidatorPrefs`, `ErasValidatorReward`, `ErasRewardPoints`, `ErasTotalStake`, `ErasStartSessionIndex`, `StakingLedger.claimed_rewards`.\n    \n    Must be more than the number of eras delayed by session. I.e. active era must always be in history. I.e. `active_era > current_era - history_depth` must be guaranteed.\n    \n    If migrating an existing pallet from storage value to config value, this should be set to same value or greater as in storage.\n    \n    Note: `HistoryDepth` is used as the upper bound for the `BoundedVec` item `StakingLedger.claimed_rewards`. Setting this value lower than the existing value can lead to inconsistencies in the `StakingLedger` and will need to be handled properly in a migration. The test `reducing_history_depth_abrupt` shows this effect.\n    \n\n### maxNominatorRewardedPerValidator: `u32`[\u200b](#maxnominatorrewardedpervalidator-u32 \"Direct link to maxnominatorrewardedpervalidator-u32\")\n\n*   **interface**: `api.consts.staking.maxNominatorRewardedPerValidator`\n    \n*   **summary**: The maximum number of nominators rewarded for each validator.\n    \n    For each validator only the `$MaxNominatorRewardedPerValidator` biggest stakers can claim their reward. This used to limit the i/o cost for the nominator payout.\n    \n\n### maxUnlockingChunks: `u32`[\u200b](#maxunlockingchunks-u32 \"Direct link to maxunlockingchunks-u32\")\n\n*   **interface**: `api.consts.staking.maxUnlockingChunks`\n    \n*   **summary**: The maximum number of `unlocking` chunks a \\[`StakingLedger`\\] can have. Effectively determines how many unique eras a staker may be unbonding in.\n    \n    Note: `MaxUnlockingChunks` is used as the upper bound for the `BoundedVec` item `StakingLedger.unlocking`. Setting this value lower than the existing value can lead to inconsistencies in the `StakingLedger` and will need to be handled properly in a runtime migration. The test `reducing_max_unlocking_chunks_abrupt` shows this effect.\n    \n\n### sessionsPerEra: `u32`[\u200b](#sessionsperera-u32 \"Direct link to sessionsperera-u32\")\n\n*   **interface**: `api.consts.staking.sessionsPerEra`\n*   **summary**: Number of sessions per era.\n\n### slashDeferDuration: `u32`[\u200b](#slashdeferduration-u32 \"Direct link to slashdeferduration-u32\")\n\n*   **interface**: `api.consts.staking.slashDeferDuration`\n    \n*   **summary**: Number of eras that slashes are deferred by, after computation.\n    \n    This should be less than the bonding duration. Set to 0 if slashes should be applied immediately, without opportunity for intervention.\n    \n\n* * *\n\nstateTrieMigration[\u200b](#statetriemigration \"Direct link to stateTrieMigration\")\n\n-------------------------------------------------------------------------------\n\n### maxKeyLen: `u32`[\u200b](#maxkeylen-u32 \"Direct link to maxkeylen-u32\")\n\n*   **interface**: `api.consts.stateTrieMigration.maxKeyLen`\n    \n*   **summary**: Maximal number of bytes that a key can have.\n    \n    FRAME itself does not limit the key length. The concrete value must therefore depend on your storage usage. A \\[`frame_support::storage::StorageNMap`\\] for example can have an arbitrary number of keys which are then hashed and concatenated, resulting in arbitrarily long keys.\n    \n    Use the _state migration RPC_ to retrieve the length of the longest key in your storage: [https://github.com/paritytech/substrate/issues/11642](https://github.com/paritytech/substrate/issues/11642)\n    \n    The migration will halt with a `Halted` event if this value is too small. Since there is no real penalty from over-estimating, it is advised to use a large value. The default is 512 byte.\n    \n    Some key lengths for reference:\n    \n    *   \\[`frame_support::storage::StorageValue`\\]: 32 byte\n        \n    *   \\[`frame_support::storage::StorageMap`\\]: 64 byte\n        \n    *   \\[`frame_support::storage::StorageDoubleMap`\\]: 96 byte\n        \n        For more info see [https://www.shawntabrizi.com/substrate/querying-substrate-storage-via-rpc/](https://www.shawntabrizi.com/substrate/querying-substrate-storage-via-rpc/)\n        \n\n* * *\n\nsystem[\u200b](#system \"Direct link to system\")\n\n-------------------------------------------\n\n### blockHashCount: `u32`[\u200b](#blockhashcount-u32 \"Direct link to blockhashcount-u32\")\n\n*   **interface**: `api.consts.system.blockHashCount`\n*   **summary**: Maximum number of block number to block hash mappings to keep (oldest pruned first).\n\n### blockLength: `FrameSystemLimitsBlockLength`[\u200b](#blocklength-framesystemlimitsblocklength \"Direct link to blocklength-framesystemlimitsblocklength\")\n\n*   **interface**: `api.consts.system.blockLength`\n*   **summary**: The maximum length of a block (in bytes).\n\n### blockWeights: `FrameSystemLimitsBlockWeights`[\u200b](#blockweights-framesystemlimitsblockweights \"Direct link to blockweights-framesystemlimitsblockweights\")\n\n*   **interface**: `api.consts.system.blockWeights`\n*   **summary**: Block & extrinsics weights: base values and limits.\n\n### dbWeight: `SpWeightsRuntimeDbWeight`[\u200b](#dbweight-spweightsruntimedbweight \"Direct link to dbweight-spweightsruntimedbweight\")\n\n*   **interface**: `api.consts.system.dbWeight`\n*   **summary**: The weight of runtime database operations the runtime can invoke.\n\n### ss58Prefix: `u16`[\u200b](#ss58prefix-u16 \"Direct link to ss58prefix-u16\")\n\n*   **interface**: `api.consts.system.ss58Prefix`\n    \n*   **summary**: The designated SS58 prefix of this chain.\n    \n    This replaces the \"ss58Format\" property declared in the chain spec. Reason is that the runtime should know about the prefix in order to make use of it as an identifier of the chain.\n    \n\n### version: `SpVersionRuntimeVersion`[\u200b](#version-spversionruntimeversion \"Direct link to version-spversionruntimeversion\")\n\n*   **interface**: `api.consts.system.version`\n*   **summary**: Get the chain's current version.\n\n* * *\n\ntimestamp[\u200b](#timestamp \"Direct link to timestamp\")\n\n----------------------------------------------------\n\n### minimumPeriod: `u64`[\u200b](#minimumperiod-u64 \"Direct link to minimumperiod-u64\")\n\n*   **interface**: `api.consts.timestamp.minimumPeriod`\n*   **summary**: The minimum period between blocks. Beware that this is different to the _expected_ period that the block production apparatus provides. Your chosen consensus system will generally work with this to determine a sensible block time. e.g. For Aura, it will be double this period on default settings.\n\n* * *\n\ntransactionPayment[\u200b](#transactionpayment \"Direct link to transactionPayment\")\n\n-------------------------------------------------------------------------------\n\n### operationalFeeMultiplier: `u8`[\u200b](#operationalfeemultiplier-u8 \"Direct link to operationalfeemultiplier-u8\")\n\n*   **interface**: `api.consts.transactionPayment.operationalFeeMultiplier`\n    \n*   **summary**: A fee mulitplier for `Operational` extrinsics to compute \"virtual tip\" to boost their `priority`\n    \n    This value is multipled by the `final_fee` to obtain a \"virtual tip\" that is later added to a tip component in regular `priority` calculations. It means that a `Normal` transaction can front-run a similarly-sized `Operational` extrinsic (with no tip), by including a tip value greater than the virtual tip.\n    \n    \\`\\``rust,ignore // For` Normal\\` let priority = priority\\_calc(tip);\n    \n    // For `Operational` let virtual\\_tip = (inclusion\\_fee + tip) \\* OperationalFeeMultiplier; let priority = priority\\_calc(tip + virtual\\_tip); \\`\\`\\`\n    \n    Note that since we use `final_fee` the multiplier applies also to the regular `tip` sent with the transaction. So, not only does the transaction get a priority bump based on the `inclusion_fee`, but we also amplify the impact of tips applied to `Operational` transactions.\n    \n\n* * *\n\ntreasury[\u200b](#treasury \"Direct link to treasury\")\n\n-------------------------------------------------\n\n### burn: `Permill`[\u200b](#burn-permill \"Direct link to burn-permill\")\n\n*   **interface**: `api.consts.treasury.burn`\n*   **summary**: Percentage of spare funds (if any) that are burnt per spend period.\n\n### maxApprovals: `u32`[\u200b](#maxapprovals-u32 \"Direct link to maxapprovals-u32\")\n\n*   **interface**: `api.consts.treasury.maxApprovals`\n    \n*   **summary**: The maximum number of approvals that can wait in the spending queue.\n    \n    NOTE: This parameter is also used within the Bounties Pallet extension if enabled.\n    \n\n### palletId: `FrameSupportPalletId`[\u200b](#palletid-framesupportpalletid-4 \"Direct link to palletid-framesupportpalletid-4\")\n\n*   **interface**: `api.consts.treasury.palletId`\n*   **summary**: The treasury's pallet id, used for deriving its sovereign account ID.\n\n### proposalBond: `Permill`[\u200b](#proposalbond-permill \"Direct link to proposalbond-permill\")\n\n*   **interface**: `api.consts.treasury.proposalBond`\n*   **summary**: Fraction of a proposal's value that should be bonded in order to place the proposal. An accepted proposal gets these back. A rejected proposal does not.\n\n### proposalBondMaximum: `Option<u128>`[\u200b](#proposalbondmaximum-optionu128 \"Direct link to proposalbondmaximum-optionu128\")\n\n*   **interface**: `api.consts.treasury.proposalBondMaximum`\n*   **summary**: Maximum amount of funds that should be placed in a deposit for making a proposal.\n\n### proposalBondMinimum: `u128`[\u200b](#proposalbondminimum-u128 \"Direct link to proposalbondminimum-u128\")\n\n*   **interface**: `api.consts.treasury.proposalBondMinimum`\n*   **summary**: Minimum amount of funds that should be placed in a deposit for making a proposal.\n\n### spendPeriod: `u32`[\u200b](#spendperiod-u32 \"Direct link to spendperiod-u32\")\n\n*   **interface**: `api.consts.treasury.spendPeriod`\n*   **summary**: Period between successive spends.\n\n* * *\n\nutility[\u200b](#utility \"Direct link to utility\")\n\n----------------------------------------------\n\n### batchedCallsLimit: `u32`[\u200b](#batchedcallslimit-u32 \"Direct link to batchedcallslimit-u32\")\n\n*   **interface**: `api.consts.utility.batchedCallsLimit`\n*   **summary**: The limit on the number of batched calls.\n\n* * *\n\nvesting[\u200b](#vesting \"Direct link to vesting\")\n\n----------------------------------------------\n\n### maxVestingSchedules: `u32`[\u200b](#maxvestingschedules-u32 \"Direct link to maxvestingschedules-u32\")\n\n*   **interface**: `api.consts.vesting.maxVestingSchedules`\n\n### minVestedTransfer: `u128`[\u200b](#minvestedtransfer-u128 \"Direct link to minvestedtransfer-u128\")\n\n*   **interface**: `api.consts.vesting.minVestedTransfer`\n*   **summary**: The minimum amount transferred to call `vested_transfer`.\n\n* * *\n\nvoterList[\u200b](#voterlist \"Direct link to voterList\")\n\n----------------------------------------------------\n\n### bagThresholds: `Vec<u64>`[\u200b](#bagthresholds-vecu64 \"Direct link to bagthresholds-vecu64\")\n\n*   **interface**: `api.consts.voterList.bagThresholds`\n    \n*   **summary**: The list of thresholds separating the various bags.\n    \n    Ids are separated into unsorted bags according to their score. This specifies the thresholds separating the bags. An id's bag is the largest bag for which the id's score is less than or equal to its upper threshold.\n    \n    When ids are iterated, higher bags are iterated completely before lower bags. This means that iteration is _semi-sorted_: ids of higher score tend to come before ids of lower score, but peer ids within a particular bag are sorted in insertion order.\n    \n    #### Expressing the constant[\u200b](#expressing-the-constant \"Direct link to Expressing the constant\")\n    \n    This constant must be sorted in strictly increasing order. Duplicate items are not permitted.\n    \n    There is an implied upper limit of `Score::MAX`; that value does not need to be specified within the bag. For any two threshold lists, if one ends with `Score::MAX`, the other one does not, and they are otherwise equal, the two lists will behave identically.\n    \n    #### Calculation[\u200b](#calculation \"Direct link to Calculation\")\n    \n    It is recommended to generate the set of thresholds in a geometric series, such that there exists some constant ratio such that `threshold[k + 1] == (threshold[k] * constant_ratio).max(threshold[k] + 1)` for all `k`.\n    \n    The helpers in the `/utils/frame/generate-bags` module can simplify this calculation.\n    \n    #### Examples[\u200b](#examples \"Direct link to Examples\")\n    \n    *   If `BagThresholds::get().is_empty()`, then all ids are put into the same bag, and iteration is strictly in insertion order.\n        \n    *   If `BagThresholds::get().len() == 64`, and the thresholds are determined according to the procedure given above, then the constant ratio is equal to 2.\n        \n    *   If `BagThresholds::get().len() == 200`, and the thresholds are determined according to the procedure given above, then the constant ratio is approximately equal to 1.248.\n        \n    *   If the threshold list begins `[1, 2, 3, ...]`, then an id with score 0 or 1 will fall into bag 0, an id with score 2 will fall into bag 1, etc.\n        \n        #### Migration[\u200b](#migration \"Direct link to Migration\")\n        \n        In the event that this list ever changes, a copy of the old bags list must be retained. With that `List::migrate` can be called, which will perform the appropriate migration.\n        \n\n[Edit this page](https://github.com/polkadot-js/docs/edit/master/docs/kusama/constants.md)\n\n[Previous\\\n\\\nJSON-RPC](/docs/kusama/rpc)\n[Next\\\n\\\nStorage](/docs/kusama/storage)\n\n*   [auctions](#auctions)\n    *   [endingPeriod: `u32`](#endingperiod-u32)\n        \n    *   [leasePeriodsPerSlot: `u32`](#leaseperiodsperslot-u32)\n        \n    *   [sampleLength: `u32`](#samplelength-u32)\n        \n    *   [slotRangeCount: `u32`](#slotrangecount-u32)\n        \n*   [babe](#babe)\n    *   [epochDuration: `u64`](#epochduration-u64)\n        \n    *   [expectedBlockTime: `u64`](#expectedblocktime-u64)\n        \n    *   [maxAuthorities: `u32`](#maxauthorities-u32)\n        \n    *   [maxNominators: `u32`](#maxnominators-u32)\n        \n*   [balances](#balances)\n    *   [existentialDeposit: `u128`](#existentialdeposit-u128)\n        \n    *   [maxFreezes: `u32`](#maxfreezes-u32)\n        \n    *   [maxHolds: `u32`](#maxholds-u32)\n        \n    *   [maxLocks: `u32`](#maxlocks-u32)\n        \n    *   [maxReserves: `u32`](#maxreserves-u32)\n        \n*   [beefy](#beefy)\n    *   [maxAuthorities: `u32`](#maxauthorities-u32-1)\n        \n    *   [maxNominators: `u32`](#maxnominators-u32-1)\n        \n    *   [maxSetIdSessionEntries: `u64`](#maxsetidsessionentries-u64)\n        \n*   [bounties](#bounties)\n    *   [bountyDepositBase: `u128`](#bountydepositbase-u128)\n        \n    *   [bountyDepositPayoutDelay: `u32`](#bountydepositpayoutdelay-u32)\n        \n    *   [bountyUpdatePeriod: `u32`](#bountyupdateperiod-u32)\n        \n    *   [bountyValueMinimum: `u128`](#bountyvalueminimum-u128)\n        \n    *   [curatorDepositMax: `Option<u128>`](#curatordepositmax-optionu128)\n        \n    *   [curatorDepositMin: `Option<u128>`](#curatordepositmin-optionu128)\n        \n    *   [curatorDepositMultiplier: `Permill`](#curatordepositmultiplier-permill)\n        \n    *   [dataDepositPerByte: `u128`](#datadepositperbyte-u128)\n        \n    *   [maximumReasonLength: `u32`](#maximumreasonlength-u32)\n        \n*   [childBounties](#childbounties)\n    *   [childBountyValueMinimum: `u128`](#childbountyvalueminimum-u128)\n        \n    *   [maxActiveChildBountyCount: `u32`](#maxactivechildbountycount-u32)\n        \n*   [claims](#claims)\n    *   [prefix: `Bytes`](#prefix-bytes)\n        \n*   [convictionVoting](#convictionvoting)\n    *   [maxVotes: `u32`](#maxvotes-u32)\n        \n    *   [voteLockingPeriod: `u32`](#votelockingperiod-u32)\n        \n*   [crowdloan](#crowdloan)\n    *   [minContribution: `u128`](#mincontribution-u128)\n        \n    *   [palletId: `FrameSupportPalletId`](#palletid-framesupportpalletid)\n        \n    *   [removeKeysLimit: `u32`](#removekeyslimit-u32)\n        \n*   [electionProviderMultiPhase](#electionprovidermultiphase)\n    *   [betterSignedThreshold: `Perbill`](#bettersignedthreshold-perbill)\n        \n    *   [betterUnsignedThreshold: `Perbill`](#betterunsignedthreshold-perbill)\n        \n    *   [maxWinners: `u32`](#maxwinners-u32)\n        \n    *   [minerMaxLength: `u32`](#minermaxlength-u32)\n        \n    *   [minerMaxVotesPerVoter: `u32`](#minermaxvotespervoter-u32)\n        \n    *   [minerMaxWeight: `SpWeightsWeightV2Weight`](#minermaxweight-spweightsweightv2weight)\n        \n    *   [minerMaxWinners: `u32`](#minermaxwinners-u32)\n        \n    *   [minerTxPriority: `u64`](#minertxpriority-u64)\n        \n    *   [offchainRepeat: `u32`](#offchainrepeat-u32)\n        \n    *   [signedDepositBase: `u128`](#signeddepositbase-u128)\n        \n    *   [signedDepositByte: `u128`](#signeddepositbyte-u128)\n        \n    *   [signedDepositWeight: `u128`](#signeddepositweight-u128)\n        \n    *   [signedMaxRefunds: `u32`](#signedmaxrefunds-u32)\n        \n    *   [signedMaxSubmissions: `u32`](#signedmaxsubmissions-u32)\n        \n    *   [signedMaxWeight: `SpWeightsWeightV2Weight`](#signedmaxweight-spweightsweightv2weight)\n        \n    *   [signedPhase: `u32`](#signedphase-u32)\n        \n    *   [signedRewardBase: `u128`](#signedrewardbase-u128)\n        \n    *   [unsignedPhase: `u32`](#unsignedphase-u32)\n        \n*   [fastUnstake](#fastunstake)\n    *   [deposit: `u128`](#deposit-u128)\n        \n*   [fellowshipReferenda](#fellowshipreferenda)\n    *   [alarmInterval: `u32`](#alarminterval-u32)\n        \n    *   [maxQueued: `u32`](#maxqueued-u32)\n        \n    *   [submissionDeposit: `u128`](#submissiondeposit-u128)\n        \n    *   [tracks: `Vec<(u16,PalletReferendaTrackInfo)>`](#tracks-vecu16palletreferendatrackinfo)\n        \n    *   [undecidingTimeout: `u32`](#undecidingtimeout-u32)\n        \n*   [grandpa](#grandpa)\n    *   [maxAuthorities: `u32`](#maxauthorities-u32-2)\n        \n    *   [maxNominators: `u32`](#maxnominators-u32-2)\n        \n    *   [maxSetIdSessionEntries: `u64`](#maxsetidsessionentries-u64-1)\n        \n*   [identity](#identity)\n    *   [basicDeposit: `u128`](#basicdeposit-u128)\n        \n    *   [fieldDeposit: `u128`](#fielddeposit-u128)\n        \n    *   [maxAdditionalFields: `u32`](#maxadditionalfields-u32)\n        \n    *   [maxRegistrars: `u32`](#maxregistrars-u32)\n        \n    *   [maxSubAccounts: `u32`](#maxsubaccounts-u32)\n        \n    *   [subAccountDeposit: `u128`](#subaccountdeposit-u128)\n        \n*   [imOnline](#imonline)\n    *   [unsignedPriority: `u64`](#unsignedpriority-u64)\n        \n*   [indices](#indices)\n    *   [deposit: `u128`](#deposit-u128-1)\n        \n*   [messageQueue](#messagequeue)\n    *   [heapSize: `u32`](#heapsize-u32)\n        \n    *   [maxStale: `u32`](#maxstale-u32)\n        \n    *   [serviceWeight: `Option<SpWeightsWeightV2Weight>`](#serviceweight-optionspweightsweightv2weight)\n        \n*   [multisig](#multisig)\n    *   [depositBase: `u128`](#depositbase-u128)\n        \n    *   [depositFactor: `u128`](#depositfactor-u128)\n        \n    *   [maxSignatories: `u32`](#maxsignatories-u32)\n        \n*   [nis](#nis)\n    *   [basePeriod: `u32`](#baseperiod-u32)\n        \n    *   [fifoQueueLen: `u32`](#fifoqueuelen-u32)\n        \n    *   [intakePeriod: `u32`](#intakeperiod-u32)\n        \n    *   [maxIntakeWeight: `SpWeightsWeightV2Weight`](#maxintakeweight-spweightsweightv2weight)\n        \n    *   [maxQueueLen: `u32`](#maxqueuelen-u32)\n        \n    *   [minBid: `u128`](#minbid-u128)\n        \n    *   [minReceipt: `Perquintill`](#minreceipt-perquintill)\n        \n    *   [palletId: `FrameSupportPalletId`](#palletid-framesupportpalletid-1)\n        \n    *   [queueCount: `u32`](#queuecount-u32)\n        \n    *   [thawThrottle: `(Perquintill,u32)`](#thawthrottle-perquintillu32)\n        \n*   [nisCounterpartBalances](#niscounterpartbalances)\n    *   [existentialDeposit: `u128`](#existentialdeposit-u128-1)\n        \n    *   [maxFreezes: `u32`](#maxfreezes-u32-1)\n        \n    *   [maxHolds: `u32`](#maxholds-u32-1)\n        \n    *   [maxLocks: `u32`](#maxlocks-u32-1)\n        \n    *   [maxReserves: `u32`](#maxreserves-u32-1)\n        \n*   [nominationPools](#nominationpools)\n    *   [maxPointsToBalance: `u8`](#maxpointstobalance-u8)\n        \n    *   [palletId: `FrameSupportPalletId`](#palletid-framesupportpalletid-2)\n        \n*   [paras](#paras)\n    *   [unsignedPriority: `u64`](#unsignedpriority-u64-1)\n        \n*   [proxy](#proxy)\n    *   [announcementDepositBase: `u128`](#announcementdepositbase-u128)\n        \n    *   [announcementDepositFactor: `u128`](#announcementdepositfactor-u128)\n        \n    *   [maxPending: `u32`](#maxpending-u32)\n        \n    *   [maxProxies: `u32`](#maxproxies-u32)\n        \n    *   [proxyDepositBase: `u128`](#proxydepositbase-u128)\n        \n    *   [proxyDepositFactor: `u128`](#proxydepositfactor-u128)\n        \n*   [recovery](#recovery)\n    *   [configDepositBase: `u128`](#configdepositbase-u128)\n        \n    *   [friendDepositFactor: `u128`](#frienddepositfactor-u128)\n        \n    *   [maxFriends: `u32`](#maxfriends-u32)\n        \n    *   [recoveryDeposit: `u128`](#recoverydeposit-u128)\n        \n*   [referenda](#referenda)\n    *   [alarmInterval: `u32`](#alarminterval-u32-1)\n        \n    *   [maxQueued: `u32`](#maxqueued-u32-1)\n        \n    *   [submissionDeposit: `u128`](#submissiondeposit-u128-1)\n        \n    *   [tracks: `Vec<(u16,PalletReferendaTrackInfo)>`](#tracks-vecu16palletreferendatrackinfo-1)\n        \n    *   [undecidingTimeout: `u32`](#undecidingtimeout-u32-1)\n        \n*   [registrar](#registrar)\n    *   [dataDepositPerByte: `u128`](#datadepositperbyte-u128-1)\n        \n    *   [paraDeposit: `u128`](#paradeposit-u128)\n        \n*   [scheduler](#scheduler)\n    *   [maximumWeight: `SpWeightsWeightV2Weight`](#maximumweight-spweightsweightv2weight)\n        \n    *   [maxScheduledPerBlock: `u32`](#maxscheduledperblock-u32)\n        \n*   [slots](#slots)\n    *   [leaseOffset: `u32`](#leaseoffset-u32)\n        \n    *   [leasePeriod: `u32`](#leaseperiod-u32)\n        \n*   [society](#society)\n    *   [challengePeriod: `u32`](#challengeperiod-u32)\n        \n    *   [claimPeriod: `u32`](#claimperiod-u32)\n        \n    *   [graceStrikes: `u32`](#gracestrikes-u32)\n        \n    *   [maxBids: `u32`](#maxbids-u32)\n        \n    *   [maxLockDuration: `u32`](#maxlockduration-u32)\n        \n    *   [maxPayouts: `u32`](#maxpayouts-u32)\n        \n    *   [palletId: `FrameSupportPalletId`](#palletid-framesupportpalletid-3)\n        \n    *   [periodSpend: `u128`](#periodspend-u128)\n        \n    *   [votingPeriod: `u32`](#votingperiod-u32)\n        \n*   [staking](#staking)\n    *   [bondingDuration: `u32`](#bondingduration-u32)\n        \n    *   [historyDepth: `u32`](#historydepth-u32)\n        \n    *   [maxNominatorRewardedPerValidator: `u32`](#maxnominatorrewardedpervalidator-u32)\n        \n    *   [maxUnlockingChunks: `u32`](#maxunlockingchunks-u32)\n        \n    *   [sessionsPerEra: `u32`](#sessionsperera-u32)\n        \n    *   [slashDeferDuration: `u32`](#slashdeferduration-u32)\n        \n*   [stateTrieMigration](#statetriemigration)\n    *   [maxKeyLen: `u32`](#maxkeylen-u32)\n        \n*   [system](#system)\n    *   [blockHashCount: `u32`](#blockhashcount-u32)\n        \n    *   [blockLength: `FrameSystemLimitsBlockLength`](#blocklength-framesystemlimitsblocklength)\n        \n    *   [blockWeights: `FrameSystemLimitsBlockWeights`](#blockweights-framesystemlimitsblockweights)\n        \n    *   [dbWeight: `SpWeightsRuntimeDbWeight`](#dbweight-spweightsruntimedbweight)\n        \n    *   [ss58Prefix: `u16`](#ss58prefix-u16)\n        \n    *   [version: `SpVersionRuntimeVersion`](#version-spversionruntimeversion)\n        \n*   [timestamp](#timestamp)\n    *   [minimumPeriod: `u64`](#minimumperiod-u64)\n        \n*   [transactionPayment](#transactionpayment)\n    *   [operationalFeeMultiplier: `u8`](#operationalfeemultiplier-u8)\n        \n*   [treasury](#treasury)\n    *   [burn: `Permill`](#burn-permill)\n        \n    *   [maxApprovals: `u32`](#maxapprovals-u32)\n        \n    *   [palletId: `FrameSupportPalletId`](#palletid-framesupportpalletid-4)\n        \n    *   [proposalBond: `Permill`](#proposalbond-permill)\n        \n    *   [proposalBondMaximum: `Option<u128>`](#proposalbondmaximum-optionu128)\n        \n    *   [proposalBondMinimum: `u128`](#proposalbondminimum-u128)\n        \n    *   [spendPeriod: `u32`](#spendperiod-u32)\n        \n*   [utility](#utility)\n    *   [batchedCallsLimit: `u32`](#batchedcallslimit-u32)\n        \n*   [vesting](#vesting)\n    *   [maxVestingSchedules: `u32`](#maxvestingschedules-u32)\n        \n    *   [minVestedTransfer: `u128`](#minvestedtransfer-u128)\n        \n*   [voterList](#voterlist)\n    *   [bagThresholds: `Vec<u64>`](#bagthresholds-vecu64)"}, {"title": null, "description": null, "source_url": "https://polkadot.js.org/docs/kusama/errors", "markdown": "[Skip to main content](#__docusaurus_skipToContent_fallback)\n\n[![polkadot{.js}](https://polkadot.js.org/docs/img/logo.svg)\\\n\\\n**polkadot{.js}**](/docs/)\n\n[Apps UI (Wallet)](https://polkadot.js.org/apps/)\n[GitHub](https://github.com/polkadot-js/docs)\n\nSearch...\n\n*   [Introduction](#)\n    \n*   [API](#)\n    \n*   [Metadata](#)\n    \n    *   [Substrate](#)\n        \n    *   [Polkadot](#)\n        \n    *   [Kusama](#)\n        \n        *   [Overview](/docs/kusama)\n            \n        *   [Runtime](/docs/kusama/runtime)\n            \n        *   [JSON-RPC](/docs/kusama/rpc)\n            \n        *   [Constants](/docs/kusama/constants)\n            \n        *   [Storage](/docs/kusama/storage)\n            \n        *   [Extrinsics](/docs/kusama/extrinsics)\n            \n        *   [Events](/docs/kusama/events)\n            \n        *   [Errors](/docs/kusama/errors)\n            \n*   [Keyring](#)\n    \n*   [Crypto Utilities](#)\n    \n*   [Contracts (API)](#)\n    \n*   [Identicon (UI)](#)\n    \n*   [Keyring (UI)](#)\n    \n*   [Extension](#)\n    \n*   [Run, Bundle, Test](#)\n    \n\n*   [](/docs/)\n    \n*   Metadata\n*   Kusama\n*   Errors\n\nOn this page\n\nErrors\n======\n\nThis page lists the errors that can be encountered in the different modules.\n\n(NOTE: These were generated from a static/snapshot view of a recent default Kusama runtime. Some items may not be available in older nodes, or in any customized implementations.)\n\n*   **[auctions](#auctions)\n    **\n    \n*   **[babe](#babe)\n    **\n    \n*   **[balances](#balances)\n    **\n    \n*   **[beefy](#beefy)\n    **\n    \n*   **[bounties](#bounties)\n    **\n    \n*   **[childBounties](#childbounties)\n    **\n    \n*   **[claims](#claims)\n    **\n    \n*   **[configuration](#configuration)\n    **\n    \n*   **[convictionVoting](#convictionvoting)\n    **\n    \n*   **[crowdloan](#crowdloan)\n    **\n    \n*   **[electionProviderMultiPhase](#electionprovidermultiphase)\n    **\n    \n*   **[fastUnstake](#fastunstake)\n    **\n    \n*   **[fellowshipCollective](#fellowshipcollective)\n    **\n    \n*   **[fellowshipReferenda](#fellowshipreferenda)\n    **\n    \n*   **[grandpa](#grandpa)\n    **\n    \n*   **[hrmp](#hrmp)\n    **\n    \n*   **[identity](#identity)\n    **\n    \n*   **[imOnline](#imonline)\n    **\n    \n*   **[indices](#indices)\n    **\n    \n*   **[messageQueue](#messagequeue)\n    **\n    \n*   **[multisig](#multisig)\n    **\n    \n*   **[nis](#nis)\n    **\n    \n*   **[nisCounterpartBalances](#niscounterpartbalances)\n    **\n    \n*   **[nominationPools](#nominationpools)\n    **\n    \n*   **[paraInclusion](#parainclusion)\n    **\n    \n*   **[paraInherent](#parainherent)\n    **\n    \n*   **[paras](#paras)\n    **\n    \n*   **[parasDisputes](#parasdisputes)\n    **\n    \n*   **[parasSlashing](#parasslashing)\n    **\n    \n*   **[preimage](#preimage)\n    **\n    \n*   **[proxy](#proxy)\n    **\n    \n*   **[recovery](#recovery)\n    **\n    \n*   **[referenda](#referenda)\n    **\n    \n*   **[registrar](#registrar)\n    **\n    \n*   **[scheduler](#scheduler)\n    **\n    \n*   **[session](#session)\n    **\n    \n*   **[slots](#slots)\n    **\n    \n*   **[society](#society)\n    **\n    \n*   **[staking](#staking)\n    **\n    \n*   **[stateTrieMigration](#statetriemigration)\n    **\n    \n*   **[system](#system)\n    **\n    \n*   **[treasury](#treasury)\n    **\n    \n*   **[utility](#utility)\n    **\n    \n*   **[vesting](#vesting)\n    **\n    \n*   **[voterList](#voterlist)\n    **\n    \n*   **[whitelist](#whitelist)\n    **\n    \n*   **[xcmPallet](#xcmpallet)\n    **\n    \n\n* * *\n\nauctions[\u200b](#auctions \"Direct link to auctions\")\n\n-------------------------------------------------\n\n### AlreadyLeasedOut[\u200b](#alreadyleasedout \"Direct link to AlreadyLeasedOut\")\n\n*   **interface**: `api.errors.auctions.AlreadyLeasedOut.is`\n*   **summary**: The para is already leased out for part of this range.\n\n### AuctionEnded[\u200b](#auctionended \"Direct link to AuctionEnded\")\n\n*   **interface**: `api.errors.auctions.AuctionEnded.is`\n*   **summary**: Auction has already ended.\n\n### AuctionInProgress[\u200b](#auctioninprogress \"Direct link to AuctionInProgress\")\n\n*   **interface**: `api.errors.auctions.AuctionInProgress.is`\n*   **summary**: This auction is already in progress.\n\n### LeasePeriodInPast[\u200b](#leaseperiodinpast \"Direct link to LeasePeriodInPast\")\n\n*   **interface**: `api.errors.auctions.LeasePeriodInPast.is`\n*   **summary**: The lease period is in the past.\n\n### NotAuction[\u200b](#notauction \"Direct link to NotAuction\")\n\n*   **interface**: `api.errors.auctions.NotAuction.is`\n*   **summary**: Not an auction.\n\n### NotCurrentAuction[\u200b](#notcurrentauction \"Direct link to NotCurrentAuction\")\n\n*   **interface**: `api.errors.auctions.NotCurrentAuction.is`\n*   **summary**: Not a current auction.\n\n### ParaNotRegistered[\u200b](#paranotregistered \"Direct link to ParaNotRegistered\")\n\n*   **interface**: `api.errors.auctions.ParaNotRegistered.is`\n*   **summary**: Para is not registered\n\n* * *\n\nbabe[\u200b](#babe \"Direct link to babe\")\n\n-------------------------------------\n\n### DuplicateOffenceReport[\u200b](#duplicateoffencereport \"Direct link to DuplicateOffenceReport\")\n\n*   **interface**: `api.errors.babe.DuplicateOffenceReport.is`\n*   **summary**: A given equivocation report is valid but already previously reported.\n\n### InvalidConfiguration[\u200b](#invalidconfiguration \"Direct link to InvalidConfiguration\")\n\n*   **interface**: `api.errors.babe.InvalidConfiguration.is`\n*   **summary**: Submitted configuration is invalid.\n\n### InvalidEquivocationProof[\u200b](#invalidequivocationproof \"Direct link to InvalidEquivocationProof\")\n\n*   **interface**: `api.errors.babe.InvalidEquivocationProof.is`\n*   **summary**: An equivocation proof provided as part of an equivocation report is invalid.\n\n### InvalidKeyOwnershipProof[\u200b](#invalidkeyownershipproof \"Direct link to InvalidKeyOwnershipProof\")\n\n*   **interface**: `api.errors.babe.InvalidKeyOwnershipProof.is`\n*   **summary**: A key ownership proof provided as part of an equivocation report is invalid.\n\n* * *\n\nbalances[\u200b](#balances \"Direct link to balances\")\n\n-------------------------------------------------\n\n### DeadAccount[\u200b](#deadaccount \"Direct link to DeadAccount\")\n\n*   **interface**: `api.errors.balances.DeadAccount.is`\n*   **summary**: Beneficiary account must pre-exist.\n\n### ExistentialDeposit[\u200b](#existentialdeposit \"Direct link to ExistentialDeposit\")\n\n*   **interface**: `api.errors.balances.ExistentialDeposit.is`\n*   **summary**: Value too low to create account due to existential deposit.\n\n### ExistingVestingSchedule[\u200b](#existingvestingschedule \"Direct link to ExistingVestingSchedule\")\n\n*   **interface**: `api.errors.balances.ExistingVestingSchedule.is`\n*   **summary**: A vesting schedule already exists for this account.\n\n### Expendability[\u200b](#expendability \"Direct link to Expendability\")\n\n*   **interface**: `api.errors.balances.Expendability.is`\n*   **summary**: Transfer/payment would kill account.\n\n### InsufficientBalance[\u200b](#insufficientbalance \"Direct link to InsufficientBalance\")\n\n*   **interface**: `api.errors.balances.InsufficientBalance.is`\n*   **summary**: Balance too low to send value.\n\n### LiquidityRestrictions[\u200b](#liquidityrestrictions \"Direct link to LiquidityRestrictions\")\n\n*   **interface**: `api.errors.balances.LiquidityRestrictions.is`\n*   **summary**: Account liquidity restrictions prevent withdrawal.\n\n### TooManyFreezes[\u200b](#toomanyfreezes \"Direct link to TooManyFreezes\")\n\n*   **interface**: `api.errors.balances.TooManyFreezes.is`\n*   **summary**: Number of freezes exceed `MaxFreezes`.\n\n### TooManyHolds[\u200b](#toomanyholds \"Direct link to TooManyHolds\")\n\n*   **interface**: `api.errors.balances.TooManyHolds.is`\n*   **summary**: Number of holds exceed `MaxHolds`.\n\n### TooManyReserves[\u200b](#toomanyreserves \"Direct link to TooManyReserves\")\n\n*   **interface**: `api.errors.balances.TooManyReserves.is`\n*   **summary**: Number of named reserves exceed `MaxReserves`.\n\n### VestingBalance[\u200b](#vestingbalance \"Direct link to VestingBalance\")\n\n*   **interface**: `api.errors.balances.VestingBalance.is`\n*   **summary**: Vesting balance too high to send value.\n\n* * *\n\nbeefy[\u200b](#beefy \"Direct link to beefy\")\n\n----------------------------------------\n\n### DuplicateOffenceReport[\u200b](#duplicateoffencereport-1 \"Direct link to DuplicateOffenceReport\")\n\n*   **interface**: `api.errors.beefy.DuplicateOffenceReport.is`\n*   **summary**: A given equivocation report is valid but already previously reported.\n\n### InvalidEquivocationProof[\u200b](#invalidequivocationproof-1 \"Direct link to InvalidEquivocationProof\")\n\n*   **interface**: `api.errors.beefy.InvalidEquivocationProof.is`\n*   **summary**: An equivocation proof provided as part of an equivocation report is invalid.\n\n### InvalidKeyOwnershipProof[\u200b](#invalidkeyownershipproof-1 \"Direct link to InvalidKeyOwnershipProof\")\n\n*   **interface**: `api.errors.beefy.InvalidKeyOwnershipProof.is`\n*   **summary**: A key ownership proof provided as part of an equivocation report is invalid.\n\n* * *\n\nbounties[\u200b](#bounties \"Direct link to bounties\")\n\n-------------------------------------------------\n\n### HasActiveChildBounty[\u200b](#hasactivechildbounty \"Direct link to HasActiveChildBounty\")\n\n*   **interface**: `api.errors.bounties.HasActiveChildBounty.is`\n*   **summary**: The bounty cannot be closed because it has active child bounties.\n\n### InsufficientProposersBalance[\u200b](#insufficientproposersbalance \"Direct link to InsufficientProposersBalance\")\n\n*   **interface**: `api.errors.bounties.InsufficientProposersBalance.is`\n*   **summary**: Proposer's balance is too low.\n\n### InvalidFee[\u200b](#invalidfee \"Direct link to InvalidFee\")\n\n*   **interface**: `api.errors.bounties.InvalidFee.is`\n*   **summary**: Invalid bounty fee.\n\n### InvalidIndex[\u200b](#invalidindex \"Direct link to InvalidIndex\")\n\n*   **interface**: `api.errors.bounties.InvalidIndex.is`\n*   **summary**: No proposal or bounty at that index.\n\n### InvalidValue[\u200b](#invalidvalue \"Direct link to InvalidValue\")\n\n*   **interface**: `api.errors.bounties.InvalidValue.is`\n*   **summary**: Invalid bounty value.\n\n### PendingPayout[\u200b](#pendingpayout \"Direct link to PendingPayout\")\n\n*   **interface**: `api.errors.bounties.PendingPayout.is`\n*   **summary**: A bounty payout is pending. To cancel the bounty, you must unassign and slash the curator.\n\n### Premature[\u200b](#premature \"Direct link to Premature\")\n\n*   **interface**: `api.errors.bounties.Premature.is`\n*   **summary**: The bounties cannot be claimed/closed because it's still in the countdown period.\n\n### ReasonTooBig[\u200b](#reasontoobig \"Direct link to ReasonTooBig\")\n\n*   **interface**: `api.errors.bounties.ReasonTooBig.is`\n*   **summary**: The reason given is just too big.\n\n### RequireCurator[\u200b](#requirecurator \"Direct link to RequireCurator\")\n\n*   **interface**: `api.errors.bounties.RequireCurator.is`\n*   **summary**: Require bounty curator.\n\n### TooManyQueued[\u200b](#toomanyqueued \"Direct link to TooManyQueued\")\n\n*   **interface**: `api.errors.bounties.TooManyQueued.is`\n*   **summary**: Too many approvals are already queued.\n\n### UnexpectedStatus[\u200b](#unexpectedstatus \"Direct link to UnexpectedStatus\")\n\n*   **interface**: `api.errors.bounties.UnexpectedStatus.is`\n*   **summary**: The bounty status is unexpected.\n\n* * *\n\nchildBounties[\u200b](#childbounties \"Direct link to childBounties\")\n\n----------------------------------------------------------------\n\n### InsufficientBountyBalance[\u200b](#insufficientbountybalance \"Direct link to InsufficientBountyBalance\")\n\n*   **interface**: `api.errors.childBounties.InsufficientBountyBalance.is`\n*   **summary**: The bounty balance is not enough to add new child-bounty.\n\n### ParentBountyNotActive[\u200b](#parentbountynotactive \"Direct link to ParentBountyNotActive\")\n\n*   **interface**: `api.errors.childBounties.ParentBountyNotActive.is`\n*   **summary**: The parent bounty is not in active state.\n\n### TooManyChildBounties[\u200b](#toomanychildbounties \"Direct link to TooManyChildBounties\")\n\n*   **interface**: `api.errors.childBounties.TooManyChildBounties.is`\n*   **summary**: Number of child bounties exceeds limit `MaxActiveChildBountyCount`.\n\n* * *\n\nclaims[\u200b](#claims \"Direct link to claims\")\n\n-------------------------------------------\n\n### InvalidEthereumSignature[\u200b](#invalidethereumsignature \"Direct link to InvalidEthereumSignature\")\n\n*   **interface**: `api.errors.claims.InvalidEthereumSignature.is`\n*   **summary**: Invalid Ethereum signature.\n\n### InvalidStatement[\u200b](#invalidstatement \"Direct link to InvalidStatement\")\n\n*   **interface**: `api.errors.claims.InvalidStatement.is`\n*   **summary**: A needed statement was not included.\n\n### PotUnderflow[\u200b](#potunderflow \"Direct link to PotUnderflow\")\n\n*   **interface**: `api.errors.claims.PotUnderflow.is`\n*   **summary**: There's not enough in the pot to pay out some unvested amount. Generally implies a logic error.\n\n### SenderHasNoClaim[\u200b](#senderhasnoclaim \"Direct link to SenderHasNoClaim\")\n\n*   **interface**: `api.errors.claims.SenderHasNoClaim.is`\n*   **summary**: Account ID sending transaction has no claim.\n\n### SignerHasNoClaim[\u200b](#signerhasnoclaim \"Direct link to SignerHasNoClaim\")\n\n*   **interface**: `api.errors.claims.SignerHasNoClaim.is`\n*   **summary**: Ethereum address has no claim.\n\n### VestedBalanceExists[\u200b](#vestedbalanceexists \"Direct link to VestedBalanceExists\")\n\n*   **interface**: `api.errors.claims.VestedBalanceExists.is`\n*   **summary**: The account already has a vested balance.\n\n* * *\n\nconfiguration[\u200b](#configuration \"Direct link to configuration\")\n\n----------------------------------------------------------------\n\n### InvalidNewValue[\u200b](#invalidnewvalue \"Direct link to InvalidNewValue\")\n\n*   **interface**: `api.errors.configuration.InvalidNewValue.is`\n*   **summary**: The new value for a configuration parameter is invalid.\n\n* * *\n\nconvictionVoting[\u200b](#convictionvoting \"Direct link to convictionVoting\")\n\n-------------------------------------------------------------------------\n\n### AlreadyDelegating[\u200b](#alreadydelegating \"Direct link to AlreadyDelegating\")\n\n*   **interface**: `api.errors.convictionVoting.AlreadyDelegating.is`\n*   **summary**: The account is already delegating.\n\n### AlreadyVoting[\u200b](#alreadyvoting \"Direct link to AlreadyVoting\")\n\n*   **interface**: `api.errors.convictionVoting.AlreadyVoting.is`\n*   **summary**: The account currently has votes attached to it and the operation cannot succeed until these are removed, either through `unvote` or `reap_vote`.\n\n### BadClass[\u200b](#badclass \"Direct link to BadClass\")\n\n*   **interface**: `api.errors.convictionVoting.BadClass.is`\n*   **summary**: The class ID supplied is invalid.\n\n### ClassNeeded[\u200b](#classneeded \"Direct link to ClassNeeded\")\n\n*   **interface**: `api.errors.convictionVoting.ClassNeeded.is`\n*   **summary**: The class must be supplied since it is not easily determinable from the state.\n\n### InsufficientFunds[\u200b](#insufficientfunds \"Direct link to InsufficientFunds\")\n\n*   **interface**: `api.errors.convictionVoting.InsufficientFunds.is`\n*   **summary**: Too high a balance was provided that the account cannot afford.\n\n### MaxVotesReached[\u200b](#maxvotesreached \"Direct link to MaxVotesReached\")\n\n*   **interface**: `api.errors.convictionVoting.MaxVotesReached.is`\n*   **summary**: Maximum number of votes reached.\n\n### Nonsense[\u200b](#nonsense \"Direct link to Nonsense\")\n\n*   **interface**: `api.errors.convictionVoting.Nonsense.is`\n*   **summary**: Delegation to oneself makes no sense.\n\n### NoPermission[\u200b](#nopermission \"Direct link to NoPermission\")\n\n*   **interface**: `api.errors.convictionVoting.NoPermission.is`\n*   **summary**: The actor has no permission to conduct the action.\n\n### NoPermissionYet[\u200b](#nopermissionyet \"Direct link to NoPermissionYet\")\n\n*   **interface**: `api.errors.convictionVoting.NoPermissionYet.is`\n*   **summary**: The actor has no permission to conduct the action right now but will do in the future.\n\n### NotDelegating[\u200b](#notdelegating \"Direct link to NotDelegating\")\n\n*   **interface**: `api.errors.convictionVoting.NotDelegating.is`\n*   **summary**: The account is not currently delegating.\n\n### NotOngoing[\u200b](#notongoing \"Direct link to NotOngoing\")\n\n*   **interface**: `api.errors.convictionVoting.NotOngoing.is`\n*   **summary**: Poll is not ongoing.\n\n### NotVoter[\u200b](#notvoter \"Direct link to NotVoter\")\n\n*   **interface**: `api.errors.convictionVoting.NotVoter.is`\n*   **summary**: The given account did not vote on the poll.\n\n* * *\n\ncrowdloan[\u200b](#crowdloan \"Direct link to crowdloan\")\n\n----------------------------------------------------\n\n### AlreadyInNewRaise[\u200b](#alreadyinnewraise \"Direct link to AlreadyInNewRaise\")\n\n*   **interface**: `api.errors.crowdloan.AlreadyInNewRaise.is`\n*   **summary**: The fund is already in `NewRaise`\n\n### BidOrLeaseActive[\u200b](#bidorleaseactive \"Direct link to BidOrLeaseActive\")\n\n*   **interface**: `api.errors.crowdloan.BidOrLeaseActive.is`\n*   **summary**: This parachain's bid or lease is still active and withdraw cannot yet begin.\n\n### CannotEndInPast[\u200b](#cannotendinpast \"Direct link to CannotEndInPast\")\n\n*   **interface**: `api.errors.crowdloan.CannotEndInPast.is`\n*   **summary**: The campaign ends before the current block number. The end must be in the future.\n\n### CapExceeded[\u200b](#capexceeded \"Direct link to CapExceeded\")\n\n*   **interface**: `api.errors.crowdloan.CapExceeded.is`\n*   **summary**: Contributions exceed maximum amount.\n\n### ContributionPeriodOver[\u200b](#contributionperiodover \"Direct link to ContributionPeriodOver\")\n\n*   **interface**: `api.errors.crowdloan.ContributionPeriodOver.is`\n*   **summary**: The contribution period has already ended.\n\n### ContributionTooSmall[\u200b](#contributiontoosmall \"Direct link to ContributionTooSmall\")\n\n*   **interface**: `api.errors.crowdloan.ContributionTooSmall.is`\n*   **summary**: The contribution was below the minimum, `MinContribution`.\n\n### EndTooFarInFuture[\u200b](#endtoofarinfuture \"Direct link to EndTooFarInFuture\")\n\n*   **interface**: `api.errors.crowdloan.EndTooFarInFuture.is`\n*   **summary**: The end date for this crowdloan is not sensible.\n\n### FirstPeriodInPast[\u200b](#firstperiodinpast \"Direct link to FirstPeriodInPast\")\n\n*   **interface**: `api.errors.crowdloan.FirstPeriodInPast.is`\n*   **summary**: The current lease period is more than the first lease period.\n\n### FirstPeriodTooFarInFuture[\u200b](#firstperiodtoofarinfuture \"Direct link to FirstPeriodTooFarInFuture\")\n\n*   **interface**: `api.errors.crowdloan.FirstPeriodTooFarInFuture.is`\n*   **summary**: The first lease period needs to at least be less than 3 `max_value`.\n\n### FundNotEnded[\u200b](#fundnotended \"Direct link to FundNotEnded\")\n\n*   **interface**: `api.errors.crowdloan.FundNotEnded.is`\n*   **summary**: The crowdloan has not yet ended.\n\n### InvalidOrigin[\u200b](#invalidorigin \"Direct link to InvalidOrigin\")\n\n*   **interface**: `api.errors.crowdloan.InvalidOrigin.is`\n*   **summary**: The origin of this call is invalid.\n\n### InvalidParaId[\u200b](#invalidparaid \"Direct link to InvalidParaId\")\n\n*   **interface**: `api.errors.crowdloan.InvalidParaId.is`\n*   **summary**: Invalid fund index.\n\n### InvalidSignature[\u200b](#invalidsignature \"Direct link to InvalidSignature\")\n\n*   **interface**: `api.errors.crowdloan.InvalidSignature.is`\n*   **summary**: Invalid signature.\n\n### LastPeriodBeforeFirstPeriod[\u200b](#lastperiodbeforefirstperiod \"Direct link to LastPeriodBeforeFirstPeriod\")\n\n*   **interface**: `api.errors.crowdloan.LastPeriodBeforeFirstPeriod.is`\n*   **summary**: Last lease period must be greater than first lease period.\n\n### LastPeriodTooFarInFuture[\u200b](#lastperiodtoofarinfuture \"Direct link to LastPeriodTooFarInFuture\")\n\n*   **interface**: `api.errors.crowdloan.LastPeriodTooFarInFuture.is`\n*   **summary**: The last lease period cannot be more than 3 periods after the first period.\n\n### LeaseActive[\u200b](#leaseactive \"Direct link to LeaseActive\")\n\n*   **interface**: `api.errors.crowdloan.LeaseActive.is`\n*   **summary**: This parachain lease is still active and retirement cannot yet begin.\n\n### MemoTooLarge[\u200b](#memotoolarge \"Direct link to MemoTooLarge\")\n\n*   **interface**: `api.errors.crowdloan.MemoTooLarge.is`\n*   **summary**: The provided memo is too large.\n\n### NoContributions[\u200b](#nocontributions \"Direct link to NoContributions\")\n\n*   **interface**: `api.errors.crowdloan.NoContributions.is`\n*   **summary**: There are no contributions stored in this crowdloan.\n\n### NoLeasePeriod[\u200b](#noleaseperiod \"Direct link to NoLeasePeriod\")\n\n*   **interface**: `api.errors.crowdloan.NoLeasePeriod.is`\n*   **summary**: A lease period has not started yet, due to an offset in the starting block.\n\n### NotParachain[\u200b](#notparachain \"Direct link to NotParachain\")\n\n*   **interface**: `api.errors.crowdloan.NotParachain.is`\n*   **summary**: This crowdloan does not correspond to a parachain.\n\n### NotReadyToDissolve[\u200b](#notreadytodissolve \"Direct link to NotReadyToDissolve\")\n\n*   **interface**: `api.errors.crowdloan.NotReadyToDissolve.is`\n*   **summary**: The crowdloan is not ready to dissolve. Potentially still has a slot or in retirement period.\n\n### Overflow[\u200b](#overflow \"Direct link to Overflow\")\n\n*   **interface**: `api.errors.crowdloan.Overflow.is`\n*   **summary**: There was an overflow.\n\n### VrfDelayInProgress[\u200b](#vrfdelayinprogress \"Direct link to VrfDelayInProgress\")\n\n*   **interface**: `api.errors.crowdloan.VrfDelayInProgress.is`\n*   **summary**: No contributions allowed during the VRF delay\n\n* * *\n\nelectionProviderMultiPhase[\u200b](#electionprovidermultiphase \"Direct link to electionProviderMultiPhase\")\n\n-------------------------------------------------------------------------------------------------------\n\n### BoundNotMet[\u200b](#boundnotmet \"Direct link to BoundNotMet\")\n\n*   **interface**: `api.errors.electionProviderMultiPhase.BoundNotMet.is`\n*   **summary**: Some bound not met\n\n### CallNotAllowed[\u200b](#callnotallowed \"Direct link to CallNotAllowed\")\n\n*   **interface**: `api.errors.electionProviderMultiPhase.CallNotAllowed.is`\n*   **summary**: The call is not allowed at this point.\n\n### FallbackFailed[\u200b](#fallbackfailed \"Direct link to FallbackFailed\")\n\n*   **interface**: `api.errors.electionProviderMultiPhase.FallbackFailed.is`\n*   **summary**: The fallback failed\n\n### InvalidSubmissionIndex[\u200b](#invalidsubmissionindex \"Direct link to InvalidSubmissionIndex\")\n\n*   **interface**: `api.errors.electionProviderMultiPhase.InvalidSubmissionIndex.is`\n*   **summary**: `Self::insert_submission` returned an invalid index.\n\n### MissingSnapshotMetadata[\u200b](#missingsnapshotmetadata \"Direct link to MissingSnapshotMetadata\")\n\n*   **interface**: `api.errors.electionProviderMultiPhase.MissingSnapshotMetadata.is`\n*   **summary**: Snapshot metadata should exist but didn't.\n\n### OcwCallWrongEra[\u200b](#ocwcallwrongera \"Direct link to OcwCallWrongEra\")\n\n*   **interface**: `api.errors.electionProviderMultiPhase.OcwCallWrongEra.is`\n*   **summary**: OCW submitted solution for wrong round\n\n### PreDispatchEarlySubmission[\u200b](#predispatchearlysubmission \"Direct link to PreDispatchEarlySubmission\")\n\n*   **interface**: `api.errors.electionProviderMultiPhase.PreDispatchEarlySubmission.is`\n*   **summary**: Submission was too early.\n\n### PreDispatchWeakSubmission[\u200b](#predispatchweaksubmission \"Direct link to PreDispatchWeakSubmission\")\n\n*   **interface**: `api.errors.electionProviderMultiPhase.PreDispatchWeakSubmission.is`\n*   **summary**: Submission was too weak, score-wise.\n\n### PreDispatchWrongWinnerCount[\u200b](#predispatchwrongwinnercount \"Direct link to PreDispatchWrongWinnerCount\")\n\n*   **interface**: `api.errors.electionProviderMultiPhase.PreDispatchWrongWinnerCount.is`\n*   **summary**: Wrong number of winners presented.\n\n### SignedCannotPayDeposit[\u200b](#signedcannotpaydeposit \"Direct link to SignedCannotPayDeposit\")\n\n*   **interface**: `api.errors.electionProviderMultiPhase.SignedCannotPayDeposit.is`\n*   **summary**: The origin failed to pay the deposit.\n\n### SignedInvalidWitness[\u200b](#signedinvalidwitness \"Direct link to SignedInvalidWitness\")\n\n*   **interface**: `api.errors.electionProviderMultiPhase.SignedInvalidWitness.is`\n*   **summary**: Witness data to dispatchable is invalid.\n\n### SignedQueueFull[\u200b](#signedqueuefull \"Direct link to SignedQueueFull\")\n\n*   **interface**: `api.errors.electionProviderMultiPhase.SignedQueueFull.is`\n*   **summary**: The queue was full, and the solution was not better than any of the existing ones.\n\n### SignedTooMuchWeight[\u200b](#signedtoomuchweight \"Direct link to SignedTooMuchWeight\")\n\n*   **interface**: `api.errors.electionProviderMultiPhase.SignedTooMuchWeight.is`\n*   **summary**: The signed submission consumes too much weight\n\n### TooManyWinners[\u200b](#toomanywinners \"Direct link to TooManyWinners\")\n\n*   **interface**: `api.errors.electionProviderMultiPhase.TooManyWinners.is`\n*   **summary**: Submitted solution has too many winners\n\n* * *\n\nfastUnstake[\u200b](#fastunstake \"Direct link to fastUnstake\")\n\n----------------------------------------------------------\n\n### AlreadyHead[\u200b](#alreadyhead \"Direct link to AlreadyHead\")\n\n*   **interface**: `api.errors.fastUnstake.AlreadyHead.is`\n*   **summary**: The provided un-staker is already in Head, and cannot deregister.\n\n### AlreadyQueued[\u200b](#alreadyqueued \"Direct link to AlreadyQueued\")\n\n*   **interface**: `api.errors.fastUnstake.AlreadyQueued.is`\n*   **summary**: The bonded account has already been queued.\n\n### CallNotAllowed[\u200b](#callnotallowed-1 \"Direct link to CallNotAllowed\")\n\n*   **interface**: `api.errors.fastUnstake.CallNotAllowed.is`\n*   **summary**: The call is not allowed at this point because the pallet is not active.\n\n### NotController[\u200b](#notcontroller \"Direct link to NotController\")\n\n*   **interface**: `api.errors.fastUnstake.NotController.is`\n    \n*   **summary**: The provided Controller account was not found.\n    \n    This means that the given account is not bonded.\n    \n\n### NotFullyBonded[\u200b](#notfullybonded \"Direct link to NotFullyBonded\")\n\n*   **interface**: `api.errors.fastUnstake.NotFullyBonded.is`\n*   **summary**: The bonded account has active unlocking chunks.\n\n### NotQueued[\u200b](#notqueued \"Direct link to NotQueued\")\n\n*   **interface**: `api.errors.fastUnstake.NotQueued.is`\n*   **summary**: The provided un-staker is not in the `Queue`.\n\n* * *\n\nfellowshipCollective[\u200b](#fellowshipcollective \"Direct link to fellowshipCollective\")\n\n-------------------------------------------------------------------------------------\n\n### AlreadyMember[\u200b](#alreadymember \"Direct link to AlreadyMember\")\n\n*   **interface**: `api.errors.fellowshipCollective.AlreadyMember.is`\n*   **summary**: Account is already a member.\n\n### Corruption[\u200b](#corruption \"Direct link to Corruption\")\n\n*   **interface**: `api.errors.fellowshipCollective.Corruption.is`\n*   **summary**: Unexpected error in state.\n\n### InvalidWitness[\u200b](#invalidwitness \"Direct link to InvalidWitness\")\n\n*   **interface**: `api.errors.fellowshipCollective.InvalidWitness.is`\n*   **summary**: The information provided is incorrect.\n\n### NoneRemaining[\u200b](#noneremaining \"Direct link to NoneRemaining\")\n\n*   **interface**: `api.errors.fellowshipCollective.NoneRemaining.is`\n*   **summary**: There are no further records to be removed.\n\n### NoPermission[\u200b](#nopermission-1 \"Direct link to NoPermission\")\n\n*   **interface**: `api.errors.fellowshipCollective.NoPermission.is`\n*   **summary**: The origin is not sufficiently privileged to do the operation.\n\n### NotMember[\u200b](#notmember \"Direct link to NotMember\")\n\n*   **interface**: `api.errors.fellowshipCollective.NotMember.is`\n*   **summary**: Account is not a member.\n\n### NotPolling[\u200b](#notpolling \"Direct link to NotPolling\")\n\n*   **interface**: `api.errors.fellowshipCollective.NotPolling.is`\n*   **summary**: The given poll index is unknown or has closed.\n\n### Ongoing[\u200b](#ongoing \"Direct link to Ongoing\")\n\n*   **interface**: `api.errors.fellowshipCollective.Ongoing.is`\n*   **summary**: The given poll is still ongoing.\n\n### RankTooLow[\u200b](#ranktoolow \"Direct link to RankTooLow\")\n\n*   **interface**: `api.errors.fellowshipCollective.RankTooLow.is`\n*   **summary**: The member's rank is too low to vote.\n\n* * *\n\nfellowshipReferenda[\u200b](#fellowshipreferenda \"Direct link to fellowshipReferenda\")\n\n----------------------------------------------------------------------------------\n\n### BadReferendum[\u200b](#badreferendum \"Direct link to BadReferendum\")\n\n*   **interface**: `api.errors.fellowshipReferenda.BadReferendum.is`\n*   **summary**: The referendum index provided is invalid in this context.\n\n### BadStatus[\u200b](#badstatus \"Direct link to BadStatus\")\n\n*   **interface**: `api.errors.fellowshipReferenda.BadStatus.is`\n*   **summary**: The referendum status is invalid for this operation.\n\n### BadTrack[\u200b](#badtrack \"Direct link to BadTrack\")\n\n*   **interface**: `api.errors.fellowshipReferenda.BadTrack.is`\n*   **summary**: The track identifier given was invalid.\n\n### Full[\u200b](#full \"Direct link to Full\")\n\n*   **interface**: `api.errors.fellowshipReferenda.Full.is`\n*   **summary**: There are already a full complement of referenda in progress for this track.\n\n### HasDeposit[\u200b](#hasdeposit \"Direct link to HasDeposit\")\n\n*   **interface**: `api.errors.fellowshipReferenda.HasDeposit.is`\n*   **summary**: Referendum's decision deposit is already paid.\n\n### NoDeposit[\u200b](#nodeposit \"Direct link to NoDeposit\")\n\n*   **interface**: `api.errors.fellowshipReferenda.NoDeposit.is`\n*   **summary**: The deposit cannot be refunded since none was made.\n\n### NoPermission[\u200b](#nopermission-2 \"Direct link to NoPermission\")\n\n*   **interface**: `api.errors.fellowshipReferenda.NoPermission.is`\n*   **summary**: The deposit refunder is not the depositor.\n\n### NothingToDo[\u200b](#nothingtodo \"Direct link to NothingToDo\")\n\n*   **interface**: `api.errors.fellowshipReferenda.NothingToDo.is`\n*   **summary**: There was nothing to do in the advancement.\n\n### NotOngoing[\u200b](#notongoing-1 \"Direct link to NotOngoing\")\n\n*   **interface**: `api.errors.fellowshipReferenda.NotOngoing.is`\n*   **summary**: Referendum is not ongoing.\n\n### NoTrack[\u200b](#notrack \"Direct link to NoTrack\")\n\n*   **interface**: `api.errors.fellowshipReferenda.NoTrack.is`\n*   **summary**: No track exists for the proposal origin.\n\n### PreimageNotExist[\u200b](#preimagenotexist \"Direct link to PreimageNotExist\")\n\n*   **interface**: `api.errors.fellowshipReferenda.PreimageNotExist.is`\n*   **summary**: The preimage does not exist.\n\n### QueueEmpty[\u200b](#queueempty \"Direct link to QueueEmpty\")\n\n*   **interface**: `api.errors.fellowshipReferenda.QueueEmpty.is`\n*   **summary**: The queue of the track is empty.\n\n### Unfinished[\u200b](#unfinished \"Direct link to Unfinished\")\n\n*   **interface**: `api.errors.fellowshipReferenda.Unfinished.is`\n*   **summary**: Any deposit cannot be refunded until after the decision is over.\n\n* * *\n\ngrandpa[\u200b](#grandpa \"Direct link to grandpa\")\n\n----------------------------------------------\n\n### ChangePending[\u200b](#changepending \"Direct link to ChangePending\")\n\n*   **interface**: `api.errors.grandpa.ChangePending.is`\n*   **summary**: Attempt to signal GRANDPA change with one already pending.\n\n### DuplicateOffenceReport[\u200b](#duplicateoffencereport-2 \"Direct link to DuplicateOffenceReport\")\n\n*   **interface**: `api.errors.grandpa.DuplicateOffenceReport.is`\n*   **summary**: A given equivocation report is valid but already previously reported.\n\n### InvalidEquivocationProof[\u200b](#invalidequivocationproof-2 \"Direct link to InvalidEquivocationProof\")\n\n*   **interface**: `api.errors.grandpa.InvalidEquivocationProof.is`\n*   **summary**: An equivocation proof provided as part of an equivocation report is invalid.\n\n### InvalidKeyOwnershipProof[\u200b](#invalidkeyownershipproof-2 \"Direct link to InvalidKeyOwnershipProof\")\n\n*   **interface**: `api.errors.grandpa.InvalidKeyOwnershipProof.is`\n*   **summary**: A key ownership proof provided as part of an equivocation report is invalid.\n\n### PauseFailed[\u200b](#pausefailed \"Direct link to PauseFailed\")\n\n*   **interface**: `api.errors.grandpa.PauseFailed.is`\n*   **summary**: Attempt to signal GRANDPA pause when the authority set isn't live (either paused or already pending pause).\n\n### ResumeFailed[\u200b](#resumefailed \"Direct link to ResumeFailed\")\n\n*   **interface**: `api.errors.grandpa.ResumeFailed.is`\n*   **summary**: Attempt to signal GRANDPA resume when the authority set isn't paused (either live or already pending resume).\n\n### TooSoon[\u200b](#toosoon \"Direct link to TooSoon\")\n\n*   **interface**: `api.errors.grandpa.TooSoon.is`\n*   **summary**: Cannot signal forced change so soon after last.\n\n* * *\n\nhrmp[\u200b](#hrmp \"Direct link to hrmp\")\n\n-------------------------------------\n\n### AcceptHrmpChannelAlreadyConfirmed[\u200b](#accepthrmpchannelalreadyconfirmed \"Direct link to AcceptHrmpChannelAlreadyConfirmed\")\n\n*   **interface**: `api.errors.hrmp.AcceptHrmpChannelAlreadyConfirmed.is`\n*   **summary**: The channel is already confirmed.\n\n### AcceptHrmpChannelDoesntExist[\u200b](#accepthrmpchanneldoesntexist \"Direct link to AcceptHrmpChannelDoesntExist\")\n\n*   **interface**: `api.errors.hrmp.AcceptHrmpChannelDoesntExist.is`\n*   **summary**: The channel from the sender to the origin doesn't exist.\n\n### AcceptHrmpChannelLimitExceeded[\u200b](#accepthrmpchannellimitexceeded \"Direct link to AcceptHrmpChannelLimitExceeded\")\n\n*   **interface**: `api.errors.hrmp.AcceptHrmpChannelLimitExceeded.is`\n*   **summary**: The recipient already has the maximum number of allowed inbound channels.\n\n### CancelHrmpOpenChannelUnauthorized[\u200b](#cancelhrmpopenchannelunauthorized \"Direct link to CancelHrmpOpenChannelUnauthorized\")\n\n*   **interface**: `api.errors.hrmp.CancelHrmpOpenChannelUnauthorized.is`\n*   **summary**: Canceling is requested by neither the sender nor recipient of the open channel request.\n\n### CloseHrmpChannelAlreadyUnderway[\u200b](#closehrmpchannelalreadyunderway \"Direct link to CloseHrmpChannelAlreadyUnderway\")\n\n*   **interface**: `api.errors.hrmp.CloseHrmpChannelAlreadyUnderway.is`\n*   **summary**: The channel close request is already requested.\n\n### CloseHrmpChannelDoesntExist[\u200b](#closehrmpchanneldoesntexist \"Direct link to CloseHrmpChannelDoesntExist\")\n\n*   **interface**: `api.errors.hrmp.CloseHrmpChannelDoesntExist.is`\n*   **summary**: The channel to be closed doesn't exist.\n\n### CloseHrmpChannelUnauthorized[\u200b](#closehrmpchannelunauthorized \"Direct link to CloseHrmpChannelUnauthorized\")\n\n*   **interface**: `api.errors.hrmp.CloseHrmpChannelUnauthorized.is`\n*   **summary**: The origin tries to close a channel where it is neither the sender nor the recipient.\n\n### OpenHrmpChannelAlreadyConfirmed[\u200b](#openhrmpchannelalreadyconfirmed \"Direct link to OpenHrmpChannelAlreadyConfirmed\")\n\n*   **interface**: `api.errors.hrmp.OpenHrmpChannelAlreadyConfirmed.is`\n*   **summary**: Cannot cancel an HRMP open channel request because it is already confirmed.\n\n### OpenHrmpChannelAlreadyExists[\u200b](#openhrmpchannelalreadyexists \"Direct link to OpenHrmpChannelAlreadyExists\")\n\n*   **interface**: `api.errors.hrmp.OpenHrmpChannelAlreadyExists.is`\n*   **summary**: The channel already exists\n\n### OpenHrmpChannelAlreadyRequested[\u200b](#openhrmpchannelalreadyrequested \"Direct link to OpenHrmpChannelAlreadyRequested\")\n\n*   **interface**: `api.errors.hrmp.OpenHrmpChannelAlreadyRequested.is`\n*   **summary**: There is already a request to open the same channel.\n\n### OpenHrmpChannelCapacityExceedsLimit[\u200b](#openhrmpchannelcapacityexceedslimit \"Direct link to OpenHrmpChannelCapacityExceedsLimit\")\n\n*   **interface**: `api.errors.hrmp.OpenHrmpChannelCapacityExceedsLimit.is`\n*   **summary**: The requested capacity exceeds the global limit.\n\n### OpenHrmpChannelDoesntExist[\u200b](#openhrmpchanneldoesntexist \"Direct link to OpenHrmpChannelDoesntExist\")\n\n*   **interface**: `api.errors.hrmp.OpenHrmpChannelDoesntExist.is`\n*   **summary**: The open request doesn't exist.\n\n### OpenHrmpChannelInvalidRecipient[\u200b](#openhrmpchannelinvalidrecipient \"Direct link to OpenHrmpChannelInvalidRecipient\")\n\n*   **interface**: `api.errors.hrmp.OpenHrmpChannelInvalidRecipient.is`\n*   **summary**: The recipient is not a valid para.\n\n### OpenHrmpChannelLimitExceeded[\u200b](#openhrmpchannellimitexceeded \"Direct link to OpenHrmpChannelLimitExceeded\")\n\n*   **interface**: `api.errors.hrmp.OpenHrmpChannelLimitExceeded.is`\n*   **summary**: The sender already has the maximum number of allowed outbound channels.\n\n### OpenHrmpChannelMessageSizeExceedsLimit[\u200b](#openhrmpchannelmessagesizeexceedslimit \"Direct link to OpenHrmpChannelMessageSizeExceedsLimit\")\n\n*   **interface**: `api.errors.hrmp.OpenHrmpChannelMessageSizeExceedsLimit.is`\n*   **summary**: The open request requested the message size that exceeds the global limit.\n\n### OpenHrmpChannelToSelf[\u200b](#openhrmpchanneltoself \"Direct link to OpenHrmpChannelToSelf\")\n\n*   **interface**: `api.errors.hrmp.OpenHrmpChannelToSelf.is`\n*   **summary**: The sender tried to open a channel to themselves.\n\n### OpenHrmpChannelZeroCapacity[\u200b](#openhrmpchannelzerocapacity \"Direct link to OpenHrmpChannelZeroCapacity\")\n\n*   **interface**: `api.errors.hrmp.OpenHrmpChannelZeroCapacity.is`\n*   **summary**: The requested capacity is zero.\n\n### OpenHrmpChannelZeroMessageSize[\u200b](#openhrmpchannelzeromessagesize \"Direct link to OpenHrmpChannelZeroMessageSize\")\n\n*   **interface**: `api.errors.hrmp.OpenHrmpChannelZeroMessageSize.is`\n*   **summary**: The requested maximum message size is 0.\n\n### WrongWitness[\u200b](#wrongwitness \"Direct link to WrongWitness\")\n\n*   **interface**: `api.errors.hrmp.WrongWitness.is`\n*   **summary**: The provided witness data is wrong.\n\n* * *\n\nidentity[\u200b](#identity \"Direct link to identity\")\n\n-------------------------------------------------\n\n### AlreadyClaimed[\u200b](#alreadyclaimed \"Direct link to AlreadyClaimed\")\n\n*   **interface**: `api.errors.identity.AlreadyClaimed.is`\n*   **summary**: Account ID is already named.\n\n### EmptyIndex[\u200b](#emptyindex \"Direct link to EmptyIndex\")\n\n*   **interface**: `api.errors.identity.EmptyIndex.is`\n*   **summary**: Empty index.\n\n### FeeChanged[\u200b](#feechanged \"Direct link to FeeChanged\")\n\n*   **interface**: `api.errors.identity.FeeChanged.is`\n*   **summary**: Fee is changed.\n\n### InvalidIndex[\u200b](#invalidindex-1 \"Direct link to InvalidIndex\")\n\n*   **interface**: `api.errors.identity.InvalidIndex.is`\n*   **summary**: The index is invalid.\n\n### InvalidJudgement[\u200b](#invalidjudgement \"Direct link to InvalidJudgement\")\n\n*   **interface**: `api.errors.identity.InvalidJudgement.is`\n*   **summary**: Invalid judgement.\n\n### InvalidTarget[\u200b](#invalidtarget \"Direct link to InvalidTarget\")\n\n*   **interface**: `api.errors.identity.InvalidTarget.is`\n*   **summary**: The target is invalid.\n\n### JudgementForDifferentIdentity[\u200b](#judgementfordifferentidentity \"Direct link to JudgementForDifferentIdentity\")\n\n*   **interface**: `api.errors.identity.JudgementForDifferentIdentity.is`\n*   **summary**: The provided judgement was for a different identity.\n\n### JudgementGiven[\u200b](#judgementgiven \"Direct link to JudgementGiven\")\n\n*   **interface**: `api.errors.identity.JudgementGiven.is`\n*   **summary**: Judgement given.\n\n### JudgementPaymentFailed[\u200b](#judgementpaymentfailed \"Direct link to JudgementPaymentFailed\")\n\n*   **interface**: `api.errors.identity.JudgementPaymentFailed.is`\n*   **summary**: Error that occurs when there is an issue paying for judgement.\n\n### NoIdentity[\u200b](#noidentity \"Direct link to NoIdentity\")\n\n*   **interface**: `api.errors.identity.NoIdentity.is`\n*   **summary**: No identity found.\n\n### NotFound[\u200b](#notfound \"Direct link to NotFound\")\n\n*   **interface**: `api.errors.identity.NotFound.is`\n*   **summary**: Account isn't found.\n\n### NotNamed[\u200b](#notnamed \"Direct link to NotNamed\")\n\n*   **interface**: `api.errors.identity.NotNamed.is`\n*   **summary**: Account isn't named.\n\n### NotOwned[\u200b](#notowned \"Direct link to NotOwned\")\n\n*   **interface**: `api.errors.identity.NotOwned.is`\n*   **summary**: Sub-account isn't owned by sender.\n\n### NotSub[\u200b](#notsub \"Direct link to NotSub\")\n\n*   **interface**: `api.errors.identity.NotSub.is`\n*   **summary**: Sender is not a sub-account.\n\n### StickyJudgement[\u200b](#stickyjudgement \"Direct link to StickyJudgement\")\n\n*   **interface**: `api.errors.identity.StickyJudgement.is`\n*   **summary**: Sticky judgement.\n\n### TooManyFields[\u200b](#toomanyfields \"Direct link to TooManyFields\")\n\n*   **interface**: `api.errors.identity.TooManyFields.is`\n*   **summary**: Too many additional fields.\n\n### TooManyRegistrars[\u200b](#toomanyregistrars \"Direct link to TooManyRegistrars\")\n\n*   **interface**: `api.errors.identity.TooManyRegistrars.is`\n*   **summary**: Maximum amount of registrars reached. Cannot add any more.\n\n### TooManySubAccounts[\u200b](#toomanysubaccounts \"Direct link to TooManySubAccounts\")\n\n*   **interface**: `api.errors.identity.TooManySubAccounts.is`\n*   **summary**: Too many subs-accounts.\n\n* * *\n\nimOnline[\u200b](#imonline \"Direct link to imOnline\")\n\n-------------------------------------------------\n\n### DuplicatedHeartbeat[\u200b](#duplicatedheartbeat \"Direct link to DuplicatedHeartbeat\")\n\n*   **interface**: `api.errors.imOnline.DuplicatedHeartbeat.is`\n*   **summary**: Duplicated heartbeat.\n\n### InvalidKey[\u200b](#invalidkey \"Direct link to InvalidKey\")\n\n*   **interface**: `api.errors.imOnline.InvalidKey.is`\n*   **summary**: Non existent public key.\n\n* * *\n\nindices[\u200b](#indices \"Direct link to indices\")\n\n----------------------------------------------\n\n### InUse[\u200b](#inuse \"Direct link to InUse\")\n\n*   **interface**: `api.errors.indices.InUse.is`\n*   **summary**: The index was not available.\n\n### NotAssigned[\u200b](#notassigned \"Direct link to NotAssigned\")\n\n*   **interface**: `api.errors.indices.NotAssigned.is`\n*   **summary**: The index was not already assigned.\n\n### NotOwner[\u200b](#notowner \"Direct link to NotOwner\")\n\n*   **interface**: `api.errors.indices.NotOwner.is`\n*   **summary**: The index is assigned to another account.\n\n### NotTransfer[\u200b](#nottransfer \"Direct link to NotTransfer\")\n\n*   **interface**: `api.errors.indices.NotTransfer.is`\n*   **summary**: The source and destination accounts are identical.\n\n### Permanent[\u200b](#permanent \"Direct link to Permanent\")\n\n*   **interface**: `api.errors.indices.Permanent.is`\n*   **summary**: The index is permanent and may not be freed/changed.\n\n* * *\n\nmessageQueue[\u200b](#messagequeue \"Direct link to messageQueue\")\n\n-------------------------------------------------------------\n\n### AlreadyProcessed[\u200b](#alreadyprocessed \"Direct link to AlreadyProcessed\")\n\n*   **interface**: `api.errors.messageQueue.AlreadyProcessed.is`\n*   **summary**: The message was already processed and cannot be processed again.\n\n### InsufficientWeight[\u200b](#insufficientweight \"Direct link to InsufficientWeight\")\n\n*   **interface**: `api.errors.messageQueue.InsufficientWeight.is`\n*   **summary**: There is temporarily not enough weight to continue servicing messages.\n\n### NoMessage[\u200b](#nomessage \"Direct link to NoMessage\")\n\n*   **interface**: `api.errors.messageQueue.NoMessage.is`\n*   **summary**: The referenced message could not be found.\n\n### NoPage[\u200b](#nopage \"Direct link to NoPage\")\n\n*   **interface**: `api.errors.messageQueue.NoPage.is`\n*   **summary**: Page to be reaped does not exist.\n\n### NotReapable[\u200b](#notreapable \"Direct link to NotReapable\")\n\n*   **interface**: `api.errors.messageQueue.NotReapable.is`\n*   **summary**: Page is not reapable because it has items remaining to be processed and is not old enough.\n\n### Queued[\u200b](#queued \"Direct link to Queued\")\n\n*   **interface**: `api.errors.messageQueue.Queued.is`\n*   **summary**: The message is queued for future execution.\n\n### QueuePaused[\u200b](#queuepaused \"Direct link to QueuePaused\")\n\n*   **interface**: `api.errors.messageQueue.QueuePaused.is`\n    \n*   **summary**: The queue is paused and no message can be executed from it.\n    \n    This can change at any time and may resolve in the future by re-trying.\n    \n\n### TemporarilyUnprocessable[\u200b](#temporarilyunprocessable \"Direct link to TemporarilyUnprocessable\")\n\n*   **interface**: `api.errors.messageQueue.TemporarilyUnprocessable.is`\n    \n*   **summary**: This message is temporarily unprocessable.\n    \n    Such errors are expected, but not guaranteed, to resolve themselves eventually through retrying.\n    \n\n* * *\n\nmultisig[\u200b](#multisig \"Direct link to multisig\")\n\n-------------------------------------------------\n\n### AlreadyApproved[\u200b](#alreadyapproved \"Direct link to AlreadyApproved\")\n\n*   **interface**: `api.errors.multisig.AlreadyApproved.is`\n*   **summary**: Call is already approved by this signatory.\n\n### AlreadyStored[\u200b](#alreadystored \"Direct link to AlreadyStored\")\n\n*   **interface**: `api.errors.multisig.AlreadyStored.is`\n*   **summary**: The data to be stored is already stored.\n\n### MaxWeightTooLow[\u200b](#maxweighttoolow \"Direct link to MaxWeightTooLow\")\n\n*   **interface**: `api.errors.multisig.MaxWeightTooLow.is`\n*   **summary**: The maximum weight information provided was too low.\n\n### MinimumThreshold[\u200b](#minimumthreshold \"Direct link to MinimumThreshold\")\n\n*   **interface**: `api.errors.multisig.MinimumThreshold.is`\n*   **summary**: Threshold must be 2 or greater.\n\n### NoApprovalsNeeded[\u200b](#noapprovalsneeded \"Direct link to NoApprovalsNeeded\")\n\n*   **interface**: `api.errors.multisig.NoApprovalsNeeded.is`\n*   **summary**: Call doesn't need any (more) approvals.\n\n### NotFound[\u200b](#notfound-1 \"Direct link to NotFound\")\n\n*   **interface**: `api.errors.multisig.NotFound.is`\n*   **summary**: Multisig operation not found when attempting to cancel.\n\n### NoTimepoint[\u200b](#notimepoint \"Direct link to NoTimepoint\")\n\n*   **interface**: `api.errors.multisig.NoTimepoint.is`\n*   **summary**: No timepoint was given, yet the multisig operation is already underway.\n\n### NotOwner[\u200b](#notowner-1 \"Direct link to NotOwner\")\n\n*   **interface**: `api.errors.multisig.NotOwner.is`\n*   **summary**: Only the account that originally created the multisig is able to cancel it.\n\n### SenderInSignatories[\u200b](#senderinsignatories \"Direct link to SenderInSignatories\")\n\n*   **interface**: `api.errors.multisig.SenderInSignatories.is`\n*   **summary**: The sender was contained in the other signatories; it shouldn't be.\n\n### SignatoriesOutOfOrder[\u200b](#signatoriesoutoforder \"Direct link to SignatoriesOutOfOrder\")\n\n*   **interface**: `api.errors.multisig.SignatoriesOutOfOrder.is`\n*   **summary**: The signatories were provided out of order; they should be ordered.\n\n### TooFewSignatories[\u200b](#toofewsignatories \"Direct link to TooFewSignatories\")\n\n*   **interface**: `api.errors.multisig.TooFewSignatories.is`\n*   **summary**: There are too few signatories in the list.\n\n### TooManySignatories[\u200b](#toomanysignatories \"Direct link to TooManySignatories\")\n\n*   **interface**: `api.errors.multisig.TooManySignatories.is`\n*   **summary**: There are too many signatories in the list.\n\n### UnexpectedTimepoint[\u200b](#unexpectedtimepoint \"Direct link to UnexpectedTimepoint\")\n\n*   **interface**: `api.errors.multisig.UnexpectedTimepoint.is`\n*   **summary**: A timepoint was given, yet no multisig operation is underway.\n\n### WrongTimepoint[\u200b](#wrongtimepoint \"Direct link to WrongTimepoint\")\n\n*   **interface**: `api.errors.multisig.WrongTimepoint.is`\n*   **summary**: A different timepoint was given to the multisig operation that is underway.\n\n* * *\n\nnis[\u200b](#nis \"Direct link to nis\")\n\n----------------------------------\n\n### AlreadyCommunal[\u200b](#alreadycommunal \"Direct link to AlreadyCommunal\")\n\n*   **interface**: `api.errors.nis.AlreadyCommunal.is`\n*   **summary**: The receipt is already communal.\n\n### AlreadyFunded[\u200b](#alreadyfunded \"Direct link to AlreadyFunded\")\n\n*   **interface**: `api.errors.nis.AlreadyFunded.is`\n*   **summary**: There are enough funds for what is required.\n\n### AlreadyPrivate[\u200b](#alreadyprivate \"Direct link to AlreadyPrivate\")\n\n*   **interface**: `api.errors.nis.AlreadyPrivate.is`\n*   **summary**: The receipt is already private.\n\n### AmountTooSmall[\u200b](#amounttoosmall \"Direct link to AmountTooSmall\")\n\n*   **interface**: `api.errors.nis.AmountTooSmall.is`\n*   **summary**: The amount of the bid is less than the minimum allowed.\n\n### BidTooLow[\u200b](#bidtoolow \"Direct link to BidTooLow\")\n\n*   **interface**: `api.errors.nis.BidTooLow.is`\n*   **summary**: The queue for the bid's duration is full and the amount bid is too low to get in through replacing an existing bid.\n\n### DurationTooBig[\u200b](#durationtoobig \"Direct link to DurationTooBig\")\n\n*   **interface**: `api.errors.nis.DurationTooBig.is`\n*   **summary**: The duration is the bid is greater than the number of queues.\n\n### DurationTooSmall[\u200b](#durationtoosmall \"Direct link to DurationTooSmall\")\n\n*   **interface**: `api.errors.nis.DurationTooSmall.is`\n*   **summary**: The duration of the bid is less than one.\n\n### MakesDust[\u200b](#makesdust \"Direct link to MakesDust\")\n\n*   **interface**: `api.errors.nis.MakesDust.is`\n*   **summary**: The operation would result in a receipt worth an insignficant value.\n\n### NotExpired[\u200b](#notexpired \"Direct link to NotExpired\")\n\n*   **interface**: `api.errors.nis.NotExpired.is`\n*   **summary**: Bond not yet at expiry date.\n\n### NotOwner[\u200b](#notowner-2 \"Direct link to NotOwner\")\n\n*   **interface**: `api.errors.nis.NotOwner.is`\n*   **summary**: Not the owner of the receipt.\n\n### PortionTooBig[\u200b](#portiontoobig \"Direct link to PortionTooBig\")\n\n*   **interface**: `api.errors.nis.PortionTooBig.is`\n*   **summary**: The portion supplied is beyond the value of the receipt.\n\n### Throttled[\u200b](#throttled \"Direct link to Throttled\")\n\n*   **interface**: `api.errors.nis.Throttled.is`\n*   **summary**: The thaw throttle has been reached for this period.\n\n### Unfunded[\u200b](#unfunded \"Direct link to Unfunded\")\n\n*   **interface**: `api.errors.nis.Unfunded.is`\n*   **summary**: Not enough funds are held to pay out.\n\n### UnknownBid[\u200b](#unknownbid \"Direct link to UnknownBid\")\n\n*   **interface**: `api.errors.nis.UnknownBid.is`\n*   **summary**: The given bid for retraction is not found.\n\n### UnknownReceipt[\u200b](#unknownreceipt \"Direct link to UnknownReceipt\")\n\n*   **interface**: `api.errors.nis.UnknownReceipt.is`\n*   **summary**: Receipt index is unknown.\n\n* * *\n\nnisCounterpartBalances[\u200b](#niscounterpartbalances \"Direct link to nisCounterpartBalances\")\n\n-------------------------------------------------------------------------------------------\n\n### DeadAccount[\u200b](#deadaccount-1 \"Direct link to DeadAccount\")\n\n*   **interface**: `api.errors.nisCounterpartBalances.DeadAccount.is`\n*   **summary**: Beneficiary account must pre-exist.\n\n### ExistentialDeposit[\u200b](#existentialdeposit-1 \"Direct link to ExistentialDeposit\")\n\n*   **interface**: `api.errors.nisCounterpartBalances.ExistentialDeposit.is`\n*   **summary**: Value too low to create account due to existential deposit.\n\n### ExistingVestingSchedule[\u200b](#existingvestingschedule-1 \"Direct link to ExistingVestingSchedule\")\n\n*   **interface**: `api.errors.nisCounterpartBalances.ExistingVestingSchedule.is`\n*   **summary**: A vesting schedule already exists for this account.\n\n### Expendability[\u200b](#expendability-1 \"Direct link to Expendability\")\n\n*   **interface**: `api.errors.nisCounterpartBalances.Expendability.is`\n*   **summary**: Transfer/payment would kill account.\n\n### InsufficientBalance[\u200b](#insufficientbalance-1 \"Direct link to InsufficientBalance\")\n\n*   **interface**: `api.errors.nisCounterpartBalances.InsufficientBalance.is`\n*   **summary**: Balance too low to send value.\n\n### LiquidityRestrictions[\u200b](#liquidityrestrictions-1 \"Direct link to LiquidityRestrictions\")\n\n*   **interface**: `api.errors.nisCounterpartBalances.LiquidityRestrictions.is`\n*   **summary**: Account liquidity restrictions prevent withdrawal.\n\n### TooManyFreezes[\u200b](#toomanyfreezes-1 \"Direct link to TooManyFreezes\")\n\n*   **interface**: `api.errors.nisCounterpartBalances.TooManyFreezes.is`\n*   **summary**: Number of freezes exceed `MaxFreezes`.\n\n### TooManyHolds[\u200b](#toomanyholds-1 \"Direct link to TooManyHolds\")\n\n*   **interface**: `api.errors.nisCounterpartBalances.TooManyHolds.is`\n*   **summary**: Number of holds exceed `MaxHolds`.\n\n### TooManyReserves[\u200b](#toomanyreserves-1 \"Direct link to TooManyReserves\")\n\n*   **interface**: `api.errors.nisCounterpartBalances.TooManyReserves.is`\n*   **summary**: Number of named reserves exceed `MaxReserves`.\n\n### VestingBalance[\u200b](#vestingbalance-1 \"Direct link to VestingBalance\")\n\n*   **interface**: `api.errors.nisCounterpartBalances.VestingBalance.is`\n*   **summary**: Vesting balance too high to send value.\n\n* * *\n\nnominationPools[\u200b](#nominationpools \"Direct link to nominationPools\")\n\n----------------------------------------------------------------------\n\n### AccountBelongsToOtherPool[\u200b](#accountbelongstootherpool \"Direct link to AccountBelongsToOtherPool\")\n\n*   **interface**: `api.errors.nominationPools.AccountBelongsToOtherPool.is`\n*   **summary**: An account is already delegating in another pool. An account may only belong to one pool at a time.\n\n### BondExtraRestricted[\u200b](#bondextrarestricted \"Direct link to BondExtraRestricted\")\n\n*   **interface**: `api.errors.nominationPools.BondExtraRestricted.is`\n*   **summary**: Bonding extra is restricted to the exact pending reward amount.\n\n### CanNotChangeState[\u200b](#cannotchangestate \"Direct link to CanNotChangeState\")\n\n*   **interface**: `api.errors.nominationPools.CanNotChangeState.is`\n*   **summary**: The pools state cannot be changed.\n\n### CannotWithdrawAny[\u200b](#cannotwithdrawany \"Direct link to CannotWithdrawAny\")\n\n*   **interface**: `api.errors.nominationPools.CannotWithdrawAny.is`\n*   **summary**: None of the funds can be withdrawn yet because the bonding duration has not passed.\n\n### CommissionChangeRateNotAllowed[\u200b](#commissionchangeratenotallowed \"Direct link to CommissionChangeRateNotAllowed\")\n\n*   **interface**: `api.errors.nominationPools.CommissionChangeRateNotAllowed.is`\n*   **summary**: The submitted changes to commission change rate are not allowed.\n\n### CommissionChangeThrottled[\u200b](#commissionchangethrottled \"Direct link to CommissionChangeThrottled\")\n\n*   **interface**: `api.errors.nominationPools.CommissionChangeThrottled.is`\n*   **summary**: Not enough blocks have surpassed since the last commission update.\n\n### CommissionExceedsGlobalMaximum[\u200b](#commissionexceedsglobalmaximum \"Direct link to CommissionExceedsGlobalMaximum\")\n\n*   **interface**: `api.errors.nominationPools.CommissionExceedsGlobalMaximum.is`\n*   **summary**: The supplied commission exceeds global maximum commission.\n\n### CommissionExceedsMaximum[\u200b](#commissionexceedsmaximum \"Direct link to CommissionExceedsMaximum\")\n\n*   **interface**: `api.errors.nominationPools.CommissionExceedsMaximum.is`\n*   **summary**: The supplied commission exceeds the max allowed commission.\n\n### Defensive[\u200b](#defensive \"Direct link to Defensive\")\n\n*   **interface**: `api.errors.nominationPools.Defensive.is`\n*   **summary**: Some error occurred that should never happen. This should be reported to the maintainers.\n\n### DoesNotHavePermission[\u200b](#doesnothavepermission \"Direct link to DoesNotHavePermission\")\n\n*   **interface**: `api.errors.nominationPools.DoesNotHavePermission.is`\n*   **summary**: The caller does not have adequate permissions.\n\n### FullyUnbonding[\u200b](#fullyunbonding \"Direct link to FullyUnbonding\")\n\n*   **interface**: `api.errors.nominationPools.FullyUnbonding.is`\n*   **summary**: The member is fully unbonded (and thus cannot access the bonded and reward pool anymore to, for example, collect rewards).\n\n### InvalidPoolId[\u200b](#invalidpoolid \"Direct link to InvalidPoolId\")\n\n*   **interface**: `api.errors.nominationPools.InvalidPoolId.is`\n*   **summary**: Pool id provided is not correct/usable.\n\n### MaxCommissionRestricted[\u200b](#maxcommissionrestricted \"Direct link to MaxCommissionRestricted\")\n\n*   **interface**: `api.errors.nominationPools.MaxCommissionRestricted.is`\n*   **summary**: The pool's max commission cannot be set higher than the existing value.\n\n### MaxPoolMembers[\u200b](#maxpoolmembers \"Direct link to MaxPoolMembers\")\n\n*   **interface**: `api.errors.nominationPools.MaxPoolMembers.is`\n*   **summary**: Too many members in the pool or system.\n\n### MaxPools[\u200b](#maxpools \"Direct link to MaxPools\")\n\n*   **interface**: `api.errors.nominationPools.MaxPools.is`\n*   **summary**: The system is maxed out on pools.\n\n### MaxUnbondingLimit[\u200b](#maxunbondinglimit \"Direct link to MaxUnbondingLimit\")\n\n*   **interface**: `api.errors.nominationPools.MaxUnbondingLimit.is`\n*   **summary**: The member cannot unbond further chunks due to reaching the limit.\n\n### MetadataExceedsMaxLen[\u200b](#metadataexceedsmaxlen \"Direct link to MetadataExceedsMaxLen\")\n\n*   **interface**: `api.errors.nominationPools.MetadataExceedsMaxLen.is`\n*   **summary**: Metadata exceeds \\[`Config::MaxMetadataLen`\\]\n\n### MinimumBondNotMet[\u200b](#minimumbondnotmet \"Direct link to MinimumBondNotMet\")\n\n*   **interface**: `api.errors.nominationPools.MinimumBondNotMet.is`\n    \n*   **summary**: The amount does not meet the minimum bond to either join or create a pool.\n    \n    The depositor can never unbond to a value less than `Pallet::depositor_min_bond`. The caller does not have nominating permissions for the pool. Members can never unbond to a value below `MinJoinBond`.\n    \n\n### NoCommissionCurrentSet[\u200b](#nocommissioncurrentset \"Direct link to NoCommissionCurrentSet\")\n\n*   **interface**: `api.errors.nominationPools.NoCommissionCurrentSet.is`\n*   **summary**: No commission current has been set.\n\n### NoPendingCommission[\u200b](#nopendingcommission \"Direct link to NoPendingCommission\")\n\n*   **interface**: `api.errors.nominationPools.NoPendingCommission.is`\n*   **summary**: There is no pending commission to claim.\n\n### NotDestroying[\u200b](#notdestroying \"Direct link to NotDestroying\")\n\n*   **interface**: `api.errors.nominationPools.NotDestroying.is`\n*   **summary**: A pool must be in \\[`PoolState::Destroying`\\] in order for the depositor to unbond or for other members to be permissionlessly unbonded.\n\n### NotKickerOrDestroying[\u200b](#notkickerordestroying \"Direct link to NotKickerOrDestroying\")\n\n*   **interface**: `api.errors.nominationPools.NotKickerOrDestroying.is`\n*   **summary**: Either a) the caller cannot make a valid kick or b) the pool is not destroying.\n\n### NotNominator[\u200b](#notnominator \"Direct link to NotNominator\")\n\n*   **interface**: `api.errors.nominationPools.NotNominator.is`\n*   **summary**: The caller does not have nominating permissions for the pool.\n\n### NotOpen[\u200b](#notopen \"Direct link to NotOpen\")\n\n*   **interface**: `api.errors.nominationPools.NotOpen.is`\n*   **summary**: The pool is not open to join\n\n### OverflowRisk[\u200b](#overflowrisk \"Direct link to OverflowRisk\")\n\n*   **interface**: `api.errors.nominationPools.OverflowRisk.is`\n*   **summary**: The transaction could not be executed due to overflow risk for the pool.\n\n### PartialUnbondNotAllowedPermissionlessly[\u200b](#partialunbondnotallowedpermissionlessly \"Direct link to PartialUnbondNotAllowedPermissionlessly\")\n\n*   **interface**: `api.errors.nominationPools.PartialUnbondNotAllowedPermissionlessly.is`\n*   **summary**: Partial unbonding now allowed permissionlessly.\n\n### PoolIdInUse[\u200b](#poolidinuse \"Direct link to PoolIdInUse\")\n\n*   **interface**: `api.errors.nominationPools.PoolIdInUse.is`\n*   **summary**: Pool id currently in use.\n\n### PoolMemberNotFound[\u200b](#poolmembernotfound \"Direct link to PoolMemberNotFound\")\n\n*   **interface**: `api.errors.nominationPools.PoolMemberNotFound.is`\n*   **summary**: An account is not a member.\n\n### PoolNotFound[\u200b](#poolnotfound \"Direct link to PoolNotFound\")\n\n*   **interface**: `api.errors.nominationPools.PoolNotFound.is`\n*   **summary**: A (bonded) pool id does not exist.\n\n### RewardPoolNotFound[\u200b](#rewardpoolnotfound \"Direct link to RewardPoolNotFound\")\n\n*   **interface**: `api.errors.nominationPools.RewardPoolNotFound.is`\n*   **summary**: A reward pool does not exist. In all cases this is a system logic error.\n\n### SubPoolsNotFound[\u200b](#subpoolsnotfound \"Direct link to SubPoolsNotFound\")\n\n*   **interface**: `api.errors.nominationPools.SubPoolsNotFound.is`\n*   **summary**: A sub pool does not exist.\n\n* * *\n\nparaInclusion[\u200b](#parainclusion \"Direct link to paraInclusion\")\n\n----------------------------------------------------------------\n\n### BitfieldAllZeros[\u200b](#bitfieldallzeros \"Direct link to BitfieldAllZeros\")\n\n*   **interface**: `api.errors.paraInclusion.BitfieldAllZeros.is`\n*   **summary**: Bitfield consists of zeros only.\n\n### BitfieldDuplicateOrUnordered[\u200b](#bitfieldduplicateorunordered \"Direct link to BitfieldDuplicateOrUnordered\")\n\n*   **interface**: `api.errors.paraInclusion.BitfieldDuplicateOrUnordered.is`\n*   **summary**: Multiple bitfields submitted by same validator or validators out of order by index.\n\n### BitfieldReferencesFreedCore[\u200b](#bitfieldreferencesfreedcore \"Direct link to BitfieldReferencesFreedCore\")\n\n*   **interface**: `api.errors.paraInclusion.BitfieldReferencesFreedCore.is`\n*   **summary**: A bitfield that references a freed core, either intentionally or as part of a concluded invalid dispute.\n\n### CandidateScheduledBeforeParaFree[\u200b](#candidatescheduledbeforeparafree \"Direct link to CandidateScheduledBeforeParaFree\")\n\n*   **interface**: `api.errors.paraInclusion.CandidateScheduledBeforeParaFree.is`\n*   **summary**: Candidate scheduled despite pending candidate already existing for the para.\n\n### DisallowedRelayParent[\u200b](#disallowedrelayparent \"Direct link to DisallowedRelayParent\")\n\n*   **interface**: `api.errors.paraInclusion.DisallowedRelayParent.is`\n*   **summary**: The candidate's relay-parent was not allowed. Either it was not recent enough or it didn't advance based on the last parachain block.\n\n### HeadDataTooLarge[\u200b](#headdatatoolarge \"Direct link to HeadDataTooLarge\")\n\n*   **interface**: `api.errors.paraInclusion.HeadDataTooLarge.is`\n*   **summary**: Head data exceeds the configured maximum.\n\n### HrmpWatermarkMishandling[\u200b](#hrmpwatermarkmishandling \"Direct link to HrmpWatermarkMishandling\")\n\n*   **interface**: `api.errors.paraInclusion.HrmpWatermarkMishandling.is`\n*   **summary**: The candidate didn't follow the rules of HRMP watermark advancement.\n\n### IncorrectDownwardMessageHandling[\u200b](#incorrectdownwardmessagehandling \"Direct link to IncorrectDownwardMessageHandling\")\n\n*   **interface**: `api.errors.paraInclusion.IncorrectDownwardMessageHandling.is`\n*   **summary**: The downward message queue is not processed correctly.\n\n### InsufficientBacking[\u200b](#insufficientbacking \"Direct link to InsufficientBacking\")\n\n*   **interface**: `api.errors.paraInclusion.InsufficientBacking.is`\n*   **summary**: Insufficient (non-majority) backing.\n\n### InvalidAssignment[\u200b](#invalidassignment \"Direct link to InvalidAssignment\")\n\n*   **interface**: `api.errors.paraInclusion.InvalidAssignment.is`\n*   **summary**: Failed to compute group index for the core: either it's out of bounds or the relay parent doesn't belong to the current session.\n\n### InvalidBacking[\u200b](#invalidbacking \"Direct link to InvalidBacking\")\n\n*   **interface**: `api.errors.paraInclusion.InvalidBacking.is`\n*   **summary**: Invalid (bad signature, unknown validator, etc.) backing.\n\n### InvalidBitfieldSignature[\u200b](#invalidbitfieldsignature \"Direct link to InvalidBitfieldSignature\")\n\n*   **interface**: `api.errors.paraInclusion.InvalidBitfieldSignature.is`\n*   **summary**: Invalid signature\n\n### InvalidGroupIndex[\u200b](#invalidgroupindex \"Direct link to InvalidGroupIndex\")\n\n*   **interface**: `api.errors.paraInclusion.InvalidGroupIndex.is`\n*   **summary**: Invalid group index in core assignment.\n\n### InvalidOutboundHrmp[\u200b](#invalidoutboundhrmp \"Direct link to InvalidOutboundHrmp\")\n\n*   **interface**: `api.errors.paraInclusion.InvalidOutboundHrmp.is`\n*   **summary**: The HRMP messages sent by the candidate is not valid.\n\n### InvalidUpwardMessages[\u200b](#invalidupwardmessages \"Direct link to InvalidUpwardMessages\")\n\n*   **interface**: `api.errors.paraInclusion.InvalidUpwardMessages.is`\n*   **summary**: At least one upward message sent does not pass the acceptance criteria.\n\n### InvalidValidationCodeHash[\u200b](#invalidvalidationcodehash \"Direct link to InvalidValidationCodeHash\")\n\n*   **interface**: `api.errors.paraInclusion.InvalidValidationCodeHash.is`\n*   **summary**: The validation code hash of the candidate is not valid.\n\n### NewCodeTooLarge[\u200b](#newcodetoolarge \"Direct link to NewCodeTooLarge\")\n\n*   **interface**: `api.errors.paraInclusion.NewCodeTooLarge.is`\n*   **summary**: Output code is too large\n\n### NotCollatorSigned[\u200b](#notcollatorsigned \"Direct link to NotCollatorSigned\")\n\n*   **interface**: `api.errors.paraInclusion.NotCollatorSigned.is`\n*   **summary**: Collator did not sign PoV.\n\n### ParaHeadMismatch[\u200b](#paraheadmismatch \"Direct link to ParaHeadMismatch\")\n\n*   **interface**: `api.errors.paraInclusion.ParaHeadMismatch.is`\n*   **summary**: The `para_head` hash in the candidate descriptor doesn't match the hash of the actual para head in the commitments.\n\n### PrematureCodeUpgrade[\u200b](#prematurecodeupgrade \"Direct link to PrematureCodeUpgrade\")\n\n*   **interface**: `api.errors.paraInclusion.PrematureCodeUpgrade.is`\n*   **summary**: Code upgrade prematurely.\n\n### ScheduledOutOfOrder[\u200b](#scheduledoutoforder \"Direct link to ScheduledOutOfOrder\")\n\n*   **interface**: `api.errors.paraInclusion.ScheduledOutOfOrder.is`\n*   **summary**: Scheduled cores out of order.\n\n### UnexpectedRelayParent[\u200b](#unexpectedrelayparent \"Direct link to UnexpectedRelayParent\")\n\n*   **interface**: `api.errors.paraInclusion.UnexpectedRelayParent.is`\n*   **summary**: A different relay parent was provided compared to the on-chain stored one.\n\n### UnscheduledCandidate[\u200b](#unscheduledcandidate \"Direct link to UnscheduledCandidate\")\n\n*   **interface**: `api.errors.paraInclusion.UnscheduledCandidate.is`\n*   **summary**: Candidate submitted but para not scheduled.\n\n### UnsortedOrDuplicateBackedCandidates[\u200b](#unsortedorduplicatebackedcandidates \"Direct link to UnsortedOrDuplicateBackedCandidates\")\n\n*   **interface**: `api.errors.paraInclusion.UnsortedOrDuplicateBackedCandidates.is`\n*   **summary**: Backed candidates are out of order (core index) or contain duplicates.\n\n### UnsortedOrDuplicateDisputeStatementSet[\u200b](#unsortedorduplicatedisputestatementset \"Direct link to UnsortedOrDuplicateDisputeStatementSet\")\n\n*   **interface**: `api.errors.paraInclusion.UnsortedOrDuplicateDisputeStatementSet.is`\n*   **summary**: Dispute statement sets are out of order or contain duplicates.\n\n### UnsortedOrDuplicateValidatorIndices[\u200b](#unsortedorduplicatevalidatorindices \"Direct link to UnsortedOrDuplicateValidatorIndices\")\n\n*   **interface**: `api.errors.paraInclusion.UnsortedOrDuplicateValidatorIndices.is`\n*   **summary**: Validator indices are out of order or contains duplicates.\n\n### ValidationDataHashMismatch[\u200b](#validationdatahashmismatch \"Direct link to ValidationDataHashMismatch\")\n\n*   **interface**: `api.errors.paraInclusion.ValidationDataHashMismatch.is`\n*   **summary**: The validation data hash does not match expected.\n\n### ValidatorIndexOutOfBounds[\u200b](#validatorindexoutofbounds \"Direct link to ValidatorIndexOutOfBounds\")\n\n*   **interface**: `api.errors.paraInclusion.ValidatorIndexOutOfBounds.is`\n*   **summary**: Validator index out of bounds.\n\n### WrongBitfieldSize[\u200b](#wrongbitfieldsize \"Direct link to WrongBitfieldSize\")\n\n*   **interface**: `api.errors.paraInclusion.WrongBitfieldSize.is`\n*   **summary**: Availability bitfield has unexpected size.\n\n* * *\n\nparaInherent[\u200b](#parainherent \"Direct link to paraInherent\")\n\n-------------------------------------------------------------\n\n### CandidateConcludedInvalid[\u200b](#candidateconcludedinvalid \"Direct link to CandidateConcludedInvalid\")\n\n*   **interface**: `api.errors.paraInherent.CandidateConcludedInvalid.is`\n*   **summary**: Disputed candidate that was concluded invalid.\n\n### DisputeInvalid[\u200b](#disputeinvalid \"Direct link to DisputeInvalid\")\n\n*   **interface**: `api.errors.paraInherent.DisputeInvalid.is`\n*   **summary**: A dispute statement was invalid.\n\n### DisputeStatementsUnsortedOrDuplicates[\u200b](#disputestatementsunsortedorduplicates \"Direct link to DisputeStatementsUnsortedOrDuplicates\")\n\n*   **interface**: `api.errors.paraInherent.DisputeStatementsUnsortedOrDuplicates.is`\n*   **summary**: The ordering of dispute statements was invalid.\n\n### InherentOverweight[\u200b](#inherentoverweight \"Direct link to InherentOverweight\")\n\n*   **interface**: `api.errors.paraInherent.InherentOverweight.is`\n*   **summary**: The data given to the inherent will result in an overweight block.\n\n### InvalidParentHeader[\u200b](#invalidparentheader \"Direct link to InvalidParentHeader\")\n\n*   **interface**: `api.errors.paraInherent.InvalidParentHeader.is`\n*   **summary**: The hash of the submitted parent header doesn't correspond to the saved block hash of the parent.\n\n### TooManyInclusionInherents[\u200b](#toomanyinclusioninherents \"Direct link to TooManyInclusionInherents\")\n\n*   **interface**: `api.errors.paraInherent.TooManyInclusionInherents.is`\n*   **summary**: Inclusion inherent called more than once per block.\n\n* * *\n\nparas[\u200b](#paras \"Direct link to paras\")\n\n----------------------------------------\n\n### CannotDowngrade[\u200b](#cannotdowngrade \"Direct link to CannotDowngrade\")\n\n*   **interface**: `api.errors.paras.CannotDowngrade.is`\n*   **summary**: Para cannot be downgraded to an on-demand parachain.\n\n### CannotOffboard[\u200b](#cannotoffboard \"Direct link to CannotOffboard\")\n\n*   **interface**: `api.errors.paras.CannotOffboard.is`\n*   **summary**: Para cannot be offboarded at this time.\n\n### CannotOnboard[\u200b](#cannotonboard \"Direct link to CannotOnboard\")\n\n*   **interface**: `api.errors.paras.CannotOnboard.is`\n*   **summary**: Para cannot be onboarded because it is already tracked by our system.\n\n### CannotUpgrade[\u200b](#cannotupgrade \"Direct link to CannotUpgrade\")\n\n*   **interface**: `api.errors.paras.CannotUpgrade.is`\n*   **summary**: Para cannot be upgraded to a lease holding parachain.\n\n### CannotUpgradeCode[\u200b](#cannotupgradecode \"Direct link to CannotUpgradeCode\")\n\n*   **interface**: `api.errors.paras.CannotUpgradeCode.is`\n*   **summary**: Parachain cannot currently schedule a code upgrade.\n\n### NotRegistered[\u200b](#notregistered \"Direct link to NotRegistered\")\n\n*   **interface**: `api.errors.paras.NotRegistered.is`\n*   **summary**: Para is not registered in our system.\n\n### PvfCheckDoubleVote[\u200b](#pvfcheckdoublevote \"Direct link to PvfCheckDoubleVote\")\n\n*   **interface**: `api.errors.paras.PvfCheckDoubleVote.is`\n*   **summary**: The given validator already has cast a vote.\n\n### PvfCheckInvalidSignature[\u200b](#pvfcheckinvalidsignature \"Direct link to PvfCheckInvalidSignature\")\n\n*   **interface**: `api.errors.paras.PvfCheckInvalidSignature.is`\n*   **summary**: The signature for the PVF pre-checking is invalid.\n\n### PvfCheckStatementFuture[\u200b](#pvfcheckstatementfuture \"Direct link to PvfCheckStatementFuture\")\n\n*   **interface**: `api.errors.paras.PvfCheckStatementFuture.is`\n*   **summary**: The statement for PVF pre-checking is for a future session.\n\n### PvfCheckStatementStale[\u200b](#pvfcheckstatementstale \"Direct link to PvfCheckStatementStale\")\n\n*   **interface**: `api.errors.paras.PvfCheckStatementStale.is`\n*   **summary**: The statement for PVF pre-checking is stale.\n\n### PvfCheckSubjectInvalid[\u200b](#pvfchecksubjectinvalid \"Direct link to PvfCheckSubjectInvalid\")\n\n*   **interface**: `api.errors.paras.PvfCheckSubjectInvalid.is`\n*   **summary**: The given PVF does not exist at the moment of process a vote.\n\n### PvfCheckValidatorIndexOutOfBounds[\u200b](#pvfcheckvalidatorindexoutofbounds \"Direct link to PvfCheckValidatorIndexOutOfBounds\")\n\n*   **interface**: `api.errors.paras.PvfCheckValidatorIndexOutOfBounds.is`\n*   **summary**: Claimed validator index is out of bounds.\n\n* * *\n\nparasDisputes[\u200b](#parasdisputes \"Direct link to parasDisputes\")\n\n----------------------------------------------------------------\n\n### AncientDisputeStatement[\u200b](#ancientdisputestatement \"Direct link to AncientDisputeStatement\")\n\n*   **interface**: `api.errors.parasDisputes.AncientDisputeStatement.is`\n*   **summary**: Ancient dispute statement provided.\n\n### DuplicateDisputeStatementSets[\u200b](#duplicatedisputestatementsets \"Direct link to DuplicateDisputeStatementSets\")\n\n*   **interface**: `api.errors.parasDisputes.DuplicateDisputeStatementSets.is`\n*   **summary**: Duplicate dispute statement sets provided.\n\n### DuplicateStatement[\u200b](#duplicatestatement \"Direct link to DuplicateStatement\")\n\n*   **interface**: `api.errors.parasDisputes.DuplicateStatement.is`\n*   **summary**: Validator vote submitted more than once to dispute.\n\n### InvalidSignature[\u200b](#invalidsignature-1 \"Direct link to InvalidSignature\")\n\n*   **interface**: `api.errors.parasDisputes.InvalidSignature.is`\n*   **summary**: Invalid signature on statement.\n\n### MaliciousBacker[\u200b](#maliciousbacker \"Direct link to MaliciousBacker\")\n\n*   **interface**: `api.errors.parasDisputes.MaliciousBacker.is`\n*   **summary**: A dispute vote from a malicious backer.\n\n### MissingBackingVotes[\u200b](#missingbackingvotes \"Direct link to MissingBackingVotes\")\n\n*   **interface**: `api.errors.parasDisputes.MissingBackingVotes.is`\n*   **summary**: No backing votes were provides along dispute statements.\n\n### SingleSidedDispute[\u200b](#singlesideddispute \"Direct link to SingleSidedDispute\")\n\n*   **interface**: `api.errors.parasDisputes.SingleSidedDispute.is`\n*   **summary**: A dispute where there are only votes on one side.\n\n### UnconfirmedDispute[\u200b](#unconfirmeddispute \"Direct link to UnconfirmedDispute\")\n\n*   **interface**: `api.errors.parasDisputes.UnconfirmedDispute.is`\n*   **summary**: Unconfirmed dispute statement sets provided.\n\n### ValidatorIndexOutOfBounds[\u200b](#validatorindexoutofbounds-1 \"Direct link to ValidatorIndexOutOfBounds\")\n\n*   **interface**: `api.errors.parasDisputes.ValidatorIndexOutOfBounds.is`\n*   **summary**: Validator index on statement is out of bounds for session.\n\n* * *\n\nparasSlashing[\u200b](#parasslashing \"Direct link to parasSlashing\")\n\n----------------------------------------------------------------\n\n### DuplicateSlashingReport[\u200b](#duplicateslashingreport \"Direct link to DuplicateSlashingReport\")\n\n*   **interface**: `api.errors.parasSlashing.DuplicateSlashingReport.is`\n*   **summary**: The given slashing report is valid but already previously reported.\n\n### InvalidCandidateHash[\u200b](#invalidcandidatehash \"Direct link to InvalidCandidateHash\")\n\n*   **interface**: `api.errors.parasSlashing.InvalidCandidateHash.is`\n*   **summary**: The candidate hash is invalid.\n\n### InvalidKeyOwnershipProof[\u200b](#invalidkeyownershipproof-3 \"Direct link to InvalidKeyOwnershipProof\")\n\n*   **interface**: `api.errors.parasSlashing.InvalidKeyOwnershipProof.is`\n*   **summary**: The key ownership proof is invalid.\n\n### InvalidSessionIndex[\u200b](#invalidsessionindex \"Direct link to InvalidSessionIndex\")\n\n*   **interface**: `api.errors.parasSlashing.InvalidSessionIndex.is`\n*   **summary**: The session index is too old or invalid.\n\n### InvalidValidatorIndex[\u200b](#invalidvalidatorindex \"Direct link to InvalidValidatorIndex\")\n\n*   **interface**: `api.errors.parasSlashing.InvalidValidatorIndex.is`\n*   **summary**: There is no pending slash for the given validator index and time slot.\n\n### ValidatorIndexIdMismatch[\u200b](#validatorindexidmismatch \"Direct link to ValidatorIndexIdMismatch\")\n\n*   **interface**: `api.errors.parasSlashing.ValidatorIndexIdMismatch.is`\n*   **summary**: The validator index does not match the validator id.\n\n* * *\n\npreimage[\u200b](#preimage \"Direct link to preimage\")\n\n-------------------------------------------------\n\n### AlreadyNoted[\u200b](#alreadynoted \"Direct link to AlreadyNoted\")\n\n*   **interface**: `api.errors.preimage.AlreadyNoted.is`\n*   **summary**: Preimage has already been noted on-chain.\n\n### NotAuthorized[\u200b](#notauthorized \"Direct link to NotAuthorized\")\n\n*   **interface**: `api.errors.preimage.NotAuthorized.is`\n*   **summary**: The user is not authorized to perform this action.\n\n### NotNoted[\u200b](#notnoted \"Direct link to NotNoted\")\n\n*   **interface**: `api.errors.preimage.NotNoted.is`\n*   **summary**: The preimage cannot be removed since it has not yet been noted.\n\n### NotRequested[\u200b](#notrequested \"Direct link to NotRequested\")\n\n*   **interface**: `api.errors.preimage.NotRequested.is`\n*   **summary**: The preimage request cannot be removed since no outstanding requests exist.\n\n### Requested[\u200b](#requested \"Direct link to Requested\")\n\n*   **interface**: `api.errors.preimage.Requested.is`\n*   **summary**: A preimage may not be removed when there are outstanding requests.\n\n### TooBig[\u200b](#toobig \"Direct link to TooBig\")\n\n*   **interface**: `api.errors.preimage.TooBig.is`\n*   **summary**: Preimage is too large to store on-chain.\n\n* * *\n\nproxy[\u200b](#proxy \"Direct link to proxy\")\n\n----------------------------------------\n\n### Duplicate[\u200b](#duplicate \"Direct link to Duplicate\")\n\n*   **interface**: `api.errors.proxy.Duplicate.is`\n*   **summary**: Account is already a proxy.\n\n### NoPermission[\u200b](#nopermission-3 \"Direct link to NoPermission\")\n\n*   **interface**: `api.errors.proxy.NoPermission.is`\n*   **summary**: Call may not be made by proxy because it may escalate its privileges.\n\n### NoSelfProxy[\u200b](#noselfproxy \"Direct link to NoSelfProxy\")\n\n*   **interface**: `api.errors.proxy.NoSelfProxy.is`\n*   **summary**: Cannot add self as proxy.\n\n### NotFound[\u200b](#notfound-2 \"Direct link to NotFound\")\n\n*   **interface**: `api.errors.proxy.NotFound.is`\n*   **summary**: Proxy registration not found.\n\n### NotProxy[\u200b](#notproxy \"Direct link to NotProxy\")\n\n*   **interface**: `api.errors.proxy.NotProxy.is`\n*   **summary**: Sender is not a proxy of the account to be proxied.\n\n### TooMany[\u200b](#toomany \"Direct link to TooMany\")\n\n*   **interface**: `api.errors.proxy.TooMany.is`\n*   **summary**: There are too many proxies registered or too many announcements pending.\n\n### Unannounced[\u200b](#unannounced \"Direct link to Unannounced\")\n\n*   **interface**: `api.errors.proxy.Unannounced.is`\n*   **summary**: Announcement, if made at all, was made too recently.\n\n### Unproxyable[\u200b](#unproxyable \"Direct link to Unproxyable\")\n\n*   **interface**: `api.errors.proxy.Unproxyable.is`\n*   **summary**: A call which is incompatible with the proxy type's filter was attempted.\n\n* * *\n\nrecovery[\u200b](#recovery \"Direct link to recovery\")\n\n-------------------------------------------------\n\n### AlreadyProxy[\u200b](#alreadyproxy \"Direct link to AlreadyProxy\")\n\n*   **interface**: `api.errors.recovery.AlreadyProxy.is`\n*   **summary**: This account is already set up for recovery\n\n### AlreadyRecoverable[\u200b](#alreadyrecoverable \"Direct link to AlreadyRecoverable\")\n\n*   **interface**: `api.errors.recovery.AlreadyRecoverable.is`\n*   **summary**: This account is already set up for recovery\n\n### AlreadyStarted[\u200b](#alreadystarted \"Direct link to AlreadyStarted\")\n\n*   **interface**: `api.errors.recovery.AlreadyStarted.is`\n*   **summary**: A recovery process has already started for this account\n\n### AlreadyVouched[\u200b](#alreadyvouched \"Direct link to AlreadyVouched\")\n\n*   **interface**: `api.errors.recovery.AlreadyVouched.is`\n*   **summary**: This user has already vouched for this recovery\n\n### BadState[\u200b](#badstate \"Direct link to BadState\")\n\n*   **interface**: `api.errors.recovery.BadState.is`\n*   **summary**: Some internal state is broken.\n\n### DelayPeriod[\u200b](#delayperiod \"Direct link to DelayPeriod\")\n\n*   **interface**: `api.errors.recovery.DelayPeriod.is`\n*   **summary**: The friend must wait until the delay period to vouch for this recovery\n\n### MaxFriends[\u200b](#maxfriends \"Direct link to MaxFriends\")\n\n*   **interface**: `api.errors.recovery.MaxFriends.is`\n*   **summary**: Friends list must be less than max friends\n\n### NotAllowed[\u200b](#notallowed \"Direct link to NotAllowed\")\n\n*   **interface**: `api.errors.recovery.NotAllowed.is`\n*   **summary**: User is not allowed to make a call on behalf of this account\n\n### NotEnoughFriends[\u200b](#notenoughfriends \"Direct link to NotEnoughFriends\")\n\n*   **interface**: `api.errors.recovery.NotEnoughFriends.is`\n*   **summary**: Friends list must be greater than zero and threshold\n\n### NotFriend[\u200b](#notfriend \"Direct link to NotFriend\")\n\n*   **interface**: `api.errors.recovery.NotFriend.is`\n*   **summary**: This account is not a friend who can vouch\n\n### NotRecoverable[\u200b](#notrecoverable \"Direct link to NotRecoverable\")\n\n*   **interface**: `api.errors.recovery.NotRecoverable.is`\n*   **summary**: This account is not set up for recovery\n\n### NotSorted[\u200b](#notsorted \"Direct link to NotSorted\")\n\n*   **interface**: `api.errors.recovery.NotSorted.is`\n*   **summary**: Friends list must be sorted and free of duplicates\n\n### NotStarted[\u200b](#notstarted \"Direct link to NotStarted\")\n\n*   **interface**: `api.errors.recovery.NotStarted.is`\n*   **summary**: A recovery process has not started for this rescuer\n\n### StillActive[\u200b](#stillactive \"Direct link to StillActive\")\n\n*   **interface**: `api.errors.recovery.StillActive.is`\n*   **summary**: There are still active recovery attempts that need to be closed\n\n### Threshold[\u200b](#threshold \"Direct link to Threshold\")\n\n*   **interface**: `api.errors.recovery.Threshold.is`\n*   **summary**: The threshold for recovering this account has not been met\n\n### ZeroThreshold[\u200b](#zerothreshold \"Direct link to ZeroThreshold\")\n\n*   **interface**: `api.errors.recovery.ZeroThreshold.is`\n*   **summary**: Threshold must be greater than zero\n\n* * *\n\nreferenda[\u200b](#referenda \"Direct link to referenda\")\n\n----------------------------------------------------\n\n### BadReferendum[\u200b](#badreferendum-1 \"Direct link to BadReferendum\")\n\n*   **interface**: `api.errors.referenda.BadReferendum.is`\n*   **summary**: The referendum index provided is invalid in this context.\n\n### BadStatus[\u200b](#badstatus-1 \"Direct link to BadStatus\")\n\n*   **interface**: `api.errors.referenda.BadStatus.is`\n*   **summary**: The referendum status is invalid for this operation.\n\n### BadTrack[\u200b](#badtrack-1 \"Direct link to BadTrack\")\n\n*   **interface**: `api.errors.referenda.BadTrack.is`\n*   **summary**: The track identifier given was invalid.\n\n### Full[\u200b](#full-1 \"Direct link to Full\")\n\n*   **interface**: `api.errors.referenda.Full.is`\n*   **summary**: There are already a full complement of referenda in progress for this track.\n\n### HasDeposit[\u200b](#hasdeposit-1 \"Direct link to HasDeposit\")\n\n*   **interface**: `api.errors.referenda.HasDeposit.is`\n*   **summary**: Referendum's decision deposit is already paid.\n\n### NoDeposit[\u200b](#nodeposit-1 \"Direct link to NoDeposit\")\n\n*   **interface**: `api.errors.referenda.NoDeposit.is`\n*   **summary**: The deposit cannot be refunded since none was made.\n\n### NoPermission[\u200b](#nopermission-4 \"Direct link to NoPermission\")\n\n*   **interface**: `api.errors.referenda.NoPermission.is`\n*   **summary**: The deposit refunder is not the depositor.\n\n### NothingToDo[\u200b](#nothingtodo-1 \"Direct link to NothingToDo\")\n\n*   **interface**: `api.errors.referenda.NothingToDo.is`\n*   **summary**: There was nothing to do in the advancement.\n\n### NotOngoing[\u200b](#notongoing-2 \"Direct link to NotOngoing\")\n\n*   **interface**: `api.errors.referenda.NotOngoing.is`\n*   **summary**: Referendum is not ongoing.\n\n### NoTrack[\u200b](#notrack-1 \"Direct link to NoTrack\")\n\n*   **interface**: `api.errors.referenda.NoTrack.is`\n*   **summary**: No track exists for the proposal origin.\n\n### PreimageNotExist[\u200b](#preimagenotexist-1 \"Direct link to PreimageNotExist\")\n\n*   **interface**: `api.errors.referenda.PreimageNotExist.is`\n*   **summary**: The preimage does not exist.\n\n### QueueEmpty[\u200b](#queueempty-1 \"Direct link to QueueEmpty\")\n\n*   **interface**: `api.errors.referenda.QueueEmpty.is`\n*   **summary**: The queue of the track is empty.\n\n### Unfinished[\u200b](#unfinished-1 \"Direct link to Unfinished\")\n\n*   **interface**: `api.errors.referenda.Unfinished.is`\n*   **summary**: Any deposit cannot be refunded until after the decision is over.\n\n* * *\n\nregistrar[\u200b](#registrar \"Direct link to registrar\")\n\n----------------------------------------------------\n\n### AlreadyRegistered[\u200b](#alreadyregistered \"Direct link to AlreadyRegistered\")\n\n*   **interface**: `api.errors.registrar.AlreadyRegistered.is`\n*   **summary**: The ID is already registered.\n\n### CannotDeregister[\u200b](#cannotderegister \"Direct link to CannotDeregister\")\n\n*   **interface**: `api.errors.registrar.CannotDeregister.is`\n*   **summary**: Cannot deregister para\n\n### CannotDowngrade[\u200b](#cannotdowngrade-1 \"Direct link to CannotDowngrade\")\n\n*   **interface**: `api.errors.registrar.CannotDowngrade.is`\n*   **summary**: Cannot schedule downgrade of lease holding parachain to on-demand parachain\n\n### CannotSwap[\u200b](#cannotswap \"Direct link to CannotSwap\")\n\n*   **interface**: `api.errors.registrar.CannotSwap.is`\n*   **summary**: Cannot perform a parachain slot / lifecycle swap. Check that the state of both paras are correct for the swap to work.\n\n### CannotUpgrade[\u200b](#cannotupgrade-1 \"Direct link to CannotUpgrade\")\n\n*   **interface**: `api.errors.registrar.CannotUpgrade.is`\n*   **summary**: Cannot schedule upgrade of on-demand parachain to lease holding parachain\n\n### CodeTooLarge[\u200b](#codetoolarge \"Direct link to CodeTooLarge\")\n\n*   **interface**: `api.errors.registrar.CodeTooLarge.is`\n*   **summary**: Invalid para code size.\n\n### EmptyCode[\u200b](#emptycode \"Direct link to EmptyCode\")\n\n*   **interface**: `api.errors.registrar.EmptyCode.is`\n*   **summary**: Registering parachain with empty code is not allowed.\n\n### HeadDataTooLarge[\u200b](#headdatatoolarge-1 \"Direct link to HeadDataTooLarge\")\n\n*   **interface**: `api.errors.registrar.HeadDataTooLarge.is`\n*   **summary**: Invalid para head data size.\n\n### NotOwner[\u200b](#notowner-3 \"Direct link to NotOwner\")\n\n*   **interface**: `api.errors.registrar.NotOwner.is`\n*   **summary**: The caller is not the owner of this Id.\n\n### NotParachain[\u200b](#notparachain-1 \"Direct link to NotParachain\")\n\n*   **interface**: `api.errors.registrar.NotParachain.is`\n*   **summary**: Para is not a Parachain.\n\n### NotParathread[\u200b](#notparathread \"Direct link to NotParathread\")\n\n*   **interface**: `api.errors.registrar.NotParathread.is`\n*   **summary**: Para is not a Parathread (on-demand parachain).\n\n### NotRegistered[\u200b](#notregistered-1 \"Direct link to NotRegistered\")\n\n*   **interface**: `api.errors.registrar.NotRegistered.is`\n*   **summary**: The ID is not registered.\n\n### NotReserved[\u200b](#notreserved \"Direct link to NotReserved\")\n\n*   **interface**: `api.errors.registrar.NotReserved.is`\n*   **summary**: The ID given for registration has not been reserved.\n\n### ParaLocked[\u200b](#paralocked \"Direct link to ParaLocked\")\n\n*   **interface**: `api.errors.registrar.ParaLocked.is`\n*   **summary**: Para is locked from manipulation by the manager. Must use parachain or relay chain governance.\n\n* * *\n\nscheduler[\u200b](#scheduler \"Direct link to scheduler\")\n\n----------------------------------------------------\n\n### FailedToSchedule[\u200b](#failedtoschedule \"Direct link to FailedToSchedule\")\n\n*   **interface**: `api.errors.scheduler.FailedToSchedule.is`\n*   **summary**: Failed to schedule a call\n\n### Named[\u200b](#named \"Direct link to Named\")\n\n*   **interface**: `api.errors.scheduler.Named.is`\n*   **summary**: Attempt to use a non-named function on a named task.\n\n### NotFound[\u200b](#notfound-3 \"Direct link to NotFound\")\n\n*   **interface**: `api.errors.scheduler.NotFound.is`\n*   **summary**: Cannot find the scheduled call.\n\n### RescheduleNoChange[\u200b](#reschedulenochange \"Direct link to RescheduleNoChange\")\n\n*   **interface**: `api.errors.scheduler.RescheduleNoChange.is`\n*   **summary**: Reschedule failed because it does not change scheduled time.\n\n### TargetBlockNumberInPast[\u200b](#targetblocknumberinpast \"Direct link to TargetBlockNumberInPast\")\n\n*   **interface**: `api.errors.scheduler.TargetBlockNumberInPast.is`\n*   **summary**: Given target block number is in the past.\n\n* * *\n\nsession[\u200b](#session \"Direct link to session\")\n\n----------------------------------------------\n\n### DuplicatedKey[\u200b](#duplicatedkey \"Direct link to DuplicatedKey\")\n\n*   **interface**: `api.errors.session.DuplicatedKey.is`\n*   **summary**: Registered duplicate key.\n\n### InvalidProof[\u200b](#invalidproof \"Direct link to InvalidProof\")\n\n*   **interface**: `api.errors.session.InvalidProof.is`\n*   **summary**: Invalid ownership proof.\n\n### NoAccount[\u200b](#noaccount \"Direct link to NoAccount\")\n\n*   **interface**: `api.errors.session.NoAccount.is`\n*   **summary**: Key setting account is not live, so it's impossible to associate keys.\n\n### NoAssociatedValidatorId[\u200b](#noassociatedvalidatorid \"Direct link to NoAssociatedValidatorId\")\n\n*   **interface**: `api.errors.session.NoAssociatedValidatorId.is`\n*   **summary**: No associated validator ID for account.\n\n### NoKeys[\u200b](#nokeys \"Direct link to NoKeys\")\n\n*   **interface**: `api.errors.session.NoKeys.is`\n*   **summary**: No keys are associated with this account.\n\n* * *\n\nslots[\u200b](#slots \"Direct link to slots\")\n\n----------------------------------------\n\n### LeaseError[\u200b](#leaseerror \"Direct link to LeaseError\")\n\n*   **interface**: `api.errors.slots.LeaseError.is`\n*   **summary**: There was an error with the lease.\n\n### ParaNotOnboarding[\u200b](#paranotonboarding \"Direct link to ParaNotOnboarding\")\n\n*   **interface**: `api.errors.slots.ParaNotOnboarding.is`\n*   **summary**: The parachain ID is not onboarding.\n\n* * *\n\nsociety[\u200b](#society \"Direct link to society\")\n\n----------------------------------------------\n\n### AlreadyBid[\u200b](#alreadybid \"Direct link to AlreadyBid\")\n\n*   **interface**: `api.errors.society.AlreadyBid.is`\n*   **summary**: User has already made a bid.\n\n### AlreadyCandidate[\u200b](#alreadycandidate \"Direct link to AlreadyCandidate\")\n\n*   **interface**: `api.errors.society.AlreadyCandidate.is`\n*   **summary**: User is already a candidate.\n\n### AlreadyElevated[\u200b](#alreadyelevated \"Direct link to AlreadyElevated\")\n\n*   **interface**: `api.errors.society.AlreadyElevated.is`\n*   **summary**: The member is already elevated to this rank.\n\n### AlreadyFounded[\u200b](#alreadyfounded \"Direct link to AlreadyFounded\")\n\n*   **interface**: `api.errors.society.AlreadyFounded.is`\n*   **summary**: Society already founded.\n\n### AlreadyMember[\u200b](#alreadymember-1 \"Direct link to AlreadyMember\")\n\n*   **interface**: `api.errors.society.AlreadyMember.is`\n*   **summary**: User is already a member.\n\n### AlreadyPunished[\u200b](#alreadypunished \"Direct link to AlreadyPunished\")\n\n*   **interface**: `api.errors.society.AlreadyPunished.is`\n*   **summary**: The skeptic has already been punished for this offence.\n\n### AlreadyVouching[\u200b](#alreadyvouching \"Direct link to AlreadyVouching\")\n\n*   **interface**: `api.errors.society.AlreadyVouching.is`\n*   **summary**: Member is already vouching or banned from vouching again.\n\n### Approved[\u200b](#approved \"Direct link to Approved\")\n\n*   **interface**: `api.errors.society.Approved.is`\n*   **summary**: The candidacy cannot be dropped as the candidate was clearly approved.\n\n### Expired[\u200b](#expired \"Direct link to Expired\")\n\n*   **interface**: `api.errors.society.Expired.is`\n*   **summary**: The skeptic need not vote on candidates from expired rounds.\n\n### Founder[\u200b](#founder \"Direct link to Founder\")\n\n*   **interface**: `api.errors.society.Founder.is`\n*   **summary**: Cannot remove the founder.\n\n### Head[\u200b](#head \"Direct link to Head\")\n\n*   **interface**: `api.errors.society.Head.is`\n*   **summary**: Cannot remove the head of the chain.\n\n### InProgress[\u200b](#inprogress \"Direct link to InProgress\")\n\n*   **interface**: `api.errors.society.InProgress.is`\n*   **summary**: The candidacy cannot be concluded as the voting is still in progress.\n\n### InsufficientFunds[\u200b](#insufficientfunds-1 \"Direct link to InsufficientFunds\")\n\n*   **interface**: `api.errors.society.InsufficientFunds.is`\n*   **summary**: Funds are insufficient to pay off society debts.\n\n### InsufficientPot[\u200b](#insufficientpot \"Direct link to InsufficientPot\")\n\n*   **interface**: `api.errors.society.InsufficientPot.is`\n*   **summary**: Not enough in pot to accept candidate.\n\n### MaxMembers[\u200b](#maxmembers \"Direct link to MaxMembers\")\n\n*   **interface**: `api.errors.society.MaxMembers.is`\n*   **summary**: Too many members in the society.\n\n### NoDefender[\u200b](#nodefender \"Direct link to NoDefender\")\n\n*   **interface**: `api.errors.society.NoDefender.is`\n*   **summary**: There is no defender currently.\n\n### NoPayout[\u200b](#nopayout \"Direct link to NoPayout\")\n\n*   **interface**: `api.errors.society.NoPayout.is`\n*   **summary**: Nothing to payout.\n\n### NotApproved[\u200b](#notapproved \"Direct link to NotApproved\")\n\n*   **interface**: `api.errors.society.NotApproved.is`\n*   **summary**: The membership cannot be claimed as the candidate was not clearly approved.\n\n### NotBidder[\u200b](#notbidder \"Direct link to NotBidder\")\n\n*   **interface**: `api.errors.society.NotBidder.is`\n*   **summary**: User is not a bidder.\n\n### NotCandidate[\u200b](#notcandidate \"Direct link to NotCandidate\")\n\n*   **interface**: `api.errors.society.NotCandidate.is`\n*   **summary**: User is not a candidate.\n\n### NotFounder[\u200b](#notfounder \"Direct link to NotFounder\")\n\n*   **interface**: `api.errors.society.NotFounder.is`\n*   **summary**: The caller is not the founder.\n\n### NotGroup[\u200b](#notgroup \"Direct link to NotGroup\")\n\n*   **interface**: `api.errors.society.NotGroup.is`\n*   **summary**: Group doesn't exist.\n\n### NotHead[\u200b](#nothead \"Direct link to NotHead\")\n\n*   **interface**: `api.errors.society.NotHead.is`\n*   **summary**: The caller is not the head.\n\n### NotMember[\u200b](#notmember-1 \"Direct link to NotMember\")\n\n*   **interface**: `api.errors.society.NotMember.is`\n*   **summary**: User is not a member.\n\n### NotRejected[\u200b](#notrejected \"Direct link to NotRejected\")\n\n*   **interface**: `api.errors.society.NotRejected.is`\n*   **summary**: The candidate cannot be kicked as the candidate was not clearly rejected.\n\n### NotSuspended[\u200b](#notsuspended \"Direct link to NotSuspended\")\n\n*   **interface**: `api.errors.society.NotSuspended.is`\n*   **summary**: User is not suspended.\n\n### NotVouchingOnBidder[\u200b](#notvouchingonbidder \"Direct link to NotVouchingOnBidder\")\n\n*   **interface**: `api.errors.society.NotVouchingOnBidder.is`\n*   **summary**: Member is not vouching.\n\n### NoVotes[\u200b](#novotes \"Direct link to NoVotes\")\n\n*   **interface**: `api.errors.society.NoVotes.is`\n*   **summary**: The candidate/defender has no stale votes to remove.\n\n### Rejected[\u200b](#rejected \"Direct link to Rejected\")\n\n*   **interface**: `api.errors.society.Rejected.is`\n*   **summary**: The candidacy cannot be bestowed as the candidate was clearly rejected.\n\n### Suspended[\u200b](#suspended \"Direct link to Suspended\")\n\n*   **interface**: `api.errors.society.Suspended.is`\n*   **summary**: User is suspended.\n\n### TooEarly[\u200b](#tooearly \"Direct link to TooEarly\")\n\n*   **interface**: `api.errors.society.TooEarly.is`\n*   **summary**: The candidacy cannot be pruned until a full additional intake period has passed.\n\n### Voted[\u200b](#voted \"Direct link to Voted\")\n\n*   **interface**: `api.errors.society.Voted.is`\n*   **summary**: The skeptic already voted.\n\n* * *\n\nstaking[\u200b](#staking \"Direct link to staking\")\n\n----------------------------------------------\n\n### AlreadyBonded[\u200b](#alreadybonded \"Direct link to AlreadyBonded\")\n\n*   **interface**: `api.errors.staking.AlreadyBonded.is`\n*   **summary**: Stash is already bonded.\n\n### AlreadyClaimed[\u200b](#alreadyclaimed-1 \"Direct link to AlreadyClaimed\")\n\n*   **interface**: `api.errors.staking.AlreadyClaimed.is`\n*   **summary**: Rewards for this era have already been claimed for this validator.\n\n### AlreadyPaired[\u200b](#alreadypaired \"Direct link to AlreadyPaired\")\n\n*   **interface**: `api.errors.staking.AlreadyPaired.is`\n*   **summary**: Controller is already paired.\n\n### BadState[\u200b](#badstate-1 \"Direct link to BadState\")\n\n*   **interface**: `api.errors.staking.BadState.is`\n*   **summary**: Internal state has become somehow corrupted and the operation cannot continue.\n\n### BadTarget[\u200b](#badtarget \"Direct link to BadTarget\")\n\n*   **interface**: `api.errors.staking.BadTarget.is`\n*   **summary**: A nomination target was supplied that was blocked or otherwise not a validator.\n\n### BoundNotMet[\u200b](#boundnotmet-1 \"Direct link to BoundNotMet\")\n\n*   **interface**: `api.errors.staking.BoundNotMet.is`\n*   **summary**: Some bound is not met.\n\n### CannotChillOther[\u200b](#cannotchillother \"Direct link to CannotChillOther\")\n\n*   **interface**: `api.errors.staking.CannotChillOther.is`\n*   **summary**: The user has enough bond and thus cannot be chilled forcefully by an external person.\n\n### CommissionTooLow[\u200b](#commissiontoolow \"Direct link to CommissionTooLow\")\n\n*   **interface**: `api.errors.staking.CommissionTooLow.is`\n*   **summary**: Commission is too low. Must be at least `MinCommission`.\n\n### DuplicateIndex[\u200b](#duplicateindex \"Direct link to DuplicateIndex\")\n\n*   **interface**: `api.errors.staking.DuplicateIndex.is`\n*   **summary**: Duplicate index.\n\n### EmptyTargets[\u200b](#emptytargets \"Direct link to EmptyTargets\")\n\n*   **interface**: `api.errors.staking.EmptyTargets.is`\n*   **summary**: Targets cannot be empty.\n\n### FundedTarget[\u200b](#fundedtarget \"Direct link to FundedTarget\")\n\n*   **interface**: `api.errors.staking.FundedTarget.is`\n*   **summary**: Attempting to target a stash that still has funds.\n\n### IncorrectHistoryDepth[\u200b](#incorrecthistorydepth \"Direct link to IncorrectHistoryDepth\")\n\n*   **interface**: `api.errors.staking.IncorrectHistoryDepth.is`\n*   **summary**: Incorrect previous history depth input provided.\n\n### IncorrectSlashingSpans[\u200b](#incorrectslashingspans \"Direct link to IncorrectSlashingSpans\")\n\n*   **interface**: `api.errors.staking.IncorrectSlashingSpans.is`\n*   **summary**: Incorrect number of slashing spans provided.\n\n### InsufficientBond[\u200b](#insufficientbond \"Direct link to InsufficientBond\")\n\n*   **interface**: `api.errors.staking.InsufficientBond.is`\n*   **summary**: Cannot have a validator or nominator role, with value less than the minimum defined by governance (see `MinValidatorBond` and `MinNominatorBond`). If unbonding is the intention, `chill` first to remove one's role as validator/nominator.\n\n### InvalidEraToReward[\u200b](#invalideratoreward \"Direct link to InvalidEraToReward\")\n\n*   **interface**: `api.errors.staking.InvalidEraToReward.is`\n*   **summary**: Invalid era to reward.\n\n### InvalidNumberOfNominations[\u200b](#invalidnumberofnominations \"Direct link to InvalidNumberOfNominations\")\n\n*   **interface**: `api.errors.staking.InvalidNumberOfNominations.is`\n*   **summary**: Invalid number of nominations.\n\n### InvalidSlashIndex[\u200b](#invalidslashindex \"Direct link to InvalidSlashIndex\")\n\n*   **interface**: `api.errors.staking.InvalidSlashIndex.is`\n*   **summary**: Slash record index out of bounds.\n\n### NoMoreChunks[\u200b](#nomorechunks \"Direct link to NoMoreChunks\")\n\n*   **interface**: `api.errors.staking.NoMoreChunks.is`\n*   **summary**: Can not schedule more unlock chunks.\n\n### NotController[\u200b](#notcontroller-1 \"Direct link to NotController\")\n\n*   **interface**: `api.errors.staking.NotController.is`\n*   **summary**: Not a controller account.\n\n### NotSortedAndUnique[\u200b](#notsortedandunique \"Direct link to NotSortedAndUnique\")\n\n*   **interface**: `api.errors.staking.NotSortedAndUnique.is`\n*   **summary**: Items are not sorted and unique.\n\n### NotStash[\u200b](#notstash \"Direct link to NotStash\")\n\n*   **interface**: `api.errors.staking.NotStash.is`\n*   **summary**: Not a stash account.\n\n### NoUnlockChunk[\u200b](#nounlockchunk \"Direct link to NoUnlockChunk\")\n\n*   **interface**: `api.errors.staking.NoUnlockChunk.is`\n*   **summary**: Can not rebond without unlocking chunks.\n\n### TooManyNominators[\u200b](#toomanynominators \"Direct link to TooManyNominators\")\n\n*   **interface**: `api.errors.staking.TooManyNominators.is`\n*   **summary**: There are too many nominators in the system. Governance needs to adjust the staking settings to keep things safe for the runtime.\n\n### TooManyTargets[\u200b](#toomanytargets \"Direct link to TooManyTargets\")\n\n*   **interface**: `api.errors.staking.TooManyTargets.is`\n*   **summary**: Too many nomination targets supplied.\n\n### TooManyValidators[\u200b](#toomanyvalidators \"Direct link to TooManyValidators\")\n\n*   **interface**: `api.errors.staking.TooManyValidators.is`\n*   **summary**: There are too many validator candidates in the system. Governance needs to adjust the staking settings to keep things safe for the runtime.\n\n* * *\n\nstateTrieMigration[\u200b](#statetriemigration \"Direct link to stateTrieMigration\")\n\n-------------------------------------------------------------------------------\n\n### BadChildRoot[\u200b](#badchildroot \"Direct link to BadChildRoot\")\n\n*   **interface**: `api.errors.stateTrieMigration.BadChildRoot.is`\n*   **summary**: Bad child root provided.\n\n### BadWitness[\u200b](#badwitness \"Direct link to BadWitness\")\n\n*   **interface**: `api.errors.stateTrieMigration.BadWitness.is`\n*   **summary**: Bad witness data provided.\n\n### KeyTooLong[\u200b](#keytoolong \"Direct link to KeyTooLong\")\n\n*   **interface**: `api.errors.stateTrieMigration.KeyTooLong.is`\n    \n*   **summary**: A key was longer than the configured maximum.\n    \n    This means that the migration halted at the current \\[`Progress`\\] and can be resumed with a larger \\[`crate::Config::MaxKeyLen`\\] value. Retrying with the same \\[`crate::Config::MaxKeyLen`\\] value will not work. The value should only be increased to avoid a storage migration for the currently stored \\[`crate::Progress::LastKey`\\].\n    \n\n### MaxSignedLimits[\u200b](#maxsignedlimits \"Direct link to MaxSignedLimits\")\n\n*   **interface**: `api.errors.stateTrieMigration.MaxSignedLimits.is`\n*   **summary**: Max signed limits not respected.\n\n### NotEnoughFunds[\u200b](#notenoughfunds \"Direct link to NotEnoughFunds\")\n\n*   **interface**: `api.errors.stateTrieMigration.NotEnoughFunds.is`\n*   **summary**: submitter does not have enough funds.\n\n### SignedMigrationNotAllowed[\u200b](#signedmigrationnotallowed \"Direct link to SignedMigrationNotAllowed\")\n\n*   **interface**: `api.errors.stateTrieMigration.SignedMigrationNotAllowed.is`\n*   **summary**: Signed migration is not allowed because the maximum limit is not set yet.\n\n* * *\n\nsystem[\u200b](#system \"Direct link to system\")\n\n-------------------------------------------\n\n### CallFiltered[\u200b](#callfiltered \"Direct link to CallFiltered\")\n\n*   **interface**: `api.errors.system.CallFiltered.is`\n*   **summary**: The origin filter prevent the call to be dispatched.\n\n### FailedToExtractRuntimeVersion[\u200b](#failedtoextractruntimeversion \"Direct link to FailedToExtractRuntimeVersion\")\n\n*   **interface**: `api.errors.system.FailedToExtractRuntimeVersion.is`\n    \n*   **summary**: Failed to extract the runtime version from the new runtime.\n    \n    Either calling `Core_version` or decoding `RuntimeVersion` failed.\n    \n\n### InvalidSpecName[\u200b](#invalidspecname \"Direct link to InvalidSpecName\")\n\n*   **interface**: `api.errors.system.InvalidSpecName.is`\n*   **summary**: The name of specification does not match between the current runtime and the new runtime.\n\n### NonDefaultComposite[\u200b](#nondefaultcomposite \"Direct link to NonDefaultComposite\")\n\n*   **interface**: `api.errors.system.NonDefaultComposite.is`\n*   **summary**: Suicide called when the account has non-default composite data.\n\n### NonZeroRefCount[\u200b](#nonzerorefcount \"Direct link to NonZeroRefCount\")\n\n*   **interface**: `api.errors.system.NonZeroRefCount.is`\n*   **summary**: There is a non-zero reference count preventing the account from being purged.\n\n### SpecVersionNeedsToIncrease[\u200b](#specversionneedstoincrease \"Direct link to SpecVersionNeedsToIncrease\")\n\n*   **interface**: `api.errors.system.SpecVersionNeedsToIncrease.is`\n*   **summary**: The specification version is not allowed to decrease between the current runtime and the new runtime.\n\n* * *\n\ntreasury[\u200b](#treasury \"Direct link to treasury\")\n\n-------------------------------------------------\n\n### InsufficientPermission[\u200b](#insufficientpermission \"Direct link to InsufficientPermission\")\n\n*   **interface**: `api.errors.treasury.InsufficientPermission.is`\n*   **summary**: The spend origin is valid but the amount it is allowed to spend is lower than the amount to be spent.\n\n### InsufficientProposersBalance[\u200b](#insufficientproposersbalance-1 \"Direct link to InsufficientProposersBalance\")\n\n*   **interface**: `api.errors.treasury.InsufficientProposersBalance.is`\n*   **summary**: Proposer's balance is too low.\n\n### InvalidIndex[\u200b](#invalidindex-2 \"Direct link to InvalidIndex\")\n\n*   **interface**: `api.errors.treasury.InvalidIndex.is`\n*   **summary**: No proposal or bounty at that index.\n\n### ProposalNotApproved[\u200b](#proposalnotapproved \"Direct link to ProposalNotApproved\")\n\n*   **interface**: `api.errors.treasury.ProposalNotApproved.is`\n*   **summary**: Proposal has not been approved.\n\n### TooManyApprovals[\u200b](#toomanyapprovals \"Direct link to TooManyApprovals\")\n\n*   **interface**: `api.errors.treasury.TooManyApprovals.is`\n*   **summary**: Too many approvals in the queue.\n\n* * *\n\nutility[\u200b](#utility \"Direct link to utility\")\n\n----------------------------------------------\n\n### TooManyCalls[\u200b](#toomanycalls \"Direct link to TooManyCalls\")\n\n*   **interface**: `api.errors.utility.TooManyCalls.is`\n*   **summary**: Too many calls batched.\n\n* * *\n\nvesting[\u200b](#vesting \"Direct link to vesting\")\n\n----------------------------------------------\n\n### AmountLow[\u200b](#amountlow \"Direct link to AmountLow\")\n\n*   **interface**: `api.errors.vesting.AmountLow.is`\n*   **summary**: Amount being transferred is too low to create a vesting schedule.\n\n### AtMaxVestingSchedules[\u200b](#atmaxvestingschedules \"Direct link to AtMaxVestingSchedules\")\n\n*   **interface**: `api.errors.vesting.AtMaxVestingSchedules.is`\n*   **summary**: The account already has `MaxVestingSchedules` count of schedules and thus cannot add another one. Consider merging existing schedules in order to add another.\n\n### InvalidScheduleParams[\u200b](#invalidscheduleparams \"Direct link to InvalidScheduleParams\")\n\n*   **interface**: `api.errors.vesting.InvalidScheduleParams.is`\n*   **summary**: Failed to create a new schedule because some parameter was invalid.\n\n### NotVesting[\u200b](#notvesting \"Direct link to NotVesting\")\n\n*   **interface**: `api.errors.vesting.NotVesting.is`\n*   **summary**: The account given is not vesting.\n\n### ScheduleIndexOutOfBounds[\u200b](#scheduleindexoutofbounds \"Direct link to ScheduleIndexOutOfBounds\")\n\n*   **interface**: `api.errors.vesting.ScheduleIndexOutOfBounds.is`\n*   **summary**: An index was out of bounds of the vesting schedules.\n\n* * *\n\nvoterList[\u200b](#voterlist \"Direct link to voterList\")\n\n----------------------------------------------------\n\n### List[\u200b](#list \"Direct link to List\")\n\n*   **interface**: `api.errors.voterList.List.is`\n*   **summary**: A error in the list interface implementation.\n\n* * *\n\nwhitelist[\u200b](#whitelist \"Direct link to whitelist\")\n\n----------------------------------------------------\n\n### CallAlreadyWhitelisted[\u200b](#callalreadywhitelisted \"Direct link to CallAlreadyWhitelisted\")\n\n*   **interface**: `api.errors.whitelist.CallAlreadyWhitelisted.is`\n*   **summary**: The call was already whitelisted; No-Op.\n\n### CallIsNotWhitelisted[\u200b](#callisnotwhitelisted \"Direct link to CallIsNotWhitelisted\")\n\n*   **interface**: `api.errors.whitelist.CallIsNotWhitelisted.is`\n*   **summary**: The call was not whitelisted.\n\n### InvalidCallWeightWitness[\u200b](#invalidcallweightwitness \"Direct link to InvalidCallWeightWitness\")\n\n*   **interface**: `api.errors.whitelist.InvalidCallWeightWitness.is`\n*   **summary**: The weight of the decoded call was higher than the witness.\n\n### UnavailablePreImage[\u200b](#unavailablepreimage \"Direct link to UnavailablePreImage\")\n\n*   **interface**: `api.errors.whitelist.UnavailablePreImage.is`\n*   **summary**: The preimage of the call hash could not be loaded.\n\n### UndecodableCall[\u200b](#undecodablecall \"Direct link to UndecodableCall\")\n\n*   **interface**: `api.errors.whitelist.UndecodableCall.is`\n*   **summary**: The call could not be decoded.\n\n* * *\n\nxcmPallet[\u200b](#xcmpallet \"Direct link to xcmPallet\")\n\n----------------------------------------------------\n\n### AccountNotSovereign[\u200b](#accountnotsovereign \"Direct link to AccountNotSovereign\")\n\n*   **interface**: `api.errors.xcmPallet.AccountNotSovereign.is`\n*   **summary**: The given account is not an identifiable sovereign account for any location.\n\n### AlreadySubscribed[\u200b](#alreadysubscribed \"Direct link to AlreadySubscribed\")\n\n*   **interface**: `api.errors.xcmPallet.AlreadySubscribed.is`\n*   **summary**: The location is invalid since it already has a subscription from us.\n\n### BadLocation[\u200b](#badlocation \"Direct link to BadLocation\")\n\n*   **interface**: `api.errors.xcmPallet.BadLocation.is`\n*   **summary**: The given location could not be used (e.g. because it cannot be expressed in the desired version of XCM).\n\n### BadVersion[\u200b](#badversion \"Direct link to BadVersion\")\n\n*   **interface**: `api.errors.xcmPallet.BadVersion.is`\n*   **summary**: The version of the `Versioned` value used is not able to be interpreted.\n\n### CannotReanchor[\u200b](#cannotreanchor \"Direct link to CannotReanchor\")\n\n*   **interface**: `api.errors.xcmPallet.CannotReanchor.is`\n*   **summary**: Could not re-anchor the assets to declare the fees for the destination chain.\n\n### DestinationNotInvertible[\u200b](#destinationnotinvertible \"Direct link to DestinationNotInvertible\")\n\n*   **interface**: `api.errors.xcmPallet.DestinationNotInvertible.is`\n*   **summary**: The destination `MultiLocation` provided cannot be inverted.\n\n### Empty[\u200b](#empty \"Direct link to Empty\")\n\n*   **interface**: `api.errors.xcmPallet.Empty.is`\n*   **summary**: The assets to be sent are empty.\n\n### FeesNotMet[\u200b](#feesnotmet \"Direct link to FeesNotMet\")\n\n*   **interface**: `api.errors.xcmPallet.FeesNotMet.is`\n*   **summary**: The operation required fees to be paid which the initiator could not meet.\n\n### Filtered[\u200b](#filtered \"Direct link to Filtered\")\n\n*   **interface**: `api.errors.xcmPallet.Filtered.is`\n*   **summary**: The message execution fails the filter.\n\n### InUse[\u200b](#inuse-1 \"Direct link to InUse\")\n\n*   **interface**: `api.errors.xcmPallet.InUse.is`\n*   **summary**: The unlock operation cannot succeed because there are still consumers of the lock.\n\n### InvalidAsset[\u200b](#invalidasset \"Direct link to InvalidAsset\")\n\n*   **interface**: `api.errors.xcmPallet.InvalidAsset.is`\n*   **summary**: Invalid asset for the operation.\n\n### InvalidOrigin[\u200b](#invalidorigin-1 \"Direct link to InvalidOrigin\")\n\n*   **interface**: `api.errors.xcmPallet.InvalidOrigin.is`\n*   **summary**: Origin is invalid for sending.\n\n### LockNotFound[\u200b](#locknotfound \"Direct link to LockNotFound\")\n\n*   **interface**: `api.errors.xcmPallet.LockNotFound.is`\n*   **summary**: A remote lock with the corresponding data could not be found.\n\n### LowBalance[\u200b](#lowbalance \"Direct link to LowBalance\")\n\n*   **interface**: `api.errors.xcmPallet.LowBalance.is`\n*   **summary**: The owner does not own (all) of the asset that they wish to do the operation on.\n\n### NoSubscription[\u200b](#nosubscription \"Direct link to NoSubscription\")\n\n*   **interface**: `api.errors.xcmPallet.NoSubscription.is`\n*   **summary**: The referenced subscription could not be found.\n\n### SendFailure[\u200b](#sendfailure \"Direct link to SendFailure\")\n\n*   **interface**: `api.errors.xcmPallet.SendFailure.is`\n*   **summary**: There was some other issue (i.e. not to do with routing) in sending the message. Perhaps a lack of space for buffering the message.\n\n### TooManyAssets[\u200b](#toomanyassets \"Direct link to TooManyAssets\")\n\n*   **interface**: `api.errors.xcmPallet.TooManyAssets.is`\n*   **summary**: Too many assets have been attempted for transfer.\n\n### TooManyLocks[\u200b](#toomanylocks \"Direct link to TooManyLocks\")\n\n*   **interface**: `api.errors.xcmPallet.TooManyLocks.is`\n*   **summary**: The asset owner has too many locks on the asset.\n\n### Unreachable[\u200b](#unreachable \"Direct link to Unreachable\")\n\n*   **interface**: `api.errors.xcmPallet.Unreachable.is`\n*   **summary**: The desired destination was unreachable, generally because there is a no way of routing to it.\n\n### UnweighableMessage[\u200b](#unweighablemessage \"Direct link to UnweighableMessage\")\n\n*   **interface**: `api.errors.xcmPallet.UnweighableMessage.is`\n*   **summary**: The message's weight could not be determined.\n\n[Edit this page](https://github.com/polkadot-js/docs/edit/master/docs/kusama/errors.md)\n\n[Previous\\\n\\\nEvents](/docs/kusama/events)\n[Next\\\n\\\nOverview](/docs/keyring)\n\n*   [auctions](#auctions)\n    *   [AlreadyLeasedOut](#alreadyleasedout)\n        \n    *   [AuctionEnded](#auctionended)\n        \n    *   [AuctionInProgress](#auctioninprogress)\n        \n    *   [LeasePeriodInPast](#leaseperiodinpast)\n        \n    *   [NotAuction](#notauction)\n        \n    *   [NotCurrentAuction](#notcurrentauction)\n        \n    *   [ParaNotRegistered](#paranotregistered)\n        \n*   [babe](#babe)\n    *   [DuplicateOffenceReport](#duplicateoffencereport)\n        \n    *   [InvalidConfiguration](#invalidconfiguration)\n        \n    *   [InvalidEquivocationProof](#invalidequivocationproof)\n        \n    *   [InvalidKeyOwnershipProof](#invalidkeyownershipproof)\n        \n*   [balances](#balances)\n    *   [DeadAccount](#deadaccount)\n        \n    *   [ExistentialDeposit](#existentialdeposit)\n        \n    *   [ExistingVestingSchedule](#existingvestingschedule)\n        \n    *   [Expendability](#expendability)\n        \n    *   [InsufficientBalance](#insufficientbalance)\n        \n    *   [LiquidityRestrictions](#liquidityrestrictions)\n        \n    *   [TooManyFreezes](#toomanyfreezes)\n        \n    *   [TooManyHolds](#toomanyholds)\n        \n    *   [TooManyReserves](#toomanyreserves)\n        \n    *   [VestingBalance](#vestingbalance)\n        \n*   [beefy](#beefy)\n    *   [DuplicateOffenceReport](#duplicateoffencereport-1)\n        \n    *   [InvalidEquivocationProof](#invalidequivocationproof-1)\n        \n    *   [InvalidKeyOwnershipProof](#invalidkeyownershipproof-1)\n        \n*   [bounties](#bounties)\n    *   [HasActiveChildBounty](#hasactivechildbounty)\n        \n    *   [InsufficientProposersBalance](#insufficientproposersbalance)\n        \n    *   [InvalidFee](#invalidfee)\n        \n    *   [InvalidIndex](#invalidindex)\n        \n    *   [InvalidValue](#invalidvalue)\n        \n    *   [PendingPayout](#pendingpayout)\n        \n    *   [Premature](#premature)\n        \n    *   [ReasonTooBig](#reasontoobig)\n        \n    *   [RequireCurator](#requirecurator)\n        \n    *   [TooManyQueued](#toomanyqueued)\n        \n    *   [UnexpectedStatus](#unexpectedstatus)\n        \n*   [childBounties](#childbounties)\n    *   [InsufficientBountyBalance](#insufficientbountybalance)\n        \n    *   [ParentBountyNotActive](#parentbountynotactive)\n        \n    *   [TooManyChildBounties](#toomanychildbounties)\n        \n*   [claims](#claims)\n    *   [InvalidEthereumSignature](#invalidethereumsignature)\n        \n    *   [InvalidStatement](#invalidstatement)\n        \n    *   [PotUnderflow](#potunderflow)\n        \n    *   [SenderHasNoClaim](#senderhasnoclaim)\n        \n    *   [SignerHasNoClaim](#signerhasnoclaim)\n        \n    *   [VestedBalanceExists](#vestedbalanceexists)\n        \n*   [configuration](#configuration)\n    *   [InvalidNewValue](#invalidnewvalue)\n        \n*   [convictionVoting](#convictionvoting)\n    *   [AlreadyDelegating](#alreadydelegating)\n        \n    *   [AlreadyVoting](#alreadyvoting)\n        \n    *   [BadClass](#badclass)\n        \n    *   [ClassNeeded](#classneeded)\n        \n    *   [InsufficientFunds](#insufficientfunds)\n        \n    *   [MaxVotesReached](#maxvotesreached)\n        \n    *   [Nonsense](#nonsense)\n        \n    *   [NoPermission](#nopermission)\n        \n    *   [NoPermissionYet](#nopermissionyet)\n        \n    *   [NotDelegating](#notdelegating)\n        \n    *   [NotOngoing](#notongoing)\n        \n    *   [NotVoter](#notvoter)\n        \n*   [crowdloan](#crowdloan)\n    *   [AlreadyInNewRaise](#alreadyinnewraise)\n        \n    *   [BidOrLeaseActive](#bidorleaseactive)\n        \n    *   [CannotEndInPast](#cannotendinpast)\n        \n    *   [CapExceeded](#capexceeded)\n        \n    *   [ContributionPeriodOver](#contributionperiodover)\n        \n    *   [ContributionTooSmall](#contributiontoosmall)\n        \n    *   [EndTooFarInFuture](#endtoofarinfuture)\n        \n    *   [FirstPeriodInPast](#firstperiodinpast)\n        \n    *   [FirstPeriodTooFarInFuture](#firstperiodtoofarinfuture)\n        \n    *   [FundNotEnded](#fundnotended)\n        \n    *   [InvalidOrigin](#invalidorigin)\n        \n    *   [InvalidParaId](#invalidparaid)\n        \n    *   [InvalidSignature](#invalidsignature)\n        \n    *   [LastPeriodBeforeFirstPeriod](#lastperiodbeforefirstperiod)\n        \n    *   [LastPeriodTooFarInFuture](#lastperiodtoofarinfuture)\n        \n    *   [LeaseActive](#leaseactive)\n        \n    *   [MemoTooLarge](#memotoolarge)\n        \n    *   [NoContributions](#nocontributions)\n        \n    *   [NoLeasePeriod](#noleaseperiod)\n        \n    *   [NotParachain](#notparachain)\n        \n    *   [NotReadyToDissolve](#notreadytodissolve)\n        \n    *   [Overflow](#overflow)\n        \n    *   [VrfDelayInProgress](#vrfdelayinprogress)\n        \n*   [electionProviderMultiPhase](#electionprovidermultiphase)\n    *   [BoundNotMet](#boundnotmet)\n        \n    *   [CallNotAllowed](#callnotallowed)\n        \n    *   [FallbackFailed](#fallbackfailed)\n        \n    *   [InvalidSubmissionIndex](#invalidsubmissionindex)\n        \n    *   [MissingSnapshotMetadata](#missingsnapshotmetadata)\n        \n    *   [OcwCallWrongEra](#ocwcallwrongera)\n        \n    *   [PreDispatchEarlySubmission](#predispatchearlysubmission)\n        \n    *   [PreDispatchWeakSubmission](#predispatchweaksubmission)\n        \n    *   [PreDispatchWrongWinnerCount](#predispatchwrongwinnercount)\n        \n    *   [SignedCannotPayDeposit](#signedcannotpaydeposit)\n        \n    *   [SignedInvalidWitness](#signedinvalidwitness)\n        \n    *   [SignedQueueFull](#signedqueuefull)\n        \n    *   [SignedTooMuchWeight](#signedtoomuchweight)\n        \n    *   [TooManyWinners](#toomanywinners)\n        \n*   [fastUnstake](#fastunstake)\n    *   [AlreadyHead](#alreadyhead)\n        \n    *   [AlreadyQueued](#alreadyqueued)\n        \n    *   [CallNotAllowed](#callnotallowed-1)\n        \n    *   [NotController](#notcontroller)\n        \n    *   [NotFullyBonded](#notfullybonded)\n        \n    *   [NotQueued](#notqueued)\n        \n*   [fellowshipCollective](#fellowshipcollective)\n    *   [AlreadyMember](#alreadymember)\n        \n    *   [Corruption](#corruption)\n        \n    *   [InvalidWitness](#invalidwitness)\n        \n    *   [NoneRemaining](#noneremaining)\n        \n    *   [NoPermission](#nopermission-1)\n        \n    *   [NotMember](#notmember)\n        \n    *   [NotPolling](#notpolling)\n        \n    *   [Ongoing](#ongoing)\n        \n    *   [RankTooLow](#ranktoolow)\n        \n*   [fellowshipReferenda](#fellowshipreferenda)\n    *   [BadReferendum](#badreferendum)\n        \n    *   [BadStatus](#badstatus)\n        \n    *   [BadTrack](#badtrack)\n        \n    *   [Full](#full)\n        \n    *   [HasDeposit](#hasdeposit)\n        \n    *   [NoDeposit](#nodeposit)\n        \n    *   [NoPermission](#nopermission-2)\n        \n    *   [NothingToDo](#nothingtodo)\n        \n    *   [NotOngoing](#notongoing-1)\n        \n    *   [NoTrack](#notrack)\n        \n    *   [PreimageNotExist](#preimagenotexist)\n        \n    *   [QueueEmpty](#queueempty)\n        \n    *   [Unfinished](#unfinished)\n        \n*   [grandpa](#grandpa)\n    *   [ChangePending](#changepending)\n        \n    *   [DuplicateOffenceReport](#duplicateoffencereport-2)\n        \n    *   [InvalidEquivocationProof](#invalidequivocationproof-2)\n        \n    *   [InvalidKeyOwnershipProof](#invalidkeyownershipproof-2)\n        \n    *   [PauseFailed](#pausefailed)\n        \n    *   [ResumeFailed](#resumefailed)\n        \n    *   [TooSoon](#toosoon)\n        \n*   [hrmp](#hrmp)\n    *   [AcceptHrmpChannelAlreadyConfirmed](#accepthrmpchannelalreadyconfirmed)\n        \n    *   [AcceptHrmpChannelDoesntExist](#accepthrmpchanneldoesntexist)\n        \n    *   [AcceptHrmpChannelLimitExceeded](#accepthrmpchannellimitexceeded)\n        \n    *   [CancelHrmpOpenChannelUnauthorized](#cancelhrmpopenchannelunauthorized)\n        \n    *   [CloseHrmpChannelAlreadyUnderway](#closehrmpchannelalreadyunderway)\n        \n    *   [CloseHrmpChannelDoesntExist](#closehrmpchanneldoesntexist)\n        \n    *   [CloseHrmpChannelUnauthorized](#closehrmpchannelunauthorized)\n        \n    *   [OpenHrmpChannelAlreadyConfirmed](#openhrmpchannelalreadyconfirmed)\n        \n    *   [OpenHrmpChannelAlreadyExists](#openhrmpchannelalreadyexists)\n        \n    *   [OpenHrmpChannelAlreadyRequested](#openhrmpchannelalreadyrequested)\n        \n    *   [OpenHrmpChannelCapacityExceedsLimit](#openhrmpchannelcapacityexceedslimit)\n        \n    *   [OpenHrmpChannelDoesntExist](#openhrmpchanneldoesntexist)\n        \n    *   [OpenHrmpChannelInvalidRecipient](#openhrmpchannelinvalidrecipient)\n        \n    *   [OpenHrmpChannelLimitExceeded](#openhrmpchannellimitexceeded)\n        \n    *   [OpenHrmpChannelMessageSizeExceedsLimit](#openhrmpchannelmessagesizeexceedslimit)\n        \n    *   [OpenHrmpChannelToSelf](#openhrmpchanneltoself)\n        \n    *   [OpenHrmpChannelZeroCapacity](#openhrmpchannelzerocapacity)\n        \n    *   [OpenHrmpChannelZeroMessageSize](#openhrmpchannelzeromessagesize)\n        \n    *   [WrongWitness](#wrongwitness)\n        \n*   [identity](#identity)\n    *   [AlreadyClaimed](#alreadyclaimed)\n        \n    *   [EmptyIndex](#emptyindex)\n        \n    *   [FeeChanged](#feechanged)\n        \n    *   [InvalidIndex](#invalidindex-1)\n        \n    *   [InvalidJudgement](#invalidjudgement)\n        \n    *   [InvalidTarget](#invalidtarget)\n        \n    *   [JudgementForDifferentIdentity](#judgementfordifferentidentity)\n        \n    *   [JudgementGiven](#judgementgiven)\n        \n    *   [JudgementPaymentFailed](#judgementpaymentfailed)\n        \n    *   [NoIdentity](#noidentity)\n        \n    *   [NotFound](#notfound)\n        \n    *   [NotNamed](#notnamed)\n        \n    *   [NotOwned](#notowned)\n        \n    *   [NotSub](#notsub)\n        \n    *   [StickyJudgement](#stickyjudgement)\n        \n    *   [TooManyFields](#toomanyfields)\n        \n    *   [TooManyRegistrars](#toomanyregistrars)\n        \n    *   [TooManySubAccounts](#toomanysubaccounts)\n        \n*   [imOnline](#imonline)\n    *   [DuplicatedHeartbeat](#duplicatedheartbeat)\n        \n    *   [InvalidKey](#invalidkey)\n        \n*   [indices](#indices)\n    *   [InUse](#inuse)\n        \n    *   [NotAssigned](#notassigned)\n        \n    *   [NotOwner](#notowner)\n        \n    *   [NotTransfer](#nottransfer)\n        \n    *   [Permanent](#permanent)\n        \n*   [messageQueue](#messagequeue)\n    *   [AlreadyProcessed](#alreadyprocessed)\n        \n    *   [InsufficientWeight](#insufficientweight)\n        \n    *   [NoMessage](#nomessage)\n        \n    *   [NoPage](#nopage)\n        \n    *   [NotReapable](#notreapable)\n        \n    *   [Queued](#queued)\n        \n    *   [QueuePaused](#queuepaused)\n        \n    *   [TemporarilyUnprocessable](#temporarilyunprocessable)\n        \n*   [multisig](#multisig)\n    *   [AlreadyApproved](#alreadyapproved)\n        \n    *   [AlreadyStored](#alreadystored)\n        \n    *   [MaxWeightTooLow](#maxweighttoolow)\n        \n    *   [MinimumThreshold](#minimumthreshold)\n        \n    *   [NoApprovalsNeeded](#noapprovalsneeded)\n        \n    *   [NotFound](#notfound-1)\n        \n    *   [NoTimepoint](#notimepoint)\n        \n    *   [NotOwner](#notowner-1)\n        \n    *   [SenderInSignatories](#senderinsignatories)\n        \n    *   [SignatoriesOutOfOrder](#signatoriesoutoforder)\n        \n    *   [TooFewSignatories](#toofewsignatories)\n        \n    *   [TooManySignatories](#toomanysignatories)\n        \n    *   [UnexpectedTimepoint](#unexpectedtimepoint)\n        \n    *   [WrongTimepoint](#wrongtimepoint)\n        \n*   [nis](#nis)\n    *   [AlreadyCommunal](#alreadycommunal)\n        \n    *   [AlreadyFunded](#alreadyfunded)\n        \n    *   [AlreadyPrivate](#alreadyprivate)\n        \n    *   [AmountTooSmall](#amounttoosmall)\n        \n    *   [BidTooLow](#bidtoolow)\n        \n    *   [DurationTooBig](#durationtoobig)\n        \n    *   [DurationTooSmall](#durationtoosmall)\n        \n    *   [MakesDust](#makesdust)\n        \n    *   [NotExpired](#notexpired)\n        \n    *   [NotOwner](#notowner-2)\n        \n    *   [PortionTooBig](#portiontoobig)\n        \n    *   [Throttled](#throttled)\n        \n    *   [Unfunded](#unfunded)\n        \n    *   [UnknownBid](#unknownbid)\n        \n    *   [UnknownReceipt](#unknownreceipt)\n        \n*   [nisCounterpartBalances](#niscounterpartbalances)\n    *   [DeadAccount](#deadaccount-1)\n        \n    *   [ExistentialDeposit](#existentialdeposit-1)\n        \n    *   [ExistingVestingSchedule](#existingvestingschedule-1)\n        \n    *   [Expendability](#expendability-1)\n        \n    *   [InsufficientBalance](#insufficientbalance-1)\n        \n    *   [LiquidityRestrictions](#liquidityrestrictions-1)\n        \n    *   [TooManyFreezes](#toomanyfreezes-1)\n        \n    *   [TooManyHolds](#toomanyholds-1)\n        \n    *   [TooManyReserves](#toomanyreserves-1)\n        \n    *   [VestingBalance](#vestingbalance-1)\n        \n*   [nominationPools](#nominationpools)\n    *   [AccountBelongsToOtherPool](#accountbelongstootherpool)\n        \n    *   [BondExtraRestricted](#bondextrarestricted)\n        \n    *   [CanNotChangeState](#cannotchangestate)\n        \n    *   [CannotWithdrawAny](#cannotwithdrawany)\n        \n    *   [CommissionChangeRateNotAllowed](#commissionchangeratenotallowed)\n        \n    *   [CommissionChangeThrottled](#commissionchangethrottled)\n        \n    *   [CommissionExceedsGlobalMaximum](#commissionexceedsglobalmaximum)\n        \n    *   [CommissionExceedsMaximum](#commissionexceedsmaximum)\n        \n    *   [Defensive](#defensive)\n        \n    *   [DoesNotHavePermission](#doesnothavepermission)\n        \n    *   [FullyUnbonding](#fullyunbonding)\n        \n    *   [InvalidPoolId](#invalidpoolid)\n        \n    *   [MaxCommissionRestricted](#maxcommissionrestricted)\n        \n    *   [MaxPoolMembers](#maxpoolmembers)\n        \n    *   [MaxPools](#maxpools)\n        \n    *   [MaxUnbondingLimit](#maxunbondinglimit)\n        \n    *   [MetadataExceedsMaxLen](#metadataexceedsmaxlen)\n        \n    *   [MinimumBondNotMet](#minimumbondnotmet)\n        \n    *   [NoCommissionCurrentSet](#nocommissioncurrentset)\n        \n    *   [NoPendingCommission](#nopendingcommission)\n        \n    *   [NotDestroying](#notdestroying)\n        \n    *   [NotKickerOrDestroying](#notkickerordestroying)\n        \n    *   [NotNominator](#notnominator)\n        \n    *   [NotOpen](#notopen)\n        \n    *   [OverflowRisk](#overflowrisk)\n        \n    *   [PartialUnbondNotAllowedPermissionlessly](#partialunbondnotallowedpermissionlessly)\n        \n    *   [PoolIdInUse](#poolidinuse)\n        \n    *   [PoolMemberNotFound](#poolmembernotfound)\n        \n    *   [PoolNotFound](#poolnotfound)\n        \n    *   [RewardPoolNotFound](#rewardpoolnotfound)\n        \n    *   [SubPoolsNotFound](#subpoolsnotfound)\n        \n*   [paraInclusion](#parainclusion)\n    *   [BitfieldAllZeros](#bitfieldallzeros)\n        \n    *   [BitfieldDuplicateOrUnordered](#bitfieldduplicateorunordered)\n        \n    *   [BitfieldReferencesFreedCore](#bitfieldreferencesfreedcore)\n        \n    *   [CandidateScheduledBeforeParaFree](#candidatescheduledbeforeparafree)\n        \n    *   [DisallowedRelayParent](#disallowedrelayparent)\n        \n    *   [HeadDataTooLarge](#headdatatoolarge)\n        \n    *   [HrmpWatermarkMishandling](#hrmpwatermarkmishandling)\n        \n    *   [IncorrectDownwardMessageHandling](#incorrectdownwardmessagehandling)\n        \n    *   [InsufficientBacking](#insufficientbacking)\n        \n    *   [InvalidAssignment](#invalidassignment)\n        \n    *   [InvalidBacking](#invalidbacking)\n        \n    *   [InvalidBitfieldSignature](#invalidbitfieldsignature)\n        \n    *   [InvalidGroupIndex](#invalidgroupindex)\n        \n    *   [InvalidOutboundHrmp](#invalidoutboundhrmp)\n        \n    *   [InvalidUpwardMessages](#invalidupwardmessages)\n        \n    *   [InvalidValidationCodeHash](#invalidvalidationcodehash)\n        \n    *   [NewCodeTooLarge](#newcodetoolarge)\n        \n    *   [NotCollatorSigned](#notcollatorsigned)\n        \n    *   [ParaHeadMismatch](#paraheadmismatch)\n        \n    *   [PrematureCodeUpgrade](#prematurecodeupgrade)\n        \n    *   [ScheduledOutOfOrder](#scheduledoutoforder)\n        \n    *   [UnexpectedRelayParent](#unexpectedrelayparent)\n        \n    *   [UnscheduledCandidate](#unscheduledcandidate)\n        \n    *   [UnsortedOrDuplicateBackedCandidates](#unsortedorduplicatebackedcandidates)\n        \n    *   [UnsortedOrDuplicateDisputeStatementSet](#unsortedorduplicatedisputestatementset)\n        \n    *   [UnsortedOrDuplicateValidatorIndices](#unsortedorduplicatevalidatorindices)\n        \n    *   [ValidationDataHashMismatch](#validationdatahashmismatch)\n        \n    *   [ValidatorIndexOutOfBounds](#validatorindexoutofbounds)\n        \n    *   [WrongBitfieldSize](#wrongbitfieldsize)\n        \n*   [paraInherent](#parainherent)\n    *   [CandidateConcludedInvalid](#candidateconcludedinvalid)\n        \n    *   [DisputeInvalid](#disputeinvalid)\n        \n    *   [DisputeStatementsUnsortedOrDuplicates](#disputestatementsunsortedorduplicates)\n        \n    *   [InherentOverweight](#inherentoverweight)\n        \n    *   [InvalidParentHeader](#invalidparentheader)\n        \n    *   [TooManyInclusionInherents](#toomanyinclusioninherents)\n        \n*   [paras](#paras)\n    *   [CannotDowngrade](#cannotdowngrade)\n        \n    *   [CannotOffboard](#cannotoffboard)\n        \n    *   [CannotOnboard](#cannotonboard)\n        \n    *   [CannotUpgrade](#cannotupgrade)\n        \n    *   [CannotUpgradeCode](#cannotupgradecode)\n        \n    *   [NotRegistered](#notregistered)\n        \n    *   [PvfCheckDoubleVote](#pvfcheckdoublevote)\n        \n    *   [PvfCheckInvalidSignature](#pvfcheckinvalidsignature)\n        \n    *   [PvfCheckStatementFuture](#pvfcheckstatementfuture)\n        \n    *   [PvfCheckStatementStale](#pvfcheckstatementstale)\n        \n    *   [PvfCheckSubjectInvalid](#pvfchecksubjectinvalid)\n        \n    *   [PvfCheckValidatorIndexOutOfBounds](#pvfcheckvalidatorindexoutofbounds)\n        \n*   [parasDisputes](#parasdisputes)\n    *   [AncientDisputeStatement](#ancientdisputestatement)\n        \n    *   [DuplicateDisputeStatementSets](#duplicatedisputestatementsets)\n        \n    *   [DuplicateStatement](#duplicatestatement)\n        \n    *   [InvalidSignature](#invalidsignature-1)\n        \n    *   [MaliciousBacker](#maliciousbacker)\n        \n    *   [MissingBackingVotes](#missingbackingvotes)\n        \n    *   [SingleSidedDispute](#singlesideddispute)\n        \n    *   [UnconfirmedDispute](#unconfirmeddispute)\n        \n    *   [ValidatorIndexOutOfBounds](#validatorindexoutofbounds-1)\n        \n*   [parasSlashing](#parasslashing)\n    *   [DuplicateSlashingReport](#duplicateslashingreport)\n        \n    *   [InvalidCandidateHash](#invalidcandidatehash)\n        \n    *   [InvalidKeyOwnershipProof](#invalidkeyownershipproof-3)\n        \n    *   [InvalidSessionIndex](#invalidsessionindex)\n        \n    *   [InvalidValidatorIndex](#invalidvalidatorindex)\n        \n    *   [ValidatorIndexIdMismatch](#validatorindexidmismatch)\n        \n*   [preimage](#preimage)\n    *   [AlreadyNoted](#alreadynoted)\n        \n    *   [NotAuthorized](#notauthorized)\n        \n    *   [NotNoted](#notnoted)\n        \n    *   [NotRequested](#notrequested)\n        \n    *   [Requested](#requested)\n        \n    *   [TooBig](#toobig)\n        \n*   [proxy](#proxy)\n    *   [Duplicate](#duplicate)\n        \n    *   [NoPermission](#nopermission-3)\n        \n    *   [NoSelfProxy](#noselfproxy)\n        \n    *   [NotFound](#notfound-2)\n        \n    *   [NotProxy](#notproxy)\n        \n    *   [TooMany](#toomany)\n        \n    *   [Unannounced](#unannounced)\n        \n    *   [Unproxyable](#unproxyable)\n        \n*   [recovery](#recovery)\n    *   [AlreadyProxy](#alreadyproxy)\n        \n    *   [AlreadyRecoverable](#alreadyrecoverable)\n        \n    *   [AlreadyStarted](#alreadystarted)\n        \n    *   [AlreadyVouched](#alreadyvouched)\n        \n    *   [BadState](#badstate)\n        \n    *   [DelayPeriod](#delayperiod)\n        \n    *   [MaxFriends](#maxfriends)\n        \n    *   [NotAllowed](#notallowed)\n        \n    *   [NotEnoughFriends](#notenoughfriends)\n        \n    *   [NotFriend](#notfriend)\n        \n    *   [NotRecoverable](#notrecoverable)\n        \n    *   [NotSorted](#notsorted)\n        \n    *   [NotStarted](#notstarted)\n        \n    *   [StillActive](#stillactive)\n        \n    *   [Threshold](#threshold)\n        \n    *   [ZeroThreshold](#zerothreshold)\n        \n*   [referenda](#referenda)\n    *   [BadReferendum](#badreferendum-1)\n        \n    *   [BadStatus](#badstatus-1)\n        \n    *   [BadTrack](#badtrack-1)\n        \n    *   [Full](#full-1)\n        \n    *   [HasDeposit](#hasdeposit-1)\n        \n    *   [NoDeposit](#nodeposit-1)\n        \n    *   [NoPermission](#nopermission-4)\n        \n    *   [NothingToDo](#nothingtodo-1)\n        \n    *   [NotOngoing](#notongoing-2)\n        \n    *   [NoTrack](#notrack-1)\n        \n    *   [PreimageNotExist](#preimagenotexist-1)\n        \n    *   [QueueEmpty](#queueempty-1)\n        \n    *   [Unfinished](#unfinished-1)\n        \n*   [registrar](#registrar)\n    *   [AlreadyRegistered](#alreadyregistered)\n        \n    *   [CannotDeregister](#cannotderegister)\n        \n    *   [CannotDowngrade](#cannotdowngrade-1)\n        \n    *   [CannotSwap](#cannotswap)\n        \n    *   [CannotUpgrade](#cannotupgrade-1)\n        \n    *   [CodeTooLarge](#codetoolarge)\n        \n    *   [EmptyCode](#emptycode)\n        \n    *   [HeadDataTooLarge](#headdatatoolarge-1)\n        \n    *   [NotOwner](#notowner-3)\n        \n    *   [NotParachain](#notparachain-1)\n        \n    *   [NotParathread](#notparathread)\n        \n    *   [NotRegistered](#notregistered-1)\n        \n    *   [NotReserved](#notreserved)\n        \n    *   [ParaLocked](#paralocked)\n        \n*   [scheduler](#scheduler)\n    *   [FailedToSchedule](#failedtoschedule)\n        \n    *   [Named](#named)\n        \n    *   [NotFound](#notfound-3)\n        \n    *   [RescheduleNoChange](#reschedulenochange)\n        \n    *   [TargetBlockNumberInPast](#targetblocknumberinpast)\n        \n*   [session](#session)\n    *   [DuplicatedKey](#duplicatedkey)\n        \n    *   [InvalidProof](#invalidproof)\n        \n    *   [NoAccount](#noaccount)\n        \n    *   [NoAssociatedValidatorId](#noassociatedvalidatorid)\n        \n    *   [NoKeys](#nokeys)\n        \n*   [slots](#slots)\n    *   [LeaseError](#leaseerror)\n        \n    *   [ParaNotOnboarding](#paranotonboarding)\n        \n*   [society](#society)\n    *   [AlreadyBid](#alreadybid)\n        \n    *   [AlreadyCandidate](#alreadycandidate)\n        \n    *   [AlreadyElevated](#alreadyelevated)\n        \n    *   [AlreadyFounded](#alreadyfounded)\n        \n    *   [AlreadyMember](#alreadymember-1)\n        \n    *   [AlreadyPunished](#alreadypunished)\n        \n    *   [AlreadyVouching](#alreadyvouching)\n        \n    *   [Approved](#approved)\n        \n    *   [Expired](#expired)\n        \n    *   [Founder](#founder)\n        \n    *   [Head](#head)\n        \n    *   [InProgress](#inprogress)\n        \n    *   [InsufficientFunds](#insufficientfunds-1)\n        \n    *   [InsufficientPot](#insufficientpot)\n        \n    *   [MaxMembers](#maxmembers)\n        \n    *   [NoDefender](#nodefender)\n        \n    *   [NoPayout](#nopayout)\n        \n    *   [NotApproved](#notapproved)\n        \n    *   [NotBidder](#notbidder)\n        \n    *   [NotCandidate](#notcandidate)\n        \n    *   [NotFounder](#notfounder)\n        \n    *   [NotGroup](#notgroup)\n        \n    *   [NotHead](#nothead)\n        \n    *   [NotMember](#notmember-1)\n        \n    *   [NotRejected](#notrejected)\n        \n    *   [NotSuspended](#notsuspended)\n        \n    *   [NotVouchingOnBidder](#notvouchingonbidder)\n        \n    *   [NoVotes](#novotes)\n        \n    *   [Rejected](#rejected)\n        \n    *   [Suspended](#suspended)\n        \n    *   [TooEarly](#tooearly)\n        \n    *   [Voted](#voted)\n        \n*   [staking](#staking)\n    *   [AlreadyBonded](#alreadybonded)\n        \n    *   [AlreadyClaimed](#alreadyclaimed-1)\n        \n    *   [AlreadyPaired](#alreadypaired)\n        \n    *   [BadState](#badstate-1)\n        \n    *   [BadTarget](#badtarget)\n        \n    *   [BoundNotMet](#boundnotmet-1)\n        \n    *   [CannotChillOther](#cannotchillother)\n        \n    *   [CommissionTooLow](#commissiontoolow)\n        \n    *   [DuplicateIndex](#duplicateindex)\n        \n    *   [EmptyTargets](#emptytargets)\n        \n    *   [FundedTarget](#fundedtarget)\n        \n    *   [IncorrectHistoryDepth](#incorrecthistorydepth)\n        \n    *   [IncorrectSlashingSpans](#incorrectslashingspans)\n        \n    *   [InsufficientBond](#insufficientbond)\n        \n    *   [InvalidEraToReward](#invalideratoreward)\n        \n    *   [InvalidNumberOfNominations](#invalidnumberofnominations)\n        \n    *   [InvalidSlashIndex](#invalidslashindex)\n        \n    *   [NoMoreChunks](#nomorechunks)\n        \n    *   [NotController](#notcontroller-1)\n        \n    *   [NotSortedAndUnique](#notsortedandunique)\n        \n    *   [NotStash](#notstash)\n        \n    *   [NoUnlockChunk](#nounlockchunk)\n        \n    *   [TooManyNominators](#toomanynominators)\n        \n    *   [TooManyTargets](#toomanytargets)\n        \n    *   [TooManyValidators](#toomanyvalidators)\n        \n*   [stateTrieMigration](#statetriemigration)\n    *   [BadChildRoot](#badchildroot)\n        \n    *   [BadWitness](#badwitness)\n        \n    *   [KeyTooLong](#keytoolong)\n        \n    *   [MaxSignedLimits](#maxsignedlimits)\n        \n    *   [NotEnoughFunds](#notenoughfunds)\n        \n    *   [SignedMigrationNotAllowed](#signedmigrationnotallowed)\n        \n*   [system](#system)\n    *   [CallFiltered](#callfiltered)\n        \n    *   [FailedToExtractRuntimeVersion](#failedtoextractruntimeversion)\n        \n    *   [InvalidSpecName](#invalidspecname)\n        \n    *   [NonDefaultComposite](#nondefaultcomposite)\n        \n    *   [NonZeroRefCount](#nonzerorefcount)\n        \n    *   [SpecVersionNeedsToIncrease](#specversionneedstoincrease)\n        \n*   [treasury](#treasury)\n    *   [InsufficientPermission](#insufficientpermission)\n        \n    *   [InsufficientProposersBalance](#insufficientproposersbalance-1)\n        \n    *   [InvalidIndex](#invalidindex-2)\n        \n    *   [ProposalNotApproved](#proposalnotapproved)\n        \n    *   [TooManyApprovals](#toomanyapprovals)\n        \n*   [utility](#utility)\n    *   [TooManyCalls](#toomanycalls)\n        \n*   [vesting](#vesting)\n    *   [AmountLow](#amountlow)\n        \n    *   [AtMaxVestingSchedules](#atmaxvestingschedules)\n        \n    *   [InvalidScheduleParams](#invalidscheduleparams)\n        \n    *   [NotVesting](#notvesting)\n        \n    *   [ScheduleIndexOutOfBounds](#scheduleindexoutofbounds)\n        \n*   [voterList](#voterlist)\n    *   [List](#list)\n        \n*   [whitelist](#whitelist)\n    *   [CallAlreadyWhitelisted](#callalreadywhitelisted)\n        \n    *   [CallIsNotWhitelisted](#callisnotwhitelisted)\n        \n    *   [InvalidCallWeightWitness](#invalidcallweightwitness)\n        \n    *   [UnavailablePreImage](#unavailablepreimage)\n        \n    *   [UndecodableCall](#undecodablecall)\n        \n*   [xcmPallet](#xcmpallet)\n    *   [AccountNotSovereign](#accountnotsovereign)\n        \n    *   [AlreadySubscribed](#alreadysubscribed)\n        \n    *   [BadLocation](#badlocation)\n        \n    *   [BadVersion](#badversion)\n        \n    *   [CannotReanchor](#cannotreanchor)\n        \n    *   [DestinationNotInvertible](#destinationnotinvertible)\n        \n    *   [Empty](#empty)\n        \n    *   [FeesNotMet](#feesnotmet)\n        \n    *   [Filtered](#filtered)\n        \n    *   [InUse](#inuse-1)\n        \n    *   [InvalidAsset](#invalidasset)\n        \n    *   [InvalidOrigin](#invalidorigin-1)\n        \n    *   [LockNotFound](#locknotfound)\n        \n    *   [LowBalance](#lowbalance)\n        \n    *   [NoSubscription](#nosubscription)\n        \n    *   [SendFailure](#sendfailure)\n        \n    *   [TooManyAssets](#toomanyassets)\n        \n    *   [TooManyLocks](#toomanylocks)\n        \n    *   [Unreachable](#unreachable)\n        \n    *   [UnweighableMessage](#unweighablemessage)"}, {"title": null, "description": null, "source_url": "https://polkadot.js.org/docs/kusama/events", "markdown": "[Skip to main content](#__docusaurus_skipToContent_fallback)\n\n[![polkadot{.js}](https://polkadot.js.org/docs/img/logo.svg)\\\n\\\n**polkadot{.js}**](/docs/)\n\n[Apps UI (Wallet)](https://polkadot.js.org/apps/)\n[GitHub](https://github.com/polkadot-js/docs)\n\nSearch...\n\n*   [Introduction](#)\n    \n*   [API](#)\n    \n*   [Metadata](#)\n    \n    *   [Substrate](#)\n        \n    *   [Polkadot](#)\n        \n    *   [Kusama](#)\n        \n        *   [Overview](/docs/kusama)\n            \n        *   [Runtime](/docs/kusama/runtime)\n            \n        *   [JSON-RPC](/docs/kusama/rpc)\n            \n        *   [Constants](/docs/kusama/constants)\n            \n        *   [Storage](/docs/kusama/storage)\n            \n        *   [Extrinsics](/docs/kusama/extrinsics)\n            \n        *   [Events](/docs/kusama/events)\n            \n        *   [Errors](/docs/kusama/errors)\n            \n*   [Keyring](#)\n    \n*   [Crypto Utilities](#)\n    \n*   [Contracts (API)](#)\n    \n*   [Identicon (UI)](#)\n    \n*   [Keyring (UI)](#)\n    \n*   [Extension](#)\n    \n*   [Run, Bundle, Test](#)\n    \n\n*   [](/docs/)\n    \n*   Metadata\n*   Kusama\n*   Events\n\nOn this page\n\nEvents\n======\n\nEvents are emitted for certain operations on the runtime. The following sections describe the events that are part of the default Kusama runtime.\n\n(NOTE: These were generated from a static/snapshot view of a recent default Kusama runtime. Some items may not be available in older nodes, or in any customized implementations.)\n\n*   **[auctions](#auctions)\n    **\n    \n*   **[balances](#balances)\n    **\n    \n*   **[bounties](#bounties)\n    **\n    \n*   **[childBounties](#childbounties)\n    **\n    \n*   **[claims](#claims)\n    **\n    \n*   **[convictionVoting](#convictionvoting)\n    **\n    \n*   **[crowdloan](#crowdloan)\n    **\n    \n*   **[electionProviderMultiPhase](#electionprovidermultiphase)\n    **\n    \n*   **[fastUnstake](#fastunstake)\n    **\n    \n*   **[fellowshipCollective](#fellowshipcollective)\n    **\n    \n*   **[fellowshipReferenda](#fellowshipreferenda)\n    **\n    \n*   **[grandpa](#grandpa)\n    **\n    \n*   **[hrmp](#hrmp)\n    **\n    \n*   **[identity](#identity)\n    **\n    \n*   **[imOnline](#imonline)\n    **\n    \n*   **[indices](#indices)\n    **\n    \n*   **[messageQueue](#messagequeue)\n    **\n    \n*   **[multisig](#multisig)\n    **\n    \n*   **[nis](#nis)\n    **\n    \n*   **[nisCounterpartBalances](#niscounterpartbalances)\n    **\n    \n*   **[nominationPools](#nominationpools)\n    **\n    \n*   **[offences](#offences)\n    **\n    \n*   **[paraInclusion](#parainclusion)\n    **\n    \n*   **[paras](#paras)\n    **\n    \n*   **[parasDisputes](#parasdisputes)\n    **\n    \n*   **[preimage](#preimage)\n    **\n    \n*   **[proxy](#proxy)\n    **\n    \n*   **[recovery](#recovery)\n    **\n    \n*   **[referenda](#referenda)\n    **\n    \n*   **[registrar](#registrar)\n    **\n    \n*   **[scheduler](#scheduler)\n    **\n    \n*   **[session](#session)\n    **\n    \n*   **[slots](#slots)\n    **\n    \n*   **[society](#society)\n    **\n    \n*   **[staking](#staking)\n    **\n    \n*   **[stateTrieMigration](#statetriemigration)\n    **\n    \n*   **[system](#system)\n    **\n    \n*   **[transactionPayment](#transactionpayment)\n    **\n    \n*   **[treasury](#treasury)\n    **\n    \n*   **[utility](#utility)\n    **\n    \n*   **[vesting](#vesting)\n    **\n    \n*   **[voterList](#voterlist)\n    **\n    \n*   **[whitelist](#whitelist)\n    **\n    \n*   **[xcmPallet](#xcmpallet)\n    **\n    \n\n* * *\n\nauctions[\u200b](#auctions \"Direct link to auctions\")\n\n-------------------------------------------------\n\n### AuctionClosed(`u32`)[\u200b](#auctionclosedu32 \"Direct link to auctionclosedu32\")\n\n*   **interface**: `api.events.auctions.AuctionClosed.is`\n*   **summary**: An auction ended. All funds become unreserved.\n\n### AuctionStarted(`u32`, `u32`, `u32`)[\u200b](#auctionstartedu32-u32-u32 \"Direct link to auctionstartedu32-u32-u32\")\n\n*   **interface**: `api.events.auctions.AuctionStarted.is`\n*   **summary**: An auction started. Provides its index and the block number where it will begin to close and the first lease period of the quadruplet that is auctioned.\n\n### BidAccepted(`AccountId32`, `u32`, `u128`, `u32`, `u32`)[\u200b](#bidacceptedaccountid32-u32-u128-u32-u32 \"Direct link to bidacceptedaccountid32-u32-u128-u32-u32\")\n\n*   **interface**: `api.events.auctions.BidAccepted.is`\n*   **summary**: A new bid has been accepted as the current winner.\n\n### ReserveConfiscated(`u32`, `AccountId32`, `u128`)[\u200b](#reserveconfiscatedu32-accountid32-u128 \"Direct link to reserveconfiscatedu32-accountid32-u128\")\n\n*   **interface**: `api.events.auctions.ReserveConfiscated.is`\n*   **summary**: Someone attempted to lease the same slot twice for a parachain. The amount is held in reserve but no parachain slot has been leased.\n\n### Reserved(`AccountId32`, `u128`, `u128`)[\u200b](#reservedaccountid32-u128-u128 \"Direct link to reservedaccountid32-u128-u128\")\n\n*   **interface**: `api.events.auctions.Reserved.is`\n*   **summary**: Funds were reserved for a winning bid. First balance is the extra amount reserved. Second is the total.\n\n### Unreserved(`AccountId32`, `u128`)[\u200b](#unreservedaccountid32-u128 \"Direct link to unreservedaccountid32-u128\")\n\n*   **interface**: `api.events.auctions.Unreserved.is`\n*   **summary**: Funds were unreserved since bidder is no longer active. `[bidder, amount]`\n\n### WinningOffset(`u32`, `u32`)[\u200b](#winningoffsetu32-u32 \"Direct link to winningoffsetu32-u32\")\n\n*   **interface**: `api.events.auctions.WinningOffset.is`\n*   **summary**: The winning offset was chosen for an auction. This will map into the `Winning` storage map.\n\n* * *\n\nbalances[\u200b](#balances \"Direct link to balances\")\n\n-------------------------------------------------\n\n### BalanceSet(`AccountId32`, `u128`)[\u200b](#balancesetaccountid32-u128 \"Direct link to balancesetaccountid32-u128\")\n\n*   **interface**: `api.events.balances.BalanceSet.is`\n*   **summary**: A balance was set by root.\n\n### Burned(`AccountId32`, `u128`)[\u200b](#burnedaccountid32-u128 \"Direct link to burnedaccountid32-u128\")\n\n*   **interface**: `api.events.balances.Burned.is`\n*   **summary**: Some amount was burned from an account.\n\n### Deposit(`AccountId32`, `u128`)[\u200b](#depositaccountid32-u128 \"Direct link to depositaccountid32-u128\")\n\n*   **interface**: `api.events.balances.Deposit.is`\n*   **summary**: Some amount was deposited (e.g. for transaction fees).\n\n### DustLost(`AccountId32`, `u128`)[\u200b](#dustlostaccountid32-u128 \"Direct link to dustlostaccountid32-u128\")\n\n*   **interface**: `api.events.balances.DustLost.is`\n*   **summary**: An account was removed whose balance was non-zero but below ExistentialDeposit, resulting in an outright loss.\n\n### Endowed(`AccountId32`, `u128`)[\u200b](#endowedaccountid32-u128 \"Direct link to endowedaccountid32-u128\")\n\n*   **interface**: `api.events.balances.Endowed.is`\n*   **summary**: An account was created with some free balance.\n\n### Frozen(`AccountId32`, `u128`)[\u200b](#frozenaccountid32-u128 \"Direct link to frozenaccountid32-u128\")\n\n*   **interface**: `api.events.balances.Frozen.is`\n*   **summary**: Some balance was frozen.\n\n### Issued(`u128`)[\u200b](#issuedu128 \"Direct link to issuedu128\")\n\n*   **interface**: `api.events.balances.Issued.is`\n*   **summary**: Total issuance was increased by `amount`, creating a credit to be balanced.\n\n### Locked(`AccountId32`, `u128`)[\u200b](#lockedaccountid32-u128 \"Direct link to lockedaccountid32-u128\")\n\n*   **interface**: `api.events.balances.Locked.is`\n*   **summary**: Some balance was locked.\n\n### Minted(`AccountId32`, `u128`)[\u200b](#mintedaccountid32-u128 \"Direct link to mintedaccountid32-u128\")\n\n*   **interface**: `api.events.balances.Minted.is`\n*   **summary**: Some amount was minted into an account.\n\n### Rescinded(`u128`)[\u200b](#rescindedu128 \"Direct link to rescindedu128\")\n\n*   **interface**: `api.events.balances.Rescinded.is`\n*   **summary**: Total issuance was decreased by `amount`, creating a debt to be balanced.\n\n### Reserved(`AccountId32`, `u128`)[\u200b](#reservedaccountid32-u128 \"Direct link to reservedaccountid32-u128\")\n\n*   **interface**: `api.events.balances.Reserved.is`\n*   **summary**: Some balance was reserved (moved from free to reserved).\n\n### ReserveRepatriated(`AccountId32`, `AccountId32`, `u128`, `FrameSupportTokensMiscBalanceStatus`)[\u200b](#reserverepatriatedaccountid32-accountid32-u128-framesupporttokensmiscbalancestatus \"Direct link to reserverepatriatedaccountid32-accountid32-u128-framesupporttokensmiscbalancestatus\")\n\n*   **interface**: `api.events.balances.ReserveRepatriated.is`\n*   **summary**: Some balance was moved from the reserve of the first account to the second account. Final argument indicates the destination balance type.\n\n### Restored(`AccountId32`, `u128`)[\u200b](#restoredaccountid32-u128 \"Direct link to restoredaccountid32-u128\")\n\n*   **interface**: `api.events.balances.Restored.is`\n*   **summary**: Some amount was restored into an account.\n\n### Slashed(`AccountId32`, `u128`)[\u200b](#slashedaccountid32-u128 \"Direct link to slashedaccountid32-u128\")\n\n*   **interface**: `api.events.balances.Slashed.is`\n*   **summary**: Some amount was removed from the account (e.g. for misbehavior).\n\n### Suspended(`AccountId32`, `u128`)[\u200b](#suspendedaccountid32-u128 \"Direct link to suspendedaccountid32-u128\")\n\n*   **interface**: `api.events.balances.Suspended.is`\n*   **summary**: Some amount was suspended from an account (it can be restored later).\n\n### Thawed(`AccountId32`, `u128`)[\u200b](#thawedaccountid32-u128 \"Direct link to thawedaccountid32-u128\")\n\n*   **interface**: `api.events.balances.Thawed.is`\n*   **summary**: Some balance was thawed.\n\n### Transfer(`AccountId32`, `AccountId32`, `u128`)[\u200b](#transferaccountid32-accountid32-u128 \"Direct link to transferaccountid32-accountid32-u128\")\n\n*   **interface**: `api.events.balances.Transfer.is`\n*   **summary**: Transfer succeeded.\n\n### Unlocked(`AccountId32`, `u128`)[\u200b](#unlockedaccountid32-u128 \"Direct link to unlockedaccountid32-u128\")\n\n*   **interface**: `api.events.balances.Unlocked.is`\n*   **summary**: Some balance was unlocked.\n\n### Unreserved(`AccountId32`, `u128`)[\u200b](#unreservedaccountid32-u128-1 \"Direct link to unreservedaccountid32-u128-1\")\n\n*   **interface**: `api.events.balances.Unreserved.is`\n*   **summary**: Some balance was unreserved (moved from reserved to free).\n\n### Upgraded(`AccountId32`)[\u200b](#upgradedaccountid32 \"Direct link to upgradedaccountid32\")\n\n*   **interface**: `api.events.balances.Upgraded.is`\n*   **summary**: An account was upgraded.\n\n### Withdraw(`AccountId32`, `u128`)[\u200b](#withdrawaccountid32-u128 \"Direct link to withdrawaccountid32-u128\")\n\n*   **interface**: `api.events.balances.Withdraw.is`\n*   **summary**: Some amount was withdrawn from the account (e.g. for transaction fees).\n\n* * *\n\nbounties[\u200b](#bounties \"Direct link to bounties\")\n\n-------------------------------------------------\n\n### BountyAwarded(`u32`, `AccountId32`)[\u200b](#bountyawardedu32-accountid32 \"Direct link to bountyawardedu32-accountid32\")\n\n*   **interface**: `api.events.bounties.BountyAwarded.is`\n*   **summary**: A bounty is awarded to a beneficiary.\n\n### BountyBecameActive(`u32`)[\u200b](#bountybecameactiveu32 \"Direct link to bountybecameactiveu32\")\n\n*   **interface**: `api.events.bounties.BountyBecameActive.is`\n*   **summary**: A bounty proposal is funded and became active.\n\n### BountyCanceled(`u32`)[\u200b](#bountycanceledu32 \"Direct link to bountycanceledu32\")\n\n*   **interface**: `api.events.bounties.BountyCanceled.is`\n*   **summary**: A bounty is cancelled.\n\n### BountyClaimed(`u32`, `u128`, `AccountId32`)[\u200b](#bountyclaimedu32-u128-accountid32 \"Direct link to bountyclaimedu32-u128-accountid32\")\n\n*   **interface**: `api.events.bounties.BountyClaimed.is`\n*   **summary**: A bounty is claimed by beneficiary.\n\n### BountyExtended(`u32`)[\u200b](#bountyextendedu32 \"Direct link to bountyextendedu32\")\n\n*   **interface**: `api.events.bounties.BountyExtended.is`\n*   **summary**: A bounty expiry is extended.\n\n### BountyProposed(`u32`)[\u200b](#bountyproposedu32 \"Direct link to bountyproposedu32\")\n\n*   **interface**: `api.events.bounties.BountyProposed.is`\n*   **summary**: New bounty proposal.\n\n### BountyRejected(`u32`, `u128`)[\u200b](#bountyrejectedu32-u128 \"Direct link to bountyrejectedu32-u128\")\n\n*   **interface**: `api.events.bounties.BountyRejected.is`\n*   **summary**: A bounty proposal was rejected; funds were slashed.\n\n* * *\n\nchildBounties[\u200b](#childbounties \"Direct link to childBounties\")\n\n----------------------------------------------------------------\n\n### Added(`u32`, `u32`)[\u200b](#addedu32-u32 \"Direct link to addedu32-u32\")\n\n*   **interface**: `api.events.childBounties.Added.is`\n*   **summary**: A child-bounty is added.\n\n### Awarded(`u32`, `u32`, `AccountId32`)[\u200b](#awardedu32-u32-accountid32 \"Direct link to awardedu32-u32-accountid32\")\n\n*   **interface**: `api.events.childBounties.Awarded.is`\n*   **summary**: A child-bounty is awarded to a beneficiary.\n\n### Canceled(`u32`, `u32`)[\u200b](#canceledu32-u32 \"Direct link to canceledu32-u32\")\n\n*   **interface**: `api.events.childBounties.Canceled.is`\n*   **summary**: A child-bounty is cancelled.\n\n### Claimed(`u32`, `u32`, `u128`, `AccountId32`)[\u200b](#claimedu32-u32-u128-accountid32 \"Direct link to claimedu32-u32-u128-accountid32\")\n\n*   **interface**: `api.events.childBounties.Claimed.is`\n*   **summary**: A child-bounty is claimed by beneficiary.\n\n* * *\n\nclaims[\u200b](#claims \"Direct link to claims\")\n\n-------------------------------------------\n\n### Claimed(`AccountId32`, `EthereumAddress`, `u128`)[\u200b](#claimedaccountid32-ethereumaddress-u128 \"Direct link to claimedaccountid32-ethereumaddress-u128\")\n\n*   **interface**: `api.events.claims.Claimed.is`\n*   **summary**: Someone claimed some DOTs.\n\n* * *\n\nconvictionVoting[\u200b](#convictionvoting \"Direct link to convictionVoting\")\n\n-------------------------------------------------------------------------\n\n### Delegated(`AccountId32`, `AccountId32`)[\u200b](#delegatedaccountid32-accountid32 \"Direct link to delegatedaccountid32-accountid32\")\n\n*   **interface**: `api.events.convictionVoting.Delegated.is`\n*   **summary**: An account has delegated their vote to another account. \\[who, target\\]\n\n### Undelegated(`AccountId32`)[\u200b](#undelegatedaccountid32 \"Direct link to undelegatedaccountid32\")\n\n*   **interface**: `api.events.convictionVoting.Undelegated.is`\n*   **summary**: An \\[account\\] has cancelled a previous delegation operation.\n\n* * *\n\ncrowdloan[\u200b](#crowdloan \"Direct link to crowdloan\")\n\n----------------------------------------------------\n\n### AddedToNewRaise(`u32`)[\u200b](#addedtonewraiseu32 \"Direct link to addedtonewraiseu32\")\n\n*   **interface**: `api.events.crowdloan.AddedToNewRaise.is`\n*   **summary**: A parachain has been moved to `NewRaise`\n\n### AllRefunded(`u32`)[\u200b](#allrefundedu32 \"Direct link to allrefundedu32\")\n\n*   **interface**: `api.events.crowdloan.AllRefunded.is`\n*   **summary**: All loans in a fund have been refunded.\n\n### Contributed(`AccountId32`, `u32`, `u128`)[\u200b](#contributedaccountid32-u32-u128 \"Direct link to contributedaccountid32-u32-u128\")\n\n*   **interface**: `api.events.crowdloan.Contributed.is`\n*   **summary**: Contributed to a crowd sale.\n\n### Created(`u32`)[\u200b](#createdu32 \"Direct link to createdu32\")\n\n*   **interface**: `api.events.crowdloan.Created.is`\n*   **summary**: Create a new crowdloaning campaign.\n\n### Dissolved(`u32`)[\u200b](#dissolvedu32 \"Direct link to dissolvedu32\")\n\n*   **interface**: `api.events.crowdloan.Dissolved.is`\n*   **summary**: Fund is dissolved.\n\n### Edited(`u32`)[\u200b](#editedu32 \"Direct link to editedu32\")\n\n*   **interface**: `api.events.crowdloan.Edited.is`\n*   **summary**: The configuration to a crowdloan has been edited.\n\n### HandleBidResult(`u32`, `Result<Null, SpRuntimeDispatchError>`)[\u200b](#handlebidresultu32-resultnull-spruntimedispatcherror \"Direct link to handlebidresultu32-resultnull-spruntimedispatcherror\")\n\n*   **interface**: `api.events.crowdloan.HandleBidResult.is`\n*   **summary**: The result of trying to submit a new bid to the Slots pallet.\n\n### MemoUpdated(`AccountId32`, `u32`, `Bytes`)[\u200b](#memoupdatedaccountid32-u32-bytes \"Direct link to memoupdatedaccountid32-u32-bytes\")\n\n*   **interface**: `api.events.crowdloan.MemoUpdated.is`\n*   **summary**: A memo has been updated.\n\n### PartiallyRefunded(`u32`)[\u200b](#partiallyrefundedu32 \"Direct link to partiallyrefundedu32\")\n\n*   **interface**: `api.events.crowdloan.PartiallyRefunded.is`\n*   **summary**: The loans in a fund have been partially dissolved, i.e. there are some left over child keys that still need to be killed.\n\n### Withdrew(`AccountId32`, `u32`, `u128`)[\u200b](#withdrewaccountid32-u32-u128 \"Direct link to withdrewaccountid32-u32-u128\")\n\n*   **interface**: `api.events.crowdloan.Withdrew.is`\n*   **summary**: Withdrew full balance of a contributor.\n\n* * *\n\nelectionProviderMultiPhase[\u200b](#electionprovidermultiphase \"Direct link to electionProviderMultiPhase\")\n\n-------------------------------------------------------------------------------------------------------\n\n### ElectionFailed()[\u200b](#electionfailed \"Direct link to ElectionFailed()\")\n\n*   **interface**: `api.events.electionProviderMultiPhase.ElectionFailed.is`\n    \n*   **summary**: An election failed.\n    \n    Not much can be said about which computes failed in the process.\n    \n\n### ElectionFinalized(`PalletElectionProviderMultiPhaseElectionCompute`, `SpNposElectionsElectionScore`)[\u200b](#electionfinalizedpalletelectionprovidermultiphaseelectioncompute-spnposelectionselectionscore \"Direct link to electionfinalizedpalletelectionprovidermultiphaseelectioncompute-spnposelectionselectionscore\")\n\n*   **interface**: `api.events.electionProviderMultiPhase.ElectionFinalized.is`\n*   **summary**: The election has been finalized, with the given computation and score.\n\n### PhaseTransitioned(`PalletElectionProviderMultiPhasePhase`, `PalletElectionProviderMultiPhasePhase`, `u32`)[\u200b](#phasetransitionedpalletelectionprovidermultiphasephase-palletelectionprovidermultiphasephase-u32 \"Direct link to phasetransitionedpalletelectionprovidermultiphasephase-palletelectionprovidermultiphasephase-u32\")\n\n*   **interface**: `api.events.electionProviderMultiPhase.PhaseTransitioned.is`\n*   **summary**: There was a phase transition in a given round.\n\n### Rewarded(`AccountId32`, `u128`)[\u200b](#rewardedaccountid32-u128 \"Direct link to rewardedaccountid32-u128\")\n\n*   **interface**: `api.events.electionProviderMultiPhase.Rewarded.is`\n*   **summary**: An account has been rewarded for their signed submission being finalized.\n\n### Slashed(`AccountId32`, `u128`)[\u200b](#slashedaccountid32-u128-1 \"Direct link to slashedaccountid32-u128-1\")\n\n*   **interface**: `api.events.electionProviderMultiPhase.Slashed.is`\n*   **summary**: An account has been slashed for submitting an invalid signed submission.\n\n### SolutionStored(`PalletElectionProviderMultiPhaseElectionCompute`, `Option<AccountId32>`, `bool`)[\u200b](#solutionstoredpalletelectionprovidermultiphaseelectioncompute-optionaccountid32-bool \"Direct link to solutionstoredpalletelectionprovidermultiphaseelectioncompute-optionaccountid32-bool\")\n\n*   **interface**: `api.events.electionProviderMultiPhase.SolutionStored.is`\n    \n*   **summary**: A solution was stored with the given compute.\n    \n    The `origin` indicates the origin of the solution. If `origin` is `Some(AccountId)`, the stored solution was submited in the signed phase by a miner with the `AccountId`. Otherwise, the solution was stored either during the unsigned phase or by `T::ForceOrigin`. The `bool` is `true` when a previous solution was ejected to make room for this one.\n    \n\n* * *\n\nfastUnstake[\u200b](#fastunstake \"Direct link to fastUnstake\")\n\n----------------------------------------------------------\n\n### BatchChecked(`Vec<u32>`)[\u200b](#batchcheckedvecu32 \"Direct link to batchcheckedvecu32\")\n\n*   **interface**: `api.events.fastUnstake.BatchChecked.is`\n*   **summary**: A batch was partially checked for the given eras, but the process did not finish.\n\n### BatchFinished(`u32`)[\u200b](#batchfinishedu32 \"Direct link to batchfinishedu32\")\n\n*   **interface**: `api.events.fastUnstake.BatchFinished.is`\n    \n*   **summary**: A batch of a given size was terminated.\n    \n    This is always follows by a number of `Unstaked` or `Slashed` events, marking the end of the batch. A new batch will be created upon next block.\n    \n\n### InternalError()[\u200b](#internalerror \"Direct link to InternalError()\")\n\n*   **interface**: `api.events.fastUnstake.InternalError.is`\n*   **summary**: An internal error happened. Operations will be paused now.\n\n### Slashed(`AccountId32`, `u128`)[\u200b](#slashedaccountid32-u128-2 \"Direct link to slashedaccountid32-u128-2\")\n\n*   **interface**: `api.events.fastUnstake.Slashed.is`\n*   **summary**: A staker was slashed for requesting fast-unstake whilst being exposed.\n\n### Unstaked(`AccountId32`, `Result<Null, SpRuntimeDispatchError>`)[\u200b](#unstakedaccountid32-resultnull-spruntimedispatcherror \"Direct link to unstakedaccountid32-resultnull-spruntimedispatcherror\")\n\n*   **interface**: `api.events.fastUnstake.Unstaked.is`\n*   **summary**: A staker was unstaked.\n\n* * *\n\nfellowshipCollective[\u200b](#fellowshipcollective \"Direct link to fellowshipCollective\")\n\n-------------------------------------------------------------------------------------\n\n### MemberAdded(`AccountId32`)[\u200b](#memberaddedaccountid32 \"Direct link to memberaddedaccountid32\")\n\n*   **interface**: `api.events.fellowshipCollective.MemberAdded.is`\n*   **summary**: A member `who` has been added.\n\n### MemberRemoved(`AccountId32`, `u16`)[\u200b](#memberremovedaccountid32-u16 \"Direct link to memberremovedaccountid32-u16\")\n\n*   **interface**: `api.events.fellowshipCollective.MemberRemoved.is`\n*   **summary**: The member `who` of given `rank` has been removed from the collective.\n\n### RankChanged(`AccountId32`, `u16`)[\u200b](#rankchangedaccountid32-u16 \"Direct link to rankchangedaccountid32-u16\")\n\n*   **interface**: `api.events.fellowshipCollective.RankChanged.is`\n*   **summary**: The member `who`se rank has been changed to the given `rank`.\n\n### Voted(`AccountId32`, `u32`, `PalletRankedCollectiveVoteRecord`, `PalletRankedCollectiveTally`)[\u200b](#votedaccountid32-u32-palletrankedcollectivevoterecord-palletrankedcollectivetally \"Direct link to votedaccountid32-u32-palletrankedcollectivevoterecord-palletrankedcollectivetally\")\n\n*   **interface**: `api.events.fellowshipCollective.Voted.is`\n*   **summary**: The member `who` has voted for the `poll` with the given `vote` leading to an updated `tally`.\n\n* * *\n\nfellowshipReferenda[\u200b](#fellowshipreferenda \"Direct link to fellowshipReferenda\")\n\n----------------------------------------------------------------------------------\n\n### Approved(`u32`)[\u200b](#approvedu32 \"Direct link to approvedu32\")\n\n*   **interface**: `api.events.fellowshipReferenda.Approved.is`\n*   **summary**: A referendum has been approved and its proposal has been scheduled.\n\n### Cancelled(`u32`, `PalletRankedCollectiveTally`)[\u200b](#cancelledu32-palletrankedcollectivetally \"Direct link to cancelledu32-palletrankedcollectivetally\")\n\n*   **interface**: `api.events.fellowshipReferenda.Cancelled.is`\n*   **summary**: A referendum has been cancelled.\n\n### ConfirmAborted(`u32`)[\u200b](#confirmabortedu32 \"Direct link to confirmabortedu32\")\n\n*   **interface**: `api.events.fellowshipReferenda.ConfirmAborted.is`\n\n### Confirmed(`u32`, `PalletRankedCollectiveTally`)[\u200b](#confirmedu32-palletrankedcollectivetally \"Direct link to confirmedu32-palletrankedcollectivetally\")\n\n*   **interface**: `api.events.fellowshipReferenda.Confirmed.is`\n*   **summary**: A referendum has ended its confirmation phase and is ready for approval.\n\n### ConfirmStarted(`u32`)[\u200b](#confirmstartedu32 \"Direct link to confirmstartedu32\")\n\n*   **interface**: `api.events.fellowshipReferenda.ConfirmStarted.is`\n\n### DecisionDepositPlaced(`u32`, `AccountId32`, `u128`)[\u200b](#decisiondepositplacedu32-accountid32-u128 \"Direct link to decisiondepositplacedu32-accountid32-u128\")\n\n*   **interface**: `api.events.fellowshipReferenda.DecisionDepositPlaced.is`\n*   **summary**: The decision deposit has been placed.\n\n### DecisionDepositRefunded(`u32`, `AccountId32`, `u128`)[\u200b](#decisiondepositrefundedu32-accountid32-u128 \"Direct link to decisiondepositrefundedu32-accountid32-u128\")\n\n*   **interface**: `api.events.fellowshipReferenda.DecisionDepositRefunded.is`\n*   **summary**: The decision deposit has been refunded.\n\n### DecisionStarted(`u32`, `u16`, `FrameSupportPreimagesBounded`, `PalletRankedCollectiveTally`)[\u200b](#decisionstartedu32-u16-framesupportpreimagesbounded-palletrankedcollectivetally \"Direct link to decisionstartedu32-u16-framesupportpreimagesbounded-palletrankedcollectivetally\")\n\n*   **interface**: `api.events.fellowshipReferenda.DecisionStarted.is`\n*   **summary**: A referendum has moved into the deciding phase.\n\n### DepositSlashed(`AccountId32`, `u128`)[\u200b](#depositslashedaccountid32-u128 \"Direct link to depositslashedaccountid32-u128\")\n\n*   **interface**: `api.events.fellowshipReferenda.DepositSlashed.is`\n*   **summary**: A deposit has been slashaed.\n\n### Killed(`u32`, `PalletRankedCollectiveTally`)[\u200b](#killedu32-palletrankedcollectivetally \"Direct link to killedu32-palletrankedcollectivetally\")\n\n*   **interface**: `api.events.fellowshipReferenda.Killed.is`\n*   **summary**: A referendum has been killed.\n\n### MetadataCleared(`u32`, `H256`)[\u200b](#metadataclearedu32-h256 \"Direct link to metadataclearedu32-h256\")\n\n*   **interface**: `api.events.fellowshipReferenda.MetadataCleared.is`\n*   **summary**: Metadata for a referendum has been cleared.\n\n### MetadataSet(`u32`, `H256`)[\u200b](#metadatasetu32-h256 \"Direct link to metadatasetu32-h256\")\n\n*   **interface**: `api.events.fellowshipReferenda.MetadataSet.is`\n*   **summary**: Metadata for a referendum has been set.\n\n### Rejected(`u32`, `PalletRankedCollectiveTally`)[\u200b](#rejectedu32-palletrankedcollectivetally \"Direct link to rejectedu32-palletrankedcollectivetally\")\n\n*   **interface**: `api.events.fellowshipReferenda.Rejected.is`\n*   **summary**: A proposal has been rejected by referendum.\n\n### SubmissionDepositRefunded(`u32`, `AccountId32`, `u128`)[\u200b](#submissiondepositrefundedu32-accountid32-u128 \"Direct link to submissiondepositrefundedu32-accountid32-u128\")\n\n*   **interface**: `api.events.fellowshipReferenda.SubmissionDepositRefunded.is`\n*   **summary**: The submission deposit has been refunded.\n\n### Submitted(`u32`, `u16`, `FrameSupportPreimagesBounded`)[\u200b](#submittedu32-u16-framesupportpreimagesbounded \"Direct link to submittedu32-u16-framesupportpreimagesbounded\")\n\n*   **interface**: `api.events.fellowshipReferenda.Submitted.is`\n*   **summary**: A referendum has been submitted.\n\n### TimedOut(`u32`, `PalletRankedCollectiveTally`)[\u200b](#timedoutu32-palletrankedcollectivetally \"Direct link to timedoutu32-palletrankedcollectivetally\")\n\n*   **interface**: `api.events.fellowshipReferenda.TimedOut.is`\n*   **summary**: A referendum has been timed out without being decided.\n\n* * *\n\ngrandpa[\u200b](#grandpa \"Direct link to grandpa\")\n\n----------------------------------------------\n\n### NewAuthorities(`Vec<(SpConsensusGrandpaAppPublic,u64)>`)[\u200b](#newauthoritiesvecspconsensusgrandpaapppublicu64 \"Direct link to newauthoritiesvecspconsensusgrandpaapppublicu64\")\n\n*   **interface**: `api.events.grandpa.NewAuthorities.is`\n*   **summary**: New authority set has been applied.\n\n### Paused()[\u200b](#paused \"Direct link to Paused()\")\n\n*   **interface**: `api.events.grandpa.Paused.is`\n*   **summary**: Current authority set has been paused.\n\n### Resumed()[\u200b](#resumed \"Direct link to Resumed()\")\n\n*   **interface**: `api.events.grandpa.Resumed.is`\n*   **summary**: Current authority set has been resumed.\n\n* * *\n\nhrmp[\u200b](#hrmp \"Direct link to hrmp\")\n\n-------------------------------------\n\n### ChannelClosed(`u32`, `PolkadotParachainPrimitivesHrmpChannelId`)[\u200b](#channelclosedu32-polkadotparachainprimitiveshrmpchannelid \"Direct link to channelclosedu32-polkadotparachainprimitiveshrmpchannelid\")\n\n*   **interface**: `api.events.hrmp.ChannelClosed.is`\n*   **summary**: HRMP channel closed. `[by_parachain, channel_id]`\n\n### HrmpChannelForceOpened(`u32`, `u32`, `u32`, `u32`)[\u200b](#hrmpchannelforceopenedu32-u32-u32-u32 \"Direct link to hrmpchannelforceopenedu32-u32-u32-u32\")\n\n*   **interface**: `api.events.hrmp.HrmpChannelForceOpened.is`\n*   **summary**: An HRMP channel was opened via Root origin. `[sender, recipient, proposed_max_capacity, proposed_max_message_size]`\n\n### OpenChannelAccepted(`u32`, `u32`)[\u200b](#openchannelacceptedu32-u32 \"Direct link to openchannelacceptedu32-u32\")\n\n*   **interface**: `api.events.hrmp.OpenChannelAccepted.is`\n*   **summary**: Open HRMP channel accepted. `[sender, recipient]`\n\n### OpenChannelCanceled(`u32`, `PolkadotParachainPrimitivesHrmpChannelId`)[\u200b](#openchannelcanceledu32-polkadotparachainprimitiveshrmpchannelid \"Direct link to openchannelcanceledu32-polkadotparachainprimitiveshrmpchannelid\")\n\n*   **interface**: `api.events.hrmp.OpenChannelCanceled.is`\n*   **summary**: An HRMP channel request sent by the receiver was canceled by either party. `[by_parachain, channel_id]`\n\n### OpenChannelRequested(`u32`, `u32`, `u32`, `u32`)[\u200b](#openchannelrequestedu32-u32-u32-u32 \"Direct link to openchannelrequestedu32-u32-u32-u32\")\n\n*   **interface**: `api.events.hrmp.OpenChannelRequested.is`\n*   **summary**: Open HRMP channel requested. `[sender, recipient, proposed_max_capacity, proposed_max_message_size]`\n\n* * *\n\nidentity[\u200b](#identity \"Direct link to identity\")\n\n-------------------------------------------------\n\n### IdentityCleared(`AccountId32`, `u128`)[\u200b](#identityclearedaccountid32-u128 \"Direct link to identityclearedaccountid32-u128\")\n\n*   **interface**: `api.events.identity.IdentityCleared.is`\n*   **summary**: A name was cleared, and the given balance returned.\n\n### IdentityKilled(`AccountId32`, `u128`)[\u200b](#identitykilledaccountid32-u128 \"Direct link to identitykilledaccountid32-u128\")\n\n*   **interface**: `api.events.identity.IdentityKilled.is`\n*   **summary**: A name was removed and the given balance slashed.\n\n### IdentitySet(`AccountId32`)[\u200b](#identitysetaccountid32 \"Direct link to identitysetaccountid32\")\n\n*   **interface**: `api.events.identity.IdentitySet.is`\n*   **summary**: A name was set or reset (which will remove all judgements).\n\n### JudgementGiven(`AccountId32`, `u32`)[\u200b](#judgementgivenaccountid32-u32 \"Direct link to judgementgivenaccountid32-u32\")\n\n*   **interface**: `api.events.identity.JudgementGiven.is`\n*   **summary**: A judgement was given by a registrar.\n\n### JudgementRequested(`AccountId32`, `u32`)[\u200b](#judgementrequestedaccountid32-u32 \"Direct link to judgementrequestedaccountid32-u32\")\n\n*   **interface**: `api.events.identity.JudgementRequested.is`\n*   **summary**: A judgement was asked from a registrar.\n\n### JudgementUnrequested(`AccountId32`, `u32`)[\u200b](#judgementunrequestedaccountid32-u32 \"Direct link to judgementunrequestedaccountid32-u32\")\n\n*   **interface**: `api.events.identity.JudgementUnrequested.is`\n*   **summary**: A judgement request was retracted.\n\n### RegistrarAdded(`u32`)[\u200b](#registraraddedu32 \"Direct link to registraraddedu32\")\n\n*   **interface**: `api.events.identity.RegistrarAdded.is`\n*   **summary**: A registrar was added.\n\n### SubIdentityAdded(`AccountId32`, `AccountId32`, `u128`)[\u200b](#subidentityaddedaccountid32-accountid32-u128 \"Direct link to subidentityaddedaccountid32-accountid32-u128\")\n\n*   **interface**: `api.events.identity.SubIdentityAdded.is`\n*   **summary**: A sub-identity was added to an identity and the deposit paid.\n\n### SubIdentityRemoved(`AccountId32`, `AccountId32`, `u128`)[\u200b](#subidentityremovedaccountid32-accountid32-u128 \"Direct link to subidentityremovedaccountid32-accountid32-u128\")\n\n*   **interface**: `api.events.identity.SubIdentityRemoved.is`\n*   **summary**: A sub-identity was removed from an identity and the deposit freed.\n\n### SubIdentityRevoked(`AccountId32`, `AccountId32`, `u128`)[\u200b](#subidentityrevokedaccountid32-accountid32-u128 \"Direct link to subidentityrevokedaccountid32-accountid32-u128\")\n\n*   **interface**: `api.events.identity.SubIdentityRevoked.is`\n*   **summary**: A sub-identity was cleared, and the given deposit repatriated from the main identity account to the sub-identity account.\n\n* * *\n\nimOnline[\u200b](#imonline \"Direct link to imOnline\")\n\n-------------------------------------------------\n\n### AllGood()[\u200b](#allgood \"Direct link to AllGood()\")\n\n*   **interface**: `api.events.imOnline.AllGood.is`\n*   **summary**: At the end of the session, no offence was committed.\n\n### HeartbeatReceived(`PalletImOnlineSr25519AppSr25519Public`)[\u200b](#heartbeatreceivedpalletimonlinesr25519appsr25519public \"Direct link to heartbeatreceivedpalletimonlinesr25519appsr25519public\")\n\n*   **interface**: `api.events.imOnline.HeartbeatReceived.is`\n*   **summary**: A new heartbeat was received from `AuthorityId`.\n\n### SomeOffline(`Vec<(AccountId32,PalletStakingExposure)>`)[\u200b](#someofflinevecaccountid32palletstakingexposure \"Direct link to someofflinevecaccountid32palletstakingexposure\")\n\n*   **interface**: `api.events.imOnline.SomeOffline.is`\n*   **summary**: At the end of the session, at least one validator was found to be offline.\n\n* * *\n\nindices[\u200b](#indices \"Direct link to indices\")\n\n----------------------------------------------\n\n### IndexAssigned(`AccountId32`, `u32`)[\u200b](#indexassignedaccountid32-u32 \"Direct link to indexassignedaccountid32-u32\")\n\n*   **interface**: `api.events.indices.IndexAssigned.is`\n*   **summary**: A account index was assigned.\n\n### IndexFreed(`u32`)[\u200b](#indexfreedu32 \"Direct link to indexfreedu32\")\n\n*   **interface**: `api.events.indices.IndexFreed.is`\n*   **summary**: A account index has been freed up (unassigned).\n\n### IndexFrozen(`u32`, `AccountId32`)[\u200b](#indexfrozenu32-accountid32 \"Direct link to indexfrozenu32-accountid32\")\n\n*   **interface**: `api.events.indices.IndexFrozen.is`\n*   **summary**: A account index has been frozen to its current account ID.\n\n* * *\n\nmessageQueue[\u200b](#messagequeue \"Direct link to messageQueue\")\n\n-------------------------------------------------------------\n\n### OverweightEnqueued(`[u8;32]`, `PolkadotRuntimeParachainsInclusionAggregateMessageOrigin`, `u32`, `u32`)[\u200b](#overweightenqueuedu832-polkadotruntimeparachainsinclusionaggregatemessageorigin-u32-u32 \"Direct link to overweightenqueuedu832-polkadotruntimeparachainsinclusionaggregatemessageorigin-u32-u32\")\n\n*   **interface**: `api.events.messageQueue.OverweightEnqueued.is`\n*   **summary**: Message placed in overweight queue.\n\n### PageReaped(`PolkadotRuntimeParachainsInclusionAggregateMessageOrigin`, `u32`)[\u200b](#pagereapedpolkadotruntimeparachainsinclusionaggregatemessageorigin-u32 \"Direct link to pagereapedpolkadotruntimeparachainsinclusionaggregatemessageorigin-u32\")\n\n*   **interface**: `api.events.messageQueue.PageReaped.is`\n*   **summary**: This page was reaped.\n\n### Processed(`[u8;32]`, `PolkadotRuntimeParachainsInclusionAggregateMessageOrigin`, `SpWeightsWeightV2Weight`, `bool`)[\u200b](#processedu832-polkadotruntimeparachainsinclusionaggregatemessageorigin-spweightsweightv2weight-bool \"Direct link to processedu832-polkadotruntimeparachainsinclusionaggregatemessageorigin-spweightsweightv2weight-bool\")\n\n*   **interface**: `api.events.messageQueue.Processed.is`\n*   **summary**: Message is processed.\n\n### ProcessingFailed(`[u8;32]`, `PolkadotRuntimeParachainsInclusionAggregateMessageOrigin`, `FrameSupportMessagesProcessMessageError`)[\u200b](#processingfailedu832-polkadotruntimeparachainsinclusionaggregatemessageorigin-framesupportmessagesprocessmessageerror \"Direct link to processingfailedu832-polkadotruntimeparachainsinclusionaggregatemessageorigin-framesupportmessagesprocessmessageerror\")\n\n*   **interface**: `api.events.messageQueue.ProcessingFailed.is`\n*   **summary**: Message discarded due to an error in the `MessageProcessor` (usually a format error).\n\n* * *\n\nmultisig[\u200b](#multisig \"Direct link to multisig\")\n\n-------------------------------------------------\n\n### MultisigApproval(`AccountId32`, `PalletMultisigTimepoint`, `AccountId32`, `[u8;32]`)[\u200b](#multisigapprovalaccountid32-palletmultisigtimepoint-accountid32-u832 \"Direct link to multisigapprovalaccountid32-palletmultisigtimepoint-accountid32-u832\")\n\n*   **interface**: `api.events.multisig.MultisigApproval.is`\n*   **summary**: A multisig operation has been approved by someone.\n\n### MultisigCancelled(`AccountId32`, `PalletMultisigTimepoint`, `AccountId32`, `[u8;32]`)[\u200b](#multisigcancelledaccountid32-palletmultisigtimepoint-accountid32-u832 \"Direct link to multisigcancelledaccountid32-palletmultisigtimepoint-accountid32-u832\")\n\n*   **interface**: `api.events.multisig.MultisigCancelled.is`\n*   **summary**: A multisig operation has been cancelled.\n\n### MultisigExecuted(`AccountId32`, `PalletMultisigTimepoint`, `AccountId32`, `[u8;32]`, `Result<Null, SpRuntimeDispatchError>`)[\u200b](#multisigexecutedaccountid32-palletmultisigtimepoint-accountid32-u832-resultnull-spruntimedispatcherror \"Direct link to multisigexecutedaccountid32-palletmultisigtimepoint-accountid32-u832-resultnull-spruntimedispatcherror\")\n\n*   **interface**: `api.events.multisig.MultisigExecuted.is`\n*   **summary**: A multisig operation has been executed.\n\n### NewMultisig(`AccountId32`, `AccountId32`, `[u8;32]`)[\u200b](#newmultisigaccountid32-accountid32-u832 \"Direct link to newmultisigaccountid32-accountid32-u832\")\n\n*   **interface**: `api.events.multisig.NewMultisig.is`\n*   **summary**: A new multisig operation has begun.\n\n* * *\n\nnis[\u200b](#nis \"Direct link to nis\")\n\n----------------------------------\n\n### BidDropped(`AccountId32`, `u128`, `u32`)[\u200b](#biddroppedaccountid32-u128-u32 \"Direct link to biddroppedaccountid32-u128-u32\")\n\n*   **interface**: `api.events.nis.BidDropped.is`\n*   **summary**: A bid was dropped from a queue because of another, more substantial, bid was present.\n\n### BidPlaced(`AccountId32`, `u128`, `u32`)[\u200b](#bidplacedaccountid32-u128-u32 \"Direct link to bidplacedaccountid32-u128-u32\")\n\n*   **interface**: `api.events.nis.BidPlaced.is`\n*   **summary**: A bid was successfully placed.\n\n### BidRetracted(`AccountId32`, `u128`, `u32`)[\u200b](#bidretractedaccountid32-u128-u32 \"Direct link to bidretractedaccountid32-u128-u32\")\n\n*   **interface**: `api.events.nis.BidRetracted.is`\n*   **summary**: A bid was successfully removed (before being accepted).\n\n### Funded(`u128`)[\u200b](#fundedu128 \"Direct link to fundedu128\")\n\n*   **interface**: `api.events.nis.Funded.is`\n*   **summary**: An automatic funding of the deficit was made.\n\n### Issued(`u32`, `u32`, `AccountId32`, `Perquintill`, `u128`)[\u200b](#issuedu32-u32-accountid32-perquintill-u128 \"Direct link to issuedu32-u32-accountid32-perquintill-u128\")\n\n*   **interface**: `api.events.nis.Issued.is`\n*   **summary**: A bid was accepted. The balance may not be released until expiry.\n\n### Thawed(`u32`, `AccountId32`, `Perquintill`, `u128`, `bool`)[\u200b](#thawedu32-accountid32-perquintill-u128-bool \"Direct link to thawedu32-accountid32-perquintill-u128-bool\")\n\n*   **interface**: `api.events.nis.Thawed.is`\n*   **summary**: An receipt has been (at least partially) thawed.\n\n### Transferred(`AccountId32`, `AccountId32`, `u32`)[\u200b](#transferredaccountid32-accountid32-u32 \"Direct link to transferredaccountid32-accountid32-u32\")\n\n*   **interface**: `api.events.nis.Transferred.is`\n*   **summary**: A receipt was transfered.\n\n* * *\n\nnisCounterpartBalances[\u200b](#niscounterpartbalances \"Direct link to nisCounterpartBalances\")\n\n-------------------------------------------------------------------------------------------\n\n### BalanceSet(`AccountId32`, `u128`)[\u200b](#balancesetaccountid32-u128-1 \"Direct link to balancesetaccountid32-u128-1\")\n\n*   **interface**: `api.events.nisCounterpartBalances.BalanceSet.is`\n*   **summary**: A balance was set by root.\n\n### Burned(`AccountId32`, `u128`)[\u200b](#burnedaccountid32-u128-1 \"Direct link to burnedaccountid32-u128-1\")\n\n*   **interface**: `api.events.nisCounterpartBalances.Burned.is`\n*   **summary**: Some amount was burned from an account.\n\n### Deposit(`AccountId32`, `u128`)[\u200b](#depositaccountid32-u128-1 \"Direct link to depositaccountid32-u128-1\")\n\n*   **interface**: `api.events.nisCounterpartBalances.Deposit.is`\n*   **summary**: Some amount was deposited (e.g. for transaction fees).\n\n### DustLost(`AccountId32`, `u128`)[\u200b](#dustlostaccountid32-u128-1 \"Direct link to dustlostaccountid32-u128-1\")\n\n*   **interface**: `api.events.nisCounterpartBalances.DustLost.is`\n*   **summary**: An account was removed whose balance was non-zero but below ExistentialDeposit, resulting in an outright loss.\n\n### Endowed(`AccountId32`, `u128`)[\u200b](#endowedaccountid32-u128-1 \"Direct link to endowedaccountid32-u128-1\")\n\n*   **interface**: `api.events.nisCounterpartBalances.Endowed.is`\n*   **summary**: An account was created with some free balance.\n\n### Frozen(`AccountId32`, `u128`)[\u200b](#frozenaccountid32-u128-1 \"Direct link to frozenaccountid32-u128-1\")\n\n*   **interface**: `api.events.nisCounterpartBalances.Frozen.is`\n*   **summary**: Some balance was frozen.\n\n### Issued(`u128`)[\u200b](#issuedu128-1 \"Direct link to issuedu128-1\")\n\n*   **interface**: `api.events.nisCounterpartBalances.Issued.is`\n*   **summary**: Total issuance was increased by `amount`, creating a credit to be balanced.\n\n### Locked(`AccountId32`, `u128`)[\u200b](#lockedaccountid32-u128-1 \"Direct link to lockedaccountid32-u128-1\")\n\n*   **interface**: `api.events.nisCounterpartBalances.Locked.is`\n*   **summary**: Some balance was locked.\n\n### Minted(`AccountId32`, `u128`)[\u200b](#mintedaccountid32-u128-1 \"Direct link to mintedaccountid32-u128-1\")\n\n*   **interface**: `api.events.nisCounterpartBalances.Minted.is`\n*   **summary**: Some amount was minted into an account.\n\n### Rescinded(`u128`)[\u200b](#rescindedu128-1 \"Direct link to rescindedu128-1\")\n\n*   **interface**: `api.events.nisCounterpartBalances.Rescinded.is`\n*   **summary**: Total issuance was decreased by `amount`, creating a debt to be balanced.\n\n### Reserved(`AccountId32`, `u128`)[\u200b](#reservedaccountid32-u128-1 \"Direct link to reservedaccountid32-u128-1\")\n\n*   **interface**: `api.events.nisCounterpartBalances.Reserved.is`\n*   **summary**: Some balance was reserved (moved from free to reserved).\n\n### ReserveRepatriated(`AccountId32`, `AccountId32`, `u128`, `FrameSupportTokensMiscBalanceStatus`)[\u200b](#reserverepatriatedaccountid32-accountid32-u128-framesupporttokensmiscbalancestatus-1 \"Direct link to reserverepatriatedaccountid32-accountid32-u128-framesupporttokensmiscbalancestatus-1\")\n\n*   **interface**: `api.events.nisCounterpartBalances.ReserveRepatriated.is`\n*   **summary**: Some balance was moved from the reserve of the first account to the second account. Final argument indicates the destination balance type.\n\n### Restored(`AccountId32`, `u128`)[\u200b](#restoredaccountid32-u128-1 \"Direct link to restoredaccountid32-u128-1\")\n\n*   **interface**: `api.events.nisCounterpartBalances.Restored.is`\n*   **summary**: Some amount was restored into an account.\n\n### Slashed(`AccountId32`, `u128`)[\u200b](#slashedaccountid32-u128-3 \"Direct link to slashedaccountid32-u128-3\")\n\n*   **interface**: `api.events.nisCounterpartBalances.Slashed.is`\n*   **summary**: Some amount was removed from the account (e.g. for misbehavior).\n\n### Suspended(`AccountId32`, `u128`)[\u200b](#suspendedaccountid32-u128-1 \"Direct link to suspendedaccountid32-u128-1\")\n\n*   **interface**: `api.events.nisCounterpartBalances.Suspended.is`\n*   **summary**: Some amount was suspended from an account (it can be restored later).\n\n### Thawed(`AccountId32`, `u128`)[\u200b](#thawedaccountid32-u128-1 \"Direct link to thawedaccountid32-u128-1\")\n\n*   **interface**: `api.events.nisCounterpartBalances.Thawed.is`\n*   **summary**: Some balance was thawed.\n\n### Transfer(`AccountId32`, `AccountId32`, `u128`)[\u200b](#transferaccountid32-accountid32-u128-1 \"Direct link to transferaccountid32-accountid32-u128-1\")\n\n*   **interface**: `api.events.nisCounterpartBalances.Transfer.is`\n*   **summary**: Transfer succeeded.\n\n### Unlocked(`AccountId32`, `u128`)[\u200b](#unlockedaccountid32-u128-1 \"Direct link to unlockedaccountid32-u128-1\")\n\n*   **interface**: `api.events.nisCounterpartBalances.Unlocked.is`\n*   **summary**: Some balance was unlocked.\n\n### Unreserved(`AccountId32`, `u128`)[\u200b](#unreservedaccountid32-u128-2 \"Direct link to unreservedaccountid32-u128-2\")\n\n*   **interface**: `api.events.nisCounterpartBalances.Unreserved.is`\n*   **summary**: Some balance was unreserved (moved from reserved to free).\n\n### Upgraded(`AccountId32`)[\u200b](#upgradedaccountid32-1 \"Direct link to upgradedaccountid32-1\")\n\n*   **interface**: `api.events.nisCounterpartBalances.Upgraded.is`\n*   **summary**: An account was upgraded.\n\n### Withdraw(`AccountId32`, `u128`)[\u200b](#withdrawaccountid32-u128-1 \"Direct link to withdrawaccountid32-u128-1\")\n\n*   **interface**: `api.events.nisCounterpartBalances.Withdraw.is`\n*   **summary**: Some amount was withdrawn from the account (e.g. for transaction fees).\n\n* * *\n\nnominationPools[\u200b](#nominationpools \"Direct link to nominationPools\")\n\n----------------------------------------------------------------------\n\n### Bonded(`AccountId32`, `u32`, `u128`, `bool`)[\u200b](#bondedaccountid32-u32-u128-bool \"Direct link to bondedaccountid32-u32-u128-bool\")\n\n*   **interface**: `api.events.nominationPools.Bonded.is`\n*   **summary**: A member has became bonded in a pool.\n\n### Created(`AccountId32`, `u32`)[\u200b](#createdaccountid32-u32 \"Direct link to createdaccountid32-u32\")\n\n*   **interface**: `api.events.nominationPools.Created.is`\n*   **summary**: A pool has been created.\n\n### Destroyed(`u32`)[\u200b](#destroyedu32 \"Direct link to destroyedu32\")\n\n*   **interface**: `api.events.nominationPools.Destroyed.is`\n*   **summary**: A pool has been destroyed.\n\n### MemberRemoved(`u32`, `AccountId32`)[\u200b](#memberremovedu32-accountid32 \"Direct link to memberremovedu32-accountid32\")\n\n*   **interface**: `api.events.nominationPools.MemberRemoved.is`\n    \n*   **summary**: A member has been removed from a pool.\n    \n    The removal can be voluntary (withdrawn all unbonded funds) or involuntary (kicked).\n    \n\n### PaidOut(`AccountId32`, `u32`, `u128`)[\u200b](#paidoutaccountid32-u32-u128 \"Direct link to paidoutaccountid32-u32-u128\")\n\n*   **interface**: `api.events.nominationPools.PaidOut.is`\n*   **summary**: A payout has been made to a member.\n\n### PoolCommissionChangeRateUpdated(`u32`, `PalletNominationPoolsCommissionChangeRate`)[\u200b](#poolcommissionchangerateupdatedu32-palletnominationpoolscommissionchangerate \"Direct link to poolcommissionchangerateupdatedu32-palletnominationpoolscommissionchangerate\")\n\n*   **interface**: `api.events.nominationPools.PoolCommissionChangeRateUpdated.is`\n*   **summary**: A pool's commission `change_rate` has been changed.\n\n### PoolCommissionClaimed(`u32`, `u128`)[\u200b](#poolcommissionclaimedu32-u128 \"Direct link to poolcommissionclaimedu32-u128\")\n\n*   **interface**: `api.events.nominationPools.PoolCommissionClaimed.is`\n*   **summary**: Pool commission has been claimed.\n\n### PoolCommissionUpdated(`u32`, `Option<(Perbill,AccountId32)>`)[\u200b](#poolcommissionupdatedu32-optionperbillaccountid32 \"Direct link to poolcommissionupdatedu32-optionperbillaccountid32\")\n\n*   **interface**: `api.events.nominationPools.PoolCommissionUpdated.is`\n*   **summary**: A pool's commission setting has been changed.\n\n### PoolMaxCommissionUpdated(`u32`, `Perbill`)[\u200b](#poolmaxcommissionupdatedu32-perbill \"Direct link to poolmaxcommissionupdatedu32-perbill\")\n\n*   **interface**: `api.events.nominationPools.PoolMaxCommissionUpdated.is`\n*   **summary**: A pool's maximum commission setting has been changed.\n\n### PoolSlashed(`u32`, `u128`)[\u200b](#poolslashedu32-u128 \"Direct link to poolslashedu32-u128\")\n\n*   **interface**: `api.events.nominationPools.PoolSlashed.is`\n*   **summary**: The active balance of pool `pool_id` has been slashed to `balance`.\n\n### RolesUpdated(`Option<AccountId32>`, `Option<AccountId32>`, `Option<AccountId32>`)[\u200b](#rolesupdatedoptionaccountid32-optionaccountid32-optionaccountid32 \"Direct link to rolesupdatedoptionaccountid32-optionaccountid32-optionaccountid32\")\n\n*   **interface**: `api.events.nominationPools.RolesUpdated.is`\n*   **summary**: The roles of a pool have been updated to the given new roles. Note that the depositor can never change.\n\n### StateChanged(`u32`, `PalletNominationPoolsPoolState`)[\u200b](#statechangedu32-palletnominationpoolspoolstate \"Direct link to statechangedu32-palletnominationpoolspoolstate\")\n\n*   **interface**: `api.events.nominationPools.StateChanged.is`\n*   **summary**: The state of a pool has changed\n\n### Unbonded(`AccountId32`, `u32`, `u128`, `u128`, `u32`)[\u200b](#unbondedaccountid32-u32-u128-u128-u32 \"Direct link to unbondedaccountid32-u32-u128-u128-u32\")\n\n*   **interface**: `api.events.nominationPools.Unbonded.is`\n    \n*   **summary**: A member has unbonded from their pool.\n    \n    *   `balance` is the corresponding balance of the number of points that has been requested to be unbonded (the argument of the `unbond` transaction) from the bonded pool.\n        \n    *   `points` is the number of points that are issued as a result of `balance` being dissolved into the corresponding unbonding pool.\n        \n    *   `era` is the era in which the balance will be unbonded. In the absence of slashing, these values will match. In the presence of slashing, the number of points that are issued in the unbonding pool will be less than the amount requested to be unbonded.\n        \n\n### UnbondingPoolSlashed(`u32`, `u32`, `u128`)[\u200b](#unbondingpoolslashedu32-u32-u128 \"Direct link to unbondingpoolslashedu32-u32-u128\")\n\n*   **interface**: `api.events.nominationPools.UnbondingPoolSlashed.is`\n*   **summary**: The unbond pool at `era` of pool `pool_id` has been slashed to `balance`.\n\n### Withdrawn(`AccountId32`, `u32`, `u128`, `u128`)[\u200b](#withdrawnaccountid32-u32-u128-u128 \"Direct link to withdrawnaccountid32-u32-u128-u128\")\n\n*   **interface**: `api.events.nominationPools.Withdrawn.is`\n    \n*   **summary**: A member has withdrawn from their pool.\n    \n    The given number of `points` have been dissolved in return of `balance`.\n    \n    Similar to `Unbonded` event, in the absence of slashing, the ratio of point to balance will be 1.\n    \n\n* * *\n\noffences[\u200b](#offences \"Direct link to offences\")\n\n-------------------------------------------------\n\n### Offence(`[u8;16]`, `Bytes`)[\u200b](#offenceu816-bytes \"Direct link to offenceu816-bytes\")\n\n*   **interface**: `api.events.offences.Offence.is`\n*   **summary**: There is an offence reported of the given `kind` happened at the `session_index` and (kind-specific) time slot. This event is not deposited for duplicate slashes. \\[kind, timeslot\\].\n\n* * *\n\nparaInclusion[\u200b](#parainclusion \"Direct link to paraInclusion\")\n\n----------------------------------------------------------------\n\n### CandidateBacked(`PolkadotPrimitivesV5CandidateReceipt`, `Bytes`, `u32`, `u32`)[\u200b](#candidatebackedpolkadotprimitivesv5candidatereceipt-bytes-u32-u32 \"Direct link to candidatebackedpolkadotprimitivesv5candidatereceipt-bytes-u32-u32\")\n\n*   **interface**: `api.events.paraInclusion.CandidateBacked.is`\n*   **summary**: A candidate was backed. `[candidate, head_data]`\n\n### CandidateIncluded(`PolkadotPrimitivesV5CandidateReceipt`, `Bytes`, `u32`, `u32`)[\u200b](#candidateincludedpolkadotprimitivesv5candidatereceipt-bytes-u32-u32 \"Direct link to candidateincludedpolkadotprimitivesv5candidatereceipt-bytes-u32-u32\")\n\n*   **interface**: `api.events.paraInclusion.CandidateIncluded.is`\n*   **summary**: A candidate was included. `[candidate, head_data]`\n\n### CandidateTimedOut(`PolkadotPrimitivesV5CandidateReceipt`, `Bytes`, `u32`)[\u200b](#candidatetimedoutpolkadotprimitivesv5candidatereceipt-bytes-u32 \"Direct link to candidatetimedoutpolkadotprimitivesv5candidatereceipt-bytes-u32\")\n\n*   **interface**: `api.events.paraInclusion.CandidateTimedOut.is`\n*   **summary**: A candidate timed out. `[candidate, head_data]`\n\n### UpwardMessagesReceived(`u32`, `u32`)[\u200b](#upwardmessagesreceivedu32-u32 \"Direct link to upwardmessagesreceivedu32-u32\")\n\n*   **interface**: `api.events.paraInclusion.UpwardMessagesReceived.is`\n*   **summary**: Some upward messages have been received and will be processed.\n\n* * *\n\nparas[\u200b](#paras \"Direct link to paras\")\n\n----------------------------------------\n\n### ActionQueued(`u32`, `u32`)[\u200b](#actionqueuedu32-u32 \"Direct link to actionqueuedu32-u32\")\n\n*   **interface**: `api.events.paras.ActionQueued.is`\n*   **summary**: A para has been queued to execute pending actions. `para_id`\n\n### CodeUpgradeScheduled(`u32`)[\u200b](#codeupgradescheduledu32 \"Direct link to codeupgradescheduledu32\")\n\n*   **interface**: `api.events.paras.CodeUpgradeScheduled.is`\n*   **summary**: A code upgrade has been scheduled for a Para. `para_id`\n\n### CurrentCodeUpdated(`u32`)[\u200b](#currentcodeupdatedu32 \"Direct link to currentcodeupdatedu32\")\n\n*   **interface**: `api.events.paras.CurrentCodeUpdated.is`\n*   **summary**: Current code has been updated for a Para. `para_id`\n\n### CurrentHeadUpdated(`u32`)[\u200b](#currentheadupdatedu32 \"Direct link to currentheadupdatedu32\")\n\n*   **interface**: `api.events.paras.CurrentHeadUpdated.is`\n*   **summary**: Current head has been updated for a Para. `para_id`\n\n### NewHeadNoted(`u32`)[\u200b](#newheadnotedu32 \"Direct link to newheadnotedu32\")\n\n*   **interface**: `api.events.paras.NewHeadNoted.is`\n*   **summary**: A new head has been noted for a Para. `para_id`\n\n### PvfCheckAccepted(`H256`, `u32`)[\u200b](#pvfcheckacceptedh256-u32 \"Direct link to pvfcheckacceptedh256-u32\")\n\n*   **interface**: `api.events.paras.PvfCheckAccepted.is`\n*   **summary**: The given validation code was accepted by the PVF pre-checking vote. `code_hash` `para_id`\n\n### PvfCheckRejected(`H256`, `u32`)[\u200b](#pvfcheckrejectedh256-u32 \"Direct link to pvfcheckrejectedh256-u32\")\n\n*   **interface**: `api.events.paras.PvfCheckRejected.is`\n*   **summary**: The given validation code was rejected by the PVF pre-checking vote. `code_hash` `para_id`\n\n### PvfCheckStarted(`H256`, `u32`)[\u200b](#pvfcheckstartedh256-u32 \"Direct link to pvfcheckstartedh256-u32\")\n\n*   **interface**: `api.events.paras.PvfCheckStarted.is`\n*   **summary**: The given para either initiated or subscribed to a PVF check for the given validation code. `code_hash` `para_id`\n\n* * *\n\nparasDisputes[\u200b](#parasdisputes \"Direct link to parasDisputes\")\n\n----------------------------------------------------------------\n\n### DisputeConcluded(`H256`, `PolkadotRuntimeParachainsDisputesDisputeResult`)[\u200b](#disputeconcludedh256-polkadotruntimeparachainsdisputesdisputeresult \"Direct link to disputeconcludedh256-polkadotruntimeparachainsdisputesdisputeresult\")\n\n*   **interface**: `api.events.parasDisputes.DisputeConcluded.is`\n*   **summary**: A dispute has concluded for or against a candidate. `\\[para id, candidate hash, dispute result\\]`\n\n### DisputeInitiated(`H256`, `PolkadotRuntimeParachainsDisputesDisputeLocation`)[\u200b](#disputeinitiatedh256-polkadotruntimeparachainsdisputesdisputelocation \"Direct link to disputeinitiatedh256-polkadotruntimeparachainsdisputesdisputelocation\")\n\n*   **interface**: `api.events.parasDisputes.DisputeInitiated.is`\n*   **summary**: A dispute has been initiated. \\[candidate hash, dispute location\\]\n\n### Revert(`u32`)[\u200b](#revertu32 \"Direct link to revertu32\")\n\n*   **interface**: `api.events.parasDisputes.Revert.is`\n*   **summary**: A dispute has concluded with supermajority against a candidate. Block authors should no longer build on top of this head and should instead revert the block at the given height. This should be the number of the child of the last known valid block in the chain.\n\n* * *\n\npreimage[\u200b](#preimage \"Direct link to preimage\")\n\n-------------------------------------------------\n\n### Cleared(`H256`)[\u200b](#clearedh256 \"Direct link to clearedh256\")\n\n*   **interface**: `api.events.preimage.Cleared.is`\n*   **summary**: A preimage has ben cleared.\n\n### Noted(`H256`)[\u200b](#notedh256 \"Direct link to notedh256\")\n\n*   **interface**: `api.events.preimage.Noted.is`\n*   **summary**: A preimage has been noted.\n\n### Requested(`H256`)[\u200b](#requestedh256 \"Direct link to requestedh256\")\n\n*   **interface**: `api.events.preimage.Requested.is`\n*   **summary**: A preimage has been requested.\n\n* * *\n\nproxy[\u200b](#proxy \"Direct link to proxy\")\n\n----------------------------------------\n\n### Announced(`AccountId32`, `AccountId32`, `H256`)[\u200b](#announcedaccountid32-accountid32-h256 \"Direct link to announcedaccountid32-accountid32-h256\")\n\n*   **interface**: `api.events.proxy.Announced.is`\n*   **summary**: An announcement was placed to make a call in the future.\n\n### ProxyAdded(`AccountId32`, `AccountId32`, `KusamaRuntimeProxyType`, `u32`)[\u200b](#proxyaddedaccountid32-accountid32-kusamaruntimeproxytype-u32 \"Direct link to proxyaddedaccountid32-accountid32-kusamaruntimeproxytype-u32\")\n\n*   **interface**: `api.events.proxy.ProxyAdded.is`\n*   **summary**: A proxy was added.\n\n### ProxyExecuted(`Result<Null, SpRuntimeDispatchError>`)[\u200b](#proxyexecutedresultnull-spruntimedispatcherror \"Direct link to proxyexecutedresultnull-spruntimedispatcherror\")\n\n*   **interface**: `api.events.proxy.ProxyExecuted.is`\n*   **summary**: A proxy was executed correctly, with the given.\n\n### ProxyRemoved(`AccountId32`, `AccountId32`, `KusamaRuntimeProxyType`, `u32`)[\u200b](#proxyremovedaccountid32-accountid32-kusamaruntimeproxytype-u32 \"Direct link to proxyremovedaccountid32-accountid32-kusamaruntimeproxytype-u32\")\n\n*   **interface**: `api.events.proxy.ProxyRemoved.is`\n*   **summary**: A proxy was removed.\n\n### PureCreated(`AccountId32`, `AccountId32`, `KusamaRuntimeProxyType`, `u16`)[\u200b](#purecreatedaccountid32-accountid32-kusamaruntimeproxytype-u16 \"Direct link to purecreatedaccountid32-accountid32-kusamaruntimeproxytype-u16\")\n\n*   **interface**: `api.events.proxy.PureCreated.is`\n*   **summary**: A pure account has been created by new proxy with given disambiguation index and proxy type.\n\n* * *\n\nrecovery[\u200b](#recovery \"Direct link to recovery\")\n\n-------------------------------------------------\n\n### AccountRecovered(`AccountId32`, `AccountId32`)[\u200b](#accountrecoveredaccountid32-accountid32 \"Direct link to accountrecoveredaccountid32-accountid32\")\n\n*   **interface**: `api.events.recovery.AccountRecovered.is`\n*   **summary**: Lost account has been successfully recovered by rescuer account.\n\n### RecoveryClosed(`AccountId32`, `AccountId32`)[\u200b](#recoveryclosedaccountid32-accountid32 \"Direct link to recoveryclosedaccountid32-accountid32\")\n\n*   **interface**: `api.events.recovery.RecoveryClosed.is`\n*   **summary**: A recovery process for lost account by rescuer account has been closed.\n\n### RecoveryCreated(`AccountId32`)[\u200b](#recoverycreatedaccountid32 \"Direct link to recoverycreatedaccountid32\")\n\n*   **interface**: `api.events.recovery.RecoveryCreated.is`\n*   **summary**: A recovery process has been set up for an account.\n\n### RecoveryInitiated(`AccountId32`, `AccountId32`)[\u200b](#recoveryinitiatedaccountid32-accountid32 \"Direct link to recoveryinitiatedaccountid32-accountid32\")\n\n*   **interface**: `api.events.recovery.RecoveryInitiated.is`\n*   **summary**: A recovery process has been initiated for lost account by rescuer account.\n\n### RecoveryRemoved(`AccountId32`)[\u200b](#recoveryremovedaccountid32 \"Direct link to recoveryremovedaccountid32\")\n\n*   **interface**: `api.events.recovery.RecoveryRemoved.is`\n*   **summary**: A recovery process has been removed for an account.\n\n### RecoveryVouched(`AccountId32`, `AccountId32`, `AccountId32`)[\u200b](#recoveryvouchedaccountid32-accountid32-accountid32 \"Direct link to recoveryvouchedaccountid32-accountid32-accountid32\")\n\n*   **interface**: `api.events.recovery.RecoveryVouched.is`\n*   **summary**: A recovery process for lost account by rescuer account has been vouched for by sender.\n\n* * *\n\nreferenda[\u200b](#referenda \"Direct link to referenda\")\n\n----------------------------------------------------\n\n### Approved(`u32`)[\u200b](#approvedu32-1 \"Direct link to approvedu32-1\")\n\n*   **interface**: `api.events.referenda.Approved.is`\n*   **summary**: A referendum has been approved and its proposal has been scheduled.\n\n### Cancelled(`u32`, `PalletConvictionVotingTally`)[\u200b](#cancelledu32-palletconvictionvotingtally \"Direct link to cancelledu32-palletconvictionvotingtally\")\n\n*   **interface**: `api.events.referenda.Cancelled.is`\n*   **summary**: A referendum has been cancelled.\n\n### ConfirmAborted(`u32`)[\u200b](#confirmabortedu32-1 \"Direct link to confirmabortedu32-1\")\n\n*   **interface**: `api.events.referenda.ConfirmAborted.is`\n\n### Confirmed(`u32`, `PalletConvictionVotingTally`)[\u200b](#confirmedu32-palletconvictionvotingtally \"Direct link to confirmedu32-palletconvictionvotingtally\")\n\n*   **interface**: `api.events.referenda.Confirmed.is`\n*   **summary**: A referendum has ended its confirmation phase and is ready for approval.\n\n### ConfirmStarted(`u32`)[\u200b](#confirmstartedu32-1 \"Direct link to confirmstartedu32-1\")\n\n*   **interface**: `api.events.referenda.ConfirmStarted.is`\n\n### DecisionDepositPlaced(`u32`, `AccountId32`, `u128`)[\u200b](#decisiondepositplacedu32-accountid32-u128-1 \"Direct link to decisiondepositplacedu32-accountid32-u128-1\")\n\n*   **interface**: `api.events.referenda.DecisionDepositPlaced.is`\n*   **summary**: The decision deposit has been placed.\n\n### DecisionDepositRefunded(`u32`, `AccountId32`, `u128`)[\u200b](#decisiondepositrefundedu32-accountid32-u128-1 \"Direct link to decisiondepositrefundedu32-accountid32-u128-1\")\n\n*   **interface**: `api.events.referenda.DecisionDepositRefunded.is`\n*   **summary**: The decision deposit has been refunded.\n\n### DecisionStarted(`u32`, `u16`, `FrameSupportPreimagesBounded`, `PalletConvictionVotingTally`)[\u200b](#decisionstartedu32-u16-framesupportpreimagesbounded-palletconvictionvotingtally \"Direct link to decisionstartedu32-u16-framesupportpreimagesbounded-palletconvictionvotingtally\")\n\n*   **interface**: `api.events.referenda.DecisionStarted.is`\n*   **summary**: A referendum has moved into the deciding phase.\n\n### DepositSlashed(`AccountId32`, `u128`)[\u200b](#depositslashedaccountid32-u128-1 \"Direct link to depositslashedaccountid32-u128-1\")\n\n*   **interface**: `api.events.referenda.DepositSlashed.is`\n*   **summary**: A deposit has been slashaed.\n\n### Killed(`u32`, `PalletConvictionVotingTally`)[\u200b](#killedu32-palletconvictionvotingtally \"Direct link to killedu32-palletconvictionvotingtally\")\n\n*   **interface**: `api.events.referenda.Killed.is`\n*   **summary**: A referendum has been killed.\n\n### MetadataCleared(`u32`, `H256`)[\u200b](#metadataclearedu32-h256-1 \"Direct link to metadataclearedu32-h256-1\")\n\n*   **interface**: `api.events.referenda.MetadataCleared.is`\n*   **summary**: Metadata for a referendum has been cleared.\n\n### MetadataSet(`u32`, `H256`)[\u200b](#metadatasetu32-h256-1 \"Direct link to metadatasetu32-h256-1\")\n\n*   **interface**: `api.events.referenda.MetadataSet.is`\n*   **summary**: Metadata for a referendum has been set.\n\n### Rejected(`u32`, `PalletConvictionVotingTally`)[\u200b](#rejectedu32-palletconvictionvotingtally \"Direct link to rejectedu32-palletconvictionvotingtally\")\n\n*   **interface**: `api.events.referenda.Rejected.is`\n*   **summary**: A proposal has been rejected by referendum.\n\n### SubmissionDepositRefunded(`u32`, `AccountId32`, `u128`)[\u200b](#submissiondepositrefundedu32-accountid32-u128-1 \"Direct link to submissiondepositrefundedu32-accountid32-u128-1\")\n\n*   **interface**: `api.events.referenda.SubmissionDepositRefunded.is`\n*   **summary**: The submission deposit has been refunded.\n\n### Submitted(`u32`, `u16`, `FrameSupportPreimagesBounded`)[\u200b](#submittedu32-u16-framesupportpreimagesbounded-1 \"Direct link to submittedu32-u16-framesupportpreimagesbounded-1\")\n\n*   **interface**: `api.events.referenda.Submitted.is`\n*   **summary**: A referendum has been submitted.\n\n### TimedOut(`u32`, `PalletConvictionVotingTally`)[\u200b](#timedoutu32-palletconvictionvotingtally \"Direct link to timedoutu32-palletconvictionvotingtally\")\n\n*   **interface**: `api.events.referenda.TimedOut.is`\n*   **summary**: A referendum has been timed out without being decided.\n\n* * *\n\nregistrar[\u200b](#registrar \"Direct link to registrar\")\n\n----------------------------------------------------\n\n### Deregistered(`u32`)[\u200b](#deregisteredu32 \"Direct link to deregisteredu32\")\n\n*   **interface**: `api.events.registrar.Deregistered.is`\n\n### Registered(`u32`, `AccountId32`)[\u200b](#registeredu32-accountid32 \"Direct link to registeredu32-accountid32\")\n\n*   **interface**: `api.events.registrar.Registered.is`\n\n### Reserved(`u32`, `AccountId32`)[\u200b](#reservedu32-accountid32 \"Direct link to reservedu32-accountid32\")\n\n*   **interface**: `api.events.registrar.Reserved.is`\n\n### Swapped(`u32`, `u32`)[\u200b](#swappedu32-u32 \"Direct link to swappedu32-u32\")\n\n*   **interface**: `api.events.registrar.Swapped.is`\n\n* * *\n\nscheduler[\u200b](#scheduler \"Direct link to scheduler\")\n\n----------------------------------------------------\n\n### CallUnavailable(`(u32,u32)`, `Option<[u8;32]>`)[\u200b](#callunavailableu32u32-optionu832 \"Direct link to callunavailableu32u32-optionu832\")\n\n*   **interface**: `api.events.scheduler.CallUnavailable.is`\n*   **summary**: The call for the provided hash was not found so the task has been aborted.\n\n### Canceled(`u32`, `u32`)[\u200b](#canceledu32-u32-1 \"Direct link to canceledu32-u32-1\")\n\n*   **interface**: `api.events.scheduler.Canceled.is`\n*   **summary**: Canceled some task.\n\n### Dispatched(`(u32,u32)`, `Option<[u8;32]>`, `Result<Null, SpRuntimeDispatchError>`)[\u200b](#dispatchedu32u32-optionu832-resultnull-spruntimedispatcherror \"Direct link to dispatchedu32u32-optionu832-resultnull-spruntimedispatcherror\")\n\n*   **interface**: `api.events.scheduler.Dispatched.is`\n*   **summary**: Dispatched some task.\n\n### PeriodicFailed(`(u32,u32)`, `Option<[u8;32]>`)[\u200b](#periodicfailedu32u32-optionu832 \"Direct link to periodicfailedu32u32-optionu832\")\n\n*   **interface**: `api.events.scheduler.PeriodicFailed.is`\n*   **summary**: The given task was unable to be renewed since the agenda is full at that block.\n\n### PermanentlyOverweight(`(u32,u32)`, `Option<[u8;32]>`)[\u200b](#permanentlyoverweightu32u32-optionu832 \"Direct link to permanentlyoverweightu32u32-optionu832\")\n\n*   **interface**: `api.events.scheduler.PermanentlyOverweight.is`\n*   **summary**: The given task can never be executed since it is overweight.\n\n### Scheduled(`u32`, `u32`)[\u200b](#scheduledu32-u32 \"Direct link to scheduledu32-u32\")\n\n*   **interface**: `api.events.scheduler.Scheduled.is`\n*   **summary**: Scheduled some task.\n\n* * *\n\nsession[\u200b](#session \"Direct link to session\")\n\n----------------------------------------------\n\n### NewSession(`u32`)[\u200b](#newsessionu32 \"Direct link to newsessionu32\")\n\n*   **interface**: `api.events.session.NewSession.is`\n*   **summary**: New session has happened. Note that the argument is the session index, not the block number as the type might suggest.\n\n* * *\n\nslots[\u200b](#slots \"Direct link to slots\")\n\n----------------------------------------\n\n### Leased(`u32`, `AccountId32`, `u32`, `u32`, `u128`, `u128`)[\u200b](#leasedu32-accountid32-u32-u32-u128-u128 \"Direct link to leasedu32-accountid32-u32-u32-u128-u128\")\n\n*   **interface**: `api.events.slots.Leased.is`\n*   **summary**: A para has won the right to a continuous set of lease periods as a parachain. First balance is any extra amount reserved on top of the para's existing deposit. Second balance is the total amount reserved.\n\n### NewLeasePeriod(`u32`)[\u200b](#newleaseperiodu32 \"Direct link to newleaseperiodu32\")\n\n*   **interface**: `api.events.slots.NewLeasePeriod.is`\n*   **summary**: A new `[lease_period]` is beginning.\n\n* * *\n\nsociety[\u200b](#society \"Direct link to society\")\n\n----------------------------------------------\n\n### AutoUnbid(`AccountId32`)[\u200b](#autounbidaccountid32 \"Direct link to autounbidaccountid32\")\n\n*   **interface**: `api.events.society.AutoUnbid.is`\n*   **summary**: A candidate was dropped (due to an excess of bids in the system).\n\n### Bid(`AccountId32`, `u128`)[\u200b](#bidaccountid32-u128 \"Direct link to bidaccountid32-u128\")\n\n*   **interface**: `api.events.society.Bid.is`\n*   **summary**: A membership bid just happened. The given account is the candidate's ID and their offer is the second.\n\n### CandidateSuspended(`AccountId32`)[\u200b](#candidatesuspendedaccountid32 \"Direct link to candidatesuspendedaccountid32\")\n\n*   **interface**: `api.events.society.CandidateSuspended.is`\n*   **summary**: A candidate has been suspended\n\n### Challenged(`AccountId32`)[\u200b](#challengedaccountid32 \"Direct link to challengedaccountid32\")\n\n*   **interface**: `api.events.society.Challenged.is`\n*   **summary**: A member has been challenged\n\n### DefenderVote(`AccountId32`, `bool`)[\u200b](#defendervoteaccountid32-bool \"Direct link to defendervoteaccountid32-bool\")\n\n*   **interface**: `api.events.society.DefenderVote.is`\n*   **summary**: A vote has been placed for a defending member\n\n### Deposit(`u128`)[\u200b](#depositu128 \"Direct link to depositu128\")\n\n*   **interface**: `api.events.society.Deposit.is`\n*   **summary**: Some funds were deposited into the society account.\n\n### Elevated(`AccountId32`, `u32`)[\u200b](#elevatedaccountid32-u32 \"Direct link to elevatedaccountid32-u32\")\n\n*   **interface**: `api.events.society.Elevated.is`\n*   **summary**: A \\[member\\] got elevated to \\[rank\\].\n\n### Founded(`AccountId32`)[\u200b](#foundedaccountid32 \"Direct link to foundedaccountid32\")\n\n*   **interface**: `api.events.society.Founded.is`\n*   **summary**: The society is founded by the given identity.\n\n### Inducted(`AccountId32`, `Vec<AccountId32>`)[\u200b](#inductedaccountid32-vecaccountid32 \"Direct link to inductedaccountid32-vecaccountid32\")\n\n*   **interface**: `api.events.society.Inducted.is`\n*   **summary**: A group of candidates have been inducted. The batch's primary is the first value, the batch in full is the second.\n\n### MemberSuspended(`AccountId32`)[\u200b](#membersuspendedaccountid32 \"Direct link to membersuspendedaccountid32\")\n\n*   **interface**: `api.events.society.MemberSuspended.is`\n*   **summary**: A member has been suspended\n\n### NewParams(`PalletSocietyGroupParams`)[\u200b](#newparamspalletsocietygroupparams \"Direct link to newparamspalletsocietygroupparams\")\n\n*   **interface**: `api.events.society.NewParams.is`\n*   **summary**: A new set of \\[params\\] has been set for the group.\n\n### SuspendedMemberJudgement(`AccountId32`, `bool`)[\u200b](#suspendedmemberjudgementaccountid32-bool \"Direct link to suspendedmemberjudgementaccountid32-bool\")\n\n*   **interface**: `api.events.society.SuspendedMemberJudgement.is`\n*   **summary**: A suspended member has been judged.\n\n### Unbid(`AccountId32`)[\u200b](#unbidaccountid32 \"Direct link to unbidaccountid32\")\n\n*   **interface**: `api.events.society.Unbid.is`\n*   **summary**: A candidate was dropped (by their request).\n\n### Unfounded(`AccountId32`)[\u200b](#unfoundedaccountid32 \"Direct link to unfoundedaccountid32\")\n\n*   **interface**: `api.events.society.Unfounded.is`\n*   **summary**: Society is unfounded.\n\n### Unvouch(`AccountId32`)[\u200b](#unvouchaccountid32 \"Direct link to unvouchaccountid32\")\n\n*   **interface**: `api.events.society.Unvouch.is`\n*   **summary**: A candidate was dropped (by request of who vouched for them).\n\n### Vote(`AccountId32`, `AccountId32`, `bool`)[\u200b](#voteaccountid32-accountid32-bool \"Direct link to voteaccountid32-accountid32-bool\")\n\n*   **interface**: `api.events.society.Vote.is`\n*   **summary**: A vote has been placed\n\n### Vouch(`AccountId32`, `u128`, `AccountId32`)[\u200b](#vouchaccountid32-u128-accountid32 \"Direct link to vouchaccountid32-u128-accountid32\")\n\n*   **interface**: `api.events.society.Vouch.is`\n*   **summary**: A membership bid just happened by vouching. The given account is the candidate's ID and their offer is the second. The vouching party is the third.\n\n* * *\n\nstaking[\u200b](#staking \"Direct link to staking\")\n\n----------------------------------------------\n\n### Bonded(`AccountId32`, `u128`)[\u200b](#bondedaccountid32-u128 \"Direct link to bondedaccountid32-u128\")\n\n*   **interface**: `api.events.staking.Bonded.is`\n    \n*   **summary**: An account has bonded this amount. \\[stash, amount\\]\n    \n    NOTE: This event is only emitted when funds are bonded via a dispatchable. Notably, it will not be emitted for staking rewards when they are added to stake.\n    \n\n### Chilled(`AccountId32`)[\u200b](#chilledaccountid32 \"Direct link to chilledaccountid32\")\n\n*   **interface**: `api.events.staking.Chilled.is`\n*   **summary**: An account has stopped participating as either a validator or nominator.\n\n### EraPaid(`u32`, `u128`, `u128`)[\u200b](#erapaidu32-u128-u128 \"Direct link to erapaidu32-u128-u128\")\n\n*   **interface**: `api.events.staking.EraPaid.is`\n*   **summary**: The era payout has been set; the first balance is the validator-payout; the second is the remainder from the maximum amount of reward.\n\n### ForceEra(`PalletStakingForcing`)[\u200b](#forceerapalletstakingforcing \"Direct link to forceerapalletstakingforcing\")\n\n*   **interface**: `api.events.staking.ForceEra.is`\n*   **summary**: A new force era mode was set.\n\n### Kicked(`AccountId32`, `AccountId32`)[\u200b](#kickedaccountid32-accountid32 \"Direct link to kickedaccountid32-accountid32\")\n\n*   **interface**: `api.events.staking.Kicked.is`\n*   **summary**: A nominator has been kicked from a validator.\n\n### OldSlashingReportDiscarded(`u32`)[\u200b](#oldslashingreportdiscardedu32 \"Direct link to oldslashingreportdiscardedu32\")\n\n*   **interface**: `api.events.staking.OldSlashingReportDiscarded.is`\n*   **summary**: An old slashing report from a prior era was discarded because it could not be processed.\n\n### PayoutStarted(`u32`, `AccountId32`)[\u200b](#payoutstartedu32-accountid32 \"Direct link to payoutstartedu32-accountid32\")\n\n*   **interface**: `api.events.staking.PayoutStarted.is`\n*   **summary**: The stakers' rewards are getting paid.\n\n### Rewarded(`AccountId32`, `u128`)[\u200b](#rewardedaccountid32-u128-1 \"Direct link to rewardedaccountid32-u128-1\")\n\n*   **interface**: `api.events.staking.Rewarded.is`\n*   **summary**: The nominator has been rewarded by this amount.\n\n### Slashed(`AccountId32`, `u128`)[\u200b](#slashedaccountid32-u128-4 \"Direct link to slashedaccountid32-u128-4\")\n\n*   **interface**: `api.events.staking.Slashed.is`\n*   **summary**: A staker (validator or nominator) has been slashed by the given amount.\n\n### SlashReported(`AccountId32`, `Perbill`, `u32`)[\u200b](#slashreportedaccountid32-perbill-u32 \"Direct link to slashreportedaccountid32-perbill-u32\")\n\n*   **interface**: `api.events.staking.SlashReported.is`\n*   **summary**: A slash for the given validator, for the given percentage of their stake, at the given era as been reported.\n\n### SnapshotTargetsSizeExceeded(`u32`)[\u200b](#snapshottargetssizeexceededu32 \"Direct link to snapshottargetssizeexceededu32\")\n\n*   **interface**: `api.events.staking.SnapshotTargetsSizeExceeded.is`\n*   **summary**: Targets size limit reached.\n\n### SnapshotVotersSizeExceeded(`u32`)[\u200b](#snapshotvoterssizeexceededu32 \"Direct link to snapshotvoterssizeexceededu32\")\n\n*   **interface**: `api.events.staking.SnapshotVotersSizeExceeded.is`\n*   **summary**: Voters size limit reached.\n\n### StakersElected()[\u200b](#stakerselected \"Direct link to StakersElected()\")\n\n*   **interface**: `api.events.staking.StakersElected.is`\n*   **summary**: A new set of stakers was elected.\n\n### StakingElectionFailed()[\u200b](#stakingelectionfailed \"Direct link to StakingElectionFailed()\")\n\n*   **interface**: `api.events.staking.StakingElectionFailed.is`\n*   **summary**: The election failed. No new era is planned.\n\n### Unbonded(`AccountId32`, `u128`)[\u200b](#unbondedaccountid32-u128 \"Direct link to unbondedaccountid32-u128\")\n\n*   **interface**: `api.events.staking.Unbonded.is`\n*   **summary**: An account has unbonded this amount.\n\n### ValidatorPrefsSet(`AccountId32`, `PalletStakingValidatorPrefs`)[\u200b](#validatorprefssetaccountid32-palletstakingvalidatorprefs \"Direct link to validatorprefssetaccountid32-palletstakingvalidatorprefs\")\n\n*   **interface**: `api.events.staking.ValidatorPrefsSet.is`\n*   **summary**: A validator has set their preferences.\n\n### Withdrawn(`AccountId32`, `u128`)[\u200b](#withdrawnaccountid32-u128 \"Direct link to withdrawnaccountid32-u128\")\n\n*   **interface**: `api.events.staking.Withdrawn.is`\n*   **summary**: An account has called `withdraw_unbonded` and removed unbonding chunks worth `Balance` from the unlocking queue.\n\n* * *\n\nstateTrieMigration[\u200b](#statetriemigration \"Direct link to stateTrieMigration\")\n\n-------------------------------------------------------------------------------\n\n### AutoMigrationFinished()[\u200b](#automigrationfinished \"Direct link to AutoMigrationFinished()\")\n\n*   **interface**: `api.events.stateTrieMigration.AutoMigrationFinished.is`\n*   **summary**: The auto migration task finished.\n\n### Halted(`PalletStateTrieMigrationError`)[\u200b](#haltedpalletstatetriemigrationerror \"Direct link to haltedpalletstatetriemigrationerror\")\n\n*   **interface**: `api.events.stateTrieMigration.Halted.is`\n*   **summary**: Migration got halted due to an error or miss-configuration.\n\n### Migrated(`u32`, `u32`, `PalletStateTrieMigrationMigrationCompute`)[\u200b](#migratedu32-u32-palletstatetriemigrationmigrationcompute \"Direct link to migratedu32-u32-palletstatetriemigrationmigrationcompute\")\n\n*   **interface**: `api.events.stateTrieMigration.Migrated.is`\n*   **summary**: Given number of `(top, child)` keys were migrated respectively, with the given `compute`.\n\n### Slashed(`AccountId32`, `u128`)[\u200b](#slashedaccountid32-u128-5 \"Direct link to slashedaccountid32-u128-5\")\n\n*   **interface**: `api.events.stateTrieMigration.Slashed.is`\n*   **summary**: Some account got slashed by the given amount.\n\n* * *\n\nsystem[\u200b](#system \"Direct link to system\")\n\n-------------------------------------------\n\n### CodeUpdated()[\u200b](#codeupdated \"Direct link to CodeUpdated()\")\n\n*   **interface**: `api.events.system.CodeUpdated.is`\n*   **summary**: `:code` was updated.\n\n### ExtrinsicFailed(`SpRuntimeDispatchError`, `FrameSupportDispatchDispatchInfo`)[\u200b](#extrinsicfailedspruntimedispatcherror-framesupportdispatchdispatchinfo \"Direct link to extrinsicfailedspruntimedispatcherror-framesupportdispatchdispatchinfo\")\n\n*   **interface**: `api.events.system.ExtrinsicFailed.is`\n*   **summary**: An extrinsic failed.\n\n### ExtrinsicSuccess(`FrameSupportDispatchDispatchInfo`)[\u200b](#extrinsicsuccessframesupportdispatchdispatchinfo \"Direct link to extrinsicsuccessframesupportdispatchdispatchinfo\")\n\n*   **interface**: `api.events.system.ExtrinsicSuccess.is`\n*   **summary**: An extrinsic completed successfully.\n\n### KilledAccount(`AccountId32`)[\u200b](#killedaccountaccountid32 \"Direct link to killedaccountaccountid32\")\n\n*   **interface**: `api.events.system.KilledAccount.is`\n*   **summary**: An account was reaped.\n\n### NewAccount(`AccountId32`)[\u200b](#newaccountaccountid32 \"Direct link to newaccountaccountid32\")\n\n*   **interface**: `api.events.system.NewAccount.is`\n*   **summary**: A new account was created.\n\n### Remarked(`AccountId32`, `H256`)[\u200b](#remarkedaccountid32-h256 \"Direct link to remarkedaccountid32-h256\")\n\n*   **interface**: `api.events.system.Remarked.is`\n*   **summary**: On on-chain remark happened.\n\n* * *\n\ntransactionPayment[\u200b](#transactionpayment \"Direct link to transactionPayment\")\n\n-------------------------------------------------------------------------------\n\n### TransactionFeePaid(`AccountId32`, `u128`, `u128`)[\u200b](#transactionfeepaidaccountid32-u128-u128 \"Direct link to transactionfeepaidaccountid32-u128-u128\")\n\n*   **interface**: `api.events.transactionPayment.TransactionFeePaid.is`\n*   **summary**: A transaction fee `actual_fee`, of which `tip` was added to the minimum inclusion fee, has been paid by `who`.\n\n* * *\n\ntreasury[\u200b](#treasury \"Direct link to treasury\")\n\n-------------------------------------------------\n\n### Awarded(`u32`, `u128`, `AccountId32`)[\u200b](#awardedu32-u128-accountid32 \"Direct link to awardedu32-u128-accountid32\")\n\n*   **interface**: `api.events.treasury.Awarded.is`\n*   **summary**: Some funds have been allocated.\n\n### Burnt(`u128`)[\u200b](#burntu128 \"Direct link to burntu128\")\n\n*   **interface**: `api.events.treasury.Burnt.is`\n*   **summary**: Some of our funds have been burnt.\n\n### Deposit(`u128`)[\u200b](#depositu128-1 \"Direct link to depositu128-1\")\n\n*   **interface**: `api.events.treasury.Deposit.is`\n*   **summary**: Some funds have been deposited.\n\n### Proposed(`u32`)[\u200b](#proposedu32 \"Direct link to proposedu32\")\n\n*   **interface**: `api.events.treasury.Proposed.is`\n*   **summary**: New proposal.\n\n### Rejected(`u32`, `u128`)[\u200b](#rejectedu32-u128 \"Direct link to rejectedu32-u128\")\n\n*   **interface**: `api.events.treasury.Rejected.is`\n*   **summary**: A proposal was rejected; funds were slashed.\n\n### Rollover(`u128`)[\u200b](#rolloveru128 \"Direct link to rolloveru128\")\n\n*   **interface**: `api.events.treasury.Rollover.is`\n*   **summary**: Spending has finished; this is the amount that rolls over until next spend.\n\n### SpendApproved(`u32`, `u128`, `AccountId32`)[\u200b](#spendapprovedu32-u128-accountid32 \"Direct link to spendapprovedu32-u128-accountid32\")\n\n*   **interface**: `api.events.treasury.SpendApproved.is`\n*   **summary**: A new spend proposal has been approved.\n\n### Spending(`u128`)[\u200b](#spendingu128 \"Direct link to spendingu128\")\n\n*   **interface**: `api.events.treasury.Spending.is`\n*   **summary**: We have ended a spend period and will now allocate funds.\n\n### UpdatedInactive(`u128`, `u128`)[\u200b](#updatedinactiveu128-u128 \"Direct link to updatedinactiveu128-u128\")\n\n*   **interface**: `api.events.treasury.UpdatedInactive.is`\n*   **summary**: The inactive funds of the pallet have been updated.\n\n* * *\n\nutility[\u200b](#utility \"Direct link to utility\")\n\n----------------------------------------------\n\n### BatchCompleted()[\u200b](#batchcompleted \"Direct link to BatchCompleted()\")\n\n*   **interface**: `api.events.utility.BatchCompleted.is`\n*   **summary**: Batch of dispatches completed fully with no error.\n\n### BatchCompletedWithErrors()[\u200b](#batchcompletedwitherrors \"Direct link to BatchCompletedWithErrors()\")\n\n*   **interface**: `api.events.utility.BatchCompletedWithErrors.is`\n*   **summary**: Batch of dispatches completed but has errors.\n\n### BatchInterrupted(`u32`, `SpRuntimeDispatchError`)[\u200b](#batchinterruptedu32-spruntimedispatcherror \"Direct link to batchinterruptedu32-spruntimedispatcherror\")\n\n*   **interface**: `api.events.utility.BatchInterrupted.is`\n*   **summary**: Batch of dispatches did not complete fully. Index of first failing dispatch given, as well as the error.\n\n### DispatchedAs(`Result<Null, SpRuntimeDispatchError>`)[\u200b](#dispatchedasresultnull-spruntimedispatcherror \"Direct link to dispatchedasresultnull-spruntimedispatcherror\")\n\n*   **interface**: `api.events.utility.DispatchedAs.is`\n*   **summary**: A call was dispatched.\n\n### ItemCompleted()[\u200b](#itemcompleted \"Direct link to ItemCompleted()\")\n\n*   **interface**: `api.events.utility.ItemCompleted.is`\n*   **summary**: A single item within a Batch of dispatches has completed with no error.\n\n### ItemFailed(`SpRuntimeDispatchError`)[\u200b](#itemfailedspruntimedispatcherror \"Direct link to itemfailedspruntimedispatcherror\")\n\n*   **interface**: `api.events.utility.ItemFailed.is`\n*   **summary**: A single item within a Batch of dispatches has completed with error.\n\n* * *\n\nvesting[\u200b](#vesting \"Direct link to vesting\")\n\n----------------------------------------------\n\n### VestingCompleted(`AccountId32`)[\u200b](#vestingcompletedaccountid32 \"Direct link to vestingcompletedaccountid32\")\n\n*   **interface**: `api.events.vesting.VestingCompleted.is`\n*   **summary**: An \\[account\\] has become fully vested.\n\n### VestingUpdated(`AccountId32`, `u128`)[\u200b](#vestingupdatedaccountid32-u128 \"Direct link to vestingupdatedaccountid32-u128\")\n\n*   **interface**: `api.events.vesting.VestingUpdated.is`\n*   **summary**: The amount vested has been updated. This could indicate a change in funds available. The balance given is the amount which is left unvested (and thus locked).\n\n* * *\n\nvoterList[\u200b](#voterlist \"Direct link to voterList\")\n\n----------------------------------------------------\n\n### Rebagged(`AccountId32`, `u64`, `u64`)[\u200b](#rebaggedaccountid32-u64-u64 \"Direct link to rebaggedaccountid32-u64-u64\")\n\n*   **interface**: `api.events.voterList.Rebagged.is`\n*   **summary**: Moved an account from one bag to another.\n\n### ScoreUpdated(`AccountId32`, `u64`)[\u200b](#scoreupdatedaccountid32-u64 \"Direct link to scoreupdatedaccountid32-u64\")\n\n*   **interface**: `api.events.voterList.ScoreUpdated.is`\n*   **summary**: Updated the score of some account to the given amount.\n\n* * *\n\nwhitelist[\u200b](#whitelist \"Direct link to whitelist\")\n\n----------------------------------------------------\n\n### CallWhitelisted(`H256`)[\u200b](#callwhitelistedh256 \"Direct link to callwhitelistedh256\")\n\n*   **interface**: `api.events.whitelist.CallWhitelisted.is`\n\n### WhitelistedCallDispatched(`H256`, `Result<FrameSupportDispatchPostDispatchInfo, SpRuntimeDispatchErrorWithPostInfo>`)[\u200b](#whitelistedcalldispatchedh256-resultframesupportdispatchpostdispatchinfo-spruntimedispatcherrorwithpostinfo \"Direct link to whitelistedcalldispatchedh256-resultframesupportdispatchpostdispatchinfo-spruntimedispatcherrorwithpostinfo\")\n\n*   **interface**: `api.events.whitelist.WhitelistedCallDispatched.is`\n\n### WhitelistedCallRemoved(`H256`)[\u200b](#whitelistedcallremovedh256 \"Direct link to whitelistedcallremovedh256\")\n\n*   **interface**: `api.events.whitelist.WhitelistedCallRemoved.is`\n\n* * *\n\nxcmPallet[\u200b](#xcmpallet \"Direct link to xcmPallet\")\n\n----------------------------------------------------\n\n### AssetsClaimed(`H256`, `XcmV3MultiLocation`, `XcmVersionedMultiAssets`)[\u200b](#assetsclaimedh256-xcmv3multilocation-xcmversionedmultiassets \"Direct link to assetsclaimedh256-xcmv3multilocation-xcmversionedmultiassets\")\n\n*   **interface**: `api.events.xcmPallet.AssetsClaimed.is`\n*   **summary**: Some assets have been claimed from an asset trap\n\n### AssetsTrapped(`H256`, `XcmV3MultiLocation`, `XcmVersionedMultiAssets`)[\u200b](#assetstrappedh256-xcmv3multilocation-xcmversionedmultiassets \"Direct link to assetstrappedh256-xcmv3multilocation-xcmversionedmultiassets\")\n\n*   **interface**: `api.events.xcmPallet.AssetsTrapped.is`\n*   **summary**: Some assets have been placed in an asset trap.\n\n### Attempted(`XcmV3TraitsOutcome`)[\u200b](#attemptedxcmv3traitsoutcome \"Direct link to attemptedxcmv3traitsoutcome\")\n\n*   **interface**: `api.events.xcmPallet.Attempted.is`\n*   **summary**: Execution of an XCM message was attempted.\n\n### FeesPaid(`XcmV3MultiLocation`, `XcmV3MultiassetMultiAssets`)[\u200b](#feespaidxcmv3multilocation-xcmv3multiassetmultiassets \"Direct link to feespaidxcmv3multilocation-xcmv3multiassetmultiassets\")\n\n*   **interface**: `api.events.xcmPallet.FeesPaid.is`\n*   **summary**: Fees were paid from a location for an operation (often for using `SendXcm`).\n\n### InvalidQuerier(`XcmV3MultiLocation`, `u64`, `XcmV3MultiLocation`, `Option<XcmV3MultiLocation>`)[\u200b](#invalidquerierxcmv3multilocation-u64-xcmv3multilocation-optionxcmv3multilocation \"Direct link to invalidquerierxcmv3multilocation-u64-xcmv3multilocation-optionxcmv3multilocation\")\n\n*   **interface**: `api.events.xcmPallet.InvalidQuerier.is`\n*   **summary**: Expected query response has been received but the querier location of the response does not match the expected. The query remains registered for a later, valid, response to be received and acted upon.\n\n### InvalidQuerierVersion(`XcmV3MultiLocation`, `u64`)[\u200b](#invalidquerierversionxcmv3multilocation-u64 \"Direct link to invalidquerierversionxcmv3multilocation-u64\")\n\n*   **interface**: `api.events.xcmPallet.InvalidQuerierVersion.is`\n    \n*   **summary**: Expected query response has been received but the expected querier location placed in storage by this runtime previously cannot be decoded. The query remains registered.\n    \n    This is unexpected (since a location placed in storage in a previously executing runtime should be readable prior to query timeout) and dangerous since the possibly valid response will be dropped. Manual governance intervention is probably going to be needed.\n    \n\n### InvalidResponder(`XcmV3MultiLocation`, `u64`, `Option<XcmV3MultiLocation>`)[\u200b](#invalidresponderxcmv3multilocation-u64-optionxcmv3multilocation \"Direct link to invalidresponderxcmv3multilocation-u64-optionxcmv3multilocation\")\n\n*   **interface**: `api.events.xcmPallet.InvalidResponder.is`\n*   **summary**: Expected query response has been received but the origin location of the response does not match that expected. The query remains registered for a later, valid, response to be received and acted upon.\n\n### InvalidResponderVersion(`XcmV3MultiLocation`, `u64`)[\u200b](#invalidresponderversionxcmv3multilocation-u64 \"Direct link to invalidresponderversionxcmv3multilocation-u64\")\n\n*   **interface**: `api.events.xcmPallet.InvalidResponderVersion.is`\n    \n*   **summary**: Expected query response has been received but the expected origin location placed in storage by this runtime previously cannot be decoded. The query remains registered.\n    \n    This is unexpected (since a location placed in storage in a previously executing runtime should be readable prior to query timeout) and dangerous since the possibly valid response will be dropped. Manual governance intervention is probably going to be needed.\n    \n\n### Notified(`u64`, `u8`, `u8`)[\u200b](#notifiedu64-u8-u8 \"Direct link to notifiedu64-u8-u8\")\n\n*   **interface**: `api.events.xcmPallet.Notified.is`\n*   **summary**: Query response has been received and query is removed. The registered notification has been dispatched and executed successfully.\n\n### NotifyDecodeFailed(`u64`, `u8`, `u8`)[\u200b](#notifydecodefailedu64-u8-u8 \"Direct link to notifydecodefailedu64-u8-u8\")\n\n*   **interface**: `api.events.xcmPallet.NotifyDecodeFailed.is`\n*   **summary**: Query response has been received and query is removed. The dispatch was unable to be decoded into a `Call`; this might be due to dispatch function having a signature which is not `(origin, QueryId, Response)`.\n\n### NotifyDispatchError(`u64`, `u8`, `u8`)[\u200b](#notifydispatcherroru64-u8-u8 \"Direct link to notifydispatcherroru64-u8-u8\")\n\n*   **interface**: `api.events.xcmPallet.NotifyDispatchError.is`\n*   **summary**: Query response has been received and query is removed. There was a general error with dispatching the notification call.\n\n### NotifyOverweight(`u64`, `u8`, `u8`, `SpWeightsWeightV2Weight`, `SpWeightsWeightV2Weight`)[\u200b](#notifyoverweightu64-u8-u8-spweightsweightv2weight-spweightsweightv2weight \"Direct link to notifyoverweightu64-u8-u8-spweightsweightv2weight-spweightsweightv2weight\")\n\n*   **interface**: `api.events.xcmPallet.NotifyOverweight.is`\n*   **summary**: Query response has been received and query is removed. The registered notification could not be dispatched because the dispatch weight is greater than the maximum weight originally budgeted by this runtime for the query result.\n\n### NotifyTargetMigrationFail(`XcmVersionedMultiLocation`, `u64`)[\u200b](#notifytargetmigrationfailxcmversionedmultilocation-u64 \"Direct link to notifytargetmigrationfailxcmversionedmultilocation-u64\")\n\n*   **interface**: `api.events.xcmPallet.NotifyTargetMigrationFail.is`\n*   **summary**: A given location which had a version change subscription was dropped owing to an error migrating the location to our new XCM format.\n\n### NotifyTargetSendFail(`XcmV3MultiLocation`, `u64`, `XcmV3TraitsError`)[\u200b](#notifytargetsendfailxcmv3multilocation-u64-xcmv3traitserror \"Direct link to notifytargetsendfailxcmv3multilocation-u64-xcmv3traitserror\")\n\n*   **interface**: `api.events.xcmPallet.NotifyTargetSendFail.is`\n*   **summary**: A given location which had a version change subscription was dropped owing to an error sending the notification to it.\n\n### ResponseReady(`u64`, `XcmV3Response`)[\u200b](#responsereadyu64-xcmv3response \"Direct link to responsereadyu64-xcmv3response\")\n\n*   **interface**: `api.events.xcmPallet.ResponseReady.is`\n*   **summary**: Query response has been received and is ready for taking with `take_response`. There is no registered notification call.\n\n### ResponseTaken(`u64`)[\u200b](#responsetakenu64 \"Direct link to responsetakenu64\")\n\n*   **interface**: `api.events.xcmPallet.ResponseTaken.is`\n*   **summary**: Received query response has been read and removed.\n\n### Sent(`XcmV3MultiLocation`, `XcmV3MultiLocation`, `XcmV3Xcm`, `[u8;32]`)[\u200b](#sentxcmv3multilocation-xcmv3multilocation-xcmv3xcm-u832 \"Direct link to sentxcmv3multilocation-xcmv3multilocation-xcmv3xcm-u832\")\n\n*   **interface**: `api.events.xcmPallet.Sent.is`\n*   **summary**: A XCM message was sent.\n\n### SupportedVersionChanged(`XcmV3MultiLocation`, `u32`)[\u200b](#supportedversionchangedxcmv3multilocation-u32 \"Direct link to supportedversionchangedxcmv3multilocation-u32\")\n\n*   **interface**: `api.events.xcmPallet.SupportedVersionChanged.is`\n*   **summary**: The supported version of a location has been changed. This might be through an automatic notification or a manual intervention.\n\n### UnexpectedResponse(`XcmV3MultiLocation`, `u64`)[\u200b](#unexpectedresponsexcmv3multilocation-u64 \"Direct link to unexpectedresponsexcmv3multilocation-u64\")\n\n*   **interface**: `api.events.xcmPallet.UnexpectedResponse.is`\n*   **summary**: Query response received which does not match a registered query. This may be because a matching query was never registered, it may be because it is a duplicate response, or because the query timed out.\n\n### VersionChangeNotified(`XcmV3MultiLocation`, `u32`, `XcmV3MultiassetMultiAssets`, `[u8;32]`)[\u200b](#versionchangenotifiedxcmv3multilocation-u32-xcmv3multiassetmultiassets-u832 \"Direct link to versionchangenotifiedxcmv3multilocation-u32-xcmv3multiassetmultiassets-u832\")\n\n*   **interface**: `api.events.xcmPallet.VersionChangeNotified.is`\n    \n*   **summary**: An XCM version change notification message has been attempted to be sent.\n    \n    The cost of sending it (borne by the chain) is included.\n    \n\n### VersionNotifyRequested(`XcmV3MultiLocation`, `XcmV3MultiassetMultiAssets`, `[u8;32]`)[\u200b](#versionnotifyrequestedxcmv3multilocation-xcmv3multiassetmultiassets-u832 \"Direct link to versionnotifyrequestedxcmv3multilocation-xcmv3multiassetmultiassets-u832\")\n\n*   **interface**: `api.events.xcmPallet.VersionNotifyRequested.is`\n*   **summary**: We have requested that a remote chain send us XCM version change notifications.\n\n### VersionNotifyStarted(`XcmV3MultiLocation`, `XcmV3MultiassetMultiAssets`, `[u8;32]`)[\u200b](#versionnotifystartedxcmv3multilocation-xcmv3multiassetmultiassets-u832 \"Direct link to versionnotifystartedxcmv3multilocation-xcmv3multiassetmultiassets-u832\")\n\n*   **interface**: `api.events.xcmPallet.VersionNotifyStarted.is`\n*   **summary**: A remote has requested XCM version change notification from us and we have honored it. A version information message is sent to them and its cost is included.\n\n### VersionNotifyUnrequested(`XcmV3MultiLocation`, `XcmV3MultiassetMultiAssets`, `[u8;32]`)[\u200b](#versionnotifyunrequestedxcmv3multilocation-xcmv3multiassetmultiassets-u832 \"Direct link to versionnotifyunrequestedxcmv3multilocation-xcmv3multiassetmultiassets-u832\")\n\n*   **interface**: `api.events.xcmPallet.VersionNotifyUnrequested.is`\n*   **summary**: We have requested that a remote chain stops sending us XCM version change notifications.\n\n[Edit this page](https://github.com/polkadot-js/docs/edit/master/docs/kusama/events.md)\n\n[Previous\\\n\\\nExtrinsics](/docs/kusama/extrinsics)\n[Next\\\n\\\nErrors](/docs/kusama/errors)\n\n*   [auctions](#auctions)\n    *   [AuctionClosed(`u32`)](#auctionclosedu32)\n        \n    *   [AuctionStarted(`u32`, `u32`, `u32`)](#auctionstartedu32-u32-u32)\n        \n    *   [BidAccepted(`AccountId32`, `u32`, `u128`, `u32`, `u32`)](#bidacceptedaccountid32-u32-u128-u32-u32)\n        \n    *   [ReserveConfiscated(`u32`, `AccountId32`, `u128`)](#reserveconfiscatedu32-accountid32-u128)\n        \n    *   [Reserved(`AccountId32`, `u128`, `u128`)](#reservedaccountid32-u128-u128)\n        \n    *   [Unreserved(`AccountId32`, `u128`)](#unreservedaccountid32-u128)\n        \n    *   [WinningOffset(`u32`, `u32`)](#winningoffsetu32-u32)\n        \n*   [balances](#balances)\n    *   [BalanceSet(`AccountId32`, `u128`)](#balancesetaccountid32-u128)\n        \n    *   [Burned(`AccountId32`, `u128`)](#burnedaccountid32-u128)\n        \n    *   [Deposit(`AccountId32`, `u128`)](#depositaccountid32-u128)\n        \n    *   [DustLost(`AccountId32`, `u128`)](#dustlostaccountid32-u128)\n        \n    *   [Endowed(`AccountId32`, `u128`)](#endowedaccountid32-u128)\n        \n    *   [Frozen(`AccountId32`, `u128`)](#frozenaccountid32-u128)\n        \n    *   [Issued(`u128`)](#issuedu128)\n        \n    *   [Locked(`AccountId32`, `u128`)](#lockedaccountid32-u128)\n        \n    *   [Minted(`AccountId32`, `u128`)](#mintedaccountid32-u128)\n        \n    *   [Rescinded(`u128`)](#rescindedu128)\n        \n    *   [Reserved(`AccountId32`, `u128`)](#reservedaccountid32-u128)\n        \n    *   [ReserveRepatriated(`AccountId32`, `AccountId32`, `u128`, `FrameSupportTokensMiscBalanceStatus`)](#reserverepatriatedaccountid32-accountid32-u128-framesupporttokensmiscbalancestatus)\n        \n    *   [Restored(`AccountId32`, `u128`)](#restoredaccountid32-u128)\n        \n    *   [Slashed(`AccountId32`, `u128`)](#slashedaccountid32-u128)\n        \n    *   [Suspended(`AccountId32`, `u128`)](#suspendedaccountid32-u128)\n        \n    *   [Thawed(`AccountId32`, `u128`)](#thawedaccountid32-u128)\n        \n    *   [Transfer(`AccountId32`, `AccountId32`, `u128`)](#transferaccountid32-accountid32-u128)\n        \n    *   [Unlocked(`AccountId32`, `u128`)](#unlockedaccountid32-u128)\n        \n    *   [Unreserved(`AccountId32`, `u128`)](#unreservedaccountid32-u128-1)\n        \n    *   [Upgraded(`AccountId32`)](#upgradedaccountid32)\n        \n    *   [Withdraw(`AccountId32`, `u128`)](#withdrawaccountid32-u128)\n        \n*   [bounties](#bounties)\n    *   [BountyAwarded(`u32`, `AccountId32`)](#bountyawardedu32-accountid32)\n        \n    *   [BountyBecameActive(`u32`)](#bountybecameactiveu32)\n        \n    *   [BountyCanceled(`u32`)](#bountycanceledu32)\n        \n    *   [BountyClaimed(`u32`, `u128`, `AccountId32`)](#bountyclaimedu32-u128-accountid32)\n        \n    *   [BountyExtended(`u32`)](#bountyextendedu32)\n        \n    *   [BountyProposed(`u32`)](#bountyproposedu32)\n        \n    *   [BountyRejected(`u32`, `u128`)](#bountyrejectedu32-u128)\n        \n*   [childBounties](#childbounties)\n    *   [Added(`u32`, `u32`)](#addedu32-u32)\n        \n    *   [Awarded(`u32`, `u32`, `AccountId32`)](#awardedu32-u32-accountid32)\n        \n    *   [Canceled(`u32`, `u32`)](#canceledu32-u32)\n        \n    *   [Claimed(`u32`, `u32`, `u128`, `AccountId32`)](#claimedu32-u32-u128-accountid32)\n        \n*   [claims](#claims)\n    *   [Claimed(`AccountId32`, `EthereumAddress`, `u128`)](#claimedaccountid32-ethereumaddress-u128)\n        \n*   [convictionVoting](#convictionvoting)\n    *   [Delegated(`AccountId32`, `AccountId32`)](#delegatedaccountid32-accountid32)\n        \n    *   [Undelegated(`AccountId32`)](#undelegatedaccountid32)\n        \n*   [crowdloan](#crowdloan)\n    *   [AddedToNewRaise(`u32`)](#addedtonewraiseu32)\n        \n    *   [AllRefunded(`u32`)](#allrefundedu32)\n        \n    *   [Contributed(`AccountId32`, `u32`, `u128`)](#contributedaccountid32-u32-u128)\n        \n    *   [Created(`u32`)](#createdu32)\n        \n    *   [Dissolved(`u32`)](#dissolvedu32)\n        \n    *   [Edited(`u32`)](#editedu32)\n        \n    *   [HandleBidResult(`u32`, `Result<Null, SpRuntimeDispatchError>`)](#handlebidresultu32-resultnull-spruntimedispatcherror)\n        \n    *   [MemoUpdated(`AccountId32`, `u32`, `Bytes`)](#memoupdatedaccountid32-u32-bytes)\n        \n    *   [PartiallyRefunded(`u32`)](#partiallyrefundedu32)\n        \n    *   [Withdrew(`AccountId32`, `u32`, `u128`)](#withdrewaccountid32-u32-u128)\n        \n*   [electionProviderMultiPhase](#electionprovidermultiphase)\n    *   [ElectionFailed()](#electionfailed)\n        \n    *   [ElectionFinalized(`PalletElectionProviderMultiPhaseElectionCompute`, `SpNposElectionsElectionScore`)](#electionfinalizedpalletelectionprovidermultiphaseelectioncompute-spnposelectionselectionscore)\n        \n    *   [PhaseTransitioned(`PalletElectionProviderMultiPhasePhase`, `PalletElectionProviderMultiPhasePhase`, `u32`)](#phasetransitionedpalletelectionprovidermultiphasephase-palletelectionprovidermultiphasephase-u32)\n        \n    *   [Rewarded(`AccountId32`, `u128`)](#rewardedaccountid32-u128)\n        \n    *   [Slashed(`AccountId32`, `u128`)](#slashedaccountid32-u128-1)\n        \n    *   [SolutionStored(`PalletElectionProviderMultiPhaseElectionCompute`, `Option<AccountId32>`, `bool`)](#solutionstoredpalletelectionprovidermultiphaseelectioncompute-optionaccountid32-bool)\n        \n*   [fastUnstake](#fastunstake)\n    *   [BatchChecked(`Vec<u32>`)](#batchcheckedvecu32)\n        \n    *   [BatchFinished(`u32`)](#batchfinishedu32)\n        \n    *   [InternalError()](#internalerror)\n        \n    *   [Slashed(`AccountId32`, `u128`)](#slashedaccountid32-u128-2)\n        \n    *   [Unstaked(`AccountId32`, `Result<Null, SpRuntimeDispatchError>`)](#unstakedaccountid32-resultnull-spruntimedispatcherror)\n        \n*   [fellowshipCollective](#fellowshipcollective)\n    *   [MemberAdded(`AccountId32`)](#memberaddedaccountid32)\n        \n    *   [MemberRemoved(`AccountId32`, `u16`)](#memberremovedaccountid32-u16)\n        \n    *   [RankChanged(`AccountId32`, `u16`)](#rankchangedaccountid32-u16)\n        \n    *   [Voted(`AccountId32`, `u32`, `PalletRankedCollectiveVoteRecord`, `PalletRankedCollectiveTally`)](#votedaccountid32-u32-palletrankedcollectivevoterecord-palletrankedcollectivetally)\n        \n*   [fellowshipReferenda](#fellowshipreferenda)\n    *   [Approved(`u32`)](#approvedu32)\n        \n    *   [Cancelled(`u32`, `PalletRankedCollectiveTally`)](#cancelledu32-palletrankedcollectivetally)\n        \n    *   [ConfirmAborted(`u32`)](#confirmabortedu32)\n        \n    *   [Confirmed(`u32`, `PalletRankedCollectiveTally`)](#confirmedu32-palletrankedcollectivetally)\n        \n    *   [ConfirmStarted(`u32`)](#confirmstartedu32)\n        \n    *   [DecisionDepositPlaced(`u32`, `AccountId32`, `u128`)](#decisiondepositplacedu32-accountid32-u128)\n        \n    *   [DecisionDepositRefunded(`u32`, `AccountId32`, `u128`)](#decisiondepositrefundedu32-accountid32-u128)\n        \n    *   [DecisionStarted(`u32`, `u16`, `FrameSupportPreimagesBounded`, `PalletRankedCollectiveTally`)](#decisionstartedu32-u16-framesupportpreimagesbounded-palletrankedcollectivetally)\n        \n    *   [DepositSlashed(`AccountId32`, `u128`)](#depositslashedaccountid32-u128)\n        \n    *   [Killed(`u32`, `PalletRankedCollectiveTally`)](#killedu32-palletrankedcollectivetally)\n        \n    *   [MetadataCleared(`u32`, `H256`)](#metadataclearedu32-h256)\n        \n    *   [MetadataSet(`u32`, `H256`)](#metadatasetu32-h256)\n        \n    *   [Rejected(`u32`, `PalletRankedCollectiveTally`)](#rejectedu32-palletrankedcollectivetally)\n        \n    *   [SubmissionDepositRefunded(`u32`, `AccountId32`, `u128`)](#submissiondepositrefundedu32-accountid32-u128)\n        \n    *   [Submitted(`u32`, `u16`, `FrameSupportPreimagesBounded`)](#submittedu32-u16-framesupportpreimagesbounded)\n        \n    *   [TimedOut(`u32`, `PalletRankedCollectiveTally`)](#timedoutu32-palletrankedcollectivetally)\n        \n*   [grandpa](#grandpa)\n    *   [NewAuthorities(`Vec<(SpConsensusGrandpaAppPublic,u64)>`)](#newauthoritiesvecspconsensusgrandpaapppublicu64)\n        \n    *   [Paused()](#paused)\n        \n    *   [Resumed()](#resumed)\n        \n*   [hrmp](#hrmp)\n    *   [ChannelClosed(`u32`, `PolkadotParachainPrimitivesHrmpChannelId`)](#channelclosedu32-polkadotparachainprimitiveshrmpchannelid)\n        \n    *   [HrmpChannelForceOpened(`u32`, `u32`, `u32`, `u32`)](#hrmpchannelforceopenedu32-u32-u32-u32)\n        \n    *   [OpenChannelAccepted(`u32`, `u32`)](#openchannelacceptedu32-u32)\n        \n    *   [OpenChannelCanceled(`u32`, `PolkadotParachainPrimitivesHrmpChannelId`)](#openchannelcanceledu32-polkadotparachainprimitiveshrmpchannelid)\n        \n    *   [OpenChannelRequested(`u32`, `u32`, `u32`, `u32`)](#openchannelrequestedu32-u32-u32-u32)\n        \n*   [identity](#identity)\n    *   [IdentityCleared(`AccountId32`, `u128`)](#identityclearedaccountid32-u128)\n        \n    *   [IdentityKilled(`AccountId32`, `u128`)](#identitykilledaccountid32-u128)\n        \n    *   [IdentitySet(`AccountId32`)](#identitysetaccountid32)\n        \n    *   [JudgementGiven(`AccountId32`, `u32`)](#judgementgivenaccountid32-u32)\n        \n    *   [JudgementRequested(`AccountId32`, `u32`)](#judgementrequestedaccountid32-u32)\n        \n    *   [JudgementUnrequested(`AccountId32`, `u32`)](#judgementunrequestedaccountid32-u32)\n        \n    *   [RegistrarAdded(`u32`)](#registraraddedu32)\n        \n    *   [SubIdentityAdded(`AccountId32`, `AccountId32`, `u128`)](#subidentityaddedaccountid32-accountid32-u128)\n        \n    *   [SubIdentityRemoved(`AccountId32`, `AccountId32`, `u128`)](#subidentityremovedaccountid32-accountid32-u128)\n        \n    *   [SubIdentityRevoked(`AccountId32`, `AccountId32`, `u128`)](#subidentityrevokedaccountid32-accountid32-u128)\n        \n*   [imOnline](#imonline)\n    *   [AllGood()](#allgood)\n        \n    *   [HeartbeatReceived(`PalletImOnlineSr25519AppSr25519Public`)](#heartbeatreceivedpalletimonlinesr25519appsr25519public)\n        \n    *   [SomeOffline(`Vec<(AccountId32,PalletStakingExposure)>`)](#someofflinevecaccountid32palletstakingexposure)\n        \n*   [indices](#indices)\n    *   [IndexAssigned(`AccountId32`, `u32`)](#indexassignedaccountid32-u32)\n        \n    *   [IndexFreed(`u32`)](#indexfreedu32)\n        \n    *   [IndexFrozen(`u32`, `AccountId32`)](#indexfrozenu32-accountid32)\n        \n*   [messageQueue](#messagequeue)\n    *   [OverweightEnqueued(`[u8;32]`, `PolkadotRuntimeParachainsInclusionAggregateMessageOrigin`, `u32`, `u32`)](#overweightenqueuedu832-polkadotruntimeparachainsinclusionaggregatemessageorigin-u32-u32)\n        \n    *   [PageReaped(`PolkadotRuntimeParachainsInclusionAggregateMessageOrigin`, `u32`)](#pagereapedpolkadotruntimeparachainsinclusionaggregatemessageorigin-u32)\n        \n    *   [Processed(`[u8;32]`, `PolkadotRuntimeParachainsInclusionAggregateMessageOrigin`, `SpWeightsWeightV2Weight`, `bool`)](#processedu832-polkadotruntimeparachainsinclusionaggregatemessageorigin-spweightsweightv2weight-bool)\n        \n    *   [ProcessingFailed(`[u8;32]`, `PolkadotRuntimeParachainsInclusionAggregateMessageOrigin`, `FrameSupportMessagesProcessMessageError`)](#processingfailedu832-polkadotruntimeparachainsinclusionaggregatemessageorigin-framesupportmessagesprocessmessageerror)\n        \n*   [multisig](#multisig)\n    *   [MultisigApproval(`AccountId32`, `PalletMultisigTimepoint`, `AccountId32`, `[u8;32]`)](#multisigapprovalaccountid32-palletmultisigtimepoint-accountid32-u832)\n        \n    *   [MultisigCancelled(`AccountId32`, `PalletMultisigTimepoint`, `AccountId32`, `[u8;32]`)](#multisigcancelledaccountid32-palletmultisigtimepoint-accountid32-u832)\n        \n    *   [MultisigExecuted(`AccountId32`, `PalletMultisigTimepoint`, `AccountId32`, `[u8;32]`, `Result<Null, SpRuntimeDispatchError>`)](#multisigexecutedaccountid32-palletmultisigtimepoint-accountid32-u832-resultnull-spruntimedispatcherror)\n        \n    *   [NewMultisig(`AccountId32`, `AccountId32`, `[u8;32]`)](#newmultisigaccountid32-accountid32-u832)\n        \n*   [nis](#nis)\n    *   [BidDropped(`AccountId32`, `u128`, `u32`)](#biddroppedaccountid32-u128-u32)\n        \n    *   [BidPlaced(`AccountId32`, `u128`, `u32`)](#bidplacedaccountid32-u128-u32)\n        \n    *   [BidRetracted(`AccountId32`, `u128`, `u32`)](#bidretractedaccountid32-u128-u32)\n        \n    *   [Funded(`u128`)](#fundedu128)\n        \n    *   [Issued(`u32`, `u32`, `AccountId32`, `Perquintill`, `u128`)](#issuedu32-u32-accountid32-perquintill-u128)\n        \n    *   [Thawed(`u32`, `AccountId32`, `Perquintill`, `u128`, `bool`)](#thawedu32-accountid32-perquintill-u128-bool)\n        \n    *   [Transferred(`AccountId32`, `AccountId32`, `u32`)](#transferredaccountid32-accountid32-u32)\n        \n*   [nisCounterpartBalances](#niscounterpartbalances)\n    *   [BalanceSet(`AccountId32`, `u128`)](#balancesetaccountid32-u128-1)\n        \n    *   [Burned(`AccountId32`, `u128`)](#burnedaccountid32-u128-1)\n        \n    *   [Deposit(`AccountId32`, `u128`)](#depositaccountid32-u128-1)\n        \n    *   [DustLost(`AccountId32`, `u128`)](#dustlostaccountid32-u128-1)\n        \n    *   [Endowed(`AccountId32`, `u128`)](#endowedaccountid32-u128-1)\n        \n    *   [Frozen(`AccountId32`, `u128`)](#frozenaccountid32-u128-1)\n        \n    *   [Issued(`u128`)](#issuedu128-1)\n        \n    *   [Locked(`AccountId32`, `u128`)](#lockedaccountid32-u128-1)\n        \n    *   [Minted(`AccountId32`, `u128`)](#mintedaccountid32-u128-1)\n        \n    *   [Rescinded(`u128`)](#rescindedu128-1)\n        \n    *   [Reserved(`AccountId32`, `u128`)](#reservedaccountid32-u128-1)\n        \n    *   [ReserveRepatriated(`AccountId32`, `AccountId32`, `u128`, `FrameSupportTokensMiscBalanceStatus`)](#reserverepatriatedaccountid32-accountid32-u128-framesupporttokensmiscbalancestatus-1)\n        \n    *   [Restored(`AccountId32`, `u128`)](#restoredaccountid32-u128-1)\n        \n    *   [Slashed(`AccountId32`, `u128`)](#slashedaccountid32-u128-3)\n        \n    *   [Suspended(`AccountId32`, `u128`)](#suspendedaccountid32-u128-1)\n        \n    *   [Thawed(`AccountId32`, `u128`)](#thawedaccountid32-u128-1)\n        \n    *   [Transfer(`AccountId32`, `AccountId32`, `u128`)](#transferaccountid32-accountid32-u128-1)\n        \n    *   [Unlocked(`AccountId32`, `u128`)](#unlockedaccountid32-u128-1)\n        \n    *   [Unreserved(`AccountId32`, `u128`)](#unreservedaccountid32-u128-2)\n        \n    *   [Upgraded(`AccountId32`)](#upgradedaccountid32-1)\n        \n    *   [Withdraw(`AccountId32`, `u128`)](#withdrawaccountid32-u128-1)\n        \n*   [nominationPools](#nominationpools)\n    *   [Bonded(`AccountId32`, `u32`, `u128`, `bool`)](#bondedaccountid32-u32-u128-bool)\n        \n    *   [Created(`AccountId32`, `u32`)](#createdaccountid32-u32)\n        \n    *   [Destroyed(`u32`)](#destroyedu32)\n        \n    *   [MemberRemoved(`u32`, `AccountId32`)](#memberremovedu32-accountid32)\n        \n    *   [PaidOut(`AccountId32`, `u32`, `u128`)](#paidoutaccountid32-u32-u128)\n        \n    *   [PoolCommissionChangeRateUpdated(`u32`, `PalletNominationPoolsCommissionChangeRate`)](#poolcommissionchangerateupdatedu32-palletnominationpoolscommissionchangerate)\n        \n    *   [PoolCommissionClaimed(`u32`, `u128`)](#poolcommissionclaimedu32-u128)\n        \n    *   [PoolCommissionUpdated(`u32`, `Option<(Perbill,AccountId32)>`)](#poolcommissionupdatedu32-optionperbillaccountid32)\n        \n    *   [PoolMaxCommissionUpdated(`u32`, `Perbill`)](#poolmaxcommissionupdatedu32-perbill)\n        \n    *   [PoolSlashed(`u32`, `u128`)](#poolslashedu32-u128)\n        \n    *   [RolesUpdated(`Option<AccountId32>`, `Option<AccountId32>`, `Option<AccountId32>`)](#rolesupdatedoptionaccountid32-optionaccountid32-optionaccountid32)\n        \n    *   [StateChanged(`u32`, `PalletNominationPoolsPoolState`)](#statechangedu32-palletnominationpoolspoolstate)\n        \n    *   [Unbonded(`AccountId32`, `u32`, `u128`, `u128`, `u32`)](#unbondedaccountid32-u32-u128-u128-u32)\n        \n    *   [UnbondingPoolSlashed(`u32`, `u32`, `u128`)](#unbondingpoolslashedu32-u32-u128)\n        \n    *   [Withdrawn(`AccountId32`, `u32`, `u128`, `u128`)](#withdrawnaccountid32-u32-u128-u128)\n        \n*   [offences](#offences)\n    *   [Offence(`[u8;16]`, `Bytes`)](#offenceu816-bytes)\n        \n*   [paraInclusion](#parainclusion)\n    *   [CandidateBacked(`PolkadotPrimitivesV5CandidateReceipt`, `Bytes`, `u32`, `u32`)](#candidatebackedpolkadotprimitivesv5candidatereceipt-bytes-u32-u32)\n        \n    *   [CandidateIncluded(`PolkadotPrimitivesV5CandidateReceipt`, `Bytes`, `u32`, `u32`)](#candidateincludedpolkadotprimitivesv5candidatereceipt-bytes-u32-u32)\n        \n    *   [CandidateTimedOut(`PolkadotPrimitivesV5CandidateReceipt`, `Bytes`, `u32`)](#candidatetimedoutpolkadotprimitivesv5candidatereceipt-bytes-u32)\n        \n    *   [UpwardMessagesReceived(`u32`, `u32`)](#upwardmessagesreceivedu32-u32)\n        \n*   [paras](#paras)\n    *   [ActionQueued(`u32`, `u32`)](#actionqueuedu32-u32)\n        \n    *   [CodeUpgradeScheduled(`u32`)](#codeupgradescheduledu32)\n        \n    *   [CurrentCodeUpdated(`u32`)](#currentcodeupdatedu32)\n        \n    *   [CurrentHeadUpdated(`u32`)](#currentheadupdatedu32)\n        \n    *   [NewHeadNoted(`u32`)](#newheadnotedu32)\n        \n    *   [PvfCheckAccepted(`H256`, `u32`)](#pvfcheckacceptedh256-u32)\n        \n    *   [PvfCheckRejected(`H256`, `u32`)](#pvfcheckrejectedh256-u32)\n        \n    *   [PvfCheckStarted(`H256`, `u32`)](#pvfcheckstartedh256-u32)\n        \n*   [parasDisputes](#parasdisputes)\n    *   [DisputeConcluded(`H256`, `PolkadotRuntimeParachainsDisputesDisputeResult`)](#disputeconcludedh256-polkadotruntimeparachainsdisputesdisputeresult)\n        \n    *   [DisputeInitiated(`H256`, `PolkadotRuntimeParachainsDisputesDisputeLocation`)](#disputeinitiatedh256-polkadotruntimeparachainsdisputesdisputelocation)\n        \n    *   [Revert(`u32`)](#revertu32)\n        \n*   [preimage](#preimage)\n    *   [Cleared(`H256`)](#clearedh256)\n        \n    *   [Noted(`H256`)](#notedh256)\n        \n    *   [Requested(`H256`)](#requestedh256)\n        \n*   [proxy](#proxy)\n    *   [Announced(`AccountId32`, `AccountId32`, `H256`)](#announcedaccountid32-accountid32-h256)\n        \n    *   [ProxyAdded(`AccountId32`, `AccountId32`, `KusamaRuntimeProxyType`, `u32`)](#proxyaddedaccountid32-accountid32-kusamaruntimeproxytype-u32)\n        \n    *   [ProxyExecuted(`Result<Null, SpRuntimeDispatchError>`)](#proxyexecutedresultnull-spruntimedispatcherror)\n        \n    *   [ProxyRemoved(`AccountId32`, `AccountId32`, `KusamaRuntimeProxyType`, `u32`)](#proxyremovedaccountid32-accountid32-kusamaruntimeproxytype-u32)\n        \n    *   [PureCreated(`AccountId32`, `AccountId32`, `KusamaRuntimeProxyType`, `u16`)](#purecreatedaccountid32-accountid32-kusamaruntimeproxytype-u16)\n        \n*   [recovery](#recovery)\n    *   [AccountRecovered(`AccountId32`, `AccountId32`)](#accountrecoveredaccountid32-accountid32)\n        \n    *   [RecoveryClosed(`AccountId32`, `AccountId32`)](#recoveryclosedaccountid32-accountid32)\n        \n    *   [RecoveryCreated(`AccountId32`)](#recoverycreatedaccountid32)\n        \n    *   [RecoveryInitiated(`AccountId32`, `AccountId32`)](#recoveryinitiatedaccountid32-accountid32)\n        \n    *   [RecoveryRemoved(`AccountId32`)](#recoveryremovedaccountid32)\n        \n    *   [RecoveryVouched(`AccountId32`, `AccountId32`, `AccountId32`)](#recoveryvouchedaccountid32-accountid32-accountid32)\n        \n*   [referenda](#referenda)\n    *   [Approved(`u32`)](#approvedu32-1)\n        \n    *   [Cancelled(`u32`, `PalletConvictionVotingTally`)](#cancelledu32-palletconvictionvotingtally)\n        \n    *   [ConfirmAborted(`u32`)](#confirmabortedu32-1)\n        \n    *   [Confirmed(`u32`, `PalletConvictionVotingTally`)](#confirmedu32-palletconvictionvotingtally)\n        \n    *   [ConfirmStarted(`u32`)](#confirmstartedu32-1)\n        \n    *   [DecisionDepositPlaced(`u32`, `AccountId32`, `u128`)](#decisiondepositplacedu32-accountid32-u128-1)\n        \n    *   [DecisionDepositRefunded(`u32`, `AccountId32`, `u128`)](#decisiondepositrefundedu32-accountid32-u128-1)\n        \n    *   [DecisionStarted(`u32`, `u16`, `FrameSupportPreimagesBounded`, `PalletConvictionVotingTally`)](#decisionstartedu32-u16-framesupportpreimagesbounded-palletconvictionvotingtally)\n        \n    *   [DepositSlashed(`AccountId32`, `u128`)](#depositslashedaccountid32-u128-1)\n        \n    *   [Killed(`u32`, `PalletConvictionVotingTally`)](#killedu32-palletconvictionvotingtally)\n        \n    *   [MetadataCleared(`u32`, `H256`)](#metadataclearedu32-h256-1)\n        \n    *   [MetadataSet(`u32`, `H256`)](#metadatasetu32-h256-1)\n        \n    *   [Rejected(`u32`, `PalletConvictionVotingTally`)](#rejectedu32-palletconvictionvotingtally)\n        \n    *   [SubmissionDepositRefunded(`u32`, `AccountId32`, `u128`)](#submissiondepositrefundedu32-accountid32-u128-1)\n        \n    *   [Submitted(`u32`, `u16`, `FrameSupportPreimagesBounded`)](#submittedu32-u16-framesupportpreimagesbounded-1)\n        \n    *   [TimedOut(`u32`, `PalletConvictionVotingTally`)](#timedoutu32-palletconvictionvotingtally)\n        \n*   [registrar](#registrar)\n    *   [Deregistered(`u32`)](#deregisteredu32)\n        \n    *   [Registered(`u32`, `AccountId32`)](#registeredu32-accountid32)\n        \n    *   [Reserved(`u32`, `AccountId32`)](#reservedu32-accountid32)\n        \n    *   [Swapped(`u32`, `u32`)](#swappedu32-u32)\n        \n*   [scheduler](#scheduler)\n    *   [CallUnavailable(`(u32,u32)`, `Option<[u8;32]>`)](#callunavailableu32u32-optionu832)\n        \n    *   [Canceled(`u32`, `u32`)](#canceledu32-u32-1)\n        \n    *   [Dispatched(`(u32,u32)`, `Option<[u8;32]>`, `Result<Null, SpRuntimeDispatchError>`)](#dispatchedu32u32-optionu832-resultnull-spruntimedispatcherror)\n        \n    *   [PeriodicFailed(`(u32,u32)`, `Option<[u8;32]>`)](#periodicfailedu32u32-optionu832)\n        \n    *   [PermanentlyOverweight(`(u32,u32)`, `Option<[u8;32]>`)](#permanentlyoverweightu32u32-optionu832)\n        \n    *   [Scheduled(`u32`, `u32`)](#scheduledu32-u32)\n        \n*   [session](#session)\n    *   [NewSession(`u32`)](#newsessionu32)\n        \n*   [slots](#slots)\n    *   [Leased(`u32`, `AccountId32`, `u32`, `u32`, `u128`, `u128`)](#leasedu32-accountid32-u32-u32-u128-u128)\n        \n    *   [NewLeasePeriod(`u32`)](#newleaseperiodu32)\n        \n*   [society](#society)\n    *   [AutoUnbid(`AccountId32`)](#autounbidaccountid32)\n        \n    *   [Bid(`AccountId32`, `u128`)](#bidaccountid32-u128)\n        \n    *   [CandidateSuspended(`AccountId32`)](#candidatesuspendedaccountid32)\n        \n    *   [Challenged(`AccountId32`)](#challengedaccountid32)\n        \n    *   [DefenderVote(`AccountId32`, `bool`)](#defendervoteaccountid32-bool)\n        \n    *   [Deposit(`u128`)](#depositu128)\n        \n    *   [Elevated(`AccountId32`, `u32`)](#elevatedaccountid32-u32)\n        \n    *   [Founded(`AccountId32`)](#foundedaccountid32)\n        \n    *   [Inducted(`AccountId32`, `Vec<AccountId32>`)](#inductedaccountid32-vecaccountid32)\n        \n    *   [MemberSuspended(`AccountId32`)](#membersuspendedaccountid32)\n        \n    *   [NewParams(`PalletSocietyGroupParams`)](#newparamspalletsocietygroupparams)\n        \n    *   [SuspendedMemberJudgement(`AccountId32`, `bool`)](#suspendedmemberjudgementaccountid32-bool)\n        \n    *   [Unbid(`AccountId32`)](#unbidaccountid32)\n        \n    *   [Unfounded(`AccountId32`)](#unfoundedaccountid32)\n        \n    *   [Unvouch(`AccountId32`)](#unvouchaccountid32)\n        \n    *   [Vote(`AccountId32`, `AccountId32`, `bool`)](#voteaccountid32-accountid32-bool)\n        \n    *   [Vouch(`AccountId32`, `u128`, `AccountId32`)](#vouchaccountid32-u128-accountid32)\n        \n*   [staking](#staking)\n    *   [Bonded(`AccountId32`, `u128`)](#bondedaccountid32-u128)\n        \n    *   [Chilled(`AccountId32`)](#chilledaccountid32)\n        \n    *   [EraPaid(`u32`, `u128`, `u128`)](#erapaidu32-u128-u128)\n        \n    *   [ForceEra(`PalletStakingForcing`)](#forceerapalletstakingforcing)\n        \n    *   [Kicked(`AccountId32`, `AccountId32`)](#kickedaccountid32-accountid32)\n        \n    *   [OldSlashingReportDiscarded(`u32`)](#oldslashingreportdiscardedu32)\n        \n    *   [PayoutStarted(`u32`, `AccountId32`)](#payoutstartedu32-accountid32)\n        \n    *   [Rewarded(`AccountId32`, `u128`)](#rewardedaccountid32-u128-1)\n        \n    *   [Slashed(`AccountId32`, `u128`)](#slashedaccountid32-u128-4)\n        \n    *   [SlashReported(`AccountId32`, `Perbill`, `u32`)](#slashreportedaccountid32-perbill-u32)\n        \n    *   [SnapshotTargetsSizeExceeded(`u32`)](#snapshottargetssizeexceededu32)\n        \n    *   [SnapshotVotersSizeExceeded(`u32`)](#snapshotvoterssizeexceededu32)\n        \n    *   [StakersElected()](#stakerselected)\n        \n    *   [StakingElectionFailed()](#stakingelectionfailed)\n        \n    *   [Unbonded(`AccountId32`, `u128`)](#unbondedaccountid32-u128)\n        \n    *   [ValidatorPrefsSet(`AccountId32`, `PalletStakingValidatorPrefs`)](#validatorprefssetaccountid32-palletstakingvalidatorprefs)\n        \n    *   [Withdrawn(`AccountId32`, `u128`)](#withdrawnaccountid32-u128)\n        \n*   [stateTrieMigration](#statetriemigration)\n    *   [AutoMigrationFinished()](#automigrationfinished)\n        \n    *   [Halted(`PalletStateTrieMigrationError`)](#haltedpalletstatetriemigrationerror)\n        \n    *   [Migrated(`u32`, `u32`, `PalletStateTrieMigrationMigrationCompute`)](#migratedu32-u32-palletstatetriemigrationmigrationcompute)\n        \n    *   [Slashed(`AccountId32`, `u128`)](#slashedaccountid32-u128-5)\n        \n*   [system](#system)\n    *   [CodeUpdated()](#codeupdated)\n        \n    *   [ExtrinsicFailed(`SpRuntimeDispatchError`, `FrameSupportDispatchDispatchInfo`)](#extrinsicfailedspruntimedispatcherror-framesupportdispatchdispatchinfo)\n        \n    *   [ExtrinsicSuccess(`FrameSupportDispatchDispatchInfo`)](#extrinsicsuccessframesupportdispatchdispatchinfo)\n        \n    *   [KilledAccount(`AccountId32`)](#killedaccountaccountid32)\n        \n    *   [NewAccount(`AccountId32`)](#newaccountaccountid32)\n        \n    *   [Remarked(`AccountId32`, `H256`)](#remarkedaccountid32-h256)\n        \n*   [transactionPayment](#transactionpayment)\n    *   [TransactionFeePaid(`AccountId32`, `u128`, `u128`)](#transactionfeepaidaccountid32-u128-u128)\n        \n*   [treasury](#treasury)\n    *   [Awarded(`u32`, `u128`, `AccountId32`)](#awardedu32-u128-accountid32)\n        \n    *   [Burnt(`u128`)](#burntu128)\n        \n    *   [Deposit(`u128`)](#depositu128-1)\n        \n    *   [Proposed(`u32`)](#proposedu32)\n        \n    *   [Rejected(`u32`, `u128`)](#rejectedu32-u128)\n        \n    *   [Rollover(`u128`)](#rolloveru128)\n        \n    *   [SpendApproved(`u32`, `u128`, `AccountId32`)](#spendapprovedu32-u128-accountid32)\n        \n    *   [Spending(`u128`)](#spendingu128)\n        \n    *   [UpdatedInactive(`u128`, `u128`)](#updatedinactiveu128-u128)\n        \n*   [utility](#utility)\n    *   [BatchCompleted()](#batchcompleted)\n        \n    *   [BatchCompletedWithErrors()](#batchcompletedwitherrors)\n        \n    *   [BatchInterrupted(`u32`, `SpRuntimeDispatchError`)](#batchinterruptedu32-spruntimedispatcherror)\n        \n    *   [DispatchedAs(`Result<Null, SpRuntimeDispatchError>`)](#dispatchedasresultnull-spruntimedispatcherror)\n        \n    *   [ItemCompleted()](#itemcompleted)\n        \n    *   [ItemFailed(`SpRuntimeDispatchError`)](#itemfailedspruntimedispatcherror)\n        \n*   [vesting](#vesting)\n    *   [VestingCompleted(`AccountId32`)](#vestingcompletedaccountid32)\n        \n    *   [VestingUpdated(`AccountId32`, `u128`)](#vestingupdatedaccountid32-u128)\n        \n*   [voterList](#voterlist)\n    *   [Rebagged(`AccountId32`, `u64`, `u64`)](#rebaggedaccountid32-u64-u64)\n        \n    *   [ScoreUpdated(`AccountId32`, `u64`)](#scoreupdatedaccountid32-u64)\n        \n*   [whitelist](#whitelist)\n    *   [CallWhitelisted(`H256`)](#callwhitelistedh256)\n        \n    *   [WhitelistedCallDispatched(`H256`, `Result<FrameSupportDispatchPostDispatchInfo, SpRuntimeDispatchErrorWithPostInfo>`)](#whitelistedcalldispatchedh256-resultframesupportdispatchpostdispatchinfo-spruntimedispatcherrorwithpostinfo)\n        \n    *   [WhitelistedCallRemoved(`H256`)](#whitelistedcallremovedh256)\n        \n*   [xcmPallet](#xcmpallet)\n    *   [AssetsClaimed(`H256`, `XcmV3MultiLocation`, `XcmVersionedMultiAssets`)](#assetsclaimedh256-xcmv3multilocation-xcmversionedmultiassets)\n        \n    *   [AssetsTrapped(`H256`, `XcmV3MultiLocation`, `XcmVersionedMultiAssets`)](#assetstrappedh256-xcmv3multilocation-xcmversionedmultiassets)\n        \n    *   [Attempted(`XcmV3TraitsOutcome`)](#attemptedxcmv3traitsoutcome)\n        \n    *   [FeesPaid(`XcmV3MultiLocation`, `XcmV3MultiassetMultiAssets`)](#feespaidxcmv3multilocation-xcmv3multiassetmultiassets)\n        \n    *   [InvalidQuerier(`XcmV3MultiLocation`, `u64`, `XcmV3MultiLocation`, `Option<XcmV3MultiLocation>`)](#invalidquerierxcmv3multilocation-u64-xcmv3multilocation-optionxcmv3multilocation)\n        \n    *   [InvalidQuerierVersion(`XcmV3MultiLocation`, `u64`)](#invalidquerierversionxcmv3multilocation-u64)\n        \n    *   [InvalidResponder(`XcmV3MultiLocation`, `u64`, `Option<XcmV3MultiLocation>`)](#invalidresponderxcmv3multilocation-u64-optionxcmv3multilocation)\n        \n    *   [InvalidResponderVersion(`XcmV3MultiLocation`, `u64`)](#invalidresponderversionxcmv3multilocation-u64)\n        \n    *   [Notified(`u64`, `u8`, `u8`)](#notifiedu64-u8-u8)\n        \n    *   [NotifyDecodeFailed(`u64`, `u8`, `u8`)](#notifydecodefailedu64-u8-u8)\n        \n    *   [NotifyDispatchError(`u64`, `u8`, `u8`)](#notifydispatcherroru64-u8-u8)\n        \n    *   [NotifyOverweight(`u64`, `u8`, `u8`, `SpWeightsWeightV2Weight`, `SpWeightsWeightV2Weight`)](#notifyoverweightu64-u8-u8-spweightsweightv2weight-spweightsweightv2weight)\n        \n    *   [NotifyTargetMigrationFail(`XcmVersionedMultiLocation`, `u64`)](#notifytargetmigrationfailxcmversionedmultilocation-u64)\n        \n    *   [NotifyTargetSendFail(`XcmV3MultiLocation`, `u64`, `XcmV3TraitsError`)](#notifytargetsendfailxcmv3multilocation-u64-xcmv3traitserror)\n        \n    *   [ResponseReady(`u64`, `XcmV3Response`)](#responsereadyu64-xcmv3response)\n        \n    *   [ResponseTaken(`u64`)](#responsetakenu64)\n        \n    *   [Sent(`XcmV3MultiLocation`, `XcmV3MultiLocation`, `XcmV3Xcm`, `[u8;32]`)](#sentxcmv3multilocation-xcmv3multilocation-xcmv3xcm-u832)\n        \n    *   [SupportedVersionChanged(`XcmV3MultiLocation`, `u32`)](#supportedversionchangedxcmv3multilocation-u32)\n        \n    *   [UnexpectedResponse(`XcmV3MultiLocation`, `u64`)](#unexpectedresponsexcmv3multilocation-u64)\n        \n    *   [VersionChangeNotified(`XcmV3MultiLocation`, `u32`, `XcmV3MultiassetMultiAssets`, `[u8;32]`)](#versionchangenotifiedxcmv3multilocation-u32-xcmv3multiassetmultiassets-u832)\n        \n    *   [VersionNotifyRequested(`XcmV3MultiLocation`, `XcmV3MultiassetMultiAssets`, `[u8;32]`)](#versionnotifyrequestedxcmv3multilocation-xcmv3multiassetmultiassets-u832)\n        \n    *   [VersionNotifyStarted(`XcmV3MultiLocation`, `XcmV3MultiassetMultiAssets`, `[u8;32]`)](#versionnotifystartedxcmv3multilocation-xcmv3multiassetmultiassets-u832)\n        \n    *   [VersionNotifyUnrequested(`XcmV3MultiLocation`, `XcmV3MultiassetMultiAssets`, `[u8;32]`)](#versionnotifyunrequestedxcmv3multilocation-xcmv3multiassetmultiassets-u832)"}, {"title": null, "description": null, "source_url": "https://polkadot.js.org/docs/kusama/extrinsics", "markdown": "[Skip to main content](#__docusaurus_skipToContent_fallback)\n\n[![polkadot{.js}](https://polkadot.js.org/docs/img/logo.svg)\\\n\\\n**polkadot{.js}**](/docs/)\n\n[Apps UI (Wallet)](https://polkadot.js.org/apps/)\n[GitHub](https://github.com/polkadot-js/docs)\n\nSearch...\n\n*   [Introduction](#)\n    \n*   [API](#)\n    \n*   [Metadata](#)\n    \n    *   [Substrate](#)\n        \n    *   [Polkadot](#)\n        \n    *   [Kusama](#)\n        \n        *   [Overview](/docs/kusama)\n            \n        *   [Runtime](/docs/kusama/runtime)\n            \n        *   [JSON-RPC](/docs/kusama/rpc)\n            \n        *   [Constants](/docs/kusama/constants)\n            \n        *   [Storage](/docs/kusama/storage)\n            \n        *   [Extrinsics](/docs/kusama/extrinsics)\n            \n        *   [Events](/docs/kusama/events)\n            \n        *   [Errors](/docs/kusama/errors)\n            \n*   [Keyring](#)\n    \n*   [Crypto Utilities](#)\n    \n*   [Contracts (API)](#)\n    \n*   [Identicon (UI)](#)\n    \n*   [Keyring (UI)](#)\n    \n*   [Extension](#)\n    \n*   [Run, Bundle, Test](#)\n    \n\n*   [](/docs/)\n    \n*   Metadata\n*   Kusama\n*   Extrinsics\n\nOn this page\n\nExtrinsics\n==========\n\nThe following sections contain Extrinsics methods are part of the default Kusama runtime. On the api, these are exposed via `api.tx.<module>.<method>`.\n\n(NOTE: These were generated from a static/snapshot view of a recent default Kusama runtime. Some items may not be available in older nodes, or in any customized implementations.)\n\n*   **[auctions](#auctions)\n    **\n    \n*   **[babe](#babe)\n    **\n    \n*   **[balances](#balances)\n    **\n    \n*   **[beefy](#beefy)\n    **\n    \n*   **[bounties](#bounties)\n    **\n    \n*   **[childBounties](#childbounties)\n    **\n    \n*   **[claims](#claims)\n    **\n    \n*   **[configuration](#configuration)\n    **\n    \n*   **[convictionVoting](#convictionvoting)\n    **\n    \n*   **[crowdloan](#crowdloan)\n    **\n    \n*   **[electionProviderMultiPhase](#electionprovidermultiphase)\n    **\n    \n*   **[fastUnstake](#fastunstake)\n    **\n    \n*   **[fellowshipCollective](#fellowshipcollective)\n    **\n    \n*   **[fellowshipReferenda](#fellowshipreferenda)\n    **\n    \n*   **[grandpa](#grandpa)\n    **\n    \n*   **[hrmp](#hrmp)\n    **\n    \n*   **[identity](#identity)\n    **\n    \n*   **[imOnline](#imonline)\n    **\n    \n*   **[indices](#indices)\n    **\n    \n*   **[initializer](#initializer)\n    **\n    \n*   **[messageQueue](#messagequeue)\n    **\n    \n*   **[multisig](#multisig)\n    **\n    \n*   **[nis](#nis)\n    **\n    \n*   **[nisCounterpartBalances](#niscounterpartbalances)\n    **\n    \n*   **[nominationPools](#nominationpools)\n    **\n    \n*   **[paraInclusion](#parainclusion)\n    **\n    \n*   **[paraInherent](#parainherent)\n    **\n    \n*   **[paras](#paras)\n    **\n    \n*   **[parasDisputes](#parasdisputes)\n    **\n    \n*   **[parasShared](#parasshared)\n    **\n    \n*   **[parasSlashing](#parasslashing)\n    **\n    \n*   **[preimage](#preimage)\n    **\n    \n*   **[proxy](#proxy)\n    **\n    \n*   **[recovery](#recovery)\n    **\n    \n*   **[referenda](#referenda)\n    **\n    \n*   **[registrar](#registrar)\n    **\n    \n*   **[scheduler](#scheduler)\n    **\n    \n*   **[session](#session)\n    **\n    \n*   **[slots](#slots)\n    **\n    \n*   **[society](#society)\n    **\n    \n*   **[staking](#staking)\n    **\n    \n*   **[stateTrieMigration](#statetriemigration)\n    **\n    \n*   **[system](#system)\n    **\n    \n*   **[timestamp](#timestamp)\n    **\n    \n*   **[treasury](#treasury)\n    **\n    \n*   **[utility](#utility)\n    **\n    \n*   **[vesting](#vesting)\n    **\n    \n*   **[voterList](#voterlist)\n    **\n    \n*   **[whitelist](#whitelist)\n    **\n    \n*   **[xcmPallet](#xcmpallet)\n    **\n    \n\n* * *\n\nauctions[\u200b](#auctions \"Direct link to auctions\")\n\n-------------------------------------------------\n\n### bid(para: `Compact<u32>`, auction\\_index: `Compact<u32>`, first\\_slot: `Compact<u32>`, last\\_slot: `Compact<u32>`, amount: `Compact<u128>`)[\u200b](#bidpara-compactu32-auction_index-compactu32-first_slot-compactu32-last_slot-compactu32-amount-compactu128 \"Direct link to bidpara-compactu32-auction_index-compactu32-first_slot-compactu32-last_slot-compactu32-amount-compactu128\")\n\n*   **interface**: `api.tx.auctions.bid`\n*   **summary**: See \\[`Pallet::bid`\\].\n\n### cancelAuction()[\u200b](#cancelauction \"Direct link to cancelAuction()\")\n\n*   **interface**: `api.tx.auctions.cancelAuction`\n*   **summary**: See \\[`Pallet::cancel_auction`\\].\n\n### newAuction(duration: `Compact<u32>`, lease\\_period\\_index: `Compact<u32>`)[\u200b](#newauctionduration-compactu32-lease_period_index-compactu32 \"Direct link to newauctionduration-compactu32-lease_period_index-compactu32\")\n\n*   **interface**: `api.tx.auctions.newAuction`\n*   **summary**: See \\[`Pallet::new_auction`\\].\n\n* * *\n\nbabe[\u200b](#babe \"Direct link to babe\")\n\n-------------------------------------\n\n### planConfigChange(config: `SpConsensusBabeDigestsNextConfigDescriptor`)[\u200b](#planconfigchangeconfig-spconsensusbabedigestsnextconfigdescriptor \"Direct link to planconfigchangeconfig-spconsensusbabedigestsnextconfigdescriptor\")\n\n*   **interface**: `api.tx.babe.planConfigChange`\n*   **summary**: See \\[`Pallet::plan_config_change`\\].\n\n### reportEquivocation(equivocation\\_proof: `SpConsensusSlotsEquivocationProof`, key\\_owner\\_proof: `SpSessionMembershipProof`)[\u200b](#reportequivocationequivocation_proof-spconsensusslotsequivocationproof-key_owner_proof-spsessionmembershipproof \"Direct link to reportequivocationequivocation_proof-spconsensusslotsequivocationproof-key_owner_proof-spsessionmembershipproof\")\n\n*   **interface**: `api.tx.babe.reportEquivocation`\n*   **summary**: See \\[`Pallet::report_equivocation`\\].\n\n### reportEquivocationUnsigned(equivocation\\_proof: `SpConsensusSlotsEquivocationProof`, key\\_owner\\_proof: `SpSessionMembershipProof`)[\u200b](#reportequivocationunsignedequivocation_proof-spconsensusslotsequivocationproof-key_owner_proof-spsessionmembershipproof \"Direct link to reportequivocationunsignedequivocation_proof-spconsensusslotsequivocationproof-key_owner_proof-spsessionmembershipproof\")\n\n*   **interface**: `api.tx.babe.reportEquivocationUnsigned`\n*   **summary**: See \\[`Pallet::report_equivocation_unsigned`\\].\n\n* * *\n\nbalances[\u200b](#balances \"Direct link to balances\")\n\n-------------------------------------------------\n\n### forceSetBalance(who: `MultiAddress`, new\\_free: `Compact<u128>`)[\u200b](#forcesetbalancewho-multiaddress-new_free-compactu128 \"Direct link to forcesetbalancewho-multiaddress-new_free-compactu128\")\n\n*   **interface**: `api.tx.balances.forceSetBalance`\n*   **summary**: See \\[`Pallet::force_set_balance`\\].\n\n### forceTransfer(source: `MultiAddress`, dest: `MultiAddress`, value: `Compact<u128>`)[\u200b](#forcetransfersource-multiaddress-dest-multiaddress-value-compactu128 \"Direct link to forcetransfersource-multiaddress-dest-multiaddress-value-compactu128\")\n\n*   **interface**: `api.tx.balances.forceTransfer`\n*   **summary**: See \\[`Pallet::force_transfer`\\].\n\n### forceUnreserve(who: `MultiAddress`, amount: `u128`)[\u200b](#forceunreservewho-multiaddress-amount-u128 \"Direct link to forceunreservewho-multiaddress-amount-u128\")\n\n*   **interface**: `api.tx.balances.forceUnreserve`\n*   **summary**: See \\[`Pallet::force_unreserve`\\].\n\n### setBalanceDeprecated(who: `MultiAddress`, new\\_free: `Compact<u128>`, old\\_reserved: `Compact<u128>`)[\u200b](#setbalancedeprecatedwho-multiaddress-new_free-compactu128-old_reserved-compactu128 \"Direct link to setbalancedeprecatedwho-multiaddress-new_free-compactu128-old_reserved-compactu128\")\n\n*   **interface**: `api.tx.balances.setBalanceDeprecated`\n*   **summary**: See \\[`Pallet::set_balance_deprecated`\\].\n\n### transfer(dest: `MultiAddress`, value: `Compact<u128>`)[\u200b](#transferdest-multiaddress-value-compactu128 \"Direct link to transferdest-multiaddress-value-compactu128\")\n\n*   **interface**: `api.tx.balances.transfer`\n*   **summary**: See \\[`Pallet::transfer`\\].\n\n### transferAll(dest: `MultiAddress`, keep\\_alive: `bool`)[\u200b](#transferalldest-multiaddress-keep_alive-bool \"Direct link to transferalldest-multiaddress-keep_alive-bool\")\n\n*   **interface**: `api.tx.balances.transferAll`\n*   **summary**: See \\[`Pallet::transfer_all`\\].\n\n### transferAllowDeath(dest: `MultiAddress`, value: `Compact<u128>`)[\u200b](#transferallowdeathdest-multiaddress-value-compactu128 \"Direct link to transferallowdeathdest-multiaddress-value-compactu128\")\n\n*   **interface**: `api.tx.balances.transferAllowDeath`\n*   **summary**: See \\[`Pallet::transfer_allow_death`\\].\n\n### transferKeepAlive(dest: `MultiAddress`, value: `Compact<u128>`)[\u200b](#transferkeepalivedest-multiaddress-value-compactu128 \"Direct link to transferkeepalivedest-multiaddress-value-compactu128\")\n\n*   **interface**: `api.tx.balances.transferKeepAlive`\n*   **summary**: See \\[`Pallet::transfer_keep_alive`\\].\n\n### upgradeAccounts(who: `Vec<AccountId32>`)[\u200b](#upgradeaccountswho-vecaccountid32 \"Direct link to upgradeaccountswho-vecaccountid32\")\n\n*   **interface**: `api.tx.balances.upgradeAccounts`\n*   **summary**: See \\[`Pallet::upgrade_accounts`\\].\n\n* * *\n\nbeefy[\u200b](#beefy \"Direct link to beefy\")\n\n----------------------------------------\n\n### reportEquivocation(equivocation\\_proof: `SpConsensusBeefyEquivocationProof`, key\\_owner\\_proof: `SpSessionMembershipProof`)[\u200b](#reportequivocationequivocation_proof-spconsensusbeefyequivocationproof-key_owner_proof-spsessionmembershipproof \"Direct link to reportequivocationequivocation_proof-spconsensusbeefyequivocationproof-key_owner_proof-spsessionmembershipproof\")\n\n*   **interface**: `api.tx.beefy.reportEquivocation`\n*   **summary**: See \\[`Pallet::report_equivocation`\\].\n\n### reportEquivocationUnsigned(equivocation\\_proof: `SpConsensusBeefyEquivocationProof`, key\\_owner\\_proof: `SpSessionMembershipProof`)[\u200b](#reportequivocationunsignedequivocation_proof-spconsensusbeefyequivocationproof-key_owner_proof-spsessionmembershipproof \"Direct link to reportequivocationunsignedequivocation_proof-spconsensusbeefyequivocationproof-key_owner_proof-spsessionmembershipproof\")\n\n*   **interface**: `api.tx.beefy.reportEquivocationUnsigned`\n*   **summary**: See \\[`Pallet::report_equivocation_unsigned`\\].\n\n* * *\n\nbounties[\u200b](#bounties \"Direct link to bounties\")\n\n-------------------------------------------------\n\n### acceptCurator(bounty\\_id: `Compact<u32>`)[\u200b](#acceptcuratorbounty_id-compactu32 \"Direct link to acceptcuratorbounty_id-compactu32\")\n\n*   **interface**: `api.tx.bounties.acceptCurator`\n*   **summary**: See \\[`Pallet::accept_curator`\\].\n\n### approveBounty(bounty\\_id: `Compact<u32>`)[\u200b](#approvebountybounty_id-compactu32 \"Direct link to approvebountybounty_id-compactu32\")\n\n*   **interface**: `api.tx.bounties.approveBounty`\n*   **summary**: See \\[`Pallet::approve_bounty`\\].\n\n### awardBounty(bounty\\_id: `Compact<u32>`, beneficiary: `MultiAddress`)[\u200b](#awardbountybounty_id-compactu32-beneficiary-multiaddress \"Direct link to awardbountybounty_id-compactu32-beneficiary-multiaddress\")\n\n*   **interface**: `api.tx.bounties.awardBounty`\n*   **summary**: See \\[`Pallet::award_bounty`\\].\n\n### claimBounty(bounty\\_id: `Compact<u32>`)[\u200b](#claimbountybounty_id-compactu32 \"Direct link to claimbountybounty_id-compactu32\")\n\n*   **interface**: `api.tx.bounties.claimBounty`\n*   **summary**: See \\[`Pallet::claim_bounty`\\].\n\n### closeBounty(bounty\\_id: `Compact<u32>`)[\u200b](#closebountybounty_id-compactu32 \"Direct link to closebountybounty_id-compactu32\")\n\n*   **interface**: `api.tx.bounties.closeBounty`\n*   **summary**: See \\[`Pallet::close_bounty`\\].\n\n### extendBountyExpiry(bounty\\_id: `Compact<u32>`, remark: `Bytes`)[\u200b](#extendbountyexpirybounty_id-compactu32-remark-bytes \"Direct link to extendbountyexpirybounty_id-compactu32-remark-bytes\")\n\n*   **interface**: `api.tx.bounties.extendBountyExpiry`\n*   **summary**: See \\[`Pallet::extend_bounty_expiry`\\].\n\n### proposeBounty(value: `Compact<u128>`, description: `Bytes`)[\u200b](#proposebountyvalue-compactu128-description-bytes \"Direct link to proposebountyvalue-compactu128-description-bytes\")\n\n*   **interface**: `api.tx.bounties.proposeBounty`\n*   **summary**: See \\[`Pallet::propose_bounty`\\].\n\n### proposeCurator(bounty\\_id: `Compact<u32>`, curator: `MultiAddress`, fee: `Compact<u128>`)[\u200b](#proposecuratorbounty_id-compactu32-curator-multiaddress-fee-compactu128 \"Direct link to proposecuratorbounty_id-compactu32-curator-multiaddress-fee-compactu128\")\n\n*   **interface**: `api.tx.bounties.proposeCurator`\n*   **summary**: See \\[`Pallet::propose_curator`\\].\n\n### unassignCurator(bounty\\_id: `Compact<u32>`)[\u200b](#unassigncuratorbounty_id-compactu32 \"Direct link to unassigncuratorbounty_id-compactu32\")\n\n*   **interface**: `api.tx.bounties.unassignCurator`\n*   **summary**: See \\[`Pallet::unassign_curator`\\].\n\n* * *\n\nchildBounties[\u200b](#childbounties \"Direct link to childBounties\")\n\n----------------------------------------------------------------\n\n### acceptCurator(parent\\_bounty\\_id: `Compact<u32>`, child\\_bounty\\_id: `Compact<u32>`)[\u200b](#acceptcuratorparent_bounty_id-compactu32-child_bounty_id-compactu32 \"Direct link to acceptcuratorparent_bounty_id-compactu32-child_bounty_id-compactu32\")\n\n*   **interface**: `api.tx.childBounties.acceptCurator`\n*   **summary**: See \\[`Pallet::accept_curator`\\].\n\n### addChildBounty(parent\\_bounty\\_id: `Compact<u32>`, value: `Compact<u128>`, description: `Bytes`)[\u200b](#addchildbountyparent_bounty_id-compactu32-value-compactu128-description-bytes \"Direct link to addchildbountyparent_bounty_id-compactu32-value-compactu128-description-bytes\")\n\n*   **interface**: `api.tx.childBounties.addChildBounty`\n*   **summary**: See \\[`Pallet::add_child_bounty`\\].\n\n### awardChildBounty(parent\\_bounty\\_id: `Compact<u32>`, child\\_bounty\\_id: `Compact<u32>`, beneficiary: `MultiAddress`)[\u200b](#awardchildbountyparent_bounty_id-compactu32-child_bounty_id-compactu32-beneficiary-multiaddress \"Direct link to awardchildbountyparent_bounty_id-compactu32-child_bounty_id-compactu32-beneficiary-multiaddress\")\n\n*   **interface**: `api.tx.childBounties.awardChildBounty`\n*   **summary**: See \\[`Pallet::award_child_bounty`\\].\n\n### claimChildBounty(parent\\_bounty\\_id: `Compact<u32>`, child\\_bounty\\_id: `Compact<u32>`)[\u200b](#claimchildbountyparent_bounty_id-compactu32-child_bounty_id-compactu32 \"Direct link to claimchildbountyparent_bounty_id-compactu32-child_bounty_id-compactu32\")\n\n*   **interface**: `api.tx.childBounties.claimChildBounty`\n*   **summary**: See \\[`Pallet::claim_child_bounty`\\].\n\n### closeChildBounty(parent\\_bounty\\_id: `Compact<u32>`, child\\_bounty\\_id: `Compact<u32>`)[\u200b](#closechildbountyparent_bounty_id-compactu32-child_bounty_id-compactu32 \"Direct link to closechildbountyparent_bounty_id-compactu32-child_bounty_id-compactu32\")\n\n*   **interface**: `api.tx.childBounties.closeChildBounty`\n*   **summary**: See \\[`Pallet::close_child_bounty`\\].\n\n### proposeCurator(parent\\_bounty\\_id: `Compact<u32>`, child\\_bounty\\_id: `Compact<u32>`, curator: `MultiAddress`, fee: `Compact<u128>`)[\u200b](#proposecuratorparent_bounty_id-compactu32-child_bounty_id-compactu32-curator-multiaddress-fee-compactu128 \"Direct link to proposecuratorparent_bounty_id-compactu32-child_bounty_id-compactu32-curator-multiaddress-fee-compactu128\")\n\n*   **interface**: `api.tx.childBounties.proposeCurator`\n*   **summary**: See \\[`Pallet::propose_curator`\\].\n\n### unassignCurator(parent\\_bounty\\_id: `Compact<u32>`, child\\_bounty\\_id: `Compact<u32>`)[\u200b](#unassigncuratorparent_bounty_id-compactu32-child_bounty_id-compactu32 \"Direct link to unassigncuratorparent_bounty_id-compactu32-child_bounty_id-compactu32\")\n\n*   **interface**: `api.tx.childBounties.unassignCurator`\n*   **summary**: See \\[`Pallet::unassign_curator`\\].\n\n* * *\n\nclaims[\u200b](#claims \"Direct link to claims\")\n\n-------------------------------------------\n\n### attest(statement: `Bytes`)[\u200b](#atteststatement-bytes \"Direct link to atteststatement-bytes\")\n\n*   **interface**: `api.tx.claims.attest`\n*   **summary**: See \\[`Pallet::attest`\\].\n\n### claim(dest: `AccountId32`, ethereum\\_signature: `PolkadotRuntimeCommonClaimsEcdsaSignature`)[\u200b](#claimdest-accountid32-ethereum_signature-polkadotruntimecommonclaimsecdsasignature \"Direct link to claimdest-accountid32-ethereum_signature-polkadotruntimecommonclaimsecdsasignature\")\n\n*   **interface**: `api.tx.claims.claim`\n*   **summary**: See \\[`Pallet::claim`\\].\n\n### claimAttest(dest: `AccountId32`, ethereum\\_signature: `PolkadotRuntimeCommonClaimsEcdsaSignature`, statement: `Bytes`)[\u200b](#claimattestdest-accountid32-ethereum_signature-polkadotruntimecommonclaimsecdsasignature-statement-bytes \"Direct link to claimattestdest-accountid32-ethereum_signature-polkadotruntimecommonclaimsecdsasignature-statement-bytes\")\n\n*   **interface**: `api.tx.claims.claimAttest`\n*   **summary**: See \\[`Pallet::claim_attest`\\].\n\n### mintClaim(who: `EthereumAddress`, value: `u128`, vesting\\_schedule: `Option<(u128,u128,u32)>`, statement: `Option<PolkadotRuntimeCommonClaimsStatementKind>`)[\u200b](#mintclaimwho-ethereumaddress-value-u128-vesting_schedule-optionu128u128u32-statement-optionpolkadotruntimecommonclaimsstatementkind \"Direct link to mintclaimwho-ethereumaddress-value-u128-vesting_schedule-optionu128u128u32-statement-optionpolkadotruntimecommonclaimsstatementkind\")\n\n*   **interface**: `api.tx.claims.mintClaim`\n*   **summary**: See \\[`Pallet::mint_claim`\\].\n\n### moveClaim(old: `EthereumAddress`, new: `EthereumAddress`, maybe\\_preclaim: `Option<AccountId32>`)[\u200b](#moveclaimold-ethereumaddress-new-ethereumaddress-maybe_preclaim-optionaccountid32 \"Direct link to moveclaimold-ethereumaddress-new-ethereumaddress-maybe_preclaim-optionaccountid32\")\n\n*   **interface**: `api.tx.claims.moveClaim`\n*   **summary**: See \\[`Pallet::move_claim`\\].\n\n* * *\n\nconfiguration[\u200b](#configuration \"Direct link to configuration\")\n\n----------------------------------------------------------------\n\n### setAsyncBackingParams(new: `PolkadotPrimitivesVstagingAsyncBackingParams`)[\u200b](#setasyncbackingparamsnew-polkadotprimitivesvstagingasyncbackingparams \"Direct link to setasyncbackingparamsnew-polkadotprimitivesvstagingasyncbackingparams\")\n\n*   **interface**: `api.tx.configuration.setAsyncBackingParams`\n*   **summary**: See \\[`Pallet::set_async_backing_params`\\].\n\n### setBypassConsistencyCheck(new: `bool`)[\u200b](#setbypassconsistencychecknew-bool \"Direct link to setbypassconsistencychecknew-bool\")\n\n*   **interface**: `api.tx.configuration.setBypassConsistencyCheck`\n*   **summary**: See \\[`Pallet::set_bypass_consistency_check`\\].\n\n### setCodeRetentionPeriod(new: `u32`)[\u200b](#setcoderetentionperiodnew-u32 \"Direct link to setcoderetentionperiodnew-u32\")\n\n*   **interface**: `api.tx.configuration.setCodeRetentionPeriod`\n*   **summary**: See \\[`Pallet::set_code_retention_period`\\].\n\n### setDisputePeriod(new: `u32`)[\u200b](#setdisputeperiodnew-u32 \"Direct link to setdisputeperiodnew-u32\")\n\n*   **interface**: `api.tx.configuration.setDisputePeriod`\n*   **summary**: See \\[`Pallet::set_dispute_period`\\].\n\n### setDisputePostConclusionAcceptancePeriod(new: `u32`)[\u200b](#setdisputepostconclusionacceptanceperiodnew-u32 \"Direct link to setdisputepostconclusionacceptanceperiodnew-u32\")\n\n*   **interface**: `api.tx.configuration.setDisputePostConclusionAcceptancePeriod`\n*   **summary**: See \\[`Pallet::set_dispute_post_conclusion_acceptance_period`\\].\n\n### setExecutorParams(new: `PolkadotPrimitivesV5ExecutorParams`)[\u200b](#setexecutorparamsnew-polkadotprimitivesv5executorparams \"Direct link to setexecutorparamsnew-polkadotprimitivesv5executorparams\")\n\n*   **interface**: `api.tx.configuration.setExecutorParams`\n*   **summary**: See \\[`Pallet::set_executor_params`\\].\n\n### setGroupRotationFrequency(new: `u32`)[\u200b](#setgrouprotationfrequencynew-u32 \"Direct link to setgrouprotationfrequencynew-u32\")\n\n*   **interface**: `api.tx.configuration.setGroupRotationFrequency`\n*   **summary**: See \\[`Pallet::set_group_rotation_frequency`\\].\n\n### setHrmpChannelMaxCapacity(new: `u32`)[\u200b](#sethrmpchannelmaxcapacitynew-u32 \"Direct link to sethrmpchannelmaxcapacitynew-u32\")\n\n*   **interface**: `api.tx.configuration.setHrmpChannelMaxCapacity`\n*   **summary**: See \\[`Pallet::set_hrmp_channel_max_capacity`\\].\n\n### setHrmpChannelMaxMessageSize(new: `u32`)[\u200b](#sethrmpchannelmaxmessagesizenew-u32 \"Direct link to sethrmpchannelmaxmessagesizenew-u32\")\n\n*   **interface**: `api.tx.configuration.setHrmpChannelMaxMessageSize`\n*   **summary**: See \\[`Pallet::set_hrmp_channel_max_message_size`\\].\n\n### setHrmpChannelMaxTotalSize(new: `u32`)[\u200b](#sethrmpchannelmaxtotalsizenew-u32 \"Direct link to sethrmpchannelmaxtotalsizenew-u32\")\n\n*   **interface**: `api.tx.configuration.setHrmpChannelMaxTotalSize`\n*   **summary**: See \\[`Pallet::set_hrmp_channel_max_total_size`\\].\n\n### setHrmpMaxMessageNumPerCandidate(new: `u32`)[\u200b](#sethrmpmaxmessagenumpercandidatenew-u32 \"Direct link to sethrmpmaxmessagenumpercandidatenew-u32\")\n\n*   **interface**: `api.tx.configuration.setHrmpMaxMessageNumPerCandidate`\n*   **summary**: See \\[`Pallet::set_hrmp_max_message_num_per_candidate`\\].\n\n### setHrmpMaxParachainInboundChannels(new: `u32`)[\u200b](#sethrmpmaxparachaininboundchannelsnew-u32 \"Direct link to sethrmpmaxparachaininboundchannelsnew-u32\")\n\n*   **interface**: `api.tx.configuration.setHrmpMaxParachainInboundChannels`\n*   **summary**: See \\[`Pallet::set_hrmp_max_parachain_inbound_channels`\\].\n\n### setHrmpMaxParachainOutboundChannels(new: `u32`)[\u200b](#sethrmpmaxparachainoutboundchannelsnew-u32 \"Direct link to sethrmpmaxparachainoutboundchannelsnew-u32\")\n\n*   **interface**: `api.tx.configuration.setHrmpMaxParachainOutboundChannels`\n*   **summary**: See \\[`Pallet::set_hrmp_max_parachain_outbound_channels`\\].\n\n### setHrmpOpenRequestTtl(new: `u32`)[\u200b](#sethrmpopenrequestttlnew-u32 \"Direct link to sethrmpopenrequestttlnew-u32\")\n\n*   **interface**: `api.tx.configuration.setHrmpOpenRequestTtl`\n*   **summary**: See \\[`Pallet::set_hrmp_open_request_ttl`\\].\n\n### setHrmpRecipientDeposit(new: `u128`)[\u200b](#sethrmprecipientdepositnew-u128 \"Direct link to sethrmprecipientdepositnew-u128\")\n\n*   **interface**: `api.tx.configuration.setHrmpRecipientDeposit`\n*   **summary**: See \\[`Pallet::set_hrmp_recipient_deposit`\\].\n\n### setHrmpSenderDeposit(new: `u128`)[\u200b](#sethrmpsenderdepositnew-u128 \"Direct link to sethrmpsenderdepositnew-u128\")\n\n*   **interface**: `api.tx.configuration.setHrmpSenderDeposit`\n*   **summary**: See \\[`Pallet::set_hrmp_sender_deposit`\\].\n\n### setMaxCodeSize(new: `u32`)[\u200b](#setmaxcodesizenew-u32 \"Direct link to setmaxcodesizenew-u32\")\n\n*   **interface**: `api.tx.configuration.setMaxCodeSize`\n*   **summary**: See \\[`Pallet::set_max_code_size`\\].\n\n### setMaxDownwardMessageSize(new: `u32`)[\u200b](#setmaxdownwardmessagesizenew-u32 \"Direct link to setmaxdownwardmessagesizenew-u32\")\n\n*   **interface**: `api.tx.configuration.setMaxDownwardMessageSize`\n*   **summary**: See \\[`Pallet::set_max_downward_message_size`\\].\n\n### setMaxHeadDataSize(new: `u32`)[\u200b](#setmaxheaddatasizenew-u32 \"Direct link to setmaxheaddatasizenew-u32\")\n\n*   **interface**: `api.tx.configuration.setMaxHeadDataSize`\n*   **summary**: See \\[`Pallet::set_max_head_data_size`\\].\n\n### setMaxPovSize(new: `u32`)[\u200b](#setmaxpovsizenew-u32 \"Direct link to setmaxpovsizenew-u32\")\n\n*   **interface**: `api.tx.configuration.setMaxPovSize`\n*   **summary**: See \\[`Pallet::set_max_pov_size`\\].\n\n### setMaxUpwardMessageNumPerCandidate(new: `u32`)[\u200b](#setmaxupwardmessagenumpercandidatenew-u32 \"Direct link to setmaxupwardmessagenumpercandidatenew-u32\")\n\n*   **interface**: `api.tx.configuration.setMaxUpwardMessageNumPerCandidate`\n*   **summary**: See \\[`Pallet::set_max_upward_message_num_per_candidate`\\].\n\n### setMaxUpwardMessageSize(new: `u32`)[\u200b](#setmaxupwardmessagesizenew-u32 \"Direct link to setmaxupwardmessagesizenew-u32\")\n\n*   **interface**: `api.tx.configuration.setMaxUpwardMessageSize`\n*   **summary**: See \\[`Pallet::set_max_upward_message_size`\\].\n\n### setMaxUpwardQueueCount(new: `u32`)[\u200b](#setmaxupwardqueuecountnew-u32 \"Direct link to setmaxupwardqueuecountnew-u32\")\n\n*   **interface**: `api.tx.configuration.setMaxUpwardQueueCount`\n*   **summary**: See \\[`Pallet::set_max_upward_queue_count`\\].\n\n### setMaxUpwardQueueSize(new: `u32`)[\u200b](#setmaxupwardqueuesizenew-u32 \"Direct link to setmaxupwardqueuesizenew-u32\")\n\n*   **interface**: `api.tx.configuration.setMaxUpwardQueueSize`\n*   **summary**: See \\[`Pallet::set_max_upward_queue_size`\\].\n\n### setMaxValidators(new: `Option<u32>`)[\u200b](#setmaxvalidatorsnew-optionu32 \"Direct link to setmaxvalidatorsnew-optionu32\")\n\n*   **interface**: `api.tx.configuration.setMaxValidators`\n*   **summary**: See \\[`Pallet::set_max_validators`\\].\n\n### setMaxValidatorsPerCore(new: `Option<u32>`)[\u200b](#setmaxvalidatorspercorenew-optionu32 \"Direct link to setmaxvalidatorspercorenew-optionu32\")\n\n*   **interface**: `api.tx.configuration.setMaxValidatorsPerCore`\n*   **summary**: See \\[`Pallet::set_max_validators_per_core`\\].\n\n### setMinimumValidationUpgradeDelay(new: `u32`)[\u200b](#setminimumvalidationupgradedelaynew-u32 \"Direct link to setminimumvalidationupgradedelaynew-u32\")\n\n*   **interface**: `api.tx.configuration.setMinimumValidationUpgradeDelay`\n*   **summary**: See \\[`Pallet::set_minimum_validation_upgrade_delay`\\].\n\n### setNDelayTranches(new: `u32`)[\u200b](#setndelaytranchesnew-u32 \"Direct link to setndelaytranchesnew-u32\")\n\n*   **interface**: `api.tx.configuration.setNDelayTranches`\n*   **summary**: See \\[`Pallet::set_n_delay_tranches`\\].\n\n### setNeededApprovals(new: `u32`)[\u200b](#setneededapprovalsnew-u32 \"Direct link to setneededapprovalsnew-u32\")\n\n*   **interface**: `api.tx.configuration.setNeededApprovals`\n*   **summary**: See \\[`Pallet::set_needed_approvals`\\].\n\n### setNoShowSlots(new: `u32`)[\u200b](#setnoshowslotsnew-u32 \"Direct link to setnoshowslotsnew-u32\")\n\n*   **interface**: `api.tx.configuration.setNoShowSlots`\n*   **summary**: See \\[`Pallet::set_no_show_slots`\\].\n\n### setOnDemandBaseFee(new: `u128`)[\u200b](#setondemandbasefeenew-u128 \"Direct link to setondemandbasefeenew-u128\")\n\n*   **interface**: `api.tx.configuration.setOnDemandBaseFee`\n*   **summary**: See \\[`Pallet::set_on_demand_base_fee`\\].\n\n### setOnDemandCores(new: `u32`)[\u200b](#setondemandcoresnew-u32 \"Direct link to setondemandcoresnew-u32\")\n\n*   **interface**: `api.tx.configuration.setOnDemandCores`\n*   **summary**: See \\[`Pallet::set_on_demand_cores`\\].\n\n### setOnDemandFeeVariability(new: `Perbill`)[\u200b](#setondemandfeevariabilitynew-perbill \"Direct link to setondemandfeevariabilitynew-perbill\")\n\n*   **interface**: `api.tx.configuration.setOnDemandFeeVariability`\n*   **summary**: See \\[`Pallet::set_on_demand_fee_variability`\\].\n\n### setOnDemandQueueMaxSize(new: `u32`)[\u200b](#setondemandqueuemaxsizenew-u32 \"Direct link to setondemandqueuemaxsizenew-u32\")\n\n*   **interface**: `api.tx.configuration.setOnDemandQueueMaxSize`\n*   **summary**: See \\[`Pallet::set_on_demand_queue_max_size`\\].\n\n### setOnDemandRetries(new: `u32`)[\u200b](#setondemandretriesnew-u32 \"Direct link to setondemandretriesnew-u32\")\n\n*   **interface**: `api.tx.configuration.setOnDemandRetries`\n*   **summary**: See \\[`Pallet::set_on_demand_retries`\\].\n\n### setOnDemandTargetQueueUtilization(new: `Perbill`)[\u200b](#setondemandtargetqueueutilizationnew-perbill \"Direct link to setondemandtargetqueueutilizationnew-perbill\")\n\n*   **interface**: `api.tx.configuration.setOnDemandTargetQueueUtilization`\n*   **summary**: See \\[`Pallet::set_on_demand_target_queue_utilization`\\].\n\n### setOnDemandTtl(new: `u32`)[\u200b](#setondemandttlnew-u32 \"Direct link to setondemandttlnew-u32\")\n\n*   **interface**: `api.tx.configuration.setOnDemandTtl`\n*   **summary**: See \\[`Pallet::set_on_demand_ttl`\\].\n\n### setParasAvailabilityPeriod(new: `u32`)[\u200b](#setparasavailabilityperiodnew-u32 \"Direct link to setparasavailabilityperiodnew-u32\")\n\n*   **interface**: `api.tx.configuration.setParasAvailabilityPeriod`\n*   **summary**: See \\[`Pallet::set_paras_availability_period`\\].\n\n### setPvfVotingTtl(new: `u32`)[\u200b](#setpvfvotingttlnew-u32 \"Direct link to setpvfvotingttlnew-u32\")\n\n*   **interface**: `api.tx.configuration.setPvfVotingTtl`\n*   **summary**: See \\[`Pallet::set_pvf_voting_ttl`\\].\n\n### setRelayVrfModuloSamples(new: `u32`)[\u200b](#setrelayvrfmodulosamplesnew-u32 \"Direct link to setrelayvrfmodulosamplesnew-u32\")\n\n*   **interface**: `api.tx.configuration.setRelayVrfModuloSamples`\n*   **summary**: See \\[`Pallet::set_relay_vrf_modulo_samples`\\].\n\n### setSchedulingLookahead(new: `u32`)[\u200b](#setschedulinglookaheadnew-u32 \"Direct link to setschedulinglookaheadnew-u32\")\n\n*   **interface**: `api.tx.configuration.setSchedulingLookahead`\n*   **summary**: See \\[`Pallet::set_scheduling_lookahead`\\].\n\n### setValidationUpgradeCooldown(new: `u32`)[\u200b](#setvalidationupgradecooldownnew-u32 \"Direct link to setvalidationupgradecooldownnew-u32\")\n\n*   **interface**: `api.tx.configuration.setValidationUpgradeCooldown`\n*   **summary**: See \\[`Pallet::set_validation_upgrade_cooldown`\\].\n\n### setValidationUpgradeDelay(new: `u32`)[\u200b](#setvalidationupgradedelaynew-u32 \"Direct link to setvalidationupgradedelaynew-u32\")\n\n*   **interface**: `api.tx.configuration.setValidationUpgradeDelay`\n*   **summary**: See \\[`Pallet::set_validation_upgrade_delay`\\].\n\n### setZerothDelayTrancheWidth(new: `u32`)[\u200b](#setzerothdelaytranchewidthnew-u32 \"Direct link to setzerothdelaytranchewidthnew-u32\")\n\n*   **interface**: `api.tx.configuration.setZerothDelayTrancheWidth`\n*   **summary**: See \\[`Pallet::set_zeroth_delay_tranche_width`\\].\n\n* * *\n\nconvictionVoting[\u200b](#convictionvoting \"Direct link to convictionVoting\")\n\n-------------------------------------------------------------------------\n\n### delegate(class: `u16`, to: `MultiAddress`, conviction: `PalletConvictionVotingConviction`, balance: `u128`)[\u200b](#delegateclass-u16-to-multiaddress-conviction-palletconvictionvotingconviction-balance-u128 \"Direct link to delegateclass-u16-to-multiaddress-conviction-palletconvictionvotingconviction-balance-u128\")\n\n*   **interface**: `api.tx.convictionVoting.delegate`\n*   **summary**: See \\[`Pallet::delegate`\\].\n\n### removeOtherVote(target: `MultiAddress`, class: `u16`, index: `u32`)[\u200b](#removeothervotetarget-multiaddress-class-u16-index-u32 \"Direct link to removeothervotetarget-multiaddress-class-u16-index-u32\")\n\n*   **interface**: `api.tx.convictionVoting.removeOtherVote`\n*   **summary**: See \\[`Pallet::remove_other_vote`\\].\n\n### removeVote(class: `Option<u16>`, index: `u32`)[\u200b](#removevoteclass-optionu16-index-u32 \"Direct link to removevoteclass-optionu16-index-u32\")\n\n*   **interface**: `api.tx.convictionVoting.removeVote`\n*   **summary**: See \\[`Pallet::remove_vote`\\].\n\n### undelegate(class: `u16`)[\u200b](#undelegateclass-u16 \"Direct link to undelegateclass-u16\")\n\n*   **interface**: `api.tx.convictionVoting.undelegate`\n*   **summary**: See \\[`Pallet::undelegate`\\].\n\n### unlock(class: `u16`, target: `MultiAddress`)[\u200b](#unlockclass-u16-target-multiaddress \"Direct link to unlockclass-u16-target-multiaddress\")\n\n*   **interface**: `api.tx.convictionVoting.unlock`\n*   **summary**: See \\[`Pallet::unlock`\\].\n\n### vote(poll\\_index: `Compact<u32>`, vote: `PalletConvictionVotingVoteAccountVote`)[\u200b](#votepoll_index-compactu32-vote-palletconvictionvotingvoteaccountvote \"Direct link to votepoll_index-compactu32-vote-palletconvictionvotingvoteaccountvote\")\n\n*   **interface**: `api.tx.convictionVoting.vote`\n*   **summary**: See \\[`Pallet::vote`\\].\n\n* * *\n\ncrowdloan[\u200b](#crowdloan \"Direct link to crowdloan\")\n\n----------------------------------------------------\n\n### addMemo(index: `u32`, memo: `Bytes`)[\u200b](#addmemoindex-u32-memo-bytes \"Direct link to addmemoindex-u32-memo-bytes\")\n\n*   **interface**: `api.tx.crowdloan.addMemo`\n*   **summary**: See \\[`Pallet::add_memo`\\].\n\n### contribute(index: `Compact<u32>`, value: `Compact<u128>`, signature: `Option<SpRuntimeMultiSignature>`)[\u200b](#contributeindex-compactu32-value-compactu128-signature-optionspruntimemultisignature \"Direct link to contributeindex-compactu32-value-compactu128-signature-optionspruntimemultisignature\")\n\n*   **interface**: `api.tx.crowdloan.contribute`\n*   **summary**: See \\[`Pallet::contribute`\\].\n\n### contributeAll(index: `Compact<u32>`, signature: `Option<SpRuntimeMultiSignature>`)[\u200b](#contributeallindex-compactu32-signature-optionspruntimemultisignature \"Direct link to contributeallindex-compactu32-signature-optionspruntimemultisignature\")\n\n*   **interface**: `api.tx.crowdloan.contributeAll`\n*   **summary**: See \\[`Pallet::contribute_all`\\].\n\n### create(index: `Compact<u32>`, cap: `Compact<u128>`, first\\_period: `Compact<u32>`, last\\_period: `Compact<u32>`, end: `Compact<u32>`, verifier: `Option<SpRuntimeMultiSigner>`)[\u200b](#createindex-compactu32-cap-compactu128-first_period-compactu32-last_period-compactu32-end-compactu32-verifier-optionspruntimemultisigner \"Direct link to createindex-compactu32-cap-compactu128-first_period-compactu32-last_period-compactu32-end-compactu32-verifier-optionspruntimemultisigner\")\n\n*   **interface**: `api.tx.crowdloan.create`\n*   **summary**: See \\[`Pallet::create`\\].\n\n### dissolve(index: `Compact<u32>`)[\u200b](#dissolveindex-compactu32 \"Direct link to dissolveindex-compactu32\")\n\n*   **interface**: `api.tx.crowdloan.dissolve`\n*   **summary**: See \\[`Pallet::dissolve`\\].\n\n### edit(index: `Compact<u32>`, cap: `Compact<u128>`, first\\_period: `Compact<u32>`, last\\_period: `Compact<u32>`, end: `Compact<u32>`, verifier: `Option<SpRuntimeMultiSigner>`)[\u200b](#editindex-compactu32-cap-compactu128-first_period-compactu32-last_period-compactu32-end-compactu32-verifier-optionspruntimemultisigner \"Direct link to editindex-compactu32-cap-compactu128-first_period-compactu32-last_period-compactu32-end-compactu32-verifier-optionspruntimemultisigner\")\n\n*   **interface**: `api.tx.crowdloan.edit`\n*   **summary**: See \\[`Pallet::edit`\\].\n\n### poke(index: `u32`)[\u200b](#pokeindex-u32 \"Direct link to pokeindex-u32\")\n\n*   **interface**: `api.tx.crowdloan.poke`\n*   **summary**: See \\[`Pallet::poke`\\].\n\n### refund(index: `Compact<u32>`)[\u200b](#refundindex-compactu32 \"Direct link to refundindex-compactu32\")\n\n*   **interface**: `api.tx.crowdloan.refund`\n*   **summary**: See \\[`Pallet::refund`\\].\n\n### withdraw(who: `AccountId32`, index: `Compact<u32>`)[\u200b](#withdrawwho-accountid32-index-compactu32 \"Direct link to withdrawwho-accountid32-index-compactu32\")\n\n*   **interface**: `api.tx.crowdloan.withdraw`\n*   **summary**: See \\[`Pallet::withdraw`\\].\n\n* * *\n\nelectionProviderMultiPhase[\u200b](#electionprovidermultiphase \"Direct link to electionProviderMultiPhase\")\n\n-------------------------------------------------------------------------------------------------------\n\n### governanceFallback(maybe\\_max\\_voters: `Option<u32>`, maybe\\_max\\_targets: `Option<u32>`)[\u200b](#governancefallbackmaybe_max_voters-optionu32-maybe_max_targets-optionu32 \"Direct link to governancefallbackmaybe_max_voters-optionu32-maybe_max_targets-optionu32\")\n\n*   **interface**: `api.tx.electionProviderMultiPhase.governanceFallback`\n*   **summary**: See \\[`Pallet::governance_fallback`\\].\n\n### setEmergencyElectionResult(supports: `Vec<(AccountId32,SpNposElectionsSupport)>`)[\u200b](#setemergencyelectionresultsupports-vecaccountid32spnposelectionssupport \"Direct link to setemergencyelectionresultsupports-vecaccountid32spnposelectionssupport\")\n\n*   **interface**: `api.tx.electionProviderMultiPhase.setEmergencyElectionResult`\n*   **summary**: See \\[`Pallet::set_emergency_election_result`\\].\n\n### setMinimumUntrustedScore(maybe\\_next\\_score: `Option<SpNposElectionsElectionScore>`)[\u200b](#setminimumuntrustedscoremaybe_next_score-optionspnposelectionselectionscore \"Direct link to setminimumuntrustedscoremaybe_next_score-optionspnposelectionselectionscore\")\n\n*   **interface**: `api.tx.electionProviderMultiPhase.setMinimumUntrustedScore`\n*   **summary**: See \\[`Pallet::set_minimum_untrusted_score`\\].\n\n### submit(raw\\_solution: `PalletElectionProviderMultiPhaseRawSolution`)[\u200b](#submitraw_solution-palletelectionprovidermultiphaserawsolution \"Direct link to submitraw_solution-palletelectionprovidermultiphaserawsolution\")\n\n*   **interface**: `api.tx.electionProviderMultiPhase.submit`\n*   **summary**: See \\[`Pallet::submit`\\].\n\n### submitUnsigned(raw\\_solution: `PalletElectionProviderMultiPhaseRawSolution`, witness: `PalletElectionProviderMultiPhaseSolutionOrSnapshotSize`)[\u200b](#submitunsignedraw_solution-palletelectionprovidermultiphaserawsolution-witness-palletelectionprovidermultiphasesolutionorsnapshotsize \"Direct link to submitunsignedraw_solution-palletelectionprovidermultiphaserawsolution-witness-palletelectionprovidermultiphasesolutionorsnapshotsize\")\n\n*   **interface**: `api.tx.electionProviderMultiPhase.submitUnsigned`\n*   **summary**: See \\[`Pallet::submit_unsigned`\\].\n\n* * *\n\nfastUnstake[\u200b](#fastunstake \"Direct link to fastUnstake\")\n\n----------------------------------------------------------\n\n### control(eras\\_to\\_check: `u32`)[\u200b](#controleras_to_check-u32 \"Direct link to controleras_to_check-u32\")\n\n*   **interface**: `api.tx.fastUnstake.control`\n*   **summary**: See \\[`Pallet::control`\\].\n\n### deregister()[\u200b](#deregister \"Direct link to deregister()\")\n\n*   **interface**: `api.tx.fastUnstake.deregister`\n*   **summary**: See \\[`Pallet::deregister`\\].\n\n### registerFastUnstake()[\u200b](#registerfastunstake \"Direct link to registerFastUnstake()\")\n\n*   **interface**: `api.tx.fastUnstake.registerFastUnstake`\n*   **summary**: See \\[`Pallet::register_fast_unstake`\\].\n\n* * *\n\nfellowshipCollective[\u200b](#fellowshipcollective \"Direct link to fellowshipCollective\")\n\n-------------------------------------------------------------------------------------\n\n### addMember(who: `MultiAddress`)[\u200b](#addmemberwho-multiaddress \"Direct link to addmemberwho-multiaddress\")\n\n*   **interface**: `api.tx.fellowshipCollective.addMember`\n*   **summary**: See \\[`Pallet::add_member`\\].\n\n### cleanupPoll(poll\\_index: `u32`, max: `u32`)[\u200b](#cleanuppollpoll_index-u32-max-u32 \"Direct link to cleanuppollpoll_index-u32-max-u32\")\n\n*   **interface**: `api.tx.fellowshipCollective.cleanupPoll`\n*   **summary**: See \\[`Pallet::cleanup_poll`\\].\n\n### demoteMember(who: `MultiAddress`)[\u200b](#demotememberwho-multiaddress \"Direct link to demotememberwho-multiaddress\")\n\n*   **interface**: `api.tx.fellowshipCollective.demoteMember`\n*   **summary**: See \\[`Pallet::demote_member`\\].\n\n### promoteMember(who: `MultiAddress`)[\u200b](#promotememberwho-multiaddress \"Direct link to promotememberwho-multiaddress\")\n\n*   **interface**: `api.tx.fellowshipCollective.promoteMember`\n*   **summary**: See \\[`Pallet::promote_member`\\].\n\n### removeMember(who: `MultiAddress`, min\\_rank: `u16`)[\u200b](#removememberwho-multiaddress-min_rank-u16 \"Direct link to removememberwho-multiaddress-min_rank-u16\")\n\n*   **interface**: `api.tx.fellowshipCollective.removeMember`\n*   **summary**: See \\[`Pallet::remove_member`\\].\n\n### vote(poll: `u32`, aye: `bool`)[\u200b](#votepoll-u32-aye-bool \"Direct link to votepoll-u32-aye-bool\")\n\n*   **interface**: `api.tx.fellowshipCollective.vote`\n*   **summary**: See \\[`Pallet::vote`\\].\n\n* * *\n\nfellowshipReferenda[\u200b](#fellowshipreferenda \"Direct link to fellowshipReferenda\")\n\n----------------------------------------------------------------------------------\n\n### cancel(index: `u32`)[\u200b](#cancelindex-u32 \"Direct link to cancelindex-u32\")\n\n*   **interface**: `api.tx.fellowshipReferenda.cancel`\n*   **summary**: See \\[`Pallet::cancel`\\].\n\n### kill(index: `u32`)[\u200b](#killindex-u32 \"Direct link to killindex-u32\")\n\n*   **interface**: `api.tx.fellowshipReferenda.kill`\n*   **summary**: See \\[`Pallet::kill`\\].\n\n### nudgeReferendum(index: `u32`)[\u200b](#nudgereferendumindex-u32 \"Direct link to nudgereferendumindex-u32\")\n\n*   **interface**: `api.tx.fellowshipReferenda.nudgeReferendum`\n*   **summary**: See \\[`Pallet::nudge_referendum`\\].\n\n### oneFewerDeciding(track: `u16`)[\u200b](#onefewerdecidingtrack-u16 \"Direct link to onefewerdecidingtrack-u16\")\n\n*   **interface**: `api.tx.fellowshipReferenda.oneFewerDeciding`\n*   **summary**: See \\[`Pallet::one_fewer_deciding`\\].\n\n### placeDecisionDeposit(index: `u32`)[\u200b](#placedecisiondepositindex-u32 \"Direct link to placedecisiondepositindex-u32\")\n\n*   **interface**: `api.tx.fellowshipReferenda.placeDecisionDeposit`\n*   **summary**: See \\[`Pallet::place_decision_deposit`\\].\n\n### refundDecisionDeposit(index: `u32`)[\u200b](#refunddecisiondepositindex-u32 \"Direct link to refunddecisiondepositindex-u32\")\n\n*   **interface**: `api.tx.fellowshipReferenda.refundDecisionDeposit`\n*   **summary**: See \\[`Pallet::refund_decision_deposit`\\].\n\n### refundSubmissionDeposit(index: `u32`)[\u200b](#refundsubmissiondepositindex-u32 \"Direct link to refundsubmissiondepositindex-u32\")\n\n*   **interface**: `api.tx.fellowshipReferenda.refundSubmissionDeposit`\n*   **summary**: See \\[`Pallet::refund_submission_deposit`\\].\n\n### setMetadata(index: `u32`, maybe\\_hash: `Option<H256>`)[\u200b](#setmetadataindex-u32-maybe_hash-optionh256 \"Direct link to setmetadataindex-u32-maybe_hash-optionh256\")\n\n*   **interface**: `api.tx.fellowshipReferenda.setMetadata`\n*   **summary**: See \\[`Pallet::set_metadata`\\].\n\n### submit(proposal\\_origin: `KusamaRuntimeOriginCaller`, proposal: `FrameSupportPreimagesBounded`, enactment\\_moment: `FrameSupportScheduleDispatchTime`)[\u200b](#submitproposal_origin-kusamaruntimeorigincaller-proposal-framesupportpreimagesbounded-enactment_moment-framesupportscheduledispatchtime \"Direct link to submitproposal_origin-kusamaruntimeorigincaller-proposal-framesupportpreimagesbounded-enactment_moment-framesupportscheduledispatchtime\")\n\n*   **interface**: `api.tx.fellowshipReferenda.submit`\n*   **summary**: See \\[`Pallet::submit`\\].\n\n* * *\n\ngrandpa[\u200b](#grandpa \"Direct link to grandpa\")\n\n----------------------------------------------\n\n### noteStalled(delay: `u32`, best\\_finalized\\_block\\_number: `u32`)[\u200b](#notestalleddelay-u32-best_finalized_block_number-u32 \"Direct link to notestalleddelay-u32-best_finalized_block_number-u32\")\n\n*   **interface**: `api.tx.grandpa.noteStalled`\n*   **summary**: See \\[`Pallet::note_stalled`\\].\n\n### reportEquivocation(equivocation\\_proof: `SpConsensusGrandpaEquivocationProof`, key\\_owner\\_proof: `SpSessionMembershipProof`)[\u200b](#reportequivocationequivocation_proof-spconsensusgrandpaequivocationproof-key_owner_proof-spsessionmembershipproof \"Direct link to reportequivocationequivocation_proof-spconsensusgrandpaequivocationproof-key_owner_proof-spsessionmembershipproof\")\n\n*   **interface**: `api.tx.grandpa.reportEquivocation`\n*   **summary**: See \\[`Pallet::report_equivocation`\\].\n\n### reportEquivocationUnsigned(equivocation\\_proof: `SpConsensusGrandpaEquivocationProof`, key\\_owner\\_proof: `SpSessionMembershipProof`)[\u200b](#reportequivocationunsignedequivocation_proof-spconsensusgrandpaequivocationproof-key_owner_proof-spsessionmembershipproof \"Direct link to reportequivocationunsignedequivocation_proof-spconsensusgrandpaequivocationproof-key_owner_proof-spsessionmembershipproof\")\n\n*   **interface**: `api.tx.grandpa.reportEquivocationUnsigned`\n*   **summary**: See \\[`Pallet::report_equivocation_unsigned`\\].\n\n* * *\n\nhrmp[\u200b](#hrmp \"Direct link to hrmp\")\n\n-------------------------------------\n\n### forceCleanHrmp(para: `u32`, inbound: `u32`, outbound: `u32`)[\u200b](#forcecleanhrmppara-u32-inbound-u32-outbound-u32 \"Direct link to forcecleanhrmppara-u32-inbound-u32-outbound-u32\")\n\n*   **interface**: `api.tx.hrmp.forceCleanHrmp`\n*   **summary**: See \\[`Pallet::force_clean_hrmp`\\].\n\n### forceOpenHrmpChannel(sender: `u32`, recipient: `u32`, max\\_capacity: `u32`, max\\_message\\_size: `u32`)[\u200b](#forceopenhrmpchannelsender-u32-recipient-u32-max_capacity-u32-max_message_size-u32 \"Direct link to forceopenhrmpchannelsender-u32-recipient-u32-max_capacity-u32-max_message_size-u32\")\n\n*   **interface**: `api.tx.hrmp.forceOpenHrmpChannel`\n*   **summary**: See \\[`Pallet::force_open_hrmp_channel`\\].\n\n### forceProcessHrmpClose(channels: `u32`)[\u200b](#forceprocesshrmpclosechannels-u32 \"Direct link to forceprocesshrmpclosechannels-u32\")\n\n*   **interface**: `api.tx.hrmp.forceProcessHrmpClose`\n*   **summary**: See \\[`Pallet::force_process_hrmp_close`\\].\n\n### forceProcessHrmpOpen(channels: `u32`)[\u200b](#forceprocesshrmpopenchannels-u32 \"Direct link to forceprocesshrmpopenchannels-u32\")\n\n*   **interface**: `api.tx.hrmp.forceProcessHrmpOpen`\n*   **summary**: See \\[`Pallet::force_process_hrmp_open`\\].\n\n### hrmpAcceptOpenChannel(sender: `u32`)[\u200b](#hrmpacceptopenchannelsender-u32 \"Direct link to hrmpacceptopenchannelsender-u32\")\n\n*   **interface**: `api.tx.hrmp.hrmpAcceptOpenChannel`\n*   **summary**: See \\[`Pallet::hrmp_accept_open_channel`\\].\n\n### hrmpCancelOpenRequest(channel\\_id: `PolkadotParachainPrimitivesHrmpChannelId`, open\\_requests: `u32`)[\u200b](#hrmpcancelopenrequestchannel_id-polkadotparachainprimitiveshrmpchannelid-open_requests-u32 \"Direct link to hrmpcancelopenrequestchannel_id-polkadotparachainprimitiveshrmpchannelid-open_requests-u32\")\n\n*   **interface**: `api.tx.hrmp.hrmpCancelOpenRequest`\n*   **summary**: See \\[`Pallet::hrmp_cancel_open_request`\\].\n\n### hrmpCloseChannel(channel\\_id: `PolkadotParachainPrimitivesHrmpChannelId`)[\u200b](#hrmpclosechannelchannel_id-polkadotparachainprimitiveshrmpchannelid \"Direct link to hrmpclosechannelchannel_id-polkadotparachainprimitiveshrmpchannelid\")\n\n*   **interface**: `api.tx.hrmp.hrmpCloseChannel`\n*   **summary**: See \\[`Pallet::hrmp_close_channel`\\].\n\n### hrmpInitOpenChannel(recipient: `u32`, proposed\\_max\\_capacity: `u32`, proposed\\_max\\_message\\_size: `u32`)[\u200b](#hrmpinitopenchannelrecipient-u32-proposed_max_capacity-u32-proposed_max_message_size-u32 \"Direct link to hrmpinitopenchannelrecipient-u32-proposed_max_capacity-u32-proposed_max_message_size-u32\")\n\n*   **interface**: `api.tx.hrmp.hrmpInitOpenChannel`\n*   **summary**: See \\[`Pallet::hrmp_init_open_channel`\\].\n\n* * *\n\nidentity[\u200b](#identity \"Direct link to identity\")\n\n-------------------------------------------------\n\n### addRegistrar(account: `MultiAddress`)[\u200b](#addregistraraccount-multiaddress \"Direct link to addregistraraccount-multiaddress\")\n\n*   **interface**: `api.tx.identity.addRegistrar`\n*   **summary**: See \\[`Pallet::add_registrar`\\].\n\n### addSub(sub: `MultiAddress`, data: `Data`)[\u200b](#addsubsub-multiaddress-data-data \"Direct link to addsubsub-multiaddress-data-data\")\n\n*   **interface**: `api.tx.identity.addSub`\n*   **summary**: See \\[`Pallet::add_sub`\\].\n\n### cancelRequest(reg\\_index: `u32`)[\u200b](#cancelrequestreg_index-u32 \"Direct link to cancelrequestreg_index-u32\")\n\n*   **interface**: `api.tx.identity.cancelRequest`\n*   **summary**: See \\[`Pallet::cancel_request`\\].\n\n### clearIdentity()[\u200b](#clearidentity \"Direct link to clearIdentity()\")\n\n*   **interface**: `api.tx.identity.clearIdentity`\n*   **summary**: See \\[`Pallet::clear_identity`\\].\n\n### killIdentity(target: `MultiAddress`)[\u200b](#killidentitytarget-multiaddress \"Direct link to killidentitytarget-multiaddress\")\n\n*   **interface**: `api.tx.identity.killIdentity`\n*   **summary**: See \\[`Pallet::kill_identity`\\].\n\n### provideJudgement(reg\\_index: `Compact<u32>`, target: `MultiAddress`, judgement: `PalletIdentityJudgement`, identity: `H256`)[\u200b](#providejudgementreg_index-compactu32-target-multiaddress-judgement-palletidentityjudgement-identity-h256 \"Direct link to providejudgementreg_index-compactu32-target-multiaddress-judgement-palletidentityjudgement-identity-h256\")\n\n*   **interface**: `api.tx.identity.provideJudgement`\n*   **summary**: See \\[`Pallet::provide_judgement`\\].\n\n### quitSub()[\u200b](#quitsub \"Direct link to quitSub()\")\n\n*   **interface**: `api.tx.identity.quitSub`\n*   **summary**: See \\[`Pallet::quit_sub`\\].\n\n### removeSub(sub: `MultiAddress`)[\u200b](#removesubsub-multiaddress \"Direct link to removesubsub-multiaddress\")\n\n*   **interface**: `api.tx.identity.removeSub`\n*   **summary**: See \\[`Pallet::remove_sub`\\].\n\n### renameSub(sub: `MultiAddress`, data: `Data`)[\u200b](#renamesubsub-multiaddress-data-data \"Direct link to renamesubsub-multiaddress-data-data\")\n\n*   **interface**: `api.tx.identity.renameSub`\n*   **summary**: See \\[`Pallet::rename_sub`\\].\n\n### requestJudgement(reg\\_index: `Compact<u32>`, max\\_fee: `Compact<u128>`)[\u200b](#requestjudgementreg_index-compactu32-max_fee-compactu128 \"Direct link to requestjudgementreg_index-compactu32-max_fee-compactu128\")\n\n*   **interface**: `api.tx.identity.requestJudgement`\n*   **summary**: See \\[`Pallet::request_judgement`\\].\n\n### setAccountId(index: `Compact<u32>`, new: `MultiAddress`)[\u200b](#setaccountidindex-compactu32-new-multiaddress \"Direct link to setaccountidindex-compactu32-new-multiaddress\")\n\n*   **interface**: `api.tx.identity.setAccountId`\n*   **summary**: See \\[`Pallet::set_account_id`\\].\n\n### setFee(index: `Compact<u32>`, fee: `Compact<u128>`)[\u200b](#setfeeindex-compactu32-fee-compactu128 \"Direct link to setfeeindex-compactu32-fee-compactu128\")\n\n*   **interface**: `api.tx.identity.setFee`\n*   **summary**: See \\[`Pallet::set_fee`\\].\n\n### setFields(index: `Compact<u32>`, fields: `PalletIdentityBitFlags`)[\u200b](#setfieldsindex-compactu32-fields-palletidentitybitflags \"Direct link to setfieldsindex-compactu32-fields-palletidentitybitflags\")\n\n*   **interface**: `api.tx.identity.setFields`\n*   **summary**: See \\[`Pallet::set_fields`\\].\n\n### setIdentity(info: `PalletIdentityIdentityInfo`)[\u200b](#setidentityinfo-palletidentityidentityinfo \"Direct link to setidentityinfo-palletidentityidentityinfo\")\n\n*   **interface**: `api.tx.identity.setIdentity`\n*   **summary**: See \\[`Pallet::set_identity`\\].\n\n### setSubs(subs: `Vec<(AccountId32,Data)>`)[\u200b](#setsubssubs-vecaccountid32data \"Direct link to setsubssubs-vecaccountid32data\")\n\n*   **interface**: `api.tx.identity.setSubs`\n*   **summary**: See \\[`Pallet::set_subs`\\].\n\n* * *\n\nimOnline[\u200b](#imonline \"Direct link to imOnline\")\n\n-------------------------------------------------\n\n### heartbeat(heartbeat: `PalletImOnlineHeartbeat`, signature: `PalletImOnlineSr25519AppSr25519Signature`)[\u200b](#heartbeatheartbeat-palletimonlineheartbeat-signature-palletimonlinesr25519appsr25519signature \"Direct link to heartbeatheartbeat-palletimonlineheartbeat-signature-palletimonlinesr25519appsr25519signature\")\n\n*   **interface**: `api.tx.imOnline.heartbeat`\n*   **summary**: See \\[`Pallet::heartbeat`\\].\n\n* * *\n\nindices[\u200b](#indices \"Direct link to indices\")\n\n----------------------------------------------\n\n### claim(index: `u32`)[\u200b](#claimindex-u32 \"Direct link to claimindex-u32\")\n\n*   **interface**: `api.tx.indices.claim`\n*   **summary**: See \\[`Pallet::claim`\\].\n\n### forceTransfer(new: `MultiAddress`, index: `u32`, freeze: `bool`)[\u200b](#forcetransfernew-multiaddress-index-u32-freeze-bool \"Direct link to forcetransfernew-multiaddress-index-u32-freeze-bool\")\n\n*   **interface**: `api.tx.indices.forceTransfer`\n*   **summary**: See \\[`Pallet::force_transfer`\\].\n\n### free(index: `u32`)[\u200b](#freeindex-u32 \"Direct link to freeindex-u32\")\n\n*   **interface**: `api.tx.indices.free`\n*   **summary**: See \\[`Pallet::free`\\].\n\n### freeze(index: `u32`)[\u200b](#freezeindex-u32 \"Direct link to freezeindex-u32\")\n\n*   **interface**: `api.tx.indices.freeze`\n*   **summary**: See \\[`Pallet::freeze`\\].\n\n### transfer(new: `MultiAddress`, index: `u32`)[\u200b](#transfernew-multiaddress-index-u32 \"Direct link to transfernew-multiaddress-index-u32\")\n\n*   **interface**: `api.tx.indices.transfer`\n*   **summary**: See \\[`Pallet::transfer`\\].\n\n* * *\n\ninitializer[\u200b](#initializer \"Direct link to initializer\")\n\n----------------------------------------------------------\n\n### forceApprove(up\\_to: `u32`)[\u200b](#forceapproveup_to-u32 \"Direct link to forceapproveup_to-u32\")\n\n*   **interface**: `api.tx.initializer.forceApprove`\n*   **summary**: See \\[`Pallet::force_approve`\\].\n\n* * *\n\nmessageQueue[\u200b](#messagequeue \"Direct link to messageQueue\")\n\n-------------------------------------------------------------\n\n### executeOverweight(message\\_origin: `PolkadotRuntimeParachainsInclusionAggregateMessageOrigin`, page: `u32`, index: `u32`, weight\\_limit: `SpWeightsWeightV2Weight`)[\u200b](#executeoverweightmessage_origin-polkadotruntimeparachainsinclusionaggregatemessageorigin-page-u32-index-u32-weight_limit-spweightsweightv2weight \"Direct link to executeoverweightmessage_origin-polkadotruntimeparachainsinclusionaggregatemessageorigin-page-u32-index-u32-weight_limit-spweightsweightv2weight\")\n\n*   **interface**: `api.tx.messageQueue.executeOverweight`\n*   **summary**: See \\[`Pallet::execute_overweight`\\].\n\n### reapPage(message\\_origin: `PolkadotRuntimeParachainsInclusionAggregateMessageOrigin`, page\\_index: `u32`)[\u200b](#reappagemessage_origin-polkadotruntimeparachainsinclusionaggregatemessageorigin-page_index-u32 \"Direct link to reappagemessage_origin-polkadotruntimeparachainsinclusionaggregatemessageorigin-page_index-u32\")\n\n*   **interface**: `api.tx.messageQueue.reapPage`\n*   **summary**: See \\[`Pallet::reap_page`\\].\n\n* * *\n\nmultisig[\u200b](#multisig \"Direct link to multisig\")\n\n-------------------------------------------------\n\n### approveAsMulti(threshold: `u16`, other\\_signatories: `Vec<AccountId32>`, maybe\\_timepoint: `Option<PalletMultisigTimepoint>`, call\\_hash: `[u8;32]`, max\\_weight: `SpWeightsWeightV2Weight`)[\u200b](#approveasmultithreshold-u16-other_signatories-vecaccountid32-maybe_timepoint-optionpalletmultisigtimepoint-call_hash-u832-max_weight-spweightsweightv2weight \"Direct link to approveasmultithreshold-u16-other_signatories-vecaccountid32-maybe_timepoint-optionpalletmultisigtimepoint-call_hash-u832-max_weight-spweightsweightv2weight\")\n\n*   **interface**: `api.tx.multisig.approveAsMulti`\n*   **summary**: See \\[`Pallet::approve_as_multi`\\].\n\n### asMulti(threshold: `u16`, other\\_signatories: `Vec<AccountId32>`, maybe\\_timepoint: `Option<PalletMultisigTimepoint>`, call: `Call`, max\\_weight: `SpWeightsWeightV2Weight`)[\u200b](#asmultithreshold-u16-other_signatories-vecaccountid32-maybe_timepoint-optionpalletmultisigtimepoint-call-call-max_weight-spweightsweightv2weight \"Direct link to asmultithreshold-u16-other_signatories-vecaccountid32-maybe_timepoint-optionpalletmultisigtimepoint-call-call-max_weight-spweightsweightv2weight\")\n\n*   **interface**: `api.tx.multisig.asMulti`\n*   **summary**: See \\[`Pallet::as_multi`\\].\n\n### asMultiThreshold1(other\\_signatories: `Vec<AccountId32>`, call: `Call`)[\u200b](#asmultithreshold1other_signatories-vecaccountid32-call-call \"Direct link to asmultithreshold1other_signatories-vecaccountid32-call-call\")\n\n*   **interface**: `api.tx.multisig.asMultiThreshold1`\n*   **summary**: See \\[`Pallet::as_multi_threshold_1`\\].\n\n### cancelAsMulti(threshold: `u16`, other\\_signatories: `Vec<AccountId32>`, timepoint: `PalletMultisigTimepoint`, call\\_hash: `[u8;32]`)[\u200b](#cancelasmultithreshold-u16-other_signatories-vecaccountid32-timepoint-palletmultisigtimepoint-call_hash-u832 \"Direct link to cancelasmultithreshold-u16-other_signatories-vecaccountid32-timepoint-palletmultisigtimepoint-call_hash-u832\")\n\n*   **interface**: `api.tx.multisig.cancelAsMulti`\n*   **summary**: See \\[`Pallet::cancel_as_multi`\\].\n\n* * *\n\nnis[\u200b](#nis \"Direct link to nis\")\n\n----------------------------------\n\n### communify(index: `Compact<u32>`)[\u200b](#communifyindex-compactu32 \"Direct link to communifyindex-compactu32\")\n\n*   **interface**: `api.tx.nis.communify`\n*   **summary**: See \\[`Pallet::communify`\\].\n\n### fundDeficit()[\u200b](#funddeficit \"Direct link to fundDeficit()\")\n\n*   **interface**: `api.tx.nis.fundDeficit`\n*   **summary**: See \\[`Pallet::fund_deficit`\\].\n\n### placeBid(amount: `Compact<u128>`, duration: `u32`)[\u200b](#placebidamount-compactu128-duration-u32 \"Direct link to placebidamount-compactu128-duration-u32\")\n\n*   **interface**: `api.tx.nis.placeBid`\n*   **summary**: See \\[`Pallet::place_bid`\\].\n\n### privatize(index: `Compact<u32>`)[\u200b](#privatizeindex-compactu32 \"Direct link to privatizeindex-compactu32\")\n\n*   **interface**: `api.tx.nis.privatize`\n*   **summary**: See \\[`Pallet::privatize`\\].\n\n### retractBid(amount: `Compact<u128>`, duration: `u32`)[\u200b](#retractbidamount-compactu128-duration-u32 \"Direct link to retractbidamount-compactu128-duration-u32\")\n\n*   **interface**: `api.tx.nis.retractBid`\n*   **summary**: See \\[`Pallet::retract_bid`\\].\n\n### thawCommunal(index: `Compact<u32>`)[\u200b](#thawcommunalindex-compactu32 \"Direct link to thawcommunalindex-compactu32\")\n\n*   **interface**: `api.tx.nis.thawCommunal`\n*   **summary**: See \\[`Pallet::thaw_communal`\\].\n\n### thawPrivate(index: `Compact<u32>`, maybe\\_proportion: `Option<Perquintill>`)[\u200b](#thawprivateindex-compactu32-maybe_proportion-optionperquintill \"Direct link to thawprivateindex-compactu32-maybe_proportion-optionperquintill\")\n\n*   **interface**: `api.tx.nis.thawPrivate`\n*   **summary**: See \\[`Pallet::thaw_private`\\].\n\n* * *\n\nnisCounterpartBalances[\u200b](#niscounterpartbalances \"Direct link to nisCounterpartBalances\")\n\n-------------------------------------------------------------------------------------------\n\n### forceSetBalance(who: `MultiAddress`, new\\_free: `Compact<u128>`)[\u200b](#forcesetbalancewho-multiaddress-new_free-compactu128-1 \"Direct link to forcesetbalancewho-multiaddress-new_free-compactu128-1\")\n\n*   **interface**: `api.tx.nisCounterpartBalances.forceSetBalance`\n*   **summary**: See \\[`Pallet::force_set_balance`\\].\n\n### forceTransfer(source: `MultiAddress`, dest: `MultiAddress`, value: `Compact<u128>`)[\u200b](#forcetransfersource-multiaddress-dest-multiaddress-value-compactu128-1 \"Direct link to forcetransfersource-multiaddress-dest-multiaddress-value-compactu128-1\")\n\n*   **interface**: `api.tx.nisCounterpartBalances.forceTransfer`\n*   **summary**: See \\[`Pallet::force_transfer`\\].\n\n### forceUnreserve(who: `MultiAddress`, amount: `u128`)[\u200b](#forceunreservewho-multiaddress-amount-u128-1 \"Direct link to forceunreservewho-multiaddress-amount-u128-1\")\n\n*   **interface**: `api.tx.nisCounterpartBalances.forceUnreserve`\n*   **summary**: See \\[`Pallet::force_unreserve`\\].\n\n### setBalanceDeprecated(who: `MultiAddress`, new\\_free: `Compact<u128>`, old\\_reserved: `Compact<u128>`)[\u200b](#setbalancedeprecatedwho-multiaddress-new_free-compactu128-old_reserved-compactu128-1 \"Direct link to setbalancedeprecatedwho-multiaddress-new_free-compactu128-old_reserved-compactu128-1\")\n\n*   **interface**: `api.tx.nisCounterpartBalances.setBalanceDeprecated`\n*   **summary**: See \\[`Pallet::set_balance_deprecated`\\].\n\n### transfer(dest: `MultiAddress`, value: `Compact<u128>`)[\u200b](#transferdest-multiaddress-value-compactu128-1 \"Direct link to transferdest-multiaddress-value-compactu128-1\")\n\n*   **interface**: `api.tx.nisCounterpartBalances.transfer`\n*   **summary**: See \\[`Pallet::transfer`\\].\n\n### transferAll(dest: `MultiAddress`, keep\\_alive: `bool`)[\u200b](#transferalldest-multiaddress-keep_alive-bool-1 \"Direct link to transferalldest-multiaddress-keep_alive-bool-1\")\n\n*   **interface**: `api.tx.nisCounterpartBalances.transferAll`\n*   **summary**: See \\[`Pallet::transfer_all`\\].\n\n### transferAllowDeath(dest: `MultiAddress`, value: `Compact<u128>`)[\u200b](#transferallowdeathdest-multiaddress-value-compactu128-1 \"Direct link to transferallowdeathdest-multiaddress-value-compactu128-1\")\n\n*   **interface**: `api.tx.nisCounterpartBalances.transferAllowDeath`\n*   **summary**: See \\[`Pallet::transfer_allow_death`\\].\n\n### transferKeepAlive(dest: `MultiAddress`, value: `Compact<u128>`)[\u200b](#transferkeepalivedest-multiaddress-value-compactu128-1 \"Direct link to transferkeepalivedest-multiaddress-value-compactu128-1\")\n\n*   **interface**: `api.tx.nisCounterpartBalances.transferKeepAlive`\n*   **summary**: See \\[`Pallet::transfer_keep_alive`\\].\n\n### upgradeAccounts(who: `Vec<AccountId32>`)[\u200b](#upgradeaccountswho-vecaccountid32-1 \"Direct link to upgradeaccountswho-vecaccountid32-1\")\n\n*   **interface**: `api.tx.nisCounterpartBalances.upgradeAccounts`\n*   **summary**: See \\[`Pallet::upgrade_accounts`\\].\n\n* * *\n\nnominationPools[\u200b](#nominationpools \"Direct link to nominationPools\")\n\n----------------------------------------------------------------------\n\n### bondExtra(extra: `PalletNominationPoolsBondExtra`)[\u200b](#bondextraextra-palletnominationpoolsbondextra \"Direct link to bondextraextra-palletnominationpoolsbondextra\")\n\n*   **interface**: `api.tx.nominationPools.bondExtra`\n*   **summary**: See \\[`Pallet::bond_extra`\\].\n\n### bondExtraOther(member: `MultiAddress`, extra: `PalletNominationPoolsBondExtra`)[\u200b](#bondextraothermember-multiaddress-extra-palletnominationpoolsbondextra \"Direct link to bondextraothermember-multiaddress-extra-palletnominationpoolsbondextra\")\n\n*   **interface**: `api.tx.nominationPools.bondExtraOther`\n*   **summary**: See \\[`Pallet::bond_extra_other`\\].\n\n### chill(pool\\_id: `u32`)[\u200b](#chillpool_id-u32 \"Direct link to chillpool_id-u32\")\n\n*   **interface**: `api.tx.nominationPools.chill`\n*   **summary**: See \\[`Pallet::chill`\\].\n\n### claimCommission(pool\\_id: `u32`)[\u200b](#claimcommissionpool_id-u32 \"Direct link to claimcommissionpool_id-u32\")\n\n*   **interface**: `api.tx.nominationPools.claimCommission`\n*   **summary**: See \\[`Pallet::claim_commission`\\].\n\n### claimPayout()[\u200b](#claimpayout \"Direct link to claimPayout()\")\n\n*   **interface**: `api.tx.nominationPools.claimPayout`\n*   **summary**: See \\[`Pallet::claim_payout`\\].\n\n### claimPayoutOther(other: `AccountId32`)[\u200b](#claimpayoutotherother-accountid32 \"Direct link to claimpayoutotherother-accountid32\")\n\n*   **interface**: `api.tx.nominationPools.claimPayoutOther`\n*   **summary**: See \\[`Pallet::claim_payout_other`\\].\n\n### create(amount: `Compact<u128>`, root: `MultiAddress`, nominator: `MultiAddress`, bouncer: `MultiAddress`)[\u200b](#createamount-compactu128-root-multiaddress-nominator-multiaddress-bouncer-multiaddress \"Direct link to createamount-compactu128-root-multiaddress-nominator-multiaddress-bouncer-multiaddress\")\n\n*   **interface**: `api.tx.nominationPools.create`\n*   **summary**: See \\[`Pallet::create`\\].\n\n### createWithPoolId(amount: `Compact<u128>`, root: `MultiAddress`, nominator: `MultiAddress`, bouncer: `MultiAddress`, pool\\_id: `u32`)[\u200b](#createwithpoolidamount-compactu128-root-multiaddress-nominator-multiaddress-bouncer-multiaddress-pool_id-u32 \"Direct link to createwithpoolidamount-compactu128-root-multiaddress-nominator-multiaddress-bouncer-multiaddress-pool_id-u32\")\n\n*   **interface**: `api.tx.nominationPools.createWithPoolId`\n*   **summary**: See \\[`Pallet::create_with_pool_id`\\].\n\n### join(amount: `Compact<u128>`, pool\\_id: `u32`)[\u200b](#joinamount-compactu128-pool_id-u32 \"Direct link to joinamount-compactu128-pool_id-u32\")\n\n*   **interface**: `api.tx.nominationPools.join`\n*   **summary**: See \\[`Pallet::join`\\].\n\n### nominate(pool\\_id: `u32`, validators: `Vec<AccountId32>`)[\u200b](#nominatepool_id-u32-validators-vecaccountid32 \"Direct link to nominatepool_id-u32-validators-vecaccountid32\")\n\n*   **interface**: `api.tx.nominationPools.nominate`\n*   **summary**: See \\[`Pallet::nominate`\\].\n\n### poolWithdrawUnbonded(pool\\_id: `u32`, num\\_slashing\\_spans: `u32`)[\u200b](#poolwithdrawunbondedpool_id-u32-num_slashing_spans-u32 \"Direct link to poolwithdrawunbondedpool_id-u32-num_slashing_spans-u32\")\n\n*   **interface**: `api.tx.nominationPools.poolWithdrawUnbonded`\n*   **summary**: See \\[`Pallet::pool_withdraw_unbonded`\\].\n\n### setClaimPermission(permission: `PalletNominationPoolsClaimPermission`)[\u200b](#setclaimpermissionpermission-palletnominationpoolsclaimpermission \"Direct link to setclaimpermissionpermission-palletnominationpoolsclaimpermission\")\n\n*   **interface**: `api.tx.nominationPools.setClaimPermission`\n*   **summary**: See \\[`Pallet::set_claim_permission`\\].\n\n### setCommission(pool\\_id: `u32`, new\\_commission: `Option<(Perbill,AccountId32)>`)[\u200b](#setcommissionpool_id-u32-new_commission-optionperbillaccountid32 \"Direct link to setcommissionpool_id-u32-new_commission-optionperbillaccountid32\")\n\n*   **interface**: `api.tx.nominationPools.setCommission`\n*   **summary**: See \\[`Pallet::set_commission`\\].\n\n### setCommissionChangeRate(pool\\_id: `u32`, change\\_rate: `PalletNominationPoolsCommissionChangeRate`)[\u200b](#setcommissionchangeratepool_id-u32-change_rate-palletnominationpoolscommissionchangerate \"Direct link to setcommissionchangeratepool_id-u32-change_rate-palletnominationpoolscommissionchangerate\")\n\n*   **interface**: `api.tx.nominationPools.setCommissionChangeRate`\n*   **summary**: See \\[`Pallet::set_commission_change_rate`\\].\n\n### setCommissionMax(pool\\_id: `u32`, max\\_commission: `Perbill`)[\u200b](#setcommissionmaxpool_id-u32-max_commission-perbill \"Direct link to setcommissionmaxpool_id-u32-max_commission-perbill\")\n\n*   **interface**: `api.tx.nominationPools.setCommissionMax`\n*   **summary**: See \\[`Pallet::set_commission_max`\\].\n\n### setConfigs(min\\_join\\_bond: `PalletNominationPoolsConfigOpU128`, min\\_create\\_bond: `PalletNominationPoolsConfigOpU128`, max\\_pools: `PalletNominationPoolsConfigOpU32`, max\\_members: `PalletNominationPoolsConfigOpU32`, max\\_members\\_per\\_pool: `PalletNominationPoolsConfigOpU32`, global\\_max\\_commission: `PalletNominationPoolsConfigOpPerbill`)[\u200b](#setconfigsmin_join_bond-palletnominationpoolsconfigopu128-min_create_bond-palletnominationpoolsconfigopu128-max_pools-palletnominationpoolsconfigopu32-max_members-palletnominationpoolsconfigopu32-max_members_per_pool-palletnominationpoolsconfigopu32-global_max_commission-palletnominationpoolsconfigopperbill \"Direct link to setconfigsmin_join_bond-palletnominationpoolsconfigopu128-min_create_bond-palletnominationpoolsconfigopu128-max_pools-palletnominationpoolsconfigopu32-max_members-palletnominationpoolsconfigopu32-max_members_per_pool-palletnominationpoolsconfigopu32-global_max_commission-palletnominationpoolsconfigopperbill\")\n\n*   **interface**: `api.tx.nominationPools.setConfigs`\n*   **summary**: See \\[`Pallet::set_configs`\\].\n\n### setMetadata(pool\\_id: `u32`, metadata: `Bytes`)[\u200b](#setmetadatapool_id-u32-metadata-bytes \"Direct link to setmetadatapool_id-u32-metadata-bytes\")\n\n*   **interface**: `api.tx.nominationPools.setMetadata`\n*   **summary**: See \\[`Pallet::set_metadata`\\].\n\n### setState(pool\\_id: `u32`, state: `PalletNominationPoolsPoolState`)[\u200b](#setstatepool_id-u32-state-palletnominationpoolspoolstate \"Direct link to setstatepool_id-u32-state-palletnominationpoolspoolstate\")\n\n*   **interface**: `api.tx.nominationPools.setState`\n*   **summary**: See \\[`Pallet::set_state`\\].\n\n### unbond(member\\_account: `MultiAddress`, unbonding\\_points: `Compact<u128>`)[\u200b](#unbondmember_account-multiaddress-unbonding_points-compactu128 \"Direct link to unbondmember_account-multiaddress-unbonding_points-compactu128\")\n\n*   **interface**: `api.tx.nominationPools.unbond`\n*   **summary**: See \\[`Pallet::unbond`\\].\n\n### updateRoles(pool\\_id: `u32`, new\\_root: `PalletNominationPoolsConfigOpAccountId32`, new\\_nominator: `PalletNominationPoolsConfigOpAccountId32`, new\\_bouncer: `PalletNominationPoolsConfigOpAccountId32`)[\u200b](#updaterolespool_id-u32-new_root-palletnominationpoolsconfigopaccountid32-new_nominator-palletnominationpoolsconfigopaccountid32-new_bouncer-palletnominationpoolsconfigopaccountid32 \"Direct link to updaterolespool_id-u32-new_root-palletnominationpoolsconfigopaccountid32-new_nominator-palletnominationpoolsconfigopaccountid32-new_bouncer-palletnominationpoolsconfigopaccountid32\")\n\n*   **interface**: `api.tx.nominationPools.updateRoles`\n*   **summary**: See \\[`Pallet::update_roles`\\].\n\n### withdrawUnbonded(member\\_account: `MultiAddress`, num\\_slashing\\_spans: `u32`)[\u200b](#withdrawunbondedmember_account-multiaddress-num_slashing_spans-u32 \"Direct link to withdrawunbondedmember_account-multiaddress-num_slashing_spans-u32\")\n\n*   **interface**: `api.tx.nominationPools.withdrawUnbonded`\n*   **summary**: See \\[`Pallet::withdraw_unbonded`\\].\n\n* * *\n\nparaInclusion[\u200b](#parainclusion \"Direct link to paraInclusion\")\n\n----------------------------------------------------------------\n\n* * *\n\nparaInherent[\u200b](#parainherent \"Direct link to paraInherent\")\n\n-------------------------------------------------------------\n\n### enter(data: `PolkadotPrimitivesV5InherentData`)[\u200b](#enterdata-polkadotprimitivesv5inherentdata \"Direct link to enterdata-polkadotprimitivesv5inherentdata\")\n\n*   **interface**: `api.tx.paraInherent.enter`\n*   **summary**: See \\[`Pallet::enter`\\].\n\n* * *\n\nparas[\u200b](#paras \"Direct link to paras\")\n\n----------------------------------------\n\n### addTrustedValidationCode(validation\\_code: `Bytes`)[\u200b](#addtrustedvalidationcodevalidation_code-bytes \"Direct link to addtrustedvalidationcodevalidation_code-bytes\")\n\n*   **interface**: `api.tx.paras.addTrustedValidationCode`\n*   **summary**: See \\[`Pallet::add_trusted_validation_code`\\].\n\n### forceNoteNewHead(para: `u32`, new\\_head: `Bytes`)[\u200b](#forcenotenewheadpara-u32-new_head-bytes \"Direct link to forcenotenewheadpara-u32-new_head-bytes\")\n\n*   **interface**: `api.tx.paras.forceNoteNewHead`\n*   **summary**: See \\[`Pallet::force_note_new_head`\\].\n\n### forceQueueAction(para: `u32`)[\u200b](#forcequeueactionpara-u32 \"Direct link to forcequeueactionpara-u32\")\n\n*   **interface**: `api.tx.paras.forceQueueAction`\n*   **summary**: See \\[`Pallet::force_queue_action`\\].\n\n### forceScheduleCodeUpgrade(para: `u32`, new\\_code: `Bytes`, relay\\_parent\\_number: `u32`)[\u200b](#forceschedulecodeupgradepara-u32-new_code-bytes-relay_parent_number-u32 \"Direct link to forceschedulecodeupgradepara-u32-new_code-bytes-relay_parent_number-u32\")\n\n*   **interface**: `api.tx.paras.forceScheduleCodeUpgrade`\n*   **summary**: See \\[`Pallet::force_schedule_code_upgrade`\\].\n\n### forceSetCurrentCode(para: `u32`, new\\_code: `Bytes`)[\u200b](#forcesetcurrentcodepara-u32-new_code-bytes \"Direct link to forcesetcurrentcodepara-u32-new_code-bytes\")\n\n*   **interface**: `api.tx.paras.forceSetCurrentCode`\n*   **summary**: See \\[`Pallet::force_set_current_code`\\].\n\n### forceSetCurrentHead(para: `u32`, new\\_head: `Bytes`)[\u200b](#forcesetcurrentheadpara-u32-new_head-bytes \"Direct link to forcesetcurrentheadpara-u32-new_head-bytes\")\n\n*   **interface**: `api.tx.paras.forceSetCurrentHead`\n*   **summary**: See \\[`Pallet::force_set_current_head`\\].\n\n### forceSetMostRecentContext(para: `u32`, context: `u32`)[\u200b](#forcesetmostrecentcontextpara-u32-context-u32 \"Direct link to forcesetmostrecentcontextpara-u32-context-u32\")\n\n*   **interface**: `api.tx.paras.forceSetMostRecentContext`\n*   **summary**: See \\[`Pallet::force_set_most_recent_context`\\].\n\n### includePvfCheckStatement(stmt: `PolkadotPrimitivesV5PvfCheckStatement`, signature: `PolkadotPrimitivesV5ValidatorAppSignature`)[\u200b](#includepvfcheckstatementstmt-polkadotprimitivesv5pvfcheckstatement-signature-polkadotprimitivesv5validatorappsignature \"Direct link to includepvfcheckstatementstmt-polkadotprimitivesv5pvfcheckstatement-signature-polkadotprimitivesv5validatorappsignature\")\n\n*   **interface**: `api.tx.paras.includePvfCheckStatement`\n*   **summary**: See \\[`Pallet::include_pvf_check_statement`\\].\n\n### pokeUnusedValidationCode(validation\\_code\\_hash: `H256`)[\u200b](#pokeunusedvalidationcodevalidation_code_hash-h256 \"Direct link to pokeunusedvalidationcodevalidation_code_hash-h256\")\n\n*   **interface**: `api.tx.paras.pokeUnusedValidationCode`\n*   **summary**: See \\[`Pallet::poke_unused_validation_code`\\].\n\n* * *\n\nparasDisputes[\u200b](#parasdisputes \"Direct link to parasDisputes\")\n\n----------------------------------------------------------------\n\n### forceUnfreeze()[\u200b](#forceunfreeze \"Direct link to forceUnfreeze()\")\n\n*   **interface**: `api.tx.parasDisputes.forceUnfreeze`\n*   **summary**: See \\[`Pallet::force_unfreeze`\\].\n\n* * *\n\nparasShared[\u200b](#parasshared \"Direct link to parasShared\")\n\n----------------------------------------------------------\n\n* * *\n\nparasSlashing[\u200b](#parasslashing \"Direct link to parasSlashing\")\n\n----------------------------------------------------------------\n\n### reportDisputeLostUnsigned(dispute\\_proof: `PolkadotPrimitivesV5SlashingDisputeProof`, key\\_owner\\_proof: `SpSessionMembershipProof`)[\u200b](#reportdisputelostunsigneddispute_proof-polkadotprimitivesv5slashingdisputeproof-key_owner_proof-spsessionmembershipproof \"Direct link to reportdisputelostunsigneddispute_proof-polkadotprimitivesv5slashingdisputeproof-key_owner_proof-spsessionmembershipproof\")\n\n*   **interface**: `api.tx.parasSlashing.reportDisputeLostUnsigned`\n*   **summary**: See \\[`Pallet::report_dispute_lost_unsigned`\\].\n\n* * *\n\npreimage[\u200b](#preimage \"Direct link to preimage\")\n\n-------------------------------------------------\n\n### notePreimage(bytes: `Bytes`)[\u200b](#notepreimagebytes-bytes \"Direct link to notepreimagebytes-bytes\")\n\n*   **interface**: `api.tx.preimage.notePreimage`\n*   **summary**: See \\[`Pallet::note_preimage`\\].\n\n### requestPreimage(hash: `H256`)[\u200b](#requestpreimagehash-h256 \"Direct link to requestpreimagehash-h256\")\n\n*   **interface**: `api.tx.preimage.requestPreimage`\n*   **summary**: See \\[`Pallet::request_preimage`\\].\n\n### unnotePreimage(hash: `H256`)[\u200b](#unnotepreimagehash-h256 \"Direct link to unnotepreimagehash-h256\")\n\n*   **interface**: `api.tx.preimage.unnotePreimage`\n*   **summary**: See \\[`Pallet::unnote_preimage`\\].\n\n### unrequestPreimage(hash: `H256`)[\u200b](#unrequestpreimagehash-h256 \"Direct link to unrequestpreimagehash-h256\")\n\n*   **interface**: `api.tx.preimage.unrequestPreimage`\n*   **summary**: See \\[`Pallet::unrequest_preimage`\\].\n\n* * *\n\nproxy[\u200b](#proxy \"Direct link to proxy\")\n\n----------------------------------------\n\n### addProxy(delegate: `MultiAddress`, proxy\\_type: `KusamaRuntimeProxyType`, delay: `u32`)[\u200b](#addproxydelegate-multiaddress-proxy_type-kusamaruntimeproxytype-delay-u32 \"Direct link to addproxydelegate-multiaddress-proxy_type-kusamaruntimeproxytype-delay-u32\")\n\n*   **interface**: `api.tx.proxy.addProxy`\n*   **summary**: See \\[`Pallet::add_proxy`\\].\n\n### announce(real: `MultiAddress`, call\\_hash: `H256`)[\u200b](#announcereal-multiaddress-call_hash-h256 \"Direct link to announcereal-multiaddress-call_hash-h256\")\n\n*   **interface**: `api.tx.proxy.announce`\n*   **summary**: See \\[`Pallet::announce`\\].\n\n### createPure(proxy\\_type: `KusamaRuntimeProxyType`, delay: `u32`, index: `u16`)[\u200b](#createpureproxy_type-kusamaruntimeproxytype-delay-u32-index-u16 \"Direct link to createpureproxy_type-kusamaruntimeproxytype-delay-u32-index-u16\")\n\n*   **interface**: `api.tx.proxy.createPure`\n*   **summary**: See \\[`Pallet::create_pure`\\].\n\n### killPure(spawner: `MultiAddress`, proxy\\_type: `KusamaRuntimeProxyType`, index: `u16`, height: `Compact<u32>`, ext\\_index: `Compact<u32>`)[\u200b](#killpurespawner-multiaddress-proxy_type-kusamaruntimeproxytype-index-u16-height-compactu32-ext_index-compactu32 \"Direct link to killpurespawner-multiaddress-proxy_type-kusamaruntimeproxytype-index-u16-height-compactu32-ext_index-compactu32\")\n\n*   **interface**: `api.tx.proxy.killPure`\n*   **summary**: See \\[`Pallet::kill_pure`\\].\n\n### proxy(real: `MultiAddress`, force\\_proxy\\_type: `Option<KusamaRuntimeProxyType>`, call: `Call`)[\u200b](#proxyreal-multiaddress-force_proxy_type-optionkusamaruntimeproxytype-call-call \"Direct link to proxyreal-multiaddress-force_proxy_type-optionkusamaruntimeproxytype-call-call\")\n\n*   **interface**: `api.tx.proxy.proxy`\n*   **summary**: See \\[`Pallet::proxy`\\].\n\n### proxyAnnounced(delegate: `MultiAddress`, real: `MultiAddress`, force\\_proxy\\_type: `Option<KusamaRuntimeProxyType>`, call: `Call`)[\u200b](#proxyannounceddelegate-multiaddress-real-multiaddress-force_proxy_type-optionkusamaruntimeproxytype-call-call \"Direct link to proxyannounceddelegate-multiaddress-real-multiaddress-force_proxy_type-optionkusamaruntimeproxytype-call-call\")\n\n*   **interface**: `api.tx.proxy.proxyAnnounced`\n*   **summary**: See \\[`Pallet::proxy_announced`\\].\n\n### rejectAnnouncement(delegate: `MultiAddress`, call\\_hash: `H256`)[\u200b](#rejectannouncementdelegate-multiaddress-call_hash-h256 \"Direct link to rejectannouncementdelegate-multiaddress-call_hash-h256\")\n\n*   **interface**: `api.tx.proxy.rejectAnnouncement`\n*   **summary**: See \\[`Pallet::reject_announcement`\\].\n\n### removeAnnouncement(real: `MultiAddress`, call\\_hash: `H256`)[\u200b](#removeannouncementreal-multiaddress-call_hash-h256 \"Direct link to removeannouncementreal-multiaddress-call_hash-h256\")\n\n*   **interface**: `api.tx.proxy.removeAnnouncement`\n*   **summary**: See \\[`Pallet::remove_announcement`\\].\n\n### removeProxies()[\u200b](#removeproxies \"Direct link to removeProxies()\")\n\n*   **interface**: `api.tx.proxy.removeProxies`\n*   **summary**: See \\[`Pallet::remove_proxies`\\].\n\n### removeProxy(delegate: `MultiAddress`, proxy\\_type: `KusamaRuntimeProxyType`, delay: `u32`)[\u200b](#removeproxydelegate-multiaddress-proxy_type-kusamaruntimeproxytype-delay-u32 \"Direct link to removeproxydelegate-multiaddress-proxy_type-kusamaruntimeproxytype-delay-u32\")\n\n*   **interface**: `api.tx.proxy.removeProxy`\n*   **summary**: See \\[`Pallet::remove_proxy`\\].\n\n* * *\n\nrecovery[\u200b](#recovery \"Direct link to recovery\")\n\n-------------------------------------------------\n\n### asRecovered(account: `MultiAddress`, call: `Call`)[\u200b](#asrecoveredaccount-multiaddress-call-call \"Direct link to asrecoveredaccount-multiaddress-call-call\")\n\n*   **interface**: `api.tx.recovery.asRecovered`\n*   **summary**: See \\[`Pallet::as_recovered`\\].\n\n### cancelRecovered(account: `MultiAddress`)[\u200b](#cancelrecoveredaccount-multiaddress \"Direct link to cancelrecoveredaccount-multiaddress\")\n\n*   **interface**: `api.tx.recovery.cancelRecovered`\n*   **summary**: See \\[`Pallet::cancel_recovered`\\].\n\n### claimRecovery(account: `MultiAddress`)[\u200b](#claimrecoveryaccount-multiaddress \"Direct link to claimrecoveryaccount-multiaddress\")\n\n*   **interface**: `api.tx.recovery.claimRecovery`\n*   **summary**: See \\[`Pallet::claim_recovery`\\].\n\n### closeRecovery(rescuer: `MultiAddress`)[\u200b](#closerecoveryrescuer-multiaddress \"Direct link to closerecoveryrescuer-multiaddress\")\n\n*   **interface**: `api.tx.recovery.closeRecovery`\n*   **summary**: See \\[`Pallet::close_recovery`\\].\n\n### createRecovery(friends: `Vec<AccountId32>`, threshold: `u16`, delay\\_period: `u32`)[\u200b](#createrecoveryfriends-vecaccountid32-threshold-u16-delay_period-u32 \"Direct link to createrecoveryfriends-vecaccountid32-threshold-u16-delay_period-u32\")\n\n*   **interface**: `api.tx.recovery.createRecovery`\n*   **summary**: See \\[`Pallet::create_recovery`\\].\n\n### initiateRecovery(account: `MultiAddress`)[\u200b](#initiaterecoveryaccount-multiaddress \"Direct link to initiaterecoveryaccount-multiaddress\")\n\n*   **interface**: `api.tx.recovery.initiateRecovery`\n*   **summary**: See \\[`Pallet::initiate_recovery`\\].\n\n### removeRecovery()[\u200b](#removerecovery \"Direct link to removeRecovery()\")\n\n*   **interface**: `api.tx.recovery.removeRecovery`\n*   **summary**: See \\[`Pallet::remove_recovery`\\].\n\n### setRecovered(lost: `MultiAddress`, rescuer: `MultiAddress`)[\u200b](#setrecoveredlost-multiaddress-rescuer-multiaddress \"Direct link to setrecoveredlost-multiaddress-rescuer-multiaddress\")\n\n*   **interface**: `api.tx.recovery.setRecovered`\n*   **summary**: See \\[`Pallet::set_recovered`\\].\n\n### vouchRecovery(lost: `MultiAddress`, rescuer: `MultiAddress`)[\u200b](#vouchrecoverylost-multiaddress-rescuer-multiaddress \"Direct link to vouchrecoverylost-multiaddress-rescuer-multiaddress\")\n\n*   **interface**: `api.tx.recovery.vouchRecovery`\n*   **summary**: See \\[`Pallet::vouch_recovery`\\].\n\n* * *\n\nreferenda[\u200b](#referenda \"Direct link to referenda\")\n\n----------------------------------------------------\n\n### cancel(index: `u32`)[\u200b](#cancelindex-u32-1 \"Direct link to cancelindex-u32-1\")\n\n*   **interface**: `api.tx.referenda.cancel`\n*   **summary**: See \\[`Pallet::cancel`\\].\n\n### kill(index: `u32`)[\u200b](#killindex-u32-1 \"Direct link to killindex-u32-1\")\n\n*   **interface**: `api.tx.referenda.kill`\n*   **summary**: See \\[`Pallet::kill`\\].\n\n### nudgeReferendum(index: `u32`)[\u200b](#nudgereferendumindex-u32-1 \"Direct link to nudgereferendumindex-u32-1\")\n\n*   **interface**: `api.tx.referenda.nudgeReferendum`\n*   **summary**: See \\[`Pallet::nudge_referendum`\\].\n\n### oneFewerDeciding(track: `u16`)[\u200b](#onefewerdecidingtrack-u16-1 \"Direct link to onefewerdecidingtrack-u16-1\")\n\n*   **interface**: `api.tx.referenda.oneFewerDeciding`\n*   **summary**: See \\[`Pallet::one_fewer_deciding`\\].\n\n### placeDecisionDeposit(index: `u32`)[\u200b](#placedecisiondepositindex-u32-1 \"Direct link to placedecisiondepositindex-u32-1\")\n\n*   **interface**: `api.tx.referenda.placeDecisionDeposit`\n*   **summary**: See \\[`Pallet::place_decision_deposit`\\].\n\n### refundDecisionDeposit(index: `u32`)[\u200b](#refunddecisiondepositindex-u32-1 \"Direct link to refunddecisiondepositindex-u32-1\")\n\n*   **interface**: `api.tx.referenda.refundDecisionDeposit`\n*   **summary**: See \\[`Pallet::refund_decision_deposit`\\].\n\n### refundSubmissionDeposit(index: `u32`)[\u200b](#refundsubmissiondepositindex-u32-1 \"Direct link to refundsubmissiondepositindex-u32-1\")\n\n*   **interface**: `api.tx.referenda.refundSubmissionDeposit`\n*   **summary**: See \\[`Pallet::refund_submission_deposit`\\].\n\n### setMetadata(index: `u32`, maybe\\_hash: `Option<H256>`)[\u200b](#setmetadataindex-u32-maybe_hash-optionh256-1 \"Direct link to setmetadataindex-u32-maybe_hash-optionh256-1\")\n\n*   **interface**: `api.tx.referenda.setMetadata`\n*   **summary**: See \\[`Pallet::set_metadata`\\].\n\n### submit(proposal\\_origin: `KusamaRuntimeOriginCaller`, proposal: `FrameSupportPreimagesBounded`, enactment\\_moment: `FrameSupportScheduleDispatchTime`)[\u200b](#submitproposal_origin-kusamaruntimeorigincaller-proposal-framesupportpreimagesbounded-enactment_moment-framesupportscheduledispatchtime-1 \"Direct link to submitproposal_origin-kusamaruntimeorigincaller-proposal-framesupportpreimagesbounded-enactment_moment-framesupportscheduledispatchtime-1\")\n\n*   **interface**: `api.tx.referenda.submit`\n*   **summary**: See \\[`Pallet::submit`\\].\n\n* * *\n\nregistrar[\u200b](#registrar \"Direct link to registrar\")\n\n----------------------------------------------------\n\n### addLock(para: `u32`)[\u200b](#addlockpara-u32 \"Direct link to addlockpara-u32\")\n\n*   **interface**: `api.tx.registrar.addLock`\n*   **summary**: See \\[`Pallet::add_lock`\\].\n\n### deregister(id: `u32`)[\u200b](#deregisterid-u32 \"Direct link to deregisterid-u32\")\n\n*   **interface**: `api.tx.registrar.deregister`\n*   **summary**: See \\[`Pallet::deregister`\\].\n\n### forceRegister(who: `AccountId32`, deposit: `u128`, id: `u32`, genesis\\_head: `Bytes`, validation\\_code: `Bytes`)[\u200b](#forceregisterwho-accountid32-deposit-u128-id-u32-genesis_head-bytes-validation_code-bytes \"Direct link to forceregisterwho-accountid32-deposit-u128-id-u32-genesis_head-bytes-validation_code-bytes\")\n\n*   **interface**: `api.tx.registrar.forceRegister`\n*   **summary**: See \\[`Pallet::force_register`\\].\n\n### register(id: `u32`, genesis\\_head: `Bytes`, validation\\_code: `Bytes`)[\u200b](#registerid-u32-genesis_head-bytes-validation_code-bytes \"Direct link to registerid-u32-genesis_head-bytes-validation_code-bytes\")\n\n*   **interface**: `api.tx.registrar.register`\n*   **summary**: See \\[`Pallet::register`\\].\n\n### removeLock(para: `u32`)[\u200b](#removelockpara-u32 \"Direct link to removelockpara-u32\")\n\n*   **interface**: `api.tx.registrar.removeLock`\n*   **summary**: See \\[`Pallet::remove_lock`\\].\n\n### reserve()[\u200b](#reserve \"Direct link to reserve()\")\n\n*   **interface**: `api.tx.registrar.reserve`\n*   **summary**: See \\[`Pallet::reserve`\\].\n\n### scheduleCodeUpgrade(para: `u32`, new\\_code: `Bytes`)[\u200b](#schedulecodeupgradepara-u32-new_code-bytes \"Direct link to schedulecodeupgradepara-u32-new_code-bytes\")\n\n*   **interface**: `api.tx.registrar.scheduleCodeUpgrade`\n*   **summary**: See \\[`Pallet::schedule_code_upgrade`\\].\n\n### setCurrentHead(para: `u32`, new\\_head: `Bytes`)[\u200b](#setcurrentheadpara-u32-new_head-bytes \"Direct link to setcurrentheadpara-u32-new_head-bytes\")\n\n*   **interface**: `api.tx.registrar.setCurrentHead`\n*   **summary**: See \\[`Pallet::set_current_head`\\].\n\n### swap(id: `u32`, other: `u32`)[\u200b](#swapid-u32-other-u32 \"Direct link to swapid-u32-other-u32\")\n\n*   **interface**: `api.tx.registrar.swap`\n*   **summary**: See \\[`Pallet::swap`\\].\n\n* * *\n\nscheduler[\u200b](#scheduler \"Direct link to scheduler\")\n\n----------------------------------------------------\n\n### cancel(when: `u32`, index: `u32`)[\u200b](#cancelwhen-u32-index-u32 \"Direct link to cancelwhen-u32-index-u32\")\n\n*   **interface**: `api.tx.scheduler.cancel`\n*   **summary**: See \\[`Pallet::cancel`\\].\n\n### cancelNamed(id: `[u8;32]`)[\u200b](#cancelnamedid-u832 \"Direct link to cancelnamedid-u832\")\n\n*   **interface**: `api.tx.scheduler.cancelNamed`\n*   **summary**: See \\[`Pallet::cancel_named`\\].\n\n### schedule(when: `u32`, maybe\\_periodic: `Option<(u32,u32)>`, priority: `u8`, call: `Call`)[\u200b](#schedulewhen-u32-maybe_periodic-optionu32u32-priority-u8-call-call \"Direct link to schedulewhen-u32-maybe_periodic-optionu32u32-priority-u8-call-call\")\n\n*   **interface**: `api.tx.scheduler.schedule`\n*   **summary**: See \\[`Pallet::schedule`\\].\n\n### scheduleAfter(after: `u32`, maybe\\_periodic: `Option<(u32,u32)>`, priority: `u8`, call: `Call`)[\u200b](#scheduleafterafter-u32-maybe_periodic-optionu32u32-priority-u8-call-call \"Direct link to scheduleafterafter-u32-maybe_periodic-optionu32u32-priority-u8-call-call\")\n\n*   **interface**: `api.tx.scheduler.scheduleAfter`\n*   **summary**: See \\[`Pallet::schedule_after`\\].\n\n### scheduleNamed(id: `[u8;32]`, when: `u32`, maybe\\_periodic: `Option<(u32,u32)>`, priority: `u8`, call: `Call`)[\u200b](#schedulenamedid-u832-when-u32-maybe_periodic-optionu32u32-priority-u8-call-call \"Direct link to schedulenamedid-u832-when-u32-maybe_periodic-optionu32u32-priority-u8-call-call\")\n\n*   **interface**: `api.tx.scheduler.scheduleNamed`\n*   **summary**: See \\[`Pallet::schedule_named`\\].\n\n### scheduleNamedAfter(id: `[u8;32]`, after: `u32`, maybe\\_periodic: `Option<(u32,u32)>`, priority: `u8`, call: `Call`)[\u200b](#schedulenamedafterid-u832-after-u32-maybe_periodic-optionu32u32-priority-u8-call-call \"Direct link to schedulenamedafterid-u832-after-u32-maybe_periodic-optionu32u32-priority-u8-call-call\")\n\n*   **interface**: `api.tx.scheduler.scheduleNamedAfter`\n*   **summary**: See \\[`Pallet::schedule_named_after`\\].\n\n* * *\n\nsession[\u200b](#session \"Direct link to session\")\n\n----------------------------------------------\n\n### purgeKeys()[\u200b](#purgekeys \"Direct link to purgeKeys()\")\n\n*   **interface**: `api.tx.session.purgeKeys`\n*   **summary**: See \\[`Pallet::purge_keys`\\].\n\n### setKeys(keys: `KusamaRuntimeSessionKeys`, proof: `Bytes`)[\u200b](#setkeyskeys-kusamaruntimesessionkeys-proof-bytes \"Direct link to setkeyskeys-kusamaruntimesessionkeys-proof-bytes\")\n\n*   **interface**: `api.tx.session.setKeys`\n*   **summary**: See \\[`Pallet::set_keys`\\].\n\n* * *\n\nslots[\u200b](#slots \"Direct link to slots\")\n\n----------------------------------------\n\n### clearAllLeases(para: `u32`)[\u200b](#clearallleasespara-u32 \"Direct link to clearallleasespara-u32\")\n\n*   **interface**: `api.tx.slots.clearAllLeases`\n*   **summary**: See \\[`Pallet::clear_all_leases`\\].\n\n### forceLease(para: `u32`, leaser: `AccountId32`, amount: `u128`, period\\_begin: `u32`, period\\_count: `u32`)[\u200b](#forceleasepara-u32-leaser-accountid32-amount-u128-period_begin-u32-period_count-u32 \"Direct link to forceleasepara-u32-leaser-accountid32-amount-u128-period_begin-u32-period_count-u32\")\n\n*   **interface**: `api.tx.slots.forceLease`\n*   **summary**: See \\[`Pallet::force_lease`\\].\n\n### triggerOnboard(para: `u32`)[\u200b](#triggeronboardpara-u32 \"Direct link to triggeronboardpara-u32\")\n\n*   **interface**: `api.tx.slots.triggerOnboard`\n*   **summary**: See \\[`Pallet::trigger_onboard`\\].\n\n* * *\n\nsociety[\u200b](#society \"Direct link to society\")\n\n----------------------------------------------\n\n### bestowMembership(candidate: `AccountId32`)[\u200b](#bestowmembershipcandidate-accountid32 \"Direct link to bestowmembershipcandidate-accountid32\")\n\n*   **interface**: `api.tx.society.bestowMembership`\n*   **summary**: See \\[`Pallet::bestow_membership`\\].\n\n### bid(value: `u128`)[\u200b](#bidvalue-u128 \"Direct link to bidvalue-u128\")\n\n*   **interface**: `api.tx.society.bid`\n*   **summary**: See \\[`Pallet::bid`\\].\n\n### claimMembership()[\u200b](#claimmembership \"Direct link to claimMembership()\")\n\n*   **interface**: `api.tx.society.claimMembership`\n*   **summary**: See \\[`Pallet::claim_membership`\\].\n\n### cleanupCandidacy(candidate: `AccountId32`, max: `u32`)[\u200b](#cleanupcandidacycandidate-accountid32-max-u32 \"Direct link to cleanupcandidacycandidate-accountid32-max-u32\")\n\n*   **interface**: `api.tx.society.cleanupCandidacy`\n*   **summary**: See \\[`Pallet::cleanup_candidacy`\\].\n\n### cleanupChallenge(challenge\\_round: `u32`, max: `u32`)[\u200b](#cleanupchallengechallenge_round-u32-max-u32 \"Direct link to cleanupchallengechallenge_round-u32-max-u32\")\n\n*   **interface**: `api.tx.society.cleanupChallenge`\n*   **summary**: See \\[`Pallet::cleanup_challenge`\\].\n\n### defenderVote(approve: `bool`)[\u200b](#defendervoteapprove-bool \"Direct link to defendervoteapprove-bool\")\n\n*   **interface**: `api.tx.society.defenderVote`\n*   **summary**: See \\[`Pallet::defender_vote`\\].\n\n### dissolve()[\u200b](#dissolve \"Direct link to dissolve()\")\n\n*   **interface**: `api.tx.society.dissolve`\n*   **summary**: See \\[`Pallet::dissolve`\\].\n\n### dropCandidate(candidate: `AccountId32`)[\u200b](#dropcandidatecandidate-accountid32 \"Direct link to dropcandidatecandidate-accountid32\")\n\n*   **interface**: `api.tx.society.dropCandidate`\n*   **summary**: See \\[`Pallet::drop_candidate`\\].\n\n### foundSociety(founder: `MultiAddress`, max\\_members: `u32`, max\\_intake: `u32`, max\\_strikes: `u32`, candidate\\_deposit: `u128`, rules: `Bytes`)[\u200b](#foundsocietyfounder-multiaddress-max_members-u32-max_intake-u32-max_strikes-u32-candidate_deposit-u128-rules-bytes \"Direct link to foundsocietyfounder-multiaddress-max_members-u32-max_intake-u32-max_strikes-u32-candidate_deposit-u128-rules-bytes\")\n\n*   **interface**: `api.tx.society.foundSociety`\n*   **summary**: See \\[`Pallet::found_society`\\].\n\n### judgeSuspendedMember(who: `MultiAddress`, forgive: `bool`)[\u200b](#judgesuspendedmemberwho-multiaddress-forgive-bool \"Direct link to judgesuspendedmemberwho-multiaddress-forgive-bool\")\n\n*   **interface**: `api.tx.society.judgeSuspendedMember`\n*   **summary**: See \\[`Pallet::judge_suspended_member`\\].\n\n### kickCandidate(candidate: `AccountId32`)[\u200b](#kickcandidatecandidate-accountid32 \"Direct link to kickcandidatecandidate-accountid32\")\n\n*   **interface**: `api.tx.society.kickCandidate`\n*   **summary**: See \\[`Pallet::kick_candidate`\\].\n\n### payout()[\u200b](#payout \"Direct link to payout()\")\n\n*   **interface**: `api.tx.society.payout`\n*   **summary**: See \\[`Pallet::payout`\\].\n\n### punishSkeptic()[\u200b](#punishskeptic \"Direct link to punishSkeptic()\")\n\n*   **interface**: `api.tx.society.punishSkeptic`\n*   **summary**: See \\[`Pallet::punish_skeptic`\\].\n\n### resignCandidacy()[\u200b](#resigncandidacy \"Direct link to resignCandidacy()\")\n\n*   **interface**: `api.tx.society.resignCandidacy`\n*   **summary**: See \\[`Pallet::resign_candidacy`\\].\n\n### setParameters(max\\_members: `u32`, max\\_intake: `u32`, max\\_strikes: `u32`, candidate\\_deposit: `u128`)[\u200b](#setparametersmax_members-u32-max_intake-u32-max_strikes-u32-candidate_deposit-u128 \"Direct link to setparametersmax_members-u32-max_intake-u32-max_strikes-u32-candidate_deposit-u128\")\n\n*   **interface**: `api.tx.society.setParameters`\n*   **summary**: See \\[`Pallet::set_parameters`\\].\n\n### unbid()[\u200b](#unbid \"Direct link to unbid()\")\n\n*   **interface**: `api.tx.society.unbid`\n*   **summary**: See \\[`Pallet::unbid`\\].\n\n### unvouch()[\u200b](#unvouch \"Direct link to unvouch()\")\n\n*   **interface**: `api.tx.society.unvouch`\n*   **summary**: See \\[`Pallet::unvouch`\\].\n\n### vote(candidate: `MultiAddress`, approve: `bool`)[\u200b](#votecandidate-multiaddress-approve-bool \"Direct link to votecandidate-multiaddress-approve-bool\")\n\n*   **interface**: `api.tx.society.vote`\n*   **summary**: See \\[`Pallet::vote`\\].\n\n### vouch(who: `MultiAddress`, value: `u128`, tip: `u128`)[\u200b](#vouchwho-multiaddress-value-u128-tip-u128 \"Direct link to vouchwho-multiaddress-value-u128-tip-u128\")\n\n*   **interface**: `api.tx.society.vouch`\n*   **summary**: See \\[`Pallet::vouch`\\].\n\n### waiveRepay(amount: `u128`)[\u200b](#waiverepayamount-u128 \"Direct link to waiverepayamount-u128\")\n\n*   **interface**: `api.tx.society.waiveRepay`\n*   **summary**: See \\[`Pallet::waive_repay`\\].\n\n* * *\n\nstaking[\u200b](#staking \"Direct link to staking\")\n\n----------------------------------------------\n\n### bond(value: `Compact<u128>`, payee: `PalletStakingRewardDestination`)[\u200b](#bondvalue-compactu128-payee-palletstakingrewarddestination \"Direct link to bondvalue-compactu128-payee-palletstakingrewarddestination\")\n\n*   **interface**: `api.tx.staking.bond`\n*   **summary**: See \\[`Pallet::bond`\\].\n\n### bondExtra(max\\_additional: `Compact<u128>`)[\u200b](#bondextramax_additional-compactu128 \"Direct link to bondextramax_additional-compactu128\")\n\n*   **interface**: `api.tx.staking.bondExtra`\n*   **summary**: See \\[`Pallet::bond_extra`\\].\n\n### cancelDeferredSlash(era: `u32`, slash\\_indices: `Vec<u32>`)[\u200b](#canceldeferredslashera-u32-slash_indices-vecu32 \"Direct link to canceldeferredslashera-u32-slash_indices-vecu32\")\n\n*   **interface**: `api.tx.staking.cancelDeferredSlash`\n*   **summary**: See \\[`Pallet::cancel_deferred_slash`\\].\n\n### chill()[\u200b](#chill \"Direct link to chill()\")\n\n*   **interface**: `api.tx.staking.chill`\n*   **summary**: See \\[`Pallet::chill`\\].\n\n### chillOther(controller: `AccountId32`)[\u200b](#chillothercontroller-accountid32 \"Direct link to chillothercontroller-accountid32\")\n\n*   **interface**: `api.tx.staking.chillOther`\n*   **summary**: See \\[`Pallet::chill_other`\\].\n\n### forceApplyMinCommission(validator\\_stash: `AccountId32`)[\u200b](#forceapplymincommissionvalidator_stash-accountid32 \"Direct link to forceapplymincommissionvalidator_stash-accountid32\")\n\n*   **interface**: `api.tx.staking.forceApplyMinCommission`\n*   **summary**: See \\[`Pallet::force_apply_min_commission`\\].\n\n### forceNewEra()[\u200b](#forcenewera \"Direct link to forceNewEra()\")\n\n*   **interface**: `api.tx.staking.forceNewEra`\n*   **summary**: See \\[`Pallet::force_new_era`\\].\n\n### forceNewEraAlways()[\u200b](#forceneweraalways \"Direct link to forceNewEraAlways()\")\n\n*   **interface**: `api.tx.staking.forceNewEraAlways`\n*   **summary**: See \\[`Pallet::force_new_era_always`\\].\n\n### forceNoEras()[\u200b](#forcenoeras \"Direct link to forceNoEras()\")\n\n*   **interface**: `api.tx.staking.forceNoEras`\n*   **summary**: See \\[`Pallet::force_no_eras`\\].\n\n### forceUnstake(stash: `AccountId32`, num\\_slashing\\_spans: `u32`)[\u200b](#forceunstakestash-accountid32-num_slashing_spans-u32 \"Direct link to forceunstakestash-accountid32-num_slashing_spans-u32\")\n\n*   **interface**: `api.tx.staking.forceUnstake`\n*   **summary**: See \\[`Pallet::force_unstake`\\].\n\n### increaseValidatorCount(additional: `Compact<u32>`)[\u200b](#increasevalidatorcountadditional-compactu32 \"Direct link to increasevalidatorcountadditional-compactu32\")\n\n*   **interface**: `api.tx.staking.increaseValidatorCount`\n*   **summary**: See \\[`Pallet::increase_validator_count`\\].\n\n### kick(who: `Vec<MultiAddress>`)[\u200b](#kickwho-vecmultiaddress \"Direct link to kickwho-vecmultiaddress\")\n\n*   **interface**: `api.tx.staking.kick`\n*   **summary**: See \\[`Pallet::kick`\\].\n\n### nominate(targets: `Vec<MultiAddress>`)[\u200b](#nominatetargets-vecmultiaddress \"Direct link to nominatetargets-vecmultiaddress\")\n\n*   **interface**: `api.tx.staking.nominate`\n*   **summary**: See \\[`Pallet::nominate`\\].\n\n### payoutStakers(validator\\_stash: `AccountId32`, era: `u32`)[\u200b](#payoutstakersvalidator_stash-accountid32-era-u32 \"Direct link to payoutstakersvalidator_stash-accountid32-era-u32\")\n\n*   **interface**: `api.tx.staking.payoutStakers`\n*   **summary**: See \\[`Pallet::payout_stakers`\\].\n\n### reapStash(stash: `AccountId32`, num\\_slashing\\_spans: `u32`)[\u200b](#reapstashstash-accountid32-num_slashing_spans-u32 \"Direct link to reapstashstash-accountid32-num_slashing_spans-u32\")\n\n*   **interface**: `api.tx.staking.reapStash`\n*   **summary**: See \\[`Pallet::reap_stash`\\].\n\n### rebond(value: `Compact<u128>`)[\u200b](#rebondvalue-compactu128 \"Direct link to rebondvalue-compactu128\")\n\n*   **interface**: `api.tx.staking.rebond`\n*   **summary**: See \\[`Pallet::rebond`\\].\n\n### scaleValidatorCount(factor: `Percent`)[\u200b](#scalevalidatorcountfactor-percent \"Direct link to scalevalidatorcountfactor-percent\")\n\n*   **interface**: `api.tx.staking.scaleValidatorCount`\n*   **summary**: See \\[`Pallet::scale_validator_count`\\].\n\n### setController()[\u200b](#setcontroller \"Direct link to setController()\")\n\n*   **interface**: `api.tx.staking.setController`\n*   **summary**: See \\[`Pallet::set_controller`\\].\n\n### setInvulnerables(invulnerables: `Vec<AccountId32>`)[\u200b](#setinvulnerablesinvulnerables-vecaccountid32 \"Direct link to setinvulnerablesinvulnerables-vecaccountid32\")\n\n*   **interface**: `api.tx.staking.setInvulnerables`\n*   **summary**: See \\[`Pallet::set_invulnerables`\\].\n\n### setMinCommission(new: `Perbill`)[\u200b](#setmincommissionnew-perbill \"Direct link to setmincommissionnew-perbill\")\n\n*   **interface**: `api.tx.staking.setMinCommission`\n*   **summary**: See \\[`Pallet::set_min_commission`\\].\n\n### setPayee(payee: `PalletStakingRewardDestination`)[\u200b](#setpayeepayee-palletstakingrewarddestination \"Direct link to setpayeepayee-palletstakingrewarddestination\")\n\n*   **interface**: `api.tx.staking.setPayee`\n*   **summary**: See \\[`Pallet::set_payee`\\].\n\n### setStakingConfigs(min\\_nominator\\_bond: `PalletStakingPalletConfigOpU128`, min\\_validator\\_bond: `PalletStakingPalletConfigOpU128`, max\\_nominator\\_count: `PalletStakingPalletConfigOpU32`, max\\_validator\\_count: `PalletStakingPalletConfigOpU32`, chill\\_threshold: `PalletStakingPalletConfigOpPercent`, min\\_commission: `PalletStakingPalletConfigOpPerbill`)[\u200b](#setstakingconfigsmin_nominator_bond-palletstakingpalletconfigopu128-min_validator_bond-palletstakingpalletconfigopu128-max_nominator_count-palletstakingpalletconfigopu32-max_validator_count-palletstakingpalletconfigopu32-chill_threshold-palletstakingpalletconfigoppercent-min_commission-palletstakingpalletconfigopperbill \"Direct link to setstakingconfigsmin_nominator_bond-palletstakingpalletconfigopu128-min_validator_bond-palletstakingpalletconfigopu128-max_nominator_count-palletstakingpalletconfigopu32-max_validator_count-palletstakingpalletconfigopu32-chill_threshold-palletstakingpalletconfigoppercent-min_commission-palletstakingpalletconfigopperbill\")\n\n*   **interface**: `api.tx.staking.setStakingConfigs`\n*   **summary**: See \\[`Pallet::set_staking_configs`\\].\n\n### setValidatorCount(new: `Compact<u32>`)[\u200b](#setvalidatorcountnew-compactu32 \"Direct link to setvalidatorcountnew-compactu32\")\n\n*   **interface**: `api.tx.staking.setValidatorCount`\n*   **summary**: See \\[`Pallet::set_validator_count`\\].\n\n### unbond(value: `Compact<u128>`)[\u200b](#unbondvalue-compactu128 \"Direct link to unbondvalue-compactu128\")\n\n*   **interface**: `api.tx.staking.unbond`\n*   **summary**: See \\[`Pallet::unbond`\\].\n\n### validate(prefs: `PalletStakingValidatorPrefs`)[\u200b](#validateprefs-palletstakingvalidatorprefs \"Direct link to validateprefs-palletstakingvalidatorprefs\")\n\n*   **interface**: `api.tx.staking.validate`\n*   **summary**: See \\[`Pallet::validate`\\].\n\n### withdrawUnbonded(num\\_slashing\\_spans: `u32`)[\u200b](#withdrawunbondednum_slashing_spans-u32 \"Direct link to withdrawunbondednum_slashing_spans-u32\")\n\n*   **interface**: `api.tx.staking.withdrawUnbonded`\n*   **summary**: See \\[`Pallet::withdraw_unbonded`\\].\n\n* * *\n\nstateTrieMigration[\u200b](#statetriemigration \"Direct link to stateTrieMigration\")\n\n-------------------------------------------------------------------------------\n\n### continueMigrate(limits: `PalletStateTrieMigrationMigrationLimits`, real\\_size\\_upper: `u32`, witness\\_task: `PalletStateTrieMigrationMigrationTask`)[\u200b](#continuemigratelimits-palletstatetriemigrationmigrationlimits-real_size_upper-u32-witness_task-palletstatetriemigrationmigrationtask \"Direct link to continuemigratelimits-palletstatetriemigrationmigrationlimits-real_size_upper-u32-witness_task-palletstatetriemigrationmigrationtask\")\n\n*   **interface**: `api.tx.stateTrieMigration.continueMigrate`\n*   **summary**: See \\[`Pallet::continue_migrate`\\].\n\n### controlAutoMigration(maybe\\_config: `Option<PalletStateTrieMigrationMigrationLimits>`)[\u200b](#controlautomigrationmaybe_config-optionpalletstatetriemigrationmigrationlimits \"Direct link to controlautomigrationmaybe_config-optionpalletstatetriemigrationmigrationlimits\")\n\n*   **interface**: `api.tx.stateTrieMigration.controlAutoMigration`\n*   **summary**: See \\[`Pallet::control_auto_migration`\\].\n\n### forceSetProgress(progress\\_top: `PalletStateTrieMigrationProgress`, progress\\_child: `PalletStateTrieMigrationProgress`)[\u200b](#forcesetprogressprogress_top-palletstatetriemigrationprogress-progress_child-palletstatetriemigrationprogress \"Direct link to forcesetprogressprogress_top-palletstatetriemigrationprogress-progress_child-palletstatetriemigrationprogress\")\n\n*   **interface**: `api.tx.stateTrieMigration.forceSetProgress`\n*   **summary**: See \\[`Pallet::force_set_progress`\\].\n\n### migrateCustomChild(root: `Bytes`, child\\_keys: `Vec<Bytes>`, total\\_size: `u32`)[\u200b](#migratecustomchildroot-bytes-child_keys-vecbytes-total_size-u32 \"Direct link to migratecustomchildroot-bytes-child_keys-vecbytes-total_size-u32\")\n\n*   **interface**: `api.tx.stateTrieMigration.migrateCustomChild`\n*   **summary**: See \\[`Pallet::migrate_custom_child`\\].\n\n### migrateCustomTop(keys: `Vec<Bytes>`, witness\\_size: `u32`)[\u200b](#migratecustomtopkeys-vecbytes-witness_size-u32 \"Direct link to migratecustomtopkeys-vecbytes-witness_size-u32\")\n\n*   **interface**: `api.tx.stateTrieMigration.migrateCustomTop`\n*   **summary**: See \\[`Pallet::migrate_custom_top`\\].\n\n### setSignedMaxLimits(limits: `PalletStateTrieMigrationMigrationLimits`)[\u200b](#setsignedmaxlimitslimits-palletstatetriemigrationmigrationlimits \"Direct link to setsignedmaxlimitslimits-palletstatetriemigrationmigrationlimits\")\n\n*   **interface**: `api.tx.stateTrieMigration.setSignedMaxLimits`\n*   **summary**: See \\[`Pallet::set_signed_max_limits`\\].\n\n* * *\n\nsystem[\u200b](#system \"Direct link to system\")\n\n-------------------------------------------\n\n### killPrefix(prefix: `Bytes`, subkeys: `u32`)[\u200b](#killprefixprefix-bytes-subkeys-u32 \"Direct link to killprefixprefix-bytes-subkeys-u32\")\n\n*   **interface**: `api.tx.system.killPrefix`\n*   **summary**: See \\[`Pallet::kill_prefix`\\].\n\n### killStorage(keys: `Vec<Bytes>`)[\u200b](#killstoragekeys-vecbytes \"Direct link to killstoragekeys-vecbytes\")\n\n*   **interface**: `api.tx.system.killStorage`\n*   **summary**: See \\[`Pallet::kill_storage`\\].\n\n### remark(remark: `Bytes`)[\u200b](#remarkremark-bytes \"Direct link to remarkremark-bytes\")\n\n*   **interface**: `api.tx.system.remark`\n*   **summary**: See \\[`Pallet::remark`\\].\n\n### remarkWithEvent(remark: `Bytes`)[\u200b](#remarkwitheventremark-bytes \"Direct link to remarkwitheventremark-bytes\")\n\n*   **interface**: `api.tx.system.remarkWithEvent`\n*   **summary**: See \\[`Pallet::remark_with_event`\\].\n\n### setCode(code: `Bytes`)[\u200b](#setcodecode-bytes \"Direct link to setcodecode-bytes\")\n\n*   **interface**: `api.tx.system.setCode`\n*   **summary**: See \\[`Pallet::set_code`\\].\n\n### setCodeWithoutChecks(code: `Bytes`)[\u200b](#setcodewithoutcheckscode-bytes \"Direct link to setcodewithoutcheckscode-bytes\")\n\n*   **interface**: `api.tx.system.setCodeWithoutChecks`\n*   **summary**: See \\[`Pallet::set_code_without_checks`\\].\n\n### setHeapPages(pages: `u64`)[\u200b](#setheappagespages-u64 \"Direct link to setheappagespages-u64\")\n\n*   **interface**: `api.tx.system.setHeapPages`\n*   **summary**: See \\[`Pallet::set_heap_pages`\\].\n\n### setStorage(items: `Vec<(Bytes,Bytes)>`)[\u200b](#setstorageitems-vecbytesbytes \"Direct link to setstorageitems-vecbytesbytes\")\n\n*   **interface**: `api.tx.system.setStorage`\n*   **summary**: See \\[`Pallet::set_storage`\\].\n\n* * *\n\ntimestamp[\u200b](#timestamp \"Direct link to timestamp\")\n\n----------------------------------------------------\n\n### set(now: `Compact<u64>`)[\u200b](#setnow-compactu64 \"Direct link to setnow-compactu64\")\n\n*   **interface**: `api.tx.timestamp.set`\n*   **summary**: See \\[`Pallet::set`\\].\n\n* * *\n\ntreasury[\u200b](#treasury \"Direct link to treasury\")\n\n-------------------------------------------------\n\n### approveProposal(proposal\\_id: `Compact<u32>`)[\u200b](#approveproposalproposal_id-compactu32 \"Direct link to approveproposalproposal_id-compactu32\")\n\n*   **interface**: `api.tx.treasury.approveProposal`\n*   **summary**: See \\[`Pallet::approve_proposal`\\].\n\n### proposeSpend(value: `Compact<u128>`, beneficiary: `MultiAddress`)[\u200b](#proposespendvalue-compactu128-beneficiary-multiaddress \"Direct link to proposespendvalue-compactu128-beneficiary-multiaddress\")\n\n*   **interface**: `api.tx.treasury.proposeSpend`\n*   **summary**: See \\[`Pallet::propose_spend`\\].\n\n### rejectProposal(proposal\\_id: `Compact<u32>`)[\u200b](#rejectproposalproposal_id-compactu32 \"Direct link to rejectproposalproposal_id-compactu32\")\n\n*   **interface**: `api.tx.treasury.rejectProposal`\n*   **summary**: See \\[`Pallet::reject_proposal`\\].\n\n### removeApproval(proposal\\_id: `Compact<u32>`)[\u200b](#removeapprovalproposal_id-compactu32 \"Direct link to removeapprovalproposal_id-compactu32\")\n\n*   **interface**: `api.tx.treasury.removeApproval`\n*   **summary**: See \\[`Pallet::remove_approval`\\].\n\n### spend(amount: `Compact<u128>`, beneficiary: `MultiAddress`)[\u200b](#spendamount-compactu128-beneficiary-multiaddress \"Direct link to spendamount-compactu128-beneficiary-multiaddress\")\n\n*   **interface**: `api.tx.treasury.spend`\n*   **summary**: See \\[`Pallet::spend`\\].\n\n* * *\n\nutility[\u200b](#utility \"Direct link to utility\")\n\n----------------------------------------------\n\n### asDerivative(index: `u16`, call: `Call`)[\u200b](#asderivativeindex-u16-call-call \"Direct link to asderivativeindex-u16-call-call\")\n\n*   **interface**: `api.tx.utility.asDerivative`\n*   **summary**: See \\[`Pallet::as_derivative`\\].\n\n### batch(calls: `Vec<Call>`)[\u200b](#batchcalls-veccall \"Direct link to batchcalls-veccall\")\n\n*   **interface**: `api.tx.utility.batch`\n*   **summary**: See \\[`Pallet::batch`\\].\n\n### batchAll(calls: `Vec<Call>`)[\u200b](#batchallcalls-veccall \"Direct link to batchallcalls-veccall\")\n\n*   **interface**: `api.tx.utility.batchAll`\n*   **summary**: See \\[`Pallet::batch_all`\\].\n\n### dispatchAs(as\\_origin: `KusamaRuntimeOriginCaller`, call: `Call`)[\u200b](#dispatchasas_origin-kusamaruntimeorigincaller-call-call \"Direct link to dispatchasas_origin-kusamaruntimeorigincaller-call-call\")\n\n*   **interface**: `api.tx.utility.dispatchAs`\n*   **summary**: See \\[`Pallet::dispatch_as`\\].\n\n### forceBatch(calls: `Vec<Call>`)[\u200b](#forcebatchcalls-veccall \"Direct link to forcebatchcalls-veccall\")\n\n*   **interface**: `api.tx.utility.forceBatch`\n*   **summary**: See \\[`Pallet::force_batch`\\].\n\n### withWeight(call: `Call`, weight: `SpWeightsWeightV2Weight`)[\u200b](#withweightcall-call-weight-spweightsweightv2weight \"Direct link to withweightcall-call-weight-spweightsweightv2weight\")\n\n*   **interface**: `api.tx.utility.withWeight`\n*   **summary**: See \\[`Pallet::with_weight`\\].\n\n* * *\n\nvesting[\u200b](#vesting \"Direct link to vesting\")\n\n----------------------------------------------\n\n### forceVestedTransfer(source: `MultiAddress`, target: `MultiAddress`, schedule: `PalletVestingVestingInfo`)[\u200b](#forcevestedtransfersource-multiaddress-target-multiaddress-schedule-palletvestingvestinginfo \"Direct link to forcevestedtransfersource-multiaddress-target-multiaddress-schedule-palletvestingvestinginfo\")\n\n*   **interface**: `api.tx.vesting.forceVestedTransfer`\n*   **summary**: See \\[`Pallet::force_vested_transfer`\\].\n\n### mergeSchedules(schedule1\\_index: `u32`, schedule2\\_index: `u32`)[\u200b](#mergeschedulesschedule1_index-u32-schedule2_index-u32 \"Direct link to mergeschedulesschedule1_index-u32-schedule2_index-u32\")\n\n*   **interface**: `api.tx.vesting.mergeSchedules`\n*   **summary**: See \\[`Pallet::merge_schedules`\\].\n\n### vest()[\u200b](#vest \"Direct link to vest()\")\n\n*   **interface**: `api.tx.vesting.vest`\n*   **summary**: See \\[`Pallet::vest`\\].\n\n### vestOther(target: `MultiAddress`)[\u200b](#vestothertarget-multiaddress \"Direct link to vestothertarget-multiaddress\")\n\n*   **interface**: `api.tx.vesting.vestOther`\n*   **summary**: See \\[`Pallet::vest_other`\\].\n\n### vestedTransfer(target: `MultiAddress`, schedule: `PalletVestingVestingInfo`)[\u200b](#vestedtransfertarget-multiaddress-schedule-palletvestingvestinginfo \"Direct link to vestedtransfertarget-multiaddress-schedule-palletvestingvestinginfo\")\n\n*   **interface**: `api.tx.vesting.vestedTransfer`\n*   **summary**: See \\[`Pallet::vested_transfer`\\].\n\n* * *\n\nvoterList[\u200b](#voterlist \"Direct link to voterList\")\n\n----------------------------------------------------\n\n### putInFrontOf(lighter: `MultiAddress`)[\u200b](#putinfrontoflighter-multiaddress \"Direct link to putinfrontoflighter-multiaddress\")\n\n*   **interface**: `api.tx.voterList.putInFrontOf`\n*   **summary**: See \\[`Pallet::put_in_front_of`\\].\n\n### putInFrontOfOther(heavier: `MultiAddress`, lighter: `MultiAddress`)[\u200b](#putinfrontofotherheavier-multiaddress-lighter-multiaddress \"Direct link to putinfrontofotherheavier-multiaddress-lighter-multiaddress\")\n\n*   **interface**: `api.tx.voterList.putInFrontOfOther`\n*   **summary**: See \\[`Pallet::put_in_front_of_other`\\].\n\n### rebag(dislocated: `MultiAddress`)[\u200b](#rebagdislocated-multiaddress \"Direct link to rebagdislocated-multiaddress\")\n\n*   **interface**: `api.tx.voterList.rebag`\n*   **summary**: See \\[`Pallet::rebag`\\].\n\n* * *\n\nwhitelist[\u200b](#whitelist \"Direct link to whitelist\")\n\n----------------------------------------------------\n\n### dispatchWhitelistedCall(call\\_hash: `H256`, call\\_encoded\\_len: `u32`, call\\_weight\\_witness: `SpWeightsWeightV2Weight`)[\u200b](#dispatchwhitelistedcallcall_hash-h256-call_encoded_len-u32-call_weight_witness-spweightsweightv2weight \"Direct link to dispatchwhitelistedcallcall_hash-h256-call_encoded_len-u32-call_weight_witness-spweightsweightv2weight\")\n\n*   **interface**: `api.tx.whitelist.dispatchWhitelistedCall`\n*   **summary**: See \\[`Pallet::dispatch_whitelisted_call`\\].\n\n### dispatchWhitelistedCallWithPreimage(call: `Call`)[\u200b](#dispatchwhitelistedcallwithpreimagecall-call \"Direct link to dispatchwhitelistedcallwithpreimagecall-call\")\n\n*   **interface**: `api.tx.whitelist.dispatchWhitelistedCallWithPreimage`\n*   **summary**: See \\[`Pallet::dispatch_whitelisted_call_with_preimage`\\].\n\n### removeWhitelistedCall(call\\_hash: `H256`)[\u200b](#removewhitelistedcallcall_hash-h256 \"Direct link to removewhitelistedcallcall_hash-h256\")\n\n*   **interface**: `api.tx.whitelist.removeWhitelistedCall`\n*   **summary**: See \\[`Pallet::remove_whitelisted_call`\\].\n\n### whitelistCall(call\\_hash: `H256`)[\u200b](#whitelistcallcall_hash-h256 \"Direct link to whitelistcallcall_hash-h256\")\n\n*   **interface**: `api.tx.whitelist.whitelistCall`\n*   **summary**: See \\[`Pallet::whitelist_call`\\].\n\n* * *\n\nxcmPallet[\u200b](#xcmpallet \"Direct link to xcmPallet\")\n\n----------------------------------------------------\n\n### execute(message: `XcmVersionedXcm`, max\\_weight: `SpWeightsWeightV2Weight`)[\u200b](#executemessage-xcmversionedxcm-max_weight-spweightsweightv2weight \"Direct link to executemessage-xcmversionedxcm-max_weight-spweightsweightv2weight\")\n\n*   **interface**: `api.tx.xcmPallet.execute`\n*   **summary**: See \\[`Pallet::execute`\\].\n\n### forceDefaultXcmVersion(maybe\\_xcm\\_version: `Option<u32>`)[\u200b](#forcedefaultxcmversionmaybe_xcm_version-optionu32 \"Direct link to forcedefaultxcmversionmaybe_xcm_version-optionu32\")\n\n*   **interface**: `api.tx.xcmPallet.forceDefaultXcmVersion`\n*   **summary**: See \\[`Pallet::force_default_xcm_version`\\].\n\n### forceSubscribeVersionNotify(location: `XcmVersionedMultiLocation`)[\u200b](#forcesubscribeversionnotifylocation-xcmversionedmultilocation \"Direct link to forcesubscribeversionnotifylocation-xcmversionedmultilocation\")\n\n*   **interface**: `api.tx.xcmPallet.forceSubscribeVersionNotify`\n*   **summary**: See \\[`Pallet::force_subscribe_version_notify`\\].\n\n### forceSuspension(suspended: `bool`)[\u200b](#forcesuspensionsuspended-bool \"Direct link to forcesuspensionsuspended-bool\")\n\n*   **interface**: `api.tx.xcmPallet.forceSuspension`\n*   **summary**: See \\[`Pallet::force_suspension`\\].\n\n### forceUnsubscribeVersionNotify(location: `XcmVersionedMultiLocation`)[\u200b](#forceunsubscribeversionnotifylocation-xcmversionedmultilocation \"Direct link to forceunsubscribeversionnotifylocation-xcmversionedmultilocation\")\n\n*   **interface**: `api.tx.xcmPallet.forceUnsubscribeVersionNotify`\n*   **summary**: See \\[`Pallet::force_unsubscribe_version_notify`\\].\n\n### forceXcmVersion(location: `XcmV3MultiLocation`, version: `u32`)[\u200b](#forcexcmversionlocation-xcmv3multilocation-version-u32 \"Direct link to forcexcmversionlocation-xcmv3multilocation-version-u32\")\n\n*   **interface**: `api.tx.xcmPallet.forceXcmVersion`\n*   **summary**: See \\[`Pallet::force_xcm_version`\\].\n\n### limitedReserveTransferAssets(dest: `XcmVersionedMultiLocation`, beneficiary: `XcmVersionedMultiLocation`, assets: `XcmVersionedMultiAssets`, fee\\_asset\\_item: `u32`, weight\\_limit: `XcmV3WeightLimit`)[\u200b](#limitedreservetransferassetsdest-xcmversionedmultilocation-beneficiary-xcmversionedmultilocation-assets-xcmversionedmultiassets-fee_asset_item-u32-weight_limit-xcmv3weightlimit \"Direct link to limitedreservetransferassetsdest-xcmversionedmultilocation-beneficiary-xcmversionedmultilocation-assets-xcmversionedmultiassets-fee_asset_item-u32-weight_limit-xcmv3weightlimit\")\n\n*   **interface**: `api.tx.xcmPallet.limitedReserveTransferAssets`\n*   **summary**: See \\[`Pallet::limited_reserve_transfer_assets`\\].\n\n### limitedTeleportAssets(dest: `XcmVersionedMultiLocation`, beneficiary: `XcmVersionedMultiLocation`, assets: `XcmVersionedMultiAssets`, fee\\_asset\\_item: `u32`, weight\\_limit: `XcmV3WeightLimit`)[\u200b](#limitedteleportassetsdest-xcmversionedmultilocation-beneficiary-xcmversionedmultilocation-assets-xcmversionedmultiassets-fee_asset_item-u32-weight_limit-xcmv3weightlimit \"Direct link to limitedteleportassetsdest-xcmversionedmultilocation-beneficiary-xcmversionedmultilocation-assets-xcmversionedmultiassets-fee_asset_item-u32-weight_limit-xcmv3weightlimit\")\n\n*   **interface**: `api.tx.xcmPallet.limitedTeleportAssets`\n*   **summary**: See \\[`Pallet::limited_teleport_assets`\\].\n\n### reserveTransferAssets(dest: `XcmVersionedMultiLocation`, beneficiary: `XcmVersionedMultiLocation`, assets: `XcmVersionedMultiAssets`, fee\\_asset\\_item: `u32`)[\u200b](#reservetransferassetsdest-xcmversionedmultilocation-beneficiary-xcmversionedmultilocation-assets-xcmversionedmultiassets-fee_asset_item-u32 \"Direct link to reservetransferassetsdest-xcmversionedmultilocation-beneficiary-xcmversionedmultilocation-assets-xcmversionedmultiassets-fee_asset_item-u32\")\n\n*   **interface**: `api.tx.xcmPallet.reserveTransferAssets`\n*   **summary**: See \\[`Pallet::reserve_transfer_assets`\\].\n\n### send(dest: `XcmVersionedMultiLocation`, message: `XcmVersionedXcm`)[\u200b](#senddest-xcmversionedmultilocation-message-xcmversionedxcm \"Direct link to senddest-xcmversionedmultilocation-message-xcmversionedxcm\")\n\n*   **interface**: `api.tx.xcmPallet.send`\n*   **summary**: See \\[`Pallet::send`\\].\n\n### teleportAssets(dest: `XcmVersionedMultiLocation`, beneficiary: `XcmVersionedMultiLocation`, assets: `XcmVersionedMultiAssets`, fee\\_asset\\_item: `u32`)[\u200b](#teleportassetsdest-xcmversionedmultilocation-beneficiary-xcmversionedmultilocation-assets-xcmversionedmultiassets-fee_asset_item-u32 \"Direct link to teleportassetsdest-xcmversionedmultilocation-beneficiary-xcmversionedmultilocation-assets-xcmversionedmultiassets-fee_asset_item-u32\")\n\n*   **interface**: `api.tx.xcmPallet.teleportAssets`\n*   **summary**: See \\[`Pallet::teleport_assets`\\].\n\n[Edit this page](https://github.com/polkadot-js/docs/edit/master/docs/kusama/extrinsics.md)\n\n[Previous\\\n\\\nStorage](/docs/kusama/storage)\n[Next\\\n\\\nEvents](/docs/kusama/events)\n\n*   [auctions](#auctions)\n    *   [bid(para: `Compact<u32>`, auction\\_index: `Compact<u32>`, first\\_slot: `Compact<u32>`, last\\_slot: `Compact<u32>`, amount: `Compact<u128>`)](#bidpara-compactu32-auction_index-compactu32-first_slot-compactu32-last_slot-compactu32-amount-compactu128)\n        \n    *   [cancelAuction()](#cancelauction)\n        \n    *   [newAuction(duration: `Compact<u32>`, lease\\_period\\_index: `Compact<u32>`)](#newauctionduration-compactu32-lease_period_index-compactu32)\n        \n*   [babe](#babe)\n    *   [planConfigChange(config: `SpConsensusBabeDigestsNextConfigDescriptor`)](#planconfigchangeconfig-spconsensusbabedigestsnextconfigdescriptor)\n        \n    *   [reportEquivocation(equivocation\\_proof: `SpConsensusSlotsEquivocationProof`, key\\_owner\\_proof: `SpSessionMembershipProof`)](#reportequivocationequivocation_proof-spconsensusslotsequivocationproof-key_owner_proof-spsessionmembershipproof)\n        \n    *   [reportEquivocationUnsigned(equivocation\\_proof: `SpConsensusSlotsEquivocationProof`, key\\_owner\\_proof: `SpSessionMembershipProof`)](#reportequivocationunsignedequivocation_proof-spconsensusslotsequivocationproof-key_owner_proof-spsessionmembershipproof)\n        \n*   [balances](#balances)\n    *   [forceSetBalance(who: `MultiAddress`, new\\_free: `Compact<u128>`)](#forcesetbalancewho-multiaddress-new_free-compactu128)\n        \n    *   [forceTransfer(source: `MultiAddress`, dest: `MultiAddress`, value: `Compact<u128>`)](#forcetransfersource-multiaddress-dest-multiaddress-value-compactu128)\n        \n    *   [forceUnreserve(who: `MultiAddress`, amount: `u128`)](#forceunreservewho-multiaddress-amount-u128)\n        \n    *   [setBalanceDeprecated(who: `MultiAddress`, new\\_free: `Compact<u128>`, old\\_reserved: `Compact<u128>`)](#setbalancedeprecatedwho-multiaddress-new_free-compactu128-old_reserved-compactu128)\n        \n    *   [transfer(dest: `MultiAddress`, value: `Compact<u128>`)](#transferdest-multiaddress-value-compactu128)\n        \n    *   [transferAll(dest: `MultiAddress`, keep\\_alive: `bool`)](#transferalldest-multiaddress-keep_alive-bool)\n        \n    *   [transferAllowDeath(dest: `MultiAddress`, value: `Compact<u128>`)](#transferallowdeathdest-multiaddress-value-compactu128)\n        \n    *   [transferKeepAlive(dest: `MultiAddress`, value: `Compact<u128>`)](#transferkeepalivedest-multiaddress-value-compactu128)\n        \n    *   [upgradeAccounts(who: `Vec<AccountId32>`)](#upgradeaccountswho-vecaccountid32)\n        \n*   [beefy](#beefy)\n    *   [reportEquivocation(equivocation\\_proof: `SpConsensusBeefyEquivocationProof`, key\\_owner\\_proof: `SpSessionMembershipProof`)](#reportequivocationequivocation_proof-spconsensusbeefyequivocationproof-key_owner_proof-spsessionmembershipproof)\n        \n    *   [reportEquivocationUnsigned(equivocation\\_proof: `SpConsensusBeefyEquivocationProof`, key\\_owner\\_proof: `SpSessionMembershipProof`)](#reportequivocationunsignedequivocation_proof-spconsensusbeefyequivocationproof-key_owner_proof-spsessionmembershipproof)\n        \n*   [bounties](#bounties)\n    *   [acceptCurator(bounty\\_id: `Compact<u32>`)](#acceptcuratorbounty_id-compactu32)\n        \n    *   [approveBounty(bounty\\_id: `Compact<u32>`)](#approvebountybounty_id-compactu32)\n        \n    *   [awardBounty(bounty\\_id: `Compact<u32>`, beneficiary: `MultiAddress`)](#awardbountybounty_id-compactu32-beneficiary-multiaddress)\n        \n    *   [claimBounty(bounty\\_id: `Compact<u32>`)](#claimbountybounty_id-compactu32)\n        \n    *   [closeBounty(bounty\\_id: `Compact<u32>`)](#closebountybounty_id-compactu32)\n        \n    *   [extendBountyExpiry(bounty\\_id: `Compact<u32>`, remark: `Bytes`)](#extendbountyexpirybounty_id-compactu32-remark-bytes)\n        \n    *   [proposeBounty(value: `Compact<u128>`, description: `Bytes`)](#proposebountyvalue-compactu128-description-bytes)\n        \n    *   [proposeCurator(bounty\\_id: `Compact<u32>`, curator: `MultiAddress`, fee: `Compact<u128>`)](#proposecuratorbounty_id-compactu32-curator-multiaddress-fee-compactu128)\n        \n    *   [unassignCurator(bounty\\_id: `Compact<u32>`)](#unassigncuratorbounty_id-compactu32)\n        \n*   [childBounties](#childbounties)\n    *   [acceptCurator(parent\\_bounty\\_id: `Compact<u32>`, child\\_bounty\\_id: `Compact<u32>`)](#acceptcuratorparent_bounty_id-compactu32-child_bounty_id-compactu32)\n        \n    *   [addChildBounty(parent\\_bounty\\_id: `Compact<u32>`, value: `Compact<u128>`, description: `Bytes`)](#addchildbountyparent_bounty_id-compactu32-value-compactu128-description-bytes)\n        \n    *   [awardChildBounty(parent\\_bounty\\_id: `Compact<u32>`, child\\_bounty\\_id: `Compact<u32>`, beneficiary: `MultiAddress`)](#awardchildbountyparent_bounty_id-compactu32-child_bounty_id-compactu32-beneficiary-multiaddress)\n        \n    *   [claimChildBounty(parent\\_bounty\\_id: `Compact<u32>`, child\\_bounty\\_id: `Compact<u32>`)](#claimchildbountyparent_bounty_id-compactu32-child_bounty_id-compactu32)\n        \n    *   [closeChildBounty(parent\\_bounty\\_id: `Compact<u32>`, child\\_bounty\\_id: `Compact<u32>`)](#closechildbountyparent_bounty_id-compactu32-child_bounty_id-compactu32)\n        \n    *   [proposeCurator(parent\\_bounty\\_id: `Compact<u32>`, child\\_bounty\\_id: `Compact<u32>`, curator: `MultiAddress`, fee: `Compact<u128>`)](#proposecuratorparent_bounty_id-compactu32-child_bounty_id-compactu32-curator-multiaddress-fee-compactu128)\n        \n    *   [unassignCurator(parent\\_bounty\\_id: `Compact<u32>`, child\\_bounty\\_id: `Compact<u32>`)](#unassigncuratorparent_bounty_id-compactu32-child_bounty_id-compactu32)\n        \n*   [claims](#claims)\n    *   [attest(statement: `Bytes`)](#atteststatement-bytes)\n        \n    *   [claim(dest: `AccountId32`, ethereum\\_signature: `PolkadotRuntimeCommonClaimsEcdsaSignature`)](#claimdest-accountid32-ethereum_signature-polkadotruntimecommonclaimsecdsasignature)\n        \n    *   [claimAttest(dest: `AccountId32`, ethereum\\_signature: `PolkadotRuntimeCommonClaimsEcdsaSignature`, statement: `Bytes`)](#claimattestdest-accountid32-ethereum_signature-polkadotruntimecommonclaimsecdsasignature-statement-bytes)\n        \n    *   [mintClaim(who: `EthereumAddress`, value: `u128`, vesting\\_schedule: `Option<(u128,u128,u32)>`, statement: `Option<PolkadotRuntimeCommonClaimsStatementKind>`)](#mintclaimwho-ethereumaddress-value-u128-vesting_schedule-optionu128u128u32-statement-optionpolkadotruntimecommonclaimsstatementkind)\n        \n    *   [moveClaim(old: `EthereumAddress`, new: `EthereumAddress`, maybe\\_preclaim: `Option<AccountId32>`)](#moveclaimold-ethereumaddress-new-ethereumaddress-maybe_preclaim-optionaccountid32)\n        \n*   [configuration](#configuration)\n    *   [setAsyncBackingParams(new: `PolkadotPrimitivesVstagingAsyncBackingParams`)](#setasyncbackingparamsnew-polkadotprimitivesvstagingasyncbackingparams)\n        \n    *   [setBypassConsistencyCheck(new: `bool`)](#setbypassconsistencychecknew-bool)\n        \n    *   [setCodeRetentionPeriod(new: `u32`)](#setcoderetentionperiodnew-u32)\n        \n    *   [setDisputePeriod(new: `u32`)](#setdisputeperiodnew-u32)\n        \n    *   [setDisputePostConclusionAcceptancePeriod(new: `u32`)](#setdisputepostconclusionacceptanceperiodnew-u32)\n        \n    *   [setExecutorParams(new: `PolkadotPrimitivesV5ExecutorParams`)](#setexecutorparamsnew-polkadotprimitivesv5executorparams)\n        \n    *   [setGroupRotationFrequency(new: `u32`)](#setgrouprotationfrequencynew-u32)\n        \n    *   [setHrmpChannelMaxCapacity(new: `u32`)](#sethrmpchannelmaxcapacitynew-u32)\n        \n    *   [setHrmpChannelMaxMessageSize(new: `u32`)](#sethrmpchannelmaxmessagesizenew-u32)\n        \n    *   [setHrmpChannelMaxTotalSize(new: `u32`)](#sethrmpchannelmaxtotalsizenew-u32)\n        \n    *   [setHrmpMaxMessageNumPerCandidate(new: `u32`)](#sethrmpmaxmessagenumpercandidatenew-u32)\n        \n    *   [setHrmpMaxParachainInboundChannels(new: `u32`)](#sethrmpmaxparachaininboundchannelsnew-u32)\n        \n    *   [setHrmpMaxParachainOutboundChannels(new: `u32`)](#sethrmpmaxparachainoutboundchannelsnew-u32)\n        \n    *   [setHrmpOpenRequestTtl(new: `u32`)](#sethrmpopenrequestttlnew-u32)\n        \n    *   [setHrmpRecipientDeposit(new: `u128`)](#sethrmprecipientdepositnew-u128)\n        \n    *   [setHrmpSenderDeposit(new: `u128`)](#sethrmpsenderdepositnew-u128)\n        \n    *   [setMaxCodeSize(new: `u32`)](#setmaxcodesizenew-u32)\n        \n    *   [setMaxDownwardMessageSize(new: `u32`)](#setmaxdownwardmessagesizenew-u32)\n        \n    *   [setMaxHeadDataSize(new: `u32`)](#setmaxheaddatasizenew-u32)\n        \n    *   [setMaxPovSize(new: `u32`)](#setmaxpovsizenew-u32)\n        \n    *   [setMaxUpwardMessageNumPerCandidate(new: `u32`)](#setmaxupwardmessagenumpercandidatenew-u32)\n        \n    *   [setMaxUpwardMessageSize(new: `u32`)](#setmaxupwardmessagesizenew-u32)\n        \n    *   [setMaxUpwardQueueCount(new: `u32`)](#setmaxupwardqueuecountnew-u32)\n        \n    *   [setMaxUpwardQueueSize(new: `u32`)](#setmaxupwardqueuesizenew-u32)\n        \n    *   [setMaxValidators(new: `Option<u32>`)](#setmaxvalidatorsnew-optionu32)\n        \n    *   [setMaxValidatorsPerCore(new: `Option<u32>`)](#setmaxvalidatorspercorenew-optionu32)\n        \n    *   [setMinimumValidationUpgradeDelay(new: `u32`)](#setminimumvalidationupgradedelaynew-u32)\n        \n    *   [setNDelayTranches(new: `u32`)](#setndelaytranchesnew-u32)\n        \n    *   [setNeededApprovals(new: `u32`)](#setneededapprovalsnew-u32)\n        \n    *   [setNoShowSlots(new: `u32`)](#setnoshowslotsnew-u32)\n        \n    *   [setOnDemandBaseFee(new: `u128`)](#setondemandbasefeenew-u128)\n        \n    *   [setOnDemandCores(new: `u32`)](#setondemandcoresnew-u32)\n        \n    *   [setOnDemandFeeVariability(new: `Perbill`)](#setondemandfeevariabilitynew-perbill)\n        \n    *   [setOnDemandQueueMaxSize(new: `u32`)](#setondemandqueuemaxsizenew-u32)\n        \n    *   [setOnDemandRetries(new: `u32`)](#setondemandretriesnew-u32)\n        \n    *   [setOnDemandTargetQueueUtilization(new: `Perbill`)](#setondemandtargetqueueutilizationnew-perbill)\n        \n    *   [setOnDemandTtl(new: `u32`)](#setondemandttlnew-u32)\n        \n    *   [setParasAvailabilityPeriod(new: `u32`)](#setparasavailabilityperiodnew-u32)\n        \n    *   [setPvfVotingTtl(new: `u32`)](#setpvfvotingttlnew-u32)\n        \n    *   [setRelayVrfModuloSamples(new: `u32`)](#setrelayvrfmodulosamplesnew-u32)\n        \n    *   [setSchedulingLookahead(new: `u32`)](#setschedulinglookaheadnew-u32)\n        \n    *   [setValidationUpgradeCooldown(new: `u32`)](#setvalidationupgradecooldownnew-u32)\n        \n    *   [setValidationUpgradeDelay(new: `u32`)](#setvalidationupgradedelaynew-u32)\n        \n    *   [setZerothDelayTrancheWidth(new: `u32`)](#setzerothdelaytranchewidthnew-u32)\n        \n*   [convictionVoting](#convictionvoting)\n    *   [delegate(class: `u16`, to: `MultiAddress`, conviction: `PalletConvictionVotingConviction`, balance: `u128`)](#delegateclass-u16-to-multiaddress-conviction-palletconvictionvotingconviction-balance-u128)\n        \n    *   [removeOtherVote(target: `MultiAddress`, class: `u16`, index: `u32`)](#removeothervotetarget-multiaddress-class-u16-index-u32)\n        \n    *   [removeVote(class: `Option<u16>`, index: `u32`)](#removevoteclass-optionu16-index-u32)\n        \n    *   [undelegate(class: `u16`)](#undelegateclass-u16)\n        \n    *   [unlock(class: `u16`, target: `MultiAddress`)](#unlockclass-u16-target-multiaddress)\n        \n    *   [vote(poll\\_index: `Compact<u32>`, vote: `PalletConvictionVotingVoteAccountVote`)](#votepoll_index-compactu32-vote-palletconvictionvotingvoteaccountvote)\n        \n*   [crowdloan](#crowdloan)\n    *   [addMemo(index: `u32`, memo: `Bytes`)](#addmemoindex-u32-memo-bytes)\n        \n    *   [contribute(index: `Compact<u32>`, value: `Compact<u128>`, signature: `Option<SpRuntimeMultiSignature>`)](#contributeindex-compactu32-value-compactu128-signature-optionspruntimemultisignature)\n        \n    *   [contributeAll(index: `Compact<u32>`, signature: `Option<SpRuntimeMultiSignature>`)](#contributeallindex-compactu32-signature-optionspruntimemultisignature)\n        \n    *   [create(index: `Compact<u32>`, cap: `Compact<u128>`, first\\_period: `Compact<u32>`, last\\_period: `Compact<u32>`, end: `Compact<u32>`, verifier: `Option<SpRuntimeMultiSigner>`)](#createindex-compactu32-cap-compactu128-first_period-compactu32-last_period-compactu32-end-compactu32-verifier-optionspruntimemultisigner)\n        \n    *   [dissolve(index: `Compact<u32>`)](#dissolveindex-compactu32)\n        \n    *   [edit(index: `Compact<u32>`, cap: `Compact<u128>`, first\\_period: `Compact<u32>`, last\\_period: `Compact<u32>`, end: `Compact<u32>`, verifier: `Option<SpRuntimeMultiSigner>`)](#editindex-compactu32-cap-compactu128-first_period-compactu32-last_period-compactu32-end-compactu32-verifier-optionspruntimemultisigner)\n        \n    *   [poke(index: `u32`)](#pokeindex-u32)\n        \n    *   [refund(index: `Compact<u32>`)](#refundindex-compactu32)\n        \n    *   [withdraw(who: `AccountId32`, index: `Compact<u32>`)](#withdrawwho-accountid32-index-compactu32)\n        \n*   [electionProviderMultiPhase](#electionprovidermultiphase)\n    *   [governanceFallback(maybe\\_max\\_voters: `Option<u32>`, maybe\\_max\\_targets: `Option<u32>`)](#governancefallbackmaybe_max_voters-optionu32-maybe_max_targets-optionu32)\n        \n    *   [setEmergencyElectionResult(supports: `Vec<(AccountId32,SpNposElectionsSupport)>`)](#setemergencyelectionresultsupports-vecaccountid32spnposelectionssupport)\n        \n    *   [setMinimumUntrustedScore(maybe\\_next\\_score: `Option<SpNposElectionsElectionScore>`)](#setminimumuntrustedscoremaybe_next_score-optionspnposelectionselectionscore)\n        \n    *   [submit(raw\\_solution: `PalletElectionProviderMultiPhaseRawSolution`)](#submitraw_solution-palletelectionprovidermultiphaserawsolution)\n        \n    *   [submitUnsigned(raw\\_solution: `PalletElectionProviderMultiPhaseRawSolution`, witness: `PalletElectionProviderMultiPhaseSolutionOrSnapshotSize`)](#submitunsignedraw_solution-palletelectionprovidermultiphaserawsolution-witness-palletelectionprovidermultiphasesolutionorsnapshotsize)\n        \n*   [fastUnstake](#fastunstake)\n    *   [control(eras\\_to\\_check: `u32`)](#controleras_to_check-u32)\n        \n    *   [deregister()](#deregister)\n        \n    *   [registerFastUnstake()](#registerfastunstake)\n        \n*   [fellowshipCollective](#fellowshipcollective)\n    *   [addMember(who: `MultiAddress`)](#addmemberwho-multiaddress)\n        \n    *   [cleanupPoll(poll\\_index: `u32`, max: `u32`)](#cleanuppollpoll_index-u32-max-u32)\n        \n    *   [demoteMember(who: `MultiAddress`)](#demotememberwho-multiaddress)\n        \n    *   [promoteMember(who: `MultiAddress`)](#promotememberwho-multiaddress)\n        \n    *   [removeMember(who: `MultiAddress`, min\\_rank: `u16`)](#removememberwho-multiaddress-min_rank-u16)\n        \n    *   [vote(poll: `u32`, aye: `bool`)](#votepoll-u32-aye-bool)\n        \n*   [fellowshipReferenda](#fellowshipreferenda)\n    *   [cancel(index: `u32`)](#cancelindex-u32)\n        \n    *   [kill(index: `u32`)](#killindex-u32)\n        \n    *   [nudgeReferendum(index: `u32`)](#nudgereferendumindex-u32)\n        \n    *   [oneFewerDeciding(track: `u16`)](#onefewerdecidingtrack-u16)\n        \n    *   [placeDecisionDeposit(index: `u32`)](#placedecisiondepositindex-u32)\n        \n    *   [refundDecisionDeposit(index: `u32`)](#refunddecisiondepositindex-u32)\n        \n    *   [refundSubmissionDeposit(index: `u32`)](#refundsubmissiondepositindex-u32)\n        \n    *   [setMetadata(index: `u32`, maybe\\_hash: `Option<H256>`)](#setmetadataindex-u32-maybe_hash-optionh256)\n        \n    *   [submit(proposal\\_origin: `KusamaRuntimeOriginCaller`, proposal: `FrameSupportPreimagesBounded`, enactment\\_moment: `FrameSupportScheduleDispatchTime`)](#submitproposal_origin-kusamaruntimeorigincaller-proposal-framesupportpreimagesbounded-enactment_moment-framesupportscheduledispatchtime)\n        \n*   [grandpa](#grandpa)\n    *   [noteStalled(delay: `u32`, best\\_finalized\\_block\\_number: `u32`)](#notestalleddelay-u32-best_finalized_block_number-u32)\n        \n    *   [reportEquivocation(equivocation\\_proof: `SpConsensusGrandpaEquivocationProof`, key\\_owner\\_proof: `SpSessionMembershipProof`)](#reportequivocationequivocation_proof-spconsensusgrandpaequivocationproof-key_owner_proof-spsessionmembershipproof)\n        \n    *   [reportEquivocationUnsigned(equivocation\\_proof: `SpConsensusGrandpaEquivocationProof`, key\\_owner\\_proof: `SpSessionMembershipProof`)](#reportequivocationunsignedequivocation_proof-spconsensusgrandpaequivocationproof-key_owner_proof-spsessionmembershipproof)\n        \n*   [hrmp](#hrmp)\n    *   [forceCleanHrmp(para: `u32`, inbound: `u32`, outbound: `u32`)](#forcecleanhrmppara-u32-inbound-u32-outbound-u32)\n        \n    *   [forceOpenHrmpChannel(sender: `u32`, recipient: `u32`, max\\_capacity: `u32`, max\\_message\\_size: `u32`)](#forceopenhrmpchannelsender-u32-recipient-u32-max_capacity-u32-max_message_size-u32)\n        \n    *   [forceProcessHrmpClose(channels: `u32`)](#forceprocesshrmpclosechannels-u32)\n        \n    *   [forceProcessHrmpOpen(channels: `u32`)](#forceprocesshrmpopenchannels-u32)\n        \n    *   [hrmpAcceptOpenChannel(sender: `u32`)](#hrmpacceptopenchannelsender-u32)\n        \n    *   [hrmpCancelOpenRequest(channel\\_id: `PolkadotParachainPrimitivesHrmpChannelId`, open\\_requests: `u32`)](#hrmpcancelopenrequestchannel_id-polkadotparachainprimitiveshrmpchannelid-open_requests-u32)\n        \n    *   [hrmpCloseChannel(channel\\_id: `PolkadotParachainPrimitivesHrmpChannelId`)](#hrmpclosechannelchannel_id-polkadotparachainprimitiveshrmpchannelid)\n        \n    *   [hrmpInitOpenChannel(recipient: `u32`, proposed\\_max\\_capacity: `u32`, proposed\\_max\\_message\\_size: `u32`)](#hrmpinitopenchannelrecipient-u32-proposed_max_capacity-u32-proposed_max_message_size-u32)\n        \n*   [identity](#identity)\n    *   [addRegistrar(account: `MultiAddress`)](#addregistraraccount-multiaddress)\n        \n    *   [addSub(sub: `MultiAddress`, data: `Data`)](#addsubsub-multiaddress-data-data)\n        \n    *   [cancelRequest(reg\\_index: `u32`)](#cancelrequestreg_index-u32)\n        \n    *   [clearIdentity()](#clearidentity)\n        \n    *   [killIdentity(target: `MultiAddress`)](#killidentitytarget-multiaddress)\n        \n    *   [provideJudgement(reg\\_index: `Compact<u32>`, target: `MultiAddress`, judgement: `PalletIdentityJudgement`, identity: `H256`)](#providejudgementreg_index-compactu32-target-multiaddress-judgement-palletidentityjudgement-identity-h256)\n        \n    *   [quitSub()](#quitsub)\n        \n    *   [removeSub(sub: `MultiAddress`)](#removesubsub-multiaddress)\n        \n    *   [renameSub(sub: `MultiAddress`, data: `Data`)](#renamesubsub-multiaddress-data-data)\n        \n    *   [requestJudgement(reg\\_index: `Compact<u32>`, max\\_fee: `Compact<u128>`)](#requestjudgementreg_index-compactu32-max_fee-compactu128)\n        \n    *   [setAccountId(index: `Compact<u32>`, new: `MultiAddress`)](#setaccountidindex-compactu32-new-multiaddress)\n        \n    *   [setFee(index: `Compact<u32>`, fee: `Compact<u128>`)](#setfeeindex-compactu32-fee-compactu128)\n        \n    *   [setFields(index: `Compact<u32>`, fields: `PalletIdentityBitFlags`)](#setfieldsindex-compactu32-fields-palletidentitybitflags)\n        \n    *   [setIdentity(info: `PalletIdentityIdentityInfo`)](#setidentityinfo-palletidentityidentityinfo)\n        \n    *   [setSubs(subs: `Vec<(AccountId32,Data)>`)](#setsubssubs-vecaccountid32data)\n        \n*   [imOnline](#imonline)\n    *   [heartbeat(heartbeat: `PalletImOnlineHeartbeat`, signature: `PalletImOnlineSr25519AppSr25519Signature`)](#heartbeatheartbeat-palletimonlineheartbeat-signature-palletimonlinesr25519appsr25519signature)\n        \n*   [indices](#indices)\n    *   [claim(index: `u32`)](#claimindex-u32)\n        \n    *   [forceTransfer(new: `MultiAddress`, index: `u32`, freeze: `bool`)](#forcetransfernew-multiaddress-index-u32-freeze-bool)\n        \n    *   [free(index: `u32`)](#freeindex-u32)\n        \n    *   [freeze(index: `u32`)](#freezeindex-u32)\n        \n    *   [transfer(new: `MultiAddress`, index: `u32`)](#transfernew-multiaddress-index-u32)\n        \n*   [initializer](#initializer)\n    *   [forceApprove(up\\_to: `u32`)](#forceapproveup_to-u32)\n        \n*   [messageQueue](#messagequeue)\n    *   [executeOverweight(message\\_origin: `PolkadotRuntimeParachainsInclusionAggregateMessageOrigin`, page: `u32`, index: `u32`, weight\\_limit: `SpWeightsWeightV2Weight`)](#executeoverweightmessage_origin-polkadotruntimeparachainsinclusionaggregatemessageorigin-page-u32-index-u32-weight_limit-spweightsweightv2weight)\n        \n    *   [reapPage(message\\_origin: `PolkadotRuntimeParachainsInclusionAggregateMessageOrigin`, page\\_index: `u32`)](#reappagemessage_origin-polkadotruntimeparachainsinclusionaggregatemessageorigin-page_index-u32)\n        \n*   [multisig](#multisig)\n    *   [approveAsMulti(threshold: `u16`, other\\_signatories: `Vec<AccountId32>`, maybe\\_timepoint: `Option<PalletMultisigTimepoint>`, call\\_hash: `[u8;32]`, max\\_weight: `SpWeightsWeightV2Weight`)](#approveasmultithreshold-u16-other_signatories-vecaccountid32-maybe_timepoint-optionpalletmultisigtimepoint-call_hash-u832-max_weight-spweightsweightv2weight)\n        \n    *   [asMulti(threshold: `u16`, other\\_signatories: `Vec<AccountId32>`, maybe\\_timepoint: `Option<PalletMultisigTimepoint>`, call: `Call`, max\\_weight: `SpWeightsWeightV2Weight`)](#asmultithreshold-u16-other_signatories-vecaccountid32-maybe_timepoint-optionpalletmultisigtimepoint-call-call-max_weight-spweightsweightv2weight)\n        \n    *   [asMultiThreshold1(other\\_signatories: `Vec<AccountId32>`, call: `Call`)](#asmultithreshold1other_signatories-vecaccountid32-call-call)\n        \n    *   [cancelAsMulti(threshold: `u16`, other\\_signatories: `Vec<AccountId32>`, timepoint: `PalletMultisigTimepoint`, call\\_hash: `[u8;32]`)](#cancelasmultithreshold-u16-other_signatories-vecaccountid32-timepoint-palletmultisigtimepoint-call_hash-u832)\n        \n*   [nis](#nis)\n    *   [communify(index: `Compact<u32>`)](#communifyindex-compactu32)\n        \n    *   [fundDeficit()](#funddeficit)\n        \n    *   [placeBid(amount: `Compact<u128>`, duration: `u32`)](#placebidamount-compactu128-duration-u32)\n        \n    *   [privatize(index: `Compact<u32>`)](#privatizeindex-compactu32)\n        \n    *   [retractBid(amount: `Compact<u128>`, duration: `u32`)](#retractbidamount-compactu128-duration-u32)\n        \n    *   [thawCommunal(index: `Compact<u32>`)](#thawcommunalindex-compactu32)\n        \n    *   [thawPrivate(index: `Compact<u32>`, maybe\\_proportion: `Option<Perquintill>`)](#thawprivateindex-compactu32-maybe_proportion-optionperquintill)\n        \n*   [nisCounterpartBalances](#niscounterpartbalances)\n    *   [forceSetBalance(who: `MultiAddress`, new\\_free: `Compact<u128>`)](#forcesetbalancewho-multiaddress-new_free-compactu128-1)\n        \n    *   [forceTransfer(source: `MultiAddress`, dest: `MultiAddress`, value: `Compact<u128>`)](#forcetransfersource-multiaddress-dest-multiaddress-value-compactu128-1)\n        \n    *   [forceUnreserve(who: `MultiAddress`, amount: `u128`)](#forceunreservewho-multiaddress-amount-u128-1)\n        \n    *   [setBalanceDeprecated(who: `MultiAddress`, new\\_free: `Compact<u128>`, old\\_reserved: `Compact<u128>`)](#setbalancedeprecatedwho-multiaddress-new_free-compactu128-old_reserved-compactu128-1)\n        \n    *   [transfer(dest: `MultiAddress`, value: `Compact<u128>`)](#transferdest-multiaddress-value-compactu128-1)\n        \n    *   [transferAll(dest: `MultiAddress`, keep\\_alive: `bool`)](#transferalldest-multiaddress-keep_alive-bool-1)\n        \n    *   [transferAllowDeath(dest: `MultiAddress`, value: `Compact<u128>`)](#transferallowdeathdest-multiaddress-value-compactu128-1)\n        \n    *   [transferKeepAlive(dest: `MultiAddress`, value: `Compact<u128>`)](#transferkeepalivedest-multiaddress-value-compactu128-1)\n        \n    *   [upgradeAccounts(who: `Vec<AccountId32>`)](#upgradeaccountswho-vecaccountid32-1)\n        \n*   [nominationPools](#nominationpools)\n    *   [bondExtra(extra: `PalletNominationPoolsBondExtra`)](#bondextraextra-palletnominationpoolsbondextra)\n        \n    *   [bondExtraOther(member: `MultiAddress`, extra: `PalletNominationPoolsBondExtra`)](#bondextraothermember-multiaddress-extra-palletnominationpoolsbondextra)\n        \n    *   [chill(pool\\_id: `u32`)](#chillpool_id-u32)\n        \n    *   [claimCommission(pool\\_id: `u32`)](#claimcommissionpool_id-u32)\n        \n    *   [claimPayout()](#claimpayout)\n        \n    *   [claimPayoutOther(other: `AccountId32`)](#claimpayoutotherother-accountid32)\n        \n    *   [create(amount: `Compact<u128>`, root: `MultiAddress`, nominator: `MultiAddress`, bouncer: `MultiAddress`)](#createamount-compactu128-root-multiaddress-nominator-multiaddress-bouncer-multiaddress)\n        \n    *   [createWithPoolId(amount: `Compact<u128>`, root: `MultiAddress`, nominator: `MultiAddress`, bouncer: `MultiAddress`, pool\\_id: `u32`)](#createwithpoolidamount-compactu128-root-multiaddress-nominator-multiaddress-bouncer-multiaddress-pool_id-u32)\n        \n    *   [join(amount: `Compact<u128>`, pool\\_id: `u32`)](#joinamount-compactu128-pool_id-u32)\n        \n    *   [nominate(pool\\_id: `u32`, validators: `Vec<AccountId32>`)](#nominatepool_id-u32-validators-vecaccountid32)\n        \n    *   [poolWithdrawUnbonded(pool\\_id: `u32`, num\\_slashing\\_spans: `u32`)](#poolwithdrawunbondedpool_id-u32-num_slashing_spans-u32)\n        \n    *   [setClaimPermission(permission: `PalletNominationPoolsClaimPermission`)](#setclaimpermissionpermission-palletnominationpoolsclaimpermission)\n        \n    *   [setCommission(pool\\_id: `u32`, new\\_commission: `Option<(Perbill,AccountId32)>`)](#setcommissionpool_id-u32-new_commission-optionperbillaccountid32)\n        \n    *   [setCommissionChangeRate(pool\\_id: `u32`, change\\_rate: `PalletNominationPoolsCommissionChangeRate`)](#setcommissionchangeratepool_id-u32-change_rate-palletnominationpoolscommissionchangerate)\n        \n    *   [setCommissionMax(pool\\_id: `u32`, max\\_commission: `Perbill`)](#setcommissionmaxpool_id-u32-max_commission-perbill)\n        \n    *   [setConfigs(min\\_join\\_bond: `PalletNominationPoolsConfigOpU128`, min\\_create\\_bond: `PalletNominationPoolsConfigOpU128`, max\\_pools: `PalletNominationPoolsConfigOpU32`, max\\_members: `PalletNominationPoolsConfigOpU32`, max\\_members\\_per\\_pool: `PalletNominationPoolsConfigOpU32`, global\\_max\\_commission: `PalletNominationPoolsConfigOpPerbill`)](#setconfigsmin_join_bond-palletnominationpoolsconfigopu128-min_create_bond-palletnominationpoolsconfigopu128-max_pools-palletnominationpoolsconfigopu32-max_members-palletnominationpoolsconfigopu32-max_members_per_pool-palletnominationpoolsconfigopu32-global_max_commission-palletnominationpoolsconfigopperbill)\n        \n    *   [setMetadata(pool\\_id: `u32`, metadata: `Bytes`)](#setmetadatapool_id-u32-metadata-bytes)\n        \n    *   [setState(pool\\_id: `u32`, state: `PalletNominationPoolsPoolState`)](#setstatepool_id-u32-state-palletnominationpoolspoolstate)\n        \n    *   [unbond(member\\_account: `MultiAddress`, unbonding\\_points: `Compact<u128>`)](#unbondmember_account-multiaddress-unbonding_points-compactu128)\n        \n    *   [updateRoles(pool\\_id: `u32`, new\\_root: `PalletNominationPoolsConfigOpAccountId32`, new\\_nominator: `PalletNominationPoolsConfigOpAccountId32`, new\\_bouncer: `PalletNominationPoolsConfigOpAccountId32`)](#updaterolespool_id-u32-new_root-palletnominationpoolsconfigopaccountid32-new_nominator-palletnominationpoolsconfigopaccountid32-new_bouncer-palletnominationpoolsconfigopaccountid32)\n        \n    *   [withdrawUnbonded(member\\_account: `MultiAddress`, num\\_slashing\\_spans: `u32`)](#withdrawunbondedmember_account-multiaddress-num_slashing_spans-u32)\n        \n*   [paraInclusion](#parainclusion)\n    \n*   [paraInherent](#parainherent)\n    *   [enter(data: `PolkadotPrimitivesV5InherentData`)](#enterdata-polkadotprimitivesv5inherentdata)\n        \n*   [paras](#paras)\n    *   [addTrustedValidationCode(validation\\_code: `Bytes`)](#addtrustedvalidationcodevalidation_code-bytes)\n        \n    *   [forceNoteNewHead(para: `u32`, new\\_head: `Bytes`)](#forcenotenewheadpara-u32-new_head-bytes)\n        \n    *   [forceQueueAction(para: `u32`)](#forcequeueactionpara-u32)\n        \n    *   [forceScheduleCodeUpgrade(para: `u32`, new\\_code: `Bytes`, relay\\_parent\\_number: `u32`)](#forceschedulecodeupgradepara-u32-new_code-bytes-relay_parent_number-u32)\n        \n    *   [forceSetCurrentCode(para: `u32`, new\\_code: `Bytes`)](#forcesetcurrentcodepara-u32-new_code-bytes)\n        \n    *   [forceSetCurrentHead(para: `u32`, new\\_head: `Bytes`)](#forcesetcurrentheadpara-u32-new_head-bytes)\n        \n    *   [forceSetMostRecentContext(para: `u32`, context: `u32`)](#forcesetmostrecentcontextpara-u32-context-u32)\n        \n    *   [includePvfCheckStatement(stmt: `PolkadotPrimitivesV5PvfCheckStatement`, signature: `PolkadotPrimitivesV5ValidatorAppSignature`)](#includepvfcheckstatementstmt-polkadotprimitivesv5pvfcheckstatement-signature-polkadotprimitivesv5validatorappsignature)\n        \n    *   [pokeUnusedValidationCode(validation\\_code\\_hash: `H256`)](#pokeunusedvalidationcodevalidation_code_hash-h256)\n        \n*   [parasDisputes](#parasdisputes)\n    *   [forceUnfreeze()](#forceunfreeze)\n        \n*   [parasShared](#parasshared)\n    \n*   [parasSlashing](#parasslashing)\n    *   [reportDisputeLostUnsigned(dispute\\_proof: `PolkadotPrimitivesV5SlashingDisputeProof`, key\\_owner\\_proof: `SpSessionMembershipProof`)](#reportdisputelostunsigneddispute_proof-polkadotprimitivesv5slashingdisputeproof-key_owner_proof-spsessionmembershipproof)\n        \n*   [preimage](#preimage)\n    *   [notePreimage(bytes: `Bytes`)](#notepreimagebytes-bytes)\n        \n    *   [requestPreimage(hash: `H256`)](#requestpreimagehash-h256)\n        \n    *   [unnotePreimage(hash: `H256`)](#unnotepreimagehash-h256)\n        \n    *   [unrequestPreimage(hash: `H256`)](#unrequestpreimagehash-h256)\n        \n*   [proxy](#proxy)\n    *   [addProxy(delegate: `MultiAddress`, proxy\\_type: `KusamaRuntimeProxyType`, delay: `u32`)](#addproxydelegate-multiaddress-proxy_type-kusamaruntimeproxytype-delay-u32)\n        \n    *   [announce(real: `MultiAddress`, call\\_hash: `H256`)](#announcereal-multiaddress-call_hash-h256)\n        \n    *   [createPure(proxy\\_type: `KusamaRuntimeProxyType`, delay: `u32`, index: `u16`)](#createpureproxy_type-kusamaruntimeproxytype-delay-u32-index-u16)\n        \n    *   [killPure(spawner: `MultiAddress`, proxy\\_type: `KusamaRuntimeProxyType`, index: `u16`, height: `Compact<u32>`, ext\\_index: `Compact<u32>`)](#killpurespawner-multiaddress-proxy_type-kusamaruntimeproxytype-index-u16-height-compactu32-ext_index-compactu32)\n        \n    *   [proxy(real: `MultiAddress`, force\\_proxy\\_type: `Option<KusamaRuntimeProxyType>`, call: `Call`)](#proxyreal-multiaddress-force_proxy_type-optionkusamaruntimeproxytype-call-call)\n        \n    *   [proxyAnnounced(delegate: `MultiAddress`, real: `MultiAddress`, force\\_proxy\\_type: `Option<KusamaRuntimeProxyType>`, call: `Call`)](#proxyannounceddelegate-multiaddress-real-multiaddress-force_proxy_type-optionkusamaruntimeproxytype-call-call)\n        \n    *   [rejectAnnouncement(delegate: `MultiAddress`, call\\_hash: `H256`)](#rejectannouncementdelegate-multiaddress-call_hash-h256)\n        \n    *   [removeAnnouncement(real: `MultiAddress`, call\\_hash: `H256`)](#removeannouncementreal-multiaddress-call_hash-h256)\n        \n    *   [removeProxies()](#removeproxies)\n        \n    *   [removeProxy(delegate: `MultiAddress`, proxy\\_type: `KusamaRuntimeProxyType`, delay: `u32`)](#removeproxydelegate-multiaddress-proxy_type-kusamaruntimeproxytype-delay-u32)\n        \n*   [recovery](#recovery)\n    *   [asRecovered(account: `MultiAddress`, call: `Call`)](#asrecoveredaccount-multiaddress-call-call)\n        \n    *   [cancelRecovered(account: `MultiAddress`)](#cancelrecoveredaccount-multiaddress)\n        \n    *   [claimRecovery(account: `MultiAddress`)](#claimrecoveryaccount-multiaddress)\n        \n    *   [closeRecovery(rescuer: `MultiAddress`)](#closerecoveryrescuer-multiaddress)\n        \n    *   [createRecovery(friends: `Vec<AccountId32>`, threshold: `u16`, delay\\_period: `u32`)](#createrecoveryfriends-vecaccountid32-threshold-u16-delay_period-u32)\n        \n    *   [initiateRecovery(account: `MultiAddress`)](#initiaterecoveryaccount-multiaddress)\n        \n    *   [removeRecovery()](#removerecovery)\n        \n    *   [setRecovered(lost: `MultiAddress`, rescuer: `MultiAddress`)](#setrecoveredlost-multiaddress-rescuer-multiaddress)\n        \n    *   [vouchRecovery(lost: `MultiAddress`, rescuer: `MultiAddress`)](#vouchrecoverylost-multiaddress-rescuer-multiaddress)\n        \n*   [referenda](#referenda)\n    *   [cancel(index: `u32`)](#cancelindex-u32-1)\n        \n    *   [kill(index: `u32`)](#killindex-u32-1)\n        \n    *   [nudgeReferendum(index: `u32`)](#nudgereferendumindex-u32-1)\n        \n    *   [oneFewerDeciding(track: `u16`)](#onefewerdecidingtrack-u16-1)\n        \n    *   [placeDecisionDeposit(index: `u32`)](#placedecisiondepositindex-u32-1)\n        \n    *   [refundDecisionDeposit(index: `u32`)](#refunddecisiondepositindex-u32-1)\n        \n    *   [refundSubmissionDeposit(index: `u32`)](#refundsubmissiondepositindex-u32-1)\n        \n    *   [setMetadata(index: `u32`, maybe\\_hash: `Option<H256>`)](#setmetadataindex-u32-maybe_hash-optionh256-1)\n        \n    *   [submit(proposal\\_origin: `KusamaRuntimeOriginCaller`, proposal: `FrameSupportPreimagesBounded`, enactment\\_moment: `FrameSupportScheduleDispatchTime`)](#submitproposal_origin-kusamaruntimeorigincaller-proposal-framesupportpreimagesbounded-enactment_moment-framesupportscheduledispatchtime-1)\n        \n*   [registrar](#registrar)\n    *   [addLock(para: `u32`)](#addlockpara-u32)\n        \n    *   [deregister(id: `u32`)](#deregisterid-u32)\n        \n    *   [forceRegister(who: `AccountId32`, deposit: `u128`, id: `u32`, genesis\\_head: `Bytes`, validation\\_code: `Bytes`)](#forceregisterwho-accountid32-deposit-u128-id-u32-genesis_head-bytes-validation_code-bytes)\n        \n    *   [register(id: `u32`, genesis\\_head: `Bytes`, validation\\_code: `Bytes`)](#registerid-u32-genesis_head-bytes-validation_code-bytes)\n        \n    *   [removeLock(para: `u32`)](#removelockpara-u32)\n        \n    *   [reserve()](#reserve)\n        \n    *   [scheduleCodeUpgrade(para: `u32`, new\\_code: `Bytes`)](#schedulecodeupgradepara-u32-new_code-bytes)\n        \n    *   [setCurrentHead(para: `u32`, new\\_head: `Bytes`)](#setcurrentheadpara-u32-new_head-bytes)\n        \n    *   [swap(id: `u32`, other: `u32`)](#swapid-u32-other-u32)\n        \n*   [scheduler](#scheduler)\n    *   [cancel(when: `u32`, index: `u32`)](#cancelwhen-u32-index-u32)\n        \n    *   [cancelNamed(id: `[u8;32]`)](#cancelnamedid-u832)\n        \n    *   [schedule(when: `u32`, maybe\\_periodic: `Option<(u32,u32)>`, priority: `u8`, call: `Call`)](#schedulewhen-u32-maybe_periodic-optionu32u32-priority-u8-call-call)\n        \n    *   [scheduleAfter(after: `u32`, maybe\\_periodic: `Option<(u32,u32)>`, priority: `u8`, call: `Call`)](#scheduleafterafter-u32-maybe_periodic-optionu32u32-priority-u8-call-call)\n        \n    *   [scheduleNamed(id: `[u8;32]`, when: `u32`, maybe\\_periodic: `Option<(u32,u32)>`, priority: `u8`, call: `Call`)](#schedulenamedid-u832-when-u32-maybe_periodic-optionu32u32-priority-u8-call-call)\n        \n    *   [scheduleNamedAfter(id: `[u8;32]`, after: `u32`, maybe\\_periodic: `Option<(u32,u32)>`, priority: `u8`, call: `Call`)](#schedulenamedafterid-u832-after-u32-maybe_periodic-optionu32u32-priority-u8-call-call)\n        \n*   [session](#session)\n    *   [purgeKeys()](#purgekeys)\n        \n    *   [setKeys(keys: `KusamaRuntimeSessionKeys`, proof: `Bytes`)](#setkeyskeys-kusamaruntimesessionkeys-proof-bytes)\n        \n*   [slots](#slots)\n    *   [clearAllLeases(para: `u32`)](#clearallleasespara-u32)\n        \n    *   [forceLease(para: `u32`, leaser: `AccountId32`, amount: `u128`, period\\_begin: `u32`, period\\_count: `u32`)](#forceleasepara-u32-leaser-accountid32-amount-u128-period_begin-u32-period_count-u32)\n        \n    *   [triggerOnboard(para: `u32`)](#triggeronboardpara-u32)\n        \n*   [society](#society)\n    *   [bestowMembership(candidate: `AccountId32`)](#bestowmembershipcandidate-accountid32)\n        \n    *   [bid(value: `u128`)](#bidvalue-u128)\n        \n    *   [claimMembership()](#claimmembership)\n        \n    *   [cleanupCandidacy(candidate: `AccountId32`, max: `u32`)](#cleanupcandidacycandidate-accountid32-max-u32)\n        \n    *   [cleanupChallenge(challenge\\_round: `u32`, max: `u32`)](#cleanupchallengechallenge_round-u32-max-u32)\n        \n    *   [defenderVote(approve: `bool`)](#defendervoteapprove-bool)\n        \n    *   [dissolve()](#dissolve)\n        \n    *   [dropCandidate(candidate: `AccountId32`)](#dropcandidatecandidate-accountid32)\n        \n    *   [foundSociety(founder: `MultiAddress`, max\\_members: `u32`, max\\_intake: `u32`, max\\_strikes: `u32`, candidate\\_deposit: `u128`, rules: `Bytes`)](#foundsocietyfounder-multiaddress-max_members-u32-max_intake-u32-max_strikes-u32-candidate_deposit-u128-rules-bytes)\n        \n    *   [judgeSuspendedMember(who: `MultiAddress`, forgive: `bool`)](#judgesuspendedmemberwho-multiaddress-forgive-bool)\n        \n    *   [kickCandidate(candidate: `AccountId32`)](#kickcandidatecandidate-accountid32)\n        \n    *   [payout()](#payout)\n        \n    *   [punishSkeptic()](#punishskeptic)\n        \n    *   [resignCandidacy()](#resigncandidacy)\n        \n    *   [setParameters(max\\_members: `u32`, max\\_intake: `u32`, max\\_strikes: `u32`, candidate\\_deposit: `u128`)](#setparametersmax_members-u32-max_intake-u32-max_strikes-u32-candidate_deposit-u128)\n        \n    *   [unbid()](#unbid)\n        \n    *   [unvouch()](#unvouch)\n        \n    *   [vote(candidate: `MultiAddress`, approve: `bool`)](#votecandidate-multiaddress-approve-bool)\n        \n    *   [vouch(who: `MultiAddress`, value: `u128`, tip: `u128`)](#vouchwho-multiaddress-value-u128-tip-u128)\n        \n    *   [waiveRepay(amount: `u128`)](#waiverepayamount-u128)\n        \n*   [staking](#staking)\n    *   [bond(value: `Compact<u128>`, payee: `PalletStakingRewardDestination`)](#bondvalue-compactu128-payee-palletstakingrewarddestination)\n        \n    *   [bondExtra(max\\_additional: `Compact<u128>`)](#bondextramax_additional-compactu128)\n        \n    *   [cancelDeferredSlash(era: `u32`, slash\\_indices: `Vec<u32>`)](#canceldeferredslashera-u32-slash_indices-vecu32)\n        \n    *   [chill()](#chill)\n        \n    *   [chillOther(controller: `AccountId32`)](#chillothercontroller-accountid32)\n        \n    *   [forceApplyMinCommission(validator\\_stash: `AccountId32`)](#forceapplymincommissionvalidator_stash-accountid32)\n        \n    *   [forceNewEra()](#forcenewera)\n        \n    *   [forceNewEraAlways()](#forceneweraalways)\n        \n    *   [forceNoEras()](#forcenoeras)\n        \n    *   [forceUnstake(stash: `AccountId32`, num\\_slashing\\_spans: `u32`)](#forceunstakestash-accountid32-num_slashing_spans-u32)\n        \n    *   [increaseValidatorCount(additional: `Compact<u32>`)](#increasevalidatorcountadditional-compactu32)\n        \n    *   [kick(who: `Vec<MultiAddress>`)](#kickwho-vecmultiaddress)\n        \n    *   [nominate(targets: `Vec<MultiAddress>`)](#nominatetargets-vecmultiaddress)\n        \n    *   [payoutStakers(validator\\_stash: `AccountId32`, era: `u32`)](#payoutstakersvalidator_stash-accountid32-era-u32)\n        \n    *   [reapStash(stash: `AccountId32`, num\\_slashing\\_spans: `u32`)](#reapstashstash-accountid32-num_slashing_spans-u32)\n        \n    *   [rebond(value: `Compact<u128>`)](#rebondvalue-compactu128)\n        \n    *   [scaleValidatorCount(factor: `Percent`)](#scalevalidatorcountfactor-percent)\n        \n    *   [setController()](#setcontroller)\n        \n    *   [setInvulnerables(invulnerables: `Vec<AccountId32>`)](#setinvulnerablesinvulnerables-vecaccountid32)\n        \n    *   [setMinCommission(new: `Perbill`)](#setmincommissionnew-perbill)\n        \n    *   [setPayee(payee: `PalletStakingRewardDestination`)](#setpayeepayee-palletstakingrewarddestination)\n        \n    *   [setStakingConfigs(min\\_nominator\\_bond: `PalletStakingPalletConfigOpU128`, min\\_validator\\_bond: `PalletStakingPalletConfigOpU128`, max\\_nominator\\_count: `PalletStakingPalletConfigOpU32`, max\\_validator\\_count: `PalletStakingPalletConfigOpU32`, chill\\_threshold: `PalletStakingPalletConfigOpPercent`, min\\_commission: `PalletStakingPalletConfigOpPerbill`)](#setstakingconfigsmin_nominator_bond-palletstakingpalletconfigopu128-min_validator_bond-palletstakingpalletconfigopu128-max_nominator_count-palletstakingpalletconfigopu32-max_validator_count-palletstakingpalletconfigopu32-chill_threshold-palletstakingpalletconfigoppercent-min_commission-palletstakingpalletconfigopperbill)\n        \n    *   [setValidatorCount(new: `Compact<u32>`)](#setvalidatorcountnew-compactu32)\n        \n    *   [unbond(value: `Compact<u128>`)](#unbondvalue-compactu128)\n        \n    *   [validate(prefs: `PalletStakingValidatorPrefs`)](#validateprefs-palletstakingvalidatorprefs)\n        \n    *   [withdrawUnbonded(num\\_slashing\\_spans: `u32`)](#withdrawunbondednum_slashing_spans-u32)\n        \n*   [stateTrieMigration](#statetriemigration)\n    *   [continueMigrate(limits: `PalletStateTrieMigrationMigrationLimits`, real\\_size\\_upper: `u32`, witness\\_task: `PalletStateTrieMigrationMigrationTask`)](#continuemigratelimits-palletstatetriemigrationmigrationlimits-real_size_upper-u32-witness_task-palletstatetriemigrationmigrationtask)\n        \n    *   [controlAutoMigration(maybe\\_config: `Option<PalletStateTrieMigrationMigrationLimits>`)](#controlautomigrationmaybe_config-optionpalletstatetriemigrationmigrationlimits)\n        \n    *   [forceSetProgress(progress\\_top: `PalletStateTrieMigrationProgress`, progress\\_child: `PalletStateTrieMigrationProgress`)](#forcesetprogressprogress_top-palletstatetriemigrationprogress-progress_child-palletstatetriemigrationprogress)\n        \n    *   [migrateCustomChild(root: `Bytes`, child\\_keys: `Vec<Bytes>`, total\\_size: `u32`)](#migratecustomchildroot-bytes-child_keys-vecbytes-total_size-u32)\n        \n    *   [migrateCustomTop(keys: `Vec<Bytes>`, witness\\_size: `u32`)](#migratecustomtopkeys-vecbytes-witness_size-u32)\n        \n    *   [setSignedMaxLimits(limits: `PalletStateTrieMigrationMigrationLimits`)](#setsignedmaxlimitslimits-palletstatetriemigrationmigrationlimits)\n        \n*   [system](#system)\n    *   [killPrefix(prefix: `Bytes`, subkeys: `u32`)](#killprefixprefix-bytes-subkeys-u32)\n        \n    *   [killStorage(keys: `Vec<Bytes>`)](#killstoragekeys-vecbytes)\n        \n    *   [remark(remark: `Bytes`)](#remarkremark-bytes)\n        \n    *   [remarkWithEvent(remark: `Bytes`)](#remarkwitheventremark-bytes)\n        \n    *   [setCode(code: `Bytes`)](#setcodecode-bytes)\n        \n    *   [setCodeWithoutChecks(code: `Bytes`)](#setcodewithoutcheckscode-bytes)\n        \n    *   [setHeapPages(pages: `u64`)](#setheappagespages-u64)\n        \n    *   [setStorage(items: `Vec<(Bytes,Bytes)>`)](#setstorageitems-vecbytesbytes)\n        \n*   [timestamp](#timestamp)\n    *   [set(now: `Compact<u64>`)](#setnow-compactu64)\n        \n*   [treasury](#treasury)\n    *   [approveProposal(proposal\\_id: `Compact<u32>`)](#approveproposalproposal_id-compactu32)\n        \n    *   [proposeSpend(value: `Compact<u128>`, beneficiary: `MultiAddress`)](#proposespendvalue-compactu128-beneficiary-multiaddress)\n        \n    *   [rejectProposal(proposal\\_id: `Compact<u32>`)](#rejectproposalproposal_id-compactu32)\n        \n    *   [removeApproval(proposal\\_id: `Compact<u32>`)](#removeapprovalproposal_id-compactu32)\n        \n    *   [spend(amount: `Compact<u128>`, beneficiary: `MultiAddress`)](#spendamount-compactu128-beneficiary-multiaddress)\n        \n*   [utility](#utility)\n    *   [asDerivative(index: `u16`, call: `Call`)](#asderivativeindex-u16-call-call)\n        \n    *   [batch(calls: `Vec<Call>`)](#batchcalls-veccall)\n        \n    *   [batchAll(calls: `Vec<Call>`)](#batchallcalls-veccall)\n        \n    *   [dispatchAs(as\\_origin: `KusamaRuntimeOriginCaller`, call: `Call`)](#dispatchasas_origin-kusamaruntimeorigincaller-call-call)\n        \n    *   [forceBatch(calls: `Vec<Call>`)](#forcebatchcalls-veccall)\n        \n    *   [withWeight(call: `Call`, weight: `SpWeightsWeightV2Weight`)](#withweightcall-call-weight-spweightsweightv2weight)\n        \n*   [vesting](#vesting)\n    *   [forceVestedTransfer(source: `MultiAddress`, target: `MultiAddress`, schedule: `PalletVestingVestingInfo`)](#forcevestedtransfersource-multiaddress-target-multiaddress-schedule-palletvestingvestinginfo)\n        \n    *   [mergeSchedules(schedule1\\_index: `u32`, schedule2\\_index: `u32`)](#mergeschedulesschedule1_index-u32-schedule2_index-u32)\n        \n    *   [vest()](#vest)\n        \n    *   [vestOther(target: `MultiAddress`)](#vestothertarget-multiaddress)\n        \n    *   [vestedTransfer(target: `MultiAddress`, schedule: `PalletVestingVestingInfo`)](#vestedtransfertarget-multiaddress-schedule-palletvestingvestinginfo)\n        \n*   [voterList](#voterlist)\n    *   [putInFrontOf(lighter: `MultiAddress`)](#putinfrontoflighter-multiaddress)\n        \n    *   [putInFrontOfOther(heavier: `MultiAddress`, lighter: `MultiAddress`)](#putinfrontofotherheavier-multiaddress-lighter-multiaddress)\n        \n    *   [rebag(dislocated: `MultiAddress`)](#rebagdislocated-multiaddress)\n        \n*   [whitelist](#whitelist)\n    *   [dispatchWhitelistedCall(call\\_hash: `H256`, call\\_encoded\\_len: `u32`, call\\_weight\\_witness: `SpWeightsWeightV2Weight`)](#dispatchwhitelistedcallcall_hash-h256-call_encoded_len-u32-call_weight_witness-spweightsweightv2weight)\n        \n    *   [dispatchWhitelistedCallWithPreimage(call: `Call`)](#dispatchwhitelistedcallwithpreimagecall-call)\n        \n    *   [removeWhitelistedCall(call\\_hash: `H256`)](#removewhitelistedcallcall_hash-h256)\n        \n    *   [whitelistCall(call\\_hash: `H256`)](#whitelistcallcall_hash-h256)\n        \n*   [xcmPallet](#xcmpallet)\n    *   [execute(message: `XcmVersionedXcm`, max\\_weight: `SpWeightsWeightV2Weight`)](#executemessage-xcmversionedxcm-max_weight-spweightsweightv2weight)\n        \n    *   [forceDefaultXcmVersion(maybe\\_xcm\\_version: `Option<u32>`)](#forcedefaultxcmversionmaybe_xcm_version-optionu32)\n        \n    *   [forceSubscribeVersionNotify(location: `XcmVersionedMultiLocation`)](#forcesubscribeversionnotifylocation-xcmversionedmultilocation)\n        \n    *   [forceSuspension(suspended: `bool`)](#forcesuspensionsuspended-bool)\n        \n    *   [forceUnsubscribeVersionNotify(location: `XcmVersionedMultiLocation`)](#forceunsubscribeversionnotifylocation-xcmversionedmultilocation)\n        \n    *   [forceXcmVersion(location: `XcmV3MultiLocation`, version: `u32`)](#forcexcmversionlocation-xcmv3multilocation-version-u32)\n        \n    *   [limitedReserveTransferAssets(dest: `XcmVersionedMultiLocation`, beneficiary: `XcmVersionedMultiLocation`, assets: `XcmVersionedMultiAssets`, fee\\_asset\\_item: `u32`, weight\\_limit: `XcmV3WeightLimit`)](#limitedreservetransferassetsdest-xcmversionedmultilocation-beneficiary-xcmversionedmultilocation-assets-xcmversionedmultiassets-fee_asset_item-u32-weight_limit-xcmv3weightlimit)\n        \n    *   [limitedTeleportAssets(dest: `XcmVersionedMultiLocation`, beneficiary: `XcmVersionedMultiLocation`, assets: `XcmVersionedMultiAssets`, fee\\_asset\\_item: `u32`, weight\\_limit: `XcmV3WeightLimit`)](#limitedteleportassetsdest-xcmversionedmultilocation-beneficiary-xcmversionedmultilocation-assets-xcmversionedmultiassets-fee_asset_item-u32-weight_limit-xcmv3weightlimit)\n        \n    *   [reserveTransferAssets(dest: `XcmVersionedMultiLocation`, beneficiary: `XcmVersionedMultiLocation`, assets: `XcmVersionedMultiAssets`, fee\\_asset\\_item: `u32`)](#reservetransferassetsdest-xcmversionedmultilocation-beneficiary-xcmversionedmultilocation-assets-xcmversionedmultiassets-fee_asset_item-u32)\n        \n    *   [send(dest: `XcmVersionedMultiLocation`, message: `XcmVersionedXcm`)](#senddest-xcmversionedmultilocation-message-xcmversionedxcm)\n        \n    *   [teleportAssets(dest: `XcmVersionedMultiLocation`, beneficiary: `XcmVersionedMultiLocation`, assets: `XcmVersionedMultiAssets`, fee\\_asset\\_item: `u32`)](#teleportassetsdest-xcmversionedmultilocation-beneficiary-xcmversionedmultilocation-assets-xcmversionedmultiassets-fee_asset_item-u32)"}, {"title": null, "description": null, "source_url": "https://polkadot.js.org/docs/kusama/rpc", "markdown": "[Skip to main content](#__docusaurus_skipToContent_fallback)\n\n[![polkadot{.js}](https://polkadot.js.org/docs/img/logo.svg)\\\n\\\n**polkadot{.js}**](/docs/)\n\n[Apps UI (Wallet)](https://polkadot.js.org/apps/)\n[GitHub](https://github.com/polkadot-js/docs)\n\nSearch...\n\n*   [Introduction](#)\n    \n*   [API](#)\n    \n*   [Metadata](#)\n    \n    *   [Substrate](#)\n        \n    *   [Polkadot](#)\n        \n    *   [Kusama](#)\n        \n        *   [Overview](/docs/kusama)\n            \n        *   [Runtime](/docs/kusama/runtime)\n            \n        *   [JSON-RPC](/docs/kusama/rpc)\n            \n        *   [Constants](/docs/kusama/constants)\n            \n        *   [Storage](/docs/kusama/storage)\n            \n        *   [Extrinsics](/docs/kusama/extrinsics)\n            \n        *   [Events](/docs/kusama/events)\n            \n        *   [Errors](/docs/kusama/errors)\n            \n*   [Keyring](#)\n    \n*   [Crypto Utilities](#)\n    \n*   [Contracts (API)](#)\n    \n*   [Identicon (UI)](#)\n    \n*   [Keyring (UI)](#)\n    \n*   [Extension](#)\n    \n*   [Run, Bundle, Test](#)\n    \n\n*   [](/docs/)\n    \n*   Metadata\n*   Kusama\n*   JSON-RPC\n\nOn this page\n\nJSON-RPC\n========\n\nThe following sections contain known RPC methods that may be available on specific nodes (depending on configuration and available pallets) and allow you to interact with the actual node, query, and submit.\n\n*   **[author](#author)\n    **\n    \n*   **[babe](#babe)\n    **\n    \n*   **[beefy](#beefy)\n    **\n    \n*   **[chain](#chain)\n    **\n    \n*   **[childstate](#childstate)\n    **\n    \n*   **[grandpa](#grandpa)\n    **\n    \n*   **[mmr](#mmr)\n    **\n    \n*   **[offchain](#offchain)\n    **\n    \n*   **[payment](#payment)\n    **\n    \n*   **[rpc](#rpc)\n    **\n    \n*   **[state](#state)\n    **\n    \n*   **[syncstate](#syncstate)\n    **\n    \n*   **[system](#system)\n    **\n    \n\n* * *\n\nauthor[\u200b](#author \"Direct link to author\")\n\n-------------------------------------------\n\n### hasKey(publicKey: `Bytes`, keyType: `Text`): `bool`[\u200b](#haskeypublickey-bytes-keytype-text-bool \"Direct link to haskeypublickey-bytes-keytype-text-bool\")\n\n*   **interface**: `api.rpc.author.hasKey`\n*   **jsonrpc**: `author_hasKey`\n*   **summary**: Returns true if the keystore has private keys for the given public key and key type.\n*   **unsafe**: This method is only active with appropriate flags\n\n### hasSessionKeys(sessionKeys: `Bytes`): `bool`[\u200b](#hassessionkeyssessionkeys-bytes-bool \"Direct link to hassessionkeyssessionkeys-bytes-bool\")\n\n*   **interface**: `api.rpc.author.hasSessionKeys`\n*   **jsonrpc**: `author_hasSessionKeys`\n*   **summary**: Returns true if the keystore has private keys for the given session public keys.\n*   **unsafe**: This method is only active with appropriate flags\n\n### insertKey(keyType: `Text`, suri: `Text`, publicKey: `Bytes`): `Bytes`[\u200b](#insertkeykeytype-text-suri-text-publickey-bytes-bytes \"Direct link to insertkeykeytype-text-suri-text-publickey-bytes-bytes\")\n\n*   **interface**: `api.rpc.author.insertKey`\n*   **jsonrpc**: `author_insertKey`\n*   **summary**: Insert a key into the keystore.\n*   **unsafe**: This method is only active with appropriate flags\n\n### pendingExtrinsics(): `Vec<Extrinsic>`[\u200b](#pendingextrinsics-vecextrinsic \"Direct link to pendingextrinsics-vecextrinsic\")\n\n*   **interface**: `api.rpc.author.pendingExtrinsics`\n*   **jsonrpc**: `author_pendingExtrinsics`\n*   **summary**: Returns all pending extrinsics, potentially grouped by sender\n\n### removeExtrinsic(bytesOrHash: `Vec<ExtrinsicOrHash>`): `Vec<Hash>`[\u200b](#removeextrinsicbytesorhash-vecextrinsicorhash-vechash \"Direct link to removeextrinsicbytesorhash-vecextrinsicorhash-vechash\")\n\n*   **interface**: `api.rpc.author.removeExtrinsic`\n*   **jsonrpc**: `author_removeExtrinsic`\n*   **summary**: Remove given extrinsic from the pool and temporarily ban it to prevent reimporting\n*   **unsafe**: This method is only active with appropriate flags\n\n### rotateKeys(): `Bytes`[\u200b](#rotatekeys-bytes \"Direct link to rotatekeys-bytes\")\n\n*   **interface**: `api.rpc.author.rotateKeys`\n*   **jsonrpc**: `author_rotateKeys`\n*   **summary**: Generate new session keys and returns the corresponding public keys\n*   **unsafe**: This method is only active with appropriate flags\n\n### submitAndWatchExtrinsic(extrinsic: `Extrinsic`): `ExtrinsicStatus`[\u200b](#submitandwatchextrinsicextrinsic-extrinsic-extrinsicstatus \"Direct link to submitandwatchextrinsicextrinsic-extrinsic-extrinsicstatus\")\n\n*   **interface**: `api.rpc.author.submitAndWatchExtrinsic`\n*   **jsonrpc**: `author_submitAndWatchExtrinsic`\n*   **summary**: Submit and subscribe to watch an extrinsic until unsubscribed\n\n### submitExtrinsic(extrinsic: `Extrinsic`): `Hash`[\u200b](#submitextrinsicextrinsic-extrinsic-hash \"Direct link to submitextrinsicextrinsic-extrinsic-hash\")\n\n*   **interface**: `api.rpc.author.submitExtrinsic`\n*   **jsonrpc**: `author_submitExtrinsic`\n*   **summary**: Submit a fully formatted extrinsic for block inclusion\n\n* * *\n\nbabe[\u200b](#babe \"Direct link to babe\")\n\n-------------------------------------\n\n### epochAuthorship(): `HashMap<AuthorityId, EpochAuthorship>`[\u200b](#epochauthorship-hashmapauthorityid-epochauthorship \"Direct link to epochauthorship-hashmapauthorityid-epochauthorship\")\n\n*   **interface**: `api.rpc.babe.epochAuthorship`\n*   **jsonrpc**: `babe_epochAuthorship`\n*   **summary**: Returns data about which slots (primary or secondary) can be claimed in the current epoch with the keys in the keystore\n*   **unsafe**: This method is only active with appropriate flags\n\n* * *\n\nbeefy[\u200b](#beefy \"Direct link to beefy\")\n\n----------------------------------------\n\n### getFinalizedHead(): `H256`[\u200b](#getfinalizedhead-h256 \"Direct link to getfinalizedhead-h256\")\n\n*   **interface**: `api.rpc.beefy.getFinalizedHead`\n*   **jsonrpc**: `beefy_getFinalizedHead`\n*   **summary**: Returns hash of the latest BEEFY finalized block as seen by this client.\n\n### subscribeJustifications(): `BeefyVersionedFinalityProof`[\u200b](#subscribejustifications-beefyversionedfinalityproof \"Direct link to subscribejustifications-beefyversionedfinalityproof\")\n\n*   **interface**: `api.rpc.beefy.subscribeJustifications`\n*   **jsonrpc**: `beefy_subscribeJustifications`\n*   **summary**: Returns the block most recently finalized by BEEFY, alongside its justification.\n\n* * *\n\nchain[\u200b](#chain \"Direct link to chain\")\n\n----------------------------------------\n\n### getBlock(hash?: `BlockHash`): `SignedBlock`[\u200b](#getblockhash-blockhash-signedblock \"Direct link to getblockhash-blockhash-signedblock\")\n\n*   **interface**: `api.rpc.chain.getBlock`\n*   **jsonrpc**: `chain_getBlock`\n*   **summary**: Get header and body of a relay chain block\n\n### getBlockHash(blockNumber?: `BlockNumber`): `BlockHash`[\u200b](#getblockhashblocknumber-blocknumber-blockhash \"Direct link to getblockhashblocknumber-blocknumber-blockhash\")\n\n*   **interface**: `api.rpc.chain.getBlockHash`\n*   **jsonrpc**: `chain_getBlockHash`\n*   **summary**: Get the block hash for a specific block\n\n### getFinalizedHead(): `BlockHash`[\u200b](#getfinalizedhead-blockhash \"Direct link to getfinalizedhead-blockhash\")\n\n*   **interface**: `api.rpc.chain.getFinalizedHead`\n*   **jsonrpc**: `chain_getFinalizedHead`\n*   **summary**: Get hash of the last finalized block in the canon chain\n\n### getHeader(hash?: `BlockHash`): `Header`[\u200b](#getheaderhash-blockhash-header \"Direct link to getheaderhash-blockhash-header\")\n\n*   **interface**: `api.rpc.chain.getHeader`\n*   **jsonrpc**: `chain_getHeader`\n*   **summary**: Retrieves the header for a specific block\n\n### subscribeAllHeads(): `Header`[\u200b](#subscribeallheads-header \"Direct link to subscribeallheads-header\")\n\n*   **interface**: `api.rpc.chain.subscribeAllHeads`\n*   **jsonrpc**: `chain_subscribeAllHeads`\n*   **summary**: Retrieves the newest header via subscription\n\n### subscribeFinalizedHeads(): `Header`[\u200b](#subscribefinalizedheads-header \"Direct link to subscribefinalizedheads-header\")\n\n*   **interface**: `api.rpc.chain.subscribeFinalizedHeads`\n*   **jsonrpc**: `chain_subscribeFinalizedHeads`\n*   **summary**: Retrieves the best finalized header via subscription\n\n### subscribeNewHeads(): `Header`[\u200b](#subscribenewheads-header \"Direct link to subscribenewheads-header\")\n\n*   **interface**: `api.rpc.chain.subscribeNewHeads`\n*   **jsonrpc**: `chain_subscribeNewHeads`\n*   **summary**: Retrieves the best header via subscription\n\n* * *\n\nchildstate[\u200b](#childstate \"Direct link to childstate\")\n\n-------------------------------------------------------\n\n### getKeys(childKey: `PrefixedStorageKey`, prefix: `StorageKey`, at?: `Hash`): `Vec<StorageKey>`[\u200b](#getkeyschildkey-prefixedstoragekey-prefix-storagekey-at-hash-vecstoragekey \"Direct link to getkeyschildkey-prefixedstoragekey-prefix-storagekey-at-hash-vecstoragekey\")\n\n*   **interface**: `api.rpc.childstate.getKeys`\n*   **jsonrpc**: `childstate_getKeys`\n*   **summary**: Returns the keys with prefix from a child storage, leave empty to get all the keys\n\n### getKeysPaged(childKey: `PrefixedStorageKey`, prefix: `StorageKey`, count: `u32`, startKey?: `StorageKey`, at?: `Hash`): `Vec<StorageKey>`[\u200b](#getkeyspagedchildkey-prefixedstoragekey-prefix-storagekey-count-u32-startkey-storagekey-at-hash-vecstoragekey \"Direct link to getkeyspagedchildkey-prefixedstoragekey-prefix-storagekey-count-u32-startkey-storagekey-at-hash-vecstoragekey\")\n\n*   **interface**: `api.rpc.childstate.getKeysPaged`\n*   **jsonrpc**: `childstate_getKeysPaged`\n*   **summary**: Returns the keys with prefix from a child storage with pagination support\n\n### getStorage(childKey: `PrefixedStorageKey`, key: `StorageKey`, at?: `Hash`): `Option<StorageData>`[\u200b](#getstoragechildkey-prefixedstoragekey-key-storagekey-at-hash-optionstoragedata \"Direct link to getstoragechildkey-prefixedstoragekey-key-storagekey-at-hash-optionstoragedata\")\n\n*   **interface**: `api.rpc.childstate.getStorage`\n*   **jsonrpc**: `childstate_getStorage`\n*   **summary**: Returns a child storage entry at a specific block state\n\n### getStorageEntries(childKey: `PrefixedStorageKey`, keys: `Vec<StorageKey>`, at?: `Hash`): `Vec<Option<StorageData>>`[\u200b](#getstorageentrieschildkey-prefixedstoragekey-keys-vecstoragekey-at-hash-vecoptionstoragedata \"Direct link to getstorageentrieschildkey-prefixedstoragekey-keys-vecstoragekey-at-hash-vecoptionstoragedata\")\n\n*   **interface**: `api.rpc.childstate.getStorageEntries`\n*   **jsonrpc**: `childstate_getStorageEntries`\n*   **summary**: Returns child storage entries for multiple keys at a specific block state\n\n### getStorageHash(childKey: `PrefixedStorageKey`, key: `StorageKey`, at?: `Hash`): `Option<Hash>`[\u200b](#getstoragehashchildkey-prefixedstoragekey-key-storagekey-at-hash-optionhash \"Direct link to getstoragehashchildkey-prefixedstoragekey-key-storagekey-at-hash-optionhash\")\n\n*   **interface**: `api.rpc.childstate.getStorageHash`\n*   **jsonrpc**: `childstate_getStorageHash`\n*   **summary**: Returns the hash of a child storage entry at a block state\n\n### getStorageSize(childKey: `PrefixedStorageKey`, key: `StorageKey`, at?: `Hash`): `Option<u64>`[\u200b](#getstoragesizechildkey-prefixedstoragekey-key-storagekey-at-hash-optionu64 \"Direct link to getstoragesizechildkey-prefixedstoragekey-key-storagekey-at-hash-optionu64\")\n\n*   **interface**: `api.rpc.childstate.getStorageSize`\n*   **jsonrpc**: `childstate_getStorageSize`\n*   **summary**: Returns the size of a child storage entry at a block state\n\n* * *\n\ngrandpa[\u200b](#grandpa \"Direct link to grandpa\")\n\n----------------------------------------------\n\n### proveFinality(blockNumber: `BlockNumber`): `Option<EncodedFinalityProofs>`[\u200b](#provefinalityblocknumber-blocknumber-optionencodedfinalityproofs \"Direct link to provefinalityblocknumber-blocknumber-optionencodedfinalityproofs\")\n\n*   **interface**: `api.rpc.grandpa.proveFinality`\n*   **jsonrpc**: `grandpa_proveFinality`\n*   **summary**: Prove finality for the given block number, returning the Justification for the last block in the set.\n\n### roundState(): `ReportedRoundStates`[\u200b](#roundstate-reportedroundstates \"Direct link to roundstate-reportedroundstates\")\n\n*   **interface**: `api.rpc.grandpa.roundState`\n*   **jsonrpc**: `grandpa_roundState`\n*   **summary**: Returns the state of the current best round state as well as the ongoing background rounds\n\n### subscribeJustifications(): `JustificationNotification`[\u200b](#subscribejustifications-justificationnotification \"Direct link to subscribejustifications-justificationnotification\")\n\n*   **interface**: `api.rpc.grandpa.subscribeJustifications`\n*   **jsonrpc**: `grandpa_subscribeJustifications`\n*   **summary**: Subscribes to grandpa justifications\n\n* * *\n\nmmr[\u200b](#mmr \"Direct link to mmr\")\n\n----------------------------------\n\n### generateProof(blockNumbers: `Vec<u64>`, bestKnownBlockNumber?: `u64`, at?: `BlockHash`): `MmrLeafBatchProof`[\u200b](#generateproofblocknumbers-vecu64-bestknownblocknumber-u64-at-blockhash-mmrleafbatchproof \"Direct link to generateproofblocknumbers-vecu64-bestknownblocknumber-u64-at-blockhash-mmrleafbatchproof\")\n\n*   **interface**: `api.rpc.mmr.generateProof`\n*   **jsonrpc**: `mmr_generateProof`\n*   **summary**: Generate MMR proof for the given block numbers.\n\n### root(at?: `BlockHash`): `MmrHash`[\u200b](#rootat-blockhash-mmrhash \"Direct link to rootat-blockhash-mmrhash\")\n\n*   **interface**: `api.rpc.mmr.root`\n*   **jsonrpc**: `mmr_root`\n*   **summary**: Get the MMR root hash for the current best block.\n\n### verifyProof(proof: `MmrLeafBatchProof`): `bool`[\u200b](#verifyproofproof-mmrleafbatchproof-bool \"Direct link to verifyproofproof-mmrleafbatchproof-bool\")\n\n*   **interface**: `api.rpc.mmr.verifyProof`\n*   **jsonrpc**: `mmr_verifyProof`\n*   **summary**: Verify an MMR proof\n\n### verifyProofStateless(root: `MmrHash`, proof: `MmrLeafBatchProof`): `bool`[\u200b](#verifyproofstatelessroot-mmrhash-proof-mmrleafbatchproof-bool \"Direct link to verifyproofstatelessroot-mmrhash-proof-mmrleafbatchproof-bool\")\n\n*   **interface**: `api.rpc.mmr.verifyProofStateless`\n*   **jsonrpc**: `mmr_verifyProofStateless`\n*   **summary**: Verify an MMR proof statelessly given an mmr\\_root\n\n* * *\n\noffchain[\u200b](#offchain \"Direct link to offchain\")\n\n-------------------------------------------------\n\n### localStorageGet(kind: `StorageKind`, key: `Bytes`): `Option<Bytes>`[\u200b](#localstoragegetkind-storagekind-key-bytes-optionbytes \"Direct link to localstoragegetkind-storagekind-key-bytes-optionbytes\")\n\n*   **interface**: `api.rpc.offchain.localStorageGet`\n*   **jsonrpc**: `offchain_localStorageGet`\n*   **summary**: Get offchain local storage under given key and prefix\n*   **unsafe**: This method is only active with appropriate flags\n\n### localStorageSet(kind: `StorageKind`, key: `Bytes`, value: `Bytes`): `Null`[\u200b](#localstoragesetkind-storagekind-key-bytes-value-bytes-null \"Direct link to localstoragesetkind-storagekind-key-bytes-value-bytes-null\")\n\n*   **interface**: `api.rpc.offchain.localStorageSet`\n*   **jsonrpc**: `offchain_localStorageSet`\n*   **summary**: Set offchain local storage under given key and prefix\n*   **unsafe**: This method is only active with appropriate flags\n\n* * *\n\npayment[\u200b](#payment \"Direct link to payment\")\n\n----------------------------------------------\n\n### queryFeeDetails(extrinsic: `Bytes`, at?: `BlockHash`): `FeeDetails`[\u200b](#queryfeedetailsextrinsic-bytes-at-blockhash-feedetails \"Direct link to queryfeedetailsextrinsic-bytes-at-blockhash-feedetails\")\n\n*   **interface**: `api.rpc.payment.queryFeeDetails`\n*   **jsonrpc**: `payment_queryFeeDetails`\n*   **summary**: Query the detailed fee of a given encoded extrinsic\n*   **deprecated**: Use `api.call.transactionPaymentApi.queryFeeDetails` instead\n\n### queryInfo(extrinsic: `Bytes`, at?: `BlockHash`): `RuntimeDispatchInfoV1`[\u200b](#queryinfoextrinsic-bytes-at-blockhash-runtimedispatchinfov1 \"Direct link to queryinfoextrinsic-bytes-at-blockhash-runtimedispatchinfov1\")\n\n*   **interface**: `api.rpc.payment.queryInfo`\n*   **jsonrpc**: `payment_queryInfo`\n*   **summary**: Retrieves the fee information for an encoded extrinsic\n*   **deprecated**: Use `api.call.transactionPaymentApi.queryInfo` instead\n\n* * *\n\nrpc[\u200b](#rpc \"Direct link to rpc\")\n\n----------------------------------\n\n### methods(): `RpcMethods`[\u200b](#methods-rpcmethods \"Direct link to methods-rpcmethods\")\n\n*   **interface**: `api.rpc.rpc.methods`\n*   **jsonrpc**: `rpc_methods`\n*   **summary**: Retrieves the list of RPC methods that are exposed by the node\n\n* * *\n\nstate[\u200b](#state \"Direct link to state\")\n\n----------------------------------------\n\n### call(method: `Text`, data: `Bytes`, at?: `BlockHash`): `Bytes`[\u200b](#callmethod-text-data-bytes-at-blockhash-bytes \"Direct link to callmethod-text-data-bytes-at-blockhash-bytes\")\n\n*   **interface**: `api.rpc.state.call`\n*   **jsonrpc**: `state_call`\n*   **summary**: Perform a call to a builtin on the chain\n\n### getChildReadProof(childStorageKey: `PrefixedStorageKey`, keys: `Vec<StorageKey>`, at?: `BlockHash`): `ReadProof`[\u200b](#getchildreadproofchildstoragekey-prefixedstoragekey-keys-vecstoragekey-at-blockhash-readproof \"Direct link to getchildreadproofchildstoragekey-prefixedstoragekey-keys-vecstoragekey-at-blockhash-readproof\")\n\n*   **interface**: `api.rpc.state.getChildReadProof`\n*   **jsonrpc**: `state_getChildReadProof`\n*   **summary**: Returns proof of storage for child key entries at a specific block state.\n\n### getKeys(key: `StorageKey`, at?: `BlockHash`): `Vec<StorageKey>`[\u200b](#getkeyskey-storagekey-at-blockhash-vecstoragekey \"Direct link to getkeyskey-storagekey-at-blockhash-vecstoragekey\")\n\n*   **interface**: `api.rpc.state.getKeys`\n*   **jsonrpc**: `state_getKeys`\n*   **summary**: Retrieves the keys with a certain prefix\n*   **deprecated**: Use `api.rpc.state.getKeysPaged` to retrieve keys\n\n### getKeysPaged(key: `StorageKey`, count: `u32`, startKey?: `StorageKey`, at?: `BlockHash`): `Vec<StorageKey>`[\u200b](#getkeyspagedkey-storagekey-count-u32-startkey-storagekey-at-blockhash-vecstoragekey \"Direct link to getkeyspagedkey-storagekey-count-u32-startkey-storagekey-at-blockhash-vecstoragekey\")\n\n*   **interface**: `api.rpc.state.getKeysPaged`\n*   **jsonrpc**: `state_getKeysPaged`\n*   **summary**: Returns the keys with prefix with pagination support.\n\n### getMetadata(at?: `BlockHash`): `Metadata`[\u200b](#getmetadataat-blockhash-metadata \"Direct link to getmetadataat-blockhash-metadata\")\n\n*   **interface**: `api.rpc.state.getMetadata`\n*   **jsonrpc**: `state_getMetadata`\n*   **summary**: Returns the runtime metadata\n\n### getPairs(prefix: `StorageKey`, at?: `BlockHash`): `Vec<KeyValue>`[\u200b](#getpairsprefix-storagekey-at-blockhash-veckeyvalue \"Direct link to getpairsprefix-storagekey-at-blockhash-veckeyvalue\")\n\n*   **interface**: `api.rpc.state.getPairs`\n*   **jsonrpc**: `state_getPairs`\n*   **summary**: Returns the keys with prefix, leave empty to get all the keys (deprecated: Use getKeysPaged)\n*   **deprecated**: Use `api.rpc.state.getKeysPaged` to retrieve keys\n*   **unsafe**: This method is only active with appropriate flags\n\n### getReadProof(keys: `Vec<StorageKey>`, at?: `BlockHash`): `ReadProof`[\u200b](#getreadproofkeys-vecstoragekey-at-blockhash-readproof \"Direct link to getreadproofkeys-vecstoragekey-at-blockhash-readproof\")\n\n*   **interface**: `api.rpc.state.getReadProof`\n*   **jsonrpc**: `state_getReadProof`\n*   **summary**: Returns proof of storage entries at a specific block state\n\n### getRuntimeVersion(at?: `BlockHash`): `RuntimeVersion`[\u200b](#getruntimeversionat-blockhash-runtimeversion \"Direct link to getruntimeversionat-blockhash-runtimeversion\")\n\n*   **interface**: `api.rpc.state.getRuntimeVersion`\n*   **jsonrpc**: `state_getRuntimeVersion`\n*   **summary**: Get the runtime version\n\n### getStorage(key: `StorageKey`, at?: `BlockHash`): `StorageData`[\u200b](#getstoragekey-storagekey-at-blockhash-storagedata \"Direct link to getstoragekey-storagekey-at-blockhash-storagedata\")\n\n*   **interface**: `api.rpc.state.getStorage`\n*   **jsonrpc**: `state_getStorage`\n*   **summary**: Retrieves the storage for a key\n\n### getStorageHash(key: `StorageKey`, at?: `BlockHash`): `Hash`[\u200b](#getstoragehashkey-storagekey-at-blockhash-hash \"Direct link to getstoragehashkey-storagekey-at-blockhash-hash\")\n\n*   **interface**: `api.rpc.state.getStorageHash`\n*   **jsonrpc**: `state_getStorageHash`\n*   **summary**: Retrieves the storage hash\n\n### getStorageSize(key: `StorageKey`, at?: `BlockHash`): `u64`[\u200b](#getstoragesizekey-storagekey-at-blockhash-u64 \"Direct link to getstoragesizekey-storagekey-at-blockhash-u64\")\n\n*   **interface**: `api.rpc.state.getStorageSize`\n*   **jsonrpc**: `state_getStorageSize`\n*   **summary**: Retrieves the storage size\n\n### queryStorage(keys: `Vec<StorageKey>`, fromBlock: `Hash`, toBlock?: `BlockHash`): `Vec<StorageChangeSet>`[\u200b](#querystoragekeys-vecstoragekey-fromblock-hash-toblock-blockhash-vecstoragechangeset \"Direct link to querystoragekeys-vecstoragekey-fromblock-hash-toblock-blockhash-vecstoragechangeset\")\n\n*   **interface**: `api.rpc.state.queryStorage`\n*   **jsonrpc**: `state_queryStorage`\n*   **summary**: Query historical storage entries (by key) starting from a start block\n*   **unsafe**: This method is only active with appropriate flags\n\n### queryStorageAt(keys: `Vec<StorageKey>`, at?: `BlockHash`): `Vec<StorageChangeSet>`[\u200b](#querystorageatkeys-vecstoragekey-at-blockhash-vecstoragechangeset \"Direct link to querystorageatkeys-vecstoragekey-at-blockhash-vecstoragechangeset\")\n\n*   **interface**: `api.rpc.state.queryStorageAt`\n*   **jsonrpc**: `state_queryStorageAt`\n*   **summary**: Query storage entries (by key) starting at block hash given as the second parameter\n\n### subscribeRuntimeVersion(): `RuntimeVersion`[\u200b](#subscriberuntimeversion-runtimeversion \"Direct link to subscriberuntimeversion-runtimeversion\")\n\n*   **interface**: `api.rpc.state.subscribeRuntimeVersion`\n*   **jsonrpc**: `state_subscribeRuntimeVersion`\n*   **summary**: Retrieves the runtime version via subscription\n\n### subscribeStorage(keys?: `Vec<StorageKey>`): `StorageChangeSet`[\u200b](#subscribestoragekeys-vecstoragekey-storagechangeset \"Direct link to subscribestoragekeys-vecstoragekey-storagechangeset\")\n\n*   **interface**: `api.rpc.state.subscribeStorage`\n*   **jsonrpc**: `state_subscribeStorage`\n*   **summary**: Subscribes to storage changes for the provided keys\n\n### traceBlock(block: `Hash`, targets: `Option<Text>`, storageKeys: `Option<Text>`, methods: `Option<Text>`): `TraceBlockResponse`[\u200b](#traceblockblock-hash-targets-optiontext-storagekeys-optiontext-methods-optiontext-traceblockresponse \"Direct link to traceblockblock-hash-targets-optiontext-storagekeys-optiontext-methods-optiontext-traceblockresponse\")\n\n*   **interface**: `api.rpc.state.traceBlock`\n*   **jsonrpc**: `state_traceBlock`\n*   **summary**: Provides a way to trace the re-execution of a single block\n*   **unsafe**: This method is only active with appropriate flags\n\n### trieMigrationStatus(at?: `BlockHash`): `MigrationStatusResult`[\u200b](#triemigrationstatusat-blockhash-migrationstatusresult \"Direct link to triemigrationstatusat-blockhash-migrationstatusresult\")\n\n*   **interface**: `api.rpc.state.trieMigrationStatus`\n*   **jsonrpc**: `state_trieMigrationStatus`\n*   **summary**: Check current migration state\n*   **unsafe**: This method is only active with appropriate flags\n\n* * *\n\nsyncstate[\u200b](#syncstate \"Direct link to syncstate\")\n\n----------------------------------------------------\n\n### genSyncSpec(raw: `bool`): `Json`[\u200b](#gensyncspecraw-bool-json \"Direct link to gensyncspecraw-bool-json\")\n\n*   **interface**: `api.rpc.syncstate.genSyncSpec`\n*   **jsonrpc**: `sync_state_genSyncSpec`\n*   **summary**: Returns the json-serialized chainspec running the node, with a sync state.\n\n* * *\n\nsystem[\u200b](#system \"Direct link to system\")\n\n-------------------------------------------\n\n### accountNextIndex(accountId: `AccountId`): `Index`[\u200b](#accountnextindexaccountid-accountid-index \"Direct link to accountnextindexaccountid-accountid-index\")\n\n*   **interface**: `api.rpc.system.accountNextIndex`\n*   **jsonrpc**: `system_accountNextIndex`\n*   **summary**: Retrieves the next accountIndex as available on the node\n\n### addLogFilter(directives: `Text`): `Null`[\u200b](#addlogfilterdirectives-text-null \"Direct link to addlogfilterdirectives-text-null\")\n\n*   **interface**: `api.rpc.system.addLogFilter`\n*   **jsonrpc**: `system_addLogFilter`\n*   **summary**: Adds the supplied directives to the current log filter\n*   **unsafe**: This method is only active with appropriate flags\n\n### addReservedPeer(peer: `Text`): `Text`[\u200b](#addreservedpeerpeer-text-text \"Direct link to addreservedpeerpeer-text-text\")\n\n*   **interface**: `api.rpc.system.addReservedPeer`\n*   **jsonrpc**: `system_addReservedPeer`\n*   **summary**: Adds a reserved peer\n*   **unsafe**: This method is only active with appropriate flags\n\n### chain(): `Text`[\u200b](#chain-text \"Direct link to chain-text\")\n\n*   **interface**: `api.rpc.system.chain`\n*   **jsonrpc**: `system_chain`\n*   **summary**: Retrieves the chain\n\n### chainType(): `ChainType`[\u200b](#chaintype-chaintype \"Direct link to chaintype-chaintype\")\n\n*   **interface**: `api.rpc.system.chainType`\n*   **jsonrpc**: `system_chainType`\n*   **summary**: Retrieves the chain type\n\n### dryRun(extrinsic: `Bytes`, at?: `BlockHash`): `ApplyExtrinsicResult`[\u200b](#dryrunextrinsic-bytes-at-blockhash-applyextrinsicresult \"Direct link to dryrunextrinsic-bytes-at-blockhash-applyextrinsicresult\")\n\n*   **interface**: `api.rpc.system.dryRun`\n*   **jsonrpc**: `system_dryRun`\n*   **summary**: Dry run an extrinsic at a given block\n*   **unsafe**: This method is only active with appropriate flags\n\n### health(): `Health`[\u200b](#health-health \"Direct link to health-health\")\n\n*   **interface**: `api.rpc.system.health`\n*   **jsonrpc**: `system_health`\n*   **summary**: Return health status of the node\n\n### localListenAddresses(): `Vec<Text>`[\u200b](#locallistenaddresses-vectext \"Direct link to locallistenaddresses-vectext\")\n\n*   **interface**: `api.rpc.system.localListenAddresses`\n*   **jsonrpc**: `system_localListenAddresses`\n*   **summary**: The addresses include a trailing /p2p/ with the local PeerId, and are thus suitable to be passed to addReservedPeer or as a bootnode address for example\n\n### localPeerId(): `Text`[\u200b](#localpeerid-text \"Direct link to localpeerid-text\")\n\n*   **interface**: `api.rpc.system.localPeerId`\n*   **jsonrpc**: `system_localPeerId`\n*   **summary**: Returns the base58-encoded PeerId of the node\n\n### name(): `Text`[\u200b](#name-text \"Direct link to name-text\")\n\n*   **interface**: `api.rpc.system.name`\n*   **jsonrpc**: `system_name`\n*   **summary**: Retrieves the node name\n\n### nodeRoles(): `Vec<NodeRole>`[\u200b](#noderoles-vecnoderole \"Direct link to noderoles-vecnoderole\")\n\n*   **interface**: `api.rpc.system.nodeRoles`\n*   **jsonrpc**: `system_nodeRoles`\n*   **summary**: Returns the roles the node is running as\n\n### peers(): `Vec<PeerInfo>`[\u200b](#peers-vecpeerinfo \"Direct link to peers-vecpeerinfo\")\n\n*   **interface**: `api.rpc.system.peers`\n*   **jsonrpc**: `system_peers`\n*   **summary**: Returns the currently connected peers\n*   **unsafe**: This method is only active with appropriate flags\n\n### properties(): `ChainProperties`[\u200b](#properties-chainproperties \"Direct link to properties-chainproperties\")\n\n*   **interface**: `api.rpc.system.properties`\n*   **jsonrpc**: `system_properties`\n*   **summary**: Get a custom set of properties as a JSON object, defined in the chain spec\n\n### removeReservedPeer(peerId: `Text`): `Text`[\u200b](#removereservedpeerpeerid-text-text \"Direct link to removereservedpeerpeerid-text-text\")\n\n*   **interface**: `api.rpc.system.removeReservedPeer`\n*   **jsonrpc**: `system_removeReservedPeer`\n*   **summary**: Remove a reserved peer\n*   **unsafe**: This method is only active with appropriate flags\n\n### reservedPeers(): `Vec<Text>`[\u200b](#reservedpeers-vectext \"Direct link to reservedpeers-vectext\")\n\n*   **interface**: `api.rpc.system.reservedPeers`\n*   **jsonrpc**: `system_reservedPeers`\n*   **summary**: Returns the list of reserved peers\n\n### resetLogFilter(): `Null`[\u200b](#resetlogfilter-null \"Direct link to resetlogfilter-null\")\n\n*   **interface**: `api.rpc.system.resetLogFilter`\n*   **jsonrpc**: `system_resetLogFilter`\n*   **summary**: Resets the log filter to Substrate defaults\n*   **unsafe**: This method is only active with appropriate flags\n\n### syncState(): `SyncState`[\u200b](#syncstate-syncstate \"Direct link to syncstate-syncstate\")\n\n*   **interface**: `api.rpc.system.syncState`\n*   **jsonrpc**: `system_syncState`\n*   **summary**: Returns the state of the syncing of the node\n\n### version(): `Text`[\u200b](#version-text \"Direct link to version-text\")\n\n*   **interface**: `api.rpc.system.version`\n*   **jsonrpc**: `system_version`\n*   **summary**: Retrieves the version of the node\n\n[Edit this page](https://github.com/polkadot-js/docs/edit/master/docs/kusama/rpc.md)\n\n[Previous\\\n\\\nRuntime](/docs/kusama/runtime)\n[Next\\\n\\\nConstants](/docs/kusama/constants)\n\n*   [author](#author)\n    *   [hasKey(publicKey: `Bytes`, keyType: `Text`): `bool`](#haskeypublickey-bytes-keytype-text-bool)\n        \n    *   [hasSessionKeys(sessionKeys: `Bytes`): `bool`](#hassessionkeyssessionkeys-bytes-bool)\n        \n    *   [insertKey(keyType: `Text`, suri: `Text`, publicKey: `Bytes`): `Bytes`](#insertkeykeytype-text-suri-text-publickey-bytes-bytes)\n        \n    *   [pendingExtrinsics(): `Vec<Extrinsic>`](#pendingextrinsics-vecextrinsic)\n        \n    *   [removeExtrinsic(bytesOrHash: `Vec<ExtrinsicOrHash>`): `Vec<Hash>`](#removeextrinsicbytesorhash-vecextrinsicorhash-vechash)\n        \n    *   [rotateKeys(): `Bytes`](#rotatekeys-bytes)\n        \n    *   [submitAndWatchExtrinsic(extrinsic: `Extrinsic`): `ExtrinsicStatus`](#submitandwatchextrinsicextrinsic-extrinsic-extrinsicstatus)\n        \n    *   [submitExtrinsic(extrinsic: `Extrinsic`): `Hash`](#submitextrinsicextrinsic-extrinsic-hash)\n        \n*   [babe](#babe)\n    *   [epochAuthorship(): `HashMap<AuthorityId, EpochAuthorship>`](#epochauthorship-hashmapauthorityid-epochauthorship)\n        \n*   [beefy](#beefy)\n    *   [getFinalizedHead(): `H256`](#getfinalizedhead-h256)\n        \n    *   [subscribeJustifications(): `BeefyVersionedFinalityProof`](#subscribejustifications-beefyversionedfinalityproof)\n        \n*   [chain](#chain)\n    *   [getBlock(hash?: `BlockHash`): `SignedBlock`](#getblockhash-blockhash-signedblock)\n        \n    *   [getBlockHash(blockNumber?: `BlockNumber`): `BlockHash`](#getblockhashblocknumber-blocknumber-blockhash)\n        \n    *   [getFinalizedHead(): `BlockHash`](#getfinalizedhead-blockhash)\n        \n    *   [getHeader(hash?: `BlockHash`): `Header`](#getheaderhash-blockhash-header)\n        \n    *   [subscribeAllHeads(): `Header`](#subscribeallheads-header)\n        \n    *   [subscribeFinalizedHeads(): `Header`](#subscribefinalizedheads-header)\n        \n    *   [subscribeNewHeads(): `Header`](#subscribenewheads-header)\n        \n*   [childstate](#childstate)\n    *   [getKeys(childKey: `PrefixedStorageKey`, prefix: `StorageKey`, at?: `Hash`): `Vec<StorageKey>`](#getkeyschildkey-prefixedstoragekey-prefix-storagekey-at-hash-vecstoragekey)\n        \n    *   [getKeysPaged(childKey: `PrefixedStorageKey`, prefix: `StorageKey`, count: `u32`, startKey?: `StorageKey`, at?: `Hash`): `Vec<StorageKey>`](#getkeyspagedchildkey-prefixedstoragekey-prefix-storagekey-count-u32-startkey-storagekey-at-hash-vecstoragekey)\n        \n    *   [getStorage(childKey: `PrefixedStorageKey`, key: `StorageKey`, at?: `Hash`): `Option<StorageData>`](#getstoragechildkey-prefixedstoragekey-key-storagekey-at-hash-optionstoragedata)\n        \n    *   [getStorageEntries(childKey: `PrefixedStorageKey`, keys: `Vec<StorageKey>`, at?: `Hash`): `Vec<Option<StorageData>>`](#getstorageentrieschildkey-prefixedstoragekey-keys-vecstoragekey-at-hash-vecoptionstoragedata)\n        \n    *   [getStorageHash(childKey: `PrefixedStorageKey`, key: `StorageKey`, at?: `Hash`): `Option<Hash>`](#getstoragehashchildkey-prefixedstoragekey-key-storagekey-at-hash-optionhash)\n        \n    *   [getStorageSize(childKey: `PrefixedStorageKey`, key: `StorageKey`, at?: `Hash`): `Option<u64>`](#getstoragesizechildkey-prefixedstoragekey-key-storagekey-at-hash-optionu64)\n        \n*   [grandpa](#grandpa)\n    *   [proveFinality(blockNumber: `BlockNumber`): `Option<EncodedFinalityProofs>`](#provefinalityblocknumber-blocknumber-optionencodedfinalityproofs)\n        \n    *   [roundState(): `ReportedRoundStates`](#roundstate-reportedroundstates)\n        \n    *   [subscribeJustifications(): `JustificationNotification`](#subscribejustifications-justificationnotification)\n        \n*   [mmr](#mmr)\n    *   [generateProof(blockNumbers: `Vec<u64>`, bestKnownBlockNumber?: `u64`, at?: `BlockHash`): `MmrLeafBatchProof`](#generateproofblocknumbers-vecu64-bestknownblocknumber-u64-at-blockhash-mmrleafbatchproof)\n        \n    *   [root(at?: `BlockHash`): `MmrHash`](#rootat-blockhash-mmrhash)\n        \n    *   [verifyProof(proof: `MmrLeafBatchProof`): `bool`](#verifyproofproof-mmrleafbatchproof-bool)\n        \n    *   [verifyProofStateless(root: `MmrHash`, proof: `MmrLeafBatchProof`): `bool`](#verifyproofstatelessroot-mmrhash-proof-mmrleafbatchproof-bool)\n        \n*   [offchain](#offchain)\n    *   [localStorageGet(kind: `StorageKind`, key: `Bytes`): `Option<Bytes>`](#localstoragegetkind-storagekind-key-bytes-optionbytes)\n        \n    *   [localStorageSet(kind: `StorageKind`, key: `Bytes`, value: `Bytes`): `Null`](#localstoragesetkind-storagekind-key-bytes-value-bytes-null)\n        \n*   [payment](#payment)\n    *   [queryFeeDetails(extrinsic: `Bytes`, at?: `BlockHash`): `FeeDetails`](#queryfeedetailsextrinsic-bytes-at-blockhash-feedetails)\n        \n    *   [queryInfo(extrinsic: `Bytes`, at?: `BlockHash`): `RuntimeDispatchInfoV1`](#queryinfoextrinsic-bytes-at-blockhash-runtimedispatchinfov1)\n        \n*   [rpc](#rpc)\n    *   [methods(): `RpcMethods`](#methods-rpcmethods)\n        \n*   [state](#state)\n    *   [call(method: `Text`, data: `Bytes`, at?: `BlockHash`): `Bytes`](#callmethod-text-data-bytes-at-blockhash-bytes)\n        \n    *   [getChildReadProof(childStorageKey: `PrefixedStorageKey`, keys: `Vec<StorageKey>`, at?: `BlockHash`): `ReadProof`](#getchildreadproofchildstoragekey-prefixedstoragekey-keys-vecstoragekey-at-blockhash-readproof)\n        \n    *   [getKeys(key: `StorageKey`, at?: `BlockHash`): `Vec<StorageKey>`](#getkeyskey-storagekey-at-blockhash-vecstoragekey)\n        \n    *   [getKeysPaged(key: `StorageKey`, count: `u32`, startKey?: `StorageKey`, at?: `BlockHash`): `Vec<StorageKey>`](#getkeyspagedkey-storagekey-count-u32-startkey-storagekey-at-blockhash-vecstoragekey)\n        \n    *   [getMetadata(at?: `BlockHash`): `Metadata`](#getmetadataat-blockhash-metadata)\n        \n    *   [getPairs(prefix: `StorageKey`, at?: `BlockHash`): `Vec<KeyValue>`](#getpairsprefix-storagekey-at-blockhash-veckeyvalue)\n        \n    *   [getReadProof(keys: `Vec<StorageKey>`, at?: `BlockHash`): `ReadProof`](#getreadproofkeys-vecstoragekey-at-blockhash-readproof)\n        \n    *   [getRuntimeVersion(at?: `BlockHash`): `RuntimeVersion`](#getruntimeversionat-blockhash-runtimeversion)\n        \n    *   [getStorage(key: `StorageKey`, at?: `BlockHash`): `StorageData`](#getstoragekey-storagekey-at-blockhash-storagedata)\n        \n    *   [getStorageHash(key: `StorageKey`, at?: `BlockHash`): `Hash`](#getstoragehashkey-storagekey-at-blockhash-hash)\n        \n    *   [getStorageSize(key: `StorageKey`, at?: `BlockHash`): `u64`](#getstoragesizekey-storagekey-at-blockhash-u64)\n        \n    *   [queryStorage(keys: `Vec<StorageKey>`, fromBlock: `Hash`, toBlock?: `BlockHash`): `Vec<StorageChangeSet>`](#querystoragekeys-vecstoragekey-fromblock-hash-toblock-blockhash-vecstoragechangeset)\n        \n    *   [queryStorageAt(keys: `Vec<StorageKey>`, at?: `BlockHash`): `Vec<StorageChangeSet>`](#querystorageatkeys-vecstoragekey-at-blockhash-vecstoragechangeset)\n        \n    *   [subscribeRuntimeVersion(): `RuntimeVersion`](#subscriberuntimeversion-runtimeversion)\n        \n    *   [subscribeStorage(keys?: `Vec<StorageKey>`): `StorageChangeSet`](#subscribestoragekeys-vecstoragekey-storagechangeset)\n        \n    *   [traceBlock(block: `Hash`, targets: `Option<Text>`, storageKeys: `Option<Text>`, methods: `Option<Text>`): `TraceBlockResponse`](#traceblockblock-hash-targets-optiontext-storagekeys-optiontext-methods-optiontext-traceblockresponse)\n        \n    *   [trieMigrationStatus(at?: `BlockHash`): `MigrationStatusResult`](#triemigrationstatusat-blockhash-migrationstatusresult)\n        \n*   [syncstate](#syncstate)\n    *   [genSyncSpec(raw: `bool`): `Json`](#gensyncspecraw-bool-json)\n        \n*   [system](#system)\n    *   [accountNextIndex(accountId: `AccountId`): `Index`](#accountnextindexaccountid-accountid-index)\n        \n    *   [addLogFilter(directives: `Text`): `Null`](#addlogfilterdirectives-text-null)\n        \n    *   [addReservedPeer(peer: `Text`): `Text`](#addreservedpeerpeer-text-text)\n        \n    *   [chain(): `Text`](#chain-text)\n        \n    *   [chainType(): `ChainType`](#chaintype-chaintype)\n        \n    *   [dryRun(extrinsic: `Bytes`, at?: `BlockHash`): `ApplyExtrinsicResult`](#dryrunextrinsic-bytes-at-blockhash-applyextrinsicresult)\n        \n    *   [health(): `Health`](#health-health)\n        \n    *   [localListenAddresses(): `Vec<Text>`](#locallistenaddresses-vectext)\n        \n    *   [localPeerId(): `Text`](#localpeerid-text)\n        \n    *   [name(): `Text`](#name-text)\n        \n    *   [nodeRoles(): `Vec<NodeRole>`](#noderoles-vecnoderole)\n        \n    *   [peers(): `Vec<PeerInfo>`](#peers-vecpeerinfo)\n        \n    *   [properties(): `ChainProperties`](#properties-chainproperties)\n        \n    *   [removeReservedPeer(peerId: `Text`): `Text`](#removereservedpeerpeerid-text-text)\n        \n    *   [reservedPeers(): `Vec<Text>`](#reservedpeers-vectext)\n        \n    *   [resetLogFilter(): `Null`](#resetlogfilter-null)\n        \n    *   [syncState(): `SyncState`](#syncstate-syncstate)\n        \n    *   [version(): `Text`](#version-text)"}, {"title": null, "description": null, "source_url": "https://polkadot.js.org/docs/kusama/runtime", "markdown": "[Skip to main content](#__docusaurus_skipToContent_fallback)\n\n[![polkadot{.js}](https://polkadot.js.org/docs/img/logo.svg)\\\n\\\n**polkadot{.js}**](/docs/)\n\n[Apps UI (Wallet)](https://polkadot.js.org/apps/)\n[GitHub](https://github.com/polkadot-js/docs)\n\nSearch...\n\n*   [Introduction](#)\n    \n*   [API](#)\n    \n*   [Metadata](#)\n    \n    *   [Substrate](#)\n        \n    *   [Polkadot](#)\n        \n    *   [Kusama](#)\n        \n        *   [Overview](/docs/kusama)\n            \n        *   [Runtime](/docs/kusama/runtime)\n            \n        *   [JSON-RPC](/docs/kusama/rpc)\n            \n        *   [Constants](/docs/kusama/constants)\n            \n        *   [Storage](/docs/kusama/storage)\n            \n        *   [Extrinsics](/docs/kusama/extrinsics)\n            \n        *   [Events](/docs/kusama/events)\n            \n        *   [Errors](/docs/kusama/errors)\n            \n*   [Keyring](#)\n    \n*   [Crypto Utilities](#)\n    \n*   [Contracts (API)](#)\n    \n*   [Identicon (UI)](#)\n    \n*   [Keyring (UI)](#)\n    \n*   [Extension](#)\n    \n*   [Run, Bundle, Test](#)\n    \n\n*   [](/docs/)\n    \n*   Metadata\n*   Kusama\n*   Runtime\n\nOn this page\n\nRuntime\n=======\n\nThe following section contains known runtime calls that may be available on specific runtimes (depending on configuration and available pallets). These call directly into the WASM runtime for queries and operations.\n\n*   **[accountNonceApi](#accountnonceapi)\n    **\n    \n*   **[authorityDiscoveryApi](#authoritydiscoveryapi)\n    **\n    \n*   **[babeApi](#babeapi)\n    **\n    \n*   **[beefyApi](#beefyapi)\n    **\n    \n*   **[beefyMmrApi](#beefymmrapi)\n    **\n    \n*   **[blockBuilder](#blockbuilder)\n    **\n    \n*   **[core](#core)\n    **\n    \n*   **[grandpaApi](#grandpaapi)\n    **\n    \n*   **[metadata](#metadata)\n    **\n    \n*   **[mmrApi](#mmrapi)\n    **\n    \n*   **[nominationPoolsApi](#nominationpoolsapi)\n    **\n    \n*   **[offchainWorkerApi](#offchainworkerapi)\n    **\n    \n*   **[parachainHost](#parachainhost)\n    **\n    \n*   **[sessionKeys](#sessionkeys)\n    **\n    \n*   **[stakingApi](#stakingapi)\n    **\n    \n*   **[taggedTransactionQueue](#taggedtransactionqueue)\n    **\n    \n*   **[transactionPaymentApi](#transactionpaymentapi)\n    **\n    \n*   **[transactionPaymentCallApi](#transactionpaymentcallapi)\n    **\n    \n\n* * *\n\nAccountNonceApi[\u200b](#accountnonceapi \"Direct link to AccountNonceApi\")\n\n----------------------------------------------------------------------\n\n### accountNonce(accountId: `AccountId`): `Index`[\u200b](#accountnonceaccountid-accountid-index \"Direct link to accountnonceaccountid-accountid-index\")\n\n*   **interface**: `api.call.accountNonceApi.accountNonce`\n*   **runtime**: `AccountNonceApi_account_nonce`\n*   **summary**: The API to query account nonce (aka transaction index)\n\n* * *\n\nAuthorityDiscoveryApi[\u200b](#authoritydiscoveryapi \"Direct link to AuthorityDiscoveryApi\")\n\n----------------------------------------------------------------------------------------\n\n### authorities(): `Vec<AuthorityId>`[\u200b](#authorities-vecauthorityid \"Direct link to authorities-vecauthorityid\")\n\n*   **interface**: `api.call.authorityDiscoveryApi.authorities`\n*   **runtime**: `AuthorityDiscoveryApi_authorities`\n*   **summary**: Retrieve authority identifiers of the current and next authority set.\n\n* * *\n\nBabeApi[\u200b](#babeapi \"Direct link to BabeApi\")\n\n----------------------------------------------\n\n### configuration(): `BabeGenesisConfiguration`[\u200b](#configuration-babegenesisconfiguration \"Direct link to configuration-babegenesisconfiguration\")\n\n*   **interface**: `api.call.babeApi.configuration`\n*   **runtime**: `BabeApi_configuration`\n*   **summary**: Return the genesis configuration for BABE. The configuration is only read on genesis.\n\n### currentEpoch(): `Epoch`[\u200b](#currentepoch-epoch \"Direct link to currentepoch-epoch\")\n\n*   **interface**: `api.call.babeApi.currentEpoch`\n*   **runtime**: `BabeApi_current_epoch`\n*   **summary**: Returns information regarding the current epoch.\n\n### currentEpochStart(): `Slot`[\u200b](#currentepochstart-slot \"Direct link to currentepochstart-slot\")\n\n*   **interface**: `api.call.babeApi.currentEpochStart`\n*   **runtime**: `BabeApi_current_epoch_start`\n*   **summary**: Returns the slot that started the current epoch.\n\n### generateKeyOwnershipProof(slot: `Slot`, authorityId: `AuthorityId`): `Option<OpaqueKeyOwnershipProof>`[\u200b](#generatekeyownershipproofslot-slot-authorityid-authorityid-optionopaquekeyownershipproof \"Direct link to generatekeyownershipproofslot-slot-authorityid-authorityid-optionopaquekeyownershipproof\")\n\n*   **interface**: `api.call.babeApi.generateKeyOwnershipProof`\n*   **runtime**: `BabeApi_generate_key_ownership_proof`\n*   **summary**: Generates a proof of key ownership for the given authority in the current epoch.\n\n### nextEpoch(): `Epoch`[\u200b](#nextepoch-epoch \"Direct link to nextepoch-epoch\")\n\n*   **interface**: `api.call.babeApi.nextEpoch`\n*   **runtime**: `BabeApi_next_epoch`\n*   **summary**: Returns information regarding the next epoch (which was already previously announced).\n\n### submitReportEquivocationUnsignedExtrinsic(equivocationProof: `BabeEquivocationProof`, keyOwnerProof: `OpaqueKeyOwnershipProof`): `Option<Null>`[\u200b](#submitreportequivocationunsignedextrinsicequivocationproof-babeequivocationproof-keyownerproof-opaquekeyownershipproof-optionnull \"Direct link to submitreportequivocationunsignedextrinsicequivocationproof-babeequivocationproof-keyownerproof-opaquekeyownershipproof-optionnull\")\n\n*   **interface**: `api.call.babeApi.submitReportEquivocationUnsignedExtrinsic`\n*   **runtime**: `BabeApi_submit_report_equivocation_unsigned_extrinsic`\n*   **summary**: Submits an unsigned extrinsic to report an equivocation.\n\n* * *\n\nBeefyApi[\u200b](#beefyapi \"Direct link to BeefyApi\")\n\n-------------------------------------------------\n\n### beefyGenesis(): `Option<BlockNumber>`[\u200b](#beefygenesis-optionblocknumber \"Direct link to beefygenesis-optionblocknumber\")\n\n*   **interface**: `api.call.beefyApi.beefyGenesis`\n*   **runtime**: `BeefyApi_beefy_genesis`\n*   **summary**: Return the block number where BEEFY consensus is enabled/started\n\n### generateKeyOwnershipProof(setId: `ValidatorSetId`, authorityId: `AuthorityId`): `Option<OpaqueKeyOwnershipProof>`[\u200b](#generatekeyownershipproofsetid-validatorsetid-authorityid-authorityid-optionopaquekeyownershipproof \"Direct link to generatekeyownershipproofsetid-validatorsetid-authorityid-authorityid-optionopaquekeyownershipproof\")\n\n*   **interface**: `api.call.beefyApi.generateKeyOwnershipProof`\n*   **runtime**: `BeefyApi_generate_key_ownership_proof`\n*   **summary**: Generates a proof of key ownership for the given authority in the given set.\n\n### submitReportEquivocationUnsignedExtrinsic(equivocationProof: `BeefyEquivocationProof`, keyOwnerProof: `OpaqueKeyOwnershipProof`): `Option<Null>`[\u200b](#submitreportequivocationunsignedextrinsicequivocationproof-beefyequivocationproof-keyownerproof-opaquekeyownershipproof-optionnull \"Direct link to submitreportequivocationunsignedextrinsicequivocationproof-beefyequivocationproof-keyownerproof-opaquekeyownershipproof-optionnull\")\n\n*   **interface**: `api.call.beefyApi.submitReportEquivocationUnsignedExtrinsic`\n*   **runtime**: `BeefyApi_submit_report_equivocation_unsigned_extrinsic`\n*   **summary**: Submits an unsigned extrinsic to report an equivocation.\n\n### validatorSet(): `Option<ValidatorSet>`[\u200b](#validatorset-optionvalidatorset \"Direct link to validatorset-optionvalidatorset\")\n\n*   **interface**: `api.call.beefyApi.validatorSet`\n*   **runtime**: `BeefyApi_validator_set`\n*   **summary**: Return the current active BEEFY validator set\n\n* * *\n\nBeefyMmrApi[\u200b](#beefymmrapi \"Direct link to BeefyMmrApi\")\n\n----------------------------------------------------------\n\n### authoritySetProof(): `BeefyAuthoritySet`[\u200b](#authoritysetproof-beefyauthorityset \"Direct link to authoritysetproof-beefyauthorityset\")\n\n*   **interface**: `api.call.beefyMmrApi.authoritySetProof`\n*   **runtime**: `BeefyMmrApi_authority_set_proof`\n*   **summary**: Return the currently active BEEFY authority set proof.\n\n### nextAuthoritySetProof(): `BeefyNextAuthoritySet`[\u200b](#nextauthoritysetproof-beefynextauthorityset \"Direct link to nextauthoritysetproof-beefynextauthorityset\")\n\n*   **interface**: `api.call.beefyMmrApi.nextAuthoritySetProof`\n*   **runtime**: `BeefyMmrApi_next_authority_set_proof`\n*   **summary**: Return the next/queued BEEFY authority set proof.\n\n* * *\n\nBlockBuilder[\u200b](#blockbuilder \"Direct link to BlockBuilder\")\n\n-------------------------------------------------------------\n\n### applyExtrinsic(extrinsic: `Extrinsic`): `ApplyExtrinsicResult`[\u200b](#applyextrinsicextrinsic-extrinsic-applyextrinsicresult \"Direct link to applyextrinsicextrinsic-extrinsic-applyextrinsicresult\")\n\n*   **interface**: `api.call.blockBuilder.applyExtrinsic`\n*   **runtime**: `BlockBuilder_apply_extrinsic`\n*   **summary**: Apply the given extrinsic.\n\n### checkInherents(block: `Block`, data: `InherentData`): `CheckInherentsResult`[\u200b](#checkinherentsblock-block-data-inherentdata-checkinherentsresult \"Direct link to checkinherentsblock-block-data-inherentdata-checkinherentsresult\")\n\n*   **interface**: `api.call.blockBuilder.checkInherents`\n*   **runtime**: `BlockBuilder_check_inherents`\n*   **summary**: Check that the inherents are valid.\n\n### finalizeBlock(): `Header`[\u200b](#finalizeblock-header \"Direct link to finalizeblock-header\")\n\n*   **interface**: `api.call.blockBuilder.finalizeBlock`\n*   **runtime**: `BlockBuilder_finalize_block`\n*   **summary**: Finish the current block.\n\n### inherentExtrinsics(inherent: `InherentData`): `Vec<Extrinsic>`[\u200b](#inherentextrinsicsinherent-inherentdata-vecextrinsic \"Direct link to inherentextrinsicsinherent-inherentdata-vecextrinsic\")\n\n*   **interface**: `api.call.blockBuilder.inherentExtrinsics`\n*   **runtime**: `BlockBuilder_inherent_extrinsics`\n*   **summary**: Generate inherent extrinsics.\n\n* * *\n\nCore[\u200b](#core \"Direct link to Core\")\n\n-------------------------------------\n\n### executeBlock(block: `Block`): `Null`[\u200b](#executeblockblock-block-null \"Direct link to executeblockblock-block-null\")\n\n*   **interface**: `api.call.core.executeBlock`\n*   **runtime**: `Core_execute_block`\n*   **summary**: Execute the given block.\n\n### initializeBlock(header: `Header`): `Null`[\u200b](#initializeblockheader-header-null \"Direct link to initializeblockheader-header-null\")\n\n*   **interface**: `api.call.core.initializeBlock`\n*   **runtime**: `Core_initialize_block`\n*   **summary**: Initialize a block with the given header.\n\n### version(): `RuntimeVersion`[\u200b](#version-runtimeversion \"Direct link to version-runtimeversion\")\n\n*   **interface**: `api.call.core.version`\n*   **runtime**: `Core_version`\n*   **summary**: Returns the version of the runtime.\n\n* * *\n\nGrandpaApi[\u200b](#grandpaapi \"Direct link to GrandpaApi\")\n\n-------------------------------------------------------\n\n### currentSetId(): `SetId`[\u200b](#currentsetid-setid \"Direct link to currentsetid-setid\")\n\n*   **interface**: `api.call.grandpaApi.currentSetId`\n*   **runtime**: `GrandpaApi_current_set_id`\n*   **summary**: Get current GRANDPA authority set id.\n\n### generateKeyOwnershipProof(setId: `SetId`, authorityId: `AuthorityId`): `Option<OpaqueKeyOwnershipProof>`[\u200b](#generatekeyownershipproofsetid-setid-authorityid-authorityid-optionopaquekeyownershipproof \"Direct link to generatekeyownershipproofsetid-setid-authorityid-authorityid-optionopaquekeyownershipproof\")\n\n*   **interface**: `api.call.grandpaApi.generateKeyOwnershipProof`\n*   **runtime**: `GrandpaApi_generate_key_ownership_proof`\n*   **summary**: Generates a proof of key ownership for the given authority in the given set.\n\n### grandpaAuthorities(): `AuthorityList`[\u200b](#grandpaauthorities-authoritylist \"Direct link to grandpaauthorities-authoritylist\")\n\n*   **interface**: `api.call.grandpaApi.grandpaAuthorities`\n*   **runtime**: `GrandpaApi_grandpa_authorities`\n*   **summary**: Get the current GRANDPA authorities and weights. This should not change except for when changes are scheduled and the corresponding delay has passed.\n\n### submitReportEquivocationUnsignedExtrinsic(equivocationProof: `GrandpaEquivocationProof`, keyOwnerProof: `OpaqueKeyOwnershipProof`): `Option<Null>`[\u200b](#submitreportequivocationunsignedextrinsicequivocationproof-grandpaequivocationproof-keyownerproof-opaquekeyownershipproof-optionnull \"Direct link to submitreportequivocationunsignedextrinsicequivocationproof-grandpaequivocationproof-keyownerproof-opaquekeyownershipproof-optionnull\")\n\n*   **interface**: `api.call.grandpaApi.submitReportEquivocationUnsignedExtrinsic`\n*   **runtime**: `GrandpaApi_submit_report_equivocation_unsigned_extrinsic`\n*   **summary**: Submits an unsigned extrinsic to report an equivocation.\n\n* * *\n\nMetadata[\u200b](#metadata \"Direct link to Metadata\")\n\n-------------------------------------------------\n\n### metadata(): `OpaqueMetadata`[\u200b](#metadata-opaquemetadata \"Direct link to metadata-opaquemetadata\")\n\n*   **interface**: `api.call.metadata.metadata`\n*   **runtime**: `Metadata_metadata`\n*   **summary**: Returns the metadata of a runtime\n\n### metadataAtVersion(version: `u32`): `Option<OpaqueMetadata>`[\u200b](#metadataatversionversion-u32-optionopaquemetadata \"Direct link to metadataatversionversion-u32-optionopaquemetadata\")\n\n*   **interface**: `api.call.metadata.metadataAtVersion`\n*   **runtime**: `Metadata_metadata_at_version`\n*   **summary**: Returns the metadata at a given version.\n\n### metadataVersions(): `Vec<u32>`[\u200b](#metadataversions-vecu32 \"Direct link to metadataversions-vecu32\")\n\n*   **interface**: `api.call.metadata.metadataVersions`\n*   **runtime**: `Metadata_metadata_versions`\n*   **summary**: Returns the supported metadata versions.\n\n* * *\n\nMmrApi[\u200b](#mmrapi \"Direct link to MmrApi\")\n\n-------------------------------------------\n\n### generateProof(blockNumbers: `Vec<BlockNumber>`, bestKnownBlockNumber: `Option<BlockNumber>`): `Result<(Vec<MmrEncodableOpaqueLeaf>, MmrBatchProof), MmrError>`[\u200b](#generateproofblocknumbers-vecblocknumber-bestknownblocknumber-optionblocknumber-resultvecmmrencodableopaqueleaf-mmrbatchproof-mmrerror \"Direct link to generateproofblocknumbers-vecblocknumber-bestknownblocknumber-optionblocknumber-resultvecmmrencodableopaqueleaf-mmrbatchproof-mmrerror\")\n\n*   **interface**: `api.call.mmrApi.generateProof`\n*   **runtime**: `MmrApi_generate_proof`\n*   **summary**: Generate MMR proof for the given block numbers.\n\n### root(): `Result<Hash, MmrError>`[\u200b](#root-resulthash-mmrerror \"Direct link to root-resulthash-mmrerror\")\n\n*   **interface**: `api.call.mmrApi.root`\n*   **runtime**: `MmrApi_root`\n*   **summary**: Return the on-chain MMR root hash.\n\n### verifyProof(leaves: `Vec<MmrEncodableOpaqueLeaf>`, proof: `MmrBatchProof`): `Result<(), MmrError>`[\u200b](#verifyproofleaves-vecmmrencodableopaqueleaf-proof-mmrbatchproof-result-mmrerror \"Direct link to verifyproofleaves-vecmmrencodableopaqueleaf-proof-mmrbatchproof-result-mmrerror\")\n\n*   **interface**: `api.call.mmrApi.verifyProof`\n*   **runtime**: `MmrApi_verify_proof`\n*   **summary**: Verify MMR proof against on-chain MMR.\n\n### verifyProofStateless(root: `Hash`, leaves: `Vec<MmrEncodableOpaqueLeaf>`, proof: `MmrBatchProof`): `Result<(), MmrError>`[\u200b](#verifyproofstatelessroot-hash-leaves-vecmmrencodableopaqueleaf-proof-mmrbatchproof-result-mmrerror \"Direct link to verifyproofstatelessroot-hash-leaves-vecmmrencodableopaqueleaf-proof-mmrbatchproof-result-mmrerror\")\n\n*   **interface**: `api.call.mmrApi.verifyProofStateless`\n*   **runtime**: `MmrApi_verify_proof_stateless`\n*   **summary**: Verify MMR proof against given root hash.\n\n* * *\n\nNominationPoolsApi[\u200b](#nominationpoolsapi \"Direct link to NominationPoolsApi\")\n\n-------------------------------------------------------------------------------\n\n### balanceToPoints(poolId: `NpPoolId`, newFunds: `Balance`): `Balance`[\u200b](#balancetopointspoolid-nppoolid-newfunds-balance-balance \"Direct link to balancetopointspoolid-nppoolid-newfunds-balance-balance\")\n\n*   **interface**: `api.call.nominationPoolsApi.balanceToPoints`\n*   **runtime**: `NominationPoolsApi_balance_to_points`\n*   **summary**: Returns the equivalent points of `new_funds` for a given pool.\n\n### pendingRewards(member: `AccountId`): `Balance`[\u200b](#pendingrewardsmember-accountid-balance \"Direct link to pendingrewardsmember-accountid-balance\")\n\n*   **interface**: `api.call.nominationPoolsApi.pendingRewards`\n*   **runtime**: `NominationPoolsApi_pending_rewards`\n*   **summary**: Returns the pending rewards for the given member.\n\n### pointsToBalance(poolId: `NpPoolId`, points: `Balance`): `Balance`[\u200b](#pointstobalancepoolid-nppoolid-points-balance-balance \"Direct link to pointstobalancepoolid-nppoolid-points-balance-balance\")\n\n*   **interface**: `api.call.nominationPoolsApi.pointsToBalance`\n*   **runtime**: `NominationPoolsApi_points_to_balance`\n*   **summary**: Returns the equivalent balance of `points` for a given pool.\n\n* * *\n\nOffchainWorkerApi[\u200b](#offchainworkerapi \"Direct link to OffchainWorkerApi\")\n\n----------------------------------------------------------------------------\n\n### offchainWorker(header: `Header`): `Null`[\u200b](#offchainworkerheader-header-null \"Direct link to offchainworkerheader-header-null\")\n\n*   **interface**: `api.call.offchainWorkerApi.offchainWorker`\n*   **runtime**: `OffchainWorkerApi_offchain_worker`\n*   **summary**: Starts the off-chain task for given block header.\n\n* * *\n\nParachainHost[\u200b](#parachainhost \"Direct link to ParachainHost\")\n\n----------------------------------------------------------------\n\n### assumedValidationData(paraId: `ParaId`, hash: `Hash`): `Option<(PersistedValidationData, ValidationCodeHash)>`[\u200b](#assumedvalidationdataparaid-paraid-hash-hash-optionpersistedvalidationdata-validationcodehash \"Direct link to assumedvalidationdataparaid-paraid-hash-hash-optionpersistedvalidationdata-validationcodehash\")\n\n*   **interface**: `api.call.parachainHost.assumedValidationData`\n*   **runtime**: `ParachainHost_assumed_validation_data`\n*   **summary**: Returns the persisted validation data for the given `ParaId` along with the corresponding validation code hash.\n\n### availabilityCores(): `Vec<CoreState>`[\u200b](#availabilitycores-veccorestate \"Direct link to availabilitycores-veccorestate\")\n\n*   **interface**: `api.call.parachainHost.availabilityCores`\n*   **runtime**: `ParachainHost_availability_cores`\n*   **summary**: Yields information on all availability cores as relevant to the child block.\n\n### candidateEvents(): `Vec<CandidateEvent>`[\u200b](#candidateevents-veccandidateevent \"Direct link to candidateevents-veccandidateevent\")\n\n*   **interface**: `api.call.parachainHost.candidateEvents`\n*   **runtime**: `ParachainHost_candidate_events`\n*   **summary**: Get a vector of events concerning candidates that occurred within a block.\n\n### candidatePendingAvailability(paraId: `ParaId`): `Option<CommittedCandidateReceipt>`[\u200b](#candidatependingavailabilityparaid-paraid-optioncommittedcandidatereceipt \"Direct link to candidatependingavailabilityparaid-paraid-optioncommittedcandidatereceipt\")\n\n*   **interface**: `api.call.parachainHost.candidatePendingAvailability`\n*   **runtime**: `ParachainHost_candidate_pending_availability`\n*   **summary**: Get the receipt of a candidate pending availability.\n\n### checkValidationOutputs(paraId: `ParaId`, outputs: `CandidateCommitments`): `bool`[\u200b](#checkvalidationoutputsparaid-paraid-outputs-candidatecommitments-bool \"Direct link to checkvalidationoutputsparaid-paraid-outputs-candidatecommitments-bool\")\n\n*   **interface**: `api.call.parachainHost.checkValidationOutputs`\n*   **runtime**: `ParachainHost_check_validation_outputs`\n*   **summary**: Checks if the given validation outputs pass the acceptance criteria.\n\n### disputes(): `Vec<(SessionIndex, CandidateHash, DisputeState)>`[\u200b](#disputes-vecsessionindex-candidatehash-disputestate \"Direct link to disputes-vecsessionindex-candidatehash-disputestate\")\n\n*   **interface**: `api.call.parachainHost.disputes`\n*   **runtime**: `ParachainHost_disputes`\n*   **summary**: Returns all onchain disputes.\n\n### dmqContents(paraId: `ParaId`): `Vec<InboundDownwardMessage>`[\u200b](#dmqcontentsparaid-paraid-vecinbounddownwardmessage \"Direct link to dmqcontentsparaid-paraid-vecinbounddownwardmessage\")\n\n*   **interface**: `api.call.parachainHost.dmqContents`\n*   **runtime**: `ParachainHost_dmq_contents`\n*   **summary**: Get all the pending inbound messages in the downward message queue for a para.\n\n### inboundHrmpChannelsContents(paraId: `ParaId`): `Vec<InboundHrmpMessage>`[\u200b](#inboundhrmpchannelscontentsparaid-paraid-vecinboundhrmpmessage \"Direct link to inboundhrmpchannelscontentsparaid-paraid-vecinboundhrmpmessage\")\n\n*   **interface**: `api.call.parachainHost.inboundHrmpChannelsContents`\n*   **runtime**: `ParachainHost_inbound_hrmp_channels_contents`\n*   **summary**: Get the contents of all channels addressed to the given recipient.\n\n### keyOwnershipProof(validatorId: `ValidatorId`): `Option<OpaqueKeyOwnershipProof>`[\u200b](#keyownershipproofvalidatorid-validatorid-optionopaquekeyownershipproof \"Direct link to keyownershipproofvalidatorid-validatorid-optionopaquekeyownershipproof\")\n\n*   **interface**: `api.call.parachainHost.keyOwnershipProof`\n*   **runtime**: `ParachainHost_key_ownership_proof`\n*   **summary**: Returns a merkle proof of a validator session key\n\n### onChainVotes(): `Option<ScrapedOnChainVotes>`[\u200b](#onchainvotes-optionscrapedonchainvotes \"Direct link to onchainvotes-optionscrapedonchainvotes\")\n\n*   **interface**: `api.call.parachainHost.onChainVotes`\n*   **runtime**: `ParachainHost_on_chain_votes`\n*   **summary**: Scrape dispute relevant from on-chain, backing votes and resolved disputes.\n\n### persistedValidationData(paraId: `ParaId`, assumption: `OccupiedCoreAssumption`): `Option<PersistedValidationData>`[\u200b](#persistedvalidationdataparaid-paraid-assumption-occupiedcoreassumption-optionpersistedvalidationdata \"Direct link to persistedvalidationdataparaid-paraid-assumption-occupiedcoreassumption-optionpersistedvalidationdata\")\n\n*   **interface**: `api.call.parachainHost.persistedValidationData`\n*   **runtime**: `ParachainHost_persisted_validation_data`\n*   **summary**: Yields the persisted validation data for the given `ParaId` along with an assumption that should be used if the para currently occupies a core.\n\n### pvfsRequirePrecheck(): `Vec<ValidationCodeHash>`[\u200b](#pvfsrequireprecheck-vecvalidationcodehash \"Direct link to pvfsrequireprecheck-vecvalidationcodehash\")\n\n*   **interface**: `api.call.parachainHost.pvfsRequirePrecheck`\n*   **runtime**: `ParachainHost_pvfs_require_precheck`\n*   **summary**: Returns code hashes of PVFs that require pre-checking by validators in the active set.\n\n### sessionExecutorParams(sessionIndex: `SessionIndex`): `Option<ExecutorParams>`[\u200b](#sessionexecutorparamssessionindex-sessionindex-optionexecutorparams \"Direct link to sessionexecutorparamssessionindex-sessionindex-optionexecutorparams\")\n\n*   **interface**: `api.call.parachainHost.sessionExecutorParams`\n*   **runtime**: `ParachainHost_session_executor_params`\n*   **summary**: Returns execution parameters for the session.\n\n### sessionIndexForChild(): `SessionIndex`[\u200b](#sessionindexforchild-sessionindex \"Direct link to sessionindexforchild-sessionindex\")\n\n*   **interface**: `api.call.parachainHost.sessionIndexForChild`\n*   **runtime**: `ParachainHost_session_index_for_child`\n*   **summary**: Returns the session index expected at a child of the block.\n\n### sessionInfo(index: `SessionIndex`): `Option<SessionInfo>`[\u200b](#sessioninfoindex-sessionindex-optionsessioninfo \"Direct link to sessioninfoindex-sessionindex-optionsessioninfo\")\n\n*   **interface**: `api.call.parachainHost.sessionInfo`\n*   **runtime**: `ParachainHost_session_info`\n*   **summary**: Get the session info for the given session, if stored.\n\n### submitPvfCheckStatement(stmt: `PvfCheckStatement`, signature: `ValidatorSignature`): `Null`[\u200b](#submitpvfcheckstatementstmt-pvfcheckstatement-signature-validatorsignature-null \"Direct link to submitpvfcheckstatementstmt-pvfcheckstatement-signature-validatorsignature-null\")\n\n*   **interface**: `api.call.parachainHost.submitPvfCheckStatement`\n*   **runtime**: `ParachainHost_submit_pvf_check_statement`\n*   **summary**: Submits a PVF pre-checking statement into the transaction pool.\n\n### submitReportDisputeLost(disputeProof: `DisputeProof`, keyOwnershipProof: `OpaqueKeyOwnershipProof`): `Option<Null>`[\u200b](#submitreportdisputelostdisputeproof-disputeproof-keyownershipproof-opaquekeyownershipproof-optionnull \"Direct link to submitreportdisputelostdisputeproof-disputeproof-keyownershipproof-opaquekeyownershipproof-optionnull\")\n\n*   **interface**: `api.call.parachainHost.submitReportDisputeLost`\n*   **runtime**: `ParachainHost_submit_report_dispute_lost`\n*   **summary**: Submit an unsigned extrinsic to slash validators who lost a dispute about a candidate of a past session\n\n### unappliedSlashes(): `Vec<(SessionIndex, CandidateHash, PendingSlashes)>`[\u200b](#unappliedslashes-vecsessionindex-candidatehash-pendingslashes \"Direct link to unappliedslashes-vecsessionindex-candidatehash-pendingslashes\")\n\n*   **interface**: `api.call.parachainHost.unappliedSlashes`\n*   **runtime**: `ParachainHost_unapplied_slashes`\n*   **summary**: Returns a list of validators that lost a past session dispute and need to be slashed\n\n### validationCode(paraId: `ParaId`, assumption: `OccupiedCoreAssumption`): `ValidationCode`[\u200b](#validationcodeparaid-paraid-assumption-occupiedcoreassumption-validationcode \"Direct link to validationcodeparaid-paraid-assumption-occupiedcoreassumption-validationcode\")\n\n*   **interface**: `api.call.parachainHost.validationCode`\n*   **runtime**: `ParachainHost_validation_code`\n*   **summary**: Fetch the validation code used by a para, making the given `OccupiedCoreAssumption`.\n\n### validationCodeByHash(hash: `ValidationCodeHash`): `Option<ValidationCode>`[\u200b](#validationcodebyhashhash-validationcodehash-optionvalidationcode \"Direct link to validationcodebyhashhash-validationcodehash-optionvalidationcode\")\n\n*   **interface**: `api.call.parachainHost.validationCodeByHash`\n*   **runtime**: `ParachainHost_validation_code_by_hash`\n*   **summary**: Get the validation code from its hash.\n\n### validationCodeHash(paraId: `ParaId`, assumption: `OccupiedCoreAssumption`): `Option<ValidationCodeHash>`[\u200b](#validationcodehashparaid-paraid-assumption-occupiedcoreassumption-optionvalidationcodehash \"Direct link to validationcodehashparaid-paraid-assumption-occupiedcoreassumption-optionvalidationcodehash\")\n\n*   **interface**: `api.call.parachainHost.validationCodeHash`\n*   **runtime**: `ParachainHost_validation_code_hash`\n*   **summary**: Fetch the hash of the validation code used by a para, making the given `OccupiedCoreAssumption`.\n\n### validatorGroups(): `(Vec<Vec<ParaValidatorIndex>>, GroupRotationInfo)`[\u200b](#validatorgroups-vecvecparavalidatorindex-grouprotationinfo \"Direct link to validatorgroups-vecvecparavalidatorindex-grouprotationinfo\")\n\n*   **interface**: `api.call.parachainHost.validatorGroups`\n*   **runtime**: `ParachainHost_validator_groups`\n*   **summary**: Returns the validator groups and rotation info localized based on the hypothetical child of a block whose state this is invoked on\n\n### validators(): `Vec<ValidatorId>`[\u200b](#validators-vecvalidatorid \"Direct link to validators-vecvalidatorid\")\n\n*   **interface**: `api.call.parachainHost.validators`\n*   **runtime**: `ParachainHost_validators`\n*   **summary**: Get the current validators.\n\n* * *\n\nSessionKeys[\u200b](#sessionkeys \"Direct link to SessionKeys\")\n\n----------------------------------------------------------\n\n### decodeSessionKeys(encoded: `Bytes`): `Option<Vec<(Bytes, KeyTypeId)>>`[\u200b](#decodesessionkeysencoded-bytes-optionvecbytes-keytypeid \"Direct link to decodesessionkeysencoded-bytes-optionvecbytes-keytypeid\")\n\n*   **interface**: `api.call.sessionKeys.decodeSessionKeys`\n*   **runtime**: `SessionKeys_decode_session_keys`\n*   **summary**: Decode the given public session keys.\n\n### generateSessionKeys(seed: `Option<Bytes>`): `Bytes`[\u200b](#generatesessionkeysseed-optionbytes-bytes \"Direct link to generatesessionkeysseed-optionbytes-bytes\")\n\n*   **interface**: `api.call.sessionKeys.generateSessionKeys`\n*   **runtime**: `SessionKeys_generate_session_keys`\n*   **summary**: Generate a set of session keys with optionally using the given seed.\n\n* * *\n\nStakingApi[\u200b](#stakingapi \"Direct link to StakingApi\")\n\n-------------------------------------------------------\n\n### nominationsQuota(balance: `Balance`): `u32`[\u200b](#nominationsquotabalance-balance-u32 \"Direct link to nominationsquotabalance-balance-u32\")\n\n*   **interface**: `api.call.stakingApi.nominationsQuota`\n*   **runtime**: `StakingApi_nominations_quota`\n*   **summary**: Returns the nominations quota for a nominator with a given balance.\n\n* * *\n\nTaggedTransactionQueue[\u200b](#taggedtransactionqueue \"Direct link to TaggedTransactionQueue\")\n\n-------------------------------------------------------------------------------------------\n\n### validateTransaction(source: `TransactionSource`, tx: `Extrinsic`, blockHash: `BlockHash`): `TransactionValidity`[\u200b](#validatetransactionsource-transactionsource-tx-extrinsic-blockhash-blockhash-transactionvalidity \"Direct link to validatetransactionsource-transactionsource-tx-extrinsic-blockhash-blockhash-transactionvalidity\")\n\n*   **interface**: `api.call.taggedTransactionQueue.validateTransaction`\n*   **runtime**: `TaggedTransactionQueue_validate_transaction`\n*   **summary**: Validate the transaction.\n\n* * *\n\nTransactionPaymentApi[\u200b](#transactionpaymentapi \"Direct link to TransactionPaymentApi\")\n\n----------------------------------------------------------------------------------------\n\n### queryFeeDetails(uxt: `Extrinsic`, len: `u32`): `FeeDetails`[\u200b](#queryfeedetailsuxt-extrinsic-len-u32-feedetails \"Direct link to queryfeedetailsuxt-extrinsic-len-u32-feedetails\")\n\n*   **interface**: `api.call.transactionPaymentApi.queryFeeDetails`\n*   **runtime**: `TransactionPaymentApi_query_fee_details`\n*   **summary**: The transaction fee details\n\n### queryInfo(uxt: `Extrinsic`, len: `u32`): `RuntimeDispatchInfo`[\u200b](#queryinfouxt-extrinsic-len-u32-runtimedispatchinfo \"Direct link to queryinfouxt-extrinsic-len-u32-runtimedispatchinfo\")\n\n*   **interface**: `api.call.transactionPaymentApi.queryInfo`\n*   **runtime**: `TransactionPaymentApi_query_info`\n*   **summary**: The transaction info\n\n### queryLengthToFee(length: `u32`): `Balance`[\u200b](#querylengthtofeelength-u32-balance \"Direct link to querylengthtofeelength-u32-balance\")\n\n*   **interface**: `api.call.transactionPaymentApi.queryLengthToFee`\n*   **runtime**: `TransactionPaymentApi_query_length_to_fee`\n*   **summary**: Query the output of the current LengthToFee given some input\n\n### queryWeightToFee(weight: `Weight`): `Balance`[\u200b](#queryweighttofeeweight-weight-balance \"Direct link to queryweighttofeeweight-weight-balance\")\n\n*   **interface**: `api.call.transactionPaymentApi.queryWeightToFee`\n*   **runtime**: `TransactionPaymentApi_query_weight_to_fee`\n*   **summary**: Query the output of the current WeightToFee given some input\n\n* * *\n\nTransactionPaymentCallApi[\u200b](#transactionpaymentcallapi \"Direct link to TransactionPaymentCallApi\")\n\n----------------------------------------------------------------------------------------------------\n\n### queryCallFeeDetails(call: `Call`, len: `u32`): `FeeDetails`[\u200b](#querycallfeedetailscall-call-len-u32-feedetails \"Direct link to querycallfeedetailscall-call-len-u32-feedetails\")\n\n*   **interface**: `api.call.transactionPaymentCallApi.queryCallFeeDetails`\n*   **runtime**: `TransactionPaymentCallApi_query_call_fee_details`\n*   **summary**: The call fee details\n\n### queryCallInfo(call: `Call`, len: `u32`): `RuntimeDispatchInfo`[\u200b](#querycallinfocall-call-len-u32-runtimedispatchinfo \"Direct link to querycallinfocall-call-len-u32-runtimedispatchinfo\")\n\n*   **interface**: `api.call.transactionPaymentCallApi.queryCallInfo`\n*   **runtime**: `TransactionPaymentCallApi_query_call_info`\n*   **summary**: The call info\n\n### queryLengthToFee(length: `u32`): `Balance`[\u200b](#querylengthtofeelength-u32-balance-1 \"Direct link to querylengthtofeelength-u32-balance-1\")\n\n*   **interface**: `api.call.transactionPaymentCallApi.queryLengthToFee`\n*   **runtime**: `TransactionPaymentCallApi_query_length_to_fee`\n*   **summary**: Query the output of the current LengthToFee given some input\n\n### queryWeightToFee(weight: `Weight`): `Balance`[\u200b](#queryweighttofeeweight-weight-balance-1 \"Direct link to queryweighttofeeweight-weight-balance-1\")\n\n*   **interface**: `api.call.transactionPaymentCallApi.queryWeightToFee`\n*   **runtime**: `TransactionPaymentCallApi_query_weight_to_fee`\n*   **summary**: Query the output of the current WeightToFee given some input\n\n[Edit this page](https://github.com/polkadot-js/docs/edit/master/docs/kusama/runtime.md)\n\n[Previous\\\n\\\nOverview](/docs/kusama)\n[Next\\\n\\\nJSON-RPC](/docs/kusama/rpc)\n\n*   [AccountNonceApi](#accountnonceapi)\n    *   [accountNonce(accountId: `AccountId`): `Index`](#accountnonceaccountid-accountid-index)\n        \n*   [AuthorityDiscoveryApi](#authoritydiscoveryapi)\n    *   [authorities(): `Vec<AuthorityId>`](#authorities-vecauthorityid)\n        \n*   [BabeApi](#babeapi)\n    *   [configuration(): `BabeGenesisConfiguration`](#configuration-babegenesisconfiguration)\n        \n    *   [currentEpoch(): `Epoch`](#currentepoch-epoch)\n        \n    *   [currentEpochStart(): `Slot`](#currentepochstart-slot)\n        \n    *   [generateKeyOwnershipProof(slot: `Slot`, authorityId: `AuthorityId`): `Option<OpaqueKeyOwnershipProof>`](#generatekeyownershipproofslot-slot-authorityid-authorityid-optionopaquekeyownershipproof)\n        \n    *   [nextEpoch(): `Epoch`](#nextepoch-epoch)\n        \n    *   [submitReportEquivocationUnsignedExtrinsic(equivocationProof: `BabeEquivocationProof`, keyOwnerProof: `OpaqueKeyOwnershipProof`): `Option<Null>`](#submitreportequivocationunsignedextrinsicequivocationproof-babeequivocationproof-keyownerproof-opaquekeyownershipproof-optionnull)\n        \n*   [BeefyApi](#beefyapi)\n    *   [beefyGenesis(): `Option<BlockNumber>`](#beefygenesis-optionblocknumber)\n        \n    *   [generateKeyOwnershipProof(setId: `ValidatorSetId`, authorityId: `AuthorityId`): `Option<OpaqueKeyOwnershipProof>`](#generatekeyownershipproofsetid-validatorsetid-authorityid-authorityid-optionopaquekeyownershipproof)\n        \n    *   [submitReportEquivocationUnsignedExtrinsic(equivocationProof: `BeefyEquivocationProof`, keyOwnerProof: `OpaqueKeyOwnershipProof`): `Option<Null>`](#submitreportequivocationunsignedextrinsicequivocationproof-beefyequivocationproof-keyownerproof-opaquekeyownershipproof-optionnull)\n        \n    *   [validatorSet(): `Option<ValidatorSet>`](#validatorset-optionvalidatorset)\n        \n*   [BeefyMmrApi](#beefymmrapi)\n    *   [authoritySetProof(): `BeefyAuthoritySet`](#authoritysetproof-beefyauthorityset)\n        \n    *   [nextAuthoritySetProof(): `BeefyNextAuthoritySet`](#nextauthoritysetproof-beefynextauthorityset)\n        \n*   [BlockBuilder](#blockbuilder)\n    *   [applyExtrinsic(extrinsic: `Extrinsic`): `ApplyExtrinsicResult`](#applyextrinsicextrinsic-extrinsic-applyextrinsicresult)\n        \n    *   [checkInherents(block: `Block`, data: `InherentData`): `CheckInherentsResult`](#checkinherentsblock-block-data-inherentdata-checkinherentsresult)\n        \n    *   [finalizeBlock(): `Header`](#finalizeblock-header)\n        \n    *   [inherentExtrinsics(inherent: `InherentData`): `Vec<Extrinsic>`](#inherentextrinsicsinherent-inherentdata-vecextrinsic)\n        \n*   [Core](#core)\n    *   [executeBlock(block: `Block`): `Null`](#executeblockblock-block-null)\n        \n    *   [initializeBlock(header: `Header`): `Null`](#initializeblockheader-header-null)\n        \n    *   [version(): `RuntimeVersion`](#version-runtimeversion)\n        \n*   [GrandpaApi](#grandpaapi)\n    *   [currentSetId(): `SetId`](#currentsetid-setid)\n        \n    *   [generateKeyOwnershipProof(setId: `SetId`, authorityId: `AuthorityId`): `Option<OpaqueKeyOwnershipProof>`](#generatekeyownershipproofsetid-setid-authorityid-authorityid-optionopaquekeyownershipproof)\n        \n    *   [grandpaAuthorities(): `AuthorityList`](#grandpaauthorities-authoritylist)\n        \n    *   [submitReportEquivocationUnsignedExtrinsic(equivocationProof: `GrandpaEquivocationProof`, keyOwnerProof: `OpaqueKeyOwnershipProof`): `Option<Null>`](#submitreportequivocationunsignedextrinsicequivocationproof-grandpaequivocationproof-keyownerproof-opaquekeyownershipproof-optionnull)\n        \n*   [Metadata](#metadata)\n    *   [metadata(): `OpaqueMetadata`](#metadata-opaquemetadata)\n        \n    *   [metadataAtVersion(version: `u32`): `Option<OpaqueMetadata>`](#metadataatversionversion-u32-optionopaquemetadata)\n        \n    *   [metadataVersions(): `Vec<u32>`](#metadataversions-vecu32)\n        \n*   [MmrApi](#mmrapi)\n    *   [generateProof(blockNumbers: `Vec<BlockNumber>`, bestKnownBlockNumber: `Option<BlockNumber>`): `Result<(Vec<MmrEncodableOpaqueLeaf>, MmrBatchProof), MmrError>`](#generateproofblocknumbers-vecblocknumber-bestknownblocknumber-optionblocknumber-resultvecmmrencodableopaqueleaf-mmrbatchproof-mmrerror)\n        \n    *   [root(): `Result<Hash, MmrError>`](#root-resulthash-mmrerror)\n        \n    *   [verifyProof(leaves: `Vec<MmrEncodableOpaqueLeaf>`, proof: `MmrBatchProof`): `Result<(), MmrError>`](#verifyproofleaves-vecmmrencodableopaqueleaf-proof-mmrbatchproof-result-mmrerror)\n        \n    *   [verifyProofStateless(root: `Hash`, leaves: `Vec<MmrEncodableOpaqueLeaf>`, proof: `MmrBatchProof`): `Result<(), MmrError>`](#verifyproofstatelessroot-hash-leaves-vecmmrencodableopaqueleaf-proof-mmrbatchproof-result-mmrerror)\n        \n*   [NominationPoolsApi](#nominationpoolsapi)\n    *   [balanceToPoints(poolId: `NpPoolId`, newFunds: `Balance`): `Balance`](#balancetopointspoolid-nppoolid-newfunds-balance-balance)\n        \n    *   [pendingRewards(member: `AccountId`): `Balance`](#pendingrewardsmember-accountid-balance)\n        \n    *   [pointsToBalance(poolId: `NpPoolId`, points: `Balance`): `Balance`](#pointstobalancepoolid-nppoolid-points-balance-balance)\n        \n*   [OffchainWorkerApi](#offchainworkerapi)\n    *   [offchainWorker(header: `Header`): `Null`](#offchainworkerheader-header-null)\n        \n*   [ParachainHost](#parachainhost)\n    *   [assumedValidationData(paraId: `ParaId`, hash: `Hash`): `Option<(PersistedValidationData, ValidationCodeHash)>`](#assumedvalidationdataparaid-paraid-hash-hash-optionpersistedvalidationdata-validationcodehash)\n        \n    *   [availabilityCores(): `Vec<CoreState>`](#availabilitycores-veccorestate)\n        \n    *   [candidateEvents(): `Vec<CandidateEvent>`](#candidateevents-veccandidateevent)\n        \n    *   [candidatePendingAvailability(paraId: `ParaId`): `Option<CommittedCandidateReceipt>`](#candidatependingavailabilityparaid-paraid-optioncommittedcandidatereceipt)\n        \n    *   [checkValidationOutputs(paraId: `ParaId`, outputs: `CandidateCommitments`): `bool`](#checkvalidationoutputsparaid-paraid-outputs-candidatecommitments-bool)\n        \n    *   [disputes(): `Vec<(SessionIndex, CandidateHash, DisputeState)>`](#disputes-vecsessionindex-candidatehash-disputestate)\n        \n    *   [dmqContents(paraId: `ParaId`): `Vec<InboundDownwardMessage>`](#dmqcontentsparaid-paraid-vecinbounddownwardmessage)\n        \n    *   [inboundHrmpChannelsContents(paraId: `ParaId`): `Vec<InboundHrmpMessage>`](#inboundhrmpchannelscontentsparaid-paraid-vecinboundhrmpmessage)\n        \n    *   [keyOwnershipProof(validatorId: `ValidatorId`): `Option<OpaqueKeyOwnershipProof>`](#keyownershipproofvalidatorid-validatorid-optionopaquekeyownershipproof)\n        \n    *   [onChainVotes(): `Option<ScrapedOnChainVotes>`](#onchainvotes-optionscrapedonchainvotes)\n        \n    *   [persistedValidationData(paraId: `ParaId`, assumption: `OccupiedCoreAssumption`): `Option<PersistedValidationData>`](#persistedvalidationdataparaid-paraid-assumption-occupiedcoreassumption-optionpersistedvalidationdata)\n        \n    *   [pvfsRequirePrecheck(): `Vec<ValidationCodeHash>`](#pvfsrequireprecheck-vecvalidationcodehash)\n        \n    *   [sessionExecutorParams(sessionIndex: `SessionIndex`): `Option<ExecutorParams>`](#sessionexecutorparamssessionindex-sessionindex-optionexecutorparams)\n        \n    *   [sessionIndexForChild(): `SessionIndex`](#sessionindexforchild-sessionindex)\n        \n    *   [sessionInfo(index: `SessionIndex`): `Option<SessionInfo>`](#sessioninfoindex-sessionindex-optionsessioninfo)\n        \n    *   [submitPvfCheckStatement(stmt: `PvfCheckStatement`, signature: `ValidatorSignature`): `Null`](#submitpvfcheckstatementstmt-pvfcheckstatement-signature-validatorsignature-null)\n        \n    *   [submitReportDisputeLost(disputeProof: `DisputeProof`, keyOwnershipProof: `OpaqueKeyOwnershipProof`): `Option<Null>`](#submitreportdisputelostdisputeproof-disputeproof-keyownershipproof-opaquekeyownershipproof-optionnull)\n        \n    *   [unappliedSlashes(): `Vec<(SessionIndex, CandidateHash, PendingSlashes)>`](#unappliedslashes-vecsessionindex-candidatehash-pendingslashes)\n        \n    *   [validationCode(paraId: `ParaId`, assumption: `OccupiedCoreAssumption`): `ValidationCode`](#validationcodeparaid-paraid-assumption-occupiedcoreassumption-validationcode)\n        \n    *   [validationCodeByHash(hash: `ValidationCodeHash`): `Option<ValidationCode>`](#validationcodebyhashhash-validationcodehash-optionvalidationcode)\n        \n    *   [validationCodeHash(paraId: `ParaId`, assumption: `OccupiedCoreAssumption`): `Option<ValidationCodeHash>`](#validationcodehashparaid-paraid-assumption-occupiedcoreassumption-optionvalidationcodehash)\n        \n    *   [validatorGroups(): `(Vec<Vec<ParaValidatorIndex>>, GroupRotationInfo)`](#validatorgroups-vecvecparavalidatorindex-grouprotationinfo)\n        \n    *   [validators(): `Vec<ValidatorId>`](#validators-vecvalidatorid)\n        \n*   [SessionKeys](#sessionkeys)\n    *   [decodeSessionKeys(encoded: `Bytes`): `Option<Vec<(Bytes, KeyTypeId)>>`](#decodesessionkeysencoded-bytes-optionvecbytes-keytypeid)\n        \n    *   [generateSessionKeys(seed: `Option<Bytes>`): `Bytes`](#generatesessionkeysseed-optionbytes-bytes)\n        \n*   [StakingApi](#stakingapi)\n    *   [nominationsQuota(balance: `Balance`): `u32`](#nominationsquotabalance-balance-u32)\n        \n*   [TaggedTransactionQueue](#taggedtransactionqueue)\n    *   [validateTransaction(source: `TransactionSource`, tx: `Extrinsic`, blockHash: `BlockHash`): `TransactionValidity`](#validatetransactionsource-transactionsource-tx-extrinsic-blockhash-blockhash-transactionvalidity)\n        \n*   [TransactionPaymentApi](#transactionpaymentapi)\n    *   [queryFeeDetails(uxt: `Extrinsic`, len: `u32`): `FeeDetails`](#queryfeedetailsuxt-extrinsic-len-u32-feedetails)\n        \n    *   [queryInfo(uxt: `Extrinsic`, len: `u32`): `RuntimeDispatchInfo`](#queryinfouxt-extrinsic-len-u32-runtimedispatchinfo)\n        \n    *   [queryLengthToFee(length: `u32`): `Balance`](#querylengthtofeelength-u32-balance)\n        \n    *   [queryWeightToFee(weight: `Weight`): `Balance`](#queryweighttofeeweight-weight-balance)\n        \n*   [TransactionPaymentCallApi](#transactionpaymentcallapi)\n    *   [queryCallFeeDetails(call: `Call`, len: `u32`): `FeeDetails`](#querycallfeedetailscall-call-len-u32-feedetails)\n        \n    *   [queryCallInfo(call: `Call`, len: `u32`): `RuntimeDispatchInfo`](#querycallinfocall-call-len-u32-runtimedispatchinfo)\n        \n    *   [queryLengthToFee(length: `u32`): `Balance`](#querylengthtofeelength-u32-balance-1)\n        \n    *   [queryWeightToFee(weight: `Weight`): `Balance`](#queryweighttofeeweight-weight-balance-1)"}, {"title": null, "description": null, "source_url": "https://polkadot.js.org/docs/kusama/storage", "markdown": "[Skip to main content](#__docusaurus_skipToContent_fallback)\n\n[![polkadot{.js}](https://polkadot.js.org/docs/img/logo.svg)\\\n\\\n**polkadot{.js}**](/docs/)\n\n[Apps UI (Wallet)](https://polkadot.js.org/apps/)\n[GitHub](https://github.com/polkadot-js/docs)\n\nSearch...\n\n*   [Introduction](#)\n    \n*   [API](#)\n    \n*   [Metadata](#)\n    \n    *   [Substrate](#)\n        \n    *   [Polkadot](#)\n        \n    *   [Kusama](#)\n        \n        *   [Overview](/docs/kusama)\n            \n        *   [Runtime](/docs/kusama/runtime)\n            \n        *   [JSON-RPC](/docs/kusama/rpc)\n            \n        *   [Constants](/docs/kusama/constants)\n            \n        *   [Storage](/docs/kusama/storage)\n            \n        *   [Extrinsics](/docs/kusama/extrinsics)\n            \n        *   [Events](/docs/kusama/events)\n            \n        *   [Errors](/docs/kusama/errors)\n            \n*   [Keyring](#)\n    \n*   [Crypto Utilities](#)\n    \n*   [Contracts (API)](#)\n    \n*   [Identicon (UI)](#)\n    \n*   [Keyring (UI)](#)\n    \n*   [Extension](#)\n    \n*   [Run, Bundle, Test](#)\n    \n\n*   [](/docs/)\n    \n*   Metadata\n*   Kusama\n*   Storage\n\nOn this page\n\nStorage\n=======\n\nThe following sections contain Storage methods are part of the default Kusama runtime. On the api, these are exposed via `api.query.<module>.<method>`.\n\n(NOTE: These were generated from a static/snapshot view of a recent default Kusama runtime. Some items may not be available in older nodes, or in any customized implementations.)\n\n*   **[auctions](#auctions)\n    **\n    \n*   **[authorship](#authorship)\n    **\n    \n*   **[babe](#babe)\n    **\n    \n*   **[balances](#balances)\n    **\n    \n*   **[beefy](#beefy)\n    **\n    \n*   **[beefyMmrLeaf](#beefymmrleaf)\n    **\n    \n*   **[bounties](#bounties)\n    **\n    \n*   **[childBounties](#childbounties)\n    **\n    \n*   **[claims](#claims)\n    **\n    \n*   **[configuration](#configuration)\n    **\n    \n*   **[convictionVoting](#convictionvoting)\n    **\n    \n*   **[crowdloan](#crowdloan)\n    **\n    \n*   **[dmp](#dmp)\n    **\n    \n*   **[electionProviderMultiPhase](#electionprovidermultiphase)\n    **\n    \n*   **[fastUnstake](#fastunstake)\n    **\n    \n*   **[fellowshipCollective](#fellowshipcollective)\n    **\n    \n*   **[fellowshipReferenda](#fellowshipreferenda)\n    **\n    \n*   **[grandpa](#grandpa)\n    **\n    \n*   **[hrmp](#hrmp)\n    **\n    \n*   **[identity](#identity)\n    **\n    \n*   **[imOnline](#imonline)\n    **\n    \n*   **[indices](#indices)\n    **\n    \n*   **[initializer](#initializer)\n    **\n    \n*   **[messageQueue](#messagequeue)\n    **\n    \n*   **[mmr](#mmr)\n    **\n    \n*   **[multisig](#multisig)\n    **\n    \n*   **[nis](#nis)\n    **\n    \n*   **[nisCounterpartBalances](#niscounterpartbalances)\n    **\n    \n*   **[nominationPools](#nominationpools)\n    **\n    \n*   **[offences](#offences)\n    **\n    \n*   **[paraAssignmentProvider](#paraassignmentprovider)\n    **\n    \n*   **[paraInclusion](#parainclusion)\n    **\n    \n*   **[paraInherent](#parainherent)\n    **\n    \n*   **[paras](#paras)\n    **\n    \n*   **[paraScheduler](#parascheduler)\n    **\n    \n*   **[parasDisputes](#parasdisputes)\n    **\n    \n*   **[paraSessionInfo](#parasessioninfo)\n    **\n    \n*   **[parasShared](#parasshared)\n    **\n    \n*   **[parasSlashing](#parasslashing)\n    **\n    \n*   **[preimage](#preimage)\n    **\n    \n*   **[proxy](#proxy)\n    **\n    \n*   **[recovery](#recovery)\n    **\n    \n*   **[referenda](#referenda)\n    **\n    \n*   **[registrar](#registrar)\n    **\n    \n*   **[scheduler](#scheduler)\n    **\n    \n*   **[session](#session)\n    **\n    \n*   **[slots](#slots)\n    **\n    \n*   **[society](#society)\n    **\n    \n*   **[staking](#staking)\n    **\n    \n*   **[stateTrieMigration](#statetriemigration)\n    **\n    \n*   **[substrate](#substrate)\n    **\n    \n*   **[system](#system)\n    **\n    \n*   **[timestamp](#timestamp)\n    **\n    \n*   **[transactionPayment](#transactionpayment)\n    **\n    \n*   **[treasury](#treasury)\n    **\n    \n*   **[vesting](#vesting)\n    **\n    \n*   **[voterList](#voterlist)\n    **\n    \n*   **[whitelist](#whitelist)\n    **\n    \n*   **[xcmPallet](#xcmpallet)\n    **\n    \n\n* * *\n\nauctions[\u200b](#auctions \"Direct link to auctions\")\n\n-------------------------------------------------\n\n### auctionCounter(): `u32`[\u200b](#auctioncounter-u32 \"Direct link to auctioncounter-u32\")\n\n*   **interface**: `api.query.auctions.auctionCounter`\n*   **summary**: Number of auctions started so far.\n\n### auctionInfo(): `Option<(u32,u32)>`[\u200b](#auctioninfo-optionu32u32 \"Direct link to auctioninfo-optionu32u32\")\n\n*   **interface**: `api.query.auctions.auctionInfo`\n    \n*   **summary**: Information relating to the current auction, if there is one.\n    \n    The first item in the tuple is the lease period index that the first of the four contiguous lease periods on auction is for. The second is the block number when the auction will \"begin to end\", i.e. the first block of the Ending Period of the auction.\n    \n\n### reservedAmounts(`(AccountId32,u32)`): `Option<u128>`[\u200b](#reservedamountsaccountid32u32-optionu128 \"Direct link to reservedamountsaccountid32u32-optionu128\")\n\n*   **interface**: `api.query.auctions.reservedAmounts`\n*   **summary**: Amounts currently reserved in the accounts of the bidders currently winning (sub-)ranges.\n\n### winning(`u32`): `Option<[Option<(AccountId32,u32,u128)>;36]>`[\u200b](#winningu32-optionoptionaccountid32u32u12836 \"Direct link to winningu32-optionoptionaccountid32u32u12836\")\n\n*   **interface**: `api.query.auctions.winning`\n*   **summary**: The winning bids for each of the 10 ranges at each sample in the final Ending Period of the current auction. The map's key is the 0-based index into the Sample Size. The first sample of the ending period is 0; the last is `Sample Size - 1`.\n\n* * *\n\nauthorship[\u200b](#authorship \"Direct link to authorship\")\n\n-------------------------------------------------------\n\n### author(): `Option<AccountId32>`[\u200b](#author-optionaccountid32 \"Direct link to author-optionaccountid32\")\n\n*   **interface**: `api.query.authorship.author`\n*   **summary**: Author of current block.\n\n* * *\n\nbabe[\u200b](#babe \"Direct link to babe\")\n\n-------------------------------------\n\n### authorities(): `Vec<(SpConsensusBabeAppPublic,u64)>`[\u200b](#authorities-vecspconsensusbabeapppublicu64 \"Direct link to authorities-vecspconsensusbabeapppublicu64\")\n\n*   **interface**: `api.query.babe.authorities`\n*   **summary**: Current epoch authorities.\n\n### authorVrfRandomness(): `Option<[u8;32]>`[\u200b](#authorvrfrandomness-optionu832 \"Direct link to authorvrfrandomness-optionu832\")\n\n*   **interface**: `api.query.babe.authorVrfRandomness`\n    \n*   **summary**: This field should always be populated during block processing unless secondary plain slots are enabled (which don't contain a VRF output).\n    \n    It is set in `on_finalize`, before it will contain the value from the last block.\n    \n\n### currentSlot(): `u64`[\u200b](#currentslot-u64 \"Direct link to currentslot-u64\")\n\n*   **interface**: `api.query.babe.currentSlot`\n*   **summary**: Current slot number.\n\n### epochConfig(): `Option<SpConsensusBabeBabeEpochConfiguration>`[\u200b](#epochconfig-optionspconsensusbabebabeepochconfiguration \"Direct link to epochconfig-optionspconsensusbabebabeepochconfiguration\")\n\n*   **interface**: `api.query.babe.epochConfig`\n*   **summary**: The configuration for the current epoch. Should never be `None` as it is initialized in genesis.\n\n### epochIndex(): `u64`[\u200b](#epochindex-u64 \"Direct link to epochindex-u64\")\n\n*   **interface**: `api.query.babe.epochIndex`\n*   **summary**: Current epoch index.\n\n### epochStart(): `(u32,u32)`[\u200b](#epochstart-u32u32 \"Direct link to epochstart-u32u32\")\n\n*   **interface**: `api.query.babe.epochStart`\n*   **summary**: The block numbers when the last and current epoch have started, respectively `N-1` and `N`. NOTE: We track this is in order to annotate the block number when a given pool of entropy was fixed (i.e. it was known to chain observers). Since epochs are defined in slots, which may be skipped, the block numbers may not line up with the slot numbers.\n\n### genesisSlot(): `u64`[\u200b](#genesisslot-u64 \"Direct link to genesisslot-u64\")\n\n*   **interface**: `api.query.babe.genesisSlot`\n*   **summary**: The slot at which the first epoch actually started. This is 0 until the first block of the chain.\n\n### initialized(): `Option<Option<SpConsensusBabeDigestsPreDigest>>`[\u200b](#initialized-optionoptionspconsensusbabedigestspredigest \"Direct link to initialized-optionoptionspconsensusbabedigestspredigest\")\n\n*   **interface**: `api.query.babe.initialized`\n*   **summary**: Temporary value (cleared at block finalization) which is `Some` if per-block initialization has already been called for current block.\n\n### lateness(): `u32`[\u200b](#lateness-u32 \"Direct link to lateness-u32\")\n\n*   **interface**: `api.query.babe.lateness`\n    \n*   **summary**: How late the current block is compared to its parent.\n    \n    This entry is populated as part of block execution and is cleaned up on block finalization. Querying this storage entry outside of block execution context should always yield zero.\n    \n\n### nextAuthorities(): `Vec<(SpConsensusBabeAppPublic,u64)>`[\u200b](#nextauthorities-vecspconsensusbabeapppublicu64 \"Direct link to nextauthorities-vecspconsensusbabeapppublicu64\")\n\n*   **interface**: `api.query.babe.nextAuthorities`\n*   **summary**: Next epoch authorities.\n\n### nextEpochConfig(): `Option<SpConsensusBabeBabeEpochConfiguration>`[\u200b](#nextepochconfig-optionspconsensusbabebabeepochconfiguration \"Direct link to nextepochconfig-optionspconsensusbabebabeepochconfiguration\")\n\n*   **interface**: `api.query.babe.nextEpochConfig`\n*   **summary**: The configuration for the next epoch, `None` if the config will not change (you can fallback to `EpochConfig` instead in that case).\n\n### nextRandomness(): `[u8;32]`[\u200b](#nextrandomness-u832 \"Direct link to nextrandomness-u832\")\n\n*   **interface**: `api.query.babe.nextRandomness`\n*   **summary**: Next epoch randomness.\n\n### pendingEpochConfigChange(): `Option<SpConsensusBabeDigestsNextConfigDescriptor>`[\u200b](#pendingepochconfigchange-optionspconsensusbabedigestsnextconfigdescriptor \"Direct link to pendingepochconfigchange-optionspconsensusbabedigestsnextconfigdescriptor\")\n\n*   **interface**: `api.query.babe.pendingEpochConfigChange`\n*   **summary**: Pending epoch configuration change that will be applied when the next epoch is enacted.\n\n### randomness(): `[u8;32]`[\u200b](#randomness-u832 \"Direct link to randomness-u832\")\n\n*   **interface**: `api.query.babe.randomness`\n    \n*   **summary**: The epoch randomness for the _current_ epoch.\n    \n    #### Security[\u200b](#security \"Direct link to Security\")\n    \n    This MUST NOT be used for gambling, as it can be influenced by a malicious validator in the short term. It MAY be used in many cryptographic protocols, however, so long as one remembers that this (like everything else on-chain) it is public. For example, it can be used where a number is needed that cannot have been chosen by an adversary, for purposes such as public-coin zero-knowledge proofs.\n    \n\n### segmentIndex(): `u32`[\u200b](#segmentindex-u32 \"Direct link to segmentindex-u32\")\n\n*   **interface**: `api.query.babe.segmentIndex`\n    \n*   **summary**: Randomness under construction.\n    \n    We make a trade-off between storage accesses and list length. We store the under-construction randomness in segments of up to `UNDER_CONSTRUCTION_SEGMENT_LENGTH`.\n    \n    Once a segment reaches this length, we begin the next one. We reset all segments and return to `0` at the beginning of every epoch.\n    \n\n### skippedEpochs(): `Vec<(u64,u32)>`[\u200b](#skippedepochs-vecu64u32 \"Direct link to skippedepochs-vecu64u32\")\n\n*   **interface**: `api.query.babe.skippedEpochs`\n    \n*   **summary**: A list of the last 100 skipped epochs and the corresponding session index when the epoch was skipped.\n    \n    This is only used for validating equivocation proofs. An equivocation proof must contains a key-ownership proof for a given session, therefore we need a way to tie together sessions and epoch indices, i.e. we need to validate that a validator was the owner of a given key on a given session, and what the active epoch index was during that session.\n    \n\n### underConstruction(`u32`): `Vec<[u8;32]>`[\u200b](#underconstructionu32-vecu832 \"Direct link to underconstructionu32-vecu832\")\n\n*   **interface**: `api.query.babe.underConstruction`\n*   **summary**: TWOX-NOTE: `SegmentIndex` is an increasing integer, so this is okay.\n\n* * *\n\nbalances[\u200b](#balances \"Direct link to balances\")\n\n-------------------------------------------------\n\n### account(`AccountId32`): `PalletBalancesAccountData`[\u200b](#accountaccountid32-palletbalancesaccountdata \"Direct link to accountaccountid32-palletbalancesaccountdata\")\n\n*   **interface**: `api.query.balances.account`\n    \n*   **summary**: The Balances pallet example of storing the balance of an account.\n    \n    #### Example[\u200b](#example \"Direct link to Example\")\n    \n    `nocompile impl pallet_balances::Config for Runtime { type AccountStore = StorageMapShim<Self::Account<Runtime>, frame_system::Provider<Runtime>, AccountId, Self::AccountData<Balance>> }`\n    \n    You can also store the balance of an account in the `System` pallet.\n    \n    #### Example[\u200b](#example-1 \"Direct link to Example\")\n    \n    `nocompile impl pallet_balances::Config for Runtime { type AccountStore = System }`\n    \n    But this comes with tradeoffs, storing account balances in the system pallet stores `frame_system` data alongside the account data contrary to storing account balances in the `Balances` pallet, which uses a `StorageMap` to store balances data only. NOTE: This is only used in the case that this pallet is used to store balances.\n    \n\n### freezes(`AccountId32`): `Vec<PalletBalancesIdAmount>`[\u200b](#freezesaccountid32-vecpalletbalancesidamount \"Direct link to freezesaccountid32-vecpalletbalancesidamount\")\n\n*   **interface**: `api.query.balances.freezes`\n*   **summary**: Freeze locks on account balances.\n\n### holds(`AccountId32`): `Vec<{\"id\":\"KusamaRuntimeRuntimeHoldReason\",\"amount\":\"u128\"}>`[\u200b](#holdsaccountid32-vecidkusamaruntimeruntimeholdreasonamountu128 \"Direct link to holdsaccountid32-vecidkusamaruntimeruntimeholdreasonamountu128\")\n\n*   **interface**: `api.query.balances.holds`\n*   **summary**: Holds on account balances.\n\n### inactiveIssuance(): `u128`[\u200b](#inactiveissuance-u128 \"Direct link to inactiveissuance-u128\")\n\n*   **interface**: `api.query.balances.inactiveIssuance`\n*   **summary**: The total units of outstanding deactivated balance in the system.\n\n### locks(`AccountId32`): `Vec<PalletBalancesBalanceLock>`[\u200b](#locksaccountid32-vecpalletbalancesbalancelock \"Direct link to locksaccountid32-vecpalletbalancesbalancelock\")\n\n*   **interface**: `api.query.balances.locks`\n*   **summary**: Any liquidity locks on some account balances. NOTE: Should only be accessed when setting, changing and freeing a lock.\n\n### reserves(`AccountId32`): `Vec<PalletBalancesReserveData>`[\u200b](#reservesaccountid32-vecpalletbalancesreservedata \"Direct link to reservesaccountid32-vecpalletbalancesreservedata\")\n\n*   **interface**: `api.query.balances.reserves`\n*   **summary**: Named reserves on some account balances.\n\n### totalIssuance(): `u128`[\u200b](#totalissuance-u128 \"Direct link to totalissuance-u128\")\n\n*   **interface**: `api.query.balances.totalIssuance`\n*   **summary**: The total units issued in the system.\n\n* * *\n\nbeefy[\u200b](#beefy \"Direct link to beefy\")\n\n----------------------------------------\n\n### authorities(): `Vec<SpConsensusBeefyEcdsaCryptoPublic>`[\u200b](#authorities-vecspconsensusbeefyecdsacryptopublic \"Direct link to authorities-vecspconsensusbeefyecdsacryptopublic\")\n\n*   **interface**: `api.query.beefy.authorities`\n*   **summary**: The current authorities set\n\n### genesisBlock(): `Option<u32>`[\u200b](#genesisblock-optionu32 \"Direct link to genesisblock-optionu32\")\n\n*   **interface**: `api.query.beefy.genesisBlock`\n*   **summary**: Block number where BEEFY consensus is enabled/started. By changing this (through governance or sudo), BEEFY consensus is effectively restarted from the new block number.\n\n### nextAuthorities(): `Vec<SpConsensusBeefyEcdsaCryptoPublic>`[\u200b](#nextauthorities-vecspconsensusbeefyecdsacryptopublic \"Direct link to nextauthorities-vecspconsensusbeefyecdsacryptopublic\")\n\n*   **interface**: `api.query.beefy.nextAuthorities`\n*   **summary**: Authorities set scheduled to be used with the next session\n\n### setIdSession(`u64`): `Option<u32>`[\u200b](#setidsessionu64-optionu32 \"Direct link to setidsessionu64-optionu32\")\n\n*   **interface**: `api.query.beefy.setIdSession`\n    \n*   **summary**: A mapping from BEEFY set ID to the index of the _most recent_ session for which its members were responsible.\n    \n    This is only used for validating equivocation proofs. An equivocation proof must contains a key-ownership proof for a given session, therefore we need a way to tie together sessions and BEEFY set ids, i.e. we need to validate that a validator was the owner of a given key on a given session, and what the active set ID was during that session.\n    \n    TWOX-NOTE: `ValidatorSetId` is not under user control.\n    \n\n### validatorSetId(): `u64`[\u200b](#validatorsetid-u64 \"Direct link to validatorsetid-u64\")\n\n*   **interface**: `api.query.beefy.validatorSetId`\n*   **summary**: The current validator set id\n\n* * *\n\nbeefyMmrLeaf[\u200b](#beefymmrleaf \"Direct link to beefyMmrLeaf\")\n\n-------------------------------------------------------------\n\n### beefyAuthorities(): `SpConsensusBeefyMmrBeefyAuthoritySet`[\u200b](#beefyauthorities-spconsensusbeefymmrbeefyauthorityset \"Direct link to beefyauthorities-spconsensusbeefymmrbeefyauthorityset\")\n\n*   **interface**: `api.query.beefyMmrLeaf.beefyAuthorities`\n*   **summary**: Details of current BEEFY authority set.\n\n### beefyNextAuthorities(): `SpConsensusBeefyMmrBeefyAuthoritySet`[\u200b](#beefynextauthorities-spconsensusbeefymmrbeefyauthorityset \"Direct link to beefynextauthorities-spconsensusbeefymmrbeefyauthorityset\")\n\n*   **interface**: `api.query.beefyMmrLeaf.beefyNextAuthorities`\n    \n*   **summary**: Details of next BEEFY authority set.\n    \n    This storage entry is used as cache for calls to `update_beefy_next_authority_set`.\n    \n\n* * *\n\nbounties[\u200b](#bounties \"Direct link to bounties\")\n\n-------------------------------------------------\n\n### bounties(`u32`): `Option<PalletBountiesBounty>`[\u200b](#bountiesu32-optionpalletbountiesbounty \"Direct link to bountiesu32-optionpalletbountiesbounty\")\n\n*   **interface**: `api.query.bounties.bounties`\n*   **summary**: Bounties that have been made.\n\n### bountyApprovals(): `Vec<u32>`[\u200b](#bountyapprovals-vecu32 \"Direct link to bountyapprovals-vecu32\")\n\n*   **interface**: `api.query.bounties.bountyApprovals`\n*   **summary**: Bounty indices that have been approved but not yet funded.\n\n### bountyCount(): `u32`[\u200b](#bountycount-u32 \"Direct link to bountycount-u32\")\n\n*   **interface**: `api.query.bounties.bountyCount`\n*   **summary**: Number of bounty proposals that have been made.\n\n### bountyDescriptions(`u32`): `Option<Bytes>`[\u200b](#bountydescriptionsu32-optionbytes \"Direct link to bountydescriptionsu32-optionbytes\")\n\n*   **interface**: `api.query.bounties.bountyDescriptions`\n*   **summary**: The description of each bounty.\n\n* * *\n\nchildBounties[\u200b](#childbounties \"Direct link to childBounties\")\n\n----------------------------------------------------------------\n\n### childBounties(`u32, u32`): `Option<PalletChildBountiesChildBounty>`[\u200b](#childbountiesu32-u32-optionpalletchildbountieschildbounty \"Direct link to childbountiesu32-u32-optionpalletchildbountieschildbounty\")\n\n*   **interface**: `api.query.childBounties.childBounties`\n*   **summary**: Child bounties that have been added.\n\n### childBountyCount(): `u32`[\u200b](#childbountycount-u32 \"Direct link to childbountycount-u32\")\n\n*   **interface**: `api.query.childBounties.childBountyCount`\n*   **summary**: Number of total child bounties.\n\n### childBountyDescriptions(`u32`): `Option<Bytes>`[\u200b](#childbountydescriptionsu32-optionbytes \"Direct link to childbountydescriptionsu32-optionbytes\")\n\n*   **interface**: `api.query.childBounties.childBountyDescriptions`\n*   **summary**: The description of each child-bounty.\n\n### childrenCuratorFees(`u32`): `u128`[\u200b](#childrencuratorfeesu32-u128 \"Direct link to childrencuratorfeesu32-u128\")\n\n*   **interface**: `api.query.childBounties.childrenCuratorFees`\n*   **summary**: The cumulative child-bounty curator fee for each parent bounty.\n\n### parentChildBounties(`u32`): `u32`[\u200b](#parentchildbountiesu32-u32 \"Direct link to parentchildbountiesu32-u32\")\n\n*   **interface**: `api.query.childBounties.parentChildBounties`\n*   **summary**: Number of child bounties per parent bounty. Map of parent bounty index to number of child bounties.\n\n* * *\n\nclaims[\u200b](#claims \"Direct link to claims\")\n\n-------------------------------------------\n\n### claims(`EthereumAddress`): `Option<u128>`[\u200b](#claimsethereumaddress-optionu128 \"Direct link to claimsethereumaddress-optionu128\")\n\n*   **interface**: `api.query.claims.claims`\n\n### preclaims(`AccountId32`): `Option<EthereumAddress>`[\u200b](#preclaimsaccountid32-optionethereumaddress \"Direct link to preclaimsaccountid32-optionethereumaddress\")\n\n*   **interface**: `api.query.claims.preclaims`\n*   **summary**: Pre-claimed Ethereum accounts, by the Account ID that they are claimed to.\n\n### signing(`EthereumAddress`): `Option<PolkadotRuntimeCommonClaimsStatementKind>`[\u200b](#signingethereumaddress-optionpolkadotruntimecommonclaimsstatementkind \"Direct link to signingethereumaddress-optionpolkadotruntimecommonclaimsstatementkind\")\n\n*   **interface**: `api.query.claims.signing`\n*   **summary**: The statement kind that must be signed, if any.\n\n### total(): `u128`[\u200b](#total-u128 \"Direct link to total-u128\")\n\n*   **interface**: `api.query.claims.total`\n\n### vesting(`EthereumAddress`): `Option<(u128,u128,u32)>`[\u200b](#vestingethereumaddress-optionu128u128u32 \"Direct link to vestingethereumaddress-optionu128u128u32\")\n\n*   **interface**: `api.query.claims.vesting`\n*   **summary**: Vesting schedule for a claim. First balance is the total amount that should be held for vesting. Second balance is how much should be unlocked per block. The block number is when the vesting should start.\n\n* * *\n\nconfiguration[\u200b](#configuration \"Direct link to configuration\")\n\n----------------------------------------------------------------\n\n### activeConfig(): `PolkadotRuntimeParachainsConfigurationHostConfiguration`[\u200b](#activeconfig-polkadotruntimeparachainsconfigurationhostconfiguration \"Direct link to activeconfig-polkadotruntimeparachainsconfigurationhostconfiguration\")\n\n*   **interface**: `api.query.configuration.activeConfig`\n*   **summary**: The active configuration for the current session.\n\n### bypassConsistencyCheck(): `bool`[\u200b](#bypassconsistencycheck-bool \"Direct link to bypassconsistencycheck-bool\")\n\n*   **interface**: `api.query.configuration.bypassConsistencyCheck`\n*   **summary**: If this is set, then the configuration setters will bypass the consistency checks. This is meant to be used only as the last resort.\n\n### pendingConfigs(): `Vec<(u32,PolkadotRuntimeParachainsConfigurationHostConfiguration)>`[\u200b](#pendingconfigs-vecu32polkadotruntimeparachainsconfigurationhostconfiguration \"Direct link to pendingconfigs-vecu32polkadotruntimeparachainsconfigurationhostconfiguration\")\n\n*   **interface**: `api.query.configuration.pendingConfigs`\n    \n*   **summary**: Pending configuration changes.\n    \n    This is a list of configuration changes, each with a session index at which it should be applied.\n    \n    The list is sorted ascending by session index. Also, this list can only contain at most 2 items: for the next session and for the `scheduled_session`.\n    \n\n* * *\n\nconvictionVoting[\u200b](#convictionvoting \"Direct link to convictionVoting\")\n\n-------------------------------------------------------------------------\n\n### classLocksFor(`AccountId32`): `Vec<(u16,u128)>`[\u200b](#classlocksforaccountid32-vecu16u128 \"Direct link to classlocksforaccountid32-vecu16u128\")\n\n*   **interface**: `api.query.convictionVoting.classLocksFor`\n*   **summary**: The voting classes which have a non-zero lock requirement and the lock amounts which they require. The actual amount locked on behalf of this pallet should always be the maximum of this list.\n\n### votingFor(`AccountId32, u16`): `PalletConvictionVotingVoteVoting`[\u200b](#votingforaccountid32-u16-palletconvictionvotingvotevoting \"Direct link to votingforaccountid32-u16-palletconvictionvotingvotevoting\")\n\n*   **interface**: `api.query.convictionVoting.votingFor`\n*   **summary**: All voting for a particular voter in a particular voting class. We store the balance for the number of votes that we have recorded.\n\n* * *\n\ncrowdloan[\u200b](#crowdloan \"Direct link to crowdloan\")\n\n----------------------------------------------------\n\n### endingsCount(): `u32`[\u200b](#endingscount-u32 \"Direct link to endingscount-u32\")\n\n*   **interface**: `api.query.crowdloan.endingsCount`\n*   **summary**: The number of auctions that have entered into their ending period so far.\n\n### funds(`u32`): `Option<PolkadotRuntimeCommonCrowdloanFundInfo>`[\u200b](#fundsu32-optionpolkadotruntimecommoncrowdloanfundinfo \"Direct link to fundsu32-optionpolkadotruntimecommoncrowdloanfundinfo\")\n\n*   **interface**: `api.query.crowdloan.funds`\n*   **summary**: Info on all of the funds.\n\n### newRaise(): `Vec<u32>`[\u200b](#newraise-vecu32 \"Direct link to newraise-vecu32\")\n\n*   **interface**: `api.query.crowdloan.newRaise`\n*   **summary**: The funds that have had additional contributions during the last block. This is used in order to determine which funds should submit new or updated bids.\n\n### nextFundIndex(): `u32`[\u200b](#nextfundindex-u32 \"Direct link to nextfundindex-u32\")\n\n*   **interface**: `api.query.crowdloan.nextFundIndex`\n*   **summary**: Tracker for the next available fund index\n\n* * *\n\ndmp[\u200b](#dmp \"Direct link to dmp\")\n\n----------------------------------\n\n### deliveryFeeFactor(`u32`): `u128`[\u200b](#deliveryfeefactoru32-u128 \"Direct link to deliveryfeefactoru32-u128\")\n\n*   **interface**: `api.query.dmp.deliveryFeeFactor`\n*   **summary**: The number to multiply the base delivery fee by.\n\n### downwardMessageQueueHeads(`u32`): `H256`[\u200b](#downwardmessagequeueheadsu32-h256 \"Direct link to downwardmessagequeueheadsu32-h256\")\n\n*   **interface**: `api.query.dmp.downwardMessageQueueHeads`\n    \n*   **summary**: A mapping that stores the downward message queue MQC head for each para.\n    \n    Each link in this chain has a form: `(prev_head, B, H(M))`, where\n    \n    *   `prev_head`: is the previous head hash or zero if none.\n        \n    *   `B`: is the relay-chain block number in which a message was appended.\n        \n    *   `H(M)`: is the hash of the message being appended.\n        \n\n### downwardMessageQueues(`u32`): `Vec<PolkadotCorePrimitivesInboundDownwardMessage>`[\u200b](#downwardmessagequeuesu32-vecpolkadotcoreprimitivesinbounddownwardmessage \"Direct link to downwardmessagequeuesu32-vecpolkadotcoreprimitivesinbounddownwardmessage\")\n\n*   **interface**: `api.query.dmp.downwardMessageQueues`\n*   **summary**: The downward messages addressed for a certain para.\n\n* * *\n\nelectionProviderMultiPhase[\u200b](#electionprovidermultiphase \"Direct link to electionProviderMultiPhase\")\n\n-------------------------------------------------------------------------------------------------------\n\n### currentPhase(): `PalletElectionProviderMultiPhasePhase`[\u200b](#currentphase-palletelectionprovidermultiphasephase \"Direct link to currentphase-palletelectionprovidermultiphasephase\")\n\n*   **interface**: `api.query.electionProviderMultiPhase.currentPhase`\n*   **summary**: Current phase.\n\n### desiredTargets(): `Option<u32>`[\u200b](#desiredtargets-optionu32 \"Direct link to desiredtargets-optionu32\")\n\n*   **interface**: `api.query.electionProviderMultiPhase.desiredTargets`\n    \n*   **summary**: Desired number of targets to elect for this round.\n    \n    Only exists when \\[`Snapshot`\\] is present.\n    \n\n### minimumUntrustedScore(): `Option<SpNposElectionsElectionScore>`[\u200b](#minimumuntrustedscore-optionspnposelectionselectionscore \"Direct link to minimumuntrustedscore-optionspnposelectionselectionscore\")\n\n*   **interface**: `api.query.electionProviderMultiPhase.minimumUntrustedScore`\n    \n*   **summary**: The minimum score that each 'untrusted' solution must attain in order to be considered feasible.\n    \n    Can be set via `set_minimum_untrusted_score`.\n    \n\n### queuedSolution(): `Option<PalletElectionProviderMultiPhaseReadySolution>`[\u200b](#queuedsolution-optionpalletelectionprovidermultiphasereadysolution \"Direct link to queuedsolution-optionpalletelectionprovidermultiphasereadysolution\")\n\n*   **interface**: `api.query.electionProviderMultiPhase.queuedSolution`\n    \n*   **summary**: Current best solution, signed or unsigned, queued to be returned upon `elect`.\n    \n    Always sorted by score.\n    \n\n### round(): `u32`[\u200b](#round-u32 \"Direct link to round-u32\")\n\n*   **interface**: `api.query.electionProviderMultiPhase.round`\n    \n*   **summary**: Internal counter for the number of rounds.\n    \n    This is useful for de-duplication of transactions submitted to the pool, and general diagnostics of the pallet.\n    \n    This is merely incremented once per every time that an upstream `elect` is called.\n    \n\n### signedSubmissionIndices(): `Vec<(SpNposElectionsElectionScore,u32,u32)>`[\u200b](#signedsubmissionindices-vecspnposelectionselectionscoreu32u32 \"Direct link to signedsubmissionindices-vecspnposelectionselectionscoreu32u32\")\n\n*   **interface**: `api.query.electionProviderMultiPhase.signedSubmissionIndices`\n    \n*   **summary**: A sorted, bounded vector of `(score, block_number, index)`, where each `index` points to a value in `SignedSubmissions`.\n    \n    We never need to process more than a single signed submission at a time. Signed submissions can be quite large, so we're willing to pay the cost of multiple database accesses to access them one at a time instead of reading and decoding all of them at once.\n    \n\n### signedSubmissionNextIndex(): `u32`[\u200b](#signedsubmissionnextindex-u32 \"Direct link to signedsubmissionnextindex-u32\")\n\n*   **interface**: `api.query.electionProviderMultiPhase.signedSubmissionNextIndex`\n    \n*   **summary**: The next index to be assigned to an incoming signed submission.\n    \n    Every accepted submission is assigned a unique index; that index is bound to that particular submission for the duration of the election. On election finalization, the next index is reset to 0.\n    \n    We can't just use `SignedSubmissionIndices.len()`, because that's a bounded set; past its capacity, it will simply saturate. We can't just iterate over `SignedSubmissionsMap`, because iteration is slow. Instead, we store the value here.\n    \n\n### signedSubmissionsMap(`u32`): `Option<PalletElectionProviderMultiPhaseSignedSignedSubmission>`[\u200b](#signedsubmissionsmapu32-optionpalletelectionprovidermultiphasesignedsignedsubmission \"Direct link to signedsubmissionsmapu32-optionpalletelectionprovidermultiphasesignedsignedsubmission\")\n\n*   **interface**: `api.query.electionProviderMultiPhase.signedSubmissionsMap`\n    \n*   **summary**: Unchecked, signed solutions.\n    \n    Together with `SubmissionIndices`, this stores a bounded set of `SignedSubmissions` while allowing us to keep only a single one in memory at a time.\n    \n    Twox note: the key of the map is an auto-incrementing index which users cannot inspect or affect; we shouldn't need a cryptographically secure hasher.\n    \n\n### snapshot(): `Option<PalletElectionProviderMultiPhaseRoundSnapshot>`[\u200b](#snapshot-optionpalletelectionprovidermultiphaseroundsnapshot \"Direct link to snapshot-optionpalletelectionprovidermultiphaseroundsnapshot\")\n\n*   **interface**: `api.query.electionProviderMultiPhase.snapshot`\n    \n*   **summary**: Snapshot data of the round.\n    \n    This is created at the beginning of the signed phase and cleared upon calling `elect`.\n    \n\n### snapshotMetadata(): `Option<PalletElectionProviderMultiPhaseSolutionOrSnapshotSize>`[\u200b](#snapshotmetadata-optionpalletelectionprovidermultiphasesolutionorsnapshotsize \"Direct link to snapshotmetadata-optionpalletelectionprovidermultiphasesolutionorsnapshotsize\")\n\n*   **interface**: `api.query.electionProviderMultiPhase.snapshotMetadata`\n    \n*   **summary**: The metadata of the \\[`RoundSnapshot`\\]\n    \n    Only exists when \\[`Snapshot`\\] is present.\n    \n\n* * *\n\nfastUnstake[\u200b](#fastunstake \"Direct link to fastUnstake\")\n\n----------------------------------------------------------\n\n### counterForQueue(): `u32`[\u200b](#counterforqueue-u32 \"Direct link to counterforqueue-u32\")\n\n*   **interface**: `api.query.fastUnstake.counterForQueue`\n*   **summary**: Counter for the related counted storage map\n\n### erasToCheckPerBlock(): `u32`[\u200b](#erastocheckperblock-u32 \"Direct link to erastocheckperblock-u32\")\n\n*   **interface**: `api.query.fastUnstake.erasToCheckPerBlock`\n    \n*   **summary**: Number of eras to check per block.\n    \n    If set to 0, this pallet does absolutely nothing. Cannot be set to more than \\[`Config::MaxErasToCheckPerBlock`\\].\n    \n    Based on the amount of weight available at \\[`Pallet::on_idle`\\], up to this many eras are checked. The checking is represented by updating \\[`UnstakeRequest::checked`\\], which is stored in \\[`Head`\\].\n    \n\n### head(): `Option<PalletFastUnstakeUnstakeRequest>`[\u200b](#head-optionpalletfastunstakeunstakerequest \"Direct link to head-optionpalletfastunstakeunstakerequest\")\n\n*   **interface**: `api.query.fastUnstake.head`\n    \n*   **summary**: The current \"head of the queue\" being unstaked.\n    \n    The head in itself can be a batch of up to \\[`Config::BatchSize`\\] stakers.\n    \n\n### queue(`AccountId32`): `Option<u128>`[\u200b](#queueaccountid32-optionu128 \"Direct link to queueaccountid32-optionu128\")\n\n*   **interface**: `api.query.fastUnstake.queue`\n    \n*   **summary**: The map of all accounts wishing to be unstaked.\n    \n    Keeps track of `AccountId` wishing to unstake and it's corresponding deposit.\n    \n\n* * *\n\nfellowshipCollective[\u200b](#fellowshipcollective \"Direct link to fellowshipCollective\")\n\n-------------------------------------------------------------------------------------\n\n### idToIndex(`u16, AccountId32`): `Option<u32>`[\u200b](#idtoindexu16-accountid32-optionu32 \"Direct link to idtoindexu16-accountid32-optionu32\")\n\n*   **interface**: `api.query.fellowshipCollective.idToIndex`\n*   **summary**: The index of each ranks's member into the group of members who have at least that rank.\n\n### indexToId(`u16, u32`): `Option<AccountId32>`[\u200b](#indextoidu16-u32-optionaccountid32 \"Direct link to indextoidu16-u32-optionaccountid32\")\n\n*   **interface**: `api.query.fellowshipCollective.indexToId`\n*   **summary**: The members in the collective by index. All indices in the range `0..MemberCount` will return `Some`, however a member's index is not guaranteed to remain unchanged over time.\n\n### memberCount(`u16`): `u32`[\u200b](#membercountu16-u32 \"Direct link to membercountu16-u32\")\n\n*   **interface**: `api.query.fellowshipCollective.memberCount`\n*   **summary**: The number of members in the collective who have at least the rank according to the index of the vec.\n\n### members(`AccountId32`): `Option<PalletRankedCollectiveMemberRecord>`[\u200b](#membersaccountid32-optionpalletrankedcollectivememberrecord \"Direct link to membersaccountid32-optionpalletrankedcollectivememberrecord\")\n\n*   **interface**: `api.query.fellowshipCollective.members`\n*   **summary**: The current members of the collective.\n\n### voting(`u32, AccountId32`): `Option<PalletRankedCollectiveVoteRecord>`[\u200b](#votingu32-accountid32-optionpalletrankedcollectivevoterecord \"Direct link to votingu32-accountid32-optionpalletrankedcollectivevoterecord\")\n\n*   **interface**: `api.query.fellowshipCollective.voting`\n*   **summary**: Votes on a given proposal, if it is ongoing.\n\n### votingCleanup(`u32`): `Option<Bytes>`[\u200b](#votingcleanupu32-optionbytes \"Direct link to votingcleanupu32-optionbytes\")\n\n*   **interface**: `api.query.fellowshipCollective.votingCleanup`\n\n* * *\n\nfellowshipReferenda[\u200b](#fellowshipreferenda \"Direct link to fellowshipReferenda\")\n\n----------------------------------------------------------------------------------\n\n### decidingCount(`u16`): `u32`[\u200b](#decidingcountu16-u32 \"Direct link to decidingcountu16-u32\")\n\n*   **interface**: `api.query.fellowshipReferenda.decidingCount`\n*   **summary**: The number of referenda being decided currently.\n\n### metadataOf(`u32`): `Option<H256>`[\u200b](#metadataofu32-optionh256 \"Direct link to metadataofu32-optionh256\")\n\n*   **interface**: `api.query.fellowshipReferenda.metadataOf`\n    \n*   **summary**: The metadata is a general information concerning the referendum. The `PreimageHash` refers to the preimage of the `Preimages` provider which can be a JSON dump or IPFS hash of a JSON file.\n    \n    Consider a garbage collection for a metadata of finished referendums to `unrequest` (remove) large preimages.\n    \n\n### referendumCount(): `u32`[\u200b](#referendumcount-u32 \"Direct link to referendumcount-u32\")\n\n*   **interface**: `api.query.fellowshipReferenda.referendumCount`\n*   **summary**: The next free referendum index, aka the number of referenda started so far.\n\n### referendumInfoFor(`u32`): `Option<PalletReferendaReferendumInfoRankedCollectiveTally>`[\u200b](#referenduminfoforu32-optionpalletreferendareferenduminforankedcollectivetally \"Direct link to referenduminfoforu32-optionpalletreferendareferenduminforankedcollectivetally\")\n\n*   **interface**: `api.query.fellowshipReferenda.referendumInfoFor`\n*   **summary**: Information concerning any given referendum.\n\n### trackQueue(`u16`): `Vec<(u32,u32)>`[\u200b](#trackqueueu16-vecu32u32 \"Direct link to trackqueueu16-vecu32u32\")\n\n*   **interface**: `api.query.fellowshipReferenda.trackQueue`\n    \n*   **summary**: The sorted list of referenda ready to be decided but not yet being decided, ordered by conviction-weighted approvals.\n    \n    This should be empty if `DecidingCount` is less than `TrackInfo::max_deciding`.\n    \n\n* * *\n\ngrandpa[\u200b](#grandpa \"Direct link to grandpa\")\n\n----------------------------------------------\n\n### currentSetId(): `u64`[\u200b](#currentsetid-u64 \"Direct link to currentsetid-u64\")\n\n*   **interface**: `api.query.grandpa.currentSetId`\n*   **summary**: The number of changes (both in terms of keys and underlying economic responsibilities) in the \"set\" of Grandpa validators from genesis.\n\n### nextForced(): `Option<u32>`[\u200b](#nextforced-optionu32 \"Direct link to nextforced-optionu32\")\n\n*   **interface**: `api.query.grandpa.nextForced`\n*   **summary**: next block number where we can force a change.\n\n### pendingChange(): `Option<PalletGrandpaStoredPendingChange>`[\u200b](#pendingchange-optionpalletgrandpastoredpendingchange \"Direct link to pendingchange-optionpalletgrandpastoredpendingchange\")\n\n*   **interface**: `api.query.grandpa.pendingChange`\n*   **summary**: Pending change: (signaled at, scheduled change).\n\n### setIdSession(`u64`): `Option<u32>`[\u200b](#setidsessionu64-optionu32-1 \"Direct link to setidsessionu64-optionu32-1\")\n\n*   **interface**: `api.query.grandpa.setIdSession`\n    \n*   **summary**: A mapping from grandpa set ID to the index of the _most recent_ session for which its members were responsible.\n    \n    This is only used for validating equivocation proofs. An equivocation proof must contains a key-ownership proof for a given session, therefore we need a way to tie together sessions and GRANDPA set ids, i.e. we need to validate that a validator was the owner of a given key on a given session, and what the active set ID was during that session.\n    \n    TWOX-NOTE: `SetId` is not under user control.\n    \n\n### stalled(): `Option<(u32,u32)>`[\u200b](#stalled-optionu32u32 \"Direct link to stalled-optionu32u32\")\n\n*   **interface**: `api.query.grandpa.stalled`\n*   **summary**: `true` if we are currently stalled.\n\n### state(): `PalletGrandpaStoredState`[\u200b](#state-palletgrandpastoredstate \"Direct link to state-palletgrandpastoredstate\")\n\n*   **interface**: `api.query.grandpa.state`\n*   **summary**: State of the current authority set.\n\n* * *\n\nhrmp[\u200b](#hrmp \"Direct link to hrmp\")\n\n-------------------------------------\n\n### hrmpAcceptedChannelRequestCount(`u32`): `u32`[\u200b](#hrmpacceptedchannelrequestcountu32-u32 \"Direct link to hrmpacceptedchannelrequestcountu32-u32\")\n\n*   **interface**: `api.query.hrmp.hrmpAcceptedChannelRequestCount`\n*   **summary**: This mapping tracks how many open channel requests were accepted by a given recipient para. Invariant: `HrmpOpenChannelRequests` should contain the same number of items `(_, X)` with `confirmed` set to true, as the number of `HrmpAcceptedChannelRequestCount` for `X`.\n\n### hrmpChannelContents(`PolkadotParachainPrimitivesHrmpChannelId`): `Vec<PolkadotCorePrimitivesInboundHrmpMessage>`[\u200b](#hrmpchannelcontentspolkadotparachainprimitiveshrmpchannelid-vecpolkadotcoreprimitivesinboundhrmpmessage \"Direct link to hrmpchannelcontentspolkadotparachainprimitiveshrmpchannelid-vecpolkadotcoreprimitivesinboundhrmpmessage\")\n\n*   **interface**: `api.query.hrmp.hrmpChannelContents`\n*   **summary**: Storage for the messages for each channel. Invariant: cannot be non-empty if the corresponding channel in `HrmpChannels` is `None`.\n\n### hrmpChannelDigests(`u32`): `Vec<(u32,Vec<u32>)>`[\u200b](#hrmpchanneldigestsu32-vecu32vecu32 \"Direct link to hrmpchanneldigestsu32-vecu32vecu32\")\n\n*   **interface**: `api.query.hrmp.hrmpChannelDigests`\n    \n*   **summary**: Maintains a mapping that can be used to answer the question: What paras sent a message at the given block number for a given receiver. Invariants:\n    \n    *   The inner `Vec<ParaId>` is never empty.\n        \n    *   The inner `Vec<ParaId>` cannot store two same `ParaId`.\n        \n    *   The outer vector is sorted ascending by block number and cannot store two items with the same block number.\n        \n\n### hrmpChannels(`PolkadotParachainPrimitivesHrmpChannelId`): `Option<PolkadotRuntimeParachainsHrmpHrmpChannel>`[\u200b](#hrmpchannelspolkadotparachainprimitiveshrmpchannelid-optionpolkadotruntimeparachainshrmphrmpchannel \"Direct link to hrmpchannelspolkadotparachainprimitiveshrmpchannelid-optionpolkadotruntimeparachainshrmphrmpchannel\")\n\n*   **interface**: `api.query.hrmp.hrmpChannels`\n    \n*   **summary**: HRMP channel data associated with each para. Invariant:\n    \n    *   each participant in the channel should satisfy `Paras::is_valid_para(P)` within a session.\n\n### hrmpCloseChannelRequests(`PolkadotParachainPrimitivesHrmpChannelId`): `Option<Null>`[\u200b](#hrmpclosechannelrequestspolkadotparachainprimitiveshrmpchannelid-optionnull \"Direct link to hrmpclosechannelrequestspolkadotparachainprimitiveshrmpchannelid-optionnull\")\n\n*   **interface**: `api.query.hrmp.hrmpCloseChannelRequests`\n    \n*   **summary**: A set of pending HRMP close channel requests that are going to be closed during the session change. Used for checking if a given channel is registered for closure.\n    \n    The set is accompanied by a list for iteration.\n    \n    Invariant:\n    \n    *   There are no channels that exists in list but not in the set and vice versa.\n\n### hrmpCloseChannelRequestsList(): `Vec<PolkadotParachainPrimitivesHrmpChannelId>`[\u200b](#hrmpclosechannelrequestslist-vecpolkadotparachainprimitiveshrmpchannelid \"Direct link to hrmpclosechannelrequestslist-vecpolkadotparachainprimitiveshrmpchannelid\")\n\n*   **interface**: `api.query.hrmp.hrmpCloseChannelRequestsList`\n\n### hrmpEgressChannelsIndex(`u32`): `Vec<u32>`[\u200b](#hrmpegresschannelsindexu32-vecu32 \"Direct link to hrmpegresschannelsindexu32-vecu32\")\n\n*   **interface**: `api.query.hrmp.hrmpEgressChannelsIndex`\n\n### hrmpIngressChannelsIndex(`u32`): `Vec<u32>`[\u200b](#hrmpingresschannelsindexu32-vecu32 \"Direct link to hrmpingresschannelsindexu32-vecu32\")\n\n*   **interface**: `api.query.hrmp.hrmpIngressChannelsIndex`\n    \n*   **summary**: Ingress/egress indexes allow to find all the senders and receivers given the opposite side. I.e.\n    \n    (a) ingress index allows to find all the senders for a given recipient. (b) egress index allows to find all the recipients for a given sender.\n    \n    Invariants:\n    \n    *   for each ingress index entry for `P` each item `I` in the index should present in `HrmpChannels` as `(I, P)`.\n        \n    *   for each egress index entry for `P` each item `E` in the index should present in `HrmpChannels` as `(P, E)`.\n        \n    *   there should be no other dangling channels in `HrmpChannels`.\n        \n    *   the vectors are sorted.\n        \n\n### hrmpOpenChannelRequestCount(`u32`): `u32`[\u200b](#hrmpopenchannelrequestcountu32-u32 \"Direct link to hrmpopenchannelrequestcountu32-u32\")\n\n*   **interface**: `api.query.hrmp.hrmpOpenChannelRequestCount`\n*   **summary**: This mapping tracks how many open channel requests are initiated by a given sender para. Invariant: `HrmpOpenChannelRequests` should contain the same number of items that has `(X, _)` as the number of `HrmpOpenChannelRequestCount` for `X`.\n\n### hrmpOpenChannelRequests(`PolkadotParachainPrimitivesHrmpChannelId`): `Option<PolkadotRuntimeParachainsHrmpHrmpOpenChannelRequest>`[\u200b](#hrmpopenchannelrequestspolkadotparachainprimitiveshrmpchannelid-optionpolkadotruntimeparachainshrmphrmpopenchannelrequest \"Direct link to hrmpopenchannelrequestspolkadotparachainprimitiveshrmpchannelid-optionpolkadotruntimeparachainshrmphrmpopenchannelrequest\")\n\n*   **interface**: `api.query.hrmp.hrmpOpenChannelRequests`\n    \n*   **summary**: The set of pending HRMP open channel requests.\n    \n    The set is accompanied by a list for iteration.\n    \n    Invariant:\n    \n    *   There are no channels that exists in list but not in the set and vice versa.\n\n### hrmpOpenChannelRequestsList(): `Vec<PolkadotParachainPrimitivesHrmpChannelId>`[\u200b](#hrmpopenchannelrequestslist-vecpolkadotparachainprimitiveshrmpchannelid \"Direct link to hrmpopenchannelrequestslist-vecpolkadotparachainprimitiveshrmpchannelid\")\n\n*   **interface**: `api.query.hrmp.hrmpOpenChannelRequestsList`\n\n### hrmpWatermarks(`u32`): `Option<u32>`[\u200b](#hrmpwatermarksu32-optionu32 \"Direct link to hrmpwatermarksu32-optionu32\")\n\n*   **interface**: `api.query.hrmp.hrmpWatermarks`\n    \n*   **summary**: The HRMP watermark associated with each para. Invariant:\n    \n    *   each para `P` used here as a key should satisfy `Paras::is_valid_para(P)` within a session.\n\n* * *\n\nidentity[\u200b](#identity \"Direct link to identity\")\n\n-------------------------------------------------\n\n### identityOf(`AccountId32`): `Option<PalletIdentityRegistration>`[\u200b](#identityofaccountid32-optionpalletidentityregistration \"Direct link to identityofaccountid32-optionpalletidentityregistration\")\n\n*   **interface**: `api.query.identity.identityOf`\n    \n*   **summary**: Information that is pertinent to identify the entity behind an account.\n    \n    TWOX-NOTE: OK \u2015 `AccountId` is a secure hash.\n    \n\n### registrars(): `Vec<Option<PalletIdentityRegistrarInfo>>`[\u200b](#registrars-vecoptionpalletidentityregistrarinfo \"Direct link to registrars-vecoptionpalletidentityregistrarinfo\")\n\n*   **interface**: `api.query.identity.registrars`\n    \n*   **summary**: The set of registrars. Not expected to get very big as can only be added through a special origin (likely a council motion).\n    \n    The index into this can be cast to `RegistrarIndex` to get a valid value.\n    \n\n### subsOf(`AccountId32`): `(u128,Vec<AccountId32>)`[\u200b](#subsofaccountid32-u128vecaccountid32 \"Direct link to subsofaccountid32-u128vecaccountid32\")\n\n*   **interface**: `api.query.identity.subsOf`\n    \n*   **summary**: Alternative \"sub\" identities of this account.\n    \n    The first item is the deposit, the second is a vector of the accounts.\n    \n    TWOX-NOTE: OK \u2015 `AccountId` is a secure hash.\n    \n\n### superOf(`AccountId32`): `Option<(AccountId32,Data)>`[\u200b](#superofaccountid32-optionaccountid32data \"Direct link to superofaccountid32-optionaccountid32data\")\n\n*   **interface**: `api.query.identity.superOf`\n*   **summary**: The super-identity of an alternative \"sub\" identity together with its name, within that context. If the account is not some other account's sub-identity, then just `None`.\n\n* * *\n\nimOnline[\u200b](#imonline \"Direct link to imOnline\")\n\n-------------------------------------------------\n\n### authoredBlocks(`u32, AccountId32`): `u32`[\u200b](#authoredblocksu32-accountid32-u32 \"Direct link to authoredblocksu32-accountid32-u32\")\n\n*   **interface**: `api.query.imOnline.authoredBlocks`\n*   **summary**: For each session index, we keep a mapping of `ValidatorId<T>` to the number of blocks authored by the given authority.\n\n### heartbeatAfter(): `u32`[\u200b](#heartbeatafter-u32 \"Direct link to heartbeatafter-u32\")\n\n*   **interface**: `api.query.imOnline.heartbeatAfter`\n    \n*   **summary**: The block number after which it's ok to send heartbeats in the current session.\n    \n    At the beginning of each session we set this to a value that should fall roughly in the middle of the session duration. The idea is to first wait for the validators to produce a block in the current session, so that the heartbeat later on will not be necessary.\n    \n    This value will only be used as a fallback if we fail to get a proper session progress estimate from `NextSessionRotation`, as those estimates should be more accurate then the value we calculate for `HeartbeatAfter`.\n    \n\n### keys(): `Vec<PalletImOnlineSr25519AppSr25519Public>`[\u200b](#keys-vecpalletimonlinesr25519appsr25519public \"Direct link to keys-vecpalletimonlinesr25519appsr25519public\")\n\n*   **interface**: `api.query.imOnline.keys`\n*   **summary**: The current set of keys that may issue a heartbeat.\n\n### receivedHeartbeats(`u32, u32`): `Option<bool>`[\u200b](#receivedheartbeatsu32-u32-optionbool \"Direct link to receivedheartbeatsu32-u32-optionbool\")\n\n*   **interface**: `api.query.imOnline.receivedHeartbeats`\n*   **summary**: For each session index, we keep a mapping of `SessionIndex` and `AuthIndex`.\n\n* * *\n\nindices[\u200b](#indices \"Direct link to indices\")\n\n----------------------------------------------\n\n### accounts(`u32`): `Option<(AccountId32,u128,bool)>`[\u200b](#accountsu32-optionaccountid32u128bool \"Direct link to accountsu32-optionaccountid32u128bool\")\n\n*   **interface**: `api.query.indices.accounts`\n*   **summary**: The lookup from index to account.\n\n* * *\n\ninitializer[\u200b](#initializer \"Direct link to initializer\")\n\n----------------------------------------------------------\n\n### bufferedSessionChanges(): `Vec<PolkadotRuntimeParachainsInitializerBufferedSessionChange>`[\u200b](#bufferedsessionchanges-vecpolkadotruntimeparachainsinitializerbufferedsessionchange \"Direct link to bufferedsessionchanges-vecpolkadotruntimeparachainsinitializerbufferedsessionchange\")\n\n*   **interface**: `api.query.initializer.bufferedSessionChanges`\n    \n*   **summary**: Buffered session changes along with the block number at which they should be applied.\n    \n    Typically this will be empty or one element long. Apart from that this item never hits the storage.\n    \n    However this is a `Vec` regardless to handle various edge cases that may occur at runtime upgrade boundaries or if governance intervenes.\n    \n\n### hasInitialized(): `Option<Null>`[\u200b](#hasinitialized-optionnull \"Direct link to hasinitialized-optionnull\")\n\n*   **interface**: `api.query.initializer.hasInitialized`\n    \n*   **summary**: Whether the parachains modules have been initialized within this block.\n    \n    Semantically a `bool`, but this guarantees it should never hit the trie, as this is cleared in `on_finalize` and Frame optimizes `None` values to be empty values.\n    \n    As a `bool`, `set(false)` and `remove()` both lead to the next `get()` being false, but one of them writes to the trie and one does not. This confusion makes `Option<()>` more suitable for the semantics of this variable.\n    \n\n* * *\n\nmessageQueue[\u200b](#messagequeue \"Direct link to messageQueue\")\n\n-------------------------------------------------------------\n\n### bookStateFor(`PolkadotRuntimeParachainsInclusionAggregateMessageOrigin`): `PalletMessageQueueBookState`[\u200b](#bookstateforpolkadotruntimeparachainsinclusionaggregatemessageorigin-palletmessagequeuebookstate \"Direct link to bookstateforpolkadotruntimeparachainsinclusionaggregatemessageorigin-palletmessagequeuebookstate\")\n\n*   **interface**: `api.query.messageQueue.bookStateFor`\n*   **summary**: The index of the first and last (non-empty) pages.\n\n### pages(`PolkadotRuntimeParachainsInclusionAggregateMessageOrigin, u32`): `Option<PalletMessageQueuePage>`[\u200b](#pagespolkadotruntimeparachainsinclusionaggregatemessageorigin-u32-optionpalletmessagequeuepage \"Direct link to pagespolkadotruntimeparachainsinclusionaggregatemessageorigin-u32-optionpalletmessagequeuepage\")\n\n*   **interface**: `api.query.messageQueue.pages`\n*   **summary**: The map of page indices to pages.\n\n### serviceHead(): `Option<PolkadotRuntimeParachainsInclusionAggregateMessageOrigin>`[\u200b](#servicehead-optionpolkadotruntimeparachainsinclusionaggregatemessageorigin \"Direct link to servicehead-optionpolkadotruntimeparachainsinclusionaggregatemessageorigin\")\n\n*   **interface**: `api.query.messageQueue.serviceHead`\n*   **summary**: The origin at which we should begin servicing.\n\n* * *\n\nmmr[\u200b](#mmr \"Direct link to mmr\")\n\n----------------------------------\n\n### nodes(`u64`): `Option<H256>`[\u200b](#nodesu64-optionh256 \"Direct link to nodesu64-optionh256\")\n\n*   **interface**: `api.query.mmr.nodes`\n    \n*   **summary**: Hashes of the nodes in the MMR.\n    \n    Note this collection only contains MMR peaks, the inner nodes (and leaves) are pruned and only stored in the Offchain DB.\n    \n\n### numberOfLeaves(): `u64`[\u200b](#numberofleaves-u64 \"Direct link to numberofleaves-u64\")\n\n*   **interface**: `api.query.mmr.numberOfLeaves`\n*   **summary**: Current size of the MMR (number of leaves).\n\n### rootHash(): `H256`[\u200b](#roothash-h256 \"Direct link to roothash-h256\")\n\n*   **interface**: `api.query.mmr.rootHash`\n*   **summary**: Latest MMR Root hash.\n\n* * *\n\nmultisig[\u200b](#multisig \"Direct link to multisig\")\n\n-------------------------------------------------\n\n### multisigs(`AccountId32, [u8;32]`): `Option<PalletMultisigMultisig>`[\u200b](#multisigsaccountid32-u832-optionpalletmultisigmultisig \"Direct link to multisigsaccountid32-u832-optionpalletmultisigmultisig\")\n\n*   **interface**: `api.query.multisig.multisigs`\n*   **summary**: The set of open multisig operations.\n\n* * *\n\nnis[\u200b](#nis \"Direct link to nis\")\n\n----------------------------------\n\n### queues(`u32`): `Vec<PalletNisBid>`[\u200b](#queuesu32-vecpalletnisbid \"Direct link to queuesu32-vecpalletnisbid\")\n\n*   **interface**: `api.query.nis.queues`\n*   **summary**: The queues of bids. Indexed by duration (in `Period`s).\n\n### queueTotals(): `Vec<(u32,u128)>`[\u200b](#queuetotals-vecu32u128 \"Direct link to queuetotals-vecu32u128\")\n\n*   **interface**: `api.query.nis.queueTotals`\n    \n*   **summary**: The totals of items and balances within each queue. Saves a lot of storage reads in the case of sparsely packed queues.\n    \n    The vector is indexed by duration in `Period`s, offset by one, so information on the queue whose duration is one `Period` would be storage `0`.\n    \n\n### receipts(`u32`): `Option<PalletNisReceiptRecord>`[\u200b](#receiptsu32-optionpalletnisreceiptrecord \"Direct link to receiptsu32-optionpalletnisreceiptrecord\")\n\n*   **interface**: `api.query.nis.receipts`\n*   **summary**: The currently outstanding receipts, indexed according to the order of creation.\n\n### summary(): `PalletNisSummaryRecord`[\u200b](#summary-palletnissummaryrecord \"Direct link to summary-palletnissummaryrecord\")\n\n*   **interface**: `api.query.nis.summary`\n*   **summary**: Summary information over the general state.\n\n* * *\n\nnisCounterpartBalances[\u200b](#niscounterpartbalances \"Direct link to nisCounterpartBalances\")\n\n-------------------------------------------------------------------------------------------\n\n### account(`AccountId32`): `PalletBalancesAccountData`[\u200b](#accountaccountid32-palletbalancesaccountdata-1 \"Direct link to accountaccountid32-palletbalancesaccountdata-1\")\n\n*   **interface**: `api.query.nisCounterpartBalances.account`\n    \n*   **summary**: The Balances pallet example of storing the balance of an account.\n    \n    #### Example[\u200b](#example-2 \"Direct link to Example\")\n    \n    `nocompile impl pallet_balances::Config for Runtime { type AccountStore = StorageMapShim<Self::Account<Runtime>, frame_system::Provider<Runtime>, AccountId, Self::AccountData<Balance>> }`\n    \n    You can also store the balance of an account in the `System` pallet.\n    \n    #### Example[\u200b](#example-3 \"Direct link to Example\")\n    \n    `nocompile impl pallet_balances::Config for Runtime { type AccountStore = System }`\n    \n    But this comes with tradeoffs, storing account balances in the system pallet stores `frame_system` data alongside the account data contrary to storing account balances in the `Balances` pallet, which uses a `StorageMap` to store balances data only. NOTE: This is only used in the case that this pallet is used to store balances.\n    \n\n### freezes(`AccountId32`): `Vec<PalletBalancesIdAmount>`[\u200b](#freezesaccountid32-vecpalletbalancesidamount-1 \"Direct link to freezesaccountid32-vecpalletbalancesidamount-1\")\n\n*   **interface**: `api.query.nisCounterpartBalances.freezes`\n*   **summary**: Freeze locks on account balances.\n\n### holds(`AccountId32`): `Vec<{\"id\":\"KusamaRuntimeRuntimeHoldReason\",\"amount\":\"u128\"}>`[\u200b](#holdsaccountid32-vecidkusamaruntimeruntimeholdreasonamountu128-1 \"Direct link to holdsaccountid32-vecidkusamaruntimeruntimeholdreasonamountu128-1\")\n\n*   **interface**: `api.query.nisCounterpartBalances.holds`\n*   **summary**: Holds on account balances.\n\n### inactiveIssuance(): `u128`[\u200b](#inactiveissuance-u128-1 \"Direct link to inactiveissuance-u128-1\")\n\n*   **interface**: `api.query.nisCounterpartBalances.inactiveIssuance`\n*   **summary**: The total units of outstanding deactivated balance in the system.\n\n### locks(`AccountId32`): `Vec<PalletBalancesBalanceLock>`[\u200b](#locksaccountid32-vecpalletbalancesbalancelock-1 \"Direct link to locksaccountid32-vecpalletbalancesbalancelock-1\")\n\n*   **interface**: `api.query.nisCounterpartBalances.locks`\n*   **summary**: Any liquidity locks on some account balances. NOTE: Should only be accessed when setting, changing and freeing a lock.\n\n### reserves(`AccountId32`): `Vec<PalletBalancesReserveData>`[\u200b](#reservesaccountid32-vecpalletbalancesreservedata-1 \"Direct link to reservesaccountid32-vecpalletbalancesreservedata-1\")\n\n*   **interface**: `api.query.nisCounterpartBalances.reserves`\n*   **summary**: Named reserves on some account balances.\n\n### totalIssuance(): `u128`[\u200b](#totalissuance-u128-1 \"Direct link to totalissuance-u128-1\")\n\n*   **interface**: `api.query.nisCounterpartBalances.totalIssuance`\n*   **summary**: The total units issued in the system.\n\n* * *\n\nnominationPools[\u200b](#nominationpools \"Direct link to nominationPools\")\n\n----------------------------------------------------------------------\n\n### bondedPools(`u32`): `Option<PalletNominationPoolsBondedPoolInner>`[\u200b](#bondedpoolsu32-optionpalletnominationpoolsbondedpoolinner \"Direct link to bondedpoolsu32-optionpalletnominationpoolsbondedpoolinner\")\n\n*   **interface**: `api.query.nominationPools.bondedPools`\n*   **summary**: Storage for bonded pools.\n\n### claimPermissions(`AccountId32`): `PalletNominationPoolsClaimPermission`[\u200b](#claimpermissionsaccountid32-palletnominationpoolsclaimpermission \"Direct link to claimpermissionsaccountid32-palletnominationpoolsclaimpermission\")\n\n*   **interface**: `api.query.nominationPools.claimPermissions`\n*   **summary**: Map from a pool member account to their opted claim permission.\n\n### counterForBondedPools(): `u32`[\u200b](#counterforbondedpools-u32 \"Direct link to counterforbondedpools-u32\")\n\n*   **interface**: `api.query.nominationPools.counterForBondedPools`\n*   **summary**: Counter for the related counted storage map\n\n### counterForMetadata(): `u32`[\u200b](#counterformetadata-u32 \"Direct link to counterformetadata-u32\")\n\n*   **interface**: `api.query.nominationPools.counterForMetadata`\n*   **summary**: Counter for the related counted storage map\n\n### counterForPoolMembers(): `u32`[\u200b](#counterforpoolmembers-u32 \"Direct link to counterforpoolmembers-u32\")\n\n*   **interface**: `api.query.nominationPools.counterForPoolMembers`\n*   **summary**: Counter for the related counted storage map\n\n### counterForReversePoolIdLookup(): `u32`[\u200b](#counterforreversepoolidlookup-u32 \"Direct link to counterforreversepoolidlookup-u32\")\n\n*   **interface**: `api.query.nominationPools.counterForReversePoolIdLookup`\n*   **summary**: Counter for the related counted storage map\n\n### counterForRewardPools(): `u32`[\u200b](#counterforrewardpools-u32 \"Direct link to counterforrewardpools-u32\")\n\n*   **interface**: `api.query.nominationPools.counterForRewardPools`\n*   **summary**: Counter for the related counted storage map\n\n### counterForSubPoolsStorage(): `u32`[\u200b](#counterforsubpoolsstorage-u32 \"Direct link to counterforsubpoolsstorage-u32\")\n\n*   **interface**: `api.query.nominationPools.counterForSubPoolsStorage`\n*   **summary**: Counter for the related counted storage map\n\n### globalMaxCommission(): `Option<Perbill>`[\u200b](#globalmaxcommission-optionperbill \"Direct link to globalmaxcommission-optionperbill\")\n\n*   **interface**: `api.query.nominationPools.globalMaxCommission`\n*   **summary**: The maximum commission that can be charged by a pool. Used on commission payouts to bound pool commissions that are > `GlobalMaxCommission`, necessary if a future `GlobalMaxCommission` is lower than some current pool commissions.\n\n### lastPoolId(): `u32`[\u200b](#lastpoolid-u32 \"Direct link to lastpoolid-u32\")\n\n*   **interface**: `api.query.nominationPools.lastPoolId`\n*   **summary**: Ever increasing number of all pools created so far.\n\n### maxPoolMembers(): `Option<u32>`[\u200b](#maxpoolmembers-optionu32 \"Direct link to maxpoolmembers-optionu32\")\n\n*   **interface**: `api.query.nominationPools.maxPoolMembers`\n*   **summary**: Maximum number of members that can exist in the system. If `None`, then the count members are not bound on a system wide basis.\n\n### maxPoolMembersPerPool(): `Option<u32>`[\u200b](#maxpoolmembersperpool-optionu32 \"Direct link to maxpoolmembersperpool-optionu32\")\n\n*   **interface**: `api.query.nominationPools.maxPoolMembersPerPool`\n*   **summary**: Maximum number of members that may belong to pool. If `None`, then the count of members is not bound on a per pool basis.\n\n### maxPools(): `Option<u32>`[\u200b](#maxpools-optionu32 \"Direct link to maxpools-optionu32\")\n\n*   **interface**: `api.query.nominationPools.maxPools`\n*   **summary**: Maximum number of nomination pools that can exist. If `None`, then an unbounded number of pools can exist.\n\n### metadata(`u32`): `Bytes`[\u200b](#metadatau32-bytes \"Direct link to metadatau32-bytes\")\n\n*   **interface**: `api.query.nominationPools.metadata`\n*   **summary**: Metadata for the pool.\n\n### minCreateBond(): `u128`[\u200b](#mincreatebond-u128 \"Direct link to mincreatebond-u128\")\n\n*   **interface**: `api.query.nominationPools.minCreateBond`\n    \n*   **summary**: Minimum bond required to create a pool.\n    \n    This is the amount that the depositor must put as their initial stake in the pool, as an indication of \"skin in the game\".\n    \n    This is the value that will always exist in the staking ledger of the pool bonded account while all other accounts leave.\n    \n\n### minJoinBond(): `u128`[\u200b](#minjoinbond-u128 \"Direct link to minjoinbond-u128\")\n\n*   **interface**: `api.query.nominationPools.minJoinBond`\n*   **summary**: Minimum amount to bond to join a pool.\n\n### poolMembers(`AccountId32`): `Option<PalletNominationPoolsPoolMember>`[\u200b](#poolmembersaccountid32-optionpalletnominationpoolspoolmember \"Direct link to poolmembersaccountid32-optionpalletnominationpoolspoolmember\")\n\n*   **interface**: `api.query.nominationPools.poolMembers`\n    \n*   **summary**: Active members.\n    \n    TWOX-NOTE: SAFE since `AccountId` is a secure hash.\n    \n\n### reversePoolIdLookup(`AccountId32`): `Option<u32>`[\u200b](#reversepoolidlookupaccountid32-optionu32 \"Direct link to reversepoolidlookupaccountid32-optionu32\")\n\n*   **interface**: `api.query.nominationPools.reversePoolIdLookup`\n    \n*   **summary**: A reverse lookup from the pool's account id to its id.\n    \n    This is only used for slashing. In all other instances, the pool id is used, and the accounts are deterministically derived from it.\n    \n\n### rewardPools(`u32`): `Option<PalletNominationPoolsRewardPool>`[\u200b](#rewardpoolsu32-optionpalletnominationpoolsrewardpool \"Direct link to rewardpoolsu32-optionpalletnominationpoolsrewardpool\")\n\n*   **interface**: `api.query.nominationPools.rewardPools`\n*   **summary**: Reward pools. This is where there rewards for each pool accumulate. When a members payout is claimed, the balance comes out fo the reward pool. Keyed by the bonded pools account.\n\n### subPoolsStorage(`u32`): `Option<PalletNominationPoolsSubPools>`[\u200b](#subpoolsstorageu32-optionpalletnominationpoolssubpools \"Direct link to subpoolsstorageu32-optionpalletnominationpoolssubpools\")\n\n*   **interface**: `api.query.nominationPools.subPoolsStorage`\n*   **summary**: Groups of unbonding pools. Each group of unbonding pools belongs to a bonded pool, hence the name sub-pools. Keyed by the bonded pools account.\n\n* * *\n\noffences[\u200b](#offences \"Direct link to offences\")\n\n-------------------------------------------------\n\n### concurrentReportsIndex(`[u8;16], Bytes`): `Vec<H256>`[\u200b](#concurrentreportsindexu816-bytes-vech256 \"Direct link to concurrentreportsindexu816-bytes-vech256\")\n\n*   **interface**: `api.query.offences.concurrentReportsIndex`\n*   **summary**: A vector of reports of the same kind that happened at the same time slot.\n\n### reports(`H256`): `Option<SpStakingOffenceOffenceDetails>`[\u200b](#reportsh256-optionspstakingoffenceoffencedetails \"Direct link to reportsh256-optionspstakingoffenceoffencedetails\")\n\n*   **interface**: `api.query.offences.reports`\n*   **summary**: The primary structure that holds all offence records keyed by report identifiers.\n\n* * *\n\nparaAssignmentProvider[\u200b](#paraassignmentprovider \"Direct link to paraAssignmentProvider\")\n\n-------------------------------------------------------------------------------------------\n\n* * *\n\nparaInclusion[\u200b](#parainclusion \"Direct link to paraInclusion\")\n\n----------------------------------------------------------------\n\n### availabilityBitfields(`u32`): `Option<PolkadotRuntimeParachainsInclusionAvailabilityBitfieldRecord>`[\u200b](#availabilitybitfieldsu32-optionpolkadotruntimeparachainsinclusionavailabilitybitfieldrecord \"Direct link to availabilitybitfieldsu32-optionpolkadotruntimeparachainsinclusionavailabilitybitfieldrecord\")\n\n*   **interface**: `api.query.paraInclusion.availabilityBitfields`\n*   **summary**: The latest bitfield for each validator, referred to by their index in the validator set.\n\n### pendingAvailability(`u32`): `Option<PolkadotRuntimeParachainsInclusionCandidatePendingAvailability>`[\u200b](#pendingavailabilityu32-optionpolkadotruntimeparachainsinclusioncandidatependingavailability \"Direct link to pendingavailabilityu32-optionpolkadotruntimeparachainsinclusioncandidatependingavailability\")\n\n*   **interface**: `api.query.paraInclusion.pendingAvailability`\n*   **summary**: Candidates pending availability by `ParaId`.\n\n### pendingAvailabilityCommitments(`u32`): `Option<PolkadotPrimitivesV5CandidateCommitments>`[\u200b](#pendingavailabilitycommitmentsu32-optionpolkadotprimitivesv5candidatecommitments \"Direct link to pendingavailabilitycommitmentsu32-optionpolkadotprimitivesv5candidatecommitments\")\n\n*   **interface**: `api.query.paraInclusion.pendingAvailabilityCommitments`\n*   **summary**: The commitments of candidates pending availability, by `ParaId`.\n\n* * *\n\nparaInherent[\u200b](#parainherent \"Direct link to paraInherent\")\n\n-------------------------------------------------------------\n\n### included(): `Option<Null>`[\u200b](#included-optionnull \"Direct link to included-optionnull\")\n\n*   **interface**: `api.query.paraInherent.included`\n    \n*   **summary**: Whether the paras inherent was included within this block.\n    \n    The `Option<()>` is effectively a `bool`, but it never hits storage in the `None` variant due to the guarantees of FRAME's storage APIs.\n    \n    If this is `None` at the end of the block, we panic and render the block invalid.\n    \n\n### onChainVotes(): `Option<PolkadotPrimitivesV5ScrapedOnChainVotes>`[\u200b](#onchainvotes-optionpolkadotprimitivesv5scrapedonchainvotes \"Direct link to onchainvotes-optionpolkadotprimitivesv5scrapedonchainvotes\")\n\n*   **interface**: `api.query.paraInherent.onChainVotes`\n*   **summary**: Scraped on chain data for extracting resolved disputes as well as backing votes.\n\n* * *\n\nparas[\u200b](#paras \"Direct link to paras\")\n\n----------------------------------------\n\n### actionsQueue(`u32`): `Vec<u32>`[\u200b](#actionsqueueu32-vecu32 \"Direct link to actionsqueueu32-vecu32\")\n\n*   **interface**: `api.query.paras.actionsQueue`\n*   **summary**: The actions to perform during the start of a specific session index.\n\n### codeByHash(`H256`): `Option<Bytes>`[\u200b](#codebyhashh256-optionbytes \"Direct link to codebyhashh256-optionbytes\")\n\n*   **interface**: `api.query.paras.codeByHash`\n    \n*   **summary**: Validation code stored by its hash.\n    \n    This storage is consistent with \\[`FutureCodeHash`\\], \\[`CurrentCodeHash`\\] and \\[`PastCodeHash`\\].\n    \n\n### codeByHashRefs(`H256`): `u32`[\u200b](#codebyhashrefsh256-u32 \"Direct link to codebyhashrefsh256-u32\")\n\n*   **interface**: `api.query.paras.codeByHashRefs`\n*   **summary**: The number of reference on the validation code in \\[`CodeByHash`\\] storage.\n\n### currentCodeHash(`u32`): `Option<H256>`[\u200b](#currentcodehashu32-optionh256 \"Direct link to currentcodehashu32-optionh256\")\n\n*   **interface**: `api.query.paras.currentCodeHash`\n    \n*   **summary**: The validation code hash of every live para.\n    \n    Corresponding code can be retrieved with \\[`CodeByHash`\\].\n    \n\n### futureCodeHash(`u32`): `Option<H256>`[\u200b](#futurecodehashu32-optionh256 \"Direct link to futurecodehashu32-optionh256\")\n\n*   **interface**: `api.query.paras.futureCodeHash`\n    \n*   **summary**: The actual future code hash of a para.\n    \n    Corresponding code can be retrieved with \\[`CodeByHash`\\].\n    \n\n### futureCodeUpgrades(`u32`): `Option<u32>`[\u200b](#futurecodeupgradesu32-optionu32 \"Direct link to futurecodeupgradesu32-optionu32\")\n\n*   **interface**: `api.query.paras.futureCodeUpgrades`\n*   **summary**: The block number at which the planned code change is expected for a para. The change will be applied after the first parablock for this ID included which executes in the context of a relay chain block with a number >= `expected_at`.\n\n### heads(`u32`): `Option<Bytes>`[\u200b](#headsu32-optionbytes \"Direct link to headsu32-optionbytes\")\n\n*   **interface**: `api.query.paras.heads`\n*   **summary**: The head-data of every registered para.\n\n### mostRecentContext(`u32`): `Option<u32>`[\u200b](#mostrecentcontextu32-optionu32 \"Direct link to mostrecentcontextu32-optionu32\")\n\n*   **interface**: `api.query.paras.mostRecentContext`\n*   **summary**: The context (relay-chain block number) of the most recent parachain head.\n\n### parachains(): `Vec<u32>`[\u200b](#parachains-vecu32 \"Direct link to parachains-vecu32\")\n\n*   **interface**: `api.query.paras.parachains`\n    \n*   **summary**: All lease holding parachains. Ordered ascending by `ParaId`. On demand parachains are not included.\n    \n    Consider using the \\[`ParachainsCache`\\] type of modifying.\n    \n\n### paraLifecycles(`u32`): `Option<PolkadotRuntimeParachainsParasParaLifecycle>`[\u200b](#paralifecyclesu32-optionpolkadotruntimeparachainsparasparalifecycle \"Direct link to paralifecyclesu32-optionpolkadotruntimeparachainsparasparalifecycle\")\n\n*   **interface**: `api.query.paras.paraLifecycles`\n*   **summary**: The current lifecycle of a all known Para IDs.\n\n### pastCodeHash(`(u32,u32)`): `Option<H256>`[\u200b](#pastcodehashu32u32-optionh256 \"Direct link to pastcodehashu32u32-optionh256\")\n\n*   **interface**: `api.query.paras.pastCodeHash`\n    \n*   **summary**: Actual past code hash, indicated by the para id as well as the block number at which it became outdated.\n    \n    Corresponding code can be retrieved with \\[`CodeByHash`\\].\n    \n\n### pastCodeMeta(`u32`): `PolkadotRuntimeParachainsParasParaPastCodeMeta`[\u200b](#pastcodemetau32-polkadotruntimeparachainsparasparapastcodemeta \"Direct link to pastcodemetau32-polkadotruntimeparachainsparasparapastcodemeta\")\n\n*   **interface**: `api.query.paras.pastCodeMeta`\n*   **summary**: Past code of parachains. The parachains themselves may not be registered anymore, but we also keep their code on-chain for the same amount of time as outdated code to keep it available for approval checkers.\n\n### pastCodePruning(): `Vec<(u32,u32)>`[\u200b](#pastcodepruning-vecu32u32 \"Direct link to pastcodepruning-vecu32u32\")\n\n*   **interface**: `api.query.paras.pastCodePruning`\n*   **summary**: Which paras have past code that needs pruning and the relay-chain block at which the code was replaced. Note that this is the actual height of the included block, not the expected height at which the code upgrade would be applied, although they may be equal. This is to ensure the entire acceptance period is covered, not an offset acceptance period starting from the time at which the parachain perceives a code upgrade as having occurred. Multiple entries for a single para are permitted. Ordered ascending by block number.\n\n### pvfActiveVoteList(): `Vec<H256>`[\u200b](#pvfactivevotelist-vech256 \"Direct link to pvfactivevotelist-vech256\")\n\n*   **interface**: `api.query.paras.pvfActiveVoteList`\n*   **summary**: The list of all currently active PVF votes. Auxiliary to `PvfActiveVoteMap`.\n\n### pvfActiveVoteMap(`H256`): `Option<PolkadotRuntimeParachainsParasPvfCheckActiveVoteState>`[\u200b](#pvfactivevotemaph256-optionpolkadotruntimeparachainsparaspvfcheckactivevotestate \"Direct link to pvfactivevotemaph256-optionpolkadotruntimeparachainsparaspvfcheckactivevotestate\")\n\n*   **interface**: `api.query.paras.pvfActiveVoteMap`\n    \n*   **summary**: All currently active PVF pre-checking votes.\n    \n    Invariant:\n    \n    *   There are no PVF pre-checking votes that exists in list but not in the set and vice versa.\n\n### upcomingParasGenesis(`u32`): `Option<PolkadotRuntimeParachainsParasParaGenesisArgs>`[\u200b](#upcomingparasgenesisu32-optionpolkadotruntimeparachainsparasparagenesisargs \"Direct link to upcomingparasgenesisu32-optionpolkadotruntimeparachainsparasparagenesisargs\")\n\n*   **interface**: `api.query.paras.upcomingParasGenesis`\n    \n*   **summary**: Upcoming paras instantiation arguments.\n    \n    NOTE that after PVF pre-checking is enabled the para genesis arg will have it's code set to empty. Instead, the code will be saved into the storage right away via `CodeByHash`.\n    \n\n### upcomingUpgrades(): `Vec<(u32,u32)>`[\u200b](#upcomingupgrades-vecu32u32 \"Direct link to upcomingupgrades-vecu32u32\")\n\n*   **interface**: `api.query.paras.upcomingUpgrades`\n    \n*   **summary**: The list of upcoming code upgrades. Each item is a pair of which para performs a code upgrade and at which relay-chain block it is expected at.\n    \n    Ordered ascending by block number.\n    \n\n### upgradeCooldowns(): `Vec<(u32,u32)>`[\u200b](#upgradecooldowns-vecu32u32 \"Direct link to upgradecooldowns-vecu32u32\")\n\n*   **interface**: `api.query.paras.upgradeCooldowns`\n    \n*   **summary**: The list of parachains that are awaiting for their upgrade restriction to cooldown.\n    \n    Ordered ascending by block number.\n    \n\n### upgradeGoAheadSignal(`u32`): `Option<PolkadotPrimitivesV5UpgradeGoAhead>`[\u200b](#upgradegoaheadsignalu32-optionpolkadotprimitivesv5upgradegoahead \"Direct link to upgradegoaheadsignalu32-optionpolkadotprimitivesv5upgradegoahead\")\n\n*   **interface**: `api.query.paras.upgradeGoAheadSignal`\n    \n*   **summary**: This is used by the relay-chain to communicate to a parachain a go-ahead with in the upgrade procedure.\n    \n    This value is absent when there are no upgrades scheduled or during the time the relay chain performs the checks. It is set at the first relay-chain block when the corresponding parachain can switch its upgrade function. As soon as the parachain's block is included, the value gets reset to `None`.\n    \n    NOTE that this field is used by parachains via merkle storage proofs, therefore changing the format will require migration of parachains.\n    \n\n### upgradeRestrictionSignal(`u32`): `Option<PolkadotPrimitivesV5UpgradeRestriction>`[\u200b](#upgraderestrictionsignalu32-optionpolkadotprimitivesv5upgraderestriction \"Direct link to upgraderestrictionsignalu32-optionpolkadotprimitivesv5upgraderestriction\")\n\n*   **interface**: `api.query.paras.upgradeRestrictionSignal`\n    \n*   **summary**: This is used by the relay-chain to communicate that there are restrictions for performing an upgrade for this parachain.\n    \n    This may be a because the parachain waits for the upgrade cooldown to expire. Another potential use case is when we want to perform some maintenance (such as storage migration) we could restrict upgrades to make the process simpler.\n    \n    NOTE that this field is used by parachains via merkle storage proofs, therefore changing the format will require migration of parachains.\n    \n\n* * *\n\nparaScheduler[\u200b](#parascheduler \"Direct link to paraScheduler\")\n\n----------------------------------------------------------------\n\n### availabilityCores(): `Vec<PolkadotPrimitivesV5CoreOccupied>`[\u200b](#availabilitycores-vecpolkadotprimitivesv5coreoccupied \"Direct link to availabilitycores-vecpolkadotprimitivesv5coreoccupied\")\n\n*   **interface**: `api.query.paraScheduler.availabilityCores`\n    \n*   **summary**: One entry for each availability core. Entries are `None` if the core is not currently occupied. Can be temporarily `Some` if scheduled but not occupied. The i'th parachain belongs to the i'th core, with the remaining cores all being parathread-multiplexers.\n    \n    Bounded by the maximum of either of these two values:\n    \n    *   The number of parachains and parathread multiplexers\n        \n    *   The number of validators divided by `configuration.max_validators_per_core`.\n        \n\n### claimQueue(): `BTreeMap<u32, Vec<Option<PolkadotPrimitivesV5ParasEntry>>>`[\u200b](#claimqueue-btreemapu32-vecoptionpolkadotprimitivesv5parasentry \"Direct link to claimqueue-btreemapu32-vecoptionpolkadotprimitivesv5parasentry\")\n\n*   **interface**: `api.query.paraScheduler.claimQueue`\n*   **summary**: One entry for each availability core. The `VecDeque` represents the assignments to be scheduled on that core. `None` is used to signal to not schedule the next para of the core as there is one currently being scheduled. Not using `None` here would overwrite the `CoreState` in the runtime API. The value contained here will not be valid after the end of a block. Runtime APIs should be used to determine scheduled cores/ for the upcoming block.\n\n### sessionStartBlock(): `u32`[\u200b](#sessionstartblock-u32 \"Direct link to sessionstartblock-u32\")\n\n*   **interface**: `api.query.paraScheduler.sessionStartBlock`\n    \n*   **summary**: The block number where the session start occurred. Used to track how many group rotations have occurred.\n    \n    Note that in the context of parachains modules the session change is signaled during the block and enacted at the end of the block (at the finalization stage, to be exact). Thus for all intents and purposes the effect of the session change is observed at the block following the session change, block number of which we save in this storage value.\n    \n\n### validatorGroups(): `Vec<Vec<u32>>`[\u200b](#validatorgroups-vecvecu32 \"Direct link to validatorgroups-vecvecu32\")\n\n*   **interface**: `api.query.paraScheduler.validatorGroups`\n    \n*   **summary**: All the validator groups. One for each core. Indices are into `ActiveValidators` - not the broader set of Polkadot validators, but instead just the subset used for parachains during this session.\n    \n    Bound: The number of cores is the sum of the numbers of parachains and parathread multiplexers. Reasonably, 100-1000. The dominant factor is the number of validators: safe upper bound at 10k.\n    \n\n* * *\n\nparasDisputes[\u200b](#parasdisputes \"Direct link to parasDisputes\")\n\n----------------------------------------------------------------\n\n### backersOnDisputes(`u32, H256`): `Option<BTreeSet<u32>>`[\u200b](#backersondisputesu32-h256-optionbtreesetu32 \"Direct link to backersondisputesu32-h256-optionbtreesetu32\")\n\n*   **interface**: `api.query.parasDisputes.backersOnDisputes`\n*   **summary**: Backing votes stored for each dispute. This storage is used for slashing.\n\n### disputes(`u32, H256`): `Option<PolkadotPrimitivesV5DisputeState>`[\u200b](#disputesu32-h256-optionpolkadotprimitivesv5disputestate \"Direct link to disputesu32-h256-optionpolkadotprimitivesv5disputestate\")\n\n*   **interface**: `api.query.parasDisputes.disputes`\n*   **summary**: All ongoing or concluded disputes for the last several sessions.\n\n### frozen(): `Option<u32>`[\u200b](#frozen-optionu32 \"Direct link to frozen-optionu32\")\n\n*   **interface**: `api.query.parasDisputes.frozen`\n*   **summary**: Whether the chain is frozen. Starts as `None`. When this is `Some`, the chain will not accept any new parachain blocks for backing or inclusion, and its value indicates the last valid block number in the chain. It can only be set back to `None` by governance intervention.\n\n### included(`u32, H256`): `Option<u32>`[\u200b](#includedu32-h256-optionu32 \"Direct link to includedu32-h256-optionu32\")\n\n*   **interface**: `api.query.parasDisputes.included`\n*   **summary**: All included blocks on the chain, as well as the block number in this chain that should be reverted back to if the candidate is disputed and determined to be invalid.\n\n### lastPrunedSession(): `Option<u32>`[\u200b](#lastprunedsession-optionu32 \"Direct link to lastprunedsession-optionu32\")\n\n*   **interface**: `api.query.parasDisputes.lastPrunedSession`\n*   **summary**: The last pruned session, if any. All data stored by this module references sessions.\n\n* * *\n\nparaSessionInfo[\u200b](#parasessioninfo \"Direct link to paraSessionInfo\")\n\n----------------------------------------------------------------------\n\n### accountKeys(`u32`): `Option<Vec<AccountId32>>`[\u200b](#accountkeysu32-optionvecaccountid32 \"Direct link to accountkeysu32-optionvecaccountid32\")\n\n*   **interface**: `api.query.paraSessionInfo.accountKeys`\n*   **summary**: The validator account keys of the validators actively participating in parachain consensus.\n\n### assignmentKeysUnsafe(): `Vec<PolkadotPrimitivesV5AssignmentAppPublic>`[\u200b](#assignmentkeysunsafe-vecpolkadotprimitivesv5assignmentapppublic \"Direct link to assignmentkeysunsafe-vecpolkadotprimitivesv5assignmentapppublic\")\n\n*   **interface**: `api.query.paraSessionInfo.assignmentKeysUnsafe`\n*   **summary**: Assignment keys for the current session. Note that this API is private due to it being prone to 'off-by-one' at session boundaries. When in doubt, use `Sessions` API instead.\n\n### earliestStoredSession(): `u32`[\u200b](#earlieststoredsession-u32 \"Direct link to earlieststoredsession-u32\")\n\n*   **interface**: `api.query.paraSessionInfo.earliestStoredSession`\n*   **summary**: The earliest session for which previous session info is stored.\n\n### sessionExecutorParams(`u32`): `Option<PolkadotPrimitivesV5ExecutorParams>`[\u200b](#sessionexecutorparamsu32-optionpolkadotprimitivesv5executorparams \"Direct link to sessionexecutorparamsu32-optionpolkadotprimitivesv5executorparams\")\n\n*   **interface**: `api.query.paraSessionInfo.sessionExecutorParams`\n*   **summary**: Executor parameter set for a given session index\n\n### sessions(`u32`): `Option<PolkadotPrimitivesV5SessionInfo>`[\u200b](#sessionsu32-optionpolkadotprimitivesv5sessioninfo \"Direct link to sessionsu32-optionpolkadotprimitivesv5sessioninfo\")\n\n*   **interface**: `api.query.paraSessionInfo.sessions`\n*   **summary**: Session information in a rolling window. Should have an entry in range `EarliestStoredSession..=CurrentSessionIndex`. Does not have any entries before the session index in the first session change notification.\n\n* * *\n\nparasShared[\u200b](#parasshared \"Direct link to parasShared\")\n\n----------------------------------------------------------\n\n### activeValidatorIndices(): `Vec<u32>`[\u200b](#activevalidatorindices-vecu32 \"Direct link to activevalidatorindices-vecu32\")\n\n*   **interface**: `api.query.parasShared.activeValidatorIndices`\n*   **summary**: All the validators actively participating in parachain consensus. Indices are into the broader validator set.\n\n### activeValidatorKeys(): `Vec<PolkadotPrimitivesV5ValidatorAppPublic>`[\u200b](#activevalidatorkeys-vecpolkadotprimitivesv5validatorapppublic \"Direct link to activevalidatorkeys-vecpolkadotprimitivesv5validatorapppublic\")\n\n*   **interface**: `api.query.parasShared.activeValidatorKeys`\n*   **summary**: The parachain attestation keys of the validators actively participating in parachain consensus. This should be the same length as `ActiveValidatorIndices`.\n\n### allowedRelayParents(): `PolkadotRuntimeParachainsSharedAllowedRelayParentsTracker`[\u200b](#allowedrelayparents-polkadotruntimeparachainssharedallowedrelayparentstracker \"Direct link to allowedrelayparents-polkadotruntimeparachainssharedallowedrelayparentstracker\")\n\n*   **interface**: `api.query.parasShared.allowedRelayParents`\n*   **summary**: All allowed relay-parents.\n\n### currentSessionIndex(): `u32`[\u200b](#currentsessionindex-u32 \"Direct link to currentsessionindex-u32\")\n\n*   **interface**: `api.query.parasShared.currentSessionIndex`\n*   **summary**: The current session index.\n\n* * *\n\nparasSlashing[\u200b](#parasslashing \"Direct link to parasSlashing\")\n\n----------------------------------------------------------------\n\n### unappliedSlashes(`u32, H256`): `Option<PolkadotPrimitivesV5SlashingPendingSlashes>`[\u200b](#unappliedslashesu32-h256-optionpolkadotprimitivesv5slashingpendingslashes \"Direct link to unappliedslashesu32-h256-optionpolkadotprimitivesv5slashingpendingslashes\")\n\n*   **interface**: `api.query.parasSlashing.unappliedSlashes`\n*   **summary**: Validators pending dispute slashes.\n\n### validatorSetCounts(`u32`): `Option<u32>`[\u200b](#validatorsetcountsu32-optionu32 \"Direct link to validatorsetcountsu32-optionu32\")\n\n*   **interface**: `api.query.parasSlashing.validatorSetCounts`\n*   **summary**: `ValidatorSetCount` per session.\n\n* * *\n\npreimage[\u200b](#preimage \"Direct link to preimage\")\n\n-------------------------------------------------\n\n### preimageFor(`(H256,u32)`): `Option<Bytes>`[\u200b](#preimageforh256u32-optionbytes \"Direct link to preimageforh256u32-optionbytes\")\n\n*   **interface**: `api.query.preimage.preimageFor`\n\n### statusFor(`H256`): `Option<PalletPreimageRequestStatus>`[\u200b](#statusforh256-optionpalletpreimagerequeststatus \"Direct link to statusforh256-optionpalletpreimagerequeststatus\")\n\n*   **interface**: `api.query.preimage.statusFor`\n*   **summary**: The request status of a given hash.\n\n* * *\n\nproxy[\u200b](#proxy \"Direct link to proxy\")\n\n----------------------------------------\n\n### announcements(`AccountId32`): `(Vec<PalletProxyAnnouncement>,u128)`[\u200b](#announcementsaccountid32-vecpalletproxyannouncementu128 \"Direct link to announcementsaccountid32-vecpalletproxyannouncementu128\")\n\n*   **interface**: `api.query.proxy.announcements`\n*   **summary**: The announcements made by the proxy (key).\n\n### proxies(`AccountId32`): `(Vec<PalletProxyProxyDefinition>,u128)`[\u200b](#proxiesaccountid32-vecpalletproxyproxydefinitionu128 \"Direct link to proxiesaccountid32-vecpalletproxyproxydefinitionu128\")\n\n*   **interface**: `api.query.proxy.proxies`\n*   **summary**: The set of account proxies. Maps the account which has delegated to the accounts which are being delegated to, together with the amount held on deposit.\n\n* * *\n\nrecovery[\u200b](#recovery \"Direct link to recovery\")\n\n-------------------------------------------------\n\n### activeRecoveries(`AccountId32, AccountId32`): `Option<PalletRecoveryActiveRecovery>`[\u200b](#activerecoveriesaccountid32-accountid32-optionpalletrecoveryactiverecovery \"Direct link to activerecoveriesaccountid32-accountid32-optionpalletrecoveryactiverecovery\")\n\n*   **interface**: `api.query.recovery.activeRecoveries`\n    \n*   **summary**: Active recovery attempts.\n    \n    First account is the account to be recovered, and the second account is the user trying to recover the account.\n    \n\n### proxy(`AccountId32`): `Option<AccountId32>`[\u200b](#proxyaccountid32-optionaccountid32 \"Direct link to proxyaccountid32-optionaccountid32\")\n\n*   **interface**: `api.query.recovery.proxy`\n    \n*   **summary**: The list of allowed proxy accounts.\n    \n    Map from the user who can access it to the recovered account.\n    \n\n### recoverable(`AccountId32`): `Option<PalletRecoveryRecoveryConfig>`[\u200b](#recoverableaccountid32-optionpalletrecoveryrecoveryconfig \"Direct link to recoverableaccountid32-optionpalletrecoveryrecoveryconfig\")\n\n*   **interface**: `api.query.recovery.recoverable`\n*   **summary**: The set of recoverable accounts and their recovery configuration.\n\n* * *\n\nreferenda[\u200b](#referenda \"Direct link to referenda\")\n\n----------------------------------------------------\n\n### decidingCount(`u16`): `u32`[\u200b](#decidingcountu16-u32-1 \"Direct link to decidingcountu16-u32-1\")\n\n*   **interface**: `api.query.referenda.decidingCount`\n*   **summary**: The number of referenda being decided currently.\n\n### metadataOf(`u32`): `Option<H256>`[\u200b](#metadataofu32-optionh256-1 \"Direct link to metadataofu32-optionh256-1\")\n\n*   **interface**: `api.query.referenda.metadataOf`\n    \n*   **summary**: The metadata is a general information concerning the referendum. The `PreimageHash` refers to the preimage of the `Preimages` provider which can be a JSON dump or IPFS hash of a JSON file.\n    \n    Consider a garbage collection for a metadata of finished referendums to `unrequest` (remove) large preimages.\n    \n\n### referendumCount(): `u32`[\u200b](#referendumcount-u32-1 \"Direct link to referendumcount-u32-1\")\n\n*   **interface**: `api.query.referenda.referendumCount`\n*   **summary**: The next free referendum index, aka the number of referenda started so far.\n\n### referendumInfoFor(`u32`): `Option<PalletReferendaReferendumInfoConvictionVotingTally>`[\u200b](#referenduminfoforu32-optionpalletreferendareferenduminfoconvictionvotingtally \"Direct link to referenduminfoforu32-optionpalletreferendareferenduminfoconvictionvotingtally\")\n\n*   **interface**: `api.query.referenda.referendumInfoFor`\n*   **summary**: Information concerning any given referendum.\n\n### trackQueue(`u16`): `Vec<(u32,u128)>`[\u200b](#trackqueueu16-vecu32u128 \"Direct link to trackqueueu16-vecu32u128\")\n\n*   **interface**: `api.query.referenda.trackQueue`\n    \n*   **summary**: The sorted list of referenda ready to be decided but not yet being decided, ordered by conviction-weighted approvals.\n    \n    This should be empty if `DecidingCount` is less than `TrackInfo::max_deciding`.\n    \n\n* * *\n\nregistrar[\u200b](#registrar \"Direct link to registrar\")\n\n----------------------------------------------------\n\n### nextFreeParaId(): `u32`[\u200b](#nextfreeparaid-u32 \"Direct link to nextfreeparaid-u32\")\n\n*   **interface**: `api.query.registrar.nextFreeParaId`\n*   **summary**: The next free `ParaId`.\n\n### paras(`u32`): `Option<PolkadotRuntimeCommonParasRegistrarParaInfo>`[\u200b](#parasu32-optionpolkadotruntimecommonparasregistrarparainfo \"Direct link to parasu32-optionpolkadotruntimecommonparasregistrarparainfo\")\n\n*   **interface**: `api.query.registrar.paras`\n    \n*   **summary**: Amount held on deposit for each para and the original depositor.\n    \n    The given account ID is responsible for registering the code and initial head data, but may only do so if it isn't yet registered. (After that, it's up to governance to do so.)\n    \n\n### pendingSwap(`u32`): `Option<u32>`[\u200b](#pendingswapu32-optionu32 \"Direct link to pendingswapu32-optionu32\")\n\n*   **interface**: `api.query.registrar.pendingSwap`\n*   **summary**: Pending swap operations.\n\n* * *\n\nscheduler[\u200b](#scheduler \"Direct link to scheduler\")\n\n----------------------------------------------------\n\n### agenda(`u32`): `Vec<Option<PalletSchedulerScheduled>>`[\u200b](#agendau32-vecoptionpalletschedulerscheduled \"Direct link to agendau32-vecoptionpalletschedulerscheduled\")\n\n*   **interface**: `api.query.scheduler.agenda`\n*   **summary**: Items to be executed, indexed by the block number that they should be executed on.\n\n### incompleteSince(): `Option<u32>`[\u200b](#incompletesince-optionu32 \"Direct link to incompletesince-optionu32\")\n\n*   **interface**: `api.query.scheduler.incompleteSince`\n\n### lookup(`[u8;32]`): `Option<(u32,u32)>`[\u200b](#lookupu832-optionu32u32 \"Direct link to lookupu832-optionu32u32\")\n\n*   **interface**: `api.query.scheduler.lookup`\n    \n*   **summary**: Lookup from a name to the block number and index of the task.\n    \n    For v3 -> v4 the previously unbounded identities are Blake2-256 hashed to form the v4 identities.\n    \n\n* * *\n\nsession[\u200b](#session \"Direct link to session\")\n\n----------------------------------------------\n\n### currentIndex(): `u32`[\u200b](#currentindex-u32 \"Direct link to currentindex-u32\")\n\n*   **interface**: `api.query.session.currentIndex`\n*   **summary**: Current index of the session.\n\n### disabledValidators(): `Vec<u32>`[\u200b](#disabledvalidators-vecu32 \"Direct link to disabledvalidators-vecu32\")\n\n*   **interface**: `api.query.session.disabledValidators`\n    \n*   **summary**: Indices of disabled validators.\n    \n    The vec is always kept sorted so that we can find whether a given validator is disabled using binary search. It gets cleared when `on_session_ending` returns a new set of identities.\n    \n\n### keyOwner(`(SpCoreCryptoKeyTypeId,Bytes)`): `Option<AccountId32>`[\u200b](#keyownerspcorecryptokeytypeidbytes-optionaccountid32 \"Direct link to keyownerspcorecryptokeytypeidbytes-optionaccountid32\")\n\n*   **interface**: `api.query.session.keyOwner`\n*   **summary**: The owner of a key. The key is the `KeyTypeId` + the encoded key.\n\n### nextKeys(`AccountId32`): `Option<KusamaRuntimeSessionKeys>`[\u200b](#nextkeysaccountid32-optionkusamaruntimesessionkeys \"Direct link to nextkeysaccountid32-optionkusamaruntimesessionkeys\")\n\n*   **interface**: `api.query.session.nextKeys`\n*   **summary**: The next session keys for a validator.\n\n### queuedChanged(): `bool`[\u200b](#queuedchanged-bool \"Direct link to queuedchanged-bool\")\n\n*   **interface**: `api.query.session.queuedChanged`\n*   **summary**: True if the underlying economic identities or weighting behind the validators has changed in the queued validator set.\n\n### queuedKeys(): `Vec<(AccountId32,KusamaRuntimeSessionKeys)>`[\u200b](#queuedkeys-vecaccountid32kusamaruntimesessionkeys \"Direct link to queuedkeys-vecaccountid32kusamaruntimesessionkeys\")\n\n*   **interface**: `api.query.session.queuedKeys`\n*   **summary**: The queued keys for the next session. When the next session begins, these keys will be used to determine the validator's session keys.\n\n### validators(): `Vec<AccountId32>`[\u200b](#validators-vecaccountid32 \"Direct link to validators-vecaccountid32\")\n\n*   **interface**: `api.query.session.validators`\n*   **summary**: The current set of validators.\n\n* * *\n\nslots[\u200b](#slots \"Direct link to slots\")\n\n----------------------------------------\n\n### leases(`u32`): `Vec<Option<(AccountId32,u128)>>`[\u200b](#leasesu32-vecoptionaccountid32u128 \"Direct link to leasesu32-vecoptionaccountid32u128\")\n\n*   **interface**: `api.query.slots.leases`\n    \n*   **summary**: Amounts held on deposit for each (possibly future) leased parachain.\n    \n    The actual amount locked on its behalf by any account at any time is the maximum of the second values of the items in this list whose first value is the account.\n    \n    The first item in the list is the amount locked for the current Lease Period. Following items are for the subsequent lease periods.\n    \n    The default value (an empty list) implies that the parachain no longer exists (or never existed) as far as this pallet is concerned.\n    \n    If a parachain doesn't exist _yet_ but is scheduled to exist in the future, then it will be left-padded with one or more `None`s to denote the fact that nothing is held on deposit for the non-existent chain currently, but is held at some point in the future.\n    \n    It is illegal for a `None` value to trail in the list.\n    \n\n* * *\n\nsociety[\u200b](#society \"Direct link to society\")\n\n----------------------------------------------\n\n### bids(): `Vec<PalletSocietyBid>`[\u200b](#bids-vecpalletsocietybid \"Direct link to bids-vecpalletsocietybid\")\n\n*   **interface**: `api.query.society.bids`\n*   **summary**: The current bids, stored ordered by the value of the bid.\n\n### candidates(`AccountId32`): `Option<PalletSocietyCandidacy>`[\u200b](#candidatesaccountid32-optionpalletsocietycandidacy \"Direct link to candidatesaccountid32-optionpalletsocietycandidacy\")\n\n*   **interface**: `api.query.society.candidates`\n\n### challengeRoundCount(): `u32`[\u200b](#challengeroundcount-u32 \"Direct link to challengeroundcount-u32\")\n\n*   **interface**: `api.query.society.challengeRoundCount`\n*   **summary**: The number of challenge rounds there have been. Used to identify stale DefenderVotes.\n\n### defenderVotes(`u32, AccountId32`): `Option<PalletSocietyVote>`[\u200b](#defendervotesu32-accountid32-optionpalletsocietyvote \"Direct link to defendervotesu32-accountid32-optionpalletsocietyvote\")\n\n*   **interface**: `api.query.society.defenderVotes`\n*   **summary**: Votes for the defender, keyed by challenge round.\n\n### defending(): `Option<(AccountId32,AccountId32,PalletSocietyTally)>`[\u200b](#defending-optionaccountid32accountid32palletsocietytally \"Direct link to defending-optionaccountid32accountid32palletsocietytally\")\n\n*   **interface**: `api.query.society.defending`\n*   **summary**: The defending member currently being challenged, along with a running tally of votes.\n\n### founder(): `Option<AccountId32>`[\u200b](#founder-optionaccountid32 \"Direct link to founder-optionaccountid32\")\n\n*   **interface**: `api.query.society.founder`\n*   **summary**: The first member.\n\n### head(): `Option<AccountId32>`[\u200b](#head-optionaccountid32 \"Direct link to head-optionaccountid32\")\n\n*   **interface**: `api.query.society.head`\n*   **summary**: The most primary from the most recently approved rank 0 members in the society.\n\n### memberByIndex(`u32`): `Option<AccountId32>`[\u200b](#memberbyindexu32-optionaccountid32 \"Direct link to memberbyindexu32-optionaccountid32\")\n\n*   **interface**: `api.query.society.memberByIndex`\n*   **summary**: The current items in `Members` keyed by their unique index. Keys are densely populated `0..MemberCount` (does not include `MemberCount`).\n\n### memberCount(): `u32`[\u200b](#membercount-u32 \"Direct link to membercount-u32\")\n\n*   **interface**: `api.query.society.memberCount`\n*   **summary**: The number of items in `Members` currently. (Doesn't include `SuspendedMembers`.)\n\n### members(`AccountId32`): `Option<PalletSocietyMemberRecord>`[\u200b](#membersaccountid32-optionpalletsocietymemberrecord \"Direct link to membersaccountid32-optionpalletsocietymemberrecord\")\n\n*   **interface**: `api.query.society.members`\n*   **summary**: The current members and their rank. Doesn't include `SuspendedMembers`.\n\n### nextHead(): `Option<PalletSocietyIntakeRecord>`[\u200b](#nexthead-optionpalletsocietyintakerecord \"Direct link to nexthead-optionpalletsocietyintakerecord\")\n\n*   **interface**: `api.query.society.nextHead`\n*   **summary**: At the end of the claim period, this contains the most recently approved members (along with their bid and round ID) who is from the most recent round with the lowest bid. They will become the new `Head`.\n\n### parameters(): `Option<PalletSocietyGroupParams>`[\u200b](#parameters-optionpalletsocietygroupparams \"Direct link to parameters-optionpalletsocietygroupparams\")\n\n*   **interface**: `api.query.society.parameters`\n*   **summary**: The max number of members for the society at one time.\n\n### payouts(`AccountId32`): `PalletSocietyPayoutRecord`[\u200b](#payoutsaccountid32-palletsocietypayoutrecord \"Direct link to payoutsaccountid32-palletsocietypayoutrecord\")\n\n*   **interface**: `api.query.society.payouts`\n*   **summary**: Information regarding rank-0 payouts, past and future.\n\n### pot(): `u128`[\u200b](#pot-u128 \"Direct link to pot-u128\")\n\n*   **interface**: `api.query.society.pot`\n*   **summary**: Amount of our account balance that is specifically for the next round's bid(s).\n\n### roundCount(): `u32`[\u200b](#roundcount-u32 \"Direct link to roundcount-u32\")\n\n*   **interface**: `api.query.society.roundCount`\n*   **summary**: The number of rounds which have passed.\n\n### rules(): `Option<H256>`[\u200b](#rules-optionh256 \"Direct link to rules-optionh256\")\n\n*   **interface**: `api.query.society.rules`\n*   **summary**: A hash of the rules of this society concerning membership. Can only be set once and only by the founder.\n\n### skeptic(): `Option<AccountId32>`[\u200b](#skeptic-optionaccountid32 \"Direct link to skeptic-optionaccountid32\")\n\n*   **interface**: `api.query.society.skeptic`\n*   **summary**: The current skeptic.\n\n### suspendedMembers(`AccountId32`): `Option<PalletSocietyMemberRecord>`[\u200b](#suspendedmembersaccountid32-optionpalletsocietymemberrecord \"Direct link to suspendedmembersaccountid32-optionpalletsocietymemberrecord\")\n\n*   **interface**: `api.query.society.suspendedMembers`\n*   **summary**: The set of suspended members, with their old membership record.\n\n### voteClearCursor(`AccountId32`): `Option<Bytes>`[\u200b](#voteclearcursoraccountid32-optionbytes \"Direct link to voteclearcursoraccountid32-optionbytes\")\n\n*   **interface**: `api.query.society.voteClearCursor`\n*   **summary**: Clear-cursor for Vote, map from Candidate -> (Maybe) Cursor.\n\n### votes(`AccountId32, AccountId32`): `Option<PalletSocietyVote>`[\u200b](#votesaccountid32-accountid32-optionpalletsocietyvote \"Direct link to votesaccountid32-accountid32-optionpalletsocietyvote\")\n\n*   **interface**: `api.query.society.votes`\n*   **summary**: Double map from Candidate -> Voter -> (Maybe) Vote.\n\n* * *\n\nstaking[\u200b](#staking \"Direct link to staking\")\n\n----------------------------------------------\n\n### activeEra(): `Option<PalletStakingActiveEraInfo>`[\u200b](#activeera-optionpalletstakingactiveerainfo \"Direct link to activeera-optionpalletstakingactiveerainfo\")\n\n*   **interface**: `api.query.staking.activeEra`\n    \n*   **summary**: The active era information, it holds index and start.\n    \n    The active era is the era being currently rewarded. Validator set of this era must be equal to \\[`SessionInterface::validators`\\].\n    \n\n### bonded(`AccountId32`): `Option<AccountId32>`[\u200b](#bondedaccountid32-optionaccountid32 \"Direct link to bondedaccountid32-optionaccountid32\")\n\n*   **interface**: `api.query.staking.bonded`\n    \n*   **summary**: Map from all locked \"stash\" accounts to the controller account.\n    \n    TWOX-NOTE: SAFE since `AccountId` is a secure hash.\n    \n\n### bondedEras(): `Vec<(u32,u32)>`[\u200b](#bondederas-vecu32u32 \"Direct link to bondederas-vecu32u32\")\n\n*   **interface**: `api.query.staking.bondedEras`\n    \n*   **summary**: A mapping from still-bonded eras to the first session index of that era.\n    \n    Must contains information for eras for the range: `[active_era - bounding_duration; active_era]`\n    \n\n### canceledSlashPayout(): `u128`[\u200b](#canceledslashpayout-u128 \"Direct link to canceledslashpayout-u128\")\n\n*   **interface**: `api.query.staking.canceledSlashPayout`\n*   **summary**: The amount of currency given to reporters of a slash event which was canceled by extraordinary circumstances (e.g. governance).\n\n### chillThreshold(): `Option<Percent>`[\u200b](#chillthreshold-optionpercent \"Direct link to chillthreshold-optionpercent\")\n\n*   **interface**: `api.query.staking.chillThreshold`\n*   **summary**: The threshold for when users can start calling `chill_other` for other validators / nominators. The threshold is compared to the actual number of validators / nominators (`CountFor*`) in the system compared to the configured max (`Max*Count`).\n\n### counterForNominators(): `u32`[\u200b](#counterfornominators-u32 \"Direct link to counterfornominators-u32\")\n\n*   **interface**: `api.query.staking.counterForNominators`\n*   **summary**: Counter for the related counted storage map\n\n### counterForValidators(): `u32`[\u200b](#counterforvalidators-u32 \"Direct link to counterforvalidators-u32\")\n\n*   **interface**: `api.query.staking.counterForValidators`\n*   **summary**: Counter for the related counted storage map\n\n### currentEra(): `Option<u32>`[\u200b](#currentera-optionu32 \"Direct link to currentera-optionu32\")\n\n*   **interface**: `api.query.staking.currentEra`\n    \n*   **summary**: The current era index.\n    \n    This is the latest planned era, depending on how the Session pallet queues the validator set, it might be active or not.\n    \n\n### currentPlannedSession(): `u32`[\u200b](#currentplannedsession-u32 \"Direct link to currentplannedsession-u32\")\n\n*   **interface**: `api.query.staking.currentPlannedSession`\n    \n*   **summary**: The last planned session scheduled by the session pallet.\n    \n    This is basically in sync with the call to \\[`pallet_session::SessionManager::new_session`\\].\n    \n\n### erasRewardPoints(`u32`): `PalletStakingEraRewardPoints`[\u200b](#erasrewardpointsu32-palletstakingerarewardpoints \"Direct link to erasrewardpointsu32-palletstakingerarewardpoints\")\n\n*   **interface**: `api.query.staking.erasRewardPoints`\n*   **summary**: Rewards for the last `HISTORY_DEPTH` eras. If reward hasn't been set or has been removed then 0 reward is returned.\n\n### erasStakers(`u32, AccountId32`): `PalletStakingExposure`[\u200b](#erasstakersu32-accountid32-palletstakingexposure \"Direct link to erasstakersu32-accountid32-palletstakingexposure\")\n\n*   **interface**: `api.query.staking.erasStakers`\n    \n*   **summary**: Exposure of validator at era.\n    \n    This is keyed first by the era index to allow bulk deletion and then the stash account.\n    \n    Is it removed after `HISTORY_DEPTH` eras. If stakers hasn't been set or has been removed then empty exposure is returned.\n    \n\n### erasStakersClipped(`u32, AccountId32`): `PalletStakingExposure`[\u200b](#erasstakersclippedu32-accountid32-palletstakingexposure \"Direct link to erasstakersclippedu32-accountid32-palletstakingexposure\")\n\n*   **interface**: `api.query.staking.erasStakersClipped`\n    \n*   **summary**: Clipped Exposure of validator at era.\n    \n    This is similar to \\[`ErasStakers`\\] but number of nominators exposed is reduced to the `T::MaxNominatorRewardedPerValidator` biggest stakers. (Note: the field `total` and `own` of the exposure remains unchanged). This is used to limit the i/o cost for the nominator payout.\n    \n    This is keyed fist by the era index to allow bulk deletion and then the stash account.\n    \n    Is it removed after `HISTORY_DEPTH` eras. If stakers hasn't been set or has been removed then empty exposure is returned.\n    \n\n### erasStartSessionIndex(`u32`): `Option<u32>`[\u200b](#erasstartsessionindexu32-optionu32 \"Direct link to erasstartsessionindexu32-optionu32\")\n\n*   **interface**: `api.query.staking.erasStartSessionIndex`\n    \n*   **summary**: The session index at which the era start for the last `HISTORY_DEPTH` eras.\n    \n    Note: This tracks the starting session (i.e. session index when era start being active) for the eras in `[CurrentEra - HISTORY_DEPTH, CurrentEra]`.\n    \n\n### erasTotalStake(`u32`): `u128`[\u200b](#erastotalstakeu32-u128 \"Direct link to erastotalstakeu32-u128\")\n\n*   **interface**: `api.query.staking.erasTotalStake`\n*   **summary**: The total amount staked for the last `HISTORY_DEPTH` eras. If total hasn't been set or has been removed then 0 stake is returned.\n\n### erasValidatorPrefs(`u32, AccountId32`): `PalletStakingValidatorPrefs`[\u200b](#erasvalidatorprefsu32-accountid32-palletstakingvalidatorprefs \"Direct link to erasvalidatorprefsu32-accountid32-palletstakingvalidatorprefs\")\n\n*   **interface**: `api.query.staking.erasValidatorPrefs`\n    \n*   **summary**: Similar to `ErasStakers`, this holds the preferences of validators.\n    \n    This is keyed first by the era index to allow bulk deletion and then the stash account.\n    \n    Is it removed after `HISTORY_DEPTH` eras.\n    \n\n### erasValidatorReward(`u32`): `Option<u128>`[\u200b](#erasvalidatorrewardu32-optionu128 \"Direct link to erasvalidatorrewardu32-optionu128\")\n\n*   **interface**: `api.query.staking.erasValidatorReward`\n    \n*   **summary**: The total validator era payout for the last `HISTORY_DEPTH` eras.\n    \n    Eras that haven't finished yet or has been removed doesn't have reward.\n    \n\n### forceEra(): `PalletStakingForcing`[\u200b](#forceera-palletstakingforcing \"Direct link to forceera-palletstakingforcing\")\n\n*   **interface**: `api.query.staking.forceEra`\n*   **summary**: Mode of era forcing.\n\n### invulnerables(): `Vec<AccountId32>`[\u200b](#invulnerables-vecaccountid32 \"Direct link to invulnerables-vecaccountid32\")\n\n*   **interface**: `api.query.staking.invulnerables`\n*   **summary**: Any validators that may never be slashed or forcibly kicked. It's a Vec since they're easy to initialize and the performance hit is minimal (we expect no more than four invulnerables) and restricted to testnets.\n\n### ledger(`AccountId32`): `Option<PalletStakingStakingLedger>`[\u200b](#ledgeraccountid32-optionpalletstakingstakingledger \"Direct link to ledgeraccountid32-optionpalletstakingstakingledger\")\n\n*   **interface**: `api.query.staking.ledger`\n*   **summary**: Map from all (unlocked) \"controller\" accounts to the info regarding the staking.\n\n### maxNominatorsCount(): `Option<u32>`[\u200b](#maxnominatorscount-optionu32 \"Direct link to maxnominatorscount-optionu32\")\n\n*   **interface**: `api.query.staking.maxNominatorsCount`\n    \n*   **summary**: The maximum nominator count before we stop allowing new validators to join.\n    \n    When this value is not set, no limits are enforced.\n    \n\n### maxValidatorsCount(): `Option<u32>`[\u200b](#maxvalidatorscount-optionu32 \"Direct link to maxvalidatorscount-optionu32\")\n\n*   **interface**: `api.query.staking.maxValidatorsCount`\n    \n*   **summary**: The maximum validator count before we stop allowing new validators to join.\n    \n    When this value is not set, no limits are enforced.\n    \n\n### minCommission(): `Perbill`[\u200b](#mincommission-perbill \"Direct link to mincommission-perbill\")\n\n*   **interface**: `api.query.staking.minCommission`\n    \n*   **summary**: The minimum amount of commission that validators can set.\n    \n    If set to `0`, no limit exists.\n    \n\n### minimumActiveStake(): `u128`[\u200b](#minimumactivestake-u128 \"Direct link to minimumactivestake-u128\")\n\n*   **interface**: `api.query.staking.minimumActiveStake`\n*   **summary**: The minimum active nominator stake of the last successful election.\n\n### minimumValidatorCount(): `u32`[\u200b](#minimumvalidatorcount-u32 \"Direct link to minimumvalidatorcount-u32\")\n\n*   **interface**: `api.query.staking.minimumValidatorCount`\n*   **summary**: Minimum number of staking participants before emergency conditions are imposed.\n\n### minNominatorBond(): `u128`[\u200b](#minnominatorbond-u128 \"Direct link to minnominatorbond-u128\")\n\n*   **interface**: `api.query.staking.minNominatorBond`\n*   **summary**: The minimum active bond to become and maintain the role of a nominator.\n\n### minValidatorBond(): `u128`[\u200b](#minvalidatorbond-u128 \"Direct link to minvalidatorbond-u128\")\n\n*   **interface**: `api.query.staking.minValidatorBond`\n*   **summary**: The minimum active bond to become and maintain the role of a validator.\n\n### nominators(`AccountId32`): `Option<PalletStakingNominations>`[\u200b](#nominatorsaccountid32-optionpalletstakingnominations \"Direct link to nominatorsaccountid32-optionpalletstakingnominations\")\n\n*   **interface**: `api.query.staking.nominators`\n    \n*   **summary**: The map from nominator stash key to their nomination preferences, namely the validators that they wish to support.\n    \n    Note that the keys of this storage map might become non-decodable in case the account's \\[`NominationsQuota::MaxNominations`\\] configuration is decreased. In this rare case, these nominators are still existent in storage, their key is correct and retrievable (i.e. `contains_key` indicates that they exist), but their value cannot be decoded. Therefore, the non-decodable nominators will effectively not-exist, until they re-submit their preferences such that it is within the bounds of the newly set `Config::MaxNominations`.\n    \n    This implies that `::iter_keys().count()` and `::iter().count()` might return different values for this map. Moreover, the main `::count()` is aligned with the former, namely the number of keys that exist.\n    \n    Lastly, if any of the nominators become non-decodable, they can be chilled immediately via \\[`Call::chill_other`\\] dispatchable by anyone.\n    \n    TWOX-NOTE: SAFE since `AccountId` is a secure hash.\n    \n\n### nominatorSlashInEra(`u32, AccountId32`): `Option<u128>`[\u200b](#nominatorslashinerau32-accountid32-optionu128 \"Direct link to nominatorslashinerau32-accountid32-optionu128\")\n\n*   **interface**: `api.query.staking.nominatorSlashInEra`\n*   **summary**: All slashing events on nominators, mapped by era to the highest slash value of the era.\n\n### offendingValidators(): `Vec<(u32,bool)>`[\u200b](#offendingvalidators-vecu32bool \"Direct link to offendingvalidators-vecu32bool\")\n\n*   **interface**: `api.query.staking.offendingValidators`\n    \n*   **summary**: Indices of validators that have offended in the active era and whether they are currently disabled.\n    \n    This value should be a superset of disabled validators since not all offences lead to the validator being disabled (if there was no slash). This is needed to track the percentage of validators that have offended in the current era, ensuring a new era is forced if `OffendingValidatorsThreshold` is reached. The vec is always kept sorted so that we can find whether a given validator has previously offended using binary search. It gets cleared when the era ends.\n    \n\n### payee(`AccountId32`): `PalletStakingRewardDestination`[\u200b](#payeeaccountid32-palletstakingrewarddestination \"Direct link to payeeaccountid32-palletstakingrewarddestination\")\n\n*   **interface**: `api.query.staking.payee`\n    \n*   **summary**: Where the reward payment should be made. Keyed by stash.\n    \n    TWOX-NOTE: SAFE since `AccountId` is a secure hash.\n    \n\n### slashingSpans(`AccountId32`): `Option<PalletStakingSlashingSlashingSpans>`[\u200b](#slashingspansaccountid32-optionpalletstakingslashingslashingspans \"Direct link to slashingspansaccountid32-optionpalletstakingslashingslashingspans\")\n\n*   **interface**: `api.query.staking.slashingSpans`\n*   **summary**: Slashing spans for stash accounts.\n\n### slashRewardFraction(): `Perbill`[\u200b](#slashrewardfraction-perbill \"Direct link to slashrewardfraction-perbill\")\n\n*   **interface**: `api.query.staking.slashRewardFraction`\n    \n*   **summary**: The percentage of the slash that is distributed to reporters.\n    \n    The rest of the slashed value is handled by the `Slash`.\n    \n\n### spanSlash(`(AccountId32,u32)`): `PalletStakingSlashingSpanRecord`[\u200b](#spanslashaccountid32u32-palletstakingslashingspanrecord \"Direct link to spanslashaccountid32u32-palletstakingslashingspanrecord\")\n\n*   **interface**: `api.query.staking.spanSlash`\n*   **summary**: Records information about the maximum slash of a stash within a slashing span, as well as how much reward has been paid out.\n\n### unappliedSlashes(`u32`): `Vec<PalletStakingUnappliedSlash>`[\u200b](#unappliedslashesu32-vecpalletstakingunappliedslash \"Direct link to unappliedslashesu32-vecpalletstakingunappliedslash\")\n\n*   **interface**: `api.query.staking.unappliedSlashes`\n*   **summary**: All unapplied slashes that are queued for later.\n\n### validatorCount(): `u32`[\u200b](#validatorcount-u32 \"Direct link to validatorcount-u32\")\n\n*   **interface**: `api.query.staking.validatorCount`\n*   **summary**: The ideal number of active validators.\n\n### validators(`AccountId32`): `PalletStakingValidatorPrefs`[\u200b](#validatorsaccountid32-palletstakingvalidatorprefs \"Direct link to validatorsaccountid32-palletstakingvalidatorprefs\")\n\n*   **interface**: `api.query.staking.validators`\n    \n*   **summary**: The map from (wannabe) validator stash key to the preferences of that validator.\n    \n    TWOX-NOTE: SAFE since `AccountId` is a secure hash.\n    \n\n### validatorSlashInEra(`u32, AccountId32`): `Option<(Perbill,u128)>`[\u200b](#validatorslashinerau32-accountid32-optionperbillu128 \"Direct link to validatorslashinerau32-accountid32-optionperbillu128\")\n\n*   **interface**: `api.query.staking.validatorSlashInEra`\n*   **summary**: All slashing events on validators, mapped by era to the highest slash proportion and slash value of the era.\n\n* * *\n\nstateTrieMigration[\u200b](#statetriemigration \"Direct link to stateTrieMigration\")\n\n-------------------------------------------------------------------------------\n\n### autoLimits(): `Option<PalletStateTrieMigrationMigrationLimits>`[\u200b](#autolimits-optionpalletstatetriemigrationmigrationlimits \"Direct link to autolimits-optionpalletstatetriemigrationmigrationlimits\")\n\n*   **interface**: `api.query.stateTrieMigration.autoLimits`\n    \n*   **summary**: The limits that are imposed on automatic migrations.\n    \n    If set to None, then no automatic migration happens.\n    \n\n### migrationProcess(): `PalletStateTrieMigrationMigrationTask`[\u200b](#migrationprocess-palletstatetriemigrationmigrationtask \"Direct link to migrationprocess-palletstatetriemigrationmigrationtask\")\n\n*   **interface**: `api.query.stateTrieMigration.migrationProcess`\n    \n*   **summary**: Migration progress.\n    \n    This stores the snapshot of the last migrated keys. It can be set into motion and move forward by any of the means provided by this pallet.\n    \n\n### signedMigrationMaxLimits(): `Option<PalletStateTrieMigrationMigrationLimits>`[\u200b](#signedmigrationmaxlimits-optionpalletstatetriemigrationmigrationlimits \"Direct link to signedmigrationmaxlimits-optionpalletstatetriemigrationmigrationlimits\")\n\n*   **interface**: `api.query.stateTrieMigration.signedMigrationMaxLimits`\n    \n*   **summary**: The maximum limits that the signed migration could use.\n    \n    If not set, no signed submission is allowed.\n    \n\n* * *\n\nsubstrate[\u200b](#substrate \"Direct link to substrate\")\n\n----------------------------------------------------\n\n_These are well-known keys that are always available to the runtime implementation of any Substrate-based network._\n\n### changesTrieConfig(): `u32`[\u200b](#changestrieconfig-u32 \"Direct link to changestrieconfig-u32\")\n\n*   **interface**: `api.query.substrate.changesTrieConfig`\n*   **summary**: Changes trie configuration is stored under this key.\n\n### childStorageKeyPrefix(): `u32`[\u200b](#childstoragekeyprefix-u32 \"Direct link to childstoragekeyprefix-u32\")\n\n*   **interface**: `api.query.substrate.childStorageKeyPrefix`\n*   **summary**: Prefix of child storage keys.\n\n### code(): `Bytes`[\u200b](#code-bytes \"Direct link to code-bytes\")\n\n*   **interface**: `api.query.substrate.code`\n*   **summary**: Wasm code of the runtime.\n\n### extrinsicIndex(): `u32`[\u200b](#extrinsicindex-u32 \"Direct link to extrinsicindex-u32\")\n\n*   **interface**: `api.query.substrate.extrinsicIndex`\n*   **summary**: Current extrinsic index (u32) is stored under this key.\n\n### heapPages(): `u64`[\u200b](#heappages-u64 \"Direct link to heappages-u64\")\n\n*   **interface**: `api.query.substrate.heapPages`\n*   **summary**: Number of wasm linear memory pages required for execution of the runtime.\n\n### intrablockEntropy(): `[u8;32]`[\u200b](#intrablockentropy-u832 \"Direct link to intrablockentropy-u832\")\n\n*   **interface**: `api.query.substrate.intrablockEntropy`\n*   **summary**: Current intra-block entropy (a universally unique `[u8; 32]` value) is stored here.\n\n* * *\n\nsystem[\u200b](#system \"Direct link to system\")\n\n-------------------------------------------\n\n### account(`AccountId32`): `FrameSystemAccountInfo`[\u200b](#accountaccountid32-framesystemaccountinfo \"Direct link to accountaccountid32-framesystemaccountinfo\")\n\n*   **interface**: `api.query.system.account`\n*   **summary**: The full account information for a particular account ID.\n\n### allExtrinsicsLen(): `Option<u32>`[\u200b](#allextrinsicslen-optionu32 \"Direct link to allextrinsicslen-optionu32\")\n\n*   **interface**: `api.query.system.allExtrinsicsLen`\n*   **summary**: Total length (in bytes) for all extrinsics put together, for the current block.\n\n### blockHash(`u32`): `H256`[\u200b](#blockhashu32-h256 \"Direct link to blockhashu32-h256\")\n\n*   **interface**: `api.query.system.blockHash`\n*   **summary**: Map of block numbers to block hashes.\n\n### blockWeight(): `FrameSupportDispatchPerDispatchClassWeight`[\u200b](#blockweight-framesupportdispatchperdispatchclassweight \"Direct link to blockweight-framesupportdispatchperdispatchclassweight\")\n\n*   **interface**: `api.query.system.blockWeight`\n*   **summary**: The current weight for the block.\n\n### digest(): `SpRuntimeDigest`[\u200b](#digest-spruntimedigest \"Direct link to digest-spruntimedigest\")\n\n*   **interface**: `api.query.system.digest`\n*   **summary**: Digest of the current block, also part of the block header.\n\n### eventCount(): `u32`[\u200b](#eventcount-u32 \"Direct link to eventcount-u32\")\n\n*   **interface**: `api.query.system.eventCount`\n*   **summary**: The number of events in the `Events<T>` list.\n\n### events(): `Vec<FrameSystemEventRecord>`[\u200b](#events-vecframesystemeventrecord \"Direct link to events-vecframesystemeventrecord\")\n\n*   **interface**: `api.query.system.events`\n    \n*   **summary**: Events deposited for the current block.\n    \n    NOTE: The item is unbound and should therefore never be read on chain. It could otherwise inflate the PoV size of a block.\n    \n    Events have a large in-memory size. Box the events to not go out-of-memory just in case someone still reads them from within the runtime.\n    \n\n### eventTopics(`H256`): `Vec<(u32,u32)>`[\u200b](#eventtopicsh256-vecu32u32 \"Direct link to eventtopicsh256-vecu32u32\")\n\n*   **interface**: `api.query.system.eventTopics`\n    \n*   **summary**: Mapping between a topic (represented by T::Hash) and a vector of indexes of events in the `<Events<T>>` list.\n    \n    All topic vectors have deterministic storage locations depending on the topic. This allows light-clients to leverage the changes trie storage tracking mechanism and in case of changes fetch the list of events of interest.\n    \n    The value has the type `(BlockNumberFor<T>, EventIndex)` because if we used only just the `EventIndex` then in case if the topic has the same contents on the next block no notification will be triggered thus the event might be lost.\n    \n\n### executionPhase(): `Option<FrameSystemPhase>`[\u200b](#executionphase-optionframesystemphase \"Direct link to executionphase-optionframesystemphase\")\n\n*   **interface**: `api.query.system.executionPhase`\n*   **summary**: The execution phase of the block.\n\n### extrinsicCount(): `Option<u32>`[\u200b](#extrinsiccount-optionu32 \"Direct link to extrinsiccount-optionu32\")\n\n*   **interface**: `api.query.system.extrinsicCount`\n*   **summary**: Total extrinsics count for the current block.\n\n### extrinsicData(`u32`): `Bytes`[\u200b](#extrinsicdatau32-bytes \"Direct link to extrinsicdatau32-bytes\")\n\n*   **interface**: `api.query.system.extrinsicData`\n*   **summary**: Extrinsics data for the current block (maps an extrinsic's index to its data).\n\n### lastRuntimeUpgrade(): `Option<FrameSystemLastRuntimeUpgradeInfo>`[\u200b](#lastruntimeupgrade-optionframesystemlastruntimeupgradeinfo \"Direct link to lastruntimeupgrade-optionframesystemlastruntimeupgradeinfo\")\n\n*   **interface**: `api.query.system.lastRuntimeUpgrade`\n*   **summary**: Stores the `spec_version` and `spec_name` of when the last runtime upgrade happened.\n\n### number(): `u32`[\u200b](#number-u32 \"Direct link to number-u32\")\n\n*   **interface**: `api.query.system.number`\n*   **summary**: The current block number being processed. Set by `execute_block`.\n\n### parentHash(): `H256`[\u200b](#parenthash-h256 \"Direct link to parenthash-h256\")\n\n*   **interface**: `api.query.system.parentHash`\n*   **summary**: Hash of the previous block.\n\n### upgradedToTripleRefCount(): `bool`[\u200b](#upgradedtotriplerefcount-bool \"Direct link to upgradedtotriplerefcount-bool\")\n\n*   **interface**: `api.query.system.upgradedToTripleRefCount`\n*   **summary**: True if we have upgraded so that AccountInfo contains three types of `RefCount`. False (default) if not.\n\n### upgradedToU32RefCount(): `bool`[\u200b](#upgradedtou32refcount-bool \"Direct link to upgradedtou32refcount-bool\")\n\n*   **interface**: `api.query.system.upgradedToU32RefCount`\n*   **summary**: True if we have upgraded so that `type RefCount` is `u32`. False (default) if not.\n\n* * *\n\ntimestamp[\u200b](#timestamp \"Direct link to timestamp\")\n\n----------------------------------------------------\n\n### didUpdate(): `bool`[\u200b](#didupdate-bool \"Direct link to didupdate-bool\")\n\n*   **interface**: `api.query.timestamp.didUpdate`\n*   **summary**: Did the timestamp get updated in this block?\n\n### now(): `u64`[\u200b](#now-u64 \"Direct link to now-u64\")\n\n*   **interface**: `api.query.timestamp.now`\n*   **summary**: Current time for the current block.\n\n* * *\n\ntransactionPayment[\u200b](#transactionpayment \"Direct link to transactionPayment\")\n\n-------------------------------------------------------------------------------\n\n### nextFeeMultiplier(): `u128`[\u200b](#nextfeemultiplier-u128 \"Direct link to nextfeemultiplier-u128\")\n\n*   **interface**: `api.query.transactionPayment.nextFeeMultiplier`\n\n### storageVersion(): `PalletTransactionPaymentReleases`[\u200b](#storageversion-pallettransactionpaymentreleases \"Direct link to storageversion-pallettransactionpaymentreleases\")\n\n*   **interface**: `api.query.transactionPayment.storageVersion`\n\n* * *\n\ntreasury[\u200b](#treasury \"Direct link to treasury\")\n\n-------------------------------------------------\n\n### approvals(): `Vec<u32>`[\u200b](#approvals-vecu32 \"Direct link to approvals-vecu32\")\n\n*   **interface**: `api.query.treasury.approvals`\n*   **summary**: Proposal indices that have been approved but not yet awarded.\n\n### deactivated(): `u128`[\u200b](#deactivated-u128 \"Direct link to deactivated-u128\")\n\n*   **interface**: `api.query.treasury.deactivated`\n*   **summary**: The amount which has been reported as inactive to Currency.\n\n### proposalCount(): `u32`[\u200b](#proposalcount-u32 \"Direct link to proposalcount-u32\")\n\n*   **interface**: `api.query.treasury.proposalCount`\n*   **summary**: Number of proposals that have been made.\n\n### proposals(`u32`): `Option<PalletTreasuryProposal>`[\u200b](#proposalsu32-optionpallettreasuryproposal \"Direct link to proposalsu32-optionpallettreasuryproposal\")\n\n*   **interface**: `api.query.treasury.proposals`\n*   **summary**: Proposals that have been made.\n\n* * *\n\nvesting[\u200b](#vesting \"Direct link to vesting\")\n\n----------------------------------------------\n\n### storageVersion(): `PalletVestingReleases`[\u200b](#storageversion-palletvestingreleases \"Direct link to storageversion-palletvestingreleases\")\n\n*   **interface**: `api.query.vesting.storageVersion`\n    \n*   **summary**: Storage version of the pallet.\n    \n    New networks start with latest version, as determined by the genesis build.\n    \n\n### vesting(`AccountId32`): `Option<Vec<PalletVestingVestingInfo>>`[\u200b](#vestingaccountid32-optionvecpalletvestingvestinginfo \"Direct link to vestingaccountid32-optionvecpalletvestingvestinginfo\")\n\n*   **interface**: `api.query.vesting.vesting`\n*   **summary**: Information regarding the vesting of a given account.\n\n* * *\n\nvoterList[\u200b](#voterlist \"Direct link to voterList\")\n\n----------------------------------------------------\n\n### counterForListNodes(): `u32`[\u200b](#counterforlistnodes-u32 \"Direct link to counterforlistnodes-u32\")\n\n*   **interface**: `api.query.voterList.counterForListNodes`\n*   **summary**: Counter for the related counted storage map\n\n### listBags(`u64`): `Option<PalletBagsListListBag>`[\u200b](#listbagsu64-optionpalletbagslistlistbag \"Direct link to listbagsu64-optionpalletbagslistlistbag\")\n\n*   **interface**: `api.query.voterList.listBags`\n    \n*   **summary**: A bag stored in storage.\n    \n    Stores a `Bag` struct, which stores head and tail pointers to itself.\n    \n\n### listNodes(`AccountId32`): `Option<PalletBagsListListNode>`[\u200b](#listnodesaccountid32-optionpalletbagslistlistnode \"Direct link to listnodesaccountid32-optionpalletbagslistlistnode\")\n\n*   **interface**: `api.query.voterList.listNodes`\n    \n*   **summary**: A single node, within some bag.\n    \n    Nodes store links forward and back within their respective bags.\n    \n\n* * *\n\nwhitelist[\u200b](#whitelist \"Direct link to whitelist\")\n\n----------------------------------------------------\n\n### whitelistedCall(`H256`): `Option<Null>`[\u200b](#whitelistedcallh256-optionnull \"Direct link to whitelistedcallh256-optionnull\")\n\n*   **interface**: `api.query.whitelist.whitelistedCall`\n\n* * *\n\nxcmPallet[\u200b](#xcmpallet \"Direct link to xcmPallet\")\n\n----------------------------------------------------\n\n### assetTraps(`H256`): `u32`[\u200b](#assettrapsh256-u32 \"Direct link to assettrapsh256-u32\")\n\n*   **interface**: `api.query.xcmPallet.assetTraps`\n    \n*   **summary**: The existing asset traps.\n    \n    Key is the blake2 256 hash of (origin, versioned `MultiAssets`) pair. Value is the number of times this pair has been trapped (usually just 1 if it exists at all).\n    \n\n### currentMigration(): `Option<PalletXcmVersionMigrationStage>`[\u200b](#currentmigration-optionpalletxcmversionmigrationstage \"Direct link to currentmigration-optionpalletxcmversionmigrationstage\")\n\n*   **interface**: `api.query.xcmPallet.currentMigration`\n*   **summary**: The current migration's stage, if any.\n\n### lockedFungibles(`AccountId32`): `Option<Vec<(u128,XcmVersionedMultiLocation)>>`[\u200b](#lockedfungiblesaccountid32-optionvecu128xcmversionedmultilocation \"Direct link to lockedfungiblesaccountid32-optionvecu128xcmversionedmultilocation\")\n\n*   **interface**: `api.query.xcmPallet.lockedFungibles`\n*   **summary**: Fungible assets which we know are locked on this chain.\n\n### queries(`u64`): `Option<PalletXcmQueryStatus>`[\u200b](#queriesu64-optionpalletxcmquerystatus \"Direct link to queriesu64-optionpalletxcmquerystatus\")\n\n*   **interface**: `api.query.xcmPallet.queries`\n*   **summary**: The ongoing queries.\n\n### queryCounter(): `u64`[\u200b](#querycounter-u64 \"Direct link to querycounter-u64\")\n\n*   **interface**: `api.query.xcmPallet.queryCounter`\n*   **summary**: The latest available query index.\n\n### remoteLockedFungibles(`u32, AccountId32, XcmVersionedAssetId`): `Option<PalletXcmRemoteLockedFungibleRecord>`[\u200b](#remotelockedfungiblesu32-accountid32-xcmversionedassetid-optionpalletxcmremotelockedfungiblerecord \"Direct link to remotelockedfungiblesu32-accountid32-xcmversionedassetid-optionpalletxcmremotelockedfungiblerecord\")\n\n*   **interface**: `api.query.xcmPallet.remoteLockedFungibles`\n*   **summary**: Fungible assets which we know are locked on a remote chain.\n\n### safeXcmVersion(): `Option<u32>`[\u200b](#safexcmversion-optionu32 \"Direct link to safexcmversion-optionu32\")\n\n*   **interface**: `api.query.xcmPallet.safeXcmVersion`\n*   **summary**: Default version to encode XCM when latest version of destination is unknown. If `None`, then the destinations whose XCM version is unknown are considered unreachable.\n\n### supportedVersion(`u32, XcmVersionedMultiLocation`): `Option<u32>`[\u200b](#supportedversionu32-xcmversionedmultilocation-optionu32 \"Direct link to supportedversionu32-xcmversionedmultilocation-optionu32\")\n\n*   **interface**: `api.query.xcmPallet.supportedVersion`\n*   **summary**: The Latest versions that we know various locations support.\n\n### versionDiscoveryQueue(): `Vec<(XcmVersionedMultiLocation,u32)>`[\u200b](#versiondiscoveryqueue-vecxcmversionedmultilocationu32 \"Direct link to versiondiscoveryqueue-vecxcmversionedmultilocationu32\")\n\n*   **interface**: `api.query.xcmPallet.versionDiscoveryQueue`\n*   **summary**: Destinations whose latest XCM version we would like to know. Duplicates not allowed, and the `u32` counter is the number of times that a send to the destination has been attempted, which is used as a prioritization.\n\n### versionNotifiers(`u32, XcmVersionedMultiLocation`): `Option<u64>`[\u200b](#versionnotifiersu32-xcmversionedmultilocation-optionu64 \"Direct link to versionnotifiersu32-xcmversionedmultilocation-optionu64\")\n\n*   **interface**: `api.query.xcmPallet.versionNotifiers`\n*   **summary**: All locations that we have requested version notifications from.\n\n### versionNotifyTargets(`u32, XcmVersionedMultiLocation`): `Option<(u64,SpWeightsWeightV2Weight,u32)>`[\u200b](#versionnotifytargetsu32-xcmversionedmultilocation-optionu64spweightsweightv2weightu32 \"Direct link to versionnotifytargetsu32-xcmversionedmultilocation-optionu64spweightsweightv2weightu32\")\n\n*   **interface**: `api.query.xcmPallet.versionNotifyTargets`\n*   **summary**: The target locations that are subscribed to our version changes, as well as the most recent of our versions we informed them of.\n\n### xcmExecutionSuspended(): `bool`[\u200b](#xcmexecutionsuspended-bool \"Direct link to xcmexecutionsuspended-bool\")\n\n*   **interface**: `api.query.xcmPallet.xcmExecutionSuspended`\n*   **summary**: Global suspension state of the XCM executor.\n\n[Edit this page](https://github.com/polkadot-js/docs/edit/master/docs/kusama/storage.md)\n\n[Previous\\\n\\\nConstants](/docs/kusama/constants)\n[Next\\\n\\\nExtrinsics](/docs/kusama/extrinsics)\n\n*   [auctions](#auctions)\n    *   [auctionCounter(): `u32`](#auctioncounter-u32)\n        \n    *   [auctionInfo(): `Option<(u32,u32)>`](#auctioninfo-optionu32u32)\n        \n    *   [reservedAmounts(`(AccountId32,u32)`): `Option<u128>`](#reservedamountsaccountid32u32-optionu128)\n        \n    *   [winning(`u32`): `Option<[Option<(AccountId32,u32,u128)>;36]>`](#winningu32-optionoptionaccountid32u32u12836)\n        \n*   [authorship](#authorship)\n    *   [author(): `Option<AccountId32>`](#author-optionaccountid32)\n        \n*   [babe](#babe)\n    *   [authorities(): `Vec<(SpConsensusBabeAppPublic,u64)>`](#authorities-vecspconsensusbabeapppublicu64)\n        \n    *   [authorVrfRandomness(): `Option<[u8;32]>`](#authorvrfrandomness-optionu832)\n        \n    *   [currentSlot(): `u64`](#currentslot-u64)\n        \n    *   [epochConfig(): `Option<SpConsensusBabeBabeEpochConfiguration>`](#epochconfig-optionspconsensusbabebabeepochconfiguration)\n        \n    *   [epochIndex(): `u64`](#epochindex-u64)\n        \n    *   [epochStart(): `(u32,u32)`](#epochstart-u32u32)\n        \n    *   [genesisSlot(): `u64`](#genesisslot-u64)\n        \n    *   [initialized(): `Option<Option<SpConsensusBabeDigestsPreDigest>>`](#initialized-optionoptionspconsensusbabedigestspredigest)\n        \n    *   [lateness(): `u32`](#lateness-u32)\n        \n    *   [nextAuthorities(): `Vec<(SpConsensusBabeAppPublic,u64)>`](#nextauthorities-vecspconsensusbabeapppublicu64)\n        \n    *   [nextEpochConfig(): `Option<SpConsensusBabeBabeEpochConfiguration>`](#nextepochconfig-optionspconsensusbabebabeepochconfiguration)\n        \n    *   [nextRandomness(): `[u8;32]`](#nextrandomness-u832)\n        \n    *   [pendingEpochConfigChange(): `Option<SpConsensusBabeDigestsNextConfigDescriptor>`](#pendingepochconfigchange-optionspconsensusbabedigestsnextconfigdescriptor)\n        \n    *   [randomness(): `[u8;32]`](#randomness-u832)\n        \n    *   [segmentIndex(): `u32`](#segmentindex-u32)\n        \n    *   [skippedEpochs(): `Vec<(u64,u32)>`](#skippedepochs-vecu64u32)\n        \n    *   [underConstruction(`u32`): `Vec<[u8;32]>`](#underconstructionu32-vecu832)\n        \n*   [balances](#balances)\n    *   [account(`AccountId32`): `PalletBalancesAccountData`](#accountaccountid32-palletbalancesaccountdata)\n        \n    *   [freezes(`AccountId32`): `Vec<PalletBalancesIdAmount>`](#freezesaccountid32-vecpalletbalancesidamount)\n        \n    *   [holds(`AccountId32`): `Vec<{\"id\":\"KusamaRuntimeRuntimeHoldReason\",\"amount\":\"u128\"}>`](#holdsaccountid32-vecidkusamaruntimeruntimeholdreasonamountu128)\n        \n    *   [inactiveIssuance(): `u128`](#inactiveissuance-u128)\n        \n    *   [locks(`AccountId32`): `Vec<PalletBalancesBalanceLock>`](#locksaccountid32-vecpalletbalancesbalancelock)\n        \n    *   [reserves(`AccountId32`): `Vec<PalletBalancesReserveData>`](#reservesaccountid32-vecpalletbalancesreservedata)\n        \n    *   [totalIssuance(): `u128`](#totalissuance-u128)\n        \n*   [beefy](#beefy)\n    *   [authorities(): `Vec<SpConsensusBeefyEcdsaCryptoPublic>`](#authorities-vecspconsensusbeefyecdsacryptopublic)\n        \n    *   [genesisBlock(): `Option<u32>`](#genesisblock-optionu32)\n        \n    *   [nextAuthorities(): `Vec<SpConsensusBeefyEcdsaCryptoPublic>`](#nextauthorities-vecspconsensusbeefyecdsacryptopublic)\n        \n    *   [setIdSession(`u64`): `Option<u32>`](#setidsessionu64-optionu32)\n        \n    *   [validatorSetId(): `u64`](#validatorsetid-u64)\n        \n*   [beefyMmrLeaf](#beefymmrleaf)\n    *   [beefyAuthorities(): `SpConsensusBeefyMmrBeefyAuthoritySet`](#beefyauthorities-spconsensusbeefymmrbeefyauthorityset)\n        \n    *   [beefyNextAuthorities(): `SpConsensusBeefyMmrBeefyAuthoritySet`](#beefynextauthorities-spconsensusbeefymmrbeefyauthorityset)\n        \n*   [bounties](#bounties)\n    *   [bounties(`u32`): `Option<PalletBountiesBounty>`](#bountiesu32-optionpalletbountiesbounty)\n        \n    *   [bountyApprovals(): `Vec<u32>`](#bountyapprovals-vecu32)\n        \n    *   [bountyCount(): `u32`](#bountycount-u32)\n        \n    *   [bountyDescriptions(`u32`): `Option<Bytes>`](#bountydescriptionsu32-optionbytes)\n        \n*   [childBounties](#childbounties)\n    *   [childBounties(`u32, u32`): `Option<PalletChildBountiesChildBounty>`](#childbountiesu32-u32-optionpalletchildbountieschildbounty)\n        \n    *   [childBountyCount(): `u32`](#childbountycount-u32)\n        \n    *   [childBountyDescriptions(`u32`): `Option<Bytes>`](#childbountydescriptionsu32-optionbytes)\n        \n    *   [childrenCuratorFees(`u32`): `u128`](#childrencuratorfeesu32-u128)\n        \n    *   [parentChildBounties(`u32`): `u32`](#parentchildbountiesu32-u32)\n        \n*   [claims](#claims)\n    *   [claims(`EthereumAddress`): `Option<u128>`](#claimsethereumaddress-optionu128)\n        \n    *   [preclaims(`AccountId32`): `Option<EthereumAddress>`](#preclaimsaccountid32-optionethereumaddress)\n        \n    *   [signing(`EthereumAddress`): `Option<PolkadotRuntimeCommonClaimsStatementKind>`](#signingethereumaddress-optionpolkadotruntimecommonclaimsstatementkind)\n        \n    *   [total(): `u128`](#total-u128)\n        \n    *   [vesting(`EthereumAddress`): `Option<(u128,u128,u32)>`](#vestingethereumaddress-optionu128u128u32)\n        \n*   [configuration](#configuration)\n    *   [activeConfig(): `PolkadotRuntimeParachainsConfigurationHostConfiguration`](#activeconfig-polkadotruntimeparachainsconfigurationhostconfiguration)\n        \n    *   [bypassConsistencyCheck(): `bool`](#bypassconsistencycheck-bool)\n        \n    *   [pendingConfigs(): `Vec<(u32,PolkadotRuntimeParachainsConfigurationHostConfiguration)>`](#pendingconfigs-vecu32polkadotruntimeparachainsconfigurationhostconfiguration)\n        \n*   [convictionVoting](#convictionvoting)\n    *   [classLocksFor(`AccountId32`): `Vec<(u16,u128)>`](#classlocksforaccountid32-vecu16u128)\n        \n    *   [votingFor(`AccountId32, u16`): `PalletConvictionVotingVoteVoting`](#votingforaccountid32-u16-palletconvictionvotingvotevoting)\n        \n*   [crowdloan](#crowdloan)\n    *   [endingsCount(): `u32`](#endingscount-u32)\n        \n    *   [funds(`u32`): `Option<PolkadotRuntimeCommonCrowdloanFundInfo>`](#fundsu32-optionpolkadotruntimecommoncrowdloanfundinfo)\n        \n    *   [newRaise(): `Vec<u32>`](#newraise-vecu32)\n        \n    *   [nextFundIndex(): `u32`](#nextfundindex-u32)\n        \n*   [dmp](#dmp)\n    *   [deliveryFeeFactor(`u32`): `u128`](#deliveryfeefactoru32-u128)\n        \n    *   [downwardMessageQueueHeads(`u32`): `H256`](#downwardmessagequeueheadsu32-h256)\n        \n    *   [downwardMessageQueues(`u32`): `Vec<PolkadotCorePrimitivesInboundDownwardMessage>`](#downwardmessagequeuesu32-vecpolkadotcoreprimitivesinbounddownwardmessage)\n        \n*   [electionProviderMultiPhase](#electionprovidermultiphase)\n    *   [currentPhase(): `PalletElectionProviderMultiPhasePhase`](#currentphase-palletelectionprovidermultiphasephase)\n        \n    *   [desiredTargets(): `Option<u32>`](#desiredtargets-optionu32)\n        \n    *   [minimumUntrustedScore(): `Option<SpNposElectionsElectionScore>`](#minimumuntrustedscore-optionspnposelectionselectionscore)\n        \n    *   [queuedSolution(): `Option<PalletElectionProviderMultiPhaseReadySolution>`](#queuedsolution-optionpalletelectionprovidermultiphasereadysolution)\n        \n    *   [round(): `u32`](#round-u32)\n        \n    *   [signedSubmissionIndices(): `Vec<(SpNposElectionsElectionScore,u32,u32)>`](#signedsubmissionindices-vecspnposelectionselectionscoreu32u32)\n        \n    *   [signedSubmissionNextIndex(): `u32`](#signedsubmissionnextindex-u32)\n        \n    *   [signedSubmissionsMap(`u32`): `Option<PalletElectionProviderMultiPhaseSignedSignedSubmission>`](#signedsubmissionsmapu32-optionpalletelectionprovidermultiphasesignedsignedsubmission)\n        \n    *   [snapshot(): `Option<PalletElectionProviderMultiPhaseRoundSnapshot>`](#snapshot-optionpalletelectionprovidermultiphaseroundsnapshot)\n        \n    *   [snapshotMetadata(): `Option<PalletElectionProviderMultiPhaseSolutionOrSnapshotSize>`](#snapshotmetadata-optionpalletelectionprovidermultiphasesolutionorsnapshotsize)\n        \n*   [fastUnstake](#fastunstake)\n    *   [counterForQueue(): `u32`](#counterforqueue-u32)\n        \n    *   [erasToCheckPerBlock(): `u32`](#erastocheckperblock-u32)\n        \n    *   [head(): `Option<PalletFastUnstakeUnstakeRequest>`](#head-optionpalletfastunstakeunstakerequest)\n        \n    *   [queue(`AccountId32`): `Option<u128>`](#queueaccountid32-optionu128)\n        \n*   [fellowshipCollective](#fellowshipcollective)\n    *   [idToIndex(`u16, AccountId32`): `Option<u32>`](#idtoindexu16-accountid32-optionu32)\n        \n    *   [indexToId(`u16, u32`): `Option<AccountId32>`](#indextoidu16-u32-optionaccountid32)\n        \n    *   [memberCount(`u16`): `u32`](#membercountu16-u32)\n        \n    *   [members(`AccountId32`): `Option<PalletRankedCollectiveMemberRecord>`](#membersaccountid32-optionpalletrankedcollectivememberrecord)\n        \n    *   [voting(`u32, AccountId32`): `Option<PalletRankedCollectiveVoteRecord>`](#votingu32-accountid32-optionpalletrankedcollectivevoterecord)\n        \n    *   [votingCleanup(`u32`): `Option<Bytes>`](#votingcleanupu32-optionbytes)\n        \n*   [fellowshipReferenda](#fellowshipreferenda)\n    *   [decidingCount(`u16`): `u32`](#decidingcountu16-u32)\n        \n    *   [metadataOf(`u32`): `Option<H256>`](#metadataofu32-optionh256)\n        \n    *   [referendumCount(): `u32`](#referendumcount-u32)\n        \n    *   [referendumInfoFor(`u32`): `Option<PalletReferendaReferendumInfoRankedCollectiveTally>`](#referenduminfoforu32-optionpalletreferendareferenduminforankedcollectivetally)\n        \n    *   [trackQueue(`u16`): `Vec<(u32,u32)>`](#trackqueueu16-vecu32u32)\n        \n*   [grandpa](#grandpa)\n    *   [currentSetId(): `u64`](#currentsetid-u64)\n        \n    *   [nextForced(): `Option<u32>`](#nextforced-optionu32)\n        \n    *   [pendingChange(): `Option<PalletGrandpaStoredPendingChange>`](#pendingchange-optionpalletgrandpastoredpendingchange)\n        \n    *   [setIdSession(`u64`): `Option<u32>`](#setidsessionu64-optionu32-1)\n        \n    *   [stalled(): `Option<(u32,u32)>`](#stalled-optionu32u32)\n        \n    *   [state(): `PalletGrandpaStoredState`](#state-palletgrandpastoredstate)\n        \n*   [hrmp](#hrmp)\n    *   [hrmpAcceptedChannelRequestCount(`u32`): `u32`](#hrmpacceptedchannelrequestcountu32-u32)\n        \n    *   [hrmpChannelContents(`PolkadotParachainPrimitivesHrmpChannelId`): `Vec<PolkadotCorePrimitivesInboundHrmpMessage>`](#hrmpchannelcontentspolkadotparachainprimitiveshrmpchannelid-vecpolkadotcoreprimitivesinboundhrmpmessage)\n        \n    *   [hrmpChannelDigests(`u32`): `Vec<(u32,Vec<u32>)>`](#hrmpchanneldigestsu32-vecu32vecu32)\n        \n    *   [hrmpChannels(`PolkadotParachainPrimitivesHrmpChannelId`): `Option<PolkadotRuntimeParachainsHrmpHrmpChannel>`](#hrmpchannelspolkadotparachainprimitiveshrmpchannelid-optionpolkadotruntimeparachainshrmphrmpchannel)\n        \n    *   [hrmpCloseChannelRequests(`PolkadotParachainPrimitivesHrmpChannelId`): `Option<Null>`](#hrmpclosechannelrequestspolkadotparachainprimitiveshrmpchannelid-optionnull)\n        \n    *   [hrmpCloseChannelRequestsList(): `Vec<PolkadotParachainPrimitivesHrmpChannelId>`](#hrmpclosechannelrequestslist-vecpolkadotparachainprimitiveshrmpchannelid)\n        \n    *   [hrmpEgressChannelsIndex(`u32`): `Vec<u32>`](#hrmpegresschannelsindexu32-vecu32)\n        \n    *   [hrmpIngressChannelsIndex(`u32`): `Vec<u32>`](#hrmpingresschannelsindexu32-vecu32)\n        \n    *   [hrmpOpenChannelRequestCount(`u32`): `u32`](#hrmpopenchannelrequestcountu32-u32)\n        \n    *   [hrmpOpenChannelRequests(`PolkadotParachainPrimitivesHrmpChannelId`): `Option<PolkadotRuntimeParachainsHrmpHrmpOpenChannelRequest>`](#hrmpopenchannelrequestspolkadotparachainprimitiveshrmpchannelid-optionpolkadotruntimeparachainshrmphrmpopenchannelrequest)\n        \n    *   [hrmpOpenChannelRequestsList(): `Vec<PolkadotParachainPrimitivesHrmpChannelId>`](#hrmpopenchannelrequestslist-vecpolkadotparachainprimitiveshrmpchannelid)\n        \n    *   [hrmpWatermarks(`u32`): `Option<u32>`](#hrmpwatermarksu32-optionu32)\n        \n*   [identity](#identity)\n    *   [identityOf(`AccountId32`): `Option<PalletIdentityRegistration>`](#identityofaccountid32-optionpalletidentityregistration)\n        \n    *   [registrars(): `Vec<Option<PalletIdentityRegistrarInfo>>`](#registrars-vecoptionpalletidentityregistrarinfo)\n        \n    *   [subsOf(`AccountId32`): `(u128,Vec<AccountId32>)`](#subsofaccountid32-u128vecaccountid32)\n        \n    *   [superOf(`AccountId32`): `Option<(AccountId32,Data)>`](#superofaccountid32-optionaccountid32data)\n        \n*   [imOnline](#imonline)\n    *   [authoredBlocks(`u32, AccountId32`): `u32`](#authoredblocksu32-accountid32-u32)\n        \n    *   [heartbeatAfter(): `u32`](#heartbeatafter-u32)\n        \n    *   [keys(): `Vec<PalletImOnlineSr25519AppSr25519Public>`](#keys-vecpalletimonlinesr25519appsr25519public)\n        \n    *   [receivedHeartbeats(`u32, u32`): `Option<bool>`](#receivedheartbeatsu32-u32-optionbool)\n        \n*   [indices](#indices)\n    *   [accounts(`u32`): `Option<(AccountId32,u128,bool)>`](#accountsu32-optionaccountid32u128bool)\n        \n*   [initializer](#initializer)\n    *   [bufferedSessionChanges(): `Vec<PolkadotRuntimeParachainsInitializerBufferedSessionChange>`](#bufferedsessionchanges-vecpolkadotruntimeparachainsinitializerbufferedsessionchange)\n        \n    *   [hasInitialized(): `Option<Null>`](#hasinitialized-optionnull)\n        \n*   [messageQueue](#messagequeue)\n    *   [bookStateFor(`PolkadotRuntimeParachainsInclusionAggregateMessageOrigin`): `PalletMessageQueueBookState`](#bookstateforpolkadotruntimeparachainsinclusionaggregatemessageorigin-palletmessagequeuebookstate)\n        \n    *   [pages(`PolkadotRuntimeParachainsInclusionAggregateMessageOrigin, u32`): `Option<PalletMessageQueuePage>`](#pagespolkadotruntimeparachainsinclusionaggregatemessageorigin-u32-optionpalletmessagequeuepage)\n        \n    *   [serviceHead(): `Option<PolkadotRuntimeParachainsInclusionAggregateMessageOrigin>`](#servicehead-optionpolkadotruntimeparachainsinclusionaggregatemessageorigin)\n        \n*   [mmr](#mmr)\n    *   [nodes(`u64`): `Option<H256>`](#nodesu64-optionh256)\n        \n    *   [numberOfLeaves(): `u64`](#numberofleaves-u64)\n        \n    *   [rootHash(): `H256`](#roothash-h256)\n        \n*   [multisig](#multisig)\n    *   [multisigs(`AccountId32, [u8;32]`): `Option<PalletMultisigMultisig>`](#multisigsaccountid32-u832-optionpalletmultisigmultisig)\n        \n*   [nis](#nis)\n    *   [queues(`u32`): `Vec<PalletNisBid>`](#queuesu32-vecpalletnisbid)\n        \n    *   [queueTotals(): `Vec<(u32,u128)>`](#queuetotals-vecu32u128)\n        \n    *   [receipts(`u32`): `Option<PalletNisReceiptRecord>`](#receiptsu32-optionpalletnisreceiptrecord)\n        \n    *   [summary(): `PalletNisSummaryRecord`](#summary-palletnissummaryrecord)\n        \n*   [nisCounterpartBalances](#niscounterpartbalances)\n    *   [account(`AccountId32`): `PalletBalancesAccountData`](#accountaccountid32-palletbalancesaccountdata-1)\n        \n    *   [freezes(`AccountId32`): `Vec<PalletBalancesIdAmount>`](#freezesaccountid32-vecpalletbalancesidamount-1)\n        \n    *   [holds(`AccountId32`): `Vec<{\"id\":\"KusamaRuntimeRuntimeHoldReason\",\"amount\":\"u128\"}>`](#holdsaccountid32-vecidkusamaruntimeruntimeholdreasonamountu128-1)\n        \n    *   [inactiveIssuance(): `u128`](#inactiveissuance-u128-1)\n        \n    *   [locks(`AccountId32`): `Vec<PalletBalancesBalanceLock>`](#locksaccountid32-vecpalletbalancesbalancelock-1)\n        \n    *   [reserves(`AccountId32`): `Vec<PalletBalancesReserveData>`](#reservesaccountid32-vecpalletbalancesreservedata-1)\n        \n    *   [totalIssuance(): `u128`](#totalissuance-u128-1)\n        \n*   [nominationPools](#nominationpools)\n    *   [bondedPools(`u32`): `Option<PalletNominationPoolsBondedPoolInner>`](#bondedpoolsu32-optionpalletnominationpoolsbondedpoolinner)\n        \n    *   [claimPermissions(`AccountId32`): `PalletNominationPoolsClaimPermission`](#claimpermissionsaccountid32-palletnominationpoolsclaimpermission)\n        \n    *   [counterForBondedPools(): `u32`](#counterforbondedpools-u32)\n        \n    *   [counterForMetadata(): `u32`](#counterformetadata-u32)\n        \n    *   [counterForPoolMembers(): `u32`](#counterforpoolmembers-u32)\n        \n    *   [counterForReversePoolIdLookup(): `u32`](#counterforreversepoolidlookup-u32)\n        \n    *   [counterForRewardPools(): `u32`](#counterforrewardpools-u32)\n        \n    *   [counterForSubPoolsStorage(): `u32`](#counterforsubpoolsstorage-u32)\n        \n    *   [globalMaxCommission(): `Option<Perbill>`](#globalmaxcommission-optionperbill)\n        \n    *   [lastPoolId(): `u32`](#lastpoolid-u32)\n        \n    *   [maxPoolMembers(): `Option<u32>`](#maxpoolmembers-optionu32)\n        \n    *   [maxPoolMembersPerPool(): `Option<u32>`](#maxpoolmembersperpool-optionu32)\n        \n    *   [maxPools(): `Option<u32>`](#maxpools-optionu32)\n        \n    *   [metadata(`u32`): `Bytes`](#metadatau32-bytes)\n        \n    *   [minCreateBond(): `u128`](#mincreatebond-u128)\n        \n    *   [minJoinBond(): `u128`](#minjoinbond-u128)\n        \n    *   [poolMembers(`AccountId32`): `Option<PalletNominationPoolsPoolMember>`](#poolmembersaccountid32-optionpalletnominationpoolspoolmember)\n        \n    *   [reversePoolIdLookup(`AccountId32`): `Option<u32>`](#reversepoolidlookupaccountid32-optionu32)\n        \n    *   [rewardPools(`u32`): `Option<PalletNominationPoolsRewardPool>`](#rewardpoolsu32-optionpalletnominationpoolsrewardpool)\n        \n    *   [subPoolsStorage(`u32`): `Option<PalletNominationPoolsSubPools>`](#subpoolsstorageu32-optionpalletnominationpoolssubpools)\n        \n*   [offences](#offences)\n    *   [concurrentReportsIndex(`[u8;16], Bytes`): `Vec<H256>`](#concurrentreportsindexu816-bytes-vech256)\n        \n    *   [reports(`H256`): `Option<SpStakingOffenceOffenceDetails>`](#reportsh256-optionspstakingoffenceoffencedetails)\n        \n*   [paraAssignmentProvider](#paraassignmentprovider)\n    \n*   [paraInclusion](#parainclusion)\n    *   [availabilityBitfields(`u32`): `Option<PolkadotRuntimeParachainsInclusionAvailabilityBitfieldRecord>`](#availabilitybitfieldsu32-optionpolkadotruntimeparachainsinclusionavailabilitybitfieldrecord)\n        \n    *   [pendingAvailability(`u32`): `Option<PolkadotRuntimeParachainsInclusionCandidatePendingAvailability>`](#pendingavailabilityu32-optionpolkadotruntimeparachainsinclusioncandidatependingavailability)\n        \n    *   [pendingAvailabilityCommitments(`u32`): `Option<PolkadotPrimitivesV5CandidateCommitments>`](#pendingavailabilitycommitmentsu32-optionpolkadotprimitivesv5candidatecommitments)\n        \n*   [paraInherent](#parainherent)\n    *   [included(): `Option<Null>`](#included-optionnull)\n        \n    *   [onChainVotes(): `Option<PolkadotPrimitivesV5ScrapedOnChainVotes>`](#onchainvotes-optionpolkadotprimitivesv5scrapedonchainvotes)\n        \n*   [paras](#paras)\n    *   [actionsQueue(`u32`): `Vec<u32>`](#actionsqueueu32-vecu32)\n        \n    *   [codeByHash(`H256`): `Option<Bytes>`](#codebyhashh256-optionbytes)\n        \n    *   [codeByHashRefs(`H256`): `u32`](#codebyhashrefsh256-u32)\n        \n    *   [currentCodeHash(`u32`): `Option<H256>`](#currentcodehashu32-optionh256)\n        \n    *   [futureCodeHash(`u32`): `Option<H256>`](#futurecodehashu32-optionh256)\n        \n    *   [futureCodeUpgrades(`u32`): `Option<u32>`](#futurecodeupgradesu32-optionu32)\n        \n    *   [heads(`u32`): `Option<Bytes>`](#headsu32-optionbytes)\n        \n    *   [mostRecentContext(`u32`): `Option<u32>`](#mostrecentcontextu32-optionu32)\n        \n    *   [parachains(): `Vec<u32>`](#parachains-vecu32)\n        \n    *   [paraLifecycles(`u32`): `Option<PolkadotRuntimeParachainsParasParaLifecycle>`](#paralifecyclesu32-optionpolkadotruntimeparachainsparasparalifecycle)\n        \n    *   [pastCodeHash(`(u32,u32)`): `Option<H256>`](#pastcodehashu32u32-optionh256)\n        \n    *   [pastCodeMeta(`u32`): `PolkadotRuntimeParachainsParasParaPastCodeMeta`](#pastcodemetau32-polkadotruntimeparachainsparasparapastcodemeta)\n        \n    *   [pastCodePruning(): `Vec<(u32,u32)>`](#pastcodepruning-vecu32u32)\n        \n    *   [pvfActiveVoteList(): `Vec<H256>`](#pvfactivevotelist-vech256)\n        \n    *   [pvfActiveVoteMap(`H256`): `Option<PolkadotRuntimeParachainsParasPvfCheckActiveVoteState>`](#pvfactivevotemaph256-optionpolkadotruntimeparachainsparaspvfcheckactivevotestate)\n        \n    *   [upcomingParasGenesis(`u32`): `Option<PolkadotRuntimeParachainsParasParaGenesisArgs>`](#upcomingparasgenesisu32-optionpolkadotruntimeparachainsparasparagenesisargs)\n        \n    *   [upcomingUpgrades(): `Vec<(u32,u32)>`](#upcomingupgrades-vecu32u32)\n        \n    *   [upgradeCooldowns(): `Vec<(u32,u32)>`](#upgradecooldowns-vecu32u32)\n        \n    *   [upgradeGoAheadSignal(`u32`): `Option<PolkadotPrimitivesV5UpgradeGoAhead>`](#upgradegoaheadsignalu32-optionpolkadotprimitivesv5upgradegoahead)\n        \n    *   [upgradeRestrictionSignal(`u32`): `Option<PolkadotPrimitivesV5UpgradeRestriction>`](#upgraderestrictionsignalu32-optionpolkadotprimitivesv5upgraderestriction)\n        \n*   [paraScheduler](#parascheduler)\n    *   [availabilityCores(): `Vec<PolkadotPrimitivesV5CoreOccupied>`](#availabilitycores-vecpolkadotprimitivesv5coreoccupied)\n        \n    *   [claimQueue(): `BTreeMap<u32, Vec<Option<PolkadotPrimitivesV5ParasEntry>>>`](#claimqueue-btreemapu32-vecoptionpolkadotprimitivesv5parasentry)\n        \n    *   [sessionStartBlock(): `u32`](#sessionstartblock-u32)\n        \n    *   [validatorGroups(): `Vec<Vec<u32>>`](#validatorgroups-vecvecu32)\n        \n*   [parasDisputes](#parasdisputes)\n    *   [backersOnDisputes(`u32, H256`): `Option<BTreeSet<u32>>`](#backersondisputesu32-h256-optionbtreesetu32)\n        \n    *   [disputes(`u32, H256`): `Option<PolkadotPrimitivesV5DisputeState>`](#disputesu32-h256-optionpolkadotprimitivesv5disputestate)\n        \n    *   [frozen(): `Option<u32>`](#frozen-optionu32)\n        \n    *   [included(`u32, H256`): `Option<u32>`](#includedu32-h256-optionu32)\n        \n    *   [lastPrunedSession(): `Option<u32>`](#lastprunedsession-optionu32)\n        \n*   [paraSessionInfo](#parasessioninfo)\n    *   [accountKeys(`u32`): `Option<Vec<AccountId32>>`](#accountkeysu32-optionvecaccountid32)\n        \n    *   [assignmentKeysUnsafe(): `Vec<PolkadotPrimitivesV5AssignmentAppPublic>`](#assignmentkeysunsafe-vecpolkadotprimitivesv5assignmentapppublic)\n        \n    *   [earliestStoredSession(): `u32`](#earlieststoredsession-u32)\n        \n    *   [sessionExecutorParams(`u32`): `Option<PolkadotPrimitivesV5ExecutorParams>`](#sessionexecutorparamsu32-optionpolkadotprimitivesv5executorparams)\n        \n    *   [sessions(`u32`): `Option<PolkadotPrimitivesV5SessionInfo>`](#sessionsu32-optionpolkadotprimitivesv5sessioninfo)\n        \n*   [parasShared](#parasshared)\n    *   [activeValidatorIndices(): `Vec<u32>`](#activevalidatorindices-vecu32)\n        \n    *   [activeValidatorKeys(): `Vec<PolkadotPrimitivesV5ValidatorAppPublic>`](#activevalidatorkeys-vecpolkadotprimitivesv5validatorapppublic)\n        \n    *   [allowedRelayParents(): `PolkadotRuntimeParachainsSharedAllowedRelayParentsTracker`](#allowedrelayparents-polkadotruntimeparachainssharedallowedrelayparentstracker)\n        \n    *   [currentSessionIndex(): `u32`](#currentsessionindex-u32)\n        \n*   [parasSlashing](#parasslashing)\n    *   [unappliedSlashes(`u32, H256`): `Option<PolkadotPrimitivesV5SlashingPendingSlashes>`](#unappliedslashesu32-h256-optionpolkadotprimitivesv5slashingpendingslashes)\n        \n    *   [validatorSetCounts(`u32`): `Option<u32>`](#validatorsetcountsu32-optionu32)\n        \n*   [preimage](#preimage)\n    *   [preimageFor(`(H256,u32)`): `Option<Bytes>`](#preimageforh256u32-optionbytes)\n        \n    *   [statusFor(`H256`): `Option<PalletPreimageRequestStatus>`](#statusforh256-optionpalletpreimagerequeststatus)\n        \n*   [proxy](#proxy)\n    *   [announcements(`AccountId32`): `(Vec<PalletProxyAnnouncement>,u128)`](#announcementsaccountid32-vecpalletproxyannouncementu128)\n        \n    *   [proxies(`AccountId32`): `(Vec<PalletProxyProxyDefinition>,u128)`](#proxiesaccountid32-vecpalletproxyproxydefinitionu128)\n        \n*   [recovery](#recovery)\n    *   [activeRecoveries(`AccountId32, AccountId32`): `Option<PalletRecoveryActiveRecovery>`](#activerecoveriesaccountid32-accountid32-optionpalletrecoveryactiverecovery)\n        \n    *   [proxy(`AccountId32`): `Option<AccountId32>`](#proxyaccountid32-optionaccountid32)\n        \n    *   [recoverable(`AccountId32`): `Option<PalletRecoveryRecoveryConfig>`](#recoverableaccountid32-optionpalletrecoveryrecoveryconfig)\n        \n*   [referenda](#referenda)\n    *   [decidingCount(`u16`): `u32`](#decidingcountu16-u32-1)\n        \n    *   [metadataOf(`u32`): `Option<H256>`](#metadataofu32-optionh256-1)\n        \n    *   [referendumCount(): `u32`](#referendumcount-u32-1)\n        \n    *   [referendumInfoFor(`u32`): `Option<PalletReferendaReferendumInfoConvictionVotingTally>`](#referenduminfoforu32-optionpalletreferendareferenduminfoconvictionvotingtally)\n        \n    *   [trackQueue(`u16`): `Vec<(u32,u128)>`](#trackqueueu16-vecu32u128)\n        \n*   [registrar](#registrar)\n    *   [nextFreeParaId(): `u32`](#nextfreeparaid-u32)\n        \n    *   [paras(`u32`): `Option<PolkadotRuntimeCommonParasRegistrarParaInfo>`](#parasu32-optionpolkadotruntimecommonparasregistrarparainfo)\n        \n    *   [pendingSwap(`u32`): `Option<u32>`](#pendingswapu32-optionu32)\n        \n*   [scheduler](#scheduler)\n    *   [agenda(`u32`): `Vec<Option<PalletSchedulerScheduled>>`](#agendau32-vecoptionpalletschedulerscheduled)\n        \n    *   [incompleteSince(): `Option<u32>`](#incompletesince-optionu32)\n        \n    *   [lookup(`[u8;32]`): `Option<(u32,u32)>`](#lookupu832-optionu32u32)\n        \n*   [session](#session)\n    *   [currentIndex(): `u32`](#currentindex-u32)\n        \n    *   [disabledValidators(): `Vec<u32>`](#disabledvalidators-vecu32)\n        \n    *   [keyOwner(`(SpCoreCryptoKeyTypeId,Bytes)`): `Option<AccountId32>`](#keyownerspcorecryptokeytypeidbytes-optionaccountid32)\n        \n    *   [nextKeys(`AccountId32`): `Option<KusamaRuntimeSessionKeys>`](#nextkeysaccountid32-optionkusamaruntimesessionkeys)\n        \n    *   [queuedChanged(): `bool`](#queuedchanged-bool)\n        \n    *   [queuedKeys(): `Vec<(AccountId32,KusamaRuntimeSessionKeys)>`](#queuedkeys-vecaccountid32kusamaruntimesessionkeys)\n        \n    *   [validators(): `Vec<AccountId32>`](#validators-vecaccountid32)\n        \n*   [slots](#slots)\n    *   [leases(`u32`): `Vec<Option<(AccountId32,u128)>>`](#leasesu32-vecoptionaccountid32u128)\n        \n*   [society](#society)\n    *   [bids(): `Vec<PalletSocietyBid>`](#bids-vecpalletsocietybid)\n        \n    *   [candidates(`AccountId32`): `Option<PalletSocietyCandidacy>`](#candidatesaccountid32-optionpalletsocietycandidacy)\n        \n    *   [challengeRoundCount(): `u32`](#challengeroundcount-u32)\n        \n    *   [defenderVotes(`u32, AccountId32`): `Option<PalletSocietyVote>`](#defendervotesu32-accountid32-optionpalletsocietyvote)\n        \n    *   [defending(): `Option<(AccountId32,AccountId32,PalletSocietyTally)>`](#defending-optionaccountid32accountid32palletsocietytally)\n        \n    *   [founder(): `Option<AccountId32>`](#founder-optionaccountid32)\n        \n    *   [head(): `Option<AccountId32>`](#head-optionaccountid32)\n        \n    *   [memberByIndex(`u32`): `Option<AccountId32>`](#memberbyindexu32-optionaccountid32)\n        \n    *   [memberCount(): `u32`](#membercount-u32)\n        \n    *   [members(`AccountId32`): `Option<PalletSocietyMemberRecord>`](#membersaccountid32-optionpalletsocietymemberrecord)\n        \n    *   [nextHead(): `Option<PalletSocietyIntakeRecord>`](#nexthead-optionpalletsocietyintakerecord)\n        \n    *   [parameters(): `Option<PalletSocietyGroupParams>`](#parameters-optionpalletsocietygroupparams)\n        \n    *   [payouts(`AccountId32`): `PalletSocietyPayoutRecord`](#payoutsaccountid32-palletsocietypayoutrecord)\n        \n    *   [pot(): `u128`](#pot-u128)\n        \n    *   [roundCount(): `u32`](#roundcount-u32)\n        \n    *   [rules(): `Option<H256>`](#rules-optionh256)\n        \n    *   [skeptic(): `Option<AccountId32>`](#skeptic-optionaccountid32)\n        \n    *   [suspendedMembers(`AccountId32`): `Option<PalletSocietyMemberRecord>`](#suspendedmembersaccountid32-optionpalletsocietymemberrecord)\n        \n    *   [voteClearCursor(`AccountId32`): `Option<Bytes>`](#voteclearcursoraccountid32-optionbytes)\n        \n    *   [votes(`AccountId32, AccountId32`): `Option<PalletSocietyVote>`](#votesaccountid32-accountid32-optionpalletsocietyvote)\n        \n*   [staking](#staking)\n    *   [activeEra(): `Option<PalletStakingActiveEraInfo>`](#activeera-optionpalletstakingactiveerainfo)\n        \n    *   [bonded(`AccountId32`): `Option<AccountId32>`](#bondedaccountid32-optionaccountid32)\n        \n    *   [bondedEras(): `Vec<(u32,u32)>`](#bondederas-vecu32u32)\n        \n    *   [canceledSlashPayout(): `u128`](#canceledslashpayout-u128)\n        \n    *   [chillThreshold(): `Option<Percent>`](#chillthreshold-optionpercent)\n        \n    *   [counterForNominators(): `u32`](#counterfornominators-u32)\n        \n    *   [counterForValidators(): `u32`](#counterforvalidators-u32)\n        \n    *   [currentEra(): `Option<u32>`](#currentera-optionu32)\n        \n    *   [currentPlannedSession(): `u32`](#currentplannedsession-u32)\n        \n    *   [erasRewardPoints(`u32`): `PalletStakingEraRewardPoints`](#erasrewardpointsu32-palletstakingerarewardpoints)\n        \n    *   [erasStakers(`u32, AccountId32`): `PalletStakingExposure`](#erasstakersu32-accountid32-palletstakingexposure)\n        \n    *   [erasStakersClipped(`u32, AccountId32`): `PalletStakingExposure`](#erasstakersclippedu32-accountid32-palletstakingexposure)\n        \n    *   [erasStartSessionIndex(`u32`): `Option<u32>`](#erasstartsessionindexu32-optionu32)\n        \n    *   [erasTotalStake(`u32`): `u128`](#erastotalstakeu32-u128)\n        \n    *   [erasValidatorPrefs(`u32, AccountId32`): `PalletStakingValidatorPrefs`](#erasvalidatorprefsu32-accountid32-palletstakingvalidatorprefs)\n        \n    *   [erasValidatorReward(`u32`): `Option<u128>`](#erasvalidatorrewardu32-optionu128)\n        \n    *   [forceEra(): `PalletStakingForcing`](#forceera-palletstakingforcing)\n        \n    *   [invulnerables(): `Vec<AccountId32>`](#invulnerables-vecaccountid32)\n        \n    *   [ledger(`AccountId32`): `Option<PalletStakingStakingLedger>`](#ledgeraccountid32-optionpalletstakingstakingledger)\n        \n    *   [maxNominatorsCount(): `Option<u32>`](#maxnominatorscount-optionu32)\n        \n    *   [maxValidatorsCount(): `Option<u32>`](#maxvalidatorscount-optionu32)\n        \n    *   [minCommission(): `Perbill`](#mincommission-perbill)\n        \n    *   [minimumActiveStake(): `u128`](#minimumactivestake-u128)\n        \n    *   [minimumValidatorCount(): `u32`](#minimumvalidatorcount-u32)\n        \n    *   [minNominatorBond(): `u128`](#minnominatorbond-u128)\n        \n    *   [minValidatorBond(): `u128`](#minvalidatorbond-u128)\n        \n    *   [nominators(`AccountId32`): `Option<PalletStakingNominations>`](#nominatorsaccountid32-optionpalletstakingnominations)\n        \n    *   [nominatorSlashInEra(`u32, AccountId32`): `Option<u128>`](#nominatorslashinerau32-accountid32-optionu128)\n        \n    *   [offendingValidators(): `Vec<(u32,bool)>`](#offendingvalidators-vecu32bool)\n        \n    *   [payee(`AccountId32`): `PalletStakingRewardDestination`](#payeeaccountid32-palletstakingrewarddestination)\n        \n    *   [slashingSpans(`AccountId32`): `Option<PalletStakingSlashingSlashingSpans>`](#slashingspansaccountid32-optionpalletstakingslashingslashingspans)\n        \n    *   [slashRewardFraction(): `Perbill`](#slashrewardfraction-perbill)\n        \n    *   [spanSlash(`(AccountId32,u32)`): `PalletStakingSlashingSpanRecord`](#spanslashaccountid32u32-palletstakingslashingspanrecord)\n        \n    *   [unappliedSlashes(`u32`): `Vec<PalletStakingUnappliedSlash>`](#unappliedslashesu32-vecpalletstakingunappliedslash)\n        \n    *   [validatorCount(): `u32`](#validatorcount-u32)\n        \n    *   [validators(`AccountId32`): `PalletStakingValidatorPrefs`](#validatorsaccountid32-palletstakingvalidatorprefs)\n        \n    *   [validatorSlashInEra(`u32, AccountId32`): `Option<(Perbill,u128)>`](#validatorslashinerau32-accountid32-optionperbillu128)\n        \n*   [stateTrieMigration](#statetriemigration)\n    *   [autoLimits(): `Option<PalletStateTrieMigrationMigrationLimits>`](#autolimits-optionpalletstatetriemigrationmigrationlimits)\n        \n    *   [migrationProcess(): `PalletStateTrieMigrationMigrationTask`](#migrationprocess-palletstatetriemigrationmigrationtask)\n        \n    *   [signedMigrationMaxLimits(): `Option<PalletStateTrieMigrationMigrationLimits>`](#signedmigrationmaxlimits-optionpalletstatetriemigrationmigrationlimits)\n        \n*   [substrate](#substrate)\n    *   [changesTrieConfig(): `u32`](#changestrieconfig-u32)\n        \n    *   [childStorageKeyPrefix(): `u32`](#childstoragekeyprefix-u32)\n        \n    *   [code(): `Bytes`](#code-bytes)\n        \n    *   [extrinsicIndex(): `u32`](#extrinsicindex-u32)\n        \n    *   [heapPages(): `u64`](#heappages-u64)\n        \n    *   [intrablockEntropy(): `[u8;32]`](#intrablockentropy-u832)\n        \n*   [system](#system)\n    *   [account(`AccountId32`): `FrameSystemAccountInfo`](#accountaccountid32-framesystemaccountinfo)\n        \n    *   [allExtrinsicsLen(): `Option<u32>`](#allextrinsicslen-optionu32)\n        \n    *   [blockHash(`u32`): `H256`](#blockhashu32-h256)\n        \n    *   [blockWeight(): `FrameSupportDispatchPerDispatchClassWeight`](#blockweight-framesupportdispatchperdispatchclassweight)\n        \n    *   [digest(): `SpRuntimeDigest`](#digest-spruntimedigest)\n        \n    *   [eventCount(): `u32`](#eventcount-u32)\n        \n    *   [events(): `Vec<FrameSystemEventRecord>`](#events-vecframesystemeventrecord)\n        \n    *   [eventTopics(`H256`): `Vec<(u32,u32)>`](#eventtopicsh256-vecu32u32)\n        \n    *   [executionPhase(): `Option<FrameSystemPhase>`](#executionphase-optionframesystemphase)\n        \n    *   [extrinsicCount(): `Option<u32>`](#extrinsiccount-optionu32)\n        \n    *   [extrinsicData(`u32`): `Bytes`](#extrinsicdatau32-bytes)\n        \n    *   [lastRuntimeUpgrade(): `Option<FrameSystemLastRuntimeUpgradeInfo>`](#lastruntimeupgrade-optionframesystemlastruntimeupgradeinfo)\n        \n    *   [number(): `u32`](#number-u32)\n        \n    *   [parentHash(): `H256`](#parenthash-h256)\n        \n    *   [upgradedToTripleRefCount(): `bool`](#upgradedtotriplerefcount-bool)\n        \n    *   [upgradedToU32RefCount(): `bool`](#upgradedtou32refcount-bool)\n        \n*   [timestamp](#timestamp)\n    *   [didUpdate(): `bool`](#didupdate-bool)\n        \n    *   [now(): `u64`](#now-u64)\n        \n*   [transactionPayment](#transactionpayment)\n    *   [nextFeeMultiplier(): `u128`](#nextfeemultiplier-u128)\n        \n    *   [storageVersion(): `PalletTransactionPaymentReleases`](#storageversion-pallettransactionpaymentreleases)\n        \n*   [treasury](#treasury)\n    *   [approvals(): `Vec<u32>`](#approvals-vecu32)\n        \n    *   [deactivated(): `u128`](#deactivated-u128)\n        \n    *   [proposalCount(): `u32`](#proposalcount-u32)\n        \n    *   [proposals(`u32`): `Option<PalletTreasuryProposal>`](#proposalsu32-optionpallettreasuryproposal)\n        \n*   [vesting](#vesting)\n    *   [storageVersion(): `PalletVestingReleases`](#storageversion-palletvestingreleases)\n        \n    *   [vesting(`AccountId32`): `Option<Vec<PalletVestingVestingInfo>>`](#vestingaccountid32-optionvecpalletvestingvestinginfo)\n        \n*   [voterList](#voterlist)\n    *   [counterForListNodes(): `u32`](#counterforlistnodes-u32)\n        \n    *   [listBags(`u64`): `Option<PalletBagsListListBag>`](#listbagsu64-optionpalletbagslistlistbag)\n        \n    *   [listNodes(`AccountId32`): `Option<PalletBagsListListNode>`](#listnodesaccountid32-optionpalletbagslistlistnode)\n        \n*   [whitelist](#whitelist)\n    *   [whitelistedCall(`H256`): `Option<Null>`](#whitelistedcallh256-optionnull)\n        \n*   [xcmPallet](#xcmpallet)\n    *   [assetTraps(`H256`): `u32`](#assettrapsh256-u32)\n        \n    *   [currentMigration(): `Option<PalletXcmVersionMigrationStage>`](#currentmigration-optionpalletxcmversionmigrationstage)\n        \n    *   [lockedFungibles(`AccountId32`): `Option<Vec<(u128,XcmVersionedMultiLocation)>>`](#lockedfungiblesaccountid32-optionvecu128xcmversionedmultilocation)\n        \n    *   [queries(`u64`): `Option<PalletXcmQueryStatus>`](#queriesu64-optionpalletxcmquerystatus)\n        \n    *   [queryCounter(): `u64`](#querycounter-u64)\n        \n    *   [remoteLockedFungibles(`u32, AccountId32, XcmVersionedAssetId`): `Option<PalletXcmRemoteLockedFungibleRecord>`](#remotelockedfungiblesu32-accountid32-xcmversionedassetid-optionpalletxcmremotelockedfungiblerecord)\n        \n    *   [safeXcmVersion(): `Option<u32>`](#safexcmversion-optionu32)\n        \n    *   [supportedVersion(`u32, XcmVersionedMultiLocation`): `Option<u32>`](#supportedversionu32-xcmversionedmultilocation-optionu32)\n        \n    *   [versionDiscoveryQueue(): `Vec<(XcmVersionedMultiLocation,u32)>`](#versiondiscoveryqueue-vecxcmversionedmultilocationu32)\n        \n    *   [versionNotifiers(`u32, XcmVersionedMultiLocation`): `Option<u64>`](#versionnotifiersu32-xcmversionedmultilocation-optionu64)\n        \n    *   [versionNotifyTargets(`u32, XcmVersionedMultiLocation`): `Option<(u64,SpWeightsWeightV2Weight,u32)>`](#versionnotifytargetsu32-xcmversionedmultilocation-optionu64spweightsweightv2weightu32)\n        \n    *   [xcmExecutionSuspended(): `bool`](#xcmexecutionsuspended-bool)"}, {"title": null, "description": null, "source_url": "https://polkadot.js.org/docs/polkadot", "markdown": "[Skip to main content](#__docusaurus_skipToContent_fallback)\n\n[![polkadot{.js}](https://polkadot.js.org/docs/img/logo.svg)\\\n\\\n**polkadot{.js}**](/docs/)\n\n[Apps UI (Wallet)](https://polkadot.js.org/apps/)\n[GitHub](https://github.com/polkadot-js/docs)\n\nSearch...\n\n*   [Introduction](#)\n    \n*   [API](#)\n    \n*   [Metadata](#)\n    \n    *   [Substrate](#)\n        \n    *   [Polkadot](#)\n        \n        *   [Overview](/docs/polkadot)\n            \n        *   [Runtime](/docs/polkadot/runtime)\n            \n        *   [JSON-RPC](/docs/polkadot/rpc)\n            \n        *   [Constants](/docs/polkadot/constants)\n            \n        *   [Storage](/docs/polkadot/storage)\n            \n        *   [Extrinsics](/docs/polkadot/extrinsics)\n            \n        *   [Events](/docs/polkadot/events)\n            \n        *   [Errors](/docs/polkadot/errors)\n            \n    *   [Kusama](#)\n        \n*   [Keyring](#)\n    \n*   [Crypto Utilities](#)\n    \n*   [Contracts (API)](#)\n    \n*   [Identicon (UI)](#)\n    \n*   [Keyring (UI)](#)\n    \n*   [Extension](#)\n    \n*   [Run, Bundle, Test](#)\n    \n\n*   [](/docs/)\n    \n*   Metadata\n*   Polkadot\n*   Overview\n\nOverview\n========\n\nAs part of a running node, some information is exposed as part of the metadata. These sections provide a static list of available interfaces as generated from a running Polkadot node.\n\n[Edit this page](https://github.com/polkadot-js/docs/edit/master/docs/polkadot/intro.md)\n\n[Previous\\\n\\\nErrors](/docs/substrate/errors)\n[Next\\\n\\\nRuntime](/docs/polkadot/runtime)"}, {"title": null, "description": null, "source_url": "https://polkadot.js.org/docs/polkadot/constants", "markdown": "[Skip to main content](#__docusaurus_skipToContent_fallback)\n\n[![polkadot{.js}](https://polkadot.js.org/docs/img/logo.svg)\\\n\\\n**polkadot{.js}**](/docs/)\n\n[Apps UI (Wallet)](https://polkadot.js.org/apps/)\n[GitHub](https://github.com/polkadot-js/docs)\n\nSearch...\n\n*   [Introduction](#)\n    \n*   [API](#)\n    \n*   [Metadata](#)\n    \n    *   [Substrate](#)\n        \n    *   [Polkadot](#)\n        \n        *   [Overview](/docs/polkadot)\n            \n        *   [Runtime](/docs/polkadot/runtime)\n            \n        *   [JSON-RPC](/docs/polkadot/rpc)\n            \n        *   [Constants](/docs/polkadot/constants)\n            \n        *   [Storage](/docs/polkadot/storage)\n            \n        *   [Extrinsics](/docs/polkadot/extrinsics)\n            \n        *   [Events](/docs/polkadot/events)\n            \n        *   [Errors](/docs/polkadot/errors)\n            \n    *   [Kusama](#)\n        \n*   [Keyring](#)\n    \n*   [Crypto Utilities](#)\n    \n*   [Contracts (API)](#)\n    \n*   [Identicon (UI)](#)\n    \n*   [Keyring (UI)](#)\n    \n*   [Extension](#)\n    \n*   [Run, Bundle, Test](#)\n    \n\n*   [](/docs/)\n    \n*   Metadata\n*   Polkadot\n*   Constants\n\nOn this page\n\nConstants\n=========\n\nThe following sections contain the module constants, also known as parameter types. These can only be changed as part of a runtime upgrade. On the api, these are exposed via `api.consts.<module>.<method>`.\n\n(NOTE: These were generated from a static/snapshot view of a recent default Polkadot runtime. Some items may not be available in older nodes, or in any customized implementations.)\n\n*   **[auctions](#auctions)\n    **\n    \n*   **[babe](#babe)\n    **\n    \n*   **[balances](#balances)\n    **\n    \n*   **[bounties](#bounties)\n    **\n    \n*   **[childBounties](#childbounties)\n    **\n    \n*   **[claims](#claims)\n    **\n    \n*   **[convictionVoting](#convictionvoting)\n    **\n    \n*   **[crowdloan](#crowdloan)\n    **\n    \n*   **[electionProviderMultiPhase](#electionprovidermultiphase)\n    **\n    \n*   **[fastUnstake](#fastunstake)\n    **\n    \n*   **[grandpa](#grandpa)\n    **\n    \n*   **[identity](#identity)\n    **\n    \n*   **[imOnline](#imonline)\n    **\n    \n*   **[indices](#indices)\n    **\n    \n*   **[messageQueue](#messagequeue)\n    **\n    \n*   **[multisig](#multisig)\n    **\n    \n*   **[nominationPools](#nominationpools)\n    **\n    \n*   **[paras](#paras)\n    **\n    \n*   **[proxy](#proxy)\n    **\n    \n*   **[referenda](#referenda)\n    **\n    \n*   **[registrar](#registrar)\n    **\n    \n*   **[scheduler](#scheduler)\n    **\n    \n*   **[slots](#slots)\n    **\n    \n*   **[staking](#staking)\n    **\n    \n*   **[system](#system)\n    **\n    \n*   **[timestamp](#timestamp)\n    **\n    \n*   **[transactionPayment](#transactionpayment)\n    **\n    \n*   **[treasury](#treasury)\n    **\n    \n*   **[utility](#utility)\n    **\n    \n*   **[vesting](#vesting)\n    **\n    \n*   **[voterList](#voterlist)\n    **\n    \n\n* * *\n\nauctions[\u200b](#auctions \"Direct link to auctions\")\n\n-------------------------------------------------\n\n### endingPeriod: `u32`[\u200b](#endingperiod-u32 \"Direct link to endingperiod-u32\")\n\n*   **interface**: `api.consts.auctions.endingPeriod`\n*   **summary**: The number of blocks over which an auction may be retroactively ended.\n\n### leasePeriodsPerSlot: `u32`[\u200b](#leaseperiodsperslot-u32 \"Direct link to leaseperiodsperslot-u32\")\n\n*   **interface**: `api.consts.auctions.leasePeriodsPerSlot`\n\n### sampleLength: `u32`[\u200b](#samplelength-u32 \"Direct link to samplelength-u32\")\n\n*   **interface**: `api.consts.auctions.sampleLength`\n    \n*   **summary**: The length of each sample to take during the ending period.\n    \n    `EndingPeriod` / `SampleLength` = Total # of Samples\n    \n\n### slotRangeCount: `u32`[\u200b](#slotrangecount-u32 \"Direct link to slotrangecount-u32\")\n\n*   **interface**: `api.consts.auctions.slotRangeCount`\n\n* * *\n\nbabe[\u200b](#babe \"Direct link to babe\")\n\n-------------------------------------\n\n### epochDuration: `u64`[\u200b](#epochduration-u64 \"Direct link to epochduration-u64\")\n\n*   **interface**: `api.consts.babe.epochDuration`\n*   **summary**: The amount of time, in slots, that each epoch should last. NOTE: Currently it is not possible to change the epoch duration after the chain has started. Attempting to do so will brick block production.\n\n### expectedBlockTime: `u64`[\u200b](#expectedblocktime-u64 \"Direct link to expectedblocktime-u64\")\n\n*   **interface**: `api.consts.babe.expectedBlockTime`\n*   **summary**: The expected average block time at which BABE should be creating blocks. Since BABE is probabilistic it is not trivial to figure out what the expected average block time should be based on the slot duration and the security parameter `c` (where `1 - c` represents the probability of a slot being empty).\n\n### maxAuthorities: `u32`[\u200b](#maxauthorities-u32 \"Direct link to maxauthorities-u32\")\n\n*   **interface**: `api.consts.babe.maxAuthorities`\n*   **summary**: Max number of authorities allowed\n\n### maxNominators: `u32`[\u200b](#maxnominators-u32 \"Direct link to maxnominators-u32\")\n\n*   **interface**: `api.consts.babe.maxNominators`\n*   **summary**: The maximum number of nominators for each validator.\n\n* * *\n\nbalances[\u200b](#balances \"Direct link to balances\")\n\n-------------------------------------------------\n\n### existentialDeposit: `u128`[\u200b](#existentialdeposit-u128 \"Direct link to existentialdeposit-u128\")\n\n*   **interface**: `api.consts.balances.existentialDeposit`\n    \n*   **summary**: The minimum amount required to keep an account open. MUST BE GREATER THAN ZERO!\n    \n    If you _really_ need it to be zero, you can enable the feature `insecure_zero_ed` for this pallet. However, you do so at your own risk: this will open up a major DoS vector. In case you have multiple sources of provider references, you may also get unexpected behaviour if you set this to zero.\n    \n    Bottom line: Do yourself a favour and make it at least one!\n    \n\n### maxFreezes: `u32`[\u200b](#maxfreezes-u32 \"Direct link to maxfreezes-u32\")\n\n*   **interface**: `api.consts.balances.maxFreezes`\n*   **summary**: The maximum number of individual freeze locks that can exist on an account at any time.\n\n### maxHolds: `u32`[\u200b](#maxholds-u32 \"Direct link to maxholds-u32\")\n\n*   **interface**: `api.consts.balances.maxHolds`\n*   **summary**: The maximum number of holds that can exist on an account at any time.\n\n### maxLocks: `u32`[\u200b](#maxlocks-u32 \"Direct link to maxlocks-u32\")\n\n*   **interface**: `api.consts.balances.maxLocks`\n*   **summary**: The maximum number of locks that should exist on an account. Not strictly enforced, but used for weight estimation.\n\n### maxReserves: `u32`[\u200b](#maxreserves-u32 \"Direct link to maxreserves-u32\")\n\n*   **interface**: `api.consts.balances.maxReserves`\n*   **summary**: The maximum number of named reserves that can exist on an account.\n\n* * *\n\nbounties[\u200b](#bounties \"Direct link to bounties\")\n\n-------------------------------------------------\n\n### bountyDepositBase: `u128`[\u200b](#bountydepositbase-u128 \"Direct link to bountydepositbase-u128\")\n\n*   **interface**: `api.consts.bounties.bountyDepositBase`\n*   **summary**: The amount held on deposit for placing a bounty proposal.\n\n### bountyDepositPayoutDelay: `u32`[\u200b](#bountydepositpayoutdelay-u32 \"Direct link to bountydepositpayoutdelay-u32\")\n\n*   **interface**: `api.consts.bounties.bountyDepositPayoutDelay`\n*   **summary**: The delay period for which a bounty beneficiary need to wait before claim the payout.\n\n### bountyUpdatePeriod: `u32`[\u200b](#bountyupdateperiod-u32 \"Direct link to bountyupdateperiod-u32\")\n\n*   **interface**: `api.consts.bounties.bountyUpdatePeriod`\n*   **summary**: Bounty duration in blocks.\n\n### bountyValueMinimum: `u128`[\u200b](#bountyvalueminimum-u128 \"Direct link to bountyvalueminimum-u128\")\n\n*   **interface**: `api.consts.bounties.bountyValueMinimum`\n*   **summary**: Minimum value for a bounty.\n\n### curatorDepositMax: `Option<u128>`[\u200b](#curatordepositmax-optionu128 \"Direct link to curatordepositmax-optionu128\")\n\n*   **interface**: `api.consts.bounties.curatorDepositMax`\n*   **summary**: Maximum amount of funds that should be placed in a deposit for making a proposal.\n\n### curatorDepositMin: `Option<u128>`[\u200b](#curatordepositmin-optionu128 \"Direct link to curatordepositmin-optionu128\")\n\n*   **interface**: `api.consts.bounties.curatorDepositMin`\n*   **summary**: Minimum amount of funds that should be placed in a deposit for making a proposal.\n\n### curatorDepositMultiplier: `Permill`[\u200b](#curatordepositmultiplier-permill \"Direct link to curatordepositmultiplier-permill\")\n\n*   **interface**: `api.consts.bounties.curatorDepositMultiplier`\n    \n*   **summary**: The curator deposit is calculated as a percentage of the curator fee.\n    \n    This deposit has optional upper and lower bounds with `CuratorDepositMax` and `CuratorDepositMin`.\n    \n\n### dataDepositPerByte: `u128`[\u200b](#datadepositperbyte-u128 \"Direct link to datadepositperbyte-u128\")\n\n*   **interface**: `api.consts.bounties.dataDepositPerByte`\n*   **summary**: The amount held on deposit per byte within the tip report reason or bounty description.\n\n### maximumReasonLength: `u32`[\u200b](#maximumreasonlength-u32 \"Direct link to maximumreasonlength-u32\")\n\n*   **interface**: `api.consts.bounties.maximumReasonLength`\n    \n*   **summary**: Maximum acceptable reason length.\n    \n    Benchmarks depend on this value, be sure to update weights file when changing this value\n    \n\n* * *\n\nchildBounties[\u200b](#childbounties \"Direct link to childBounties\")\n\n----------------------------------------------------------------\n\n### childBountyValueMinimum: `u128`[\u200b](#childbountyvalueminimum-u128 \"Direct link to childbountyvalueminimum-u128\")\n\n*   **interface**: `api.consts.childBounties.childBountyValueMinimum`\n*   **summary**: Minimum value for a child-bounty.\n\n### maxActiveChildBountyCount: `u32`[\u200b](#maxactivechildbountycount-u32 \"Direct link to maxactivechildbountycount-u32\")\n\n*   **interface**: `api.consts.childBounties.maxActiveChildBountyCount`\n*   **summary**: Maximum number of child bounties that can be added to a parent bounty.\n\n* * *\n\nclaims[\u200b](#claims \"Direct link to claims\")\n\n-------------------------------------------\n\n### prefix: `Bytes`[\u200b](#prefix-bytes \"Direct link to prefix-bytes\")\n\n*   **interface**: `api.consts.claims.prefix`\n\n* * *\n\nconvictionVoting[\u200b](#convictionvoting \"Direct link to convictionVoting\")\n\n-------------------------------------------------------------------------\n\n### maxVotes: `u32`[\u200b](#maxvotes-u32 \"Direct link to maxvotes-u32\")\n\n*   **interface**: `api.consts.convictionVoting.maxVotes`\n    \n*   **summary**: The maximum number of concurrent votes an account may have.\n    \n    Also used to compute weight, an overly large value can lead to extrinsics with large weight estimation: see `delegate` for instance.\n    \n\n### voteLockingPeriod: `u32`[\u200b](#votelockingperiod-u32 \"Direct link to votelockingperiod-u32\")\n\n*   **interface**: `api.consts.convictionVoting.voteLockingPeriod`\n    \n*   **summary**: The minimum period of vote locking.\n    \n    It should be no shorter than enactment period to ensure that in the case of an approval, those successful voters are locked into the consequences that their votes entail.\n    \n\n* * *\n\ncrowdloan[\u200b](#crowdloan \"Direct link to crowdloan\")\n\n----------------------------------------------------\n\n### minContribution: `u128`[\u200b](#mincontribution-u128 \"Direct link to mincontribution-u128\")\n\n*   **interface**: `api.consts.crowdloan.minContribution`\n*   **summary**: The minimum amount that may be contributed into a crowdloan. Should almost certainly be at least `ExistentialDeposit`.\n\n### palletId: `FrameSupportPalletId`[\u200b](#palletid-framesupportpalletid \"Direct link to palletid-framesupportpalletid\")\n\n*   **interface**: `api.consts.crowdloan.palletId`\n*   **summary**: `PalletId` for the crowdloan pallet. An appropriate value could be `PalletId(*b\"py/cfund\")`\n\n### removeKeysLimit: `u32`[\u200b](#removekeyslimit-u32 \"Direct link to removekeyslimit-u32\")\n\n*   **interface**: `api.consts.crowdloan.removeKeysLimit`\n*   **summary**: Max number of storage keys to remove per extrinsic call.\n\n* * *\n\nelectionProviderMultiPhase[\u200b](#electionprovidermultiphase \"Direct link to electionProviderMultiPhase\")\n\n-------------------------------------------------------------------------------------------------------\n\n### betterSignedThreshold: `Perbill`[\u200b](#bettersignedthreshold-perbill \"Direct link to bettersignedthreshold-perbill\")\n\n*   **interface**: `api.consts.electionProviderMultiPhase.betterSignedThreshold`\n*   **summary**: The minimum amount of improvement to the solution score that defines a solution as \"better\" in the Signed phase.\n\n### betterUnsignedThreshold: `Perbill`[\u200b](#betterunsignedthreshold-perbill \"Direct link to betterunsignedthreshold-perbill\")\n\n*   **interface**: `api.consts.electionProviderMultiPhase.betterUnsignedThreshold`\n*   **summary**: The minimum amount of improvement to the solution score that defines a solution as \"better\" in the Unsigned phase.\n\n### maxWinners: `u32`[\u200b](#maxwinners-u32 \"Direct link to maxwinners-u32\")\n\n*   **interface**: `api.consts.electionProviderMultiPhase.maxWinners`\n    \n*   **summary**: The maximum number of winners that can be elected by this `ElectionProvider` implementation.\n    \n    Note: This must always be greater or equal to `T::DataProvider::desired_targets()`.\n    \n\n### minerMaxLength: `u32`[\u200b](#minermaxlength-u32 \"Direct link to minermaxlength-u32\")\n\n*   **interface**: `api.consts.electionProviderMultiPhase.minerMaxLength`\n\n### minerMaxVotesPerVoter: `u32`[\u200b](#minermaxvotespervoter-u32 \"Direct link to minermaxvotespervoter-u32\")\n\n*   **interface**: `api.consts.electionProviderMultiPhase.minerMaxVotesPerVoter`\n\n### minerMaxWeight: `SpWeightsWeightV2Weight`[\u200b](#minermaxweight-spweightsweightv2weight \"Direct link to minermaxweight-spweightsweightv2weight\")\n\n*   **interface**: `api.consts.electionProviderMultiPhase.minerMaxWeight`\n\n### minerMaxWinners: `u32`[\u200b](#minermaxwinners-u32 \"Direct link to minermaxwinners-u32\")\n\n*   **interface**: `api.consts.electionProviderMultiPhase.minerMaxWinners`\n\n### minerTxPriority: `u64`[\u200b](#minertxpriority-u64 \"Direct link to minertxpriority-u64\")\n\n*   **interface**: `api.consts.electionProviderMultiPhase.minerTxPriority`\n*   **summary**: The priority of the unsigned transaction submitted in the unsigned-phase\n\n### offchainRepeat: `u32`[\u200b](#offchainrepeat-u32 \"Direct link to offchainrepeat-u32\")\n\n*   **interface**: `api.consts.electionProviderMultiPhase.offchainRepeat`\n    \n*   **summary**: The repeat threshold of the offchain worker.\n    \n    For example, if it is 5, that means that at least 5 blocks will elapse between attempts to submit the worker's solution.\n    \n\n### signedDepositBase: `u128`[\u200b](#signeddepositbase-u128 \"Direct link to signeddepositbase-u128\")\n\n*   **interface**: `api.consts.electionProviderMultiPhase.signedDepositBase`\n*   **summary**: Base deposit for a signed solution.\n\n### signedDepositByte: `u128`[\u200b](#signeddepositbyte-u128 \"Direct link to signeddepositbyte-u128\")\n\n*   **interface**: `api.consts.electionProviderMultiPhase.signedDepositByte`\n*   **summary**: Per-byte deposit for a signed solution.\n\n### signedDepositWeight: `u128`[\u200b](#signeddepositweight-u128 \"Direct link to signeddepositweight-u128\")\n\n*   **interface**: `api.consts.electionProviderMultiPhase.signedDepositWeight`\n*   **summary**: Per-weight deposit for a signed solution.\n\n### signedMaxRefunds: `u32`[\u200b](#signedmaxrefunds-u32 \"Direct link to signedmaxrefunds-u32\")\n\n*   **interface**: `api.consts.electionProviderMultiPhase.signedMaxRefunds`\n*   **summary**: The maximum amount of unchecked solutions to refund the call fee for.\n\n### signedMaxSubmissions: `u32`[\u200b](#signedmaxsubmissions-u32 \"Direct link to signedmaxsubmissions-u32\")\n\n*   **interface**: `api.consts.electionProviderMultiPhase.signedMaxSubmissions`\n    \n*   **summary**: Maximum number of signed submissions that can be queued.\n    \n    It is best to avoid adjusting this during an election, as it impacts downstream data structures. In particular, `SignedSubmissionIndices<T>` is bounded on this value. If you update this value during an election, you _must_ ensure that `SignedSubmissionIndices.len()` is less than or equal to the new value. Otherwise, attempts to submit new solutions may cause a runtime panic.\n    \n\n### signedMaxWeight: `SpWeightsWeightV2Weight`[\u200b](#signedmaxweight-spweightsweightv2weight \"Direct link to signedmaxweight-spweightsweightv2weight\")\n\n*   **interface**: `api.consts.electionProviderMultiPhase.signedMaxWeight`\n    \n*   **summary**: Maximum weight of a signed solution.\n    \n    If \\[`Config::MinerConfig`\\] is being implemented to submit signed solutions (outside of this pallet), then \\[`MinerConfig::solution_weight`\\] is used to compare against this value.\n    \n\n### signedPhase: `u32`[\u200b](#signedphase-u32 \"Direct link to signedphase-u32\")\n\n*   **interface**: `api.consts.electionProviderMultiPhase.signedPhase`\n*   **summary**: Duration of the signed phase.\n\n### signedRewardBase: `u128`[\u200b](#signedrewardbase-u128 \"Direct link to signedrewardbase-u128\")\n\n*   **interface**: `api.consts.electionProviderMultiPhase.signedRewardBase`\n*   **summary**: Base reward for a signed solution\n\n### unsignedPhase: `u32`[\u200b](#unsignedphase-u32 \"Direct link to unsignedphase-u32\")\n\n*   **interface**: `api.consts.electionProviderMultiPhase.unsignedPhase`\n*   **summary**: Duration of the unsigned phase.\n\n* * *\n\nfastUnstake[\u200b](#fastunstake \"Direct link to fastUnstake\")\n\n----------------------------------------------------------\n\n### deposit: `u128`[\u200b](#deposit-u128 \"Direct link to deposit-u128\")\n\n*   **interface**: `api.consts.fastUnstake.deposit`\n*   **summary**: Deposit to take for unstaking, to make sure we're able to slash the it in order to cover the costs of resources on unsuccessful unstake.\n\n* * *\n\ngrandpa[\u200b](#grandpa \"Direct link to grandpa\")\n\n----------------------------------------------\n\n### maxAuthorities: `u32`[\u200b](#maxauthorities-u32-1 \"Direct link to maxauthorities-u32-1\")\n\n*   **interface**: `api.consts.grandpa.maxAuthorities`\n*   **summary**: Max Authorities in use\n\n### maxNominators: `u32`[\u200b](#maxnominators-u32-1 \"Direct link to maxnominators-u32-1\")\n\n*   **interface**: `api.consts.grandpa.maxNominators`\n*   **summary**: The maximum number of nominators for each validator.\n\n### maxSetIdSessionEntries: `u64`[\u200b](#maxsetidsessionentries-u64 \"Direct link to maxsetidsessionentries-u64\")\n\n*   **interface**: `api.consts.grandpa.maxSetIdSessionEntries`\n    \n*   **summary**: The maximum number of entries to keep in the set id to session index mapping.\n    \n    Since the `SetIdSession` map is only used for validating equivocations this value should relate to the bonding duration of whatever staking system is being used (if any). If equivocation handling is not enabled then this value can be zero.\n    \n\n* * *\n\nidentity[\u200b](#identity \"Direct link to identity\")\n\n-------------------------------------------------\n\n### basicDeposit: `u128`[\u200b](#basicdeposit-u128 \"Direct link to basicdeposit-u128\")\n\n*   **interface**: `api.consts.identity.basicDeposit`\n*   **summary**: The amount held on deposit for a registered identity\n\n### fieldDeposit: `u128`[\u200b](#fielddeposit-u128 \"Direct link to fielddeposit-u128\")\n\n*   **interface**: `api.consts.identity.fieldDeposit`\n*   **summary**: The amount held on deposit per additional field for a registered identity.\n\n### maxAdditionalFields: `u32`[\u200b](#maxadditionalfields-u32 \"Direct link to maxadditionalfields-u32\")\n\n*   **interface**: `api.consts.identity.maxAdditionalFields`\n*   **summary**: Maximum number of additional fields that may be stored in an ID. Needed to bound the I/O required to access an identity, but can be pretty high.\n\n### maxRegistrars: `u32`[\u200b](#maxregistrars-u32 \"Direct link to maxregistrars-u32\")\n\n*   **interface**: `api.consts.identity.maxRegistrars`\n*   **summary**: Maxmimum number of registrars allowed in the system. Needed to bound the complexity of, e.g., updating judgements.\n\n### maxSubAccounts: `u32`[\u200b](#maxsubaccounts-u32 \"Direct link to maxsubaccounts-u32\")\n\n*   **interface**: `api.consts.identity.maxSubAccounts`\n*   **summary**: The maximum number of sub-accounts allowed per identified account.\n\n### subAccountDeposit: `u128`[\u200b](#subaccountdeposit-u128 \"Direct link to subaccountdeposit-u128\")\n\n*   **interface**: `api.consts.identity.subAccountDeposit`\n*   **summary**: The amount held on deposit for a registered subaccount. This should account for the fact that one storage item's value will increase by the size of an account ID, and there will be another trie item whose value is the size of an account ID plus 32 bytes.\n\n* * *\n\nimOnline[\u200b](#imonline \"Direct link to imOnline\")\n\n-------------------------------------------------\n\n### unsignedPriority: `u64`[\u200b](#unsignedpriority-u64 \"Direct link to unsignedpriority-u64\")\n\n*   **interface**: `api.consts.imOnline.unsignedPriority`\n    \n*   **summary**: A configuration for base priority of unsigned transactions.\n    \n    This is exposed so that it can be tuned for particular runtime, when multiple pallets send unsigned transactions.\n    \n\n* * *\n\nindices[\u200b](#indices \"Direct link to indices\")\n\n----------------------------------------------\n\n### deposit: `u128`[\u200b](#deposit-u128-1 \"Direct link to deposit-u128-1\")\n\n*   **interface**: `api.consts.indices.deposit`\n*   **summary**: The deposit needed for reserving an index.\n\n* * *\n\nmessageQueue[\u200b](#messagequeue \"Direct link to messageQueue\")\n\n-------------------------------------------------------------\n\n### heapSize: `u32`[\u200b](#heapsize-u32 \"Direct link to heapsize-u32\")\n\n*   **interface**: `api.consts.messageQueue.heapSize`\n    \n*   **summary**: The size of the page; this implies the maximum message size which can be sent.\n    \n    A good value depends on the expected message sizes, their weights, the weight that is available for processing them and the maximal needed message size. The maximal message size is slightly lower than this as defined by \\[`MaxMessageLenOf`\\].\n    \n\n### maxStale: `u32`[\u200b](#maxstale-u32 \"Direct link to maxstale-u32\")\n\n*   **interface**: `api.consts.messageQueue.maxStale`\n*   **summary**: The maximum number of stale pages (i.e. of overweight messages) allowed before culling can happen. Once there are more stale pages than this, then historical pages may be dropped, even if they contain unprocessed overweight messages.\n\n### serviceWeight: `Option<SpWeightsWeightV2Weight>`[\u200b](#serviceweight-optionspweightsweightv2weight \"Direct link to serviceweight-optionspweightsweightv2weight\")\n\n*   **interface**: `api.consts.messageQueue.serviceWeight`\n    \n*   **summary**: The amount of weight (if any) which should be provided to the message queue for servicing enqueued items.\n    \n    This may be legitimately `None` in the case that you will call `ServiceQueues::service_queues` manually.\n    \n\n* * *\n\nmultisig[\u200b](#multisig \"Direct link to multisig\")\n\n-------------------------------------------------\n\n### depositBase: `u128`[\u200b](#depositbase-u128 \"Direct link to depositbase-u128\")\n\n*   **interface**: `api.consts.multisig.depositBase`\n    \n*   **summary**: The base amount of currency needed to reserve for creating a multisig execution or to store a dispatch call for later.\n    \n    This is held for an additional storage item whose value size is `4 + sizeof((BlockNumber, Balance, AccountId))` bytes and whose key size is `32 + sizeof(AccountId)` bytes.\n    \n\n### depositFactor: `u128`[\u200b](#depositfactor-u128 \"Direct link to depositfactor-u128\")\n\n*   **interface**: `api.consts.multisig.depositFactor`\n    \n*   **summary**: The amount of currency needed per unit threshold when creating a multisig execution.\n    \n    This is held for adding 32 bytes more into a pre-existing storage value.\n    \n\n### maxSignatories: `u32`[\u200b](#maxsignatories-u32 \"Direct link to maxsignatories-u32\")\n\n*   **interface**: `api.consts.multisig.maxSignatories`\n*   **summary**: The maximum amount of signatories allowed in the multisig.\n\n* * *\n\nnominationPools[\u200b](#nominationpools \"Direct link to nominationPools\")\n\n----------------------------------------------------------------------\n\n### maxPointsToBalance: `u8`[\u200b](#maxpointstobalance-u8 \"Direct link to maxpointstobalance-u8\")\n\n*   **interface**: `api.consts.nominationPools.maxPointsToBalance`\n    \n*   **summary**: The maximum pool points-to-balance ratio that an `open` pool can have.\n    \n    This is important in the event slashing takes place and the pool's points-to-balance ratio becomes disproportional.\n    \n    Moreover, this relates to the `RewardCounter` type as well, as the arithmetic operations are a function of number of points, and by setting this value to e.g. 10, you ensure that the total number of points in the system are at most 10 times the total\\_issuance of the chain, in the absolute worse case.\n    \n    For a value of 10, the threshold would be a pool points-to-balance ratio of 10:1. Such a scenario would also be the equivalent of the pool being 90% slashed.\n    \n\n### palletId: `FrameSupportPalletId`[\u200b](#palletid-framesupportpalletid-1 \"Direct link to palletid-framesupportpalletid-1\")\n\n*   **interface**: `api.consts.nominationPools.palletId`\n*   **summary**: The nomination pool's pallet id.\n\n* * *\n\nparas[\u200b](#paras \"Direct link to paras\")\n\n----------------------------------------\n\n### unsignedPriority: `u64`[\u200b](#unsignedpriority-u64-1 \"Direct link to unsignedpriority-u64-1\")\n\n*   **interface**: `api.consts.paras.unsignedPriority`\n\n* * *\n\nproxy[\u200b](#proxy \"Direct link to proxy\")\n\n----------------------------------------\n\n### announcementDepositBase: `u128`[\u200b](#announcementdepositbase-u128 \"Direct link to announcementdepositbase-u128\")\n\n*   **interface**: `api.consts.proxy.announcementDepositBase`\n    \n*   **summary**: The base amount of currency needed to reserve for creating an announcement.\n    \n    This is held when a new storage item holding a `Balance` is created (typically 16 bytes).\n    \n\n### announcementDepositFactor: `u128`[\u200b](#announcementdepositfactor-u128 \"Direct link to announcementdepositfactor-u128\")\n\n*   **interface**: `api.consts.proxy.announcementDepositFactor`\n    \n*   **summary**: The amount of currency needed per announcement made.\n    \n    This is held for adding an `AccountId`, `Hash` and `BlockNumber` (typically 68 bytes) into a pre-existing storage value.\n    \n\n### maxPending: `u32`[\u200b](#maxpending-u32 \"Direct link to maxpending-u32\")\n\n*   **interface**: `api.consts.proxy.maxPending`\n*   **summary**: The maximum amount of time-delayed announcements that are allowed to be pending.\n\n### maxProxies: `u32`[\u200b](#maxproxies-u32 \"Direct link to maxproxies-u32\")\n\n*   **interface**: `api.consts.proxy.maxProxies`\n*   **summary**: The maximum amount of proxies allowed for a single account.\n\n### proxyDepositBase: `u128`[\u200b](#proxydepositbase-u128 \"Direct link to proxydepositbase-u128\")\n\n*   **interface**: `api.consts.proxy.proxyDepositBase`\n    \n*   **summary**: The base amount of currency needed to reserve for creating a proxy.\n    \n    This is held for an additional storage item whose value size is `sizeof(Balance)` bytes and whose key size is `sizeof(AccountId)` bytes.\n    \n\n### proxyDepositFactor: `u128`[\u200b](#proxydepositfactor-u128 \"Direct link to proxydepositfactor-u128\")\n\n*   **interface**: `api.consts.proxy.proxyDepositFactor`\n    \n*   **summary**: The amount of currency needed per proxy added.\n    \n    This is held for adding 32 bytes plus an instance of `ProxyType` more into a pre-existing storage value. Thus, when configuring `ProxyDepositFactor` one should take into account `32 + proxy_type.encode().len()` bytes of data.\n    \n\n* * *\n\nreferenda[\u200b](#referenda \"Direct link to referenda\")\n\n----------------------------------------------------\n\n### alarmInterval: `u32`[\u200b](#alarminterval-u32 \"Direct link to alarminterval-u32\")\n\n*   **interface**: `api.consts.referenda.alarmInterval`\n*   **summary**: Quantization level for the referendum wakeup scheduler. A higher number will result in fewer storage reads/writes needed for smaller voters, but also result in delays to the automatic referendum status changes. Explicit servicing instructions are unaffected.\n\n### maxQueued: `u32`[\u200b](#maxqueued-u32 \"Direct link to maxqueued-u32\")\n\n*   **interface**: `api.consts.referenda.maxQueued`\n*   **summary**: Maximum size of the referendum queue for a single track.\n\n### submissionDeposit: `u128`[\u200b](#submissiondeposit-u128 \"Direct link to submissiondeposit-u128\")\n\n*   **interface**: `api.consts.referenda.submissionDeposit`\n*   **summary**: The minimum amount to be used as a deposit for a public referendum proposal.\n\n### tracks: `Vec<(u16,PalletReferendaTrackInfo)>`[\u200b](#tracks-vecu16palletreferendatrackinfo \"Direct link to tracks-vecu16palletreferendatrackinfo\")\n\n*   **interface**: `api.consts.referenda.tracks`\n*   **summary**: Information concerning the different referendum tracks.\n\n### undecidingTimeout: `u32`[\u200b](#undecidingtimeout-u32 \"Direct link to undecidingtimeout-u32\")\n\n*   **interface**: `api.consts.referenda.undecidingTimeout`\n*   **summary**: The number of blocks after submission that a referendum must begin being decided by. Once this passes, then anyone may cancel the referendum.\n\n* * *\n\nregistrar[\u200b](#registrar \"Direct link to registrar\")\n\n----------------------------------------------------\n\n### dataDepositPerByte: `u128`[\u200b](#datadepositperbyte-u128-1 \"Direct link to datadepositperbyte-u128-1\")\n\n*   **interface**: `api.consts.registrar.dataDepositPerByte`\n*   **summary**: The deposit to be paid per byte stored on chain.\n\n### paraDeposit: `u128`[\u200b](#paradeposit-u128 \"Direct link to paradeposit-u128\")\n\n*   **interface**: `api.consts.registrar.paraDeposit`\n*   **summary**: The deposit to be paid to run a on-demand parachain. This should include the cost for storing the genesis head and validation code.\n\n* * *\n\nscheduler[\u200b](#scheduler \"Direct link to scheduler\")\n\n----------------------------------------------------\n\n### maximumWeight: `SpWeightsWeightV2Weight`[\u200b](#maximumweight-spweightsweightv2weight \"Direct link to maximumweight-spweightsweightv2weight\")\n\n*   **interface**: `api.consts.scheduler.maximumWeight`\n*   **summary**: The maximum weight that may be scheduled per block for any dispatchables.\n\n### maxScheduledPerBlock: `u32`[\u200b](#maxscheduledperblock-u32 \"Direct link to maxscheduledperblock-u32\")\n\n*   **interface**: `api.consts.scheduler.maxScheduledPerBlock`\n    \n*   **summary**: The maximum number of scheduled calls in the queue for a single block.\n    \n    NOTE: + Dependent pallets' benchmarks might require a higher limit for the setting. Set a higher limit under `runtime-benchmarks` feature.\n    \n\n* * *\n\nslots[\u200b](#slots \"Direct link to slots\")\n\n----------------------------------------\n\n### leaseOffset: `u32`[\u200b](#leaseoffset-u32 \"Direct link to leaseoffset-u32\")\n\n*   **interface**: `api.consts.slots.leaseOffset`\n*   **summary**: The number of blocks to offset each lease period by.\n\n### leasePeriod: `u32`[\u200b](#leaseperiod-u32 \"Direct link to leaseperiod-u32\")\n\n*   **interface**: `api.consts.slots.leasePeriod`\n*   **summary**: The number of blocks over which a single period lasts.\n\n* * *\n\nstaking[\u200b](#staking \"Direct link to staking\")\n\n----------------------------------------------\n\n### bondingDuration: `u32`[\u200b](#bondingduration-u32 \"Direct link to bondingduration-u32\")\n\n*   **interface**: `api.consts.staking.bondingDuration`\n*   **summary**: Number of eras that staked funds must remain bonded for.\n\n### historyDepth: `u32`[\u200b](#historydepth-u32 \"Direct link to historydepth-u32\")\n\n*   **interface**: `api.consts.staking.historyDepth`\n    \n*   **summary**: Number of eras to keep in history.\n    \n    Following information is kept for eras in `[current_era - HistoryDepth, current_era]`: `ErasStakers`, `ErasStakersClipped`, `ErasValidatorPrefs`, `ErasValidatorReward`, `ErasRewardPoints`, `ErasTotalStake`, `ErasStartSessionIndex`, `StakingLedger.claimed_rewards`.\n    \n    Must be more than the number of eras delayed by session. I.e. active era must always be in history. I.e. `active_era > current_era - history_depth` must be guaranteed.\n    \n    If migrating an existing pallet from storage value to config value, this should be set to same value or greater as in storage.\n    \n    Note: `HistoryDepth` is used as the upper bound for the `BoundedVec` item `StakingLedger.claimed_rewards`. Setting this value lower than the existing value can lead to inconsistencies in the `StakingLedger` and will need to be handled properly in a migration. The test `reducing_history_depth_abrupt` shows this effect.\n    \n\n### maxNominatorRewardedPerValidator: `u32`[\u200b](#maxnominatorrewardedpervalidator-u32 \"Direct link to maxnominatorrewardedpervalidator-u32\")\n\n*   **interface**: `api.consts.staking.maxNominatorRewardedPerValidator`\n    \n*   **summary**: The maximum number of nominators rewarded for each validator.\n    \n    For each validator only the `$MaxNominatorRewardedPerValidator` biggest stakers can claim their reward. This used to limit the i/o cost for the nominator payout.\n    \n\n### maxUnlockingChunks: `u32`[\u200b](#maxunlockingchunks-u32 \"Direct link to maxunlockingchunks-u32\")\n\n*   **interface**: `api.consts.staking.maxUnlockingChunks`\n    \n*   **summary**: The maximum number of `unlocking` chunks a \\[`StakingLedger`\\] can have. Effectively determines how many unique eras a staker may be unbonding in.\n    \n    Note: `MaxUnlockingChunks` is used as the upper bound for the `BoundedVec` item `StakingLedger.unlocking`. Setting this value lower than the existing value can lead to inconsistencies in the `StakingLedger` and will need to be handled properly in a runtime migration. The test `reducing_max_unlocking_chunks_abrupt` shows this effect.\n    \n\n### sessionsPerEra: `u32`[\u200b](#sessionsperera-u32 \"Direct link to sessionsperera-u32\")\n\n*   **interface**: `api.consts.staking.sessionsPerEra`\n*   **summary**: Number of sessions per era.\n\n### slashDeferDuration: `u32`[\u200b](#slashdeferduration-u32 \"Direct link to slashdeferduration-u32\")\n\n*   **interface**: `api.consts.staking.slashDeferDuration`\n    \n*   **summary**: Number of eras that slashes are deferred by, after computation.\n    \n    This should be less than the bonding duration. Set to 0 if slashes should be applied immediately, without opportunity for intervention.\n    \n\n* * *\n\nsystem[\u200b](#system \"Direct link to system\")\n\n-------------------------------------------\n\n### blockHashCount: `u32`[\u200b](#blockhashcount-u32 \"Direct link to blockhashcount-u32\")\n\n*   **interface**: `api.consts.system.blockHashCount`\n*   **summary**: Maximum number of block number to block hash mappings to keep (oldest pruned first).\n\n### blockLength: `FrameSystemLimitsBlockLength`[\u200b](#blocklength-framesystemlimitsblocklength \"Direct link to blocklength-framesystemlimitsblocklength\")\n\n*   **interface**: `api.consts.system.blockLength`\n*   **summary**: The maximum length of a block (in bytes).\n\n### blockWeights: `FrameSystemLimitsBlockWeights`[\u200b](#blockweights-framesystemlimitsblockweights \"Direct link to blockweights-framesystemlimitsblockweights\")\n\n*   **interface**: `api.consts.system.blockWeights`\n*   **summary**: Block & extrinsics weights: base values and limits.\n\n### dbWeight: `SpWeightsRuntimeDbWeight`[\u200b](#dbweight-spweightsruntimedbweight \"Direct link to dbweight-spweightsruntimedbweight\")\n\n*   **interface**: `api.consts.system.dbWeight`\n*   **summary**: The weight of runtime database operations the runtime can invoke.\n\n### ss58Prefix: `u16`[\u200b](#ss58prefix-u16 \"Direct link to ss58prefix-u16\")\n\n*   **interface**: `api.consts.system.ss58Prefix`\n    \n*   **summary**: The designated SS58 prefix of this chain.\n    \n    This replaces the \"ss58Format\" property declared in the chain spec. Reason is that the runtime should know about the prefix in order to make use of it as an identifier of the chain.\n    \n\n### version: `SpVersionRuntimeVersion`[\u200b](#version-spversionruntimeversion \"Direct link to version-spversionruntimeversion\")\n\n*   **interface**: `api.consts.system.version`\n*   **summary**: Get the chain's current version.\n\n* * *\n\ntimestamp[\u200b](#timestamp \"Direct link to timestamp\")\n\n----------------------------------------------------\n\n### minimumPeriod: `u64`[\u200b](#minimumperiod-u64 \"Direct link to minimumperiod-u64\")\n\n*   **interface**: `api.consts.timestamp.minimumPeriod`\n*   **summary**: The minimum period between blocks. Beware that this is different to the _expected_ period that the block production apparatus provides. Your chosen consensus system will generally work with this to determine a sensible block time. e.g. For Aura, it will be double this period on default settings.\n\n* * *\n\ntransactionPayment[\u200b](#transactionpayment \"Direct link to transactionPayment\")\n\n-------------------------------------------------------------------------------\n\n### operationalFeeMultiplier: `u8`[\u200b](#operationalfeemultiplier-u8 \"Direct link to operationalfeemultiplier-u8\")\n\n*   **interface**: `api.consts.transactionPayment.operationalFeeMultiplier`\n    \n*   **summary**: A fee mulitplier for `Operational` extrinsics to compute \"virtual tip\" to boost their `priority`\n    \n    This value is multipled by the `final_fee` to obtain a \"virtual tip\" that is later added to a tip component in regular `priority` calculations. It means that a `Normal` transaction can front-run a similarly-sized `Operational` extrinsic (with no tip), by including a tip value greater than the virtual tip.\n    \n    \\`\\``rust,ignore // For` Normal\\` let priority = priority\\_calc(tip);\n    \n    // For `Operational` let virtual\\_tip = (inclusion\\_fee + tip) \\* OperationalFeeMultiplier; let priority = priority\\_calc(tip + virtual\\_tip); \\`\\`\\`\n    \n    Note that since we use `final_fee` the multiplier applies also to the regular `tip` sent with the transaction. So, not only does the transaction get a priority bump based on the `inclusion_fee`, but we also amplify the impact of tips applied to `Operational` transactions.\n    \n\n* * *\n\ntreasury[\u200b](#treasury \"Direct link to treasury\")\n\n-------------------------------------------------\n\n### burn: `Permill`[\u200b](#burn-permill \"Direct link to burn-permill\")\n\n*   **interface**: `api.consts.treasury.burn`\n*   **summary**: Percentage of spare funds (if any) that are burnt per spend period.\n\n### maxApprovals: `u32`[\u200b](#maxapprovals-u32 \"Direct link to maxapprovals-u32\")\n\n*   **interface**: `api.consts.treasury.maxApprovals`\n    \n*   **summary**: The maximum number of approvals that can wait in the spending queue.\n    \n    NOTE: This parameter is also used within the Bounties Pallet extension if enabled.\n    \n\n### palletId: `FrameSupportPalletId`[\u200b](#palletid-framesupportpalletid-2 \"Direct link to palletid-framesupportpalletid-2\")\n\n*   **interface**: `api.consts.treasury.palletId`\n*   **summary**: The treasury's pallet id, used for deriving its sovereign account ID.\n\n### proposalBond: `Permill`[\u200b](#proposalbond-permill \"Direct link to proposalbond-permill\")\n\n*   **interface**: `api.consts.treasury.proposalBond`\n*   **summary**: Fraction of a proposal's value that should be bonded in order to place the proposal. An accepted proposal gets these back. A rejected proposal does not.\n\n### proposalBondMaximum: `Option<u128>`[\u200b](#proposalbondmaximum-optionu128 \"Direct link to proposalbondmaximum-optionu128\")\n\n*   **interface**: `api.consts.treasury.proposalBondMaximum`\n*   **summary**: Maximum amount of funds that should be placed in a deposit for making a proposal.\n\n### proposalBondMinimum: `u128`[\u200b](#proposalbondminimum-u128 \"Direct link to proposalbondminimum-u128\")\n\n*   **interface**: `api.consts.treasury.proposalBondMinimum`\n*   **summary**: Minimum amount of funds that should be placed in a deposit for making a proposal.\n\n### spendPeriod: `u32`[\u200b](#spendperiod-u32 \"Direct link to spendperiod-u32\")\n\n*   **interface**: `api.consts.treasury.spendPeriod`\n*   **summary**: Period between successive spends.\n\n* * *\n\nutility[\u200b](#utility \"Direct link to utility\")\n\n----------------------------------------------\n\n### batchedCallsLimit: `u32`[\u200b](#batchedcallslimit-u32 \"Direct link to batchedcallslimit-u32\")\n\n*   **interface**: `api.consts.utility.batchedCallsLimit`\n*   **summary**: The limit on the number of batched calls.\n\n* * *\n\nvesting[\u200b](#vesting \"Direct link to vesting\")\n\n----------------------------------------------\n\n### maxVestingSchedules: `u32`[\u200b](#maxvestingschedules-u32 \"Direct link to maxvestingschedules-u32\")\n\n*   **interface**: `api.consts.vesting.maxVestingSchedules`\n\n### minVestedTransfer: `u128`[\u200b](#minvestedtransfer-u128 \"Direct link to minvestedtransfer-u128\")\n\n*   **interface**: `api.consts.vesting.minVestedTransfer`\n*   **summary**: The minimum amount transferred to call `vested_transfer`.\n\n* * *\n\nvoterList[\u200b](#voterlist \"Direct link to voterList\")\n\n----------------------------------------------------\n\n### bagThresholds: `Vec<u64>`[\u200b](#bagthresholds-vecu64 \"Direct link to bagthresholds-vecu64\")\n\n*   **interface**: `api.consts.voterList.bagThresholds`\n    \n*   **summary**: The list of thresholds separating the various bags.\n    \n    Ids are separated into unsorted bags according to their score. This specifies the thresholds separating the bags. An id's bag is the largest bag for which the id's score is less than or equal to its upper threshold.\n    \n    When ids are iterated, higher bags are iterated completely before lower bags. This means that iteration is _semi-sorted_: ids of higher score tend to come before ids of lower score, but peer ids within a particular bag are sorted in insertion order.\n    \n    #### Expressing the constant[\u200b](#expressing-the-constant \"Direct link to Expressing the constant\")\n    \n    This constant must be sorted in strictly increasing order. Duplicate items are not permitted.\n    \n    There is an implied upper limit of `Score::MAX`; that value does not need to be specified within the bag. For any two threshold lists, if one ends with `Score::MAX`, the other one does not, and they are otherwise equal, the two lists will behave identically.\n    \n    #### Calculation[\u200b](#calculation \"Direct link to Calculation\")\n    \n    It is recommended to generate the set of thresholds in a geometric series, such that there exists some constant ratio such that `threshold[k + 1] == (threshold[k] * constant_ratio).max(threshold[k] + 1)` for all `k`.\n    \n    The helpers in the `/utils/frame/generate-bags` module can simplify this calculation.\n    \n    #### Examples[\u200b](#examples \"Direct link to Examples\")\n    \n    *   If `BagThresholds::get().is_empty()`, then all ids are put into the same bag, and iteration is strictly in insertion order.\n        \n    *   If `BagThresholds::get().len() == 64`, and the thresholds are determined according to the procedure given above, then the constant ratio is equal to 2.\n        \n    *   If `BagThresholds::get().len() == 200`, and the thresholds are determined according to the procedure given above, then the constant ratio is approximately equal to 1.248.\n        \n    *   If the threshold list begins `[1, 2, 3, ...]`, then an id with score 0 or 1 will fall into bag 0, an id with score 2 will fall into bag 1, etc.\n        \n        #### Migration[\u200b](#migration \"Direct link to Migration\")\n        \n        In the event that this list ever changes, a copy of the old bags list must be retained. With that `List::migrate` can be called, which will perform the appropriate migration.\n        \n\n[Edit this page](https://github.com/polkadot-js/docs/edit/master/docs/polkadot/constants.md)\n\n[Previous\\\n\\\nJSON-RPC](/docs/polkadot/rpc)\n[Next\\\n\\\nStorage](/docs/polkadot/storage)\n\n*   [auctions](#auctions)\n    *   [endingPeriod: `u32`](#endingperiod-u32)\n        \n    *   [leasePeriodsPerSlot: `u32`](#leaseperiodsperslot-u32)\n        \n    *   [sampleLength: `u32`](#samplelength-u32)\n        \n    *   [slotRangeCount: `u32`](#slotrangecount-u32)\n        \n*   [babe](#babe)\n    *   [epochDuration: `u64`](#epochduration-u64)\n        \n    *   [expectedBlockTime: `u64`](#expectedblocktime-u64)\n        \n    *   [maxAuthorities: `u32`](#maxauthorities-u32)\n        \n    *   [maxNominators: `u32`](#maxnominators-u32)\n        \n*   [balances](#balances)\n    *   [existentialDeposit: `u128`](#existentialdeposit-u128)\n        \n    *   [maxFreezes: `u32`](#maxfreezes-u32)\n        \n    *   [maxHolds: `u32`](#maxholds-u32)\n        \n    *   [maxLocks: `u32`](#maxlocks-u32)\n        \n    *   [maxReserves: `u32`](#maxreserves-u32)\n        \n*   [bounties](#bounties)\n    *   [bountyDepositBase: `u128`](#bountydepositbase-u128)\n        \n    *   [bountyDepositPayoutDelay: `u32`](#bountydepositpayoutdelay-u32)\n        \n    *   [bountyUpdatePeriod: `u32`](#bountyupdateperiod-u32)\n        \n    *   [bountyValueMinimum: `u128`](#bountyvalueminimum-u128)\n        \n    *   [curatorDepositMax: `Option<u128>`](#curatordepositmax-optionu128)\n        \n    *   [curatorDepositMin: `Option<u128>`](#curatordepositmin-optionu128)\n        \n    *   [curatorDepositMultiplier: `Permill`](#curatordepositmultiplier-permill)\n        \n    *   [dataDepositPerByte: `u128`](#datadepositperbyte-u128)\n        \n    *   [maximumReasonLength: `u32`](#maximumreasonlength-u32)\n        \n*   [childBounties](#childbounties)\n    *   [childBountyValueMinimum: `u128`](#childbountyvalueminimum-u128)\n        \n    *   [maxActiveChildBountyCount: `u32`](#maxactivechildbountycount-u32)\n        \n*   [claims](#claims)\n    *   [prefix: `Bytes`](#prefix-bytes)\n        \n*   [convictionVoting](#convictionvoting)\n    *   [maxVotes: `u32`](#maxvotes-u32)\n        \n    *   [voteLockingPeriod: `u32`](#votelockingperiod-u32)\n        \n*   [crowdloan](#crowdloan)\n    *   [minContribution: `u128`](#mincontribution-u128)\n        \n    *   [palletId: `FrameSupportPalletId`](#palletid-framesupportpalletid)\n        \n    *   [removeKeysLimit: `u32`](#removekeyslimit-u32)\n        \n*   [electionProviderMultiPhase](#electionprovidermultiphase)\n    *   [betterSignedThreshold: `Perbill`](#bettersignedthreshold-perbill)\n        \n    *   [betterUnsignedThreshold: `Perbill`](#betterunsignedthreshold-perbill)\n        \n    *   [maxWinners: `u32`](#maxwinners-u32)\n        \n    *   [minerMaxLength: `u32`](#minermaxlength-u32)\n        \n    *   [minerMaxVotesPerVoter: `u32`](#minermaxvotespervoter-u32)\n        \n    *   [minerMaxWeight: `SpWeightsWeightV2Weight`](#minermaxweight-spweightsweightv2weight)\n        \n    *   [minerMaxWinners: `u32`](#minermaxwinners-u32)\n        \n    *   [minerTxPriority: `u64`](#minertxpriority-u64)\n        \n    *   [offchainRepeat: `u32`](#offchainrepeat-u32)\n        \n    *   [signedDepositBase: `u128`](#signeddepositbase-u128)\n        \n    *   [signedDepositByte: `u128`](#signeddepositbyte-u128)\n        \n    *   [signedDepositWeight: `u128`](#signeddepositweight-u128)\n        \n    *   [signedMaxRefunds: `u32`](#signedmaxrefunds-u32)\n        \n    *   [signedMaxSubmissions: `u32`](#signedmaxsubmissions-u32)\n        \n    *   [signedMaxWeight: `SpWeightsWeightV2Weight`](#signedmaxweight-spweightsweightv2weight)\n        \n    *   [signedPhase: `u32`](#signedphase-u32)\n        \n    *   [signedRewardBase: `u128`](#signedrewardbase-u128)\n        \n    *   [unsignedPhase: `u32`](#unsignedphase-u32)\n        \n*   [fastUnstake](#fastunstake)\n    *   [deposit: `u128`](#deposit-u128)\n        \n*   [grandpa](#grandpa)\n    *   [maxAuthorities: `u32`](#maxauthorities-u32-1)\n        \n    *   [maxNominators: `u32`](#maxnominators-u32-1)\n        \n    *   [maxSetIdSessionEntries: `u64`](#maxsetidsessionentries-u64)\n        \n*   [identity](#identity)\n    *   [basicDeposit: `u128`](#basicdeposit-u128)\n        \n    *   [fieldDeposit: `u128`](#fielddeposit-u128)\n        \n    *   [maxAdditionalFields: `u32`](#maxadditionalfields-u32)\n        \n    *   [maxRegistrars: `u32`](#maxregistrars-u32)\n        \n    *   [maxSubAccounts: `u32`](#maxsubaccounts-u32)\n        \n    *   [subAccountDeposit: `u128`](#subaccountdeposit-u128)\n        \n*   [imOnline](#imonline)\n    *   [unsignedPriority: `u64`](#unsignedpriority-u64)\n        \n*   [indices](#indices)\n    *   [deposit: `u128`](#deposit-u128-1)\n        \n*   [messageQueue](#messagequeue)\n    *   [heapSize: `u32`](#heapsize-u32)\n        \n    *   [maxStale: `u32`](#maxstale-u32)\n        \n    *   [serviceWeight: `Option<SpWeightsWeightV2Weight>`](#serviceweight-optionspweightsweightv2weight)\n        \n*   [multisig](#multisig)\n    *   [depositBase: `u128`](#depositbase-u128)\n        \n    *   [depositFactor: `u128`](#depositfactor-u128)\n        \n    *   [maxSignatories: `u32`](#maxsignatories-u32)\n        \n*   [nominationPools](#nominationpools)\n    *   [maxPointsToBalance: `u8`](#maxpointstobalance-u8)\n        \n    *   [palletId: `FrameSupportPalletId`](#palletid-framesupportpalletid-1)\n        \n*   [paras](#paras)\n    *   [unsignedPriority: `u64`](#unsignedpriority-u64-1)\n        \n*   [proxy](#proxy)\n    *   [announcementDepositBase: `u128`](#announcementdepositbase-u128)\n        \n    *   [announcementDepositFactor: `u128`](#announcementdepositfactor-u128)\n        \n    *   [maxPending: `u32`](#maxpending-u32)\n        \n    *   [maxProxies: `u32`](#maxproxies-u32)\n        \n    *   [proxyDepositBase: `u128`](#proxydepositbase-u128)\n        \n    *   [proxyDepositFactor: `u128`](#proxydepositfactor-u128)\n        \n*   [referenda](#referenda)\n    *   [alarmInterval: `u32`](#alarminterval-u32)\n        \n    *   [maxQueued: `u32`](#maxqueued-u32)\n        \n    *   [submissionDeposit: `u128`](#submissiondeposit-u128)\n        \n    *   [tracks: `Vec<(u16,PalletReferendaTrackInfo)>`](#tracks-vecu16palletreferendatrackinfo)\n        \n    *   [undecidingTimeout: `u32`](#undecidingtimeout-u32)\n        \n*   [registrar](#registrar)\n    *   [dataDepositPerByte: `u128`](#datadepositperbyte-u128-1)\n        \n    *   [paraDeposit: `u128`](#paradeposit-u128)\n        \n*   [scheduler](#scheduler)\n    *   [maximumWeight: `SpWeightsWeightV2Weight`](#maximumweight-spweightsweightv2weight)\n        \n    *   [maxScheduledPerBlock: `u32`](#maxscheduledperblock-u32)\n        \n*   [slots](#slots)\n    *   [leaseOffset: `u32`](#leaseoffset-u32)\n        \n    *   [leasePeriod: `u32`](#leaseperiod-u32)\n        \n*   [staking](#staking)\n    *   [bondingDuration: `u32`](#bondingduration-u32)\n        \n    *   [historyDepth: `u32`](#historydepth-u32)\n        \n    *   [maxNominatorRewardedPerValidator: `u32`](#maxnominatorrewardedpervalidator-u32)\n        \n    *   [maxUnlockingChunks: `u32`](#maxunlockingchunks-u32)\n        \n    *   [sessionsPerEra: `u32`](#sessionsperera-u32)\n        \n    *   [slashDeferDuration: `u32`](#slashdeferduration-u32)\n        \n*   [system](#system)\n    *   [blockHashCount: `u32`](#blockhashcount-u32)\n        \n    *   [blockLength: `FrameSystemLimitsBlockLength`](#blocklength-framesystemlimitsblocklength)\n        \n    *   [blockWeights: `FrameSystemLimitsBlockWeights`](#blockweights-framesystemlimitsblockweights)\n        \n    *   [dbWeight: `SpWeightsRuntimeDbWeight`](#dbweight-spweightsruntimedbweight)\n        \n    *   [ss58Prefix: `u16`](#ss58prefix-u16)\n        \n    *   [version: `SpVersionRuntimeVersion`](#version-spversionruntimeversion)\n        \n*   [timestamp](#timestamp)\n    *   [minimumPeriod: `u64`](#minimumperiod-u64)\n        \n*   [transactionPayment](#transactionpayment)\n    *   [operationalFeeMultiplier: `u8`](#operationalfeemultiplier-u8)\n        \n*   [treasury](#treasury)\n    *   [burn: `Permill`](#burn-permill)\n        \n    *   [maxApprovals: `u32`](#maxapprovals-u32)\n        \n    *   [palletId: `FrameSupportPalletId`](#palletid-framesupportpalletid-2)\n        \n    *   [proposalBond: `Permill`](#proposalbond-permill)\n        \n    *   [proposalBondMaximum: `Option<u128>`](#proposalbondmaximum-optionu128)\n        \n    *   [proposalBondMinimum: `u128`](#proposalbondminimum-u128)\n        \n    *   [spendPeriod: `u32`](#spendperiod-u32)\n        \n*   [utility](#utility)\n    *   [batchedCallsLimit: `u32`](#batchedcallslimit-u32)\n        \n*   [vesting](#vesting)\n    *   [maxVestingSchedules: `u32`](#maxvestingschedules-u32)\n        \n    *   [minVestedTransfer: `u128`](#minvestedtransfer-u128)\n        \n*   [voterList](#voterlist)\n    *   [bagThresholds: `Vec<u64>`](#bagthresholds-vecu64)"}, {"title": null, "description": null, "source_url": "https://polkadot.js.org/docs/polkadot/errors", "markdown": "[Skip to main content](#__docusaurus_skipToContent_fallback)\n\n[![polkadot{.js}](https://polkadot.js.org/docs/img/logo.svg)\\\n\\\n**polkadot{.js}**](/docs/)\n\n[Apps UI (Wallet)](https://polkadot.js.org/apps/)\n[GitHub](https://github.com/polkadot-js/docs)\n\nSearch...\n\n*   [Introduction](#)\n    \n*   [API](#)\n    \n*   [Metadata](#)\n    \n    *   [Substrate](#)\n        \n    *   [Polkadot](#)\n        \n        *   [Overview](/docs/polkadot)\n            \n        *   [Runtime](/docs/polkadot/runtime)\n            \n        *   [JSON-RPC](/docs/polkadot/rpc)\n            \n        *   [Constants](/docs/polkadot/constants)\n            \n        *   [Storage](/docs/polkadot/storage)\n            \n        *   [Extrinsics](/docs/polkadot/extrinsics)\n            \n        *   [Events](/docs/polkadot/events)\n            \n        *   [Errors](/docs/polkadot/errors)\n            \n    *   [Kusama](#)\n        \n*   [Keyring](#)\n    \n*   [Crypto Utilities](#)\n    \n*   [Contracts (API)](#)\n    \n*   [Identicon (UI)](#)\n    \n*   [Keyring (UI)](#)\n    \n*   [Extension](#)\n    \n*   [Run, Bundle, Test](#)\n    \n\n*   [](/docs/)\n    \n*   Metadata\n*   Polkadot\n*   Errors\n\nOn this page\n\nErrors\n======\n\nThis page lists the errors that can be encountered in the different modules.\n\n(NOTE: These were generated from a static/snapshot view of a recent default Polkadot runtime. Some items may not be available in older nodes, or in any customized implementations.)\n\n*   **[auctions](#auctions)\n    **\n    \n*   **[babe](#babe)\n    **\n    \n*   **[balances](#balances)\n    **\n    \n*   **[bounties](#bounties)\n    **\n    \n*   **[childBounties](#childbounties)\n    **\n    \n*   **[claims](#claims)\n    **\n    \n*   **[configuration](#configuration)\n    **\n    \n*   **[convictionVoting](#convictionvoting)\n    **\n    \n*   **[crowdloan](#crowdloan)\n    **\n    \n*   **[electionProviderMultiPhase](#electionprovidermultiphase)\n    **\n    \n*   **[fastUnstake](#fastunstake)\n    **\n    \n*   **[grandpa](#grandpa)\n    **\n    \n*   **[hrmp](#hrmp)\n    **\n    \n*   **[identity](#identity)\n    **\n    \n*   **[imOnline](#imonline)\n    **\n    \n*   **[indices](#indices)\n    **\n    \n*   **[messageQueue](#messagequeue)\n    **\n    \n*   **[multisig](#multisig)\n    **\n    \n*   **[nominationPools](#nominationpools)\n    **\n    \n*   **[paraInclusion](#parainclusion)\n    **\n    \n*   **[paraInherent](#parainherent)\n    **\n    \n*   **[paras](#paras)\n    **\n    \n*   **[parasDisputes](#parasdisputes)\n    **\n    \n*   **[parasSlashing](#parasslashing)\n    **\n    \n*   **[preimage](#preimage)\n    **\n    \n*   **[proxy](#proxy)\n    **\n    \n*   **[referenda](#referenda)\n    **\n    \n*   **[registrar](#registrar)\n    **\n    \n*   **[scheduler](#scheduler)\n    **\n    \n*   **[session](#session)\n    **\n    \n*   **[slots](#slots)\n    **\n    \n*   **[staking](#staking)\n    **\n    \n*   **[system](#system)\n    **\n    \n*   **[treasury](#treasury)\n    **\n    \n*   **[utility](#utility)\n    **\n    \n*   **[vesting](#vesting)\n    **\n    \n*   **[voterList](#voterlist)\n    **\n    \n*   **[whitelist](#whitelist)\n    **\n    \n*   **[xcmPallet](#xcmpallet)\n    **\n    \n\n* * *\n\nauctions[\u200b](#auctions \"Direct link to auctions\")\n\n-------------------------------------------------\n\n### AlreadyLeasedOut[\u200b](#alreadyleasedout \"Direct link to AlreadyLeasedOut\")\n\n*   **interface**: `api.errors.auctions.AlreadyLeasedOut.is`\n*   **summary**: The para is already leased out for part of this range.\n\n### AuctionEnded[\u200b](#auctionended \"Direct link to AuctionEnded\")\n\n*   **interface**: `api.errors.auctions.AuctionEnded.is`\n*   **summary**: Auction has already ended.\n\n### AuctionInProgress[\u200b](#auctioninprogress \"Direct link to AuctionInProgress\")\n\n*   **interface**: `api.errors.auctions.AuctionInProgress.is`\n*   **summary**: This auction is already in progress.\n\n### LeasePeriodInPast[\u200b](#leaseperiodinpast \"Direct link to LeasePeriodInPast\")\n\n*   **interface**: `api.errors.auctions.LeasePeriodInPast.is`\n*   **summary**: The lease period is in the past.\n\n### NotAuction[\u200b](#notauction \"Direct link to NotAuction\")\n\n*   **interface**: `api.errors.auctions.NotAuction.is`\n*   **summary**: Not an auction.\n\n### NotCurrentAuction[\u200b](#notcurrentauction \"Direct link to NotCurrentAuction\")\n\n*   **interface**: `api.errors.auctions.NotCurrentAuction.is`\n*   **summary**: Not a current auction.\n\n### ParaNotRegistered[\u200b](#paranotregistered \"Direct link to ParaNotRegistered\")\n\n*   **interface**: `api.errors.auctions.ParaNotRegistered.is`\n*   **summary**: Para is not registered\n\n* * *\n\nbabe[\u200b](#babe \"Direct link to babe\")\n\n-------------------------------------\n\n### DuplicateOffenceReport[\u200b](#duplicateoffencereport \"Direct link to DuplicateOffenceReport\")\n\n*   **interface**: `api.errors.babe.DuplicateOffenceReport.is`\n*   **summary**: A given equivocation report is valid but already previously reported.\n\n### InvalidConfiguration[\u200b](#invalidconfiguration \"Direct link to InvalidConfiguration\")\n\n*   **interface**: `api.errors.babe.InvalidConfiguration.is`\n*   **summary**: Submitted configuration is invalid.\n\n### InvalidEquivocationProof[\u200b](#invalidequivocationproof \"Direct link to InvalidEquivocationProof\")\n\n*   **interface**: `api.errors.babe.InvalidEquivocationProof.is`\n*   **summary**: An equivocation proof provided as part of an equivocation report is invalid.\n\n### InvalidKeyOwnershipProof[\u200b](#invalidkeyownershipproof \"Direct link to InvalidKeyOwnershipProof\")\n\n*   **interface**: `api.errors.babe.InvalidKeyOwnershipProof.is`\n*   **summary**: A key ownership proof provided as part of an equivocation report is invalid.\n\n* * *\n\nbalances[\u200b](#balances \"Direct link to balances\")\n\n-------------------------------------------------\n\n### DeadAccount[\u200b](#deadaccount \"Direct link to DeadAccount\")\n\n*   **interface**: `api.errors.balances.DeadAccount.is`\n*   **summary**: Beneficiary account must pre-exist.\n\n### ExistentialDeposit[\u200b](#existentialdeposit \"Direct link to ExistentialDeposit\")\n\n*   **interface**: `api.errors.balances.ExistentialDeposit.is`\n*   **summary**: Value too low to create account due to existential deposit.\n\n### ExistingVestingSchedule[\u200b](#existingvestingschedule \"Direct link to ExistingVestingSchedule\")\n\n*   **interface**: `api.errors.balances.ExistingVestingSchedule.is`\n*   **summary**: A vesting schedule already exists for this account.\n\n### Expendability[\u200b](#expendability \"Direct link to Expendability\")\n\n*   **interface**: `api.errors.balances.Expendability.is`\n*   **summary**: Transfer/payment would kill account.\n\n### InsufficientBalance[\u200b](#insufficientbalance \"Direct link to InsufficientBalance\")\n\n*   **interface**: `api.errors.balances.InsufficientBalance.is`\n*   **summary**: Balance too low to send value.\n\n### LiquidityRestrictions[\u200b](#liquidityrestrictions \"Direct link to LiquidityRestrictions\")\n\n*   **interface**: `api.errors.balances.LiquidityRestrictions.is`\n*   **summary**: Account liquidity restrictions prevent withdrawal.\n\n### TooManyFreezes[\u200b](#toomanyfreezes \"Direct link to TooManyFreezes\")\n\n*   **interface**: `api.errors.balances.TooManyFreezes.is`\n*   **summary**: Number of freezes exceed `MaxFreezes`.\n\n### TooManyHolds[\u200b](#toomanyholds \"Direct link to TooManyHolds\")\n\n*   **interface**: `api.errors.balances.TooManyHolds.is`\n*   **summary**: Number of holds exceed `MaxHolds`.\n\n### TooManyReserves[\u200b](#toomanyreserves \"Direct link to TooManyReserves\")\n\n*   **interface**: `api.errors.balances.TooManyReserves.is`\n*   **summary**: Number of named reserves exceed `MaxReserves`.\n\n### VestingBalance[\u200b](#vestingbalance \"Direct link to VestingBalance\")\n\n*   **interface**: `api.errors.balances.VestingBalance.is`\n*   **summary**: Vesting balance too high to send value.\n\n* * *\n\nbounties[\u200b](#bounties \"Direct link to bounties\")\n\n-------------------------------------------------\n\n### HasActiveChildBounty[\u200b](#hasactivechildbounty \"Direct link to HasActiveChildBounty\")\n\n*   **interface**: `api.errors.bounties.HasActiveChildBounty.is`\n*   **summary**: The bounty cannot be closed because it has active child bounties.\n\n### InsufficientProposersBalance[\u200b](#insufficientproposersbalance \"Direct link to InsufficientProposersBalance\")\n\n*   **interface**: `api.errors.bounties.InsufficientProposersBalance.is`\n*   **summary**: Proposer's balance is too low.\n\n### InvalidFee[\u200b](#invalidfee \"Direct link to InvalidFee\")\n\n*   **interface**: `api.errors.bounties.InvalidFee.is`\n*   **summary**: Invalid bounty fee.\n\n### InvalidIndex[\u200b](#invalidindex \"Direct link to InvalidIndex\")\n\n*   **interface**: `api.errors.bounties.InvalidIndex.is`\n*   **summary**: No proposal or bounty at that index.\n\n### InvalidValue[\u200b](#invalidvalue \"Direct link to InvalidValue\")\n\n*   **interface**: `api.errors.bounties.InvalidValue.is`\n*   **summary**: Invalid bounty value.\n\n### PendingPayout[\u200b](#pendingpayout \"Direct link to PendingPayout\")\n\n*   **interface**: `api.errors.bounties.PendingPayout.is`\n*   **summary**: A bounty payout is pending. To cancel the bounty, you must unassign and slash the curator.\n\n### Premature[\u200b](#premature \"Direct link to Premature\")\n\n*   **interface**: `api.errors.bounties.Premature.is`\n*   **summary**: The bounties cannot be claimed/closed because it's still in the countdown period.\n\n### ReasonTooBig[\u200b](#reasontoobig \"Direct link to ReasonTooBig\")\n\n*   **interface**: `api.errors.bounties.ReasonTooBig.is`\n*   **summary**: The reason given is just too big.\n\n### RequireCurator[\u200b](#requirecurator \"Direct link to RequireCurator\")\n\n*   **interface**: `api.errors.bounties.RequireCurator.is`\n*   **summary**: Require bounty curator.\n\n### TooManyQueued[\u200b](#toomanyqueued \"Direct link to TooManyQueued\")\n\n*   **interface**: `api.errors.bounties.TooManyQueued.is`\n*   **summary**: Too many approvals are already queued.\n\n### UnexpectedStatus[\u200b](#unexpectedstatus \"Direct link to UnexpectedStatus\")\n\n*   **interface**: `api.errors.bounties.UnexpectedStatus.is`\n*   **summary**: The bounty status is unexpected.\n\n* * *\n\nchildBounties[\u200b](#childbounties \"Direct link to childBounties\")\n\n----------------------------------------------------------------\n\n### InsufficientBountyBalance[\u200b](#insufficientbountybalance \"Direct link to InsufficientBountyBalance\")\n\n*   **interface**: `api.errors.childBounties.InsufficientBountyBalance.is`\n*   **summary**: The bounty balance is not enough to add new child-bounty.\n\n### ParentBountyNotActive[\u200b](#parentbountynotactive \"Direct link to ParentBountyNotActive\")\n\n*   **interface**: `api.errors.childBounties.ParentBountyNotActive.is`\n*   **summary**: The parent bounty is not in active state.\n\n### TooManyChildBounties[\u200b](#toomanychildbounties \"Direct link to TooManyChildBounties\")\n\n*   **interface**: `api.errors.childBounties.TooManyChildBounties.is`\n*   **summary**: Number of child bounties exceeds limit `MaxActiveChildBountyCount`.\n\n* * *\n\nclaims[\u200b](#claims \"Direct link to claims\")\n\n-------------------------------------------\n\n### InvalidEthereumSignature[\u200b](#invalidethereumsignature \"Direct link to InvalidEthereumSignature\")\n\n*   **interface**: `api.errors.claims.InvalidEthereumSignature.is`\n*   **summary**: Invalid Ethereum signature.\n\n### InvalidStatement[\u200b](#invalidstatement \"Direct link to InvalidStatement\")\n\n*   **interface**: `api.errors.claims.InvalidStatement.is`\n*   **summary**: A needed statement was not included.\n\n### PotUnderflow[\u200b](#potunderflow \"Direct link to PotUnderflow\")\n\n*   **interface**: `api.errors.claims.PotUnderflow.is`\n*   **summary**: There's not enough in the pot to pay out some unvested amount. Generally implies a logic error.\n\n### SenderHasNoClaim[\u200b](#senderhasnoclaim \"Direct link to SenderHasNoClaim\")\n\n*   **interface**: `api.errors.claims.SenderHasNoClaim.is`\n*   **summary**: Account ID sending transaction has no claim.\n\n### SignerHasNoClaim[\u200b](#signerhasnoclaim \"Direct link to SignerHasNoClaim\")\n\n*   **interface**: `api.errors.claims.SignerHasNoClaim.is`\n*   **summary**: Ethereum address has no claim.\n\n### VestedBalanceExists[\u200b](#vestedbalanceexists \"Direct link to VestedBalanceExists\")\n\n*   **interface**: `api.errors.claims.VestedBalanceExists.is`\n*   **summary**: The account already has a vested balance.\n\n* * *\n\nconfiguration[\u200b](#configuration \"Direct link to configuration\")\n\n----------------------------------------------------------------\n\n### InvalidNewValue[\u200b](#invalidnewvalue \"Direct link to InvalidNewValue\")\n\n*   **interface**: `api.errors.configuration.InvalidNewValue.is`\n*   **summary**: The new value for a configuration parameter is invalid.\n\n* * *\n\nconvictionVoting[\u200b](#convictionvoting \"Direct link to convictionVoting\")\n\n-------------------------------------------------------------------------\n\n### AlreadyDelegating[\u200b](#alreadydelegating \"Direct link to AlreadyDelegating\")\n\n*   **interface**: `api.errors.convictionVoting.AlreadyDelegating.is`\n*   **summary**: The account is already delegating.\n\n### AlreadyVoting[\u200b](#alreadyvoting \"Direct link to AlreadyVoting\")\n\n*   **interface**: `api.errors.convictionVoting.AlreadyVoting.is`\n*   **summary**: The account currently has votes attached to it and the operation cannot succeed until these are removed, either through `unvote` or `reap_vote`.\n\n### BadClass[\u200b](#badclass \"Direct link to BadClass\")\n\n*   **interface**: `api.errors.convictionVoting.BadClass.is`\n*   **summary**: The class ID supplied is invalid.\n\n### ClassNeeded[\u200b](#classneeded \"Direct link to ClassNeeded\")\n\n*   **interface**: `api.errors.convictionVoting.ClassNeeded.is`\n*   **summary**: The class must be supplied since it is not easily determinable from the state.\n\n### InsufficientFunds[\u200b](#insufficientfunds \"Direct link to InsufficientFunds\")\n\n*   **interface**: `api.errors.convictionVoting.InsufficientFunds.is`\n*   **summary**: Too high a balance was provided that the account cannot afford.\n\n### MaxVotesReached[\u200b](#maxvotesreached \"Direct link to MaxVotesReached\")\n\n*   **interface**: `api.errors.convictionVoting.MaxVotesReached.is`\n*   **summary**: Maximum number of votes reached.\n\n### Nonsense[\u200b](#nonsense \"Direct link to Nonsense\")\n\n*   **interface**: `api.errors.convictionVoting.Nonsense.is`\n*   **summary**: Delegation to oneself makes no sense.\n\n### NoPermission[\u200b](#nopermission \"Direct link to NoPermission\")\n\n*   **interface**: `api.errors.convictionVoting.NoPermission.is`\n*   **summary**: The actor has no permission to conduct the action.\n\n### NoPermissionYet[\u200b](#nopermissionyet \"Direct link to NoPermissionYet\")\n\n*   **interface**: `api.errors.convictionVoting.NoPermissionYet.is`\n*   **summary**: The actor has no permission to conduct the action right now but will do in the future.\n\n### NotDelegating[\u200b](#notdelegating \"Direct link to NotDelegating\")\n\n*   **interface**: `api.errors.convictionVoting.NotDelegating.is`\n*   **summary**: The account is not currently delegating.\n\n### NotOngoing[\u200b](#notongoing \"Direct link to NotOngoing\")\n\n*   **interface**: `api.errors.convictionVoting.NotOngoing.is`\n*   **summary**: Poll is not ongoing.\n\n### NotVoter[\u200b](#notvoter \"Direct link to NotVoter\")\n\n*   **interface**: `api.errors.convictionVoting.NotVoter.is`\n*   **summary**: The given account did not vote on the poll.\n\n* * *\n\ncrowdloan[\u200b](#crowdloan \"Direct link to crowdloan\")\n\n----------------------------------------------------\n\n### AlreadyInNewRaise[\u200b](#alreadyinnewraise \"Direct link to AlreadyInNewRaise\")\n\n*   **interface**: `api.errors.crowdloan.AlreadyInNewRaise.is`\n*   **summary**: The fund is already in `NewRaise`\n\n### BidOrLeaseActive[\u200b](#bidorleaseactive \"Direct link to BidOrLeaseActive\")\n\n*   **interface**: `api.errors.crowdloan.BidOrLeaseActive.is`\n*   **summary**: This parachain's bid or lease is still active and withdraw cannot yet begin.\n\n### CannotEndInPast[\u200b](#cannotendinpast \"Direct link to CannotEndInPast\")\n\n*   **interface**: `api.errors.crowdloan.CannotEndInPast.is`\n*   **summary**: The campaign ends before the current block number. The end must be in the future.\n\n### CapExceeded[\u200b](#capexceeded \"Direct link to CapExceeded\")\n\n*   **interface**: `api.errors.crowdloan.CapExceeded.is`\n*   **summary**: Contributions exceed maximum amount.\n\n### ContributionPeriodOver[\u200b](#contributionperiodover \"Direct link to ContributionPeriodOver\")\n\n*   **interface**: `api.errors.crowdloan.ContributionPeriodOver.is`\n*   **summary**: The contribution period has already ended.\n\n### ContributionTooSmall[\u200b](#contributiontoosmall \"Direct link to ContributionTooSmall\")\n\n*   **interface**: `api.errors.crowdloan.ContributionTooSmall.is`\n*   **summary**: The contribution was below the minimum, `MinContribution`.\n\n### EndTooFarInFuture[\u200b](#endtoofarinfuture \"Direct link to EndTooFarInFuture\")\n\n*   **interface**: `api.errors.crowdloan.EndTooFarInFuture.is`\n*   **summary**: The end date for this crowdloan is not sensible.\n\n### FirstPeriodInPast[\u200b](#firstperiodinpast \"Direct link to FirstPeriodInPast\")\n\n*   **interface**: `api.errors.crowdloan.FirstPeriodInPast.is`\n*   **summary**: The current lease period is more than the first lease period.\n\n### FirstPeriodTooFarInFuture[\u200b](#firstperiodtoofarinfuture \"Direct link to FirstPeriodTooFarInFuture\")\n\n*   **interface**: `api.errors.crowdloan.FirstPeriodTooFarInFuture.is`\n*   **summary**: The first lease period needs to at least be less than 3 `max_value`.\n\n### FundNotEnded[\u200b](#fundnotended \"Direct link to FundNotEnded\")\n\n*   **interface**: `api.errors.crowdloan.FundNotEnded.is`\n*   **summary**: The crowdloan has not yet ended.\n\n### InvalidOrigin[\u200b](#invalidorigin \"Direct link to InvalidOrigin\")\n\n*   **interface**: `api.errors.crowdloan.InvalidOrigin.is`\n*   **summary**: The origin of this call is invalid.\n\n### InvalidParaId[\u200b](#invalidparaid \"Direct link to InvalidParaId\")\n\n*   **interface**: `api.errors.crowdloan.InvalidParaId.is`\n*   **summary**: Invalid fund index.\n\n### InvalidSignature[\u200b](#invalidsignature \"Direct link to InvalidSignature\")\n\n*   **interface**: `api.errors.crowdloan.InvalidSignature.is`\n*   **summary**: Invalid signature.\n\n### LastPeriodBeforeFirstPeriod[\u200b](#lastperiodbeforefirstperiod \"Direct link to LastPeriodBeforeFirstPeriod\")\n\n*   **interface**: `api.errors.crowdloan.LastPeriodBeforeFirstPeriod.is`\n*   **summary**: Last lease period must be greater than first lease period.\n\n### LastPeriodTooFarInFuture[\u200b](#lastperiodtoofarinfuture \"Direct link to LastPeriodTooFarInFuture\")\n\n*   **interface**: `api.errors.crowdloan.LastPeriodTooFarInFuture.is`\n*   **summary**: The last lease period cannot be more than 3 periods after the first period.\n\n### LeaseActive[\u200b](#leaseactive \"Direct link to LeaseActive\")\n\n*   **interface**: `api.errors.crowdloan.LeaseActive.is`\n*   **summary**: This parachain lease is still active and retirement cannot yet begin.\n\n### MemoTooLarge[\u200b](#memotoolarge \"Direct link to MemoTooLarge\")\n\n*   **interface**: `api.errors.crowdloan.MemoTooLarge.is`\n*   **summary**: The provided memo is too large.\n\n### NoContributions[\u200b](#nocontributions \"Direct link to NoContributions\")\n\n*   **interface**: `api.errors.crowdloan.NoContributions.is`\n*   **summary**: There are no contributions stored in this crowdloan.\n\n### NoLeasePeriod[\u200b](#noleaseperiod \"Direct link to NoLeasePeriod\")\n\n*   **interface**: `api.errors.crowdloan.NoLeasePeriod.is`\n*   **summary**: A lease period has not started yet, due to an offset in the starting block.\n\n### NotParachain[\u200b](#notparachain \"Direct link to NotParachain\")\n\n*   **interface**: `api.errors.crowdloan.NotParachain.is`\n*   **summary**: This crowdloan does not correspond to a parachain.\n\n### NotReadyToDissolve[\u200b](#notreadytodissolve \"Direct link to NotReadyToDissolve\")\n\n*   **interface**: `api.errors.crowdloan.NotReadyToDissolve.is`\n*   **summary**: The crowdloan is not ready to dissolve. Potentially still has a slot or in retirement period.\n\n### Overflow[\u200b](#overflow \"Direct link to Overflow\")\n\n*   **interface**: `api.errors.crowdloan.Overflow.is`\n*   **summary**: There was an overflow.\n\n### VrfDelayInProgress[\u200b](#vrfdelayinprogress \"Direct link to VrfDelayInProgress\")\n\n*   **interface**: `api.errors.crowdloan.VrfDelayInProgress.is`\n*   **summary**: No contributions allowed during the VRF delay\n\n* * *\n\nelectionProviderMultiPhase[\u200b](#electionprovidermultiphase \"Direct link to electionProviderMultiPhase\")\n\n-------------------------------------------------------------------------------------------------------\n\n### BoundNotMet[\u200b](#boundnotmet \"Direct link to BoundNotMet\")\n\n*   **interface**: `api.errors.electionProviderMultiPhase.BoundNotMet.is`\n*   **summary**: Some bound not met\n\n### CallNotAllowed[\u200b](#callnotallowed \"Direct link to CallNotAllowed\")\n\n*   **interface**: `api.errors.electionProviderMultiPhase.CallNotAllowed.is`\n*   **summary**: The call is not allowed at this point.\n\n### FallbackFailed[\u200b](#fallbackfailed \"Direct link to FallbackFailed\")\n\n*   **interface**: `api.errors.electionProviderMultiPhase.FallbackFailed.is`\n*   **summary**: The fallback failed\n\n### InvalidSubmissionIndex[\u200b](#invalidsubmissionindex \"Direct link to InvalidSubmissionIndex\")\n\n*   **interface**: `api.errors.electionProviderMultiPhase.InvalidSubmissionIndex.is`\n*   **summary**: `Self::insert_submission` returned an invalid index.\n\n### MissingSnapshotMetadata[\u200b](#missingsnapshotmetadata \"Direct link to MissingSnapshotMetadata\")\n\n*   **interface**: `api.errors.electionProviderMultiPhase.MissingSnapshotMetadata.is`\n*   **summary**: Snapshot metadata should exist but didn't.\n\n### OcwCallWrongEra[\u200b](#ocwcallwrongera \"Direct link to OcwCallWrongEra\")\n\n*   **interface**: `api.errors.electionProviderMultiPhase.OcwCallWrongEra.is`\n*   **summary**: OCW submitted solution for wrong round\n\n### PreDispatchEarlySubmission[\u200b](#predispatchearlysubmission \"Direct link to PreDispatchEarlySubmission\")\n\n*   **interface**: `api.errors.electionProviderMultiPhase.PreDispatchEarlySubmission.is`\n*   **summary**: Submission was too early.\n\n### PreDispatchWeakSubmission[\u200b](#predispatchweaksubmission \"Direct link to PreDispatchWeakSubmission\")\n\n*   **interface**: `api.errors.electionProviderMultiPhase.PreDispatchWeakSubmission.is`\n*   **summary**: Submission was too weak, score-wise.\n\n### PreDispatchWrongWinnerCount[\u200b](#predispatchwrongwinnercount \"Direct link to PreDispatchWrongWinnerCount\")\n\n*   **interface**: `api.errors.electionProviderMultiPhase.PreDispatchWrongWinnerCount.is`\n*   **summary**: Wrong number of winners presented.\n\n### SignedCannotPayDeposit[\u200b](#signedcannotpaydeposit \"Direct link to SignedCannotPayDeposit\")\n\n*   **interface**: `api.errors.electionProviderMultiPhase.SignedCannotPayDeposit.is`\n*   **summary**: The origin failed to pay the deposit.\n\n### SignedInvalidWitness[\u200b](#signedinvalidwitness \"Direct link to SignedInvalidWitness\")\n\n*   **interface**: `api.errors.electionProviderMultiPhase.SignedInvalidWitness.is`\n*   **summary**: Witness data to dispatchable is invalid.\n\n### SignedQueueFull[\u200b](#signedqueuefull \"Direct link to SignedQueueFull\")\n\n*   **interface**: `api.errors.electionProviderMultiPhase.SignedQueueFull.is`\n*   **summary**: The queue was full, and the solution was not better than any of the existing ones.\n\n### SignedTooMuchWeight[\u200b](#signedtoomuchweight \"Direct link to SignedTooMuchWeight\")\n\n*   **interface**: `api.errors.electionProviderMultiPhase.SignedTooMuchWeight.is`\n*   **summary**: The signed submission consumes too much weight\n\n### TooManyWinners[\u200b](#toomanywinners \"Direct link to TooManyWinners\")\n\n*   **interface**: `api.errors.electionProviderMultiPhase.TooManyWinners.is`\n*   **summary**: Submitted solution has too many winners\n\n* * *\n\nfastUnstake[\u200b](#fastunstake \"Direct link to fastUnstake\")\n\n----------------------------------------------------------\n\n### AlreadyHead[\u200b](#alreadyhead \"Direct link to AlreadyHead\")\n\n*   **interface**: `api.errors.fastUnstake.AlreadyHead.is`\n*   **summary**: The provided un-staker is already in Head, and cannot deregister.\n\n### AlreadyQueued[\u200b](#alreadyqueued \"Direct link to AlreadyQueued\")\n\n*   **interface**: `api.errors.fastUnstake.AlreadyQueued.is`\n*   **summary**: The bonded account has already been queued.\n\n### CallNotAllowed[\u200b](#callnotallowed-1 \"Direct link to CallNotAllowed\")\n\n*   **interface**: `api.errors.fastUnstake.CallNotAllowed.is`\n*   **summary**: The call is not allowed at this point because the pallet is not active.\n\n### NotController[\u200b](#notcontroller \"Direct link to NotController\")\n\n*   **interface**: `api.errors.fastUnstake.NotController.is`\n    \n*   **summary**: The provided Controller account was not found.\n    \n    This means that the given account is not bonded.\n    \n\n### NotFullyBonded[\u200b](#notfullybonded \"Direct link to NotFullyBonded\")\n\n*   **interface**: `api.errors.fastUnstake.NotFullyBonded.is`\n*   **summary**: The bonded account has active unlocking chunks.\n\n### NotQueued[\u200b](#notqueued \"Direct link to NotQueued\")\n\n*   **interface**: `api.errors.fastUnstake.NotQueued.is`\n*   **summary**: The provided un-staker is not in the `Queue`.\n\n* * *\n\ngrandpa[\u200b](#grandpa \"Direct link to grandpa\")\n\n----------------------------------------------\n\n### ChangePending[\u200b](#changepending \"Direct link to ChangePending\")\n\n*   **interface**: `api.errors.grandpa.ChangePending.is`\n*   **summary**: Attempt to signal GRANDPA change with one already pending.\n\n### DuplicateOffenceReport[\u200b](#duplicateoffencereport-1 \"Direct link to DuplicateOffenceReport\")\n\n*   **interface**: `api.errors.grandpa.DuplicateOffenceReport.is`\n*   **summary**: A given equivocation report is valid but already previously reported.\n\n### InvalidEquivocationProof[\u200b](#invalidequivocationproof-1 \"Direct link to InvalidEquivocationProof\")\n\n*   **interface**: `api.errors.grandpa.InvalidEquivocationProof.is`\n*   **summary**: An equivocation proof provided as part of an equivocation report is invalid.\n\n### InvalidKeyOwnershipProof[\u200b](#invalidkeyownershipproof-1 \"Direct link to InvalidKeyOwnershipProof\")\n\n*   **interface**: `api.errors.grandpa.InvalidKeyOwnershipProof.is`\n*   **summary**: A key ownership proof provided as part of an equivocation report is invalid.\n\n### PauseFailed[\u200b](#pausefailed \"Direct link to PauseFailed\")\n\n*   **interface**: `api.errors.grandpa.PauseFailed.is`\n*   **summary**: Attempt to signal GRANDPA pause when the authority set isn't live (either paused or already pending pause).\n\n### ResumeFailed[\u200b](#resumefailed \"Direct link to ResumeFailed\")\n\n*   **interface**: `api.errors.grandpa.ResumeFailed.is`\n*   **summary**: Attempt to signal GRANDPA resume when the authority set isn't paused (either live or already pending resume).\n\n### TooSoon[\u200b](#toosoon \"Direct link to TooSoon\")\n\n*   **interface**: `api.errors.grandpa.TooSoon.is`\n*   **summary**: Cannot signal forced change so soon after last.\n\n* * *\n\nhrmp[\u200b](#hrmp \"Direct link to hrmp\")\n\n-------------------------------------\n\n### AcceptHrmpChannelAlreadyConfirmed[\u200b](#accepthrmpchannelalreadyconfirmed \"Direct link to AcceptHrmpChannelAlreadyConfirmed\")\n\n*   **interface**: `api.errors.hrmp.AcceptHrmpChannelAlreadyConfirmed.is`\n*   **summary**: The channel is already confirmed.\n\n### AcceptHrmpChannelDoesntExist[\u200b](#accepthrmpchanneldoesntexist \"Direct link to AcceptHrmpChannelDoesntExist\")\n\n*   **interface**: `api.errors.hrmp.AcceptHrmpChannelDoesntExist.is`\n*   **summary**: The channel from the sender to the origin doesn't exist.\n\n### AcceptHrmpChannelLimitExceeded[\u200b](#accepthrmpchannellimitexceeded \"Direct link to AcceptHrmpChannelLimitExceeded\")\n\n*   **interface**: `api.errors.hrmp.AcceptHrmpChannelLimitExceeded.is`\n*   **summary**: The recipient already has the maximum number of allowed inbound channels.\n\n### CancelHrmpOpenChannelUnauthorized[\u200b](#cancelhrmpopenchannelunauthorized \"Direct link to CancelHrmpOpenChannelUnauthorized\")\n\n*   **interface**: `api.errors.hrmp.CancelHrmpOpenChannelUnauthorized.is`\n*   **summary**: Canceling is requested by neither the sender nor recipient of the open channel request.\n\n### CloseHrmpChannelAlreadyUnderway[\u200b](#closehrmpchannelalreadyunderway \"Direct link to CloseHrmpChannelAlreadyUnderway\")\n\n*   **interface**: `api.errors.hrmp.CloseHrmpChannelAlreadyUnderway.is`\n*   **summary**: The channel close request is already requested.\n\n### CloseHrmpChannelDoesntExist[\u200b](#closehrmpchanneldoesntexist \"Direct link to CloseHrmpChannelDoesntExist\")\n\n*   **interface**: `api.errors.hrmp.CloseHrmpChannelDoesntExist.is`\n*   **summary**: The channel to be closed doesn't exist.\n\n### CloseHrmpChannelUnauthorized[\u200b](#closehrmpchannelunauthorized \"Direct link to CloseHrmpChannelUnauthorized\")\n\n*   **interface**: `api.errors.hrmp.CloseHrmpChannelUnauthorized.is`\n*   **summary**: The origin tries to close a channel where it is neither the sender nor the recipient.\n\n### OpenHrmpChannelAlreadyConfirmed[\u200b](#openhrmpchannelalreadyconfirmed \"Direct link to OpenHrmpChannelAlreadyConfirmed\")\n\n*   **interface**: `api.errors.hrmp.OpenHrmpChannelAlreadyConfirmed.is`\n*   **summary**: Cannot cancel an HRMP open channel request because it is already confirmed.\n\n### OpenHrmpChannelAlreadyExists[\u200b](#openhrmpchannelalreadyexists \"Direct link to OpenHrmpChannelAlreadyExists\")\n\n*   **interface**: `api.errors.hrmp.OpenHrmpChannelAlreadyExists.is`\n*   **summary**: The channel already exists\n\n### OpenHrmpChannelAlreadyRequested[\u200b](#openhrmpchannelalreadyrequested \"Direct link to OpenHrmpChannelAlreadyRequested\")\n\n*   **interface**: `api.errors.hrmp.OpenHrmpChannelAlreadyRequested.is`\n*   **summary**: There is already a request to open the same channel.\n\n### OpenHrmpChannelCapacityExceedsLimit[\u200b](#openhrmpchannelcapacityexceedslimit \"Direct link to OpenHrmpChannelCapacityExceedsLimit\")\n\n*   **interface**: `api.errors.hrmp.OpenHrmpChannelCapacityExceedsLimit.is`\n*   **summary**: The requested capacity exceeds the global limit.\n\n### OpenHrmpChannelDoesntExist[\u200b](#openhrmpchanneldoesntexist \"Direct link to OpenHrmpChannelDoesntExist\")\n\n*   **interface**: `api.errors.hrmp.OpenHrmpChannelDoesntExist.is`\n*   **summary**: The open request doesn't exist.\n\n### OpenHrmpChannelInvalidRecipient[\u200b](#openhrmpchannelinvalidrecipient \"Direct link to OpenHrmpChannelInvalidRecipient\")\n\n*   **interface**: `api.errors.hrmp.OpenHrmpChannelInvalidRecipient.is`\n*   **summary**: The recipient is not a valid para.\n\n### OpenHrmpChannelLimitExceeded[\u200b](#openhrmpchannellimitexceeded \"Direct link to OpenHrmpChannelLimitExceeded\")\n\n*   **interface**: `api.errors.hrmp.OpenHrmpChannelLimitExceeded.is`\n*   **summary**: The sender already has the maximum number of allowed outbound channels.\n\n### OpenHrmpChannelMessageSizeExceedsLimit[\u200b](#openhrmpchannelmessagesizeexceedslimit \"Direct link to OpenHrmpChannelMessageSizeExceedsLimit\")\n\n*   **interface**: `api.errors.hrmp.OpenHrmpChannelMessageSizeExceedsLimit.is`\n*   **summary**: The open request requested the message size that exceeds the global limit.\n\n### OpenHrmpChannelToSelf[\u200b](#openhrmpchanneltoself \"Direct link to OpenHrmpChannelToSelf\")\n\n*   **interface**: `api.errors.hrmp.OpenHrmpChannelToSelf.is`\n*   **summary**: The sender tried to open a channel to themselves.\n\n### OpenHrmpChannelZeroCapacity[\u200b](#openhrmpchannelzerocapacity \"Direct link to OpenHrmpChannelZeroCapacity\")\n\n*   **interface**: `api.errors.hrmp.OpenHrmpChannelZeroCapacity.is`\n*   **summary**: The requested capacity is zero.\n\n### OpenHrmpChannelZeroMessageSize[\u200b](#openhrmpchannelzeromessagesize \"Direct link to OpenHrmpChannelZeroMessageSize\")\n\n*   **interface**: `api.errors.hrmp.OpenHrmpChannelZeroMessageSize.is`\n*   **summary**: The requested maximum message size is 0.\n\n### WrongWitness[\u200b](#wrongwitness \"Direct link to WrongWitness\")\n\n*   **interface**: `api.errors.hrmp.WrongWitness.is`\n*   **summary**: The provided witness data is wrong.\n\n* * *\n\nidentity[\u200b](#identity \"Direct link to identity\")\n\n-------------------------------------------------\n\n### AlreadyClaimed[\u200b](#alreadyclaimed \"Direct link to AlreadyClaimed\")\n\n*   **interface**: `api.errors.identity.AlreadyClaimed.is`\n*   **summary**: Account ID is already named.\n\n### EmptyIndex[\u200b](#emptyindex \"Direct link to EmptyIndex\")\n\n*   **interface**: `api.errors.identity.EmptyIndex.is`\n*   **summary**: Empty index.\n\n### FeeChanged[\u200b](#feechanged \"Direct link to FeeChanged\")\n\n*   **interface**: `api.errors.identity.FeeChanged.is`\n*   **summary**: Fee is changed.\n\n### InvalidIndex[\u200b](#invalidindex-1 \"Direct link to InvalidIndex\")\n\n*   **interface**: `api.errors.identity.InvalidIndex.is`\n*   **summary**: The index is invalid.\n\n### InvalidJudgement[\u200b](#invalidjudgement \"Direct link to InvalidJudgement\")\n\n*   **interface**: `api.errors.identity.InvalidJudgement.is`\n*   **summary**: Invalid judgement.\n\n### InvalidTarget[\u200b](#invalidtarget \"Direct link to InvalidTarget\")\n\n*   **interface**: `api.errors.identity.InvalidTarget.is`\n*   **summary**: The target is invalid.\n\n### JudgementForDifferentIdentity[\u200b](#judgementfordifferentidentity \"Direct link to JudgementForDifferentIdentity\")\n\n*   **interface**: `api.errors.identity.JudgementForDifferentIdentity.is`\n*   **summary**: The provided judgement was for a different identity.\n\n### JudgementGiven[\u200b](#judgementgiven \"Direct link to JudgementGiven\")\n\n*   **interface**: `api.errors.identity.JudgementGiven.is`\n*   **summary**: Judgement given.\n\n### JudgementPaymentFailed[\u200b](#judgementpaymentfailed \"Direct link to JudgementPaymentFailed\")\n\n*   **interface**: `api.errors.identity.JudgementPaymentFailed.is`\n*   **summary**: Error that occurs when there is an issue paying for judgement.\n\n### NoIdentity[\u200b](#noidentity \"Direct link to NoIdentity\")\n\n*   **interface**: `api.errors.identity.NoIdentity.is`\n*   **summary**: No identity found.\n\n### NotFound[\u200b](#notfound \"Direct link to NotFound\")\n\n*   **interface**: `api.errors.identity.NotFound.is`\n*   **summary**: Account isn't found.\n\n### NotNamed[\u200b](#notnamed \"Direct link to NotNamed\")\n\n*   **interface**: `api.errors.identity.NotNamed.is`\n*   **summary**: Account isn't named.\n\n### NotOwned[\u200b](#notowned \"Direct link to NotOwned\")\n\n*   **interface**: `api.errors.identity.NotOwned.is`\n*   **summary**: Sub-account isn't owned by sender.\n\n### NotSub[\u200b](#notsub \"Direct link to NotSub\")\n\n*   **interface**: `api.errors.identity.NotSub.is`\n*   **summary**: Sender is not a sub-account.\n\n### StickyJudgement[\u200b](#stickyjudgement \"Direct link to StickyJudgement\")\n\n*   **interface**: `api.errors.identity.StickyJudgement.is`\n*   **summary**: Sticky judgement.\n\n### TooManyFields[\u200b](#toomanyfields \"Direct link to TooManyFields\")\n\n*   **interface**: `api.errors.identity.TooManyFields.is`\n*   **summary**: Too many additional fields.\n\n### TooManyRegistrars[\u200b](#toomanyregistrars \"Direct link to TooManyRegistrars\")\n\n*   **interface**: `api.errors.identity.TooManyRegistrars.is`\n*   **summary**: Maximum amount of registrars reached. Cannot add any more.\n\n### TooManySubAccounts[\u200b](#toomanysubaccounts \"Direct link to TooManySubAccounts\")\n\n*   **interface**: `api.errors.identity.TooManySubAccounts.is`\n*   **summary**: Too many subs-accounts.\n\n* * *\n\nimOnline[\u200b](#imonline \"Direct link to imOnline\")\n\n-------------------------------------------------\n\n### DuplicatedHeartbeat[\u200b](#duplicatedheartbeat \"Direct link to DuplicatedHeartbeat\")\n\n*   **interface**: `api.errors.imOnline.DuplicatedHeartbeat.is`\n*   **summary**: Duplicated heartbeat.\n\n### InvalidKey[\u200b](#invalidkey \"Direct link to InvalidKey\")\n\n*   **interface**: `api.errors.imOnline.InvalidKey.is`\n*   **summary**: Non existent public key.\n\n* * *\n\nindices[\u200b](#indices \"Direct link to indices\")\n\n----------------------------------------------\n\n### InUse[\u200b](#inuse \"Direct link to InUse\")\n\n*   **interface**: `api.errors.indices.InUse.is`\n*   **summary**: The index was not available.\n\n### NotAssigned[\u200b](#notassigned \"Direct link to NotAssigned\")\n\n*   **interface**: `api.errors.indices.NotAssigned.is`\n*   **summary**: The index was not already assigned.\n\n### NotOwner[\u200b](#notowner \"Direct link to NotOwner\")\n\n*   **interface**: `api.errors.indices.NotOwner.is`\n*   **summary**: The index is assigned to another account.\n\n### NotTransfer[\u200b](#nottransfer \"Direct link to NotTransfer\")\n\n*   **interface**: `api.errors.indices.NotTransfer.is`\n*   **summary**: The source and destination accounts are identical.\n\n### Permanent[\u200b](#permanent \"Direct link to Permanent\")\n\n*   **interface**: `api.errors.indices.Permanent.is`\n*   **summary**: The index is permanent and may not be freed/changed.\n\n* * *\n\nmessageQueue[\u200b](#messagequeue \"Direct link to messageQueue\")\n\n-------------------------------------------------------------\n\n### AlreadyProcessed[\u200b](#alreadyprocessed \"Direct link to AlreadyProcessed\")\n\n*   **interface**: `api.errors.messageQueue.AlreadyProcessed.is`\n*   **summary**: The message was already processed and cannot be processed again.\n\n### InsufficientWeight[\u200b](#insufficientweight \"Direct link to InsufficientWeight\")\n\n*   **interface**: `api.errors.messageQueue.InsufficientWeight.is`\n*   **summary**: There is temporarily not enough weight to continue servicing messages.\n\n### NoMessage[\u200b](#nomessage \"Direct link to NoMessage\")\n\n*   **interface**: `api.errors.messageQueue.NoMessage.is`\n*   **summary**: The referenced message could not be found.\n\n### NoPage[\u200b](#nopage \"Direct link to NoPage\")\n\n*   **interface**: `api.errors.messageQueue.NoPage.is`\n*   **summary**: Page to be reaped does not exist.\n\n### NotReapable[\u200b](#notreapable \"Direct link to NotReapable\")\n\n*   **interface**: `api.errors.messageQueue.NotReapable.is`\n*   **summary**: Page is not reapable because it has items remaining to be processed and is not old enough.\n\n### Queued[\u200b](#queued \"Direct link to Queued\")\n\n*   **interface**: `api.errors.messageQueue.Queued.is`\n*   **summary**: The message is queued for future execution.\n\n### QueuePaused[\u200b](#queuepaused \"Direct link to QueuePaused\")\n\n*   **interface**: `api.errors.messageQueue.QueuePaused.is`\n    \n*   **summary**: The queue is paused and no message can be executed from it.\n    \n    This can change at any time and may resolve in the future by re-trying.\n    \n\n### TemporarilyUnprocessable[\u200b](#temporarilyunprocessable \"Direct link to TemporarilyUnprocessable\")\n\n*   **interface**: `api.errors.messageQueue.TemporarilyUnprocessable.is`\n    \n*   **summary**: This message is temporarily unprocessable.\n    \n    Such errors are expected, but not guaranteed, to resolve themselves eventually through retrying.\n    \n\n* * *\n\nmultisig[\u200b](#multisig \"Direct link to multisig\")\n\n-------------------------------------------------\n\n### AlreadyApproved[\u200b](#alreadyapproved \"Direct link to AlreadyApproved\")\n\n*   **interface**: `api.errors.multisig.AlreadyApproved.is`\n*   **summary**: Call is already approved by this signatory.\n\n### AlreadyStored[\u200b](#alreadystored \"Direct link to AlreadyStored\")\n\n*   **interface**: `api.errors.multisig.AlreadyStored.is`\n*   **summary**: The data to be stored is already stored.\n\n### MaxWeightTooLow[\u200b](#maxweighttoolow \"Direct link to MaxWeightTooLow\")\n\n*   **interface**: `api.errors.multisig.MaxWeightTooLow.is`\n*   **summary**: The maximum weight information provided was too low.\n\n### MinimumThreshold[\u200b](#minimumthreshold \"Direct link to MinimumThreshold\")\n\n*   **interface**: `api.errors.multisig.MinimumThreshold.is`\n*   **summary**: Threshold must be 2 or greater.\n\n### NoApprovalsNeeded[\u200b](#noapprovalsneeded \"Direct link to NoApprovalsNeeded\")\n\n*   **interface**: `api.errors.multisig.NoApprovalsNeeded.is`\n*   **summary**: Call doesn't need any (more) approvals.\n\n### NotFound[\u200b](#notfound-1 \"Direct link to NotFound\")\n\n*   **interface**: `api.errors.multisig.NotFound.is`\n*   **summary**: Multisig operation not found when attempting to cancel.\n\n### NoTimepoint[\u200b](#notimepoint \"Direct link to NoTimepoint\")\n\n*   **interface**: `api.errors.multisig.NoTimepoint.is`\n*   **summary**: No timepoint was given, yet the multisig operation is already underway.\n\n### NotOwner[\u200b](#notowner-1 \"Direct link to NotOwner\")\n\n*   **interface**: `api.errors.multisig.NotOwner.is`\n*   **summary**: Only the account that originally created the multisig is able to cancel it.\n\n### SenderInSignatories[\u200b](#senderinsignatories \"Direct link to SenderInSignatories\")\n\n*   **interface**: `api.errors.multisig.SenderInSignatories.is`\n*   **summary**: The sender was contained in the other signatories; it shouldn't be.\n\n### SignatoriesOutOfOrder[\u200b](#signatoriesoutoforder \"Direct link to SignatoriesOutOfOrder\")\n\n*   **interface**: `api.errors.multisig.SignatoriesOutOfOrder.is`\n*   **summary**: The signatories were provided out of order; they should be ordered.\n\n### TooFewSignatories[\u200b](#toofewsignatories \"Direct link to TooFewSignatories\")\n\n*   **interface**: `api.errors.multisig.TooFewSignatories.is`\n*   **summary**: There are too few signatories in the list.\n\n### TooManySignatories[\u200b](#toomanysignatories \"Direct link to TooManySignatories\")\n\n*   **interface**: `api.errors.multisig.TooManySignatories.is`\n*   **summary**: There are too many signatories in the list.\n\n### UnexpectedTimepoint[\u200b](#unexpectedtimepoint \"Direct link to UnexpectedTimepoint\")\n\n*   **interface**: `api.errors.multisig.UnexpectedTimepoint.is`\n*   **summary**: A timepoint was given, yet no multisig operation is underway.\n\n### WrongTimepoint[\u200b](#wrongtimepoint \"Direct link to WrongTimepoint\")\n\n*   **interface**: `api.errors.multisig.WrongTimepoint.is`\n*   **summary**: A different timepoint was given to the multisig operation that is underway.\n\n* * *\n\nnominationPools[\u200b](#nominationpools \"Direct link to nominationPools\")\n\n----------------------------------------------------------------------\n\n### AccountBelongsToOtherPool[\u200b](#accountbelongstootherpool \"Direct link to AccountBelongsToOtherPool\")\n\n*   **interface**: `api.errors.nominationPools.AccountBelongsToOtherPool.is`\n*   **summary**: An account is already delegating in another pool. An account may only belong to one pool at a time.\n\n### BondExtraRestricted[\u200b](#bondextrarestricted \"Direct link to BondExtraRestricted\")\n\n*   **interface**: `api.errors.nominationPools.BondExtraRestricted.is`\n*   **summary**: Bonding extra is restricted to the exact pending reward amount.\n\n### CanNotChangeState[\u200b](#cannotchangestate \"Direct link to CanNotChangeState\")\n\n*   **interface**: `api.errors.nominationPools.CanNotChangeState.is`\n*   **summary**: The pools state cannot be changed.\n\n### CannotWithdrawAny[\u200b](#cannotwithdrawany \"Direct link to CannotWithdrawAny\")\n\n*   **interface**: `api.errors.nominationPools.CannotWithdrawAny.is`\n*   **summary**: None of the funds can be withdrawn yet because the bonding duration has not passed.\n\n### CommissionChangeRateNotAllowed[\u200b](#commissionchangeratenotallowed \"Direct link to CommissionChangeRateNotAllowed\")\n\n*   **interface**: `api.errors.nominationPools.CommissionChangeRateNotAllowed.is`\n*   **summary**: The submitted changes to commission change rate are not allowed.\n\n### CommissionChangeThrottled[\u200b](#commissionchangethrottled \"Direct link to CommissionChangeThrottled\")\n\n*   **interface**: `api.errors.nominationPools.CommissionChangeThrottled.is`\n*   **summary**: Not enough blocks have surpassed since the last commission update.\n\n### CommissionExceedsGlobalMaximum[\u200b](#commissionexceedsglobalmaximum \"Direct link to CommissionExceedsGlobalMaximum\")\n\n*   **interface**: `api.errors.nominationPools.CommissionExceedsGlobalMaximum.is`\n*   **summary**: The supplied commission exceeds global maximum commission.\n\n### CommissionExceedsMaximum[\u200b](#commissionexceedsmaximum \"Direct link to CommissionExceedsMaximum\")\n\n*   **interface**: `api.errors.nominationPools.CommissionExceedsMaximum.is`\n*   **summary**: The supplied commission exceeds the max allowed commission.\n\n### Defensive[\u200b](#defensive \"Direct link to Defensive\")\n\n*   **interface**: `api.errors.nominationPools.Defensive.is`\n*   **summary**: Some error occurred that should never happen. This should be reported to the maintainers.\n\n### DoesNotHavePermission[\u200b](#doesnothavepermission \"Direct link to DoesNotHavePermission\")\n\n*   **interface**: `api.errors.nominationPools.DoesNotHavePermission.is`\n*   **summary**: The caller does not have adequate permissions.\n\n### FullyUnbonding[\u200b](#fullyunbonding \"Direct link to FullyUnbonding\")\n\n*   **interface**: `api.errors.nominationPools.FullyUnbonding.is`\n*   **summary**: The member is fully unbonded (and thus cannot access the bonded and reward pool anymore to, for example, collect rewards).\n\n### InvalidPoolId[\u200b](#invalidpoolid \"Direct link to InvalidPoolId\")\n\n*   **interface**: `api.errors.nominationPools.InvalidPoolId.is`\n*   **summary**: Pool id provided is not correct/usable.\n\n### MaxCommissionRestricted[\u200b](#maxcommissionrestricted \"Direct link to MaxCommissionRestricted\")\n\n*   **interface**: `api.errors.nominationPools.MaxCommissionRestricted.is`\n*   **summary**: The pool's max commission cannot be set higher than the existing value.\n\n### MaxPoolMembers[\u200b](#maxpoolmembers \"Direct link to MaxPoolMembers\")\n\n*   **interface**: `api.errors.nominationPools.MaxPoolMembers.is`\n*   **summary**: Too many members in the pool or system.\n\n### MaxPools[\u200b](#maxpools \"Direct link to MaxPools\")\n\n*   **interface**: `api.errors.nominationPools.MaxPools.is`\n*   **summary**: The system is maxed out on pools.\n\n### MaxUnbondingLimit[\u200b](#maxunbondinglimit \"Direct link to MaxUnbondingLimit\")\n\n*   **interface**: `api.errors.nominationPools.MaxUnbondingLimit.is`\n*   **summary**: The member cannot unbond further chunks due to reaching the limit.\n\n### MetadataExceedsMaxLen[\u200b](#metadataexceedsmaxlen \"Direct link to MetadataExceedsMaxLen\")\n\n*   **interface**: `api.errors.nominationPools.MetadataExceedsMaxLen.is`\n*   **summary**: Metadata exceeds \\[`Config::MaxMetadataLen`\\]\n\n### MinimumBondNotMet[\u200b](#minimumbondnotmet \"Direct link to MinimumBondNotMet\")\n\n*   **interface**: `api.errors.nominationPools.MinimumBondNotMet.is`\n    \n*   **summary**: The amount does not meet the minimum bond to either join or create a pool.\n    \n    The depositor can never unbond to a value less than `Pallet::depositor_min_bond`. The caller does not have nominating permissions for the pool. Members can never unbond to a value below `MinJoinBond`.\n    \n\n### NoCommissionCurrentSet[\u200b](#nocommissioncurrentset \"Direct link to NoCommissionCurrentSet\")\n\n*   **interface**: `api.errors.nominationPools.NoCommissionCurrentSet.is`\n*   **summary**: No commission current has been set.\n\n### NoPendingCommission[\u200b](#nopendingcommission \"Direct link to NoPendingCommission\")\n\n*   **interface**: `api.errors.nominationPools.NoPendingCommission.is`\n*   **summary**: There is no pending commission to claim.\n\n### NotDestroying[\u200b](#notdestroying \"Direct link to NotDestroying\")\n\n*   **interface**: `api.errors.nominationPools.NotDestroying.is`\n*   **summary**: A pool must be in \\[`PoolState::Destroying`\\] in order for the depositor to unbond or for other members to be permissionlessly unbonded.\n\n### NotKickerOrDestroying[\u200b](#notkickerordestroying \"Direct link to NotKickerOrDestroying\")\n\n*   **interface**: `api.errors.nominationPools.NotKickerOrDestroying.is`\n*   **summary**: Either a) the caller cannot make a valid kick or b) the pool is not destroying.\n\n### NotNominator[\u200b](#notnominator \"Direct link to NotNominator\")\n\n*   **interface**: `api.errors.nominationPools.NotNominator.is`\n*   **summary**: The caller does not have nominating permissions for the pool.\n\n### NotOpen[\u200b](#notopen \"Direct link to NotOpen\")\n\n*   **interface**: `api.errors.nominationPools.NotOpen.is`\n*   **summary**: The pool is not open to join\n\n### OverflowRisk[\u200b](#overflowrisk \"Direct link to OverflowRisk\")\n\n*   **interface**: `api.errors.nominationPools.OverflowRisk.is`\n*   **summary**: The transaction could not be executed due to overflow risk for the pool.\n\n### PartialUnbondNotAllowedPermissionlessly[\u200b](#partialunbondnotallowedpermissionlessly \"Direct link to PartialUnbondNotAllowedPermissionlessly\")\n\n*   **interface**: `api.errors.nominationPools.PartialUnbondNotAllowedPermissionlessly.is`\n*   **summary**: Partial unbonding now allowed permissionlessly.\n\n### PoolIdInUse[\u200b](#poolidinuse \"Direct link to PoolIdInUse\")\n\n*   **interface**: `api.errors.nominationPools.PoolIdInUse.is`\n*   **summary**: Pool id currently in use.\n\n### PoolMemberNotFound[\u200b](#poolmembernotfound \"Direct link to PoolMemberNotFound\")\n\n*   **interface**: `api.errors.nominationPools.PoolMemberNotFound.is`\n*   **summary**: An account is not a member.\n\n### PoolNotFound[\u200b](#poolnotfound \"Direct link to PoolNotFound\")\n\n*   **interface**: `api.errors.nominationPools.PoolNotFound.is`\n*   **summary**: A (bonded) pool id does not exist.\n\n### RewardPoolNotFound[\u200b](#rewardpoolnotfound \"Direct link to RewardPoolNotFound\")\n\n*   **interface**: `api.errors.nominationPools.RewardPoolNotFound.is`\n*   **summary**: A reward pool does not exist. In all cases this is a system logic error.\n\n### SubPoolsNotFound[\u200b](#subpoolsnotfound \"Direct link to SubPoolsNotFound\")\n\n*   **interface**: `api.errors.nominationPools.SubPoolsNotFound.is`\n*   **summary**: A sub pool does not exist.\n\n* * *\n\nparaInclusion[\u200b](#parainclusion \"Direct link to paraInclusion\")\n\n----------------------------------------------------------------\n\n### BitfieldAllZeros[\u200b](#bitfieldallzeros \"Direct link to BitfieldAllZeros\")\n\n*   **interface**: `api.errors.paraInclusion.BitfieldAllZeros.is`\n*   **summary**: Bitfield consists of zeros only.\n\n### BitfieldDuplicateOrUnordered[\u200b](#bitfieldduplicateorunordered \"Direct link to BitfieldDuplicateOrUnordered\")\n\n*   **interface**: `api.errors.paraInclusion.BitfieldDuplicateOrUnordered.is`\n*   **summary**: Multiple bitfields submitted by same validator or validators out of order by index.\n\n### BitfieldReferencesFreedCore[\u200b](#bitfieldreferencesfreedcore \"Direct link to BitfieldReferencesFreedCore\")\n\n*   **interface**: `api.errors.paraInclusion.BitfieldReferencesFreedCore.is`\n*   **summary**: A bitfield that references a freed core, either intentionally or as part of a concluded invalid dispute.\n\n### CandidateScheduledBeforeParaFree[\u200b](#candidatescheduledbeforeparafree \"Direct link to CandidateScheduledBeforeParaFree\")\n\n*   **interface**: `api.errors.paraInclusion.CandidateScheduledBeforeParaFree.is`\n*   **summary**: Candidate scheduled despite pending candidate already existing for the para.\n\n### DisallowedRelayParent[\u200b](#disallowedrelayparent \"Direct link to DisallowedRelayParent\")\n\n*   **interface**: `api.errors.paraInclusion.DisallowedRelayParent.is`\n*   **summary**: The candidate's relay-parent was not allowed. Either it was not recent enough or it didn't advance based on the last parachain block.\n\n### HeadDataTooLarge[\u200b](#headdatatoolarge \"Direct link to HeadDataTooLarge\")\n\n*   **interface**: `api.errors.paraInclusion.HeadDataTooLarge.is`\n*   **summary**: Head data exceeds the configured maximum.\n\n### HrmpWatermarkMishandling[\u200b](#hrmpwatermarkmishandling \"Direct link to HrmpWatermarkMishandling\")\n\n*   **interface**: `api.errors.paraInclusion.HrmpWatermarkMishandling.is`\n*   **summary**: The candidate didn't follow the rules of HRMP watermark advancement.\n\n### IncorrectDownwardMessageHandling[\u200b](#incorrectdownwardmessagehandling \"Direct link to IncorrectDownwardMessageHandling\")\n\n*   **interface**: `api.errors.paraInclusion.IncorrectDownwardMessageHandling.is`\n*   **summary**: The downward message queue is not processed correctly.\n\n### InsufficientBacking[\u200b](#insufficientbacking \"Direct link to InsufficientBacking\")\n\n*   **interface**: `api.errors.paraInclusion.InsufficientBacking.is`\n*   **summary**: Insufficient (non-majority) backing.\n\n### InvalidAssignment[\u200b](#invalidassignment \"Direct link to InvalidAssignment\")\n\n*   **interface**: `api.errors.paraInclusion.InvalidAssignment.is`\n*   **summary**: Failed to compute group index for the core: either it's out of bounds or the relay parent doesn't belong to the current session.\n\n### InvalidBacking[\u200b](#invalidbacking \"Direct link to InvalidBacking\")\n\n*   **interface**: `api.errors.paraInclusion.InvalidBacking.is`\n*   **summary**: Invalid (bad signature, unknown validator, etc.) backing.\n\n### InvalidBitfieldSignature[\u200b](#invalidbitfieldsignature \"Direct link to InvalidBitfieldSignature\")\n\n*   **interface**: `api.errors.paraInclusion.InvalidBitfieldSignature.is`\n*   **summary**: Invalid signature\n\n### InvalidGroupIndex[\u200b](#invalidgroupindex \"Direct link to InvalidGroupIndex\")\n\n*   **interface**: `api.errors.paraInclusion.InvalidGroupIndex.is`\n*   **summary**: Invalid group index in core assignment.\n\n### InvalidOutboundHrmp[\u200b](#invalidoutboundhrmp \"Direct link to InvalidOutboundHrmp\")\n\n*   **interface**: `api.errors.paraInclusion.InvalidOutboundHrmp.is`\n*   **summary**: The HRMP messages sent by the candidate is not valid.\n\n### InvalidUpwardMessages[\u200b](#invalidupwardmessages \"Direct link to InvalidUpwardMessages\")\n\n*   **interface**: `api.errors.paraInclusion.InvalidUpwardMessages.is`\n*   **summary**: At least one upward message sent does not pass the acceptance criteria.\n\n### InvalidValidationCodeHash[\u200b](#invalidvalidationcodehash \"Direct link to InvalidValidationCodeHash\")\n\n*   **interface**: `api.errors.paraInclusion.InvalidValidationCodeHash.is`\n*   **summary**: The validation code hash of the candidate is not valid.\n\n### NewCodeTooLarge[\u200b](#newcodetoolarge \"Direct link to NewCodeTooLarge\")\n\n*   **interface**: `api.errors.paraInclusion.NewCodeTooLarge.is`\n*   **summary**: Output code is too large\n\n### NotCollatorSigned[\u200b](#notcollatorsigned \"Direct link to NotCollatorSigned\")\n\n*   **interface**: `api.errors.paraInclusion.NotCollatorSigned.is`\n*   **summary**: Collator did not sign PoV.\n\n### ParaHeadMismatch[\u200b](#paraheadmismatch \"Direct link to ParaHeadMismatch\")\n\n*   **interface**: `api.errors.paraInclusion.ParaHeadMismatch.is`\n*   **summary**: The `para_head` hash in the candidate descriptor doesn't match the hash of the actual para head in the commitments.\n\n### PrematureCodeUpgrade[\u200b](#prematurecodeupgrade \"Direct link to PrematureCodeUpgrade\")\n\n*   **interface**: `api.errors.paraInclusion.PrematureCodeUpgrade.is`\n*   **summary**: Code upgrade prematurely.\n\n### ScheduledOutOfOrder[\u200b](#scheduledoutoforder \"Direct link to ScheduledOutOfOrder\")\n\n*   **interface**: `api.errors.paraInclusion.ScheduledOutOfOrder.is`\n*   **summary**: Scheduled cores out of order.\n\n### UnexpectedRelayParent[\u200b](#unexpectedrelayparent \"Direct link to UnexpectedRelayParent\")\n\n*   **interface**: `api.errors.paraInclusion.UnexpectedRelayParent.is`\n*   **summary**: A different relay parent was provided compared to the on-chain stored one.\n\n### UnscheduledCandidate[\u200b](#unscheduledcandidate \"Direct link to UnscheduledCandidate\")\n\n*   **interface**: `api.errors.paraInclusion.UnscheduledCandidate.is`\n*   **summary**: Candidate submitted but para not scheduled.\n\n### UnsortedOrDuplicateBackedCandidates[\u200b](#unsortedorduplicatebackedcandidates \"Direct link to UnsortedOrDuplicateBackedCandidates\")\n\n*   **interface**: `api.errors.paraInclusion.UnsortedOrDuplicateBackedCandidates.is`\n*   **summary**: Backed candidates are out of order (core index) or contain duplicates.\n\n### UnsortedOrDuplicateDisputeStatementSet[\u200b](#unsortedorduplicatedisputestatementset \"Direct link to UnsortedOrDuplicateDisputeStatementSet\")\n\n*   **interface**: `api.errors.paraInclusion.UnsortedOrDuplicateDisputeStatementSet.is`\n*   **summary**: Dispute statement sets are out of order or contain duplicates.\n\n### UnsortedOrDuplicateValidatorIndices[\u200b](#unsortedorduplicatevalidatorindices \"Direct link to UnsortedOrDuplicateValidatorIndices\")\n\n*   **interface**: `api.errors.paraInclusion.UnsortedOrDuplicateValidatorIndices.is`\n*   **summary**: Validator indices are out of order or contains duplicates.\n\n### ValidationDataHashMismatch[\u200b](#validationdatahashmismatch \"Direct link to ValidationDataHashMismatch\")\n\n*   **interface**: `api.errors.paraInclusion.ValidationDataHashMismatch.is`\n*   **summary**: The validation data hash does not match expected.\n\n### ValidatorIndexOutOfBounds[\u200b](#validatorindexoutofbounds \"Direct link to ValidatorIndexOutOfBounds\")\n\n*   **interface**: `api.errors.paraInclusion.ValidatorIndexOutOfBounds.is`\n*   **summary**: Validator index out of bounds.\n\n### WrongBitfieldSize[\u200b](#wrongbitfieldsize \"Direct link to WrongBitfieldSize\")\n\n*   **interface**: `api.errors.paraInclusion.WrongBitfieldSize.is`\n*   **summary**: Availability bitfield has unexpected size.\n\n* * *\n\nparaInherent[\u200b](#parainherent \"Direct link to paraInherent\")\n\n-------------------------------------------------------------\n\n### CandidateConcludedInvalid[\u200b](#candidateconcludedinvalid \"Direct link to CandidateConcludedInvalid\")\n\n*   **interface**: `api.errors.paraInherent.CandidateConcludedInvalid.is`\n*   **summary**: Disputed candidate that was concluded invalid.\n\n### DisputeInvalid[\u200b](#disputeinvalid \"Direct link to DisputeInvalid\")\n\n*   **interface**: `api.errors.paraInherent.DisputeInvalid.is`\n*   **summary**: A dispute statement was invalid.\n\n### DisputeStatementsUnsortedOrDuplicates[\u200b](#disputestatementsunsortedorduplicates \"Direct link to DisputeStatementsUnsortedOrDuplicates\")\n\n*   **interface**: `api.errors.paraInherent.DisputeStatementsUnsortedOrDuplicates.is`\n*   **summary**: The ordering of dispute statements was invalid.\n\n### InherentOverweight[\u200b](#inherentoverweight \"Direct link to InherentOverweight\")\n\n*   **interface**: `api.errors.paraInherent.InherentOverweight.is`\n*   **summary**: The data given to the inherent will result in an overweight block.\n\n### InvalidParentHeader[\u200b](#invalidparentheader \"Direct link to InvalidParentHeader\")\n\n*   **interface**: `api.errors.paraInherent.InvalidParentHeader.is`\n*   **summary**: The hash of the submitted parent header doesn't correspond to the saved block hash of the parent.\n\n### TooManyInclusionInherents[\u200b](#toomanyinclusioninherents \"Direct link to TooManyInclusionInherents\")\n\n*   **interface**: `api.errors.paraInherent.TooManyInclusionInherents.is`\n*   **summary**: Inclusion inherent called more than once per block.\n\n* * *\n\nparas[\u200b](#paras \"Direct link to paras\")\n\n----------------------------------------\n\n### CannotDowngrade[\u200b](#cannotdowngrade \"Direct link to CannotDowngrade\")\n\n*   **interface**: `api.errors.paras.CannotDowngrade.is`\n*   **summary**: Para cannot be downgraded to an on-demand parachain.\n\n### CannotOffboard[\u200b](#cannotoffboard \"Direct link to CannotOffboard\")\n\n*   **interface**: `api.errors.paras.CannotOffboard.is`\n*   **summary**: Para cannot be offboarded at this time.\n\n### CannotOnboard[\u200b](#cannotonboard \"Direct link to CannotOnboard\")\n\n*   **interface**: `api.errors.paras.CannotOnboard.is`\n*   **summary**: Para cannot be onboarded because it is already tracked by our system.\n\n### CannotUpgrade[\u200b](#cannotupgrade \"Direct link to CannotUpgrade\")\n\n*   **interface**: `api.errors.paras.CannotUpgrade.is`\n*   **summary**: Para cannot be upgraded to a lease holding parachain.\n\n### CannotUpgradeCode[\u200b](#cannotupgradecode \"Direct link to CannotUpgradeCode\")\n\n*   **interface**: `api.errors.paras.CannotUpgradeCode.is`\n*   **summary**: Parachain cannot currently schedule a code upgrade.\n\n### NotRegistered[\u200b](#notregistered \"Direct link to NotRegistered\")\n\n*   **interface**: `api.errors.paras.NotRegistered.is`\n*   **summary**: Para is not registered in our system.\n\n### PvfCheckDoubleVote[\u200b](#pvfcheckdoublevote \"Direct link to PvfCheckDoubleVote\")\n\n*   **interface**: `api.errors.paras.PvfCheckDoubleVote.is`\n*   **summary**: The given validator already has cast a vote.\n\n### PvfCheckInvalidSignature[\u200b](#pvfcheckinvalidsignature \"Direct link to PvfCheckInvalidSignature\")\n\n*   **interface**: `api.errors.paras.PvfCheckInvalidSignature.is`\n*   **summary**: The signature for the PVF pre-checking is invalid.\n\n### PvfCheckStatementFuture[\u200b](#pvfcheckstatementfuture \"Direct link to PvfCheckStatementFuture\")\n\n*   **interface**: `api.errors.paras.PvfCheckStatementFuture.is`\n*   **summary**: The statement for PVF pre-checking is for a future session.\n\n### PvfCheckStatementStale[\u200b](#pvfcheckstatementstale \"Direct link to PvfCheckStatementStale\")\n\n*   **interface**: `api.errors.paras.PvfCheckStatementStale.is`\n*   **summary**: The statement for PVF pre-checking is stale.\n\n### PvfCheckSubjectInvalid[\u200b](#pvfchecksubjectinvalid \"Direct link to PvfCheckSubjectInvalid\")\n\n*   **interface**: `api.errors.paras.PvfCheckSubjectInvalid.is`\n*   **summary**: The given PVF does not exist at the moment of process a vote.\n\n### PvfCheckValidatorIndexOutOfBounds[\u200b](#pvfcheckvalidatorindexoutofbounds \"Direct link to PvfCheckValidatorIndexOutOfBounds\")\n\n*   **interface**: `api.errors.paras.PvfCheckValidatorIndexOutOfBounds.is`\n*   **summary**: Claimed validator index is out of bounds.\n\n* * *\n\nparasDisputes[\u200b](#parasdisputes \"Direct link to parasDisputes\")\n\n----------------------------------------------------------------\n\n### AncientDisputeStatement[\u200b](#ancientdisputestatement \"Direct link to AncientDisputeStatement\")\n\n*   **interface**: `api.errors.parasDisputes.AncientDisputeStatement.is`\n*   **summary**: Ancient dispute statement provided.\n\n### DuplicateDisputeStatementSets[\u200b](#duplicatedisputestatementsets \"Direct link to DuplicateDisputeStatementSets\")\n\n*   **interface**: `api.errors.parasDisputes.DuplicateDisputeStatementSets.is`\n*   **summary**: Duplicate dispute statement sets provided.\n\n### DuplicateStatement[\u200b](#duplicatestatement \"Direct link to DuplicateStatement\")\n\n*   **interface**: `api.errors.parasDisputes.DuplicateStatement.is`\n*   **summary**: Validator vote submitted more than once to dispute.\n\n### InvalidSignature[\u200b](#invalidsignature-1 \"Direct link to InvalidSignature\")\n\n*   **interface**: `api.errors.parasDisputes.InvalidSignature.is`\n*   **summary**: Invalid signature on statement.\n\n### MaliciousBacker[\u200b](#maliciousbacker \"Direct link to MaliciousBacker\")\n\n*   **interface**: `api.errors.parasDisputes.MaliciousBacker.is`\n*   **summary**: A dispute vote from a malicious backer.\n\n### MissingBackingVotes[\u200b](#missingbackingvotes \"Direct link to MissingBackingVotes\")\n\n*   **interface**: `api.errors.parasDisputes.MissingBackingVotes.is`\n*   **summary**: No backing votes were provides along dispute statements.\n\n### SingleSidedDispute[\u200b](#singlesideddispute \"Direct link to SingleSidedDispute\")\n\n*   **interface**: `api.errors.parasDisputes.SingleSidedDispute.is`\n*   **summary**: A dispute where there are only votes on one side.\n\n### UnconfirmedDispute[\u200b](#unconfirmeddispute \"Direct link to UnconfirmedDispute\")\n\n*   **interface**: `api.errors.parasDisputes.UnconfirmedDispute.is`\n*   **summary**: Unconfirmed dispute statement sets provided.\n\n### ValidatorIndexOutOfBounds[\u200b](#validatorindexoutofbounds-1 \"Direct link to ValidatorIndexOutOfBounds\")\n\n*   **interface**: `api.errors.parasDisputes.ValidatorIndexOutOfBounds.is`\n*   **summary**: Validator index on statement is out of bounds for session.\n\n* * *\n\nparasSlashing[\u200b](#parasslashing \"Direct link to parasSlashing\")\n\n----------------------------------------------------------------\n\n### DuplicateSlashingReport[\u200b](#duplicateslashingreport \"Direct link to DuplicateSlashingReport\")\n\n*   **interface**: `api.errors.parasSlashing.DuplicateSlashingReport.is`\n*   **summary**: The given slashing report is valid but already previously reported.\n\n### InvalidCandidateHash[\u200b](#invalidcandidatehash \"Direct link to InvalidCandidateHash\")\n\n*   **interface**: `api.errors.parasSlashing.InvalidCandidateHash.is`\n*   **summary**: The candidate hash is invalid.\n\n### InvalidKeyOwnershipProof[\u200b](#invalidkeyownershipproof-2 \"Direct link to InvalidKeyOwnershipProof\")\n\n*   **interface**: `api.errors.parasSlashing.InvalidKeyOwnershipProof.is`\n*   **summary**: The key ownership proof is invalid.\n\n### InvalidSessionIndex[\u200b](#invalidsessionindex \"Direct link to InvalidSessionIndex\")\n\n*   **interface**: `api.errors.parasSlashing.InvalidSessionIndex.is`\n*   **summary**: The session index is too old or invalid.\n\n### InvalidValidatorIndex[\u200b](#invalidvalidatorindex \"Direct link to InvalidValidatorIndex\")\n\n*   **interface**: `api.errors.parasSlashing.InvalidValidatorIndex.is`\n*   **summary**: There is no pending slash for the given validator index and time slot.\n\n### ValidatorIndexIdMismatch[\u200b](#validatorindexidmismatch \"Direct link to ValidatorIndexIdMismatch\")\n\n*   **interface**: `api.errors.parasSlashing.ValidatorIndexIdMismatch.is`\n*   **summary**: The validator index does not match the validator id.\n\n* * *\n\npreimage[\u200b](#preimage \"Direct link to preimage\")\n\n-------------------------------------------------\n\n### AlreadyNoted[\u200b](#alreadynoted \"Direct link to AlreadyNoted\")\n\n*   **interface**: `api.errors.preimage.AlreadyNoted.is`\n*   **summary**: Preimage has already been noted on-chain.\n\n### NotAuthorized[\u200b](#notauthorized \"Direct link to NotAuthorized\")\n\n*   **interface**: `api.errors.preimage.NotAuthorized.is`\n*   **summary**: The user is not authorized to perform this action.\n\n### NotNoted[\u200b](#notnoted \"Direct link to NotNoted\")\n\n*   **interface**: `api.errors.preimage.NotNoted.is`\n*   **summary**: The preimage cannot be removed since it has not yet been noted.\n\n### NotRequested[\u200b](#notrequested \"Direct link to NotRequested\")\n\n*   **interface**: `api.errors.preimage.NotRequested.is`\n*   **summary**: The preimage request cannot be removed since no outstanding requests exist.\n\n### Requested[\u200b](#requested \"Direct link to Requested\")\n\n*   **interface**: `api.errors.preimage.Requested.is`\n*   **summary**: A preimage may not be removed when there are outstanding requests.\n\n### TooBig[\u200b](#toobig \"Direct link to TooBig\")\n\n*   **interface**: `api.errors.preimage.TooBig.is`\n*   **summary**: Preimage is too large to store on-chain.\n\n* * *\n\nproxy[\u200b](#proxy \"Direct link to proxy\")\n\n----------------------------------------\n\n### Duplicate[\u200b](#duplicate \"Direct link to Duplicate\")\n\n*   **interface**: `api.errors.proxy.Duplicate.is`\n*   **summary**: Account is already a proxy.\n\n### NoPermission[\u200b](#nopermission-1 \"Direct link to NoPermission\")\n\n*   **interface**: `api.errors.proxy.NoPermission.is`\n*   **summary**: Call may not be made by proxy because it may escalate its privileges.\n\n### NoSelfProxy[\u200b](#noselfproxy \"Direct link to NoSelfProxy\")\n\n*   **interface**: `api.errors.proxy.NoSelfProxy.is`\n*   **summary**: Cannot add self as proxy.\n\n### NotFound[\u200b](#notfound-2 \"Direct link to NotFound\")\n\n*   **interface**: `api.errors.proxy.NotFound.is`\n*   **summary**: Proxy registration not found.\n\n### NotProxy[\u200b](#notproxy \"Direct link to NotProxy\")\n\n*   **interface**: `api.errors.proxy.NotProxy.is`\n*   **summary**: Sender is not a proxy of the account to be proxied.\n\n### TooMany[\u200b](#toomany \"Direct link to TooMany\")\n\n*   **interface**: `api.errors.proxy.TooMany.is`\n*   **summary**: There are too many proxies registered or too many announcements pending.\n\n### Unannounced[\u200b](#unannounced \"Direct link to Unannounced\")\n\n*   **interface**: `api.errors.proxy.Unannounced.is`\n*   **summary**: Announcement, if made at all, was made too recently.\n\n### Unproxyable[\u200b](#unproxyable \"Direct link to Unproxyable\")\n\n*   **interface**: `api.errors.proxy.Unproxyable.is`\n*   **summary**: A call which is incompatible with the proxy type's filter was attempted.\n\n* * *\n\nreferenda[\u200b](#referenda \"Direct link to referenda\")\n\n----------------------------------------------------\n\n### BadReferendum[\u200b](#badreferendum \"Direct link to BadReferendum\")\n\n*   **interface**: `api.errors.referenda.BadReferendum.is`\n*   **summary**: The referendum index provided is invalid in this context.\n\n### BadStatus[\u200b](#badstatus \"Direct link to BadStatus\")\n\n*   **interface**: `api.errors.referenda.BadStatus.is`\n*   **summary**: The referendum status is invalid for this operation.\n\n### BadTrack[\u200b](#badtrack \"Direct link to BadTrack\")\n\n*   **interface**: `api.errors.referenda.BadTrack.is`\n*   **summary**: The track identifier given was invalid.\n\n### Full[\u200b](#full \"Direct link to Full\")\n\n*   **interface**: `api.errors.referenda.Full.is`\n*   **summary**: There are already a full complement of referenda in progress for this track.\n\n### HasDeposit[\u200b](#hasdeposit \"Direct link to HasDeposit\")\n\n*   **interface**: `api.errors.referenda.HasDeposit.is`\n*   **summary**: Referendum's decision deposit is already paid.\n\n### NoDeposit[\u200b](#nodeposit \"Direct link to NoDeposit\")\n\n*   **interface**: `api.errors.referenda.NoDeposit.is`\n*   **summary**: The deposit cannot be refunded since none was made.\n\n### NoPermission[\u200b](#nopermission-2 \"Direct link to NoPermission\")\n\n*   **interface**: `api.errors.referenda.NoPermission.is`\n*   **summary**: The deposit refunder is not the depositor.\n\n### NothingToDo[\u200b](#nothingtodo \"Direct link to NothingToDo\")\n\n*   **interface**: `api.errors.referenda.NothingToDo.is`\n*   **summary**: There was nothing to do in the advancement.\n\n### NotOngoing[\u200b](#notongoing-1 \"Direct link to NotOngoing\")\n\n*   **interface**: `api.errors.referenda.NotOngoing.is`\n*   **summary**: Referendum is not ongoing.\n\n### NoTrack[\u200b](#notrack \"Direct link to NoTrack\")\n\n*   **interface**: `api.errors.referenda.NoTrack.is`\n*   **summary**: No track exists for the proposal origin.\n\n### PreimageNotExist[\u200b](#preimagenotexist \"Direct link to PreimageNotExist\")\n\n*   **interface**: `api.errors.referenda.PreimageNotExist.is`\n*   **summary**: The preimage does not exist.\n\n### QueueEmpty[\u200b](#queueempty \"Direct link to QueueEmpty\")\n\n*   **interface**: `api.errors.referenda.QueueEmpty.is`\n*   **summary**: The queue of the track is empty.\n\n### Unfinished[\u200b](#unfinished \"Direct link to Unfinished\")\n\n*   **interface**: `api.errors.referenda.Unfinished.is`\n*   **summary**: Any deposit cannot be refunded until after the decision is over.\n\n* * *\n\nregistrar[\u200b](#registrar \"Direct link to registrar\")\n\n----------------------------------------------------\n\n### AlreadyRegistered[\u200b](#alreadyregistered \"Direct link to AlreadyRegistered\")\n\n*   **interface**: `api.errors.registrar.AlreadyRegistered.is`\n*   **summary**: The ID is already registered.\n\n### CannotDeregister[\u200b](#cannotderegister \"Direct link to CannotDeregister\")\n\n*   **interface**: `api.errors.registrar.CannotDeregister.is`\n*   **summary**: Cannot deregister para\n\n### CannotDowngrade[\u200b](#cannotdowngrade-1 \"Direct link to CannotDowngrade\")\n\n*   **interface**: `api.errors.registrar.CannotDowngrade.is`\n*   **summary**: Cannot schedule downgrade of lease holding parachain to on-demand parachain\n\n### CannotSwap[\u200b](#cannotswap \"Direct link to CannotSwap\")\n\n*   **interface**: `api.errors.registrar.CannotSwap.is`\n*   **summary**: Cannot perform a parachain slot / lifecycle swap. Check that the state of both paras are correct for the swap to work.\n\n### CannotUpgrade[\u200b](#cannotupgrade-1 \"Direct link to CannotUpgrade\")\n\n*   **interface**: `api.errors.registrar.CannotUpgrade.is`\n*   **summary**: Cannot schedule upgrade of on-demand parachain to lease holding parachain\n\n### CodeTooLarge[\u200b](#codetoolarge \"Direct link to CodeTooLarge\")\n\n*   **interface**: `api.errors.registrar.CodeTooLarge.is`\n*   **summary**: Invalid para code size.\n\n### EmptyCode[\u200b](#emptycode \"Direct link to EmptyCode\")\n\n*   **interface**: `api.errors.registrar.EmptyCode.is`\n*   **summary**: Registering parachain with empty code is not allowed.\n\n### HeadDataTooLarge[\u200b](#headdatatoolarge-1 \"Direct link to HeadDataTooLarge\")\n\n*   **interface**: `api.errors.registrar.HeadDataTooLarge.is`\n*   **summary**: Invalid para head data size.\n\n### NotOwner[\u200b](#notowner-2 \"Direct link to NotOwner\")\n\n*   **interface**: `api.errors.registrar.NotOwner.is`\n*   **summary**: The caller is not the owner of this Id.\n\n### NotParachain[\u200b](#notparachain-1 \"Direct link to NotParachain\")\n\n*   **interface**: `api.errors.registrar.NotParachain.is`\n*   **summary**: Para is not a Parachain.\n\n### NotParathread[\u200b](#notparathread \"Direct link to NotParathread\")\n\n*   **interface**: `api.errors.registrar.NotParathread.is`\n*   **summary**: Para is not a Parathread (on-demand parachain).\n\n### NotRegistered[\u200b](#notregistered-1 \"Direct link to NotRegistered\")\n\n*   **interface**: `api.errors.registrar.NotRegistered.is`\n*   **summary**: The ID is not registered.\n\n### NotReserved[\u200b](#notreserved \"Direct link to NotReserved\")\n\n*   **interface**: `api.errors.registrar.NotReserved.is`\n*   **summary**: The ID given for registration has not been reserved.\n\n### ParaLocked[\u200b](#paralocked \"Direct link to ParaLocked\")\n\n*   **interface**: `api.errors.registrar.ParaLocked.is`\n*   **summary**: Para is locked from manipulation by the manager. Must use parachain or relay chain governance.\n\n* * *\n\nscheduler[\u200b](#scheduler \"Direct link to scheduler\")\n\n----------------------------------------------------\n\n### FailedToSchedule[\u200b](#failedtoschedule \"Direct link to FailedToSchedule\")\n\n*   **interface**: `api.errors.scheduler.FailedToSchedule.is`\n*   **summary**: Failed to schedule a call\n\n### Named[\u200b](#named \"Direct link to Named\")\n\n*   **interface**: `api.errors.scheduler.Named.is`\n*   **summary**: Attempt to use a non-named function on a named task.\n\n### NotFound[\u200b](#notfound-3 \"Direct link to NotFound\")\n\n*   **interface**: `api.errors.scheduler.NotFound.is`\n*   **summary**: Cannot find the scheduled call.\n\n### RescheduleNoChange[\u200b](#reschedulenochange \"Direct link to RescheduleNoChange\")\n\n*   **interface**: `api.errors.scheduler.RescheduleNoChange.is`\n*   **summary**: Reschedule failed because it does not change scheduled time.\n\n### TargetBlockNumberInPast[\u200b](#targetblocknumberinpast \"Direct link to TargetBlockNumberInPast\")\n\n*   **interface**: `api.errors.scheduler.TargetBlockNumberInPast.is`\n*   **summary**: Given target block number is in the past.\n\n* * *\n\nsession[\u200b](#session \"Direct link to session\")\n\n----------------------------------------------\n\n### DuplicatedKey[\u200b](#duplicatedkey \"Direct link to DuplicatedKey\")\n\n*   **interface**: `api.errors.session.DuplicatedKey.is`\n*   **summary**: Registered duplicate key.\n\n### InvalidProof[\u200b](#invalidproof \"Direct link to InvalidProof\")\n\n*   **interface**: `api.errors.session.InvalidProof.is`\n*   **summary**: Invalid ownership proof.\n\n### NoAccount[\u200b](#noaccount \"Direct link to NoAccount\")\n\n*   **interface**: `api.errors.session.NoAccount.is`\n*   **summary**: Key setting account is not live, so it's impossible to associate keys.\n\n### NoAssociatedValidatorId[\u200b](#noassociatedvalidatorid \"Direct link to NoAssociatedValidatorId\")\n\n*   **interface**: `api.errors.session.NoAssociatedValidatorId.is`\n*   **summary**: No associated validator ID for account.\n\n### NoKeys[\u200b](#nokeys \"Direct link to NoKeys\")\n\n*   **interface**: `api.errors.session.NoKeys.is`\n*   **summary**: No keys are associated with this account.\n\n* * *\n\nslots[\u200b](#slots \"Direct link to slots\")\n\n----------------------------------------\n\n### LeaseError[\u200b](#leaseerror \"Direct link to LeaseError\")\n\n*   **interface**: `api.errors.slots.LeaseError.is`\n*   **summary**: There was an error with the lease.\n\n### ParaNotOnboarding[\u200b](#paranotonboarding \"Direct link to ParaNotOnboarding\")\n\n*   **interface**: `api.errors.slots.ParaNotOnboarding.is`\n*   **summary**: The parachain ID is not onboarding.\n\n* * *\n\nstaking[\u200b](#staking \"Direct link to staking\")\n\n----------------------------------------------\n\n### AlreadyBonded[\u200b](#alreadybonded \"Direct link to AlreadyBonded\")\n\n*   **interface**: `api.errors.staking.AlreadyBonded.is`\n*   **summary**: Stash is already bonded.\n\n### AlreadyClaimed[\u200b](#alreadyclaimed-1 \"Direct link to AlreadyClaimed\")\n\n*   **interface**: `api.errors.staking.AlreadyClaimed.is`\n*   **summary**: Rewards for this era have already been claimed for this validator.\n\n### AlreadyPaired[\u200b](#alreadypaired \"Direct link to AlreadyPaired\")\n\n*   **interface**: `api.errors.staking.AlreadyPaired.is`\n*   **summary**: Controller is already paired.\n\n### BadState[\u200b](#badstate \"Direct link to BadState\")\n\n*   **interface**: `api.errors.staking.BadState.is`\n*   **summary**: Internal state has become somehow corrupted and the operation cannot continue.\n\n### BadTarget[\u200b](#badtarget \"Direct link to BadTarget\")\n\n*   **interface**: `api.errors.staking.BadTarget.is`\n*   **summary**: A nomination target was supplied that was blocked or otherwise not a validator.\n\n### BoundNotMet[\u200b](#boundnotmet-1 \"Direct link to BoundNotMet\")\n\n*   **interface**: `api.errors.staking.BoundNotMet.is`\n*   **summary**: Some bound is not met.\n\n### CannotChillOther[\u200b](#cannotchillother \"Direct link to CannotChillOther\")\n\n*   **interface**: `api.errors.staking.CannotChillOther.is`\n*   **summary**: The user has enough bond and thus cannot be chilled forcefully by an external person.\n\n### CommissionTooLow[\u200b](#commissiontoolow \"Direct link to CommissionTooLow\")\n\n*   **interface**: `api.errors.staking.CommissionTooLow.is`\n*   **summary**: Commission is too low. Must be at least `MinCommission`.\n\n### DuplicateIndex[\u200b](#duplicateindex \"Direct link to DuplicateIndex\")\n\n*   **interface**: `api.errors.staking.DuplicateIndex.is`\n*   **summary**: Duplicate index.\n\n### EmptyTargets[\u200b](#emptytargets \"Direct link to EmptyTargets\")\n\n*   **interface**: `api.errors.staking.EmptyTargets.is`\n*   **summary**: Targets cannot be empty.\n\n### FundedTarget[\u200b](#fundedtarget \"Direct link to FundedTarget\")\n\n*   **interface**: `api.errors.staking.FundedTarget.is`\n*   **summary**: Attempting to target a stash that still has funds.\n\n### IncorrectHistoryDepth[\u200b](#incorrecthistorydepth \"Direct link to IncorrectHistoryDepth\")\n\n*   **interface**: `api.errors.staking.IncorrectHistoryDepth.is`\n*   **summary**: Incorrect previous history depth input provided.\n\n### IncorrectSlashingSpans[\u200b](#incorrectslashingspans \"Direct link to IncorrectSlashingSpans\")\n\n*   **interface**: `api.errors.staking.IncorrectSlashingSpans.is`\n*   **summary**: Incorrect number of slashing spans provided.\n\n### InsufficientBond[\u200b](#insufficientbond \"Direct link to InsufficientBond\")\n\n*   **interface**: `api.errors.staking.InsufficientBond.is`\n*   **summary**: Cannot have a validator or nominator role, with value less than the minimum defined by governance (see `MinValidatorBond` and `MinNominatorBond`). If unbonding is the intention, `chill` first to remove one's role as validator/nominator.\n\n### InvalidEraToReward[\u200b](#invalideratoreward \"Direct link to InvalidEraToReward\")\n\n*   **interface**: `api.errors.staking.InvalidEraToReward.is`\n*   **summary**: Invalid era to reward.\n\n### InvalidNumberOfNominations[\u200b](#invalidnumberofnominations \"Direct link to InvalidNumberOfNominations\")\n\n*   **interface**: `api.errors.staking.InvalidNumberOfNominations.is`\n*   **summary**: Invalid number of nominations.\n\n### InvalidSlashIndex[\u200b](#invalidslashindex \"Direct link to InvalidSlashIndex\")\n\n*   **interface**: `api.errors.staking.InvalidSlashIndex.is`\n*   **summary**: Slash record index out of bounds.\n\n### NoMoreChunks[\u200b](#nomorechunks \"Direct link to NoMoreChunks\")\n\n*   **interface**: `api.errors.staking.NoMoreChunks.is`\n*   **summary**: Can not schedule more unlock chunks.\n\n### NotController[\u200b](#notcontroller-1 \"Direct link to NotController\")\n\n*   **interface**: `api.errors.staking.NotController.is`\n*   **summary**: Not a controller account.\n\n### NotSortedAndUnique[\u200b](#notsortedandunique \"Direct link to NotSortedAndUnique\")\n\n*   **interface**: `api.errors.staking.NotSortedAndUnique.is`\n*   **summary**: Items are not sorted and unique.\n\n### NotStash[\u200b](#notstash \"Direct link to NotStash\")\n\n*   **interface**: `api.errors.staking.NotStash.is`\n*   **summary**: Not a stash account.\n\n### NoUnlockChunk[\u200b](#nounlockchunk \"Direct link to NoUnlockChunk\")\n\n*   **interface**: `api.errors.staking.NoUnlockChunk.is`\n*   **summary**: Can not rebond without unlocking chunks.\n\n### TooManyNominators[\u200b](#toomanynominators \"Direct link to TooManyNominators\")\n\n*   **interface**: `api.errors.staking.TooManyNominators.is`\n*   **summary**: There are too many nominators in the system. Governance needs to adjust the staking settings to keep things safe for the runtime.\n\n### TooManyTargets[\u200b](#toomanytargets \"Direct link to TooManyTargets\")\n\n*   **interface**: `api.errors.staking.TooManyTargets.is`\n*   **summary**: Too many nomination targets supplied.\n\n### TooManyValidators[\u200b](#toomanyvalidators \"Direct link to TooManyValidators\")\n\n*   **interface**: `api.errors.staking.TooManyValidators.is`\n*   **summary**: There are too many validator candidates in the system. Governance needs to adjust the staking settings to keep things safe for the runtime.\n\n* * *\n\nsystem[\u200b](#system \"Direct link to system\")\n\n-------------------------------------------\n\n### CallFiltered[\u200b](#callfiltered \"Direct link to CallFiltered\")\n\n*   **interface**: `api.errors.system.CallFiltered.is`\n*   **summary**: The origin filter prevent the call to be dispatched.\n\n### FailedToExtractRuntimeVersion[\u200b](#failedtoextractruntimeversion \"Direct link to FailedToExtractRuntimeVersion\")\n\n*   **interface**: `api.errors.system.FailedToExtractRuntimeVersion.is`\n    \n*   **summary**: Failed to extract the runtime version from the new runtime.\n    \n    Either calling `Core_version` or decoding `RuntimeVersion` failed.\n    \n\n### InvalidSpecName[\u200b](#invalidspecname \"Direct link to InvalidSpecName\")\n\n*   **interface**: `api.errors.system.InvalidSpecName.is`\n*   **summary**: The name of specification does not match between the current runtime and the new runtime.\n\n### NonDefaultComposite[\u200b](#nondefaultcomposite \"Direct link to NonDefaultComposite\")\n\n*   **interface**: `api.errors.system.NonDefaultComposite.is`\n*   **summary**: Suicide called when the account has non-default composite data.\n\n### NonZeroRefCount[\u200b](#nonzerorefcount \"Direct link to NonZeroRefCount\")\n\n*   **interface**: `api.errors.system.NonZeroRefCount.is`\n*   **summary**: There is a non-zero reference count preventing the account from being purged.\n\n### SpecVersionNeedsToIncrease[\u200b](#specversionneedstoincrease \"Direct link to SpecVersionNeedsToIncrease\")\n\n*   **interface**: `api.errors.system.SpecVersionNeedsToIncrease.is`\n*   **summary**: The specification version is not allowed to decrease between the current runtime and the new runtime.\n\n* * *\n\ntreasury[\u200b](#treasury \"Direct link to treasury\")\n\n-------------------------------------------------\n\n### InsufficientPermission[\u200b](#insufficientpermission \"Direct link to InsufficientPermission\")\n\n*   **interface**: `api.errors.treasury.InsufficientPermission.is`\n*   **summary**: The spend origin is valid but the amount it is allowed to spend is lower than the amount to be spent.\n\n### InsufficientProposersBalance[\u200b](#insufficientproposersbalance-1 \"Direct link to InsufficientProposersBalance\")\n\n*   **interface**: `api.errors.treasury.InsufficientProposersBalance.is`\n*   **summary**: Proposer's balance is too low.\n\n### InvalidIndex[\u200b](#invalidindex-2 \"Direct link to InvalidIndex\")\n\n*   **interface**: `api.errors.treasury.InvalidIndex.is`\n*   **summary**: No proposal or bounty at that index.\n\n### ProposalNotApproved[\u200b](#proposalnotapproved \"Direct link to ProposalNotApproved\")\n\n*   **interface**: `api.errors.treasury.ProposalNotApproved.is`\n*   **summary**: Proposal has not been approved.\n\n### TooManyApprovals[\u200b](#toomanyapprovals \"Direct link to TooManyApprovals\")\n\n*   **interface**: `api.errors.treasury.TooManyApprovals.is`\n*   **summary**: Too many approvals in the queue.\n\n* * *\n\nutility[\u200b](#utility \"Direct link to utility\")\n\n----------------------------------------------\n\n### TooManyCalls[\u200b](#toomanycalls \"Direct link to TooManyCalls\")\n\n*   **interface**: `api.errors.utility.TooManyCalls.is`\n*   **summary**: Too many calls batched.\n\n* * *\n\nvesting[\u200b](#vesting \"Direct link to vesting\")\n\n----------------------------------------------\n\n### AmountLow[\u200b](#amountlow \"Direct link to AmountLow\")\n\n*   **interface**: `api.errors.vesting.AmountLow.is`\n*   **summary**: Amount being transferred is too low to create a vesting schedule.\n\n### AtMaxVestingSchedules[\u200b](#atmaxvestingschedules \"Direct link to AtMaxVestingSchedules\")\n\n*   **interface**: `api.errors.vesting.AtMaxVestingSchedules.is`\n*   **summary**: The account already has `MaxVestingSchedules` count of schedules and thus cannot add another one. Consider merging existing schedules in order to add another.\n\n### InvalidScheduleParams[\u200b](#invalidscheduleparams \"Direct link to InvalidScheduleParams\")\n\n*   **interface**: `api.errors.vesting.InvalidScheduleParams.is`\n*   **summary**: Failed to create a new schedule because some parameter was invalid.\n\n### NotVesting[\u200b](#notvesting \"Direct link to NotVesting\")\n\n*   **interface**: `api.errors.vesting.NotVesting.is`\n*   **summary**: The account given is not vesting.\n\n### ScheduleIndexOutOfBounds[\u200b](#scheduleindexoutofbounds \"Direct link to ScheduleIndexOutOfBounds\")\n\n*   **interface**: `api.errors.vesting.ScheduleIndexOutOfBounds.is`\n*   **summary**: An index was out of bounds of the vesting schedules.\n\n* * *\n\nvoterList[\u200b](#voterlist \"Direct link to voterList\")\n\n----------------------------------------------------\n\n### List[\u200b](#list \"Direct link to List\")\n\n*   **interface**: `api.errors.voterList.List.is`\n*   **summary**: A error in the list interface implementation.\n\n* * *\n\nwhitelist[\u200b](#whitelist \"Direct link to whitelist\")\n\n----------------------------------------------------\n\n### CallAlreadyWhitelisted[\u200b](#callalreadywhitelisted \"Direct link to CallAlreadyWhitelisted\")\n\n*   **interface**: `api.errors.whitelist.CallAlreadyWhitelisted.is`\n*   **summary**: The call was already whitelisted; No-Op.\n\n### CallIsNotWhitelisted[\u200b](#callisnotwhitelisted \"Direct link to CallIsNotWhitelisted\")\n\n*   **interface**: `api.errors.whitelist.CallIsNotWhitelisted.is`\n*   **summary**: The call was not whitelisted.\n\n### InvalidCallWeightWitness[\u200b](#invalidcallweightwitness \"Direct link to InvalidCallWeightWitness\")\n\n*   **interface**: `api.errors.whitelist.InvalidCallWeightWitness.is`\n*   **summary**: The weight of the decoded call was higher than the witness.\n\n### UnavailablePreImage[\u200b](#unavailablepreimage \"Direct link to UnavailablePreImage\")\n\n*   **interface**: `api.errors.whitelist.UnavailablePreImage.is`\n*   **summary**: The preimage of the call hash could not be loaded.\n\n### UndecodableCall[\u200b](#undecodablecall \"Direct link to UndecodableCall\")\n\n*   **interface**: `api.errors.whitelist.UndecodableCall.is`\n*   **summary**: The call could not be decoded.\n\n* * *\n\nxcmPallet[\u200b](#xcmpallet \"Direct link to xcmPallet\")\n\n----------------------------------------------------\n\n### AccountNotSovereign[\u200b](#accountnotsovereign \"Direct link to AccountNotSovereign\")\n\n*   **interface**: `api.errors.xcmPallet.AccountNotSovereign.is`\n*   **summary**: The given account is not an identifiable sovereign account for any location.\n\n### AlreadySubscribed[\u200b](#alreadysubscribed \"Direct link to AlreadySubscribed\")\n\n*   **interface**: `api.errors.xcmPallet.AlreadySubscribed.is`\n*   **summary**: The location is invalid since it already has a subscription from us.\n\n### BadLocation[\u200b](#badlocation \"Direct link to BadLocation\")\n\n*   **interface**: `api.errors.xcmPallet.BadLocation.is`\n*   **summary**: The given location could not be used (e.g. because it cannot be expressed in the desired version of XCM).\n\n### BadVersion[\u200b](#badversion \"Direct link to BadVersion\")\n\n*   **interface**: `api.errors.xcmPallet.BadVersion.is`\n*   **summary**: The version of the `Versioned` value used is not able to be interpreted.\n\n### CannotReanchor[\u200b](#cannotreanchor \"Direct link to CannotReanchor\")\n\n*   **interface**: `api.errors.xcmPallet.CannotReanchor.is`\n*   **summary**: Could not re-anchor the assets to declare the fees for the destination chain.\n\n### DestinationNotInvertible[\u200b](#destinationnotinvertible \"Direct link to DestinationNotInvertible\")\n\n*   **interface**: `api.errors.xcmPallet.DestinationNotInvertible.is`\n*   **summary**: The destination `MultiLocation` provided cannot be inverted.\n\n### Empty[\u200b](#empty \"Direct link to Empty\")\n\n*   **interface**: `api.errors.xcmPallet.Empty.is`\n*   **summary**: The assets to be sent are empty.\n\n### FeesNotMet[\u200b](#feesnotmet \"Direct link to FeesNotMet\")\n\n*   **interface**: `api.errors.xcmPallet.FeesNotMet.is`\n*   **summary**: The operation required fees to be paid which the initiator could not meet.\n\n### Filtered[\u200b](#filtered \"Direct link to Filtered\")\n\n*   **interface**: `api.errors.xcmPallet.Filtered.is`\n*   **summary**: The message execution fails the filter.\n\n### InUse[\u200b](#inuse-1 \"Direct link to InUse\")\n\n*   **interface**: `api.errors.xcmPallet.InUse.is`\n*   **summary**: The unlock operation cannot succeed because there are still consumers of the lock.\n\n### InvalidAsset[\u200b](#invalidasset \"Direct link to InvalidAsset\")\n\n*   **interface**: `api.errors.xcmPallet.InvalidAsset.is`\n*   **summary**: Invalid asset for the operation.\n\n### InvalidOrigin[\u200b](#invalidorigin-1 \"Direct link to InvalidOrigin\")\n\n*   **interface**: `api.errors.xcmPallet.InvalidOrigin.is`\n*   **summary**: Origin is invalid for sending.\n\n### LockNotFound[\u200b](#locknotfound \"Direct link to LockNotFound\")\n\n*   **interface**: `api.errors.xcmPallet.LockNotFound.is`\n*   **summary**: A remote lock with the corresponding data could not be found.\n\n### LowBalance[\u200b](#lowbalance \"Direct link to LowBalance\")\n\n*   **interface**: `api.errors.xcmPallet.LowBalance.is`\n*   **summary**: The owner does not own (all) of the asset that they wish to do the operation on.\n\n### NoSubscription[\u200b](#nosubscription \"Direct link to NoSubscription\")\n\n*   **interface**: `api.errors.xcmPallet.NoSubscription.is`\n*   **summary**: The referenced subscription could not be found.\n\n### SendFailure[\u200b](#sendfailure \"Direct link to SendFailure\")\n\n*   **interface**: `api.errors.xcmPallet.SendFailure.is`\n*   **summary**: There was some other issue (i.e. not to do with routing) in sending the message. Perhaps a lack of space for buffering the message.\n\n### TooManyAssets[\u200b](#toomanyassets \"Direct link to TooManyAssets\")\n\n*   **interface**: `api.errors.xcmPallet.TooManyAssets.is`\n*   **summary**: Too many assets have been attempted for transfer.\n\n### TooManyLocks[\u200b](#toomanylocks \"Direct link to TooManyLocks\")\n\n*   **interface**: `api.errors.xcmPallet.TooManyLocks.is`\n*   **summary**: The asset owner has too many locks on the asset.\n\n### Unreachable[\u200b](#unreachable \"Direct link to Unreachable\")\n\n*   **interface**: `api.errors.xcmPallet.Unreachable.is`\n*   **summary**: The desired destination was unreachable, generally because there is a no way of routing to it.\n\n### UnweighableMessage[\u200b](#unweighablemessage \"Direct link to UnweighableMessage\")\n\n*   **interface**: `api.errors.xcmPallet.UnweighableMessage.is`\n*   **summary**: The message's weight could not be determined.\n\n[Edit this page](https://github.com/polkadot-js/docs/edit/master/docs/polkadot/errors.md)\n\n[Previous\\\n\\\nEvents](/docs/polkadot/events)\n[Next\\\n\\\nOverview](/docs/kusama)\n\n*   [auctions](#auctions)\n    *   [AlreadyLeasedOut](#alreadyleasedout)\n        \n    *   [AuctionEnded](#auctionended)\n        \n    *   [AuctionInProgress](#auctioninprogress)\n        \n    *   [LeasePeriodInPast](#leaseperiodinpast)\n        \n    *   [NotAuction](#notauction)\n        \n    *   [NotCurrentAuction](#notcurrentauction)\n        \n    *   [ParaNotRegistered](#paranotregistered)\n        \n*   [babe](#babe)\n    *   [DuplicateOffenceReport](#duplicateoffencereport)\n        \n    *   [InvalidConfiguration](#invalidconfiguration)\n        \n    *   [InvalidEquivocationProof](#invalidequivocationproof)\n        \n    *   [InvalidKeyOwnershipProof](#invalidkeyownershipproof)\n        \n*   [balances](#balances)\n    *   [DeadAccount](#deadaccount)\n        \n    *   [ExistentialDeposit](#existentialdeposit)\n        \n    *   [ExistingVestingSchedule](#existingvestingschedule)\n        \n    *   [Expendability](#expendability)\n        \n    *   [InsufficientBalance](#insufficientbalance)\n        \n    *   [LiquidityRestrictions](#liquidityrestrictions)\n        \n    *   [TooManyFreezes](#toomanyfreezes)\n        \n    *   [TooManyHolds](#toomanyholds)\n        \n    *   [TooManyReserves](#toomanyreserves)\n        \n    *   [VestingBalance](#vestingbalance)\n        \n*   [bounties](#bounties)\n    *   [HasActiveChildBounty](#hasactivechildbounty)\n        \n    *   [InsufficientProposersBalance](#insufficientproposersbalance)\n        \n    *   [InvalidFee](#invalidfee)\n        \n    *   [InvalidIndex](#invalidindex)\n        \n    *   [InvalidValue](#invalidvalue)\n        \n    *   [PendingPayout](#pendingpayout)\n        \n    *   [Premature](#premature)\n        \n    *   [ReasonTooBig](#reasontoobig)\n        \n    *   [RequireCurator](#requirecurator)\n        \n    *   [TooManyQueued](#toomanyqueued)\n        \n    *   [UnexpectedStatus](#unexpectedstatus)\n        \n*   [childBounties](#childbounties)\n    *   [InsufficientBountyBalance](#insufficientbountybalance)\n        \n    *   [ParentBountyNotActive](#parentbountynotactive)\n        \n    *   [TooManyChildBounties](#toomanychildbounties)\n        \n*   [claims](#claims)\n    *   [InvalidEthereumSignature](#invalidethereumsignature)\n        \n    *   [InvalidStatement](#invalidstatement)\n        \n    *   [PotUnderflow](#potunderflow)\n        \n    *   [SenderHasNoClaim](#senderhasnoclaim)\n        \n    *   [SignerHasNoClaim](#signerhasnoclaim)\n        \n    *   [VestedBalanceExists](#vestedbalanceexists)\n        \n*   [configuration](#configuration)\n    *   [InvalidNewValue](#invalidnewvalue)\n        \n*   [convictionVoting](#convictionvoting)\n    *   [AlreadyDelegating](#alreadydelegating)\n        \n    *   [AlreadyVoting](#alreadyvoting)\n        \n    *   [BadClass](#badclass)\n        \n    *   [ClassNeeded](#classneeded)\n        \n    *   [InsufficientFunds](#insufficientfunds)\n        \n    *   [MaxVotesReached](#maxvotesreached)\n        \n    *   [Nonsense](#nonsense)\n        \n    *   [NoPermission](#nopermission)\n        \n    *   [NoPermissionYet](#nopermissionyet)\n        \n    *   [NotDelegating](#notdelegating)\n        \n    *   [NotOngoing](#notongoing)\n        \n    *   [NotVoter](#notvoter)\n        \n*   [crowdloan](#crowdloan)\n    *   [AlreadyInNewRaise](#alreadyinnewraise)\n        \n    *   [BidOrLeaseActive](#bidorleaseactive)\n        \n    *   [CannotEndInPast](#cannotendinpast)\n        \n    *   [CapExceeded](#capexceeded)\n        \n    *   [ContributionPeriodOver](#contributionperiodover)\n        \n    *   [ContributionTooSmall](#contributiontoosmall)\n        \n    *   [EndTooFarInFuture](#endtoofarinfuture)\n        \n    *   [FirstPeriodInPast](#firstperiodinpast)\n        \n    *   [FirstPeriodTooFarInFuture](#firstperiodtoofarinfuture)\n        \n    *   [FundNotEnded](#fundnotended)\n        \n    *   [InvalidOrigin](#invalidorigin)\n        \n    *   [InvalidParaId](#invalidparaid)\n        \n    *   [InvalidSignature](#invalidsignature)\n        \n    *   [LastPeriodBeforeFirstPeriod](#lastperiodbeforefirstperiod)\n        \n    *   [LastPeriodTooFarInFuture](#lastperiodtoofarinfuture)\n        \n    *   [LeaseActive](#leaseactive)\n        \n    *   [MemoTooLarge](#memotoolarge)\n        \n    *   [NoContributions](#nocontributions)\n        \n    *   [NoLeasePeriod](#noleaseperiod)\n        \n    *   [NotParachain](#notparachain)\n        \n    *   [NotReadyToDissolve](#notreadytodissolve)\n        \n    *   [Overflow](#overflow)\n        \n    *   [VrfDelayInProgress](#vrfdelayinprogress)\n        \n*   [electionProviderMultiPhase](#electionprovidermultiphase)\n    *   [BoundNotMet](#boundnotmet)\n        \n    *   [CallNotAllowed](#callnotallowed)\n        \n    *   [FallbackFailed](#fallbackfailed)\n        \n    *   [InvalidSubmissionIndex](#invalidsubmissionindex)\n        \n    *   [MissingSnapshotMetadata](#missingsnapshotmetadata)\n        \n    *   [OcwCallWrongEra](#ocwcallwrongera)\n        \n    *   [PreDispatchEarlySubmission](#predispatchearlysubmission)\n        \n    *   [PreDispatchWeakSubmission](#predispatchweaksubmission)\n        \n    *   [PreDispatchWrongWinnerCount](#predispatchwrongwinnercount)\n        \n    *   [SignedCannotPayDeposit](#signedcannotpaydeposit)\n        \n    *   [SignedInvalidWitness](#signedinvalidwitness)\n        \n    *   [SignedQueueFull](#signedqueuefull)\n        \n    *   [SignedTooMuchWeight](#signedtoomuchweight)\n        \n    *   [TooManyWinners](#toomanywinners)\n        \n*   [fastUnstake](#fastunstake)\n    *   [AlreadyHead](#alreadyhead)\n        \n    *   [AlreadyQueued](#alreadyqueued)\n        \n    *   [CallNotAllowed](#callnotallowed-1)\n        \n    *   [NotController](#notcontroller)\n        \n    *   [NotFullyBonded](#notfullybonded)\n        \n    *   [NotQueued](#notqueued)\n        \n*   [grandpa](#grandpa)\n    *   [ChangePending](#changepending)\n        \n    *   [DuplicateOffenceReport](#duplicateoffencereport-1)\n        \n    *   [InvalidEquivocationProof](#invalidequivocationproof-1)\n        \n    *   [InvalidKeyOwnershipProof](#invalidkeyownershipproof-1)\n        \n    *   [PauseFailed](#pausefailed)\n        \n    *   [ResumeFailed](#resumefailed)\n        \n    *   [TooSoon](#toosoon)\n        \n*   [hrmp](#hrmp)\n    *   [AcceptHrmpChannelAlreadyConfirmed](#accepthrmpchannelalreadyconfirmed)\n        \n    *   [AcceptHrmpChannelDoesntExist](#accepthrmpchanneldoesntexist)\n        \n    *   [AcceptHrmpChannelLimitExceeded](#accepthrmpchannellimitexceeded)\n        \n    *   [CancelHrmpOpenChannelUnauthorized](#cancelhrmpopenchannelunauthorized)\n        \n    *   [CloseHrmpChannelAlreadyUnderway](#closehrmpchannelalreadyunderway)\n        \n    *   [CloseHrmpChannelDoesntExist](#closehrmpchanneldoesntexist)\n        \n    *   [CloseHrmpChannelUnauthorized](#closehrmpchannelunauthorized)\n        \n    *   [OpenHrmpChannelAlreadyConfirmed](#openhrmpchannelalreadyconfirmed)\n        \n    *   [OpenHrmpChannelAlreadyExists](#openhrmpchannelalreadyexists)\n        \n    *   [OpenHrmpChannelAlreadyRequested](#openhrmpchannelalreadyrequested)\n        \n    *   [OpenHrmpChannelCapacityExceedsLimit](#openhrmpchannelcapacityexceedslimit)\n        \n    *   [OpenHrmpChannelDoesntExist](#openhrmpchanneldoesntexist)\n        \n    *   [OpenHrmpChannelInvalidRecipient](#openhrmpchannelinvalidrecipient)\n        \n    *   [OpenHrmpChannelLimitExceeded](#openhrmpchannellimitexceeded)\n        \n    *   [OpenHrmpChannelMessageSizeExceedsLimit](#openhrmpchannelmessagesizeexceedslimit)\n        \n    *   [OpenHrmpChannelToSelf](#openhrmpchanneltoself)\n        \n    *   [OpenHrmpChannelZeroCapacity](#openhrmpchannelzerocapacity)\n        \n    *   [OpenHrmpChannelZeroMessageSize](#openhrmpchannelzeromessagesize)\n        \n    *   [WrongWitness](#wrongwitness)\n        \n*   [identity](#identity)\n    *   [AlreadyClaimed](#alreadyclaimed)\n        \n    *   [EmptyIndex](#emptyindex)\n        \n    *   [FeeChanged](#feechanged)\n        \n    *   [InvalidIndex](#invalidindex-1)\n        \n    *   [InvalidJudgement](#invalidjudgement)\n        \n    *   [InvalidTarget](#invalidtarget)\n        \n    *   [JudgementForDifferentIdentity](#judgementfordifferentidentity)\n        \n    *   [JudgementGiven](#judgementgiven)\n        \n    *   [JudgementPaymentFailed](#judgementpaymentfailed)\n        \n    *   [NoIdentity](#noidentity)\n        \n    *   [NotFound](#notfound)\n        \n    *   [NotNamed](#notnamed)\n        \n    *   [NotOwned](#notowned)\n        \n    *   [NotSub](#notsub)\n        \n    *   [StickyJudgement](#stickyjudgement)\n        \n    *   [TooManyFields](#toomanyfields)\n        \n    *   [TooManyRegistrars](#toomanyregistrars)\n        \n    *   [TooManySubAccounts](#toomanysubaccounts)\n        \n*   [imOnline](#imonline)\n    *   [DuplicatedHeartbeat](#duplicatedheartbeat)\n        \n    *   [InvalidKey](#invalidkey)\n        \n*   [indices](#indices)\n    *   [InUse](#inuse)\n        \n    *   [NotAssigned](#notassigned)\n        \n    *   [NotOwner](#notowner)\n        \n    *   [NotTransfer](#nottransfer)\n        \n    *   [Permanent](#permanent)\n        \n*   [messageQueue](#messagequeue)\n    *   [AlreadyProcessed](#alreadyprocessed)\n        \n    *   [InsufficientWeight](#insufficientweight)\n        \n    *   [NoMessage](#nomessage)\n        \n    *   [NoPage](#nopage)\n        \n    *   [NotReapable](#notreapable)\n        \n    *   [Queued](#queued)\n        \n    *   [QueuePaused](#queuepaused)\n        \n    *   [TemporarilyUnprocessable](#temporarilyunprocessable)\n        \n*   [multisig](#multisig)\n    *   [AlreadyApproved](#alreadyapproved)\n        \n    *   [AlreadyStored](#alreadystored)\n        \n    *   [MaxWeightTooLow](#maxweighttoolow)\n        \n    *   [MinimumThreshold](#minimumthreshold)\n        \n    *   [NoApprovalsNeeded](#noapprovalsneeded)\n        \n    *   [NotFound](#notfound-1)\n        \n    *   [NoTimepoint](#notimepoint)\n        \n    *   [NotOwner](#notowner-1)\n        \n    *   [SenderInSignatories](#senderinsignatories)\n        \n    *   [SignatoriesOutOfOrder](#signatoriesoutoforder)\n        \n    *   [TooFewSignatories](#toofewsignatories)\n        \n    *   [TooManySignatories](#toomanysignatories)\n        \n    *   [UnexpectedTimepoint](#unexpectedtimepoint)\n        \n    *   [WrongTimepoint](#wrongtimepoint)\n        \n*   [nominationPools](#nominationpools)\n    *   [AccountBelongsToOtherPool](#accountbelongstootherpool)\n        \n    *   [BondExtraRestricted](#bondextrarestricted)\n        \n    *   [CanNotChangeState](#cannotchangestate)\n        \n    *   [CannotWithdrawAny](#cannotwithdrawany)\n        \n    *   [CommissionChangeRateNotAllowed](#commissionchangeratenotallowed)\n        \n    *   [CommissionChangeThrottled](#commissionchangethrottled)\n        \n    *   [CommissionExceedsGlobalMaximum](#commissionexceedsglobalmaximum)\n        \n    *   [CommissionExceedsMaximum](#commissionexceedsmaximum)\n        \n    *   [Defensive](#defensive)\n        \n    *   [DoesNotHavePermission](#doesnothavepermission)\n        \n    *   [FullyUnbonding](#fullyunbonding)\n        \n    *   [InvalidPoolId](#invalidpoolid)\n        \n    *   [MaxCommissionRestricted](#maxcommissionrestricted)\n        \n    *   [MaxPoolMembers](#maxpoolmembers)\n        \n    *   [MaxPools](#maxpools)\n        \n    *   [MaxUnbondingLimit](#maxunbondinglimit)\n        \n    *   [MetadataExceedsMaxLen](#metadataexceedsmaxlen)\n        \n    *   [MinimumBondNotMet](#minimumbondnotmet)\n        \n    *   [NoCommissionCurrentSet](#nocommissioncurrentset)\n        \n    *   [NoPendingCommission](#nopendingcommission)\n        \n    *   [NotDestroying](#notdestroying)\n        \n    *   [NotKickerOrDestroying](#notkickerordestroying)\n        \n    *   [NotNominator](#notnominator)\n        \n    *   [NotOpen](#notopen)\n        \n    *   [OverflowRisk](#overflowrisk)\n        \n    *   [PartialUnbondNotAllowedPermissionlessly](#partialunbondnotallowedpermissionlessly)\n        \n    *   [PoolIdInUse](#poolidinuse)\n        \n    *   [PoolMemberNotFound](#poolmembernotfound)\n        \n    *   [PoolNotFound](#poolnotfound)\n        \n    *   [RewardPoolNotFound](#rewardpoolnotfound)\n        \n    *   [SubPoolsNotFound](#subpoolsnotfound)\n        \n*   [paraInclusion](#parainclusion)\n    *   [BitfieldAllZeros](#bitfieldallzeros)\n        \n    *   [BitfieldDuplicateOrUnordered](#bitfieldduplicateorunordered)\n        \n    *   [BitfieldReferencesFreedCore](#bitfieldreferencesfreedcore)\n        \n    *   [CandidateScheduledBeforeParaFree](#candidatescheduledbeforeparafree)\n        \n    *   [DisallowedRelayParent](#disallowedrelayparent)\n        \n    *   [HeadDataTooLarge](#headdatatoolarge)\n        \n    *   [HrmpWatermarkMishandling](#hrmpwatermarkmishandling)\n        \n    *   [IncorrectDownwardMessageHandling](#incorrectdownwardmessagehandling)\n        \n    *   [InsufficientBacking](#insufficientbacking)\n        \n    *   [InvalidAssignment](#invalidassignment)\n        \n    *   [InvalidBacking](#invalidbacking)\n        \n    *   [InvalidBitfieldSignature](#invalidbitfieldsignature)\n        \n    *   [InvalidGroupIndex](#invalidgroupindex)\n        \n    *   [InvalidOutboundHrmp](#invalidoutboundhrmp)\n        \n    *   [InvalidUpwardMessages](#invalidupwardmessages)\n        \n    *   [InvalidValidationCodeHash](#invalidvalidationcodehash)\n        \n    *   [NewCodeTooLarge](#newcodetoolarge)\n        \n    *   [NotCollatorSigned](#notcollatorsigned)\n        \n    *   [ParaHeadMismatch](#paraheadmismatch)\n        \n    *   [PrematureCodeUpgrade](#prematurecodeupgrade)\n        \n    *   [ScheduledOutOfOrder](#scheduledoutoforder)\n        \n    *   [UnexpectedRelayParent](#unexpectedrelayparent)\n        \n    *   [UnscheduledCandidate](#unscheduledcandidate)\n        \n    *   [UnsortedOrDuplicateBackedCandidates](#unsortedorduplicatebackedcandidates)\n        \n    *   [UnsortedOrDuplicateDisputeStatementSet](#unsortedorduplicatedisputestatementset)\n        \n    *   [UnsortedOrDuplicateValidatorIndices](#unsortedorduplicatevalidatorindices)\n        \n    *   [ValidationDataHashMismatch](#validationdatahashmismatch)\n        \n    *   [ValidatorIndexOutOfBounds](#validatorindexoutofbounds)\n        \n    *   [WrongBitfieldSize](#wrongbitfieldsize)\n        \n*   [paraInherent](#parainherent)\n    *   [CandidateConcludedInvalid](#candidateconcludedinvalid)\n        \n    *   [DisputeInvalid](#disputeinvalid)\n        \n    *   [DisputeStatementsUnsortedOrDuplicates](#disputestatementsunsortedorduplicates)\n        \n    *   [InherentOverweight](#inherentoverweight)\n        \n    *   [InvalidParentHeader](#invalidparentheader)\n        \n    *   [TooManyInclusionInherents](#toomanyinclusioninherents)\n        \n*   [paras](#paras)\n    *   [CannotDowngrade](#cannotdowngrade)\n        \n    *   [CannotOffboard](#cannotoffboard)\n        \n    *   [CannotOnboard](#cannotonboard)\n        \n    *   [CannotUpgrade](#cannotupgrade)\n        \n    *   [CannotUpgradeCode](#cannotupgradecode)\n        \n    *   [NotRegistered](#notregistered)\n        \n    *   [PvfCheckDoubleVote](#pvfcheckdoublevote)\n        \n    *   [PvfCheckInvalidSignature](#pvfcheckinvalidsignature)\n        \n    *   [PvfCheckStatementFuture](#pvfcheckstatementfuture)\n        \n    *   [PvfCheckStatementStale](#pvfcheckstatementstale)\n        \n    *   [PvfCheckSubjectInvalid](#pvfchecksubjectinvalid)\n        \n    *   [PvfCheckValidatorIndexOutOfBounds](#pvfcheckvalidatorindexoutofbounds)\n        \n*   [parasDisputes](#parasdisputes)\n    *   [AncientDisputeStatement](#ancientdisputestatement)\n        \n    *   [DuplicateDisputeStatementSets](#duplicatedisputestatementsets)\n        \n    *   [DuplicateStatement](#duplicatestatement)\n        \n    *   [InvalidSignature](#invalidsignature-1)\n        \n    *   [MaliciousBacker](#maliciousbacker)\n        \n    *   [MissingBackingVotes](#missingbackingvotes)\n        \n    *   [SingleSidedDispute](#singlesideddispute)\n        \n    *   [UnconfirmedDispute](#unconfirmeddispute)\n        \n    *   [ValidatorIndexOutOfBounds](#validatorindexoutofbounds-1)\n        \n*   [parasSlashing](#parasslashing)\n    *   [DuplicateSlashingReport](#duplicateslashingreport)\n        \n    *   [InvalidCandidateHash](#invalidcandidatehash)\n        \n    *   [InvalidKeyOwnershipProof](#invalidkeyownershipproof-2)\n        \n    *   [InvalidSessionIndex](#invalidsessionindex)\n        \n    *   [InvalidValidatorIndex](#invalidvalidatorindex)\n        \n    *   [ValidatorIndexIdMismatch](#validatorindexidmismatch)\n        \n*   [preimage](#preimage)\n    *   [AlreadyNoted](#alreadynoted)\n        \n    *   [NotAuthorized](#notauthorized)\n        \n    *   [NotNoted](#notnoted)\n        \n    *   [NotRequested](#notrequested)\n        \n    *   [Requested](#requested)\n        \n    *   [TooBig](#toobig)\n        \n*   [proxy](#proxy)\n    *   [Duplicate](#duplicate)\n        \n    *   [NoPermission](#nopermission-1)\n        \n    *   [NoSelfProxy](#noselfproxy)\n        \n    *   [NotFound](#notfound-2)\n        \n    *   [NotProxy](#notproxy)\n        \n    *   [TooMany](#toomany)\n        \n    *   [Unannounced](#unannounced)\n        \n    *   [Unproxyable](#unproxyable)\n        \n*   [referenda](#referenda)\n    *   [BadReferendum](#badreferendum)\n        \n    *   [BadStatus](#badstatus)\n        \n    *   [BadTrack](#badtrack)\n        \n    *   [Full](#full)\n        \n    *   [HasDeposit](#hasdeposit)\n        \n    *   [NoDeposit](#nodeposit)\n        \n    *   [NoPermission](#nopermission-2)\n        \n    *   [NothingToDo](#nothingtodo)\n        \n    *   [NotOngoing](#notongoing-1)\n        \n    *   [NoTrack](#notrack)\n        \n    *   [PreimageNotExist](#preimagenotexist)\n        \n    *   [QueueEmpty](#queueempty)\n        \n    *   [Unfinished](#unfinished)\n        \n*   [registrar](#registrar)\n    *   [AlreadyRegistered](#alreadyregistered)\n        \n    *   [CannotDeregister](#cannotderegister)\n        \n    *   [CannotDowngrade](#cannotdowngrade-1)\n        \n    *   [CannotSwap](#cannotswap)\n        \n    *   [CannotUpgrade](#cannotupgrade-1)\n        \n    *   [CodeTooLarge](#codetoolarge)\n        \n    *   [EmptyCode](#emptycode)\n        \n    *   [HeadDataTooLarge](#headdatatoolarge-1)\n        \n    *   [NotOwner](#notowner-2)\n        \n    *   [NotParachain](#notparachain-1)\n        \n    *   [NotParathread](#notparathread)\n        \n    *   [NotRegistered](#notregistered-1)\n        \n    *   [NotReserved](#notreserved)\n        \n    *   [ParaLocked](#paralocked)\n        \n*   [scheduler](#scheduler)\n    *   [FailedToSchedule](#failedtoschedule)\n        \n    *   [Named](#named)\n        \n    *   [NotFound](#notfound-3)\n        \n    *   [RescheduleNoChange](#reschedulenochange)\n        \n    *   [TargetBlockNumberInPast](#targetblocknumberinpast)\n        \n*   [session](#session)\n    *   [DuplicatedKey](#duplicatedkey)\n        \n    *   [InvalidProof](#invalidproof)\n        \n    *   [NoAccount](#noaccount)\n        \n    *   [NoAssociatedValidatorId](#noassociatedvalidatorid)\n        \n    *   [NoKeys](#nokeys)\n        \n*   [slots](#slots)\n    *   [LeaseError](#leaseerror)\n        \n    *   [ParaNotOnboarding](#paranotonboarding)\n        \n*   [staking](#staking)\n    *   [AlreadyBonded](#alreadybonded)\n        \n    *   [AlreadyClaimed](#alreadyclaimed-1)\n        \n    *   [AlreadyPaired](#alreadypaired)\n        \n    *   [BadState](#badstate)\n        \n    *   [BadTarget](#badtarget)\n        \n    *   [BoundNotMet](#boundnotmet-1)\n        \n    *   [CannotChillOther](#cannotchillother)\n        \n    *   [CommissionTooLow](#commissiontoolow)\n        \n    *   [DuplicateIndex](#duplicateindex)\n        \n    *   [EmptyTargets](#emptytargets)\n        \n    *   [FundedTarget](#fundedtarget)\n        \n    *   [IncorrectHistoryDepth](#incorrecthistorydepth)\n        \n    *   [IncorrectSlashingSpans](#incorrectslashingspans)\n        \n    *   [InsufficientBond](#insufficientbond)\n        \n    *   [InvalidEraToReward](#invalideratoreward)\n        \n    *   [InvalidNumberOfNominations](#invalidnumberofnominations)\n        \n    *   [InvalidSlashIndex](#invalidslashindex)\n        \n    *   [NoMoreChunks](#nomorechunks)\n        \n    *   [NotController](#notcontroller-1)\n        \n    *   [NotSortedAndUnique](#notsortedandunique)\n        \n    *   [NotStash](#notstash)\n        \n    *   [NoUnlockChunk](#nounlockchunk)\n        \n    *   [TooManyNominators](#toomanynominators)\n        \n    *   [TooManyTargets](#toomanytargets)\n        \n    *   [TooManyValidators](#toomanyvalidators)\n        \n*   [system](#system)\n    *   [CallFiltered](#callfiltered)\n        \n    *   [FailedToExtractRuntimeVersion](#failedtoextractruntimeversion)\n        \n    *   [InvalidSpecName](#invalidspecname)\n        \n    *   [NonDefaultComposite](#nondefaultcomposite)\n        \n    *   [NonZeroRefCount](#nonzerorefcount)\n        \n    *   [SpecVersionNeedsToIncrease](#specversionneedstoincrease)\n        \n*   [treasury](#treasury)\n    *   [InsufficientPermission](#insufficientpermission)\n        \n    *   [InsufficientProposersBalance](#insufficientproposersbalance-1)\n        \n    *   [InvalidIndex](#invalidindex-2)\n        \n    *   [ProposalNotApproved](#proposalnotapproved)\n        \n    *   [TooManyApprovals](#toomanyapprovals)\n        \n*   [utility](#utility)\n    *   [TooManyCalls](#toomanycalls)\n        \n*   [vesting](#vesting)\n    *   [AmountLow](#amountlow)\n        \n    *   [AtMaxVestingSchedules](#atmaxvestingschedules)\n        \n    *   [InvalidScheduleParams](#invalidscheduleparams)\n        \n    *   [NotVesting](#notvesting)\n        \n    *   [ScheduleIndexOutOfBounds](#scheduleindexoutofbounds)\n        \n*   [voterList](#voterlist)\n    *   [List](#list)\n        \n*   [whitelist](#whitelist)\n    *   [CallAlreadyWhitelisted](#callalreadywhitelisted)\n        \n    *   [CallIsNotWhitelisted](#callisnotwhitelisted)\n        \n    *   [InvalidCallWeightWitness](#invalidcallweightwitness)\n        \n    *   [UnavailablePreImage](#unavailablepreimage)\n        \n    *   [UndecodableCall](#undecodablecall)\n        \n*   [xcmPallet](#xcmpallet)\n    *   [AccountNotSovereign](#accountnotsovereign)\n        \n    *   [AlreadySubscribed](#alreadysubscribed)\n        \n    *   [BadLocation](#badlocation)\n        \n    *   [BadVersion](#badversion)\n        \n    *   [CannotReanchor](#cannotreanchor)\n        \n    *   [DestinationNotInvertible](#destinationnotinvertible)\n        \n    *   [Empty](#empty)\n        \n    *   [FeesNotMet](#feesnotmet)\n        \n    *   [Filtered](#filtered)\n        \n    *   [InUse](#inuse-1)\n        \n    *   [InvalidAsset](#invalidasset)\n        \n    *   [InvalidOrigin](#invalidorigin-1)\n        \n    *   [LockNotFound](#locknotfound)\n        \n    *   [LowBalance](#lowbalance)\n        \n    *   [NoSubscription](#nosubscription)\n        \n    *   [SendFailure](#sendfailure)\n        \n    *   [TooManyAssets](#toomanyassets)\n        \n    *   [TooManyLocks](#toomanylocks)\n        \n    *   [Unreachable](#unreachable)\n        \n    *   [UnweighableMessage](#unweighablemessage)"}, {"title": null, "description": null, "source_url": "https://polkadot.js.org/docs/polkadot/events", "markdown": "[Skip to main content](#__docusaurus_skipToContent_fallback)\n\n[![polkadot{.js}](https://polkadot.js.org/docs/img/logo.svg)\\\n\\\n**polkadot{.js}**](/docs/)\n\n[Apps UI (Wallet)](https://polkadot.js.org/apps/)\n[GitHub](https://github.com/polkadot-js/docs)\n\nSearch...\n\n*   [Introduction](#)\n    \n*   [API](#)\n    \n*   [Metadata](#)\n    \n    *   [Substrate](#)\n        \n    *   [Polkadot](#)\n        \n        *   [Overview](/docs/polkadot)\n            \n        *   [Runtime](/docs/polkadot/runtime)\n            \n        *   [JSON-RPC](/docs/polkadot/rpc)\n            \n        *   [Constants](/docs/polkadot/constants)\n            \n        *   [Storage](/docs/polkadot/storage)\n            \n        *   [Extrinsics](/docs/polkadot/extrinsics)\n            \n        *   [Events](/docs/polkadot/events)\n            \n        *   [Errors](/docs/polkadot/errors)\n            \n    *   [Kusama](#)\n        \n*   [Keyring](#)\n    \n*   [Crypto Utilities](#)\n    \n*   [Contracts (API)](#)\n    \n*   [Identicon (UI)](#)\n    \n*   [Keyring (UI)](#)\n    \n*   [Extension](#)\n    \n*   [Run, Bundle, Test](#)\n    \n\n*   [](/docs/)\n    \n*   Metadata\n*   Polkadot\n*   Events\n\nOn this page\n\nEvents\n======\n\nEvents are emitted for certain operations on the runtime. The following sections describe the events that are part of the default Polkadot runtime.\n\n(NOTE: These were generated from a static/snapshot view of a recent default Polkadot runtime. Some items may not be available in older nodes, or in any customized implementations.)\n\n*   **[auctions](#auctions)\n    **\n    \n*   **[balances](#balances)\n    **\n    \n*   **[bounties](#bounties)\n    **\n    \n*   **[childBounties](#childbounties)\n    **\n    \n*   **[claims](#claims)\n    **\n    \n*   **[convictionVoting](#convictionvoting)\n    **\n    \n*   **[crowdloan](#crowdloan)\n    **\n    \n*   **[electionProviderMultiPhase](#electionprovidermultiphase)\n    **\n    \n*   **[fastUnstake](#fastunstake)\n    **\n    \n*   **[grandpa](#grandpa)\n    **\n    \n*   **[hrmp](#hrmp)\n    **\n    \n*   **[identity](#identity)\n    **\n    \n*   **[imOnline](#imonline)\n    **\n    \n*   **[indices](#indices)\n    **\n    \n*   **[messageQueue](#messagequeue)\n    **\n    \n*   **[multisig](#multisig)\n    **\n    \n*   **[nominationPools](#nominationpools)\n    **\n    \n*   **[offences](#offences)\n    **\n    \n*   **[paraInclusion](#parainclusion)\n    **\n    \n*   **[paras](#paras)\n    **\n    \n*   **[parasDisputes](#parasdisputes)\n    **\n    \n*   **[preimage](#preimage)\n    **\n    \n*   **[proxy](#proxy)\n    **\n    \n*   **[referenda](#referenda)\n    **\n    \n*   **[registrar](#registrar)\n    **\n    \n*   **[scheduler](#scheduler)\n    **\n    \n*   **[session](#session)\n    **\n    \n*   **[slots](#slots)\n    **\n    \n*   **[staking](#staking)\n    **\n    \n*   **[system](#system)\n    **\n    \n*   **[transactionPayment](#transactionpayment)\n    **\n    \n*   **[treasury](#treasury)\n    **\n    \n*   **[utility](#utility)\n    **\n    \n*   **[vesting](#vesting)\n    **\n    \n*   **[voterList](#voterlist)\n    **\n    \n*   **[whitelist](#whitelist)\n    **\n    \n*   **[xcmPallet](#xcmpallet)\n    **\n    \n\n* * *\n\nauctions[\u200b](#auctions \"Direct link to auctions\")\n\n-------------------------------------------------\n\n### AuctionClosed(`u32`)[\u200b](#auctionclosedu32 \"Direct link to auctionclosedu32\")\n\n*   **interface**: `api.events.auctions.AuctionClosed.is`\n*   **summary**: An auction ended. All funds become unreserved.\n\n### AuctionStarted(`u32`, `u32`, `u32`)[\u200b](#auctionstartedu32-u32-u32 \"Direct link to auctionstartedu32-u32-u32\")\n\n*   **interface**: `api.events.auctions.AuctionStarted.is`\n*   **summary**: An auction started. Provides its index and the block number where it will begin to close and the first lease period of the quadruplet that is auctioned.\n\n### BidAccepted(`AccountId32`, `u32`, `u128`, `u32`, `u32`)[\u200b](#bidacceptedaccountid32-u32-u128-u32-u32 \"Direct link to bidacceptedaccountid32-u32-u128-u32-u32\")\n\n*   **interface**: `api.events.auctions.BidAccepted.is`\n*   **summary**: A new bid has been accepted as the current winner.\n\n### ReserveConfiscated(`u32`, `AccountId32`, `u128`)[\u200b](#reserveconfiscatedu32-accountid32-u128 \"Direct link to reserveconfiscatedu32-accountid32-u128\")\n\n*   **interface**: `api.events.auctions.ReserveConfiscated.is`\n*   **summary**: Someone attempted to lease the same slot twice for a parachain. The amount is held in reserve but no parachain slot has been leased.\n\n### Reserved(`AccountId32`, `u128`, `u128`)[\u200b](#reservedaccountid32-u128-u128 \"Direct link to reservedaccountid32-u128-u128\")\n\n*   **interface**: `api.events.auctions.Reserved.is`\n*   **summary**: Funds were reserved for a winning bid. First balance is the extra amount reserved. Second is the total.\n\n### Unreserved(`AccountId32`, `u128`)[\u200b](#unreservedaccountid32-u128 \"Direct link to unreservedaccountid32-u128\")\n\n*   **interface**: `api.events.auctions.Unreserved.is`\n*   **summary**: Funds were unreserved since bidder is no longer active. `[bidder, amount]`\n\n### WinningOffset(`u32`, `u32`)[\u200b](#winningoffsetu32-u32 \"Direct link to winningoffsetu32-u32\")\n\n*   **interface**: `api.events.auctions.WinningOffset.is`\n*   **summary**: The winning offset was chosen for an auction. This will map into the `Winning` storage map.\n\n* * *\n\nbalances[\u200b](#balances \"Direct link to balances\")\n\n-------------------------------------------------\n\n### BalanceSet(`AccountId32`, `u128`)[\u200b](#balancesetaccountid32-u128 \"Direct link to balancesetaccountid32-u128\")\n\n*   **interface**: `api.events.balances.BalanceSet.is`\n*   **summary**: A balance was set by root.\n\n### Burned(`AccountId32`, `u128`)[\u200b](#burnedaccountid32-u128 \"Direct link to burnedaccountid32-u128\")\n\n*   **interface**: `api.events.balances.Burned.is`\n*   **summary**: Some amount was burned from an account.\n\n### Deposit(`AccountId32`, `u128`)[\u200b](#depositaccountid32-u128 \"Direct link to depositaccountid32-u128\")\n\n*   **interface**: `api.events.balances.Deposit.is`\n*   **summary**: Some amount was deposited (e.g. for transaction fees).\n\n### DustLost(`AccountId32`, `u128`)[\u200b](#dustlostaccountid32-u128 \"Direct link to dustlostaccountid32-u128\")\n\n*   **interface**: `api.events.balances.DustLost.is`\n*   **summary**: An account was removed whose balance was non-zero but below ExistentialDeposit, resulting in an outright loss.\n\n### Endowed(`AccountId32`, `u128`)[\u200b](#endowedaccountid32-u128 \"Direct link to endowedaccountid32-u128\")\n\n*   **interface**: `api.events.balances.Endowed.is`\n*   **summary**: An account was created with some free balance.\n\n### Frozen(`AccountId32`, `u128`)[\u200b](#frozenaccountid32-u128 \"Direct link to frozenaccountid32-u128\")\n\n*   **interface**: `api.events.balances.Frozen.is`\n*   **summary**: Some balance was frozen.\n\n### Issued(`u128`)[\u200b](#issuedu128 \"Direct link to issuedu128\")\n\n*   **interface**: `api.events.balances.Issued.is`\n*   **summary**: Total issuance was increased by `amount`, creating a credit to be balanced.\n\n### Locked(`AccountId32`, `u128`)[\u200b](#lockedaccountid32-u128 \"Direct link to lockedaccountid32-u128\")\n\n*   **interface**: `api.events.balances.Locked.is`\n*   **summary**: Some balance was locked.\n\n### Minted(`AccountId32`, `u128`)[\u200b](#mintedaccountid32-u128 \"Direct link to mintedaccountid32-u128\")\n\n*   **interface**: `api.events.balances.Minted.is`\n*   **summary**: Some amount was minted into an account.\n\n### Rescinded(`u128`)[\u200b](#rescindedu128 \"Direct link to rescindedu128\")\n\n*   **interface**: `api.events.balances.Rescinded.is`\n*   **summary**: Total issuance was decreased by `amount`, creating a debt to be balanced.\n\n### Reserved(`AccountId32`, `u128`)[\u200b](#reservedaccountid32-u128 \"Direct link to reservedaccountid32-u128\")\n\n*   **interface**: `api.events.balances.Reserved.is`\n*   **summary**: Some balance was reserved (moved from free to reserved).\n\n### ReserveRepatriated(`AccountId32`, `AccountId32`, `u128`, `FrameSupportTokensMiscBalanceStatus`)[\u200b](#reserverepatriatedaccountid32-accountid32-u128-framesupporttokensmiscbalancestatus \"Direct link to reserverepatriatedaccountid32-accountid32-u128-framesupporttokensmiscbalancestatus\")\n\n*   **interface**: `api.events.balances.ReserveRepatriated.is`\n*   **summary**: Some balance was moved from the reserve of the first account to the second account. Final argument indicates the destination balance type.\n\n### Restored(`AccountId32`, `u128`)[\u200b](#restoredaccountid32-u128 \"Direct link to restoredaccountid32-u128\")\n\n*   **interface**: `api.events.balances.Restored.is`\n*   **summary**: Some amount was restored into an account.\n\n### Slashed(`AccountId32`, `u128`)[\u200b](#slashedaccountid32-u128 \"Direct link to slashedaccountid32-u128\")\n\n*   **interface**: `api.events.balances.Slashed.is`\n*   **summary**: Some amount was removed from the account (e.g. for misbehavior).\n\n### Suspended(`AccountId32`, `u128`)[\u200b](#suspendedaccountid32-u128 \"Direct link to suspendedaccountid32-u128\")\n\n*   **interface**: `api.events.balances.Suspended.is`\n*   **summary**: Some amount was suspended from an account (it can be restored later).\n\n### Thawed(`AccountId32`, `u128`)[\u200b](#thawedaccountid32-u128 \"Direct link to thawedaccountid32-u128\")\n\n*   **interface**: `api.events.balances.Thawed.is`\n*   **summary**: Some balance was thawed.\n\n### Transfer(`AccountId32`, `AccountId32`, `u128`)[\u200b](#transferaccountid32-accountid32-u128 \"Direct link to transferaccountid32-accountid32-u128\")\n\n*   **interface**: `api.events.balances.Transfer.is`\n*   **summary**: Transfer succeeded.\n\n### Unlocked(`AccountId32`, `u128`)[\u200b](#unlockedaccountid32-u128 \"Direct link to unlockedaccountid32-u128\")\n\n*   **interface**: `api.events.balances.Unlocked.is`\n*   **summary**: Some balance was unlocked.\n\n### Unreserved(`AccountId32`, `u128`)[\u200b](#unreservedaccountid32-u128-1 \"Direct link to unreservedaccountid32-u128-1\")\n\n*   **interface**: `api.events.balances.Unreserved.is`\n*   **summary**: Some balance was unreserved (moved from reserved to free).\n\n### Upgraded(`AccountId32`)[\u200b](#upgradedaccountid32 \"Direct link to upgradedaccountid32\")\n\n*   **interface**: `api.events.balances.Upgraded.is`\n*   **summary**: An account was upgraded.\n\n### Withdraw(`AccountId32`, `u128`)[\u200b](#withdrawaccountid32-u128 \"Direct link to withdrawaccountid32-u128\")\n\n*   **interface**: `api.events.balances.Withdraw.is`\n*   **summary**: Some amount was withdrawn from the account (e.g. for transaction fees).\n\n* * *\n\nbounties[\u200b](#bounties \"Direct link to bounties\")\n\n-------------------------------------------------\n\n### BountyAwarded(`u32`, `AccountId32`)[\u200b](#bountyawardedu32-accountid32 \"Direct link to bountyawardedu32-accountid32\")\n\n*   **interface**: `api.events.bounties.BountyAwarded.is`\n*   **summary**: A bounty is awarded to a beneficiary.\n\n### BountyBecameActive(`u32`)[\u200b](#bountybecameactiveu32 \"Direct link to bountybecameactiveu32\")\n\n*   **interface**: `api.events.bounties.BountyBecameActive.is`\n*   **summary**: A bounty proposal is funded and became active.\n\n### BountyCanceled(`u32`)[\u200b](#bountycanceledu32 \"Direct link to bountycanceledu32\")\n\n*   **interface**: `api.events.bounties.BountyCanceled.is`\n*   **summary**: A bounty is cancelled.\n\n### BountyClaimed(`u32`, `u128`, `AccountId32`)[\u200b](#bountyclaimedu32-u128-accountid32 \"Direct link to bountyclaimedu32-u128-accountid32\")\n\n*   **interface**: `api.events.bounties.BountyClaimed.is`\n*   **summary**: A bounty is claimed by beneficiary.\n\n### BountyExtended(`u32`)[\u200b](#bountyextendedu32 \"Direct link to bountyextendedu32\")\n\n*   **interface**: `api.events.bounties.BountyExtended.is`\n*   **summary**: A bounty expiry is extended.\n\n### BountyProposed(`u32`)[\u200b](#bountyproposedu32 \"Direct link to bountyproposedu32\")\n\n*   **interface**: `api.events.bounties.BountyProposed.is`\n*   **summary**: New bounty proposal.\n\n### BountyRejected(`u32`, `u128`)[\u200b](#bountyrejectedu32-u128 \"Direct link to bountyrejectedu32-u128\")\n\n*   **interface**: `api.events.bounties.BountyRejected.is`\n*   **summary**: A bounty proposal was rejected; funds were slashed.\n\n* * *\n\nchildBounties[\u200b](#childbounties \"Direct link to childBounties\")\n\n----------------------------------------------------------------\n\n### Added(`u32`, `u32`)[\u200b](#addedu32-u32 \"Direct link to addedu32-u32\")\n\n*   **interface**: `api.events.childBounties.Added.is`\n*   **summary**: A child-bounty is added.\n\n### Awarded(`u32`, `u32`, `AccountId32`)[\u200b](#awardedu32-u32-accountid32 \"Direct link to awardedu32-u32-accountid32\")\n\n*   **interface**: `api.events.childBounties.Awarded.is`\n*   **summary**: A child-bounty is awarded to a beneficiary.\n\n### Canceled(`u32`, `u32`)[\u200b](#canceledu32-u32 \"Direct link to canceledu32-u32\")\n\n*   **interface**: `api.events.childBounties.Canceled.is`\n*   **summary**: A child-bounty is cancelled.\n\n### Claimed(`u32`, `u32`, `u128`, `AccountId32`)[\u200b](#claimedu32-u32-u128-accountid32 \"Direct link to claimedu32-u32-u128-accountid32\")\n\n*   **interface**: `api.events.childBounties.Claimed.is`\n*   **summary**: A child-bounty is claimed by beneficiary.\n\n* * *\n\nclaims[\u200b](#claims \"Direct link to claims\")\n\n-------------------------------------------\n\n### Claimed(`AccountId32`, `EthereumAddress`, `u128`)[\u200b](#claimedaccountid32-ethereumaddress-u128 \"Direct link to claimedaccountid32-ethereumaddress-u128\")\n\n*   **interface**: `api.events.claims.Claimed.is`\n*   **summary**: Someone claimed some DOTs.\n\n* * *\n\nconvictionVoting[\u200b](#convictionvoting \"Direct link to convictionVoting\")\n\n-------------------------------------------------------------------------\n\n### Delegated(`AccountId32`, `AccountId32`)[\u200b](#delegatedaccountid32-accountid32 \"Direct link to delegatedaccountid32-accountid32\")\n\n*   **interface**: `api.events.convictionVoting.Delegated.is`\n*   **summary**: An account has delegated their vote to another account. \\[who, target\\]\n\n### Undelegated(`AccountId32`)[\u200b](#undelegatedaccountid32 \"Direct link to undelegatedaccountid32\")\n\n*   **interface**: `api.events.convictionVoting.Undelegated.is`\n*   **summary**: An \\[account\\] has cancelled a previous delegation operation.\n\n* * *\n\ncrowdloan[\u200b](#crowdloan \"Direct link to crowdloan\")\n\n----------------------------------------------------\n\n### AddedToNewRaise(`u32`)[\u200b](#addedtonewraiseu32 \"Direct link to addedtonewraiseu32\")\n\n*   **interface**: `api.events.crowdloan.AddedToNewRaise.is`\n*   **summary**: A parachain has been moved to `NewRaise`\n\n### AllRefunded(`u32`)[\u200b](#allrefundedu32 \"Direct link to allrefundedu32\")\n\n*   **interface**: `api.events.crowdloan.AllRefunded.is`\n*   **summary**: All loans in a fund have been refunded.\n\n### Contributed(`AccountId32`, `u32`, `u128`)[\u200b](#contributedaccountid32-u32-u128 \"Direct link to contributedaccountid32-u32-u128\")\n\n*   **interface**: `api.events.crowdloan.Contributed.is`\n*   **summary**: Contributed to a crowd sale.\n\n### Created(`u32`)[\u200b](#createdu32 \"Direct link to createdu32\")\n\n*   **interface**: `api.events.crowdloan.Created.is`\n*   **summary**: Create a new crowdloaning campaign.\n\n### Dissolved(`u32`)[\u200b](#dissolvedu32 \"Direct link to dissolvedu32\")\n\n*   **interface**: `api.events.crowdloan.Dissolved.is`\n*   **summary**: Fund is dissolved.\n\n### Edited(`u32`)[\u200b](#editedu32 \"Direct link to editedu32\")\n\n*   **interface**: `api.events.crowdloan.Edited.is`\n*   **summary**: The configuration to a crowdloan has been edited.\n\n### HandleBidResult(`u32`, `Result<Null, SpRuntimeDispatchError>`)[\u200b](#handlebidresultu32-resultnull-spruntimedispatcherror \"Direct link to handlebidresultu32-resultnull-spruntimedispatcherror\")\n\n*   **interface**: `api.events.crowdloan.HandleBidResult.is`\n*   **summary**: The result of trying to submit a new bid to the Slots pallet.\n\n### MemoUpdated(`AccountId32`, `u32`, `Bytes`)[\u200b](#memoupdatedaccountid32-u32-bytes \"Direct link to memoupdatedaccountid32-u32-bytes\")\n\n*   **interface**: `api.events.crowdloan.MemoUpdated.is`\n*   **summary**: A memo has been updated.\n\n### PartiallyRefunded(`u32`)[\u200b](#partiallyrefundedu32 \"Direct link to partiallyrefundedu32\")\n\n*   **interface**: `api.events.crowdloan.PartiallyRefunded.is`\n*   **summary**: The loans in a fund have been partially dissolved, i.e. there are some left over child keys that still need to be killed.\n\n### Withdrew(`AccountId32`, `u32`, `u128`)[\u200b](#withdrewaccountid32-u32-u128 \"Direct link to withdrewaccountid32-u32-u128\")\n\n*   **interface**: `api.events.crowdloan.Withdrew.is`\n*   **summary**: Withdrew full balance of a contributor.\n\n* * *\n\nelectionProviderMultiPhase[\u200b](#electionprovidermultiphase \"Direct link to electionProviderMultiPhase\")\n\n-------------------------------------------------------------------------------------------------------\n\n### ElectionFailed()[\u200b](#electionfailed \"Direct link to ElectionFailed()\")\n\n*   **interface**: `api.events.electionProviderMultiPhase.ElectionFailed.is`\n    \n*   **summary**: An election failed.\n    \n    Not much can be said about which computes failed in the process.\n    \n\n### ElectionFinalized(`PalletElectionProviderMultiPhaseElectionCompute`, `SpNposElectionsElectionScore`)[\u200b](#electionfinalizedpalletelectionprovidermultiphaseelectioncompute-spnposelectionselectionscore \"Direct link to electionfinalizedpalletelectionprovidermultiphaseelectioncompute-spnposelectionselectionscore\")\n\n*   **interface**: `api.events.electionProviderMultiPhase.ElectionFinalized.is`\n*   **summary**: The election has been finalized, with the given computation and score.\n\n### PhaseTransitioned(`PalletElectionProviderMultiPhasePhase`, `PalletElectionProviderMultiPhasePhase`, `u32`)[\u200b](#phasetransitionedpalletelectionprovidermultiphasephase-palletelectionprovidermultiphasephase-u32 \"Direct link to phasetransitionedpalletelectionprovidermultiphasephase-palletelectionprovidermultiphasephase-u32\")\n\n*   **interface**: `api.events.electionProviderMultiPhase.PhaseTransitioned.is`\n*   **summary**: There was a phase transition in a given round.\n\n### Rewarded(`AccountId32`, `u128`)[\u200b](#rewardedaccountid32-u128 \"Direct link to rewardedaccountid32-u128\")\n\n*   **interface**: `api.events.electionProviderMultiPhase.Rewarded.is`\n*   **summary**: An account has been rewarded for their signed submission being finalized.\n\n### Slashed(`AccountId32`, `u128`)[\u200b](#slashedaccountid32-u128-1 \"Direct link to slashedaccountid32-u128-1\")\n\n*   **interface**: `api.events.electionProviderMultiPhase.Slashed.is`\n*   **summary**: An account has been slashed for submitting an invalid signed submission.\n\n### SolutionStored(`PalletElectionProviderMultiPhaseElectionCompute`, `Option<AccountId32>`, `bool`)[\u200b](#solutionstoredpalletelectionprovidermultiphaseelectioncompute-optionaccountid32-bool \"Direct link to solutionstoredpalletelectionprovidermultiphaseelectioncompute-optionaccountid32-bool\")\n\n*   **interface**: `api.events.electionProviderMultiPhase.SolutionStored.is`\n    \n*   **summary**: A solution was stored with the given compute.\n    \n    The `origin` indicates the origin of the solution. If `origin` is `Some(AccountId)`, the stored solution was submited in the signed phase by a miner with the `AccountId`. Otherwise, the solution was stored either during the unsigned phase or by `T::ForceOrigin`. The `bool` is `true` when a previous solution was ejected to make room for this one.\n    \n\n* * *\n\nfastUnstake[\u200b](#fastunstake \"Direct link to fastUnstake\")\n\n----------------------------------------------------------\n\n### BatchChecked(`Vec<u32>`)[\u200b](#batchcheckedvecu32 \"Direct link to batchcheckedvecu32\")\n\n*   **interface**: `api.events.fastUnstake.BatchChecked.is`\n*   **summary**: A batch was partially checked for the given eras, but the process did not finish.\n\n### BatchFinished(`u32`)[\u200b](#batchfinishedu32 \"Direct link to batchfinishedu32\")\n\n*   **interface**: `api.events.fastUnstake.BatchFinished.is`\n    \n*   **summary**: A batch of a given size was terminated.\n    \n    This is always follows by a number of `Unstaked` or `Slashed` events, marking the end of the batch. A new batch will be created upon next block.\n    \n\n### InternalError()[\u200b](#internalerror \"Direct link to InternalError()\")\n\n*   **interface**: `api.events.fastUnstake.InternalError.is`\n*   **summary**: An internal error happened. Operations will be paused now.\n\n### Slashed(`AccountId32`, `u128`)[\u200b](#slashedaccountid32-u128-2 \"Direct link to slashedaccountid32-u128-2\")\n\n*   **interface**: `api.events.fastUnstake.Slashed.is`\n*   **summary**: A staker was slashed for requesting fast-unstake whilst being exposed.\n\n### Unstaked(`AccountId32`, `Result<Null, SpRuntimeDispatchError>`)[\u200b](#unstakedaccountid32-resultnull-spruntimedispatcherror \"Direct link to unstakedaccountid32-resultnull-spruntimedispatcherror\")\n\n*   **interface**: `api.events.fastUnstake.Unstaked.is`\n*   **summary**: A staker was unstaked.\n\n* * *\n\ngrandpa[\u200b](#grandpa \"Direct link to grandpa\")\n\n----------------------------------------------\n\n### NewAuthorities(`Vec<(SpConsensusGrandpaAppPublic,u64)>`)[\u200b](#newauthoritiesvecspconsensusgrandpaapppublicu64 \"Direct link to newauthoritiesvecspconsensusgrandpaapppublicu64\")\n\n*   **interface**: `api.events.grandpa.NewAuthorities.is`\n*   **summary**: New authority set has been applied.\n\n### Paused()[\u200b](#paused \"Direct link to Paused()\")\n\n*   **interface**: `api.events.grandpa.Paused.is`\n*   **summary**: Current authority set has been paused.\n\n### Resumed()[\u200b](#resumed \"Direct link to Resumed()\")\n\n*   **interface**: `api.events.grandpa.Resumed.is`\n*   **summary**: Current authority set has been resumed.\n\n* * *\n\nhrmp[\u200b](#hrmp \"Direct link to hrmp\")\n\n-------------------------------------\n\n### ChannelClosed(`u32`, `PolkadotParachainPrimitivesHrmpChannelId`)[\u200b](#channelclosedu32-polkadotparachainprimitiveshrmpchannelid \"Direct link to channelclosedu32-polkadotparachainprimitiveshrmpchannelid\")\n\n*   **interface**: `api.events.hrmp.ChannelClosed.is`\n*   **summary**: HRMP channel closed. `[by_parachain, channel_id]`\n\n### HrmpChannelForceOpened(`u32`, `u32`, `u32`, `u32`)[\u200b](#hrmpchannelforceopenedu32-u32-u32-u32 \"Direct link to hrmpchannelforceopenedu32-u32-u32-u32\")\n\n*   **interface**: `api.events.hrmp.HrmpChannelForceOpened.is`\n*   **summary**: An HRMP channel was opened via Root origin. `[sender, recipient, proposed_max_capacity, proposed_max_message_size]`\n\n### OpenChannelAccepted(`u32`, `u32`)[\u200b](#openchannelacceptedu32-u32 \"Direct link to openchannelacceptedu32-u32\")\n\n*   **interface**: `api.events.hrmp.OpenChannelAccepted.is`\n*   **summary**: Open HRMP channel accepted. `[sender, recipient]`\n\n### OpenChannelCanceled(`u32`, `PolkadotParachainPrimitivesHrmpChannelId`)[\u200b](#openchannelcanceledu32-polkadotparachainprimitiveshrmpchannelid \"Direct link to openchannelcanceledu32-polkadotparachainprimitiveshrmpchannelid\")\n\n*   **interface**: `api.events.hrmp.OpenChannelCanceled.is`\n*   **summary**: An HRMP channel request sent by the receiver was canceled by either party. `[by_parachain, channel_id]`\n\n### OpenChannelRequested(`u32`, `u32`, `u32`, `u32`)[\u200b](#openchannelrequestedu32-u32-u32-u32 \"Direct link to openchannelrequestedu32-u32-u32-u32\")\n\n*   **interface**: `api.events.hrmp.OpenChannelRequested.is`\n*   **summary**: Open HRMP channel requested. `[sender, recipient, proposed_max_capacity, proposed_max_message_size]`\n\n* * *\n\nidentity[\u200b](#identity \"Direct link to identity\")\n\n-------------------------------------------------\n\n### IdentityCleared(`AccountId32`, `u128`)[\u200b](#identityclearedaccountid32-u128 \"Direct link to identityclearedaccountid32-u128\")\n\n*   **interface**: `api.events.identity.IdentityCleared.is`\n*   **summary**: A name was cleared, and the given balance returned.\n\n### IdentityKilled(`AccountId32`, `u128`)[\u200b](#identitykilledaccountid32-u128 \"Direct link to identitykilledaccountid32-u128\")\n\n*   **interface**: `api.events.identity.IdentityKilled.is`\n*   **summary**: A name was removed and the given balance slashed.\n\n### IdentitySet(`AccountId32`)[\u200b](#identitysetaccountid32 \"Direct link to identitysetaccountid32\")\n\n*   **interface**: `api.events.identity.IdentitySet.is`\n*   **summary**: A name was set or reset (which will remove all judgements).\n\n### JudgementGiven(`AccountId32`, `u32`)[\u200b](#judgementgivenaccountid32-u32 \"Direct link to judgementgivenaccountid32-u32\")\n\n*   **interface**: `api.events.identity.JudgementGiven.is`\n*   **summary**: A judgement was given by a registrar.\n\n### JudgementRequested(`AccountId32`, `u32`)[\u200b](#judgementrequestedaccountid32-u32 \"Direct link to judgementrequestedaccountid32-u32\")\n\n*   **interface**: `api.events.identity.JudgementRequested.is`\n*   **summary**: A judgement was asked from a registrar.\n\n### JudgementUnrequested(`AccountId32`, `u32`)[\u200b](#judgementunrequestedaccountid32-u32 \"Direct link to judgementunrequestedaccountid32-u32\")\n\n*   **interface**: `api.events.identity.JudgementUnrequested.is`\n*   **summary**: A judgement request was retracted.\n\n### RegistrarAdded(`u32`)[\u200b](#registraraddedu32 \"Direct link to registraraddedu32\")\n\n*   **interface**: `api.events.identity.RegistrarAdded.is`\n*   **summary**: A registrar was added.\n\n### SubIdentityAdded(`AccountId32`, `AccountId32`, `u128`)[\u200b](#subidentityaddedaccountid32-accountid32-u128 \"Direct link to subidentityaddedaccountid32-accountid32-u128\")\n\n*   **interface**: `api.events.identity.SubIdentityAdded.is`\n*   **summary**: A sub-identity was added to an identity and the deposit paid.\n\n### SubIdentityRemoved(`AccountId32`, `AccountId32`, `u128`)[\u200b](#subidentityremovedaccountid32-accountid32-u128 \"Direct link to subidentityremovedaccountid32-accountid32-u128\")\n\n*   **interface**: `api.events.identity.SubIdentityRemoved.is`\n*   **summary**: A sub-identity was removed from an identity and the deposit freed.\n\n### SubIdentityRevoked(`AccountId32`, `AccountId32`, `u128`)[\u200b](#subidentityrevokedaccountid32-accountid32-u128 \"Direct link to subidentityrevokedaccountid32-accountid32-u128\")\n\n*   **interface**: `api.events.identity.SubIdentityRevoked.is`\n*   **summary**: A sub-identity was cleared, and the given deposit repatriated from the main identity account to the sub-identity account.\n\n* * *\n\nimOnline[\u200b](#imonline \"Direct link to imOnline\")\n\n-------------------------------------------------\n\n### AllGood()[\u200b](#allgood \"Direct link to AllGood()\")\n\n*   **interface**: `api.events.imOnline.AllGood.is`\n*   **summary**: At the end of the session, no offence was committed.\n\n### HeartbeatReceived(`PalletImOnlineSr25519AppSr25519Public`)[\u200b](#heartbeatreceivedpalletimonlinesr25519appsr25519public \"Direct link to heartbeatreceivedpalletimonlinesr25519appsr25519public\")\n\n*   **interface**: `api.events.imOnline.HeartbeatReceived.is`\n*   **summary**: A new heartbeat was received from `AuthorityId`.\n\n### SomeOffline(`Vec<(AccountId32,PalletStakingExposure)>`)[\u200b](#someofflinevecaccountid32palletstakingexposure \"Direct link to someofflinevecaccountid32palletstakingexposure\")\n\n*   **interface**: `api.events.imOnline.SomeOffline.is`\n*   **summary**: At the end of the session, at least one validator was found to be offline.\n\n* * *\n\nindices[\u200b](#indices \"Direct link to indices\")\n\n----------------------------------------------\n\n### IndexAssigned(`AccountId32`, `u32`)[\u200b](#indexassignedaccountid32-u32 \"Direct link to indexassignedaccountid32-u32\")\n\n*   **interface**: `api.events.indices.IndexAssigned.is`\n*   **summary**: A account index was assigned.\n\n### IndexFreed(`u32`)[\u200b](#indexfreedu32 \"Direct link to indexfreedu32\")\n\n*   **interface**: `api.events.indices.IndexFreed.is`\n*   **summary**: A account index has been freed up (unassigned).\n\n### IndexFrozen(`u32`, `AccountId32`)[\u200b](#indexfrozenu32-accountid32 \"Direct link to indexfrozenu32-accountid32\")\n\n*   **interface**: `api.events.indices.IndexFrozen.is`\n*   **summary**: A account index has been frozen to its current account ID.\n\n* * *\n\nmessageQueue[\u200b](#messagequeue \"Direct link to messageQueue\")\n\n-------------------------------------------------------------\n\n### OverweightEnqueued(`[u8;32]`, `PolkadotRuntimeParachainsInclusionAggregateMessageOrigin`, `u32`, `u32`)[\u200b](#overweightenqueuedu832-polkadotruntimeparachainsinclusionaggregatemessageorigin-u32-u32 \"Direct link to overweightenqueuedu832-polkadotruntimeparachainsinclusionaggregatemessageorigin-u32-u32\")\n\n*   **interface**: `api.events.messageQueue.OverweightEnqueued.is`\n*   **summary**: Message placed in overweight queue.\n\n### PageReaped(`PolkadotRuntimeParachainsInclusionAggregateMessageOrigin`, `u32`)[\u200b](#pagereapedpolkadotruntimeparachainsinclusionaggregatemessageorigin-u32 \"Direct link to pagereapedpolkadotruntimeparachainsinclusionaggregatemessageorigin-u32\")\n\n*   **interface**: `api.events.messageQueue.PageReaped.is`\n*   **summary**: This page was reaped.\n\n### Processed(`[u8;32]`, `PolkadotRuntimeParachainsInclusionAggregateMessageOrigin`, `SpWeightsWeightV2Weight`, `bool`)[\u200b](#processedu832-polkadotruntimeparachainsinclusionaggregatemessageorigin-spweightsweightv2weight-bool \"Direct link to processedu832-polkadotruntimeparachainsinclusionaggregatemessageorigin-spweightsweightv2weight-bool\")\n\n*   **interface**: `api.events.messageQueue.Processed.is`\n*   **summary**: Message is processed.\n\n### ProcessingFailed(`[u8;32]`, `PolkadotRuntimeParachainsInclusionAggregateMessageOrigin`, `FrameSupportMessagesProcessMessageError`)[\u200b](#processingfailedu832-polkadotruntimeparachainsinclusionaggregatemessageorigin-framesupportmessagesprocessmessageerror \"Direct link to processingfailedu832-polkadotruntimeparachainsinclusionaggregatemessageorigin-framesupportmessagesprocessmessageerror\")\n\n*   **interface**: `api.events.messageQueue.ProcessingFailed.is`\n*   **summary**: Message discarded due to an error in the `MessageProcessor` (usually a format error).\n\n* * *\n\nmultisig[\u200b](#multisig \"Direct link to multisig\")\n\n-------------------------------------------------\n\n### MultisigApproval(`AccountId32`, `PalletMultisigTimepoint`, `AccountId32`, `[u8;32]`)[\u200b](#multisigapprovalaccountid32-palletmultisigtimepoint-accountid32-u832 \"Direct link to multisigapprovalaccountid32-palletmultisigtimepoint-accountid32-u832\")\n\n*   **interface**: `api.events.multisig.MultisigApproval.is`\n*   **summary**: A multisig operation has been approved by someone.\n\n### MultisigCancelled(`AccountId32`, `PalletMultisigTimepoint`, `AccountId32`, `[u8;32]`)[\u200b](#multisigcancelledaccountid32-palletmultisigtimepoint-accountid32-u832 \"Direct link to multisigcancelledaccountid32-palletmultisigtimepoint-accountid32-u832\")\n\n*   **interface**: `api.events.multisig.MultisigCancelled.is`\n*   **summary**: A multisig operation has been cancelled.\n\n### MultisigExecuted(`AccountId32`, `PalletMultisigTimepoint`, `AccountId32`, `[u8;32]`, `Result<Null, SpRuntimeDispatchError>`)[\u200b](#multisigexecutedaccountid32-palletmultisigtimepoint-accountid32-u832-resultnull-spruntimedispatcherror \"Direct link to multisigexecutedaccountid32-palletmultisigtimepoint-accountid32-u832-resultnull-spruntimedispatcherror\")\n\n*   **interface**: `api.events.multisig.MultisigExecuted.is`\n*   **summary**: A multisig operation has been executed.\n\n### NewMultisig(`AccountId32`, `AccountId32`, `[u8;32]`)[\u200b](#newmultisigaccountid32-accountid32-u832 \"Direct link to newmultisigaccountid32-accountid32-u832\")\n\n*   **interface**: `api.events.multisig.NewMultisig.is`\n*   **summary**: A new multisig operation has begun.\n\n* * *\n\nnominationPools[\u200b](#nominationpools \"Direct link to nominationPools\")\n\n----------------------------------------------------------------------\n\n### Bonded(`AccountId32`, `u32`, `u128`, `bool`)[\u200b](#bondedaccountid32-u32-u128-bool \"Direct link to bondedaccountid32-u32-u128-bool\")\n\n*   **interface**: `api.events.nominationPools.Bonded.is`\n*   **summary**: A member has became bonded in a pool.\n\n### Created(`AccountId32`, `u32`)[\u200b](#createdaccountid32-u32 \"Direct link to createdaccountid32-u32\")\n\n*   **interface**: `api.events.nominationPools.Created.is`\n*   **summary**: A pool has been created.\n\n### Destroyed(`u32`)[\u200b](#destroyedu32 \"Direct link to destroyedu32\")\n\n*   **interface**: `api.events.nominationPools.Destroyed.is`\n*   **summary**: A pool has been destroyed.\n\n### MemberRemoved(`u32`, `AccountId32`)[\u200b](#memberremovedu32-accountid32 \"Direct link to memberremovedu32-accountid32\")\n\n*   **interface**: `api.events.nominationPools.MemberRemoved.is`\n    \n*   **summary**: A member has been removed from a pool.\n    \n    The removal can be voluntary (withdrawn all unbonded funds) or involuntary (kicked).\n    \n\n### PaidOut(`AccountId32`, `u32`, `u128`)[\u200b](#paidoutaccountid32-u32-u128 \"Direct link to paidoutaccountid32-u32-u128\")\n\n*   **interface**: `api.events.nominationPools.PaidOut.is`\n*   **summary**: A payout has been made to a member.\n\n### PoolCommissionChangeRateUpdated(`u32`, `PalletNominationPoolsCommissionChangeRate`)[\u200b](#poolcommissionchangerateupdatedu32-palletnominationpoolscommissionchangerate \"Direct link to poolcommissionchangerateupdatedu32-palletnominationpoolscommissionchangerate\")\n\n*   **interface**: `api.events.nominationPools.PoolCommissionChangeRateUpdated.is`\n*   **summary**: A pool's commission `change_rate` has been changed.\n\n### PoolCommissionClaimed(`u32`, `u128`)[\u200b](#poolcommissionclaimedu32-u128 \"Direct link to poolcommissionclaimedu32-u128\")\n\n*   **interface**: `api.events.nominationPools.PoolCommissionClaimed.is`\n*   **summary**: Pool commission has been claimed.\n\n### PoolCommissionUpdated(`u32`, `Option<(Perbill,AccountId32)>`)[\u200b](#poolcommissionupdatedu32-optionperbillaccountid32 \"Direct link to poolcommissionupdatedu32-optionperbillaccountid32\")\n\n*   **interface**: `api.events.nominationPools.PoolCommissionUpdated.is`\n*   **summary**: A pool's commission setting has been changed.\n\n### PoolMaxCommissionUpdated(`u32`, `Perbill`)[\u200b](#poolmaxcommissionupdatedu32-perbill \"Direct link to poolmaxcommissionupdatedu32-perbill\")\n\n*   **interface**: `api.events.nominationPools.PoolMaxCommissionUpdated.is`\n*   **summary**: A pool's maximum commission setting has been changed.\n\n### PoolSlashed(`u32`, `u128`)[\u200b](#poolslashedu32-u128 \"Direct link to poolslashedu32-u128\")\n\n*   **interface**: `api.events.nominationPools.PoolSlashed.is`\n*   **summary**: The active balance of pool `pool_id` has been slashed to `balance`.\n\n### RolesUpdated(`Option<AccountId32>`, `Option<AccountId32>`, `Option<AccountId32>`)[\u200b](#rolesupdatedoptionaccountid32-optionaccountid32-optionaccountid32 \"Direct link to rolesupdatedoptionaccountid32-optionaccountid32-optionaccountid32\")\n\n*   **interface**: `api.events.nominationPools.RolesUpdated.is`\n*   **summary**: The roles of a pool have been updated to the given new roles. Note that the depositor can never change.\n\n### StateChanged(`u32`, `PalletNominationPoolsPoolState`)[\u200b](#statechangedu32-palletnominationpoolspoolstate \"Direct link to statechangedu32-palletnominationpoolspoolstate\")\n\n*   **interface**: `api.events.nominationPools.StateChanged.is`\n*   **summary**: The state of a pool has changed\n\n### Unbonded(`AccountId32`, `u32`, `u128`, `u128`, `u32`)[\u200b](#unbondedaccountid32-u32-u128-u128-u32 \"Direct link to unbondedaccountid32-u32-u128-u128-u32\")\n\n*   **interface**: `api.events.nominationPools.Unbonded.is`\n    \n*   **summary**: A member has unbonded from their pool.\n    \n    *   `balance` is the corresponding balance of the number of points that has been requested to be unbonded (the argument of the `unbond` transaction) from the bonded pool.\n        \n    *   `points` is the number of points that are issued as a result of `balance` being dissolved into the corresponding unbonding pool.\n        \n    *   `era` is the era in which the balance will be unbonded. In the absence of slashing, these values will match. In the presence of slashing, the number of points that are issued in the unbonding pool will be less than the amount requested to be unbonded.\n        \n\n### UnbondingPoolSlashed(`u32`, `u32`, `u128`)[\u200b](#unbondingpoolslashedu32-u32-u128 \"Direct link to unbondingpoolslashedu32-u32-u128\")\n\n*   **interface**: `api.events.nominationPools.UnbondingPoolSlashed.is`\n*   **summary**: The unbond pool at `era` of pool `pool_id` has been slashed to `balance`.\n\n### Withdrawn(`AccountId32`, `u32`, `u128`, `u128`)[\u200b](#withdrawnaccountid32-u32-u128-u128 \"Direct link to withdrawnaccountid32-u32-u128-u128\")\n\n*   **interface**: `api.events.nominationPools.Withdrawn.is`\n    \n*   **summary**: A member has withdrawn from their pool.\n    \n    The given number of `points` have been dissolved in return of `balance`.\n    \n    Similar to `Unbonded` event, in the absence of slashing, the ratio of point to balance will be 1.\n    \n\n* * *\n\noffences[\u200b](#offences \"Direct link to offences\")\n\n-------------------------------------------------\n\n### Offence(`[u8;16]`, `Bytes`)[\u200b](#offenceu816-bytes \"Direct link to offenceu816-bytes\")\n\n*   **interface**: `api.events.offences.Offence.is`\n*   **summary**: There is an offence reported of the given `kind` happened at the `session_index` and (kind-specific) time slot. This event is not deposited for duplicate slashes. \\[kind, timeslot\\].\n\n* * *\n\nparaInclusion[\u200b](#parainclusion \"Direct link to paraInclusion\")\n\n----------------------------------------------------------------\n\n### CandidateBacked(`PolkadotPrimitivesV5CandidateReceipt`, `Bytes`, `u32`, `u32`)[\u200b](#candidatebackedpolkadotprimitivesv5candidatereceipt-bytes-u32-u32 \"Direct link to candidatebackedpolkadotprimitivesv5candidatereceipt-bytes-u32-u32\")\n\n*   **interface**: `api.events.paraInclusion.CandidateBacked.is`\n*   **summary**: A candidate was backed. `[candidate, head_data]`\n\n### CandidateIncluded(`PolkadotPrimitivesV5CandidateReceipt`, `Bytes`, `u32`, `u32`)[\u200b](#candidateincludedpolkadotprimitivesv5candidatereceipt-bytes-u32-u32 \"Direct link to candidateincludedpolkadotprimitivesv5candidatereceipt-bytes-u32-u32\")\n\n*   **interface**: `api.events.paraInclusion.CandidateIncluded.is`\n*   **summary**: A candidate was included. `[candidate, head_data]`\n\n### CandidateTimedOut(`PolkadotPrimitivesV5CandidateReceipt`, `Bytes`, `u32`)[\u200b](#candidatetimedoutpolkadotprimitivesv5candidatereceipt-bytes-u32 \"Direct link to candidatetimedoutpolkadotprimitivesv5candidatereceipt-bytes-u32\")\n\n*   **interface**: `api.events.paraInclusion.CandidateTimedOut.is`\n*   **summary**: A candidate timed out. `[candidate, head_data]`\n\n### UpwardMessagesReceived(`u32`, `u32`)[\u200b](#upwardmessagesreceivedu32-u32 \"Direct link to upwardmessagesreceivedu32-u32\")\n\n*   **interface**: `api.events.paraInclusion.UpwardMessagesReceived.is`\n*   **summary**: Some upward messages have been received and will be processed.\n\n* * *\n\nparas[\u200b](#paras \"Direct link to paras\")\n\n----------------------------------------\n\n### ActionQueued(`u32`, `u32`)[\u200b](#actionqueuedu32-u32 \"Direct link to actionqueuedu32-u32\")\n\n*   **interface**: `api.events.paras.ActionQueued.is`\n*   **summary**: A para has been queued to execute pending actions. `para_id`\n\n### CodeUpgradeScheduled(`u32`)[\u200b](#codeupgradescheduledu32 \"Direct link to codeupgradescheduledu32\")\n\n*   **interface**: `api.events.paras.CodeUpgradeScheduled.is`\n*   **summary**: A code upgrade has been scheduled for a Para. `para_id`\n\n### CurrentCodeUpdated(`u32`)[\u200b](#currentcodeupdatedu32 \"Direct link to currentcodeupdatedu32\")\n\n*   **interface**: `api.events.paras.CurrentCodeUpdated.is`\n*   **summary**: Current code has been updated for a Para. `para_id`\n\n### CurrentHeadUpdated(`u32`)[\u200b](#currentheadupdatedu32 \"Direct link to currentheadupdatedu32\")\n\n*   **interface**: `api.events.paras.CurrentHeadUpdated.is`\n*   **summary**: Current head has been updated for a Para. `para_id`\n\n### NewHeadNoted(`u32`)[\u200b](#newheadnotedu32 \"Direct link to newheadnotedu32\")\n\n*   **interface**: `api.events.paras.NewHeadNoted.is`\n*   **summary**: A new head has been noted for a Para. `para_id`\n\n### PvfCheckAccepted(`H256`, `u32`)[\u200b](#pvfcheckacceptedh256-u32 \"Direct link to pvfcheckacceptedh256-u32\")\n\n*   **interface**: `api.events.paras.PvfCheckAccepted.is`\n*   **summary**: The given validation code was accepted by the PVF pre-checking vote. `code_hash` `para_id`\n\n### PvfCheckRejected(`H256`, `u32`)[\u200b](#pvfcheckrejectedh256-u32 \"Direct link to pvfcheckrejectedh256-u32\")\n\n*   **interface**: `api.events.paras.PvfCheckRejected.is`\n*   **summary**: The given validation code was rejected by the PVF pre-checking vote. `code_hash` `para_id`\n\n### PvfCheckStarted(`H256`, `u32`)[\u200b](#pvfcheckstartedh256-u32 \"Direct link to pvfcheckstartedh256-u32\")\n\n*   **interface**: `api.events.paras.PvfCheckStarted.is`\n*   **summary**: The given para either initiated or subscribed to a PVF check for the given validation code. `code_hash` `para_id`\n\n* * *\n\nparasDisputes[\u200b](#parasdisputes \"Direct link to parasDisputes\")\n\n----------------------------------------------------------------\n\n### DisputeConcluded(`H256`, `PolkadotRuntimeParachainsDisputesDisputeResult`)[\u200b](#disputeconcludedh256-polkadotruntimeparachainsdisputesdisputeresult \"Direct link to disputeconcludedh256-polkadotruntimeparachainsdisputesdisputeresult\")\n\n*   **interface**: `api.events.parasDisputes.DisputeConcluded.is`\n*   **summary**: A dispute has concluded for or against a candidate. `\\[para id, candidate hash, dispute result\\]`\n\n### DisputeInitiated(`H256`, `PolkadotRuntimeParachainsDisputesDisputeLocation`)[\u200b](#disputeinitiatedh256-polkadotruntimeparachainsdisputesdisputelocation \"Direct link to disputeinitiatedh256-polkadotruntimeparachainsdisputesdisputelocation\")\n\n*   **interface**: `api.events.parasDisputes.DisputeInitiated.is`\n*   **summary**: A dispute has been initiated. \\[candidate hash, dispute location\\]\n\n### Revert(`u32`)[\u200b](#revertu32 \"Direct link to revertu32\")\n\n*   **interface**: `api.events.parasDisputes.Revert.is`\n*   **summary**: A dispute has concluded with supermajority against a candidate. Block authors should no longer build on top of this head and should instead revert the block at the given height. This should be the number of the child of the last known valid block in the chain.\n\n* * *\n\npreimage[\u200b](#preimage \"Direct link to preimage\")\n\n-------------------------------------------------\n\n### Cleared(`H256`)[\u200b](#clearedh256 \"Direct link to clearedh256\")\n\n*   **interface**: `api.events.preimage.Cleared.is`\n*   **summary**: A preimage has ben cleared.\n\n### Noted(`H256`)[\u200b](#notedh256 \"Direct link to notedh256\")\n\n*   **interface**: `api.events.preimage.Noted.is`\n*   **summary**: A preimage has been noted.\n\n### Requested(`H256`)[\u200b](#requestedh256 \"Direct link to requestedh256\")\n\n*   **interface**: `api.events.preimage.Requested.is`\n*   **summary**: A preimage has been requested.\n\n* * *\n\nproxy[\u200b](#proxy \"Direct link to proxy\")\n\n----------------------------------------\n\n### Announced(`AccountId32`, `AccountId32`, `H256`)[\u200b](#announcedaccountid32-accountid32-h256 \"Direct link to announcedaccountid32-accountid32-h256\")\n\n*   **interface**: `api.events.proxy.Announced.is`\n*   **summary**: An announcement was placed to make a call in the future.\n\n### ProxyAdded(`AccountId32`, `AccountId32`, `PolkadotRuntimeProxyType`, `u32`)[\u200b](#proxyaddedaccountid32-accountid32-polkadotruntimeproxytype-u32 \"Direct link to proxyaddedaccountid32-accountid32-polkadotruntimeproxytype-u32\")\n\n*   **interface**: `api.events.proxy.ProxyAdded.is`\n*   **summary**: A proxy was added.\n\n### ProxyExecuted(`Result<Null, SpRuntimeDispatchError>`)[\u200b](#proxyexecutedresultnull-spruntimedispatcherror \"Direct link to proxyexecutedresultnull-spruntimedispatcherror\")\n\n*   **interface**: `api.events.proxy.ProxyExecuted.is`\n*   **summary**: A proxy was executed correctly, with the given.\n\n### ProxyRemoved(`AccountId32`, `AccountId32`, `PolkadotRuntimeProxyType`, `u32`)[\u200b](#proxyremovedaccountid32-accountid32-polkadotruntimeproxytype-u32 \"Direct link to proxyremovedaccountid32-accountid32-polkadotruntimeproxytype-u32\")\n\n*   **interface**: `api.events.proxy.ProxyRemoved.is`\n*   **summary**: A proxy was removed.\n\n### PureCreated(`AccountId32`, `AccountId32`, `PolkadotRuntimeProxyType`, `u16`)[\u200b](#purecreatedaccountid32-accountid32-polkadotruntimeproxytype-u16 \"Direct link to purecreatedaccountid32-accountid32-polkadotruntimeproxytype-u16\")\n\n*   **interface**: `api.events.proxy.PureCreated.is`\n*   **summary**: A pure account has been created by new proxy with given disambiguation index and proxy type.\n\n* * *\n\nreferenda[\u200b](#referenda \"Direct link to referenda\")\n\n----------------------------------------------------\n\n### Approved(`u32`)[\u200b](#approvedu32 \"Direct link to approvedu32\")\n\n*   **interface**: `api.events.referenda.Approved.is`\n*   **summary**: A referendum has been approved and its proposal has been scheduled.\n\n### Cancelled(`u32`, `PalletConvictionVotingTally`)[\u200b](#cancelledu32-palletconvictionvotingtally \"Direct link to cancelledu32-palletconvictionvotingtally\")\n\n*   **interface**: `api.events.referenda.Cancelled.is`\n*   **summary**: A referendum has been cancelled.\n\n### ConfirmAborted(`u32`)[\u200b](#confirmabortedu32 \"Direct link to confirmabortedu32\")\n\n*   **interface**: `api.events.referenda.ConfirmAborted.is`\n\n### Confirmed(`u32`, `PalletConvictionVotingTally`)[\u200b](#confirmedu32-palletconvictionvotingtally \"Direct link to confirmedu32-palletconvictionvotingtally\")\n\n*   **interface**: `api.events.referenda.Confirmed.is`\n*   **summary**: A referendum has ended its confirmation phase and is ready for approval.\n\n### ConfirmStarted(`u32`)[\u200b](#confirmstartedu32 \"Direct link to confirmstartedu32\")\n\n*   **interface**: `api.events.referenda.ConfirmStarted.is`\n\n### DecisionDepositPlaced(`u32`, `AccountId32`, `u128`)[\u200b](#decisiondepositplacedu32-accountid32-u128 \"Direct link to decisiondepositplacedu32-accountid32-u128\")\n\n*   **interface**: `api.events.referenda.DecisionDepositPlaced.is`\n*   **summary**: The decision deposit has been placed.\n\n### DecisionDepositRefunded(`u32`, `AccountId32`, `u128`)[\u200b](#decisiondepositrefundedu32-accountid32-u128 \"Direct link to decisiondepositrefundedu32-accountid32-u128\")\n\n*   **interface**: `api.events.referenda.DecisionDepositRefunded.is`\n*   **summary**: The decision deposit has been refunded.\n\n### DecisionStarted(`u32`, `u16`, `FrameSupportPreimagesBounded`, `PalletConvictionVotingTally`)[\u200b](#decisionstartedu32-u16-framesupportpreimagesbounded-palletconvictionvotingtally \"Direct link to decisionstartedu32-u16-framesupportpreimagesbounded-palletconvictionvotingtally\")\n\n*   **interface**: `api.events.referenda.DecisionStarted.is`\n*   **summary**: A referendum has moved into the deciding phase.\n\n### DepositSlashed(`AccountId32`, `u128`)[\u200b](#depositslashedaccountid32-u128 \"Direct link to depositslashedaccountid32-u128\")\n\n*   **interface**: `api.events.referenda.DepositSlashed.is`\n*   **summary**: A deposit has been slashaed.\n\n### Killed(`u32`, `PalletConvictionVotingTally`)[\u200b](#killedu32-palletconvictionvotingtally \"Direct link to killedu32-palletconvictionvotingtally\")\n\n*   **interface**: `api.events.referenda.Killed.is`\n*   **summary**: A referendum has been killed.\n\n### MetadataCleared(`u32`, `H256`)[\u200b](#metadataclearedu32-h256 \"Direct link to metadataclearedu32-h256\")\n\n*   **interface**: `api.events.referenda.MetadataCleared.is`\n*   **summary**: Metadata for a referendum has been cleared.\n\n### MetadataSet(`u32`, `H256`)[\u200b](#metadatasetu32-h256 \"Direct link to metadatasetu32-h256\")\n\n*   **interface**: `api.events.referenda.MetadataSet.is`\n*   **summary**: Metadata for a referendum has been set.\n\n### Rejected(`u32`, `PalletConvictionVotingTally`)[\u200b](#rejectedu32-palletconvictionvotingtally \"Direct link to rejectedu32-palletconvictionvotingtally\")\n\n*   **interface**: `api.events.referenda.Rejected.is`\n*   **summary**: A proposal has been rejected by referendum.\n\n### SubmissionDepositRefunded(`u32`, `AccountId32`, `u128`)[\u200b](#submissiondepositrefundedu32-accountid32-u128 \"Direct link to submissiondepositrefundedu32-accountid32-u128\")\n\n*   **interface**: `api.events.referenda.SubmissionDepositRefunded.is`\n*   **summary**: The submission deposit has been refunded.\n\n### Submitted(`u32`, `u16`, `FrameSupportPreimagesBounded`)[\u200b](#submittedu32-u16-framesupportpreimagesbounded \"Direct link to submittedu32-u16-framesupportpreimagesbounded\")\n\n*   **interface**: `api.events.referenda.Submitted.is`\n*   **summary**: A referendum has been submitted.\n\n### TimedOut(`u32`, `PalletConvictionVotingTally`)[\u200b](#timedoutu32-palletconvictionvotingtally \"Direct link to timedoutu32-palletconvictionvotingtally\")\n\n*   **interface**: `api.events.referenda.TimedOut.is`\n*   **summary**: A referendum has been timed out without being decided.\n\n* * *\n\nregistrar[\u200b](#registrar \"Direct link to registrar\")\n\n----------------------------------------------------\n\n### Deregistered(`u32`)[\u200b](#deregisteredu32 \"Direct link to deregisteredu32\")\n\n*   **interface**: `api.events.registrar.Deregistered.is`\n\n### Registered(`u32`, `AccountId32`)[\u200b](#registeredu32-accountid32 \"Direct link to registeredu32-accountid32\")\n\n*   **interface**: `api.events.registrar.Registered.is`\n\n### Reserved(`u32`, `AccountId32`)[\u200b](#reservedu32-accountid32 \"Direct link to reservedu32-accountid32\")\n\n*   **interface**: `api.events.registrar.Reserved.is`\n\n### Swapped(`u32`, `u32`)[\u200b](#swappedu32-u32 \"Direct link to swappedu32-u32\")\n\n*   **interface**: `api.events.registrar.Swapped.is`\n\n* * *\n\nscheduler[\u200b](#scheduler \"Direct link to scheduler\")\n\n----------------------------------------------------\n\n### CallUnavailable(`(u32,u32)`, `Option<[u8;32]>`)[\u200b](#callunavailableu32u32-optionu832 \"Direct link to callunavailableu32u32-optionu832\")\n\n*   **interface**: `api.events.scheduler.CallUnavailable.is`\n*   **summary**: The call for the provided hash was not found so the task has been aborted.\n\n### Canceled(`u32`, `u32`)[\u200b](#canceledu32-u32-1 \"Direct link to canceledu32-u32-1\")\n\n*   **interface**: `api.events.scheduler.Canceled.is`\n*   **summary**: Canceled some task.\n\n### Dispatched(`(u32,u32)`, `Option<[u8;32]>`, `Result<Null, SpRuntimeDispatchError>`)[\u200b](#dispatchedu32u32-optionu832-resultnull-spruntimedispatcherror \"Direct link to dispatchedu32u32-optionu832-resultnull-spruntimedispatcherror\")\n\n*   **interface**: `api.events.scheduler.Dispatched.is`\n*   **summary**: Dispatched some task.\n\n### PeriodicFailed(`(u32,u32)`, `Option<[u8;32]>`)[\u200b](#periodicfailedu32u32-optionu832 \"Direct link to periodicfailedu32u32-optionu832\")\n\n*   **interface**: `api.events.scheduler.PeriodicFailed.is`\n*   **summary**: The given task was unable to be renewed since the agenda is full at that block.\n\n### PermanentlyOverweight(`(u32,u32)`, `Option<[u8;32]>`)[\u200b](#permanentlyoverweightu32u32-optionu832 \"Direct link to permanentlyoverweightu32u32-optionu832\")\n\n*   **interface**: `api.events.scheduler.PermanentlyOverweight.is`\n*   **summary**: The given task can never be executed since it is overweight.\n\n### Scheduled(`u32`, `u32`)[\u200b](#scheduledu32-u32 \"Direct link to scheduledu32-u32\")\n\n*   **interface**: `api.events.scheduler.Scheduled.is`\n*   **summary**: Scheduled some task.\n\n* * *\n\nsession[\u200b](#session \"Direct link to session\")\n\n----------------------------------------------\n\n### NewSession(`u32`)[\u200b](#newsessionu32 \"Direct link to newsessionu32\")\n\n*   **interface**: `api.events.session.NewSession.is`\n*   **summary**: New session has happened. Note that the argument is the session index, not the block number as the type might suggest.\n\n* * *\n\nslots[\u200b](#slots \"Direct link to slots\")\n\n----------------------------------------\n\n### Leased(`u32`, `AccountId32`, `u32`, `u32`, `u128`, `u128`)[\u200b](#leasedu32-accountid32-u32-u32-u128-u128 \"Direct link to leasedu32-accountid32-u32-u32-u128-u128\")\n\n*   **interface**: `api.events.slots.Leased.is`\n*   **summary**: A para has won the right to a continuous set of lease periods as a parachain. First balance is any extra amount reserved on top of the para's existing deposit. Second balance is the total amount reserved.\n\n### NewLeasePeriod(`u32`)[\u200b](#newleaseperiodu32 \"Direct link to newleaseperiodu32\")\n\n*   **interface**: `api.events.slots.NewLeasePeriod.is`\n*   **summary**: A new `[lease_period]` is beginning.\n\n* * *\n\nstaking[\u200b](#staking \"Direct link to staking\")\n\n----------------------------------------------\n\n### Bonded(`AccountId32`, `u128`)[\u200b](#bondedaccountid32-u128 \"Direct link to bondedaccountid32-u128\")\n\n*   **interface**: `api.events.staking.Bonded.is`\n    \n*   **summary**: An account has bonded this amount. \\[stash, amount\\]\n    \n    NOTE: This event is only emitted when funds are bonded via a dispatchable. Notably, it will not be emitted for staking rewards when they are added to stake.\n    \n\n### Chilled(`AccountId32`)[\u200b](#chilledaccountid32 \"Direct link to chilledaccountid32\")\n\n*   **interface**: `api.events.staking.Chilled.is`\n*   **summary**: An account has stopped participating as either a validator or nominator.\n\n### EraPaid(`u32`, `u128`, `u128`)[\u200b](#erapaidu32-u128-u128 \"Direct link to erapaidu32-u128-u128\")\n\n*   **interface**: `api.events.staking.EraPaid.is`\n*   **summary**: The era payout has been set; the first balance is the validator-payout; the second is the remainder from the maximum amount of reward.\n\n### ForceEra(`PalletStakingForcing`)[\u200b](#forceerapalletstakingforcing \"Direct link to forceerapalletstakingforcing\")\n\n*   **interface**: `api.events.staking.ForceEra.is`\n*   **summary**: A new force era mode was set.\n\n### Kicked(`AccountId32`, `AccountId32`)[\u200b](#kickedaccountid32-accountid32 \"Direct link to kickedaccountid32-accountid32\")\n\n*   **interface**: `api.events.staking.Kicked.is`\n*   **summary**: A nominator has been kicked from a validator.\n\n### OldSlashingReportDiscarded(`u32`)[\u200b](#oldslashingreportdiscardedu32 \"Direct link to oldslashingreportdiscardedu32\")\n\n*   **interface**: `api.events.staking.OldSlashingReportDiscarded.is`\n*   **summary**: An old slashing report from a prior era was discarded because it could not be processed.\n\n### PayoutStarted(`u32`, `AccountId32`)[\u200b](#payoutstartedu32-accountid32 \"Direct link to payoutstartedu32-accountid32\")\n\n*   **interface**: `api.events.staking.PayoutStarted.is`\n*   **summary**: The stakers' rewards are getting paid.\n\n### Rewarded(`AccountId32`, `u128`)[\u200b](#rewardedaccountid32-u128-1 \"Direct link to rewardedaccountid32-u128-1\")\n\n*   **interface**: `api.events.staking.Rewarded.is`\n*   **summary**: The nominator has been rewarded by this amount.\n\n### Slashed(`AccountId32`, `u128`)[\u200b](#slashedaccountid32-u128-3 \"Direct link to slashedaccountid32-u128-3\")\n\n*   **interface**: `api.events.staking.Slashed.is`\n*   **summary**: A staker (validator or nominator) has been slashed by the given amount.\n\n### SlashReported(`AccountId32`, `Perbill`, `u32`)[\u200b](#slashreportedaccountid32-perbill-u32 \"Direct link to slashreportedaccountid32-perbill-u32\")\n\n*   **interface**: `api.events.staking.SlashReported.is`\n*   **summary**: A slash for the given validator, for the given percentage of their stake, at the given era as been reported.\n\n### SnapshotTargetsSizeExceeded(`u32`)[\u200b](#snapshottargetssizeexceededu32 \"Direct link to snapshottargetssizeexceededu32\")\n\n*   **interface**: `api.events.staking.SnapshotTargetsSizeExceeded.is`\n*   **summary**: Targets size limit reached.\n\n### SnapshotVotersSizeExceeded(`u32`)[\u200b](#snapshotvoterssizeexceededu32 \"Direct link to snapshotvoterssizeexceededu32\")\n\n*   **interface**: `api.events.staking.SnapshotVotersSizeExceeded.is`\n*   **summary**: Voters size limit reached.\n\n### StakersElected()[\u200b](#stakerselected \"Direct link to StakersElected()\")\n\n*   **interface**: `api.events.staking.StakersElected.is`\n*   **summary**: A new set of stakers was elected.\n\n### StakingElectionFailed()[\u200b](#stakingelectionfailed \"Direct link to StakingElectionFailed()\")\n\n*   **interface**: `api.events.staking.StakingElectionFailed.is`\n*   **summary**: The election failed. No new era is planned.\n\n### Unbonded(`AccountId32`, `u128`)[\u200b](#unbondedaccountid32-u128 \"Direct link to unbondedaccountid32-u128\")\n\n*   **interface**: `api.events.staking.Unbonded.is`\n*   **summary**: An account has unbonded this amount.\n\n### ValidatorPrefsSet(`AccountId32`, `PalletStakingValidatorPrefs`)[\u200b](#validatorprefssetaccountid32-palletstakingvalidatorprefs \"Direct link to validatorprefssetaccountid32-palletstakingvalidatorprefs\")\n\n*   **interface**: `api.events.staking.ValidatorPrefsSet.is`\n*   **summary**: A validator has set their preferences.\n\n### Withdrawn(`AccountId32`, `u128`)[\u200b](#withdrawnaccountid32-u128 \"Direct link to withdrawnaccountid32-u128\")\n\n*   **interface**: `api.events.staking.Withdrawn.is`\n*   **summary**: An account has called `withdraw_unbonded` and removed unbonding chunks worth `Balance` from the unlocking queue.\n\n* * *\n\nsystem[\u200b](#system \"Direct link to system\")\n\n-------------------------------------------\n\n### CodeUpdated()[\u200b](#codeupdated \"Direct link to CodeUpdated()\")\n\n*   **interface**: `api.events.system.CodeUpdated.is`\n*   **summary**: `:code` was updated.\n\n### ExtrinsicFailed(`SpRuntimeDispatchError`, `FrameSupportDispatchDispatchInfo`)[\u200b](#extrinsicfailedspruntimedispatcherror-framesupportdispatchdispatchinfo \"Direct link to extrinsicfailedspruntimedispatcherror-framesupportdispatchdispatchinfo\")\n\n*   **interface**: `api.events.system.ExtrinsicFailed.is`\n*   **summary**: An extrinsic failed.\n\n### ExtrinsicSuccess(`FrameSupportDispatchDispatchInfo`)[\u200b](#extrinsicsuccessframesupportdispatchdispatchinfo \"Direct link to extrinsicsuccessframesupportdispatchdispatchinfo\")\n\n*   **interface**: `api.events.system.ExtrinsicSuccess.is`\n*   **summary**: An extrinsic completed successfully.\n\n### KilledAccount(`AccountId32`)[\u200b](#killedaccountaccountid32 \"Direct link to killedaccountaccountid32\")\n\n*   **interface**: `api.events.system.KilledAccount.is`\n*   **summary**: An account was reaped.\n\n### NewAccount(`AccountId32`)[\u200b](#newaccountaccountid32 \"Direct link to newaccountaccountid32\")\n\n*   **interface**: `api.events.system.NewAccount.is`\n*   **summary**: A new account was created.\n\n### Remarked(`AccountId32`, `H256`)[\u200b](#remarkedaccountid32-h256 \"Direct link to remarkedaccountid32-h256\")\n\n*   **interface**: `api.events.system.Remarked.is`\n*   **summary**: On on-chain remark happened.\n\n* * *\n\ntransactionPayment[\u200b](#transactionpayment \"Direct link to transactionPayment\")\n\n-------------------------------------------------------------------------------\n\n### TransactionFeePaid(`AccountId32`, `u128`, `u128`)[\u200b](#transactionfeepaidaccountid32-u128-u128 \"Direct link to transactionfeepaidaccountid32-u128-u128\")\n\n*   **interface**: `api.events.transactionPayment.TransactionFeePaid.is`\n*   **summary**: A transaction fee `actual_fee`, of which `tip` was added to the minimum inclusion fee, has been paid by `who`.\n\n* * *\n\ntreasury[\u200b](#treasury \"Direct link to treasury\")\n\n-------------------------------------------------\n\n### Awarded(`u32`, `u128`, `AccountId32`)[\u200b](#awardedu32-u128-accountid32 \"Direct link to awardedu32-u128-accountid32\")\n\n*   **interface**: `api.events.treasury.Awarded.is`\n*   **summary**: Some funds have been allocated.\n\n### Burnt(`u128`)[\u200b](#burntu128 \"Direct link to burntu128\")\n\n*   **interface**: `api.events.treasury.Burnt.is`\n*   **summary**: Some of our funds have been burnt.\n\n### Deposit(`u128`)[\u200b](#depositu128 \"Direct link to depositu128\")\n\n*   **interface**: `api.events.treasury.Deposit.is`\n*   **summary**: Some funds have been deposited.\n\n### Proposed(`u32`)[\u200b](#proposedu32 \"Direct link to proposedu32\")\n\n*   **interface**: `api.events.treasury.Proposed.is`\n*   **summary**: New proposal.\n\n### Rejected(`u32`, `u128`)[\u200b](#rejectedu32-u128 \"Direct link to rejectedu32-u128\")\n\n*   **interface**: `api.events.treasury.Rejected.is`\n*   **summary**: A proposal was rejected; funds were slashed.\n\n### Rollover(`u128`)[\u200b](#rolloveru128 \"Direct link to rolloveru128\")\n\n*   **interface**: `api.events.treasury.Rollover.is`\n*   **summary**: Spending has finished; this is the amount that rolls over until next spend.\n\n### SpendApproved(`u32`, `u128`, `AccountId32`)[\u200b](#spendapprovedu32-u128-accountid32 \"Direct link to spendapprovedu32-u128-accountid32\")\n\n*   **interface**: `api.events.treasury.SpendApproved.is`\n*   **summary**: A new spend proposal has been approved.\n\n### Spending(`u128`)[\u200b](#spendingu128 \"Direct link to spendingu128\")\n\n*   **interface**: `api.events.treasury.Spending.is`\n*   **summary**: We have ended a spend period and will now allocate funds.\n\n### UpdatedInactive(`u128`, `u128`)[\u200b](#updatedinactiveu128-u128 \"Direct link to updatedinactiveu128-u128\")\n\n*   **interface**: `api.events.treasury.UpdatedInactive.is`\n*   **summary**: The inactive funds of the pallet have been updated.\n\n* * *\n\nutility[\u200b](#utility \"Direct link to utility\")\n\n----------------------------------------------\n\n### BatchCompleted()[\u200b](#batchcompleted \"Direct link to BatchCompleted()\")\n\n*   **interface**: `api.events.utility.BatchCompleted.is`\n*   **summary**: Batch of dispatches completed fully with no error.\n\n### BatchCompletedWithErrors()[\u200b](#batchcompletedwitherrors \"Direct link to BatchCompletedWithErrors()\")\n\n*   **interface**: `api.events.utility.BatchCompletedWithErrors.is`\n*   **summary**: Batch of dispatches completed but has errors.\n\n### BatchInterrupted(`u32`, `SpRuntimeDispatchError`)[\u200b](#batchinterruptedu32-spruntimedispatcherror \"Direct link to batchinterruptedu32-spruntimedispatcherror\")\n\n*   **interface**: `api.events.utility.BatchInterrupted.is`\n*   **summary**: Batch of dispatches did not complete fully. Index of first failing dispatch given, as well as the error.\n\n### DispatchedAs(`Result<Null, SpRuntimeDispatchError>`)[\u200b](#dispatchedasresultnull-spruntimedispatcherror \"Direct link to dispatchedasresultnull-spruntimedispatcherror\")\n\n*   **interface**: `api.events.utility.DispatchedAs.is`\n*   **summary**: A call was dispatched.\n\n### ItemCompleted()[\u200b](#itemcompleted \"Direct link to ItemCompleted()\")\n\n*   **interface**: `api.events.utility.ItemCompleted.is`\n*   **summary**: A single item within a Batch of dispatches has completed with no error.\n\n### ItemFailed(`SpRuntimeDispatchError`)[\u200b](#itemfailedspruntimedispatcherror \"Direct link to itemfailedspruntimedispatcherror\")\n\n*   **interface**: `api.events.utility.ItemFailed.is`\n*   **summary**: A single item within a Batch of dispatches has completed with error.\n\n* * *\n\nvesting[\u200b](#vesting \"Direct link to vesting\")\n\n----------------------------------------------\n\n### VestingCompleted(`AccountId32`)[\u200b](#vestingcompletedaccountid32 \"Direct link to vestingcompletedaccountid32\")\n\n*   **interface**: `api.events.vesting.VestingCompleted.is`\n*   **summary**: An \\[account\\] has become fully vested.\n\n### VestingUpdated(`AccountId32`, `u128`)[\u200b](#vestingupdatedaccountid32-u128 \"Direct link to vestingupdatedaccountid32-u128\")\n\n*   **interface**: `api.events.vesting.VestingUpdated.is`\n*   **summary**: The amount vested has been updated. This could indicate a change in funds available. The balance given is the amount which is left unvested (and thus locked).\n\n* * *\n\nvoterList[\u200b](#voterlist \"Direct link to voterList\")\n\n----------------------------------------------------\n\n### Rebagged(`AccountId32`, `u64`, `u64`)[\u200b](#rebaggedaccountid32-u64-u64 \"Direct link to rebaggedaccountid32-u64-u64\")\n\n*   **interface**: `api.events.voterList.Rebagged.is`\n*   **summary**: Moved an account from one bag to another.\n\n### ScoreUpdated(`AccountId32`, `u64`)[\u200b](#scoreupdatedaccountid32-u64 \"Direct link to scoreupdatedaccountid32-u64\")\n\n*   **interface**: `api.events.voterList.ScoreUpdated.is`\n*   **summary**: Updated the score of some account to the given amount.\n\n* * *\n\nwhitelist[\u200b](#whitelist \"Direct link to whitelist\")\n\n----------------------------------------------------\n\n### CallWhitelisted(`H256`)[\u200b](#callwhitelistedh256 \"Direct link to callwhitelistedh256\")\n\n*   **interface**: `api.events.whitelist.CallWhitelisted.is`\n\n### WhitelistedCallDispatched(`H256`, `Result<FrameSupportDispatchPostDispatchInfo, SpRuntimeDispatchErrorWithPostInfo>`)[\u200b](#whitelistedcalldispatchedh256-resultframesupportdispatchpostdispatchinfo-spruntimedispatcherrorwithpostinfo \"Direct link to whitelistedcalldispatchedh256-resultframesupportdispatchpostdispatchinfo-spruntimedispatcherrorwithpostinfo\")\n\n*   **interface**: `api.events.whitelist.WhitelistedCallDispatched.is`\n\n### WhitelistedCallRemoved(`H256`)[\u200b](#whitelistedcallremovedh256 \"Direct link to whitelistedcallremovedh256\")\n\n*   **interface**: `api.events.whitelist.WhitelistedCallRemoved.is`\n\n* * *\n\nxcmPallet[\u200b](#xcmpallet \"Direct link to xcmPallet\")\n\n----------------------------------------------------\n\n### AssetsClaimed(`H256`, `XcmV3MultiLocation`, `XcmVersionedMultiAssets`)[\u200b](#assetsclaimedh256-xcmv3multilocation-xcmversionedmultiassets \"Direct link to assetsclaimedh256-xcmv3multilocation-xcmversionedmultiassets\")\n\n*   **interface**: `api.events.xcmPallet.AssetsClaimed.is`\n*   **summary**: Some assets have been claimed from an asset trap\n\n### AssetsTrapped(`H256`, `XcmV3MultiLocation`, `XcmVersionedMultiAssets`)[\u200b](#assetstrappedh256-xcmv3multilocation-xcmversionedmultiassets \"Direct link to assetstrappedh256-xcmv3multilocation-xcmversionedmultiassets\")\n\n*   **interface**: `api.events.xcmPallet.AssetsTrapped.is`\n*   **summary**: Some assets have been placed in an asset trap.\n\n### Attempted(`XcmV3TraitsOutcome`)[\u200b](#attemptedxcmv3traitsoutcome \"Direct link to attemptedxcmv3traitsoutcome\")\n\n*   **interface**: `api.events.xcmPallet.Attempted.is`\n*   **summary**: Execution of an XCM message was attempted.\n\n### FeesPaid(`XcmV3MultiLocation`, `XcmV3MultiassetMultiAssets`)[\u200b](#feespaidxcmv3multilocation-xcmv3multiassetmultiassets \"Direct link to feespaidxcmv3multilocation-xcmv3multiassetmultiassets\")\n\n*   **interface**: `api.events.xcmPallet.FeesPaid.is`\n*   **summary**: Fees were paid from a location for an operation (often for using `SendXcm`).\n\n### InvalidQuerier(`XcmV3MultiLocation`, `u64`, `XcmV3MultiLocation`, `Option<XcmV3MultiLocation>`)[\u200b](#invalidquerierxcmv3multilocation-u64-xcmv3multilocation-optionxcmv3multilocation \"Direct link to invalidquerierxcmv3multilocation-u64-xcmv3multilocation-optionxcmv3multilocation\")\n\n*   **interface**: `api.events.xcmPallet.InvalidQuerier.is`\n*   **summary**: Expected query response has been received but the querier location of the response does not match the expected. The query remains registered for a later, valid, response to be received and acted upon.\n\n### InvalidQuerierVersion(`XcmV3MultiLocation`, `u64`)[\u200b](#invalidquerierversionxcmv3multilocation-u64 \"Direct link to invalidquerierversionxcmv3multilocation-u64\")\n\n*   **interface**: `api.events.xcmPallet.InvalidQuerierVersion.is`\n    \n*   **summary**: Expected query response has been received but the expected querier location placed in storage by this runtime previously cannot be decoded. The query remains registered.\n    \n    This is unexpected (since a location placed in storage in a previously executing runtime should be readable prior to query timeout) and dangerous since the possibly valid response will be dropped. Manual governance intervention is probably going to be needed.\n    \n\n### InvalidResponder(`XcmV3MultiLocation`, `u64`, `Option<XcmV3MultiLocation>`)[\u200b](#invalidresponderxcmv3multilocation-u64-optionxcmv3multilocation \"Direct link to invalidresponderxcmv3multilocation-u64-optionxcmv3multilocation\")\n\n*   **interface**: `api.events.xcmPallet.InvalidResponder.is`\n*   **summary**: Expected query response has been received but the origin location of the response does not match that expected. The query remains registered for a later, valid, response to be received and acted upon.\n\n### InvalidResponderVersion(`XcmV3MultiLocation`, `u64`)[\u200b](#invalidresponderversionxcmv3multilocation-u64 \"Direct link to invalidresponderversionxcmv3multilocation-u64\")\n\n*   **interface**: `api.events.xcmPallet.InvalidResponderVersion.is`\n    \n*   **summary**: Expected query response has been received but the expected origin location placed in storage by this runtime previously cannot be decoded. The query remains registered.\n    \n    This is unexpected (since a location placed in storage in a previously executing runtime should be readable prior to query timeout) and dangerous since the possibly valid response will be dropped. Manual governance intervention is probably going to be needed.\n    \n\n### Notified(`u64`, `u8`, `u8`)[\u200b](#notifiedu64-u8-u8 \"Direct link to notifiedu64-u8-u8\")\n\n*   **interface**: `api.events.xcmPallet.Notified.is`\n*   **summary**: Query response has been received and query is removed. The registered notification has been dispatched and executed successfully.\n\n### NotifyDecodeFailed(`u64`, `u8`, `u8`)[\u200b](#notifydecodefailedu64-u8-u8 \"Direct link to notifydecodefailedu64-u8-u8\")\n\n*   **interface**: `api.events.xcmPallet.NotifyDecodeFailed.is`\n*   **summary**: Query response has been received and query is removed. The dispatch was unable to be decoded into a `Call`; this might be due to dispatch function having a signature which is not `(origin, QueryId, Response)`.\n\n### NotifyDispatchError(`u64`, `u8`, `u8`)[\u200b](#notifydispatcherroru64-u8-u8 \"Direct link to notifydispatcherroru64-u8-u8\")\n\n*   **interface**: `api.events.xcmPallet.NotifyDispatchError.is`\n*   **summary**: Query response has been received and query is removed. There was a general error with dispatching the notification call.\n\n### NotifyOverweight(`u64`, `u8`, `u8`, `SpWeightsWeightV2Weight`, `SpWeightsWeightV2Weight`)[\u200b](#notifyoverweightu64-u8-u8-spweightsweightv2weight-spweightsweightv2weight \"Direct link to notifyoverweightu64-u8-u8-spweightsweightv2weight-spweightsweightv2weight\")\n\n*   **interface**: `api.events.xcmPallet.NotifyOverweight.is`\n*   **summary**: Query response has been received and query is removed. The registered notification could not be dispatched because the dispatch weight is greater than the maximum weight originally budgeted by this runtime for the query result.\n\n### NotifyTargetMigrationFail(`XcmVersionedMultiLocation`, `u64`)[\u200b](#notifytargetmigrationfailxcmversionedmultilocation-u64 \"Direct link to notifytargetmigrationfailxcmversionedmultilocation-u64\")\n\n*   **interface**: `api.events.xcmPallet.NotifyTargetMigrationFail.is`\n*   **summary**: A given location which had a version change subscription was dropped owing to an error migrating the location to our new XCM format.\n\n### NotifyTargetSendFail(`XcmV3MultiLocation`, `u64`, `XcmV3TraitsError`)[\u200b](#notifytargetsendfailxcmv3multilocation-u64-xcmv3traitserror \"Direct link to notifytargetsendfailxcmv3multilocation-u64-xcmv3traitserror\")\n\n*   **interface**: `api.events.xcmPallet.NotifyTargetSendFail.is`\n*   **summary**: A given location which had a version change subscription was dropped owing to an error sending the notification to it.\n\n### ResponseReady(`u64`, `XcmV3Response`)[\u200b](#responsereadyu64-xcmv3response \"Direct link to responsereadyu64-xcmv3response\")\n\n*   **interface**: `api.events.xcmPallet.ResponseReady.is`\n*   **summary**: Query response has been received and is ready for taking with `take_response`. There is no registered notification call.\n\n### ResponseTaken(`u64`)[\u200b](#responsetakenu64 \"Direct link to responsetakenu64\")\n\n*   **interface**: `api.events.xcmPallet.ResponseTaken.is`\n*   **summary**: Received query response has been read and removed.\n\n### Sent(`XcmV3MultiLocation`, `XcmV3MultiLocation`, `XcmV3Xcm`, `[u8;32]`)[\u200b](#sentxcmv3multilocation-xcmv3multilocation-xcmv3xcm-u832 \"Direct link to sentxcmv3multilocation-xcmv3multilocation-xcmv3xcm-u832\")\n\n*   **interface**: `api.events.xcmPallet.Sent.is`\n*   **summary**: A XCM message was sent.\n\n### SupportedVersionChanged(`XcmV3MultiLocation`, `u32`)[\u200b](#supportedversionchangedxcmv3multilocation-u32 \"Direct link to supportedversionchangedxcmv3multilocation-u32\")\n\n*   **interface**: `api.events.xcmPallet.SupportedVersionChanged.is`\n*   **summary**: The supported version of a location has been changed. This might be through an automatic notification or a manual intervention.\n\n### UnexpectedResponse(`XcmV3MultiLocation`, `u64`)[\u200b](#unexpectedresponsexcmv3multilocation-u64 \"Direct link to unexpectedresponsexcmv3multilocation-u64\")\n\n*   **interface**: `api.events.xcmPallet.UnexpectedResponse.is`\n*   **summary**: Query response received which does not match a registered query. This may be because a matching query was never registered, it may be because it is a duplicate response, or because the query timed out.\n\n### VersionChangeNotified(`XcmV3MultiLocation`, `u32`, `XcmV3MultiassetMultiAssets`, `[u8;32]`)[\u200b](#versionchangenotifiedxcmv3multilocation-u32-xcmv3multiassetmultiassets-u832 \"Direct link to versionchangenotifiedxcmv3multilocation-u32-xcmv3multiassetmultiassets-u832\")\n\n*   **interface**: `api.events.xcmPallet.VersionChangeNotified.is`\n    \n*   **summary**: An XCM version change notification message has been attempted to be sent.\n    \n    The cost of sending it (borne by the chain) is included.\n    \n\n### VersionNotifyRequested(`XcmV3MultiLocation`, `XcmV3MultiassetMultiAssets`, `[u8;32]`)[\u200b](#versionnotifyrequestedxcmv3multilocation-xcmv3multiassetmultiassets-u832 \"Direct link to versionnotifyrequestedxcmv3multilocation-xcmv3multiassetmultiassets-u832\")\n\n*   **interface**: `api.events.xcmPallet.VersionNotifyRequested.is`\n*   **summary**: We have requested that a remote chain send us XCM version change notifications.\n\n### VersionNotifyStarted(`XcmV3MultiLocation`, `XcmV3MultiassetMultiAssets`, `[u8;32]`)[\u200b](#versionnotifystartedxcmv3multilocation-xcmv3multiassetmultiassets-u832 \"Direct link to versionnotifystartedxcmv3multilocation-xcmv3multiassetmultiassets-u832\")\n\n*   **interface**: `api.events.xcmPallet.VersionNotifyStarted.is`\n*   **summary**: A remote has requested XCM version change notification from us and we have honored it. A version information message is sent to them and its cost is included.\n\n### VersionNotifyUnrequested(`XcmV3MultiLocation`, `XcmV3MultiassetMultiAssets`, `[u8;32]`)[\u200b](#versionnotifyunrequestedxcmv3multilocation-xcmv3multiassetmultiassets-u832 \"Direct link to versionnotifyunrequestedxcmv3multilocation-xcmv3multiassetmultiassets-u832\")\n\n*   **interface**: `api.events.xcmPallet.VersionNotifyUnrequested.is`\n*   **summary**: We have requested that a remote chain stops sending us XCM version change notifications.\n\n[Edit this page](https://github.com/polkadot-js/docs/edit/master/docs/polkadot/events.md)\n\n[Previous\\\n\\\nExtrinsics](/docs/polkadot/extrinsics)\n[Next\\\n\\\nErrors](/docs/polkadot/errors)\n\n*   [auctions](#auctions)\n    *   [AuctionClosed(`u32`)](#auctionclosedu32)\n        \n    *   [AuctionStarted(`u32`, `u32`, `u32`)](#auctionstartedu32-u32-u32)\n        \n    *   [BidAccepted(`AccountId32`, `u32`, `u128`, `u32`, `u32`)](#bidacceptedaccountid32-u32-u128-u32-u32)\n        \n    *   [ReserveConfiscated(`u32`, `AccountId32`, `u128`)](#reserveconfiscatedu32-accountid32-u128)\n        \n    *   [Reserved(`AccountId32`, `u128`, `u128`)](#reservedaccountid32-u128-u128)\n        \n    *   [Unreserved(`AccountId32`, `u128`)](#unreservedaccountid32-u128)\n        \n    *   [WinningOffset(`u32`, `u32`)](#winningoffsetu32-u32)\n        \n*   [balances](#balances)\n    *   [BalanceSet(`AccountId32`, `u128`)](#balancesetaccountid32-u128)\n        \n    *   [Burned(`AccountId32`, `u128`)](#burnedaccountid32-u128)\n        \n    *   [Deposit(`AccountId32`, `u128`)](#depositaccountid32-u128)\n        \n    *   [DustLost(`AccountId32`, `u128`)](#dustlostaccountid32-u128)\n        \n    *   [Endowed(`AccountId32`, `u128`)](#endowedaccountid32-u128)\n        \n    *   [Frozen(`AccountId32`, `u128`)](#frozenaccountid32-u128)\n        \n    *   [Issued(`u128`)](#issuedu128)\n        \n    *   [Locked(`AccountId32`, `u128`)](#lockedaccountid32-u128)\n        \n    *   [Minted(`AccountId32`, `u128`)](#mintedaccountid32-u128)\n        \n    *   [Rescinded(`u128`)](#rescindedu128)\n        \n    *   [Reserved(`AccountId32`, `u128`)](#reservedaccountid32-u128)\n        \n    *   [ReserveRepatriated(`AccountId32`, `AccountId32`, `u128`, `FrameSupportTokensMiscBalanceStatus`)](#reserverepatriatedaccountid32-accountid32-u128-framesupporttokensmiscbalancestatus)\n        \n    *   [Restored(`AccountId32`, `u128`)](#restoredaccountid32-u128)\n        \n    *   [Slashed(`AccountId32`, `u128`)](#slashedaccountid32-u128)\n        \n    *   [Suspended(`AccountId32`, `u128`)](#suspendedaccountid32-u128)\n        \n    *   [Thawed(`AccountId32`, `u128`)](#thawedaccountid32-u128)\n        \n    *   [Transfer(`AccountId32`, `AccountId32`, `u128`)](#transferaccountid32-accountid32-u128)\n        \n    *   [Unlocked(`AccountId32`, `u128`)](#unlockedaccountid32-u128)\n        \n    *   [Unreserved(`AccountId32`, `u128`)](#unreservedaccountid32-u128-1)\n        \n    *   [Upgraded(`AccountId32`)](#upgradedaccountid32)\n        \n    *   [Withdraw(`AccountId32`, `u128`)](#withdrawaccountid32-u128)\n        \n*   [bounties](#bounties)\n    *   [BountyAwarded(`u32`, `AccountId32`)](#bountyawardedu32-accountid32)\n        \n    *   [BountyBecameActive(`u32`)](#bountybecameactiveu32)\n        \n    *   [BountyCanceled(`u32`)](#bountycanceledu32)\n        \n    *   [BountyClaimed(`u32`, `u128`, `AccountId32`)](#bountyclaimedu32-u128-accountid32)\n        \n    *   [BountyExtended(`u32`)](#bountyextendedu32)\n        \n    *   [BountyProposed(`u32`)](#bountyproposedu32)\n        \n    *   [BountyRejected(`u32`, `u128`)](#bountyrejectedu32-u128)\n        \n*   [childBounties](#childbounties)\n    *   [Added(`u32`, `u32`)](#addedu32-u32)\n        \n    *   [Awarded(`u32`, `u32`, `AccountId32`)](#awardedu32-u32-accountid32)\n        \n    *   [Canceled(`u32`, `u32`)](#canceledu32-u32)\n        \n    *   [Claimed(`u32`, `u32`, `u128`, `AccountId32`)](#claimedu32-u32-u128-accountid32)\n        \n*   [claims](#claims)\n    *   [Claimed(`AccountId32`, `EthereumAddress`, `u128`)](#claimedaccountid32-ethereumaddress-u128)\n        \n*   [convictionVoting](#convictionvoting)\n    *   [Delegated(`AccountId32`, `AccountId32`)](#delegatedaccountid32-accountid32)\n        \n    *   [Undelegated(`AccountId32`)](#undelegatedaccountid32)\n        \n*   [crowdloan](#crowdloan)\n    *   [AddedToNewRaise(`u32`)](#addedtonewraiseu32)\n        \n    *   [AllRefunded(`u32`)](#allrefundedu32)\n        \n    *   [Contributed(`AccountId32`, `u32`, `u128`)](#contributedaccountid32-u32-u128)\n        \n    *   [Created(`u32`)](#createdu32)\n        \n    *   [Dissolved(`u32`)](#dissolvedu32)\n        \n    *   [Edited(`u32`)](#editedu32)\n        \n    *   [HandleBidResult(`u32`, `Result<Null, SpRuntimeDispatchError>`)](#handlebidresultu32-resultnull-spruntimedispatcherror)\n        \n    *   [MemoUpdated(`AccountId32`, `u32`, `Bytes`)](#memoupdatedaccountid32-u32-bytes)\n        \n    *   [PartiallyRefunded(`u32`)](#partiallyrefundedu32)\n        \n    *   [Withdrew(`AccountId32`, `u32`, `u128`)](#withdrewaccountid32-u32-u128)\n        \n*   [electionProviderMultiPhase](#electionprovidermultiphase)\n    *   [ElectionFailed()](#electionfailed)\n        \n    *   [ElectionFinalized(`PalletElectionProviderMultiPhaseElectionCompute`, `SpNposElectionsElectionScore`)](#electionfinalizedpalletelectionprovidermultiphaseelectioncompute-spnposelectionselectionscore)\n        \n    *   [PhaseTransitioned(`PalletElectionProviderMultiPhasePhase`, `PalletElectionProviderMultiPhasePhase`, `u32`)](#phasetransitionedpalletelectionprovidermultiphasephase-palletelectionprovidermultiphasephase-u32)\n        \n    *   [Rewarded(`AccountId32`, `u128`)](#rewardedaccountid32-u128)\n        \n    *   [Slashed(`AccountId32`, `u128`)](#slashedaccountid32-u128-1)\n        \n    *   [SolutionStored(`PalletElectionProviderMultiPhaseElectionCompute`, `Option<AccountId32>`, `bool`)](#solutionstoredpalletelectionprovidermultiphaseelectioncompute-optionaccountid32-bool)\n        \n*   [fastUnstake](#fastunstake)\n    *   [BatchChecked(`Vec<u32>`)](#batchcheckedvecu32)\n        \n    *   [BatchFinished(`u32`)](#batchfinishedu32)\n        \n    *   [InternalError()](#internalerror)\n        \n    *   [Slashed(`AccountId32`, `u128`)](#slashedaccountid32-u128-2)\n        \n    *   [Unstaked(`AccountId32`, `Result<Null, SpRuntimeDispatchError>`)](#unstakedaccountid32-resultnull-spruntimedispatcherror)\n        \n*   [grandpa](#grandpa)\n    *   [NewAuthorities(`Vec<(SpConsensusGrandpaAppPublic,u64)>`)](#newauthoritiesvecspconsensusgrandpaapppublicu64)\n        \n    *   [Paused()](#paused)\n        \n    *   [Resumed()](#resumed)\n        \n*   [hrmp](#hrmp)\n    *   [ChannelClosed(`u32`, `PolkadotParachainPrimitivesHrmpChannelId`)](#channelclosedu32-polkadotparachainprimitiveshrmpchannelid)\n        \n    *   [HrmpChannelForceOpened(`u32`, `u32`, `u32`, `u32`)](#hrmpchannelforceopenedu32-u32-u32-u32)\n        \n    *   [OpenChannelAccepted(`u32`, `u32`)](#openchannelacceptedu32-u32)\n        \n    *   [OpenChannelCanceled(`u32`, `PolkadotParachainPrimitivesHrmpChannelId`)](#openchannelcanceledu32-polkadotparachainprimitiveshrmpchannelid)\n        \n    *   [OpenChannelRequested(`u32`, `u32`, `u32`, `u32`)](#openchannelrequestedu32-u32-u32-u32)\n        \n*   [identity](#identity)\n    *   [IdentityCleared(`AccountId32`, `u128`)](#identityclearedaccountid32-u128)\n        \n    *   [IdentityKilled(`AccountId32`, `u128`)](#identitykilledaccountid32-u128)\n        \n    *   [IdentitySet(`AccountId32`)](#identitysetaccountid32)\n        \n    *   [JudgementGiven(`AccountId32`, `u32`)](#judgementgivenaccountid32-u32)\n        \n    *   [JudgementRequested(`AccountId32`, `u32`)](#judgementrequestedaccountid32-u32)\n        \n    *   [JudgementUnrequested(`AccountId32`, `u32`)](#judgementunrequestedaccountid32-u32)\n        \n    *   [RegistrarAdded(`u32`)](#registraraddedu32)\n        \n    *   [SubIdentityAdded(`AccountId32`, `AccountId32`, `u128`)](#subidentityaddedaccountid32-accountid32-u128)\n        \n    *   [SubIdentityRemoved(`AccountId32`, `AccountId32`, `u128`)](#subidentityremovedaccountid32-accountid32-u128)\n        \n    *   [SubIdentityRevoked(`AccountId32`, `AccountId32`, `u128`)](#subidentityrevokedaccountid32-accountid32-u128)\n        \n*   [imOnline](#imonline)\n    *   [AllGood()](#allgood)\n        \n    *   [HeartbeatReceived(`PalletImOnlineSr25519AppSr25519Public`)](#heartbeatreceivedpalletimonlinesr25519appsr25519public)\n        \n    *   [SomeOffline(`Vec<(AccountId32,PalletStakingExposure)>`)](#someofflinevecaccountid32palletstakingexposure)\n        \n*   [indices](#indices)\n    *   [IndexAssigned(`AccountId32`, `u32`)](#indexassignedaccountid32-u32)\n        \n    *   [IndexFreed(`u32`)](#indexfreedu32)\n        \n    *   [IndexFrozen(`u32`, `AccountId32`)](#indexfrozenu32-accountid32)\n        \n*   [messageQueue](#messagequeue)\n    *   [OverweightEnqueued(`[u8;32]`, `PolkadotRuntimeParachainsInclusionAggregateMessageOrigin`, `u32`, `u32`)](#overweightenqueuedu832-polkadotruntimeparachainsinclusionaggregatemessageorigin-u32-u32)\n        \n    *   [PageReaped(`PolkadotRuntimeParachainsInclusionAggregateMessageOrigin`, `u32`)](#pagereapedpolkadotruntimeparachainsinclusionaggregatemessageorigin-u32)\n        \n    *   [Processed(`[u8;32]`, `PolkadotRuntimeParachainsInclusionAggregateMessageOrigin`, `SpWeightsWeightV2Weight`, `bool`)](#processedu832-polkadotruntimeparachainsinclusionaggregatemessageorigin-spweightsweightv2weight-bool)\n        \n    *   [ProcessingFailed(`[u8;32]`, `PolkadotRuntimeParachainsInclusionAggregateMessageOrigin`, `FrameSupportMessagesProcessMessageError`)](#processingfailedu832-polkadotruntimeparachainsinclusionaggregatemessageorigin-framesupportmessagesprocessmessageerror)\n        \n*   [multisig](#multisig)\n    *   [MultisigApproval(`AccountId32`, `PalletMultisigTimepoint`, `AccountId32`, `[u8;32]`)](#multisigapprovalaccountid32-palletmultisigtimepoint-accountid32-u832)\n        \n    *   [MultisigCancelled(`AccountId32`, `PalletMultisigTimepoint`, `AccountId32`, `[u8;32]`)](#multisigcancelledaccountid32-palletmultisigtimepoint-accountid32-u832)\n        \n    *   [MultisigExecuted(`AccountId32`, `PalletMultisigTimepoint`, `AccountId32`, `[u8;32]`, `Result<Null, SpRuntimeDispatchError>`)](#multisigexecutedaccountid32-palletmultisigtimepoint-accountid32-u832-resultnull-spruntimedispatcherror)\n        \n    *   [NewMultisig(`AccountId32`, `AccountId32`, `[u8;32]`)](#newmultisigaccountid32-accountid32-u832)\n        \n*   [nominationPools](#nominationpools)\n    *   [Bonded(`AccountId32`, `u32`, `u128`, `bool`)](#bondedaccountid32-u32-u128-bool)\n        \n    *   [Created(`AccountId32`, `u32`)](#createdaccountid32-u32)\n        \n    *   [Destroyed(`u32`)](#destroyedu32)\n        \n    *   [MemberRemoved(`u32`, `AccountId32`)](#memberremovedu32-accountid32)\n        \n    *   [PaidOut(`AccountId32`, `u32`, `u128`)](#paidoutaccountid32-u32-u128)\n        \n    *   [PoolCommissionChangeRateUpdated(`u32`, `PalletNominationPoolsCommissionChangeRate`)](#poolcommissionchangerateupdatedu32-palletnominationpoolscommissionchangerate)\n        \n    *   [PoolCommissionClaimed(`u32`, `u128`)](#poolcommissionclaimedu32-u128)\n        \n    *   [PoolCommissionUpdated(`u32`, `Option<(Perbill,AccountId32)>`)](#poolcommissionupdatedu32-optionperbillaccountid32)\n        \n    *   [PoolMaxCommissionUpdated(`u32`, `Perbill`)](#poolmaxcommissionupdatedu32-perbill)\n        \n    *   [PoolSlashed(`u32`, `u128`)](#poolslashedu32-u128)\n        \n    *   [RolesUpdated(`Option<AccountId32>`, `Option<AccountId32>`, `Option<AccountId32>`)](#rolesupdatedoptionaccountid32-optionaccountid32-optionaccountid32)\n        \n    *   [StateChanged(`u32`, `PalletNominationPoolsPoolState`)](#statechangedu32-palletnominationpoolspoolstate)\n        \n    *   [Unbonded(`AccountId32`, `u32`, `u128`, `u128`, `u32`)](#unbondedaccountid32-u32-u128-u128-u32)\n        \n    *   [UnbondingPoolSlashed(`u32`, `u32`, `u128`)](#unbondingpoolslashedu32-u32-u128)\n        \n    *   [Withdrawn(`AccountId32`, `u32`, `u128`, `u128`)](#withdrawnaccountid32-u32-u128-u128)\n        \n*   [offences](#offences)\n    *   [Offence(`[u8;16]`, `Bytes`)](#offenceu816-bytes)\n        \n*   [paraInclusion](#parainclusion)\n    *   [CandidateBacked(`PolkadotPrimitivesV5CandidateReceipt`, `Bytes`, `u32`, `u32`)](#candidatebackedpolkadotprimitivesv5candidatereceipt-bytes-u32-u32)\n        \n    *   [CandidateIncluded(`PolkadotPrimitivesV5CandidateReceipt`, `Bytes`, `u32`, `u32`)](#candidateincludedpolkadotprimitivesv5candidatereceipt-bytes-u32-u32)\n        \n    *   [CandidateTimedOut(`PolkadotPrimitivesV5CandidateReceipt`, `Bytes`, `u32`)](#candidatetimedoutpolkadotprimitivesv5candidatereceipt-bytes-u32)\n        \n    *   [UpwardMessagesReceived(`u32`, `u32`)](#upwardmessagesreceivedu32-u32)\n        \n*   [paras](#paras)\n    *   [ActionQueued(`u32`, `u32`)](#actionqueuedu32-u32)\n        \n    *   [CodeUpgradeScheduled(`u32`)](#codeupgradescheduledu32)\n        \n    *   [CurrentCodeUpdated(`u32`)](#currentcodeupdatedu32)\n        \n    *   [CurrentHeadUpdated(`u32`)](#currentheadupdatedu32)\n        \n    *   [NewHeadNoted(`u32`)](#newheadnotedu32)\n        \n    *   [PvfCheckAccepted(`H256`, `u32`)](#pvfcheckacceptedh256-u32)\n        \n    *   [PvfCheckRejected(`H256`, `u32`)](#pvfcheckrejectedh256-u32)\n        \n    *   [PvfCheckStarted(`H256`, `u32`)](#pvfcheckstartedh256-u32)\n        \n*   [parasDisputes](#parasdisputes)\n    *   [DisputeConcluded(`H256`, `PolkadotRuntimeParachainsDisputesDisputeResult`)](#disputeconcludedh256-polkadotruntimeparachainsdisputesdisputeresult)\n        \n    *   [DisputeInitiated(`H256`, `PolkadotRuntimeParachainsDisputesDisputeLocation`)](#disputeinitiatedh256-polkadotruntimeparachainsdisputesdisputelocation)\n        \n    *   [Revert(`u32`)](#revertu32)\n        \n*   [preimage](#preimage)\n    *   [Cleared(`H256`)](#clearedh256)\n        \n    *   [Noted(`H256`)](#notedh256)\n        \n    *   [Requested(`H256`)](#requestedh256)\n        \n*   [proxy](#proxy)\n    *   [Announced(`AccountId32`, `AccountId32`, `H256`)](#announcedaccountid32-accountid32-h256)\n        \n    *   [ProxyAdded(`AccountId32`, `AccountId32`, `PolkadotRuntimeProxyType`, `u32`)](#proxyaddedaccountid32-accountid32-polkadotruntimeproxytype-u32)\n        \n    *   [ProxyExecuted(`Result<Null, SpRuntimeDispatchError>`)](#proxyexecutedresultnull-spruntimedispatcherror)\n        \n    *   [ProxyRemoved(`AccountId32`, `AccountId32`, `PolkadotRuntimeProxyType`, `u32`)](#proxyremovedaccountid32-accountid32-polkadotruntimeproxytype-u32)\n        \n    *   [PureCreated(`AccountId32`, `AccountId32`, `PolkadotRuntimeProxyType`, `u16`)](#purecreatedaccountid32-accountid32-polkadotruntimeproxytype-u16)\n        \n*   [referenda](#referenda)\n    *   [Approved(`u32`)](#approvedu32)\n        \n    *   [Cancelled(`u32`, `PalletConvictionVotingTally`)](#cancelledu32-palletconvictionvotingtally)\n        \n    *   [ConfirmAborted(`u32`)](#confirmabortedu32)\n        \n    *   [Confirmed(`u32`, `PalletConvictionVotingTally`)](#confirmedu32-palletconvictionvotingtally)\n        \n    *   [ConfirmStarted(`u32`)](#confirmstartedu32)\n        \n    *   [DecisionDepositPlaced(`u32`, `AccountId32`, `u128`)](#decisiondepositplacedu32-accountid32-u128)\n        \n    *   [DecisionDepositRefunded(`u32`, `AccountId32`, `u128`)](#decisiondepositrefundedu32-accountid32-u128)\n        \n    *   [DecisionStarted(`u32`, `u16`, `FrameSupportPreimagesBounded`, `PalletConvictionVotingTally`)](#decisionstartedu32-u16-framesupportpreimagesbounded-palletconvictionvotingtally)\n        \n    *   [DepositSlashed(`AccountId32`, `u128`)](#depositslashedaccountid32-u128)\n        \n    *   [Killed(`u32`, `PalletConvictionVotingTally`)](#killedu32-palletconvictionvotingtally)\n        \n    *   [MetadataCleared(`u32`, `H256`)](#metadataclearedu32-h256)\n        \n    *   [MetadataSet(`u32`, `H256`)](#metadatasetu32-h256)\n        \n    *   [Rejected(`u32`, `PalletConvictionVotingTally`)](#rejectedu32-palletconvictionvotingtally)\n        \n    *   [SubmissionDepositRefunded(`u32`, `AccountId32`, `u128`)](#submissiondepositrefundedu32-accountid32-u128)\n        \n    *   [Submitted(`u32`, `u16`, `FrameSupportPreimagesBounded`)](#submittedu32-u16-framesupportpreimagesbounded)\n        \n    *   [TimedOut(`u32`, `PalletConvictionVotingTally`)](#timedoutu32-palletconvictionvotingtally)\n        \n*   [registrar](#registrar)\n    *   [Deregistered(`u32`)](#deregisteredu32)\n        \n    *   [Registered(`u32`, `AccountId32`)](#registeredu32-accountid32)\n        \n    *   [Reserved(`u32`, `AccountId32`)](#reservedu32-accountid32)\n        \n    *   [Swapped(`u32`, `u32`)](#swappedu32-u32)\n        \n*   [scheduler](#scheduler)\n    *   [CallUnavailable(`(u32,u32)`, `Option<[u8;32]>`)](#callunavailableu32u32-optionu832)\n        \n    *   [Canceled(`u32`, `u32`)](#canceledu32-u32-1)\n        \n    *   [Dispatched(`(u32,u32)`, `Option<[u8;32]>`, `Result<Null, SpRuntimeDispatchError>`)](#dispatchedu32u32-optionu832-resultnull-spruntimedispatcherror)\n        \n    *   [PeriodicFailed(`(u32,u32)`, `Option<[u8;32]>`)](#periodicfailedu32u32-optionu832)\n        \n    *   [PermanentlyOverweight(`(u32,u32)`, `Option<[u8;32]>`)](#permanentlyoverweightu32u32-optionu832)\n        \n    *   [Scheduled(`u32`, `u32`)](#scheduledu32-u32)\n        \n*   [session](#session)\n    *   [NewSession(`u32`)](#newsessionu32)\n        \n*   [slots](#slots)\n    *   [Leased(`u32`, `AccountId32`, `u32`, `u32`, `u128`, `u128`)](#leasedu32-accountid32-u32-u32-u128-u128)\n        \n    *   [NewLeasePeriod(`u32`)](#newleaseperiodu32)\n        \n*   [staking](#staking)\n    *   [Bonded(`AccountId32`, `u128`)](#bondedaccountid32-u128)\n        \n    *   [Chilled(`AccountId32`)](#chilledaccountid32)\n        \n    *   [EraPaid(`u32`, `u128`, `u128`)](#erapaidu32-u128-u128)\n        \n    *   [ForceEra(`PalletStakingForcing`)](#forceerapalletstakingforcing)\n        \n    *   [Kicked(`AccountId32`, `AccountId32`)](#kickedaccountid32-accountid32)\n        \n    *   [OldSlashingReportDiscarded(`u32`)](#oldslashingreportdiscardedu32)\n        \n    *   [PayoutStarted(`u32`, `AccountId32`)](#payoutstartedu32-accountid32)\n        \n    *   [Rewarded(`AccountId32`, `u128`)](#rewardedaccountid32-u128-1)\n        \n    *   [Slashed(`AccountId32`, `u128`)](#slashedaccountid32-u128-3)\n        \n    *   [SlashReported(`AccountId32`, `Perbill`, `u32`)](#slashreportedaccountid32-perbill-u32)\n        \n    *   [SnapshotTargetsSizeExceeded(`u32`)](#snapshottargetssizeexceededu32)\n        \n    *   [SnapshotVotersSizeExceeded(`u32`)](#snapshotvoterssizeexceededu32)\n        \n    *   [StakersElected()](#stakerselected)\n        \n    *   [StakingElectionFailed()](#stakingelectionfailed)\n        \n    *   [Unbonded(`AccountId32`, `u128`)](#unbondedaccountid32-u128)\n        \n    *   [ValidatorPrefsSet(`AccountId32`, `PalletStakingValidatorPrefs`)](#validatorprefssetaccountid32-palletstakingvalidatorprefs)\n        \n    *   [Withdrawn(`AccountId32`, `u128`)](#withdrawnaccountid32-u128)\n        \n*   [system](#system)\n    *   [CodeUpdated()](#codeupdated)\n        \n    *   [ExtrinsicFailed(`SpRuntimeDispatchError`, `FrameSupportDispatchDispatchInfo`)](#extrinsicfailedspruntimedispatcherror-framesupportdispatchdispatchinfo)\n        \n    *   [ExtrinsicSuccess(`FrameSupportDispatchDispatchInfo`)](#extrinsicsuccessframesupportdispatchdispatchinfo)\n        \n    *   [KilledAccount(`AccountId32`)](#killedaccountaccountid32)\n        \n    *   [NewAccount(`AccountId32`)](#newaccountaccountid32)\n        \n    *   [Remarked(`AccountId32`, `H256`)](#remarkedaccountid32-h256)\n        \n*   [transactionPayment](#transactionpayment)\n    *   [TransactionFeePaid(`AccountId32`, `u128`, `u128`)](#transactionfeepaidaccountid32-u128-u128)\n        \n*   [treasury](#treasury)\n    *   [Awarded(`u32`, `u128`, `AccountId32`)](#awardedu32-u128-accountid32)\n        \n    *   [Burnt(`u128`)](#burntu128)\n        \n    *   [Deposit(`u128`)](#depositu128)\n        \n    *   [Proposed(`u32`)](#proposedu32)\n        \n    *   [Rejected(`u32`, `u128`)](#rejectedu32-u128)\n        \n    *   [Rollover(`u128`)](#rolloveru128)\n        \n    *   [SpendApproved(`u32`, `u128`, `AccountId32`)](#spendapprovedu32-u128-accountid32)\n        \n    *   [Spending(`u128`)](#spendingu128)\n        \n    *   [UpdatedInactive(`u128`, `u128`)](#updatedinactiveu128-u128)\n        \n*   [utility](#utility)\n    *   [BatchCompleted()](#batchcompleted)\n        \n    *   [BatchCompletedWithErrors()](#batchcompletedwitherrors)\n        \n    *   [BatchInterrupted(`u32`, `SpRuntimeDispatchError`)](#batchinterruptedu32-spruntimedispatcherror)\n        \n    *   [DispatchedAs(`Result<Null, SpRuntimeDispatchError>`)](#dispatchedasresultnull-spruntimedispatcherror)\n        \n    *   [ItemCompleted()](#itemcompleted)\n        \n    *   [ItemFailed(`SpRuntimeDispatchError`)](#itemfailedspruntimedispatcherror)\n        \n*   [vesting](#vesting)\n    *   [VestingCompleted(`AccountId32`)](#vestingcompletedaccountid32)\n        \n    *   [VestingUpdated(`AccountId32`, `u128`)](#vestingupdatedaccountid32-u128)\n        \n*   [voterList](#voterlist)\n    *   [Rebagged(`AccountId32`, `u64`, `u64`)](#rebaggedaccountid32-u64-u64)\n        \n    *   [ScoreUpdated(`AccountId32`, `u64`)](#scoreupdatedaccountid32-u64)\n        \n*   [whitelist](#whitelist)\n    *   [CallWhitelisted(`H256`)](#callwhitelistedh256)\n        \n    *   [WhitelistedCallDispatched(`H256`, `Result<FrameSupportDispatchPostDispatchInfo, SpRuntimeDispatchErrorWithPostInfo>`)](#whitelistedcalldispatchedh256-resultframesupportdispatchpostdispatchinfo-spruntimedispatcherrorwithpostinfo)\n        \n    *   [WhitelistedCallRemoved(`H256`)](#whitelistedcallremovedh256)\n        \n*   [xcmPallet](#xcmpallet)\n    *   [AssetsClaimed(`H256`, `XcmV3MultiLocation`, `XcmVersionedMultiAssets`)](#assetsclaimedh256-xcmv3multilocation-xcmversionedmultiassets)\n        \n    *   [AssetsTrapped(`H256`, `XcmV3MultiLocation`, `XcmVersionedMultiAssets`)](#assetstrappedh256-xcmv3multilocation-xcmversionedmultiassets)\n        \n    *   [Attempted(`XcmV3TraitsOutcome`)](#attemptedxcmv3traitsoutcome)\n        \n    *   [FeesPaid(`XcmV3MultiLocation`, `XcmV3MultiassetMultiAssets`)](#feespaidxcmv3multilocation-xcmv3multiassetmultiassets)\n        \n    *   [InvalidQuerier(`XcmV3MultiLocation`, `u64`, `XcmV3MultiLocation`, `Option<XcmV3MultiLocation>`)](#invalidquerierxcmv3multilocation-u64-xcmv3multilocation-optionxcmv3multilocation)\n        \n    *   [InvalidQuerierVersion(`XcmV3MultiLocation`, `u64`)](#invalidquerierversionxcmv3multilocation-u64)\n        \n    *   [InvalidResponder(`XcmV3MultiLocation`, `u64`, `Option<XcmV3MultiLocation>`)](#invalidresponderxcmv3multilocation-u64-optionxcmv3multilocation)\n        \n    *   [InvalidResponderVersion(`XcmV3MultiLocation`, `u64`)](#invalidresponderversionxcmv3multilocation-u64)\n        \n    *   [Notified(`u64`, `u8`, `u8`)](#notifiedu64-u8-u8)\n        \n    *   [NotifyDecodeFailed(`u64`, `u8`, `u8`)](#notifydecodefailedu64-u8-u8)\n        \n    *   [NotifyDispatchError(`u64`, `u8`, `u8`)](#notifydispatcherroru64-u8-u8)\n        \n    *   [NotifyOverweight(`u64`, `u8`, `u8`, `SpWeightsWeightV2Weight`, `SpWeightsWeightV2Weight`)](#notifyoverweightu64-u8-u8-spweightsweightv2weight-spweightsweightv2weight)\n        \n    *   [NotifyTargetMigrationFail(`XcmVersionedMultiLocation`, `u64`)](#notifytargetmigrationfailxcmversionedmultilocation-u64)\n        \n    *   [NotifyTargetSendFail(`XcmV3MultiLocation`, `u64`, `XcmV3TraitsError`)](#notifytargetsendfailxcmv3multilocation-u64-xcmv3traitserror)\n        \n    *   [ResponseReady(`u64`, `XcmV3Response`)](#responsereadyu64-xcmv3response)\n        \n    *   [ResponseTaken(`u64`)](#responsetakenu64)\n        \n    *   [Sent(`XcmV3MultiLocation`, `XcmV3MultiLocation`, `XcmV3Xcm`, `[u8;32]`)](#sentxcmv3multilocation-xcmv3multilocation-xcmv3xcm-u832)\n        \n    *   [SupportedVersionChanged(`XcmV3MultiLocation`, `u32`)](#supportedversionchangedxcmv3multilocation-u32)\n        \n    *   [UnexpectedResponse(`XcmV3MultiLocation`, `u64`)](#unexpectedresponsexcmv3multilocation-u64)\n        \n    *   [VersionChangeNotified(`XcmV3MultiLocation`, `u32`, `XcmV3MultiassetMultiAssets`, `[u8;32]`)](#versionchangenotifiedxcmv3multilocation-u32-xcmv3multiassetmultiassets-u832)\n        \n    *   [VersionNotifyRequested(`XcmV3MultiLocation`, `XcmV3MultiassetMultiAssets`, `[u8;32]`)](#versionnotifyrequestedxcmv3multilocation-xcmv3multiassetmultiassets-u832)\n        \n    *   [VersionNotifyStarted(`XcmV3MultiLocation`, `XcmV3MultiassetMultiAssets`, `[u8;32]`)](#versionnotifystartedxcmv3multilocation-xcmv3multiassetmultiassets-u832)\n        \n    *   [VersionNotifyUnrequested(`XcmV3MultiLocation`, `XcmV3MultiassetMultiAssets`, `[u8;32]`)](#versionnotifyunrequestedxcmv3multilocation-xcmv3multiassetmultiassets-u832)"}, {"title": null, "description": null, "source_url": "https://polkadot.js.org/docs/polkadot/extrinsics", "markdown": "[Skip to main content](#__docusaurus_skipToContent_fallback)\n\n[![polkadot{.js}](https://polkadot.js.org/docs/img/logo.svg)\\\n\\\n**polkadot{.js}**](/docs/)\n\n[Apps UI (Wallet)](https://polkadot.js.org/apps/)\n[GitHub](https://github.com/polkadot-js/docs)\n\nSearch...\n\n*   [Introduction](#)\n    \n*   [API](#)\n    \n*   [Metadata](#)\n    \n    *   [Substrate](#)\n        \n    *   [Polkadot](#)\n        \n        *   [Overview](/docs/polkadot)\n            \n        *   [Runtime](/docs/polkadot/runtime)\n            \n        *   [JSON-RPC](/docs/polkadot/rpc)\n            \n        *   [Constants](/docs/polkadot/constants)\n            \n        *   [Storage](/docs/polkadot/storage)\n            \n        *   [Extrinsics](/docs/polkadot/extrinsics)\n            \n        *   [Events](/docs/polkadot/events)\n            \n        *   [Errors](/docs/polkadot/errors)\n            \n    *   [Kusama](#)\n        \n*   [Keyring](#)\n    \n*   [Crypto Utilities](#)\n    \n*   [Contracts (API)](#)\n    \n*   [Identicon (UI)](#)\n    \n*   [Keyring (UI)](#)\n    \n*   [Extension](#)\n    \n*   [Run, Bundle, Test](#)\n    \n\n*   [](/docs/)\n    \n*   Metadata\n*   Polkadot\n*   Extrinsics\n\nOn this page\n\nExtrinsics\n==========\n\nThe following sections contain Extrinsics methods are part of the default Polkadot runtime. On the api, these are exposed via `api.tx.<module>.<method>`.\n\n(NOTE: These were generated from a static/snapshot view of a recent default Polkadot runtime. Some items may not be available in older nodes, or in any customized implementations.)\n\n*   **[auctions](#auctions)\n    **\n    \n*   **[babe](#babe)\n    **\n    \n*   **[balances](#balances)\n    **\n    \n*   **[bounties](#bounties)\n    **\n    \n*   **[childBounties](#childbounties)\n    **\n    \n*   **[claims](#claims)\n    **\n    \n*   **[configuration](#configuration)\n    **\n    \n*   **[convictionVoting](#convictionvoting)\n    **\n    \n*   **[crowdloan](#crowdloan)\n    **\n    \n*   **[electionProviderMultiPhase](#electionprovidermultiphase)\n    **\n    \n*   **[fastUnstake](#fastunstake)\n    **\n    \n*   **[grandpa](#grandpa)\n    **\n    \n*   **[hrmp](#hrmp)\n    **\n    \n*   **[identity](#identity)\n    **\n    \n*   **[imOnline](#imonline)\n    **\n    \n*   **[indices](#indices)\n    **\n    \n*   **[initializer](#initializer)\n    **\n    \n*   **[messageQueue](#messagequeue)\n    **\n    \n*   **[multisig](#multisig)\n    **\n    \n*   **[nominationPools](#nominationpools)\n    **\n    \n*   **[paraInclusion](#parainclusion)\n    **\n    \n*   **[paraInherent](#parainherent)\n    **\n    \n*   **[paras](#paras)\n    **\n    \n*   **[parasDisputes](#parasdisputes)\n    **\n    \n*   **[parasShared](#parasshared)\n    **\n    \n*   **[parasSlashing](#parasslashing)\n    **\n    \n*   **[preimage](#preimage)\n    **\n    \n*   **[proxy](#proxy)\n    **\n    \n*   **[referenda](#referenda)\n    **\n    \n*   **[registrar](#registrar)\n    **\n    \n*   **[scheduler](#scheduler)\n    **\n    \n*   **[session](#session)\n    **\n    \n*   **[slots](#slots)\n    **\n    \n*   **[staking](#staking)\n    **\n    \n*   **[system](#system)\n    **\n    \n*   **[timestamp](#timestamp)\n    **\n    \n*   **[treasury](#treasury)\n    **\n    \n*   **[utility](#utility)\n    **\n    \n*   **[vesting](#vesting)\n    **\n    \n*   **[voterList](#voterlist)\n    **\n    \n*   **[whitelist](#whitelist)\n    **\n    \n*   **[xcmPallet](#xcmpallet)\n    **\n    \n\n* * *\n\nauctions[\u200b](#auctions \"Direct link to auctions\")\n\n-------------------------------------------------\n\n### bid(para: `Compact<u32>`, auction\\_index: `Compact<u32>`, first\\_slot: `Compact<u32>`, last\\_slot: `Compact<u32>`, amount: `Compact<u128>`)[\u200b](#bidpara-compactu32-auction_index-compactu32-first_slot-compactu32-last_slot-compactu32-amount-compactu128 \"Direct link to bidpara-compactu32-auction_index-compactu32-first_slot-compactu32-last_slot-compactu32-amount-compactu128\")\n\n*   **interface**: `api.tx.auctions.bid`\n*   **summary**: See \\[`Pallet::bid`\\].\n\n### cancelAuction()[\u200b](#cancelauction \"Direct link to cancelAuction()\")\n\n*   **interface**: `api.tx.auctions.cancelAuction`\n*   **summary**: See \\[`Pallet::cancel_auction`\\].\n\n### newAuction(duration: `Compact<u32>`, lease\\_period\\_index: `Compact<u32>`)[\u200b](#newauctionduration-compactu32-lease_period_index-compactu32 \"Direct link to newauctionduration-compactu32-lease_period_index-compactu32\")\n\n*   **interface**: `api.tx.auctions.newAuction`\n*   **summary**: See \\[`Pallet::new_auction`\\].\n\n* * *\n\nbabe[\u200b](#babe \"Direct link to babe\")\n\n-------------------------------------\n\n### planConfigChange(config: `SpConsensusBabeDigestsNextConfigDescriptor`)[\u200b](#planconfigchangeconfig-spconsensusbabedigestsnextconfigdescriptor \"Direct link to planconfigchangeconfig-spconsensusbabedigestsnextconfigdescriptor\")\n\n*   **interface**: `api.tx.babe.planConfigChange`\n*   **summary**: See \\[`Pallet::plan_config_change`\\].\n\n### reportEquivocation(equivocation\\_proof: `SpConsensusSlotsEquivocationProof`, key\\_owner\\_proof: `SpSessionMembershipProof`)[\u200b](#reportequivocationequivocation_proof-spconsensusslotsequivocationproof-key_owner_proof-spsessionmembershipproof \"Direct link to reportequivocationequivocation_proof-spconsensusslotsequivocationproof-key_owner_proof-spsessionmembershipproof\")\n\n*   **interface**: `api.tx.babe.reportEquivocation`\n*   **summary**: See \\[`Pallet::report_equivocation`\\].\n\n### reportEquivocationUnsigned(equivocation\\_proof: `SpConsensusSlotsEquivocationProof`, key\\_owner\\_proof: `SpSessionMembershipProof`)[\u200b](#reportequivocationunsignedequivocation_proof-spconsensusslotsequivocationproof-key_owner_proof-spsessionmembershipproof \"Direct link to reportequivocationunsignedequivocation_proof-spconsensusslotsequivocationproof-key_owner_proof-spsessionmembershipproof\")\n\n*   **interface**: `api.tx.babe.reportEquivocationUnsigned`\n*   **summary**: See \\[`Pallet::report_equivocation_unsigned`\\].\n\n* * *\n\nbalances[\u200b](#balances \"Direct link to balances\")\n\n-------------------------------------------------\n\n### forceSetBalance(who: `MultiAddress`, new\\_free: `Compact<u128>`)[\u200b](#forcesetbalancewho-multiaddress-new_free-compactu128 \"Direct link to forcesetbalancewho-multiaddress-new_free-compactu128\")\n\n*   **interface**: `api.tx.balances.forceSetBalance`\n*   **summary**: See \\[`Pallet::force_set_balance`\\].\n\n### forceTransfer(source: `MultiAddress`, dest: `MultiAddress`, value: `Compact<u128>`)[\u200b](#forcetransfersource-multiaddress-dest-multiaddress-value-compactu128 \"Direct link to forcetransfersource-multiaddress-dest-multiaddress-value-compactu128\")\n\n*   **interface**: `api.tx.balances.forceTransfer`\n*   **summary**: See \\[`Pallet::force_transfer`\\].\n\n### forceUnreserve(who: `MultiAddress`, amount: `u128`)[\u200b](#forceunreservewho-multiaddress-amount-u128 \"Direct link to forceunreservewho-multiaddress-amount-u128\")\n\n*   **interface**: `api.tx.balances.forceUnreserve`\n*   **summary**: See \\[`Pallet::force_unreserve`\\].\n\n### setBalanceDeprecated(who: `MultiAddress`, new\\_free: `Compact<u128>`, old\\_reserved: `Compact<u128>`)[\u200b](#setbalancedeprecatedwho-multiaddress-new_free-compactu128-old_reserved-compactu128 \"Direct link to setbalancedeprecatedwho-multiaddress-new_free-compactu128-old_reserved-compactu128\")\n\n*   **interface**: `api.tx.balances.setBalanceDeprecated`\n*   **summary**: See \\[`Pallet::set_balance_deprecated`\\].\n\n### transfer(dest: `MultiAddress`, value: `Compact<u128>`)[\u200b](#transferdest-multiaddress-value-compactu128 \"Direct link to transferdest-multiaddress-value-compactu128\")\n\n*   **interface**: `api.tx.balances.transfer`\n*   **summary**: See \\[`Pallet::transfer`\\].\n\n### transferAll(dest: `MultiAddress`, keep\\_alive: `bool`)[\u200b](#transferalldest-multiaddress-keep_alive-bool \"Direct link to transferalldest-multiaddress-keep_alive-bool\")\n\n*   **interface**: `api.tx.balances.transferAll`\n*   **summary**: See \\[`Pallet::transfer_all`\\].\n\n### transferAllowDeath(dest: `MultiAddress`, value: `Compact<u128>`)[\u200b](#transferallowdeathdest-multiaddress-value-compactu128 \"Direct link to transferallowdeathdest-multiaddress-value-compactu128\")\n\n*   **interface**: `api.tx.balances.transferAllowDeath`\n*   **summary**: See \\[`Pallet::transfer_allow_death`\\].\n\n### transferKeepAlive(dest: `MultiAddress`, value: `Compact<u128>`)[\u200b](#transferkeepalivedest-multiaddress-value-compactu128 \"Direct link to transferkeepalivedest-multiaddress-value-compactu128\")\n\n*   **interface**: `api.tx.balances.transferKeepAlive`\n*   **summary**: See \\[`Pallet::transfer_keep_alive`\\].\n\n### upgradeAccounts(who: `Vec<AccountId32>`)[\u200b](#upgradeaccountswho-vecaccountid32 \"Direct link to upgradeaccountswho-vecaccountid32\")\n\n*   **interface**: `api.tx.balances.upgradeAccounts`\n*   **summary**: See \\[`Pallet::upgrade_accounts`\\].\n\n* * *\n\nbounties[\u200b](#bounties \"Direct link to bounties\")\n\n-------------------------------------------------\n\n### acceptCurator(bounty\\_id: `Compact<u32>`)[\u200b](#acceptcuratorbounty_id-compactu32 \"Direct link to acceptcuratorbounty_id-compactu32\")\n\n*   **interface**: `api.tx.bounties.acceptCurator`\n*   **summary**: See \\[`Pallet::accept_curator`\\].\n\n### approveBounty(bounty\\_id: `Compact<u32>`)[\u200b](#approvebountybounty_id-compactu32 \"Direct link to approvebountybounty_id-compactu32\")\n\n*   **interface**: `api.tx.bounties.approveBounty`\n*   **summary**: See \\[`Pallet::approve_bounty`\\].\n\n### awardBounty(bounty\\_id: `Compact<u32>`, beneficiary: `MultiAddress`)[\u200b](#awardbountybounty_id-compactu32-beneficiary-multiaddress \"Direct link to awardbountybounty_id-compactu32-beneficiary-multiaddress\")\n\n*   **interface**: `api.tx.bounties.awardBounty`\n*   **summary**: See \\[`Pallet::award_bounty`\\].\n\n### claimBounty(bounty\\_id: `Compact<u32>`)[\u200b](#claimbountybounty_id-compactu32 \"Direct link to claimbountybounty_id-compactu32\")\n\n*   **interface**: `api.tx.bounties.claimBounty`\n*   **summary**: See \\[`Pallet::claim_bounty`\\].\n\n### closeBounty(bounty\\_id: `Compact<u32>`)[\u200b](#closebountybounty_id-compactu32 \"Direct link to closebountybounty_id-compactu32\")\n\n*   **interface**: `api.tx.bounties.closeBounty`\n*   **summary**: See \\[`Pallet::close_bounty`\\].\n\n### extendBountyExpiry(bounty\\_id: `Compact<u32>`, remark: `Bytes`)[\u200b](#extendbountyexpirybounty_id-compactu32-remark-bytes \"Direct link to extendbountyexpirybounty_id-compactu32-remark-bytes\")\n\n*   **interface**: `api.tx.bounties.extendBountyExpiry`\n*   **summary**: See \\[`Pallet::extend_bounty_expiry`\\].\n\n### proposeBounty(value: `Compact<u128>`, description: `Bytes`)[\u200b](#proposebountyvalue-compactu128-description-bytes \"Direct link to proposebountyvalue-compactu128-description-bytes\")\n\n*   **interface**: `api.tx.bounties.proposeBounty`\n*   **summary**: See \\[`Pallet::propose_bounty`\\].\n\n### proposeCurator(bounty\\_id: `Compact<u32>`, curator: `MultiAddress`, fee: `Compact<u128>`)[\u200b](#proposecuratorbounty_id-compactu32-curator-multiaddress-fee-compactu128 \"Direct link to proposecuratorbounty_id-compactu32-curator-multiaddress-fee-compactu128\")\n\n*   **interface**: `api.tx.bounties.proposeCurator`\n*   **summary**: See \\[`Pallet::propose_curator`\\].\n\n### unassignCurator(bounty\\_id: `Compact<u32>`)[\u200b](#unassigncuratorbounty_id-compactu32 \"Direct link to unassigncuratorbounty_id-compactu32\")\n\n*   **interface**: `api.tx.bounties.unassignCurator`\n*   **summary**: See \\[`Pallet::unassign_curator`\\].\n\n* * *\n\nchildBounties[\u200b](#childbounties \"Direct link to childBounties\")\n\n----------------------------------------------------------------\n\n### acceptCurator(parent\\_bounty\\_id: `Compact<u32>`, child\\_bounty\\_id: `Compact<u32>`)[\u200b](#acceptcuratorparent_bounty_id-compactu32-child_bounty_id-compactu32 \"Direct link to acceptcuratorparent_bounty_id-compactu32-child_bounty_id-compactu32\")\n\n*   **interface**: `api.tx.childBounties.acceptCurator`\n*   **summary**: See \\[`Pallet::accept_curator`\\].\n\n### addChildBounty(parent\\_bounty\\_id: `Compact<u32>`, value: `Compact<u128>`, description: `Bytes`)[\u200b](#addchildbountyparent_bounty_id-compactu32-value-compactu128-description-bytes \"Direct link to addchildbountyparent_bounty_id-compactu32-value-compactu128-description-bytes\")\n\n*   **interface**: `api.tx.childBounties.addChildBounty`\n*   **summary**: See \\[`Pallet::add_child_bounty`\\].\n\n### awardChildBounty(parent\\_bounty\\_id: `Compact<u32>`, child\\_bounty\\_id: `Compact<u32>`, beneficiary: `MultiAddress`)[\u200b](#awardchildbountyparent_bounty_id-compactu32-child_bounty_id-compactu32-beneficiary-multiaddress \"Direct link to awardchildbountyparent_bounty_id-compactu32-child_bounty_id-compactu32-beneficiary-multiaddress\")\n\n*   **interface**: `api.tx.childBounties.awardChildBounty`\n*   **summary**: See \\[`Pallet::award_child_bounty`\\].\n\n### claimChildBounty(parent\\_bounty\\_id: `Compact<u32>`, child\\_bounty\\_id: `Compact<u32>`)[\u200b](#claimchildbountyparent_bounty_id-compactu32-child_bounty_id-compactu32 \"Direct link to claimchildbountyparent_bounty_id-compactu32-child_bounty_id-compactu32\")\n\n*   **interface**: `api.tx.childBounties.claimChildBounty`\n*   **summary**: See \\[`Pallet::claim_child_bounty`\\].\n\n### closeChildBounty(parent\\_bounty\\_id: `Compact<u32>`, child\\_bounty\\_id: `Compact<u32>`)[\u200b](#closechildbountyparent_bounty_id-compactu32-child_bounty_id-compactu32 \"Direct link to closechildbountyparent_bounty_id-compactu32-child_bounty_id-compactu32\")\n\n*   **interface**: `api.tx.childBounties.closeChildBounty`\n*   **summary**: See \\[`Pallet::close_child_bounty`\\].\n\n### proposeCurator(parent\\_bounty\\_id: `Compact<u32>`, child\\_bounty\\_id: `Compact<u32>`, curator: `MultiAddress`, fee: `Compact<u128>`)[\u200b](#proposecuratorparent_bounty_id-compactu32-child_bounty_id-compactu32-curator-multiaddress-fee-compactu128 \"Direct link to proposecuratorparent_bounty_id-compactu32-child_bounty_id-compactu32-curator-multiaddress-fee-compactu128\")\n\n*   **interface**: `api.tx.childBounties.proposeCurator`\n*   **summary**: See \\[`Pallet::propose_curator`\\].\n\n### unassignCurator(parent\\_bounty\\_id: `Compact<u32>`, child\\_bounty\\_id: `Compact<u32>`)[\u200b](#unassigncuratorparent_bounty_id-compactu32-child_bounty_id-compactu32 \"Direct link to unassigncuratorparent_bounty_id-compactu32-child_bounty_id-compactu32\")\n\n*   **interface**: `api.tx.childBounties.unassignCurator`\n*   **summary**: See \\[`Pallet::unassign_curator`\\].\n\n* * *\n\nclaims[\u200b](#claims \"Direct link to claims\")\n\n-------------------------------------------\n\n### attest(statement: `Bytes`)[\u200b](#atteststatement-bytes \"Direct link to atteststatement-bytes\")\n\n*   **interface**: `api.tx.claims.attest`\n*   **summary**: See \\[`Pallet::attest`\\].\n\n### claim(dest: `AccountId32`, ethereum\\_signature: `PolkadotRuntimeCommonClaimsEcdsaSignature`)[\u200b](#claimdest-accountid32-ethereum_signature-polkadotruntimecommonclaimsecdsasignature \"Direct link to claimdest-accountid32-ethereum_signature-polkadotruntimecommonclaimsecdsasignature\")\n\n*   **interface**: `api.tx.claims.claim`\n*   **summary**: See \\[`Pallet::claim`\\].\n\n### claimAttest(dest: `AccountId32`, ethereum\\_signature: `PolkadotRuntimeCommonClaimsEcdsaSignature`, statement: `Bytes`)[\u200b](#claimattestdest-accountid32-ethereum_signature-polkadotruntimecommonclaimsecdsasignature-statement-bytes \"Direct link to claimattestdest-accountid32-ethereum_signature-polkadotruntimecommonclaimsecdsasignature-statement-bytes\")\n\n*   **interface**: `api.tx.claims.claimAttest`\n*   **summary**: See \\[`Pallet::claim_attest`\\].\n\n### mintClaim(who: `EthereumAddress`, value: `u128`, vesting\\_schedule: `Option<(u128,u128,u32)>`, statement: `Option<PolkadotRuntimeCommonClaimsStatementKind>`)[\u200b](#mintclaimwho-ethereumaddress-value-u128-vesting_schedule-optionu128u128u32-statement-optionpolkadotruntimecommonclaimsstatementkind \"Direct link to mintclaimwho-ethereumaddress-value-u128-vesting_schedule-optionu128u128u32-statement-optionpolkadotruntimecommonclaimsstatementkind\")\n\n*   **interface**: `api.tx.claims.mintClaim`\n*   **summary**: See \\[`Pallet::mint_claim`\\].\n\n### moveClaim(old: `EthereumAddress`, new: `EthereumAddress`, maybe\\_preclaim: `Option<AccountId32>`)[\u200b](#moveclaimold-ethereumaddress-new-ethereumaddress-maybe_preclaim-optionaccountid32 \"Direct link to moveclaimold-ethereumaddress-new-ethereumaddress-maybe_preclaim-optionaccountid32\")\n\n*   **interface**: `api.tx.claims.moveClaim`\n*   **summary**: See \\[`Pallet::move_claim`\\].\n\n* * *\n\nconfiguration[\u200b](#configuration \"Direct link to configuration\")\n\n----------------------------------------------------------------\n\n### setAsyncBackingParams(new: `PolkadotPrimitivesVstagingAsyncBackingParams`)[\u200b](#setasyncbackingparamsnew-polkadotprimitivesvstagingasyncbackingparams \"Direct link to setasyncbackingparamsnew-polkadotprimitivesvstagingasyncbackingparams\")\n\n*   **interface**: `api.tx.configuration.setAsyncBackingParams`\n*   **summary**: See \\[`Pallet::set_async_backing_params`\\].\n\n### setBypassConsistencyCheck(new: `bool`)[\u200b](#setbypassconsistencychecknew-bool \"Direct link to setbypassconsistencychecknew-bool\")\n\n*   **interface**: `api.tx.configuration.setBypassConsistencyCheck`\n*   **summary**: See \\[`Pallet::set_bypass_consistency_check`\\].\n\n### setCodeRetentionPeriod(new: `u32`)[\u200b](#setcoderetentionperiodnew-u32 \"Direct link to setcoderetentionperiodnew-u32\")\n\n*   **interface**: `api.tx.configuration.setCodeRetentionPeriod`\n*   **summary**: See \\[`Pallet::set_code_retention_period`\\].\n\n### setDisputePeriod(new: `u32`)[\u200b](#setdisputeperiodnew-u32 \"Direct link to setdisputeperiodnew-u32\")\n\n*   **interface**: `api.tx.configuration.setDisputePeriod`\n*   **summary**: See \\[`Pallet::set_dispute_period`\\].\n\n### setDisputePostConclusionAcceptancePeriod(new: `u32`)[\u200b](#setdisputepostconclusionacceptanceperiodnew-u32 \"Direct link to setdisputepostconclusionacceptanceperiodnew-u32\")\n\n*   **interface**: `api.tx.configuration.setDisputePostConclusionAcceptancePeriod`\n*   **summary**: See \\[`Pallet::set_dispute_post_conclusion_acceptance_period`\\].\n\n### setExecutorParams(new: `PolkadotPrimitivesV5ExecutorParams`)[\u200b](#setexecutorparamsnew-polkadotprimitivesv5executorparams \"Direct link to setexecutorparamsnew-polkadotprimitivesv5executorparams\")\n\n*   **interface**: `api.tx.configuration.setExecutorParams`\n*   **summary**: See \\[`Pallet::set_executor_params`\\].\n\n### setGroupRotationFrequency(new: `u32`)[\u200b](#setgrouprotationfrequencynew-u32 \"Direct link to setgrouprotationfrequencynew-u32\")\n\n*   **interface**: `api.tx.configuration.setGroupRotationFrequency`\n*   **summary**: See \\[`Pallet::set_group_rotation_frequency`\\].\n\n### setHrmpChannelMaxCapacity(new: `u32`)[\u200b](#sethrmpchannelmaxcapacitynew-u32 \"Direct link to sethrmpchannelmaxcapacitynew-u32\")\n\n*   **interface**: `api.tx.configuration.setHrmpChannelMaxCapacity`\n*   **summary**: See \\[`Pallet::set_hrmp_channel_max_capacity`\\].\n\n### setHrmpChannelMaxMessageSize(new: `u32`)[\u200b](#sethrmpchannelmaxmessagesizenew-u32 \"Direct link to sethrmpchannelmaxmessagesizenew-u32\")\n\n*   **interface**: `api.tx.configuration.setHrmpChannelMaxMessageSize`\n*   **summary**: See \\[`Pallet::set_hrmp_channel_max_message_size`\\].\n\n### setHrmpChannelMaxTotalSize(new: `u32`)[\u200b](#sethrmpchannelmaxtotalsizenew-u32 \"Direct link to sethrmpchannelmaxtotalsizenew-u32\")\n\n*   **interface**: `api.tx.configuration.setHrmpChannelMaxTotalSize`\n*   **summary**: See \\[`Pallet::set_hrmp_channel_max_total_size`\\].\n\n### setHrmpMaxMessageNumPerCandidate(new: `u32`)[\u200b](#sethrmpmaxmessagenumpercandidatenew-u32 \"Direct link to sethrmpmaxmessagenumpercandidatenew-u32\")\n\n*   **interface**: `api.tx.configuration.setHrmpMaxMessageNumPerCandidate`\n*   **summary**: See \\[`Pallet::set_hrmp_max_message_num_per_candidate`\\].\n\n### setHrmpMaxParachainInboundChannels(new: `u32`)[\u200b](#sethrmpmaxparachaininboundchannelsnew-u32 \"Direct link to sethrmpmaxparachaininboundchannelsnew-u32\")\n\n*   **interface**: `api.tx.configuration.setHrmpMaxParachainInboundChannels`\n*   **summary**: See \\[`Pallet::set_hrmp_max_parachain_inbound_channels`\\].\n\n### setHrmpMaxParachainOutboundChannels(new: `u32`)[\u200b](#sethrmpmaxparachainoutboundchannelsnew-u32 \"Direct link to sethrmpmaxparachainoutboundchannelsnew-u32\")\n\n*   **interface**: `api.tx.configuration.setHrmpMaxParachainOutboundChannels`\n*   **summary**: See \\[`Pallet::set_hrmp_max_parachain_outbound_channels`\\].\n\n### setHrmpOpenRequestTtl(new: `u32`)[\u200b](#sethrmpopenrequestttlnew-u32 \"Direct link to sethrmpopenrequestttlnew-u32\")\n\n*   **interface**: `api.tx.configuration.setHrmpOpenRequestTtl`\n*   **summary**: See \\[`Pallet::set_hrmp_open_request_ttl`\\].\n\n### setHrmpRecipientDeposit(new: `u128`)[\u200b](#sethrmprecipientdepositnew-u128 \"Direct link to sethrmprecipientdepositnew-u128\")\n\n*   **interface**: `api.tx.configuration.setHrmpRecipientDeposit`\n*   **summary**: See \\[`Pallet::set_hrmp_recipient_deposit`\\].\n\n### setHrmpSenderDeposit(new: `u128`)[\u200b](#sethrmpsenderdepositnew-u128 \"Direct link to sethrmpsenderdepositnew-u128\")\n\n*   **interface**: `api.tx.configuration.setHrmpSenderDeposit`\n*   **summary**: See \\[`Pallet::set_hrmp_sender_deposit`\\].\n\n### setMaxCodeSize(new: `u32`)[\u200b](#setmaxcodesizenew-u32 \"Direct link to setmaxcodesizenew-u32\")\n\n*   **interface**: `api.tx.configuration.setMaxCodeSize`\n*   **summary**: See \\[`Pallet::set_max_code_size`\\].\n\n### setMaxDownwardMessageSize(new: `u32`)[\u200b](#setmaxdownwardmessagesizenew-u32 \"Direct link to setmaxdownwardmessagesizenew-u32\")\n\n*   **interface**: `api.tx.configuration.setMaxDownwardMessageSize`\n*   **summary**: See \\[`Pallet::set_max_downward_message_size`\\].\n\n### setMaxHeadDataSize(new: `u32`)[\u200b](#setmaxheaddatasizenew-u32 \"Direct link to setmaxheaddatasizenew-u32\")\n\n*   **interface**: `api.tx.configuration.setMaxHeadDataSize`\n*   **summary**: See \\[`Pallet::set_max_head_data_size`\\].\n\n### setMaxPovSize(new: `u32`)[\u200b](#setmaxpovsizenew-u32 \"Direct link to setmaxpovsizenew-u32\")\n\n*   **interface**: `api.tx.configuration.setMaxPovSize`\n*   **summary**: See \\[`Pallet::set_max_pov_size`\\].\n\n### setMaxUpwardMessageNumPerCandidate(new: `u32`)[\u200b](#setmaxupwardmessagenumpercandidatenew-u32 \"Direct link to setmaxupwardmessagenumpercandidatenew-u32\")\n\n*   **interface**: `api.tx.configuration.setMaxUpwardMessageNumPerCandidate`\n*   **summary**: See \\[`Pallet::set_max_upward_message_num_per_candidate`\\].\n\n### setMaxUpwardMessageSize(new: `u32`)[\u200b](#setmaxupwardmessagesizenew-u32 \"Direct link to setmaxupwardmessagesizenew-u32\")\n\n*   **interface**: `api.tx.configuration.setMaxUpwardMessageSize`\n*   **summary**: See \\[`Pallet::set_max_upward_message_size`\\].\n\n### setMaxUpwardQueueCount(new: `u32`)[\u200b](#setmaxupwardqueuecountnew-u32 \"Direct link to setmaxupwardqueuecountnew-u32\")\n\n*   **interface**: `api.tx.configuration.setMaxUpwardQueueCount`\n*   **summary**: See \\[`Pallet::set_max_upward_queue_count`\\].\n\n### setMaxUpwardQueueSize(new: `u32`)[\u200b](#setmaxupwardqueuesizenew-u32 \"Direct link to setmaxupwardqueuesizenew-u32\")\n\n*   **interface**: `api.tx.configuration.setMaxUpwardQueueSize`\n*   **summary**: See \\[`Pallet::set_max_upward_queue_size`\\].\n\n### setMaxValidators(new: `Option<u32>`)[\u200b](#setmaxvalidatorsnew-optionu32 \"Direct link to setmaxvalidatorsnew-optionu32\")\n\n*   **interface**: `api.tx.configuration.setMaxValidators`\n*   **summary**: See \\[`Pallet::set_max_validators`\\].\n\n### setMaxValidatorsPerCore(new: `Option<u32>`)[\u200b](#setmaxvalidatorspercorenew-optionu32 \"Direct link to setmaxvalidatorspercorenew-optionu32\")\n\n*   **interface**: `api.tx.configuration.setMaxValidatorsPerCore`\n*   **summary**: See \\[`Pallet::set_max_validators_per_core`\\].\n\n### setMinimumValidationUpgradeDelay(new: `u32`)[\u200b](#setminimumvalidationupgradedelaynew-u32 \"Direct link to setminimumvalidationupgradedelaynew-u32\")\n\n*   **interface**: `api.tx.configuration.setMinimumValidationUpgradeDelay`\n*   **summary**: See \\[`Pallet::set_minimum_validation_upgrade_delay`\\].\n\n### setNDelayTranches(new: `u32`)[\u200b](#setndelaytranchesnew-u32 \"Direct link to setndelaytranchesnew-u32\")\n\n*   **interface**: `api.tx.configuration.setNDelayTranches`\n*   **summary**: See \\[`Pallet::set_n_delay_tranches`\\].\n\n### setNeededApprovals(new: `u32`)[\u200b](#setneededapprovalsnew-u32 \"Direct link to setneededapprovalsnew-u32\")\n\n*   **interface**: `api.tx.configuration.setNeededApprovals`\n*   **summary**: See \\[`Pallet::set_needed_approvals`\\].\n\n### setNoShowSlots(new: `u32`)[\u200b](#setnoshowslotsnew-u32 \"Direct link to setnoshowslotsnew-u32\")\n\n*   **interface**: `api.tx.configuration.setNoShowSlots`\n*   **summary**: See \\[`Pallet::set_no_show_slots`\\].\n\n### setOnDemandBaseFee(new: `u128`)[\u200b](#setondemandbasefeenew-u128 \"Direct link to setondemandbasefeenew-u128\")\n\n*   **interface**: `api.tx.configuration.setOnDemandBaseFee`\n*   **summary**: See \\[`Pallet::set_on_demand_base_fee`\\].\n\n### setOnDemandCores(new: `u32`)[\u200b](#setondemandcoresnew-u32 \"Direct link to setondemandcoresnew-u32\")\n\n*   **interface**: `api.tx.configuration.setOnDemandCores`\n*   **summary**: See \\[`Pallet::set_on_demand_cores`\\].\n\n### setOnDemandFeeVariability(new: `Perbill`)[\u200b](#setondemandfeevariabilitynew-perbill \"Direct link to setondemandfeevariabilitynew-perbill\")\n\n*   **interface**: `api.tx.configuration.setOnDemandFeeVariability`\n*   **summary**: See \\[`Pallet::set_on_demand_fee_variability`\\].\n\n### setOnDemandQueueMaxSize(new: `u32`)[\u200b](#setondemandqueuemaxsizenew-u32 \"Direct link to setondemandqueuemaxsizenew-u32\")\n\n*   **interface**: `api.tx.configuration.setOnDemandQueueMaxSize`\n*   **summary**: See \\[`Pallet::set_on_demand_queue_max_size`\\].\n\n### setOnDemandRetries(new: `u32`)[\u200b](#setondemandretriesnew-u32 \"Direct link to setondemandretriesnew-u32\")\n\n*   **interface**: `api.tx.configuration.setOnDemandRetries`\n*   **summary**: See \\[`Pallet::set_on_demand_retries`\\].\n\n### setOnDemandTargetQueueUtilization(new: `Perbill`)[\u200b](#setondemandtargetqueueutilizationnew-perbill \"Direct link to setondemandtargetqueueutilizationnew-perbill\")\n\n*   **interface**: `api.tx.configuration.setOnDemandTargetQueueUtilization`\n*   **summary**: See \\[`Pallet::set_on_demand_target_queue_utilization`\\].\n\n### setOnDemandTtl(new: `u32`)[\u200b](#setondemandttlnew-u32 \"Direct link to setondemandttlnew-u32\")\n\n*   **interface**: `api.tx.configuration.setOnDemandTtl`\n*   **summary**: See \\[`Pallet::set_on_demand_ttl`\\].\n\n### setParasAvailabilityPeriod(new: `u32`)[\u200b](#setparasavailabilityperiodnew-u32 \"Direct link to setparasavailabilityperiodnew-u32\")\n\n*   **interface**: `api.tx.configuration.setParasAvailabilityPeriod`\n*   **summary**: See \\[`Pallet::set_paras_availability_period`\\].\n\n### setPvfVotingTtl(new: `u32`)[\u200b](#setpvfvotingttlnew-u32 \"Direct link to setpvfvotingttlnew-u32\")\n\n*   **interface**: `api.tx.configuration.setPvfVotingTtl`\n*   **summary**: See \\[`Pallet::set_pvf_voting_ttl`\\].\n\n### setRelayVrfModuloSamples(new: `u32`)[\u200b](#setrelayvrfmodulosamplesnew-u32 \"Direct link to setrelayvrfmodulosamplesnew-u32\")\n\n*   **interface**: `api.tx.configuration.setRelayVrfModuloSamples`\n*   **summary**: See \\[`Pallet::set_relay_vrf_modulo_samples`\\].\n\n### setSchedulingLookahead(new: `u32`)[\u200b](#setschedulinglookaheadnew-u32 \"Direct link to setschedulinglookaheadnew-u32\")\n\n*   **interface**: `api.tx.configuration.setSchedulingLookahead`\n*   **summary**: See \\[`Pallet::set_scheduling_lookahead`\\].\n\n### setValidationUpgradeCooldown(new: `u32`)[\u200b](#setvalidationupgradecooldownnew-u32 \"Direct link to setvalidationupgradecooldownnew-u32\")\n\n*   **interface**: `api.tx.configuration.setValidationUpgradeCooldown`\n*   **summary**: See \\[`Pallet::set_validation_upgrade_cooldown`\\].\n\n### setValidationUpgradeDelay(new: `u32`)[\u200b](#setvalidationupgradedelaynew-u32 \"Direct link to setvalidationupgradedelaynew-u32\")\n\n*   **interface**: `api.tx.configuration.setValidationUpgradeDelay`\n*   **summary**: See \\[`Pallet::set_validation_upgrade_delay`\\].\n\n### setZerothDelayTrancheWidth(new: `u32`)[\u200b](#setzerothdelaytranchewidthnew-u32 \"Direct link to setzerothdelaytranchewidthnew-u32\")\n\n*   **interface**: `api.tx.configuration.setZerothDelayTrancheWidth`\n*   **summary**: See \\[`Pallet::set_zeroth_delay_tranche_width`\\].\n\n* * *\n\nconvictionVoting[\u200b](#convictionvoting \"Direct link to convictionVoting\")\n\n-------------------------------------------------------------------------\n\n### delegate(class: `u16`, to: `MultiAddress`, conviction: `PalletConvictionVotingConviction`, balance: `u128`)[\u200b](#delegateclass-u16-to-multiaddress-conviction-palletconvictionvotingconviction-balance-u128 \"Direct link to delegateclass-u16-to-multiaddress-conviction-palletconvictionvotingconviction-balance-u128\")\n\n*   **interface**: `api.tx.convictionVoting.delegate`\n*   **summary**: See \\[`Pallet::delegate`\\].\n\n### removeOtherVote(target: `MultiAddress`, class: `u16`, index: `u32`)[\u200b](#removeothervotetarget-multiaddress-class-u16-index-u32 \"Direct link to removeothervotetarget-multiaddress-class-u16-index-u32\")\n\n*   **interface**: `api.tx.convictionVoting.removeOtherVote`\n*   **summary**: See \\[`Pallet::remove_other_vote`\\].\n\n### removeVote(class: `Option<u16>`, index: `u32`)[\u200b](#removevoteclass-optionu16-index-u32 \"Direct link to removevoteclass-optionu16-index-u32\")\n\n*   **interface**: `api.tx.convictionVoting.removeVote`\n*   **summary**: See \\[`Pallet::remove_vote`\\].\n\n### undelegate(class: `u16`)[\u200b](#undelegateclass-u16 \"Direct link to undelegateclass-u16\")\n\n*   **interface**: `api.tx.convictionVoting.undelegate`\n*   **summary**: See \\[`Pallet::undelegate`\\].\n\n### unlock(class: `u16`, target: `MultiAddress`)[\u200b](#unlockclass-u16-target-multiaddress \"Direct link to unlockclass-u16-target-multiaddress\")\n\n*   **interface**: `api.tx.convictionVoting.unlock`\n*   **summary**: See \\[`Pallet::unlock`\\].\n\n### vote(poll\\_index: `Compact<u32>`, vote: `PalletConvictionVotingVoteAccountVote`)[\u200b](#votepoll_index-compactu32-vote-palletconvictionvotingvoteaccountvote \"Direct link to votepoll_index-compactu32-vote-palletconvictionvotingvoteaccountvote\")\n\n*   **interface**: `api.tx.convictionVoting.vote`\n*   **summary**: See \\[`Pallet::vote`\\].\n\n* * *\n\ncrowdloan[\u200b](#crowdloan \"Direct link to crowdloan\")\n\n----------------------------------------------------\n\n### addMemo(index: `u32`, memo: `Bytes`)[\u200b](#addmemoindex-u32-memo-bytes \"Direct link to addmemoindex-u32-memo-bytes\")\n\n*   **interface**: `api.tx.crowdloan.addMemo`\n*   **summary**: See \\[`Pallet::add_memo`\\].\n\n### contribute(index: `Compact<u32>`, value: `Compact<u128>`, signature: `Option<SpRuntimeMultiSignature>`)[\u200b](#contributeindex-compactu32-value-compactu128-signature-optionspruntimemultisignature \"Direct link to contributeindex-compactu32-value-compactu128-signature-optionspruntimemultisignature\")\n\n*   **interface**: `api.tx.crowdloan.contribute`\n*   **summary**: See \\[`Pallet::contribute`\\].\n\n### contributeAll(index: `Compact<u32>`, signature: `Option<SpRuntimeMultiSignature>`)[\u200b](#contributeallindex-compactu32-signature-optionspruntimemultisignature \"Direct link to contributeallindex-compactu32-signature-optionspruntimemultisignature\")\n\n*   **interface**: `api.tx.crowdloan.contributeAll`\n*   **summary**: See \\[`Pallet::contribute_all`\\].\n\n### create(index: `Compact<u32>`, cap: `Compact<u128>`, first\\_period: `Compact<u32>`, last\\_period: `Compact<u32>`, end: `Compact<u32>`, verifier: `Option<SpRuntimeMultiSigner>`)[\u200b](#createindex-compactu32-cap-compactu128-first_period-compactu32-last_period-compactu32-end-compactu32-verifier-optionspruntimemultisigner \"Direct link to createindex-compactu32-cap-compactu128-first_period-compactu32-last_period-compactu32-end-compactu32-verifier-optionspruntimemultisigner\")\n\n*   **interface**: `api.tx.crowdloan.create`\n*   **summary**: See \\[`Pallet::create`\\].\n\n### dissolve(index: `Compact<u32>`)[\u200b](#dissolveindex-compactu32 \"Direct link to dissolveindex-compactu32\")\n\n*   **interface**: `api.tx.crowdloan.dissolve`\n*   **summary**: See \\[`Pallet::dissolve`\\].\n\n### edit(index: `Compact<u32>`, cap: `Compact<u128>`, first\\_period: `Compact<u32>`, last\\_period: `Compact<u32>`, end: `Compact<u32>`, verifier: `Option<SpRuntimeMultiSigner>`)[\u200b](#editindex-compactu32-cap-compactu128-first_period-compactu32-last_period-compactu32-end-compactu32-verifier-optionspruntimemultisigner \"Direct link to editindex-compactu32-cap-compactu128-first_period-compactu32-last_period-compactu32-end-compactu32-verifier-optionspruntimemultisigner\")\n\n*   **interface**: `api.tx.crowdloan.edit`\n*   **summary**: See \\[`Pallet::edit`\\].\n\n### poke(index: `u32`)[\u200b](#pokeindex-u32 \"Direct link to pokeindex-u32\")\n\n*   **interface**: `api.tx.crowdloan.poke`\n*   **summary**: See \\[`Pallet::poke`\\].\n\n### refund(index: `Compact<u32>`)[\u200b](#refundindex-compactu32 \"Direct link to refundindex-compactu32\")\n\n*   **interface**: `api.tx.crowdloan.refund`\n*   **summary**: See \\[`Pallet::refund`\\].\n\n### withdraw(who: `AccountId32`, index: `Compact<u32>`)[\u200b](#withdrawwho-accountid32-index-compactu32 \"Direct link to withdrawwho-accountid32-index-compactu32\")\n\n*   **interface**: `api.tx.crowdloan.withdraw`\n*   **summary**: See \\[`Pallet::withdraw`\\].\n\n* * *\n\nelectionProviderMultiPhase[\u200b](#electionprovidermultiphase \"Direct link to electionProviderMultiPhase\")\n\n-------------------------------------------------------------------------------------------------------\n\n### governanceFallback(maybe\\_max\\_voters: `Option<u32>`, maybe\\_max\\_targets: `Option<u32>`)[\u200b](#governancefallbackmaybe_max_voters-optionu32-maybe_max_targets-optionu32 \"Direct link to governancefallbackmaybe_max_voters-optionu32-maybe_max_targets-optionu32\")\n\n*   **interface**: `api.tx.electionProviderMultiPhase.governanceFallback`\n*   **summary**: See \\[`Pallet::governance_fallback`\\].\n\n### setEmergencyElectionResult(supports: `Vec<(AccountId32,SpNposElectionsSupport)>`)[\u200b](#setemergencyelectionresultsupports-vecaccountid32spnposelectionssupport \"Direct link to setemergencyelectionresultsupports-vecaccountid32spnposelectionssupport\")\n\n*   **interface**: `api.tx.electionProviderMultiPhase.setEmergencyElectionResult`\n*   **summary**: See \\[`Pallet::set_emergency_election_result`\\].\n\n### setMinimumUntrustedScore(maybe\\_next\\_score: `Option<SpNposElectionsElectionScore>`)[\u200b](#setminimumuntrustedscoremaybe_next_score-optionspnposelectionselectionscore \"Direct link to setminimumuntrustedscoremaybe_next_score-optionspnposelectionselectionscore\")\n\n*   **interface**: `api.tx.electionProviderMultiPhase.setMinimumUntrustedScore`\n*   **summary**: See \\[`Pallet::set_minimum_untrusted_score`\\].\n\n### submit(raw\\_solution: `PalletElectionProviderMultiPhaseRawSolution`)[\u200b](#submitraw_solution-palletelectionprovidermultiphaserawsolution \"Direct link to submitraw_solution-palletelectionprovidermultiphaserawsolution\")\n\n*   **interface**: `api.tx.electionProviderMultiPhase.submit`\n*   **summary**: See \\[`Pallet::submit`\\].\n\n### submitUnsigned(raw\\_solution: `PalletElectionProviderMultiPhaseRawSolution`, witness: `PalletElectionProviderMultiPhaseSolutionOrSnapshotSize`)[\u200b](#submitunsignedraw_solution-palletelectionprovidermultiphaserawsolution-witness-palletelectionprovidermultiphasesolutionorsnapshotsize \"Direct link to submitunsignedraw_solution-palletelectionprovidermultiphaserawsolution-witness-palletelectionprovidermultiphasesolutionorsnapshotsize\")\n\n*   **interface**: `api.tx.electionProviderMultiPhase.submitUnsigned`\n*   **summary**: See \\[`Pallet::submit_unsigned`\\].\n\n* * *\n\nfastUnstake[\u200b](#fastunstake \"Direct link to fastUnstake\")\n\n----------------------------------------------------------\n\n### control(eras\\_to\\_check: `u32`)[\u200b](#controleras_to_check-u32 \"Direct link to controleras_to_check-u32\")\n\n*   **interface**: `api.tx.fastUnstake.control`\n*   **summary**: See \\[`Pallet::control`\\].\n\n### deregister()[\u200b](#deregister \"Direct link to deregister()\")\n\n*   **interface**: `api.tx.fastUnstake.deregister`\n*   **summary**: See \\[`Pallet::deregister`\\].\n\n### registerFastUnstake()[\u200b](#registerfastunstake \"Direct link to registerFastUnstake()\")\n\n*   **interface**: `api.tx.fastUnstake.registerFastUnstake`\n*   **summary**: See \\[`Pallet::register_fast_unstake`\\].\n\n* * *\n\ngrandpa[\u200b](#grandpa \"Direct link to grandpa\")\n\n----------------------------------------------\n\n### noteStalled(delay: `u32`, best\\_finalized\\_block\\_number: `u32`)[\u200b](#notestalleddelay-u32-best_finalized_block_number-u32 \"Direct link to notestalleddelay-u32-best_finalized_block_number-u32\")\n\n*   **interface**: `api.tx.grandpa.noteStalled`\n*   **summary**: See \\[`Pallet::note_stalled`\\].\n\n### reportEquivocation(equivocation\\_proof: `SpConsensusGrandpaEquivocationProof`, key\\_owner\\_proof: `SpSessionMembershipProof`)[\u200b](#reportequivocationequivocation_proof-spconsensusgrandpaequivocationproof-key_owner_proof-spsessionmembershipproof \"Direct link to reportequivocationequivocation_proof-spconsensusgrandpaequivocationproof-key_owner_proof-spsessionmembershipproof\")\n\n*   **interface**: `api.tx.grandpa.reportEquivocation`\n*   **summary**: See \\[`Pallet::report_equivocation`\\].\n\n### reportEquivocationUnsigned(equivocation\\_proof: `SpConsensusGrandpaEquivocationProof`, key\\_owner\\_proof: `SpSessionMembershipProof`)[\u200b](#reportequivocationunsignedequivocation_proof-spconsensusgrandpaequivocationproof-key_owner_proof-spsessionmembershipproof \"Direct link to reportequivocationunsignedequivocation_proof-spconsensusgrandpaequivocationproof-key_owner_proof-spsessionmembershipproof\")\n\n*   **interface**: `api.tx.grandpa.reportEquivocationUnsigned`\n*   **summary**: See \\[`Pallet::report_equivocation_unsigned`\\].\n\n* * *\n\nhrmp[\u200b](#hrmp \"Direct link to hrmp\")\n\n-------------------------------------\n\n### forceCleanHrmp(para: `u32`, inbound: `u32`, outbound: `u32`)[\u200b](#forcecleanhrmppara-u32-inbound-u32-outbound-u32 \"Direct link to forcecleanhrmppara-u32-inbound-u32-outbound-u32\")\n\n*   **interface**: `api.tx.hrmp.forceCleanHrmp`\n*   **summary**: See \\[`Pallet::force_clean_hrmp`\\].\n\n### forceOpenHrmpChannel(sender: `u32`, recipient: `u32`, max\\_capacity: `u32`, max\\_message\\_size: `u32`)[\u200b](#forceopenhrmpchannelsender-u32-recipient-u32-max_capacity-u32-max_message_size-u32 \"Direct link to forceopenhrmpchannelsender-u32-recipient-u32-max_capacity-u32-max_message_size-u32\")\n\n*   **interface**: `api.tx.hrmp.forceOpenHrmpChannel`\n*   **summary**: See \\[`Pallet::force_open_hrmp_channel`\\].\n\n### forceProcessHrmpClose(channels: `u32`)[\u200b](#forceprocesshrmpclosechannels-u32 \"Direct link to forceprocesshrmpclosechannels-u32\")\n\n*   **interface**: `api.tx.hrmp.forceProcessHrmpClose`\n*   **summary**: See \\[`Pallet::force_process_hrmp_close`\\].\n\n### forceProcessHrmpOpen(channels: `u32`)[\u200b](#forceprocesshrmpopenchannels-u32 \"Direct link to forceprocesshrmpopenchannels-u32\")\n\n*   **interface**: `api.tx.hrmp.forceProcessHrmpOpen`\n*   **summary**: See \\[`Pallet::force_process_hrmp_open`\\].\n\n### hrmpAcceptOpenChannel(sender: `u32`)[\u200b](#hrmpacceptopenchannelsender-u32 \"Direct link to hrmpacceptopenchannelsender-u32\")\n\n*   **interface**: `api.tx.hrmp.hrmpAcceptOpenChannel`\n*   **summary**: See \\[`Pallet::hrmp_accept_open_channel`\\].\n\n### hrmpCancelOpenRequest(channel\\_id: `PolkadotParachainPrimitivesHrmpChannelId`, open\\_requests: `u32`)[\u200b](#hrmpcancelopenrequestchannel_id-polkadotparachainprimitiveshrmpchannelid-open_requests-u32 \"Direct link to hrmpcancelopenrequestchannel_id-polkadotparachainprimitiveshrmpchannelid-open_requests-u32\")\n\n*   **interface**: `api.tx.hrmp.hrmpCancelOpenRequest`\n*   **summary**: See \\[`Pallet::hrmp_cancel_open_request`\\].\n\n### hrmpCloseChannel(channel\\_id: `PolkadotParachainPrimitivesHrmpChannelId`)[\u200b](#hrmpclosechannelchannel_id-polkadotparachainprimitiveshrmpchannelid \"Direct link to hrmpclosechannelchannel_id-polkadotparachainprimitiveshrmpchannelid\")\n\n*   **interface**: `api.tx.hrmp.hrmpCloseChannel`\n*   **summary**: See \\[`Pallet::hrmp_close_channel`\\].\n\n### hrmpInitOpenChannel(recipient: `u32`, proposed\\_max\\_capacity: `u32`, proposed\\_max\\_message\\_size: `u32`)[\u200b](#hrmpinitopenchannelrecipient-u32-proposed_max_capacity-u32-proposed_max_message_size-u32 \"Direct link to hrmpinitopenchannelrecipient-u32-proposed_max_capacity-u32-proposed_max_message_size-u32\")\n\n*   **interface**: `api.tx.hrmp.hrmpInitOpenChannel`\n*   **summary**: See \\[`Pallet::hrmp_init_open_channel`\\].\n\n* * *\n\nidentity[\u200b](#identity \"Direct link to identity\")\n\n-------------------------------------------------\n\n### addRegistrar(account: `MultiAddress`)[\u200b](#addregistraraccount-multiaddress \"Direct link to addregistraraccount-multiaddress\")\n\n*   **interface**: `api.tx.identity.addRegistrar`\n*   **summary**: See \\[`Pallet::add_registrar`\\].\n\n### addSub(sub: `MultiAddress`, data: `Data`)[\u200b](#addsubsub-multiaddress-data-data \"Direct link to addsubsub-multiaddress-data-data\")\n\n*   **interface**: `api.tx.identity.addSub`\n*   **summary**: See \\[`Pallet::add_sub`\\].\n\n### cancelRequest(reg\\_index: `u32`)[\u200b](#cancelrequestreg_index-u32 \"Direct link to cancelrequestreg_index-u32\")\n\n*   **interface**: `api.tx.identity.cancelRequest`\n*   **summary**: See \\[`Pallet::cancel_request`\\].\n\n### clearIdentity()[\u200b](#clearidentity \"Direct link to clearIdentity()\")\n\n*   **interface**: `api.tx.identity.clearIdentity`\n*   **summary**: See \\[`Pallet::clear_identity`\\].\n\n### killIdentity(target: `MultiAddress`)[\u200b](#killidentitytarget-multiaddress \"Direct link to killidentitytarget-multiaddress\")\n\n*   **interface**: `api.tx.identity.killIdentity`\n*   **summary**: See \\[`Pallet::kill_identity`\\].\n\n### provideJudgement(reg\\_index: `Compact<u32>`, target: `MultiAddress`, judgement: `PalletIdentityJudgement`, identity: `H256`)[\u200b](#providejudgementreg_index-compactu32-target-multiaddress-judgement-palletidentityjudgement-identity-h256 \"Direct link to providejudgementreg_index-compactu32-target-multiaddress-judgement-palletidentityjudgement-identity-h256\")\n\n*   **interface**: `api.tx.identity.provideJudgement`\n*   **summary**: See \\[`Pallet::provide_judgement`\\].\n\n### quitSub()[\u200b](#quitsub \"Direct link to quitSub()\")\n\n*   **interface**: `api.tx.identity.quitSub`\n*   **summary**: See \\[`Pallet::quit_sub`\\].\n\n### removeSub(sub: `MultiAddress`)[\u200b](#removesubsub-multiaddress \"Direct link to removesubsub-multiaddress\")\n\n*   **interface**: `api.tx.identity.removeSub`\n*   **summary**: See \\[`Pallet::remove_sub`\\].\n\n### renameSub(sub: `MultiAddress`, data: `Data`)[\u200b](#renamesubsub-multiaddress-data-data \"Direct link to renamesubsub-multiaddress-data-data\")\n\n*   **interface**: `api.tx.identity.renameSub`\n*   **summary**: See \\[`Pallet::rename_sub`\\].\n\n### requestJudgement(reg\\_index: `Compact<u32>`, max\\_fee: `Compact<u128>`)[\u200b](#requestjudgementreg_index-compactu32-max_fee-compactu128 \"Direct link to requestjudgementreg_index-compactu32-max_fee-compactu128\")\n\n*   **interface**: `api.tx.identity.requestJudgement`\n*   **summary**: See \\[`Pallet::request_judgement`\\].\n\n### setAccountId(index: `Compact<u32>`, new: `MultiAddress`)[\u200b](#setaccountidindex-compactu32-new-multiaddress \"Direct link to setaccountidindex-compactu32-new-multiaddress\")\n\n*   **interface**: `api.tx.identity.setAccountId`\n*   **summary**: See \\[`Pallet::set_account_id`\\].\n\n### setFee(index: `Compact<u32>`, fee: `Compact<u128>`)[\u200b](#setfeeindex-compactu32-fee-compactu128 \"Direct link to setfeeindex-compactu32-fee-compactu128\")\n\n*   **interface**: `api.tx.identity.setFee`\n*   **summary**: See \\[`Pallet::set_fee`\\].\n\n### setFields(index: `Compact<u32>`, fields: `PalletIdentityBitFlags`)[\u200b](#setfieldsindex-compactu32-fields-palletidentitybitflags \"Direct link to setfieldsindex-compactu32-fields-palletidentitybitflags\")\n\n*   **interface**: `api.tx.identity.setFields`\n*   **summary**: See \\[`Pallet::set_fields`\\].\n\n### setIdentity(info: `PalletIdentityIdentityInfo`)[\u200b](#setidentityinfo-palletidentityidentityinfo \"Direct link to setidentityinfo-palletidentityidentityinfo\")\n\n*   **interface**: `api.tx.identity.setIdentity`\n*   **summary**: See \\[`Pallet::set_identity`\\].\n\n### setSubs(subs: `Vec<(AccountId32,Data)>`)[\u200b](#setsubssubs-vecaccountid32data \"Direct link to setsubssubs-vecaccountid32data\")\n\n*   **interface**: `api.tx.identity.setSubs`\n*   **summary**: See \\[`Pallet::set_subs`\\].\n\n* * *\n\nimOnline[\u200b](#imonline \"Direct link to imOnline\")\n\n-------------------------------------------------\n\n### heartbeat(heartbeat: `PalletImOnlineHeartbeat`, signature: `PalletImOnlineSr25519AppSr25519Signature`)[\u200b](#heartbeatheartbeat-palletimonlineheartbeat-signature-palletimonlinesr25519appsr25519signature \"Direct link to heartbeatheartbeat-palletimonlineheartbeat-signature-palletimonlinesr25519appsr25519signature\")\n\n*   **interface**: `api.tx.imOnline.heartbeat`\n*   **summary**: See \\[`Pallet::heartbeat`\\].\n\n* * *\n\nindices[\u200b](#indices \"Direct link to indices\")\n\n----------------------------------------------\n\n### claim(index: `u32`)[\u200b](#claimindex-u32 \"Direct link to claimindex-u32\")\n\n*   **interface**: `api.tx.indices.claim`\n*   **summary**: See \\[`Pallet::claim`\\].\n\n### forceTransfer(new: `MultiAddress`, index: `u32`, freeze: `bool`)[\u200b](#forcetransfernew-multiaddress-index-u32-freeze-bool \"Direct link to forcetransfernew-multiaddress-index-u32-freeze-bool\")\n\n*   **interface**: `api.tx.indices.forceTransfer`\n*   **summary**: See \\[`Pallet::force_transfer`\\].\n\n### free(index: `u32`)[\u200b](#freeindex-u32 \"Direct link to freeindex-u32\")\n\n*   **interface**: `api.tx.indices.free`\n*   **summary**: See \\[`Pallet::free`\\].\n\n### freeze(index: `u32`)[\u200b](#freezeindex-u32 \"Direct link to freezeindex-u32\")\n\n*   **interface**: `api.tx.indices.freeze`\n*   **summary**: See \\[`Pallet::freeze`\\].\n\n### transfer(new: `MultiAddress`, index: `u32`)[\u200b](#transfernew-multiaddress-index-u32 \"Direct link to transfernew-multiaddress-index-u32\")\n\n*   **interface**: `api.tx.indices.transfer`\n*   **summary**: See \\[`Pallet::transfer`\\].\n\n* * *\n\ninitializer[\u200b](#initializer \"Direct link to initializer\")\n\n----------------------------------------------------------\n\n### forceApprove(up\\_to: `u32`)[\u200b](#forceapproveup_to-u32 \"Direct link to forceapproveup_to-u32\")\n\n*   **interface**: `api.tx.initializer.forceApprove`\n*   **summary**: See \\[`Pallet::force_approve`\\].\n\n* * *\n\nmessageQueue[\u200b](#messagequeue \"Direct link to messageQueue\")\n\n-------------------------------------------------------------\n\n### executeOverweight(message\\_origin: `PolkadotRuntimeParachainsInclusionAggregateMessageOrigin`, page: `u32`, index: `u32`, weight\\_limit: `SpWeightsWeightV2Weight`)[\u200b](#executeoverweightmessage_origin-polkadotruntimeparachainsinclusionaggregatemessageorigin-page-u32-index-u32-weight_limit-spweightsweightv2weight \"Direct link to executeoverweightmessage_origin-polkadotruntimeparachainsinclusionaggregatemessageorigin-page-u32-index-u32-weight_limit-spweightsweightv2weight\")\n\n*   **interface**: `api.tx.messageQueue.executeOverweight`\n*   **summary**: See \\[`Pallet::execute_overweight`\\].\n\n### reapPage(message\\_origin: `PolkadotRuntimeParachainsInclusionAggregateMessageOrigin`, page\\_index: `u32`)[\u200b](#reappagemessage_origin-polkadotruntimeparachainsinclusionaggregatemessageorigin-page_index-u32 \"Direct link to reappagemessage_origin-polkadotruntimeparachainsinclusionaggregatemessageorigin-page_index-u32\")\n\n*   **interface**: `api.tx.messageQueue.reapPage`\n*   **summary**: See \\[`Pallet::reap_page`\\].\n\n* * *\n\nmultisig[\u200b](#multisig \"Direct link to multisig\")\n\n-------------------------------------------------\n\n### approveAsMulti(threshold: `u16`, other\\_signatories: `Vec<AccountId32>`, maybe\\_timepoint: `Option<PalletMultisigTimepoint>`, call\\_hash: `[u8;32]`, max\\_weight: `SpWeightsWeightV2Weight`)[\u200b](#approveasmultithreshold-u16-other_signatories-vecaccountid32-maybe_timepoint-optionpalletmultisigtimepoint-call_hash-u832-max_weight-spweightsweightv2weight \"Direct link to approveasmultithreshold-u16-other_signatories-vecaccountid32-maybe_timepoint-optionpalletmultisigtimepoint-call_hash-u832-max_weight-spweightsweightv2weight\")\n\n*   **interface**: `api.tx.multisig.approveAsMulti`\n*   **summary**: See \\[`Pallet::approve_as_multi`\\].\n\n### asMulti(threshold: `u16`, other\\_signatories: `Vec<AccountId32>`, maybe\\_timepoint: `Option<PalletMultisigTimepoint>`, call: `Call`, max\\_weight: `SpWeightsWeightV2Weight`)[\u200b](#asmultithreshold-u16-other_signatories-vecaccountid32-maybe_timepoint-optionpalletmultisigtimepoint-call-call-max_weight-spweightsweightv2weight \"Direct link to asmultithreshold-u16-other_signatories-vecaccountid32-maybe_timepoint-optionpalletmultisigtimepoint-call-call-max_weight-spweightsweightv2weight\")\n\n*   **interface**: `api.tx.multisig.asMulti`\n*   **summary**: See \\[`Pallet::as_multi`\\].\n\n### asMultiThreshold1(other\\_signatories: `Vec<AccountId32>`, call: `Call`)[\u200b](#asmultithreshold1other_signatories-vecaccountid32-call-call \"Direct link to asmultithreshold1other_signatories-vecaccountid32-call-call\")\n\n*   **interface**: `api.tx.multisig.asMultiThreshold1`\n*   **summary**: See \\[`Pallet::as_multi_threshold_1`\\].\n\n### cancelAsMulti(threshold: `u16`, other\\_signatories: `Vec<AccountId32>`, timepoint: `PalletMultisigTimepoint`, call\\_hash: `[u8;32]`)[\u200b](#cancelasmultithreshold-u16-other_signatories-vecaccountid32-timepoint-palletmultisigtimepoint-call_hash-u832 \"Direct link to cancelasmultithreshold-u16-other_signatories-vecaccountid32-timepoint-palletmultisigtimepoint-call_hash-u832\")\n\n*   **interface**: `api.tx.multisig.cancelAsMulti`\n*   **summary**: See \\[`Pallet::cancel_as_multi`\\].\n\n* * *\n\nnominationPools[\u200b](#nominationpools \"Direct link to nominationPools\")\n\n----------------------------------------------------------------------\n\n### bondExtra(extra: `PalletNominationPoolsBondExtra`)[\u200b](#bondextraextra-palletnominationpoolsbondextra \"Direct link to bondextraextra-palletnominationpoolsbondextra\")\n\n*   **interface**: `api.tx.nominationPools.bondExtra`\n*   **summary**: See \\[`Pallet::bond_extra`\\].\n\n### bondExtraOther(member: `MultiAddress`, extra: `PalletNominationPoolsBondExtra`)[\u200b](#bondextraothermember-multiaddress-extra-palletnominationpoolsbondextra \"Direct link to bondextraothermember-multiaddress-extra-palletnominationpoolsbondextra\")\n\n*   **interface**: `api.tx.nominationPools.bondExtraOther`\n*   **summary**: See \\[`Pallet::bond_extra_other`\\].\n\n### chill(pool\\_id: `u32`)[\u200b](#chillpool_id-u32 \"Direct link to chillpool_id-u32\")\n\n*   **interface**: `api.tx.nominationPools.chill`\n*   **summary**: See \\[`Pallet::chill`\\].\n\n### claimCommission(pool\\_id: `u32`)[\u200b](#claimcommissionpool_id-u32 \"Direct link to claimcommissionpool_id-u32\")\n\n*   **interface**: `api.tx.nominationPools.claimCommission`\n*   **summary**: See \\[`Pallet::claim_commission`\\].\n\n### claimPayout()[\u200b](#claimpayout \"Direct link to claimPayout()\")\n\n*   **interface**: `api.tx.nominationPools.claimPayout`\n*   **summary**: See \\[`Pallet::claim_payout`\\].\n\n### claimPayoutOther(other: `AccountId32`)[\u200b](#claimpayoutotherother-accountid32 \"Direct link to claimpayoutotherother-accountid32\")\n\n*   **interface**: `api.tx.nominationPools.claimPayoutOther`\n*   **summary**: See \\[`Pallet::claim_payout_other`\\].\n\n### create(amount: `Compact<u128>`, root: `MultiAddress`, nominator: `MultiAddress`, bouncer: `MultiAddress`)[\u200b](#createamount-compactu128-root-multiaddress-nominator-multiaddress-bouncer-multiaddress \"Direct link to createamount-compactu128-root-multiaddress-nominator-multiaddress-bouncer-multiaddress\")\n\n*   **interface**: `api.tx.nominationPools.create`\n*   **summary**: See \\[`Pallet::create`\\].\n\n### createWithPoolId(amount: `Compact<u128>`, root: `MultiAddress`, nominator: `MultiAddress`, bouncer: `MultiAddress`, pool\\_id: `u32`)[\u200b](#createwithpoolidamount-compactu128-root-multiaddress-nominator-multiaddress-bouncer-multiaddress-pool_id-u32 \"Direct link to createwithpoolidamount-compactu128-root-multiaddress-nominator-multiaddress-bouncer-multiaddress-pool_id-u32\")\n\n*   **interface**: `api.tx.nominationPools.createWithPoolId`\n*   **summary**: See \\[`Pallet::create_with_pool_id`\\].\n\n### join(amount: `Compact<u128>`, pool\\_id: `u32`)[\u200b](#joinamount-compactu128-pool_id-u32 \"Direct link to joinamount-compactu128-pool_id-u32\")\n\n*   **interface**: `api.tx.nominationPools.join`\n*   **summary**: See \\[`Pallet::join`\\].\n\n### nominate(pool\\_id: `u32`, validators: `Vec<AccountId32>`)[\u200b](#nominatepool_id-u32-validators-vecaccountid32 \"Direct link to nominatepool_id-u32-validators-vecaccountid32\")\n\n*   **interface**: `api.tx.nominationPools.nominate`\n*   **summary**: See \\[`Pallet::nominate`\\].\n\n### poolWithdrawUnbonded(pool\\_id: `u32`, num\\_slashing\\_spans: `u32`)[\u200b](#poolwithdrawunbondedpool_id-u32-num_slashing_spans-u32 \"Direct link to poolwithdrawunbondedpool_id-u32-num_slashing_spans-u32\")\n\n*   **interface**: `api.tx.nominationPools.poolWithdrawUnbonded`\n*   **summary**: See \\[`Pallet::pool_withdraw_unbonded`\\].\n\n### setClaimPermission(permission: `PalletNominationPoolsClaimPermission`)[\u200b](#setclaimpermissionpermission-palletnominationpoolsclaimpermission \"Direct link to setclaimpermissionpermission-palletnominationpoolsclaimpermission\")\n\n*   **interface**: `api.tx.nominationPools.setClaimPermission`\n*   **summary**: See \\[`Pallet::set_claim_permission`\\].\n\n### setCommission(pool\\_id: `u32`, new\\_commission: `Option<(Perbill,AccountId32)>`)[\u200b](#setcommissionpool_id-u32-new_commission-optionperbillaccountid32 \"Direct link to setcommissionpool_id-u32-new_commission-optionperbillaccountid32\")\n\n*   **interface**: `api.tx.nominationPools.setCommission`\n*   **summary**: See \\[`Pallet::set_commission`\\].\n\n### setCommissionChangeRate(pool\\_id: `u32`, change\\_rate: `PalletNominationPoolsCommissionChangeRate`)[\u200b](#setcommissionchangeratepool_id-u32-change_rate-palletnominationpoolscommissionchangerate \"Direct link to setcommissionchangeratepool_id-u32-change_rate-palletnominationpoolscommissionchangerate\")\n\n*   **interface**: `api.tx.nominationPools.setCommissionChangeRate`\n*   **summary**: See \\[`Pallet::set_commission_change_rate`\\].\n\n### setCommissionMax(pool\\_id: `u32`, max\\_commission: `Perbill`)[\u200b](#setcommissionmaxpool_id-u32-max_commission-perbill \"Direct link to setcommissionmaxpool_id-u32-max_commission-perbill\")\n\n*   **interface**: `api.tx.nominationPools.setCommissionMax`\n*   **summary**: See \\[`Pallet::set_commission_max`\\].\n\n### setConfigs(min\\_join\\_bond: `PalletNominationPoolsConfigOpU128`, min\\_create\\_bond: `PalletNominationPoolsConfigOpU128`, max\\_pools: `PalletNominationPoolsConfigOpU32`, max\\_members: `PalletNominationPoolsConfigOpU32`, max\\_members\\_per\\_pool: `PalletNominationPoolsConfigOpU32`, global\\_max\\_commission: `PalletNominationPoolsConfigOpPerbill`)[\u200b](#setconfigsmin_join_bond-palletnominationpoolsconfigopu128-min_create_bond-palletnominationpoolsconfigopu128-max_pools-palletnominationpoolsconfigopu32-max_members-palletnominationpoolsconfigopu32-max_members_per_pool-palletnominationpoolsconfigopu32-global_max_commission-palletnominationpoolsconfigopperbill \"Direct link to setconfigsmin_join_bond-palletnominationpoolsconfigopu128-min_create_bond-palletnominationpoolsconfigopu128-max_pools-palletnominationpoolsconfigopu32-max_members-palletnominationpoolsconfigopu32-max_members_per_pool-palletnominationpoolsconfigopu32-global_max_commission-palletnominationpoolsconfigopperbill\")\n\n*   **interface**: `api.tx.nominationPools.setConfigs`\n*   **summary**: See \\[`Pallet::set_configs`\\].\n\n### setMetadata(pool\\_id: `u32`, metadata: `Bytes`)[\u200b](#setmetadatapool_id-u32-metadata-bytes \"Direct link to setmetadatapool_id-u32-metadata-bytes\")\n\n*   **interface**: `api.tx.nominationPools.setMetadata`\n*   **summary**: See \\[`Pallet::set_metadata`\\].\n\n### setState(pool\\_id: `u32`, state: `PalletNominationPoolsPoolState`)[\u200b](#setstatepool_id-u32-state-palletnominationpoolspoolstate \"Direct link to setstatepool_id-u32-state-palletnominationpoolspoolstate\")\n\n*   **interface**: `api.tx.nominationPools.setState`\n*   **summary**: See \\[`Pallet::set_state`\\].\n\n### unbond(member\\_account: `MultiAddress`, unbonding\\_points: `Compact<u128>`)[\u200b](#unbondmember_account-multiaddress-unbonding_points-compactu128 \"Direct link to unbondmember_account-multiaddress-unbonding_points-compactu128\")\n\n*   **interface**: `api.tx.nominationPools.unbond`\n*   **summary**: See \\[`Pallet::unbond`\\].\n\n### updateRoles(pool\\_id: `u32`, new\\_root: `PalletNominationPoolsConfigOpAccountId32`, new\\_nominator: `PalletNominationPoolsConfigOpAccountId32`, new\\_bouncer: `PalletNominationPoolsConfigOpAccountId32`)[\u200b](#updaterolespool_id-u32-new_root-palletnominationpoolsconfigopaccountid32-new_nominator-palletnominationpoolsconfigopaccountid32-new_bouncer-palletnominationpoolsconfigopaccountid32 \"Direct link to updaterolespool_id-u32-new_root-palletnominationpoolsconfigopaccountid32-new_nominator-palletnominationpoolsconfigopaccountid32-new_bouncer-palletnominationpoolsconfigopaccountid32\")\n\n*   **interface**: `api.tx.nominationPools.updateRoles`\n*   **summary**: See \\[`Pallet::update_roles`\\].\n\n### withdrawUnbonded(member\\_account: `MultiAddress`, num\\_slashing\\_spans: `u32`)[\u200b](#withdrawunbondedmember_account-multiaddress-num_slashing_spans-u32 \"Direct link to withdrawunbondedmember_account-multiaddress-num_slashing_spans-u32\")\n\n*   **interface**: `api.tx.nominationPools.withdrawUnbonded`\n*   **summary**: See \\[`Pallet::withdraw_unbonded`\\].\n\n* * *\n\nparaInclusion[\u200b](#parainclusion \"Direct link to paraInclusion\")\n\n----------------------------------------------------------------\n\n* * *\n\nparaInherent[\u200b](#parainherent \"Direct link to paraInherent\")\n\n-------------------------------------------------------------\n\n### enter(data: `PolkadotPrimitivesV5InherentData`)[\u200b](#enterdata-polkadotprimitivesv5inherentdata \"Direct link to enterdata-polkadotprimitivesv5inherentdata\")\n\n*   **interface**: `api.tx.paraInherent.enter`\n*   **summary**: See \\[`Pallet::enter`\\].\n\n* * *\n\nparas[\u200b](#paras \"Direct link to paras\")\n\n----------------------------------------\n\n### addTrustedValidationCode(validation\\_code: `Bytes`)[\u200b](#addtrustedvalidationcodevalidation_code-bytes \"Direct link to addtrustedvalidationcodevalidation_code-bytes\")\n\n*   **interface**: `api.tx.paras.addTrustedValidationCode`\n*   **summary**: See \\[`Pallet::add_trusted_validation_code`\\].\n\n### forceNoteNewHead(para: `u32`, new\\_head: `Bytes`)[\u200b](#forcenotenewheadpara-u32-new_head-bytes \"Direct link to forcenotenewheadpara-u32-new_head-bytes\")\n\n*   **interface**: `api.tx.paras.forceNoteNewHead`\n*   **summary**: See \\[`Pallet::force_note_new_head`\\].\n\n### forceQueueAction(para: `u32`)[\u200b](#forcequeueactionpara-u32 \"Direct link to forcequeueactionpara-u32\")\n\n*   **interface**: `api.tx.paras.forceQueueAction`\n*   **summary**: See \\[`Pallet::force_queue_action`\\].\n\n### forceScheduleCodeUpgrade(para: `u32`, new\\_code: `Bytes`, relay\\_parent\\_number: `u32`)[\u200b](#forceschedulecodeupgradepara-u32-new_code-bytes-relay_parent_number-u32 \"Direct link to forceschedulecodeupgradepara-u32-new_code-bytes-relay_parent_number-u32\")\n\n*   **interface**: `api.tx.paras.forceScheduleCodeUpgrade`\n*   **summary**: See \\[`Pallet::force_schedule_code_upgrade`\\].\n\n### forceSetCurrentCode(para: `u32`, new\\_code: `Bytes`)[\u200b](#forcesetcurrentcodepara-u32-new_code-bytes \"Direct link to forcesetcurrentcodepara-u32-new_code-bytes\")\n\n*   **interface**: `api.tx.paras.forceSetCurrentCode`\n*   **summary**: See \\[`Pallet::force_set_current_code`\\].\n\n### forceSetCurrentHead(para: `u32`, new\\_head: `Bytes`)[\u200b](#forcesetcurrentheadpara-u32-new_head-bytes \"Direct link to forcesetcurrentheadpara-u32-new_head-bytes\")\n\n*   **interface**: `api.tx.paras.forceSetCurrentHead`\n*   **summary**: See \\[`Pallet::force_set_current_head`\\].\n\n### forceSetMostRecentContext(para: `u32`, context: `u32`)[\u200b](#forcesetmostrecentcontextpara-u32-context-u32 \"Direct link to forcesetmostrecentcontextpara-u32-context-u32\")\n\n*   **interface**: `api.tx.paras.forceSetMostRecentContext`\n*   **summary**: See \\[`Pallet::force_set_most_recent_context`\\].\n\n### includePvfCheckStatement(stmt: `PolkadotPrimitivesV5PvfCheckStatement`, signature: `PolkadotPrimitivesV5ValidatorAppSignature`)[\u200b](#includepvfcheckstatementstmt-polkadotprimitivesv5pvfcheckstatement-signature-polkadotprimitivesv5validatorappsignature \"Direct link to includepvfcheckstatementstmt-polkadotprimitivesv5pvfcheckstatement-signature-polkadotprimitivesv5validatorappsignature\")\n\n*   **interface**: `api.tx.paras.includePvfCheckStatement`\n*   **summary**: See \\[`Pallet::include_pvf_check_statement`\\].\n\n### pokeUnusedValidationCode(validation\\_code\\_hash: `H256`)[\u200b](#pokeunusedvalidationcodevalidation_code_hash-h256 \"Direct link to pokeunusedvalidationcodevalidation_code_hash-h256\")\n\n*   **interface**: `api.tx.paras.pokeUnusedValidationCode`\n*   **summary**: See \\[`Pallet::poke_unused_validation_code`\\].\n\n* * *\n\nparasDisputes[\u200b](#parasdisputes \"Direct link to parasDisputes\")\n\n----------------------------------------------------------------\n\n### forceUnfreeze()[\u200b](#forceunfreeze \"Direct link to forceUnfreeze()\")\n\n*   **interface**: `api.tx.parasDisputes.forceUnfreeze`\n*   **summary**: See \\[`Pallet::force_unfreeze`\\].\n\n* * *\n\nparasShared[\u200b](#parasshared \"Direct link to parasShared\")\n\n----------------------------------------------------------\n\n* * *\n\nparasSlashing[\u200b](#parasslashing \"Direct link to parasSlashing\")\n\n----------------------------------------------------------------\n\n### reportDisputeLostUnsigned(dispute\\_proof: `PolkadotPrimitivesV5SlashingDisputeProof`, key\\_owner\\_proof: `SpSessionMembershipProof`)[\u200b](#reportdisputelostunsigneddispute_proof-polkadotprimitivesv5slashingdisputeproof-key_owner_proof-spsessionmembershipproof \"Direct link to reportdisputelostunsigneddispute_proof-polkadotprimitivesv5slashingdisputeproof-key_owner_proof-spsessionmembershipproof\")\n\n*   **interface**: `api.tx.parasSlashing.reportDisputeLostUnsigned`\n*   **summary**: See \\[`Pallet::report_dispute_lost_unsigned`\\].\n\n* * *\n\npreimage[\u200b](#preimage \"Direct link to preimage\")\n\n-------------------------------------------------\n\n### notePreimage(bytes: `Bytes`)[\u200b](#notepreimagebytes-bytes \"Direct link to notepreimagebytes-bytes\")\n\n*   **interface**: `api.tx.preimage.notePreimage`\n*   **summary**: See \\[`Pallet::note_preimage`\\].\n\n### requestPreimage(hash: `H256`)[\u200b](#requestpreimagehash-h256 \"Direct link to requestpreimagehash-h256\")\n\n*   **interface**: `api.tx.preimage.requestPreimage`\n*   **summary**: See \\[`Pallet::request_preimage`\\].\n\n### unnotePreimage(hash: `H256`)[\u200b](#unnotepreimagehash-h256 \"Direct link to unnotepreimagehash-h256\")\n\n*   **interface**: `api.tx.preimage.unnotePreimage`\n*   **summary**: See \\[`Pallet::unnote_preimage`\\].\n\n### unrequestPreimage(hash: `H256`)[\u200b](#unrequestpreimagehash-h256 \"Direct link to unrequestpreimagehash-h256\")\n\n*   **interface**: `api.tx.preimage.unrequestPreimage`\n*   **summary**: See \\[`Pallet::unrequest_preimage`\\].\n\n* * *\n\nproxy[\u200b](#proxy \"Direct link to proxy\")\n\n----------------------------------------\n\n### addProxy(delegate: `MultiAddress`, proxy\\_type: `PolkadotRuntimeProxyType`, delay: `u32`)[\u200b](#addproxydelegate-multiaddress-proxy_type-polkadotruntimeproxytype-delay-u32 \"Direct link to addproxydelegate-multiaddress-proxy_type-polkadotruntimeproxytype-delay-u32\")\n\n*   **interface**: `api.tx.proxy.addProxy`\n*   **summary**: See \\[`Pallet::add_proxy`\\].\n\n### announce(real: `MultiAddress`, call\\_hash: `H256`)[\u200b](#announcereal-multiaddress-call_hash-h256 \"Direct link to announcereal-multiaddress-call_hash-h256\")\n\n*   **interface**: `api.tx.proxy.announce`\n*   **summary**: See \\[`Pallet::announce`\\].\n\n### createPure(proxy\\_type: `PolkadotRuntimeProxyType`, delay: `u32`, index: `u16`)[\u200b](#createpureproxy_type-polkadotruntimeproxytype-delay-u32-index-u16 \"Direct link to createpureproxy_type-polkadotruntimeproxytype-delay-u32-index-u16\")\n\n*   **interface**: `api.tx.proxy.createPure`\n*   **summary**: See \\[`Pallet::create_pure`\\].\n\n### killPure(spawner: `MultiAddress`, proxy\\_type: `PolkadotRuntimeProxyType`, index: `u16`, height: `Compact<u32>`, ext\\_index: `Compact<u32>`)[\u200b](#killpurespawner-multiaddress-proxy_type-polkadotruntimeproxytype-index-u16-height-compactu32-ext_index-compactu32 \"Direct link to killpurespawner-multiaddress-proxy_type-polkadotruntimeproxytype-index-u16-height-compactu32-ext_index-compactu32\")\n\n*   **interface**: `api.tx.proxy.killPure`\n*   **summary**: See \\[`Pallet::kill_pure`\\].\n\n### proxy(real: `MultiAddress`, force\\_proxy\\_type: `Option<PolkadotRuntimeProxyType>`, call: `Call`)[\u200b](#proxyreal-multiaddress-force_proxy_type-optionpolkadotruntimeproxytype-call-call \"Direct link to proxyreal-multiaddress-force_proxy_type-optionpolkadotruntimeproxytype-call-call\")\n\n*   **interface**: `api.tx.proxy.proxy`\n*   **summary**: See \\[`Pallet::proxy`\\].\n\n### proxyAnnounced(delegate: `MultiAddress`, real: `MultiAddress`, force\\_proxy\\_type: `Option<PolkadotRuntimeProxyType>`, call: `Call`)[\u200b](#proxyannounceddelegate-multiaddress-real-multiaddress-force_proxy_type-optionpolkadotruntimeproxytype-call-call \"Direct link to proxyannounceddelegate-multiaddress-real-multiaddress-force_proxy_type-optionpolkadotruntimeproxytype-call-call\")\n\n*   **interface**: `api.tx.proxy.proxyAnnounced`\n*   **summary**: See \\[`Pallet::proxy_announced`\\].\n\n### rejectAnnouncement(delegate: `MultiAddress`, call\\_hash: `H256`)[\u200b](#rejectannouncementdelegate-multiaddress-call_hash-h256 \"Direct link to rejectannouncementdelegate-multiaddress-call_hash-h256\")\n\n*   **interface**: `api.tx.proxy.rejectAnnouncement`\n*   **summary**: See \\[`Pallet::reject_announcement`\\].\n\n### removeAnnouncement(real: `MultiAddress`, call\\_hash: `H256`)[\u200b](#removeannouncementreal-multiaddress-call_hash-h256 \"Direct link to removeannouncementreal-multiaddress-call_hash-h256\")\n\n*   **interface**: `api.tx.proxy.removeAnnouncement`\n*   **summary**: See \\[`Pallet::remove_announcement`\\].\n\n### removeProxies()[\u200b](#removeproxies \"Direct link to removeProxies()\")\n\n*   **interface**: `api.tx.proxy.removeProxies`\n*   **summary**: See \\[`Pallet::remove_proxies`\\].\n\n### removeProxy(delegate: `MultiAddress`, proxy\\_type: `PolkadotRuntimeProxyType`, delay: `u32`)[\u200b](#removeproxydelegate-multiaddress-proxy_type-polkadotruntimeproxytype-delay-u32 \"Direct link to removeproxydelegate-multiaddress-proxy_type-polkadotruntimeproxytype-delay-u32\")\n\n*   **interface**: `api.tx.proxy.removeProxy`\n*   **summary**: See \\[`Pallet::remove_proxy`\\].\n\n* * *\n\nreferenda[\u200b](#referenda \"Direct link to referenda\")\n\n----------------------------------------------------\n\n### cancel(index: `u32`)[\u200b](#cancelindex-u32 \"Direct link to cancelindex-u32\")\n\n*   **interface**: `api.tx.referenda.cancel`\n*   **summary**: See \\[`Pallet::cancel`\\].\n\n### kill(index: `u32`)[\u200b](#killindex-u32 \"Direct link to killindex-u32\")\n\n*   **interface**: `api.tx.referenda.kill`\n*   **summary**: See \\[`Pallet::kill`\\].\n\n### nudgeReferendum(index: `u32`)[\u200b](#nudgereferendumindex-u32 \"Direct link to nudgereferendumindex-u32\")\n\n*   **interface**: `api.tx.referenda.nudgeReferendum`\n*   **summary**: See \\[`Pallet::nudge_referendum`\\].\n\n### oneFewerDeciding(track: `u16`)[\u200b](#onefewerdecidingtrack-u16 \"Direct link to onefewerdecidingtrack-u16\")\n\n*   **interface**: `api.tx.referenda.oneFewerDeciding`\n*   **summary**: See \\[`Pallet::one_fewer_deciding`\\].\n\n### placeDecisionDeposit(index: `u32`)[\u200b](#placedecisiondepositindex-u32 \"Direct link to placedecisiondepositindex-u32\")\n\n*   **interface**: `api.tx.referenda.placeDecisionDeposit`\n*   **summary**: See \\[`Pallet::place_decision_deposit`\\].\n\n### refundDecisionDeposit(index: `u32`)[\u200b](#refunddecisiondepositindex-u32 \"Direct link to refunddecisiondepositindex-u32\")\n\n*   **interface**: `api.tx.referenda.refundDecisionDeposit`\n*   **summary**: See \\[`Pallet::refund_decision_deposit`\\].\n\n### refundSubmissionDeposit(index: `u32`)[\u200b](#refundsubmissiondepositindex-u32 \"Direct link to refundsubmissiondepositindex-u32\")\n\n*   **interface**: `api.tx.referenda.refundSubmissionDeposit`\n*   **summary**: See \\[`Pallet::refund_submission_deposit`\\].\n\n### setMetadata(index: `u32`, maybe\\_hash: `Option<H256>`)[\u200b](#setmetadataindex-u32-maybe_hash-optionh256 \"Direct link to setmetadataindex-u32-maybe_hash-optionh256\")\n\n*   **interface**: `api.tx.referenda.setMetadata`\n*   **summary**: See \\[`Pallet::set_metadata`\\].\n\n### submit(proposal\\_origin: `PolkadotRuntimeOriginCaller`, proposal: `FrameSupportPreimagesBounded`, enactment\\_moment: `FrameSupportScheduleDispatchTime`)[\u200b](#submitproposal_origin-polkadotruntimeorigincaller-proposal-framesupportpreimagesbounded-enactment_moment-framesupportscheduledispatchtime \"Direct link to submitproposal_origin-polkadotruntimeorigincaller-proposal-framesupportpreimagesbounded-enactment_moment-framesupportscheduledispatchtime\")\n\n*   **interface**: `api.tx.referenda.submit`\n*   **summary**: See \\[`Pallet::submit`\\].\n\n* * *\n\nregistrar[\u200b](#registrar \"Direct link to registrar\")\n\n----------------------------------------------------\n\n### addLock(para: `u32`)[\u200b](#addlockpara-u32 \"Direct link to addlockpara-u32\")\n\n*   **interface**: `api.tx.registrar.addLock`\n*   **summary**: See \\[`Pallet::add_lock`\\].\n\n### deregister(id: `u32`)[\u200b](#deregisterid-u32 \"Direct link to deregisterid-u32\")\n\n*   **interface**: `api.tx.registrar.deregister`\n*   **summary**: See \\[`Pallet::deregister`\\].\n\n### forceRegister(who: `AccountId32`, deposit: `u128`, id: `u32`, genesis\\_head: `Bytes`, validation\\_code: `Bytes`)[\u200b](#forceregisterwho-accountid32-deposit-u128-id-u32-genesis_head-bytes-validation_code-bytes \"Direct link to forceregisterwho-accountid32-deposit-u128-id-u32-genesis_head-bytes-validation_code-bytes\")\n\n*   **interface**: `api.tx.registrar.forceRegister`\n*   **summary**: See \\[`Pallet::force_register`\\].\n\n### register(id: `u32`, genesis\\_head: `Bytes`, validation\\_code: `Bytes`)[\u200b](#registerid-u32-genesis_head-bytes-validation_code-bytes \"Direct link to registerid-u32-genesis_head-bytes-validation_code-bytes\")\n\n*   **interface**: `api.tx.registrar.register`\n*   **summary**: See \\[`Pallet::register`\\].\n\n### removeLock(para: `u32`)[\u200b](#removelockpara-u32 \"Direct link to removelockpara-u32\")\n\n*   **interface**: `api.tx.registrar.removeLock`\n*   **summary**: See \\[`Pallet::remove_lock`\\].\n\n### reserve()[\u200b](#reserve \"Direct link to reserve()\")\n\n*   **interface**: `api.tx.registrar.reserve`\n*   **summary**: See \\[`Pallet::reserve`\\].\n\n### scheduleCodeUpgrade(para: `u32`, new\\_code: `Bytes`)[\u200b](#schedulecodeupgradepara-u32-new_code-bytes \"Direct link to schedulecodeupgradepara-u32-new_code-bytes\")\n\n*   **interface**: `api.tx.registrar.scheduleCodeUpgrade`\n*   **summary**: See \\[`Pallet::schedule_code_upgrade`\\].\n\n### setCurrentHead(para: `u32`, new\\_head: `Bytes`)[\u200b](#setcurrentheadpara-u32-new_head-bytes \"Direct link to setcurrentheadpara-u32-new_head-bytes\")\n\n*   **interface**: `api.tx.registrar.setCurrentHead`\n*   **summary**: See \\[`Pallet::set_current_head`\\].\n\n### swap(id: `u32`, other: `u32`)[\u200b](#swapid-u32-other-u32 \"Direct link to swapid-u32-other-u32\")\n\n*   **interface**: `api.tx.registrar.swap`\n*   **summary**: See \\[`Pallet::swap`\\].\n\n* * *\n\nscheduler[\u200b](#scheduler \"Direct link to scheduler\")\n\n----------------------------------------------------\n\n### cancel(when: `u32`, index: `u32`)[\u200b](#cancelwhen-u32-index-u32 \"Direct link to cancelwhen-u32-index-u32\")\n\n*   **interface**: `api.tx.scheduler.cancel`\n*   **summary**: See \\[`Pallet::cancel`\\].\n\n### cancelNamed(id: `[u8;32]`)[\u200b](#cancelnamedid-u832 \"Direct link to cancelnamedid-u832\")\n\n*   **interface**: `api.tx.scheduler.cancelNamed`\n*   **summary**: See \\[`Pallet::cancel_named`\\].\n\n### schedule(when: `u32`, maybe\\_periodic: `Option<(u32,u32)>`, priority: `u8`, call: `Call`)[\u200b](#schedulewhen-u32-maybe_periodic-optionu32u32-priority-u8-call-call \"Direct link to schedulewhen-u32-maybe_periodic-optionu32u32-priority-u8-call-call\")\n\n*   **interface**: `api.tx.scheduler.schedule`\n*   **summary**: See \\[`Pallet::schedule`\\].\n\n### scheduleAfter(after: `u32`, maybe\\_periodic: `Option<(u32,u32)>`, priority: `u8`, call: `Call`)[\u200b](#scheduleafterafter-u32-maybe_periodic-optionu32u32-priority-u8-call-call \"Direct link to scheduleafterafter-u32-maybe_periodic-optionu32u32-priority-u8-call-call\")\n\n*   **interface**: `api.tx.scheduler.scheduleAfter`\n*   **summary**: See \\[`Pallet::schedule_after`\\].\n\n### scheduleNamed(id: `[u8;32]`, when: `u32`, maybe\\_periodic: `Option<(u32,u32)>`, priority: `u8`, call: `Call`)[\u200b](#schedulenamedid-u832-when-u32-maybe_periodic-optionu32u32-priority-u8-call-call \"Direct link to schedulenamedid-u832-when-u32-maybe_periodic-optionu32u32-priority-u8-call-call\")\n\n*   **interface**: `api.tx.scheduler.scheduleNamed`\n*   **summary**: See \\[`Pallet::schedule_named`\\].\n\n### scheduleNamedAfter(id: `[u8;32]`, after: `u32`, maybe\\_periodic: `Option<(u32,u32)>`, priority: `u8`, call: `Call`)[\u200b](#schedulenamedafterid-u832-after-u32-maybe_periodic-optionu32u32-priority-u8-call-call \"Direct link to schedulenamedafterid-u832-after-u32-maybe_periodic-optionu32u32-priority-u8-call-call\")\n\n*   **interface**: `api.tx.scheduler.scheduleNamedAfter`\n*   **summary**: See \\[`Pallet::schedule_named_after`\\].\n\n* * *\n\nsession[\u200b](#session \"Direct link to session\")\n\n----------------------------------------------\n\n### purgeKeys()[\u200b](#purgekeys \"Direct link to purgeKeys()\")\n\n*   **interface**: `api.tx.session.purgeKeys`\n*   **summary**: See \\[`Pallet::purge_keys`\\].\n\n### setKeys(keys: `PolkadotRuntimeSessionKeys`, proof: `Bytes`)[\u200b](#setkeyskeys-polkadotruntimesessionkeys-proof-bytes \"Direct link to setkeyskeys-polkadotruntimesessionkeys-proof-bytes\")\n\n*   **interface**: `api.tx.session.setKeys`\n*   **summary**: See \\[`Pallet::set_keys`\\].\n\n* * *\n\nslots[\u200b](#slots \"Direct link to slots\")\n\n----------------------------------------\n\n### clearAllLeases(para: `u32`)[\u200b](#clearallleasespara-u32 \"Direct link to clearallleasespara-u32\")\n\n*   **interface**: `api.tx.slots.clearAllLeases`\n*   **summary**: See \\[`Pallet::clear_all_leases`\\].\n\n### forceLease(para: `u32`, leaser: `AccountId32`, amount: `u128`, period\\_begin: `u32`, period\\_count: `u32`)[\u200b](#forceleasepara-u32-leaser-accountid32-amount-u128-period_begin-u32-period_count-u32 \"Direct link to forceleasepara-u32-leaser-accountid32-amount-u128-period_begin-u32-period_count-u32\")\n\n*   **interface**: `api.tx.slots.forceLease`\n*   **summary**: See \\[`Pallet::force_lease`\\].\n\n### triggerOnboard(para: `u32`)[\u200b](#triggeronboardpara-u32 \"Direct link to triggeronboardpara-u32\")\n\n*   **interface**: `api.tx.slots.triggerOnboard`\n*   **summary**: See \\[`Pallet::trigger_onboard`\\].\n\n* * *\n\nstaking[\u200b](#staking \"Direct link to staking\")\n\n----------------------------------------------\n\n### bond(value: `Compact<u128>`, payee: `PalletStakingRewardDestination`)[\u200b](#bondvalue-compactu128-payee-palletstakingrewarddestination \"Direct link to bondvalue-compactu128-payee-palletstakingrewarddestination\")\n\n*   **interface**: `api.tx.staking.bond`\n*   **summary**: See \\[`Pallet::bond`\\].\n\n### bondExtra(max\\_additional: `Compact<u128>`)[\u200b](#bondextramax_additional-compactu128 \"Direct link to bondextramax_additional-compactu128\")\n\n*   **interface**: `api.tx.staking.bondExtra`\n*   **summary**: See \\[`Pallet::bond_extra`\\].\n\n### cancelDeferredSlash(era: `u32`, slash\\_indices: `Vec<u32>`)[\u200b](#canceldeferredslashera-u32-slash_indices-vecu32 \"Direct link to canceldeferredslashera-u32-slash_indices-vecu32\")\n\n*   **interface**: `api.tx.staking.cancelDeferredSlash`\n*   **summary**: See \\[`Pallet::cancel_deferred_slash`\\].\n\n### chill()[\u200b](#chill \"Direct link to chill()\")\n\n*   **interface**: `api.tx.staking.chill`\n*   **summary**: See \\[`Pallet::chill`\\].\n\n### chillOther(controller: `AccountId32`)[\u200b](#chillothercontroller-accountid32 \"Direct link to chillothercontroller-accountid32\")\n\n*   **interface**: `api.tx.staking.chillOther`\n*   **summary**: See \\[`Pallet::chill_other`\\].\n\n### forceApplyMinCommission(validator\\_stash: `AccountId32`)[\u200b](#forceapplymincommissionvalidator_stash-accountid32 \"Direct link to forceapplymincommissionvalidator_stash-accountid32\")\n\n*   **interface**: `api.tx.staking.forceApplyMinCommission`\n*   **summary**: See \\[`Pallet::force_apply_min_commission`\\].\n\n### forceNewEra()[\u200b](#forcenewera \"Direct link to forceNewEra()\")\n\n*   **interface**: `api.tx.staking.forceNewEra`\n*   **summary**: See \\[`Pallet::force_new_era`\\].\n\n### forceNewEraAlways()[\u200b](#forceneweraalways \"Direct link to forceNewEraAlways()\")\n\n*   **interface**: `api.tx.staking.forceNewEraAlways`\n*   **summary**: See \\[`Pallet::force_new_era_always`\\].\n\n### forceNoEras()[\u200b](#forcenoeras \"Direct link to forceNoEras()\")\n\n*   **interface**: `api.tx.staking.forceNoEras`\n*   **summary**: See \\[`Pallet::force_no_eras`\\].\n\n### forceUnstake(stash: `AccountId32`, num\\_slashing\\_spans: `u32`)[\u200b](#forceunstakestash-accountid32-num_slashing_spans-u32 \"Direct link to forceunstakestash-accountid32-num_slashing_spans-u32\")\n\n*   **interface**: `api.tx.staking.forceUnstake`\n*   **summary**: See \\[`Pallet::force_unstake`\\].\n\n### increaseValidatorCount(additional: `Compact<u32>`)[\u200b](#increasevalidatorcountadditional-compactu32 \"Direct link to increasevalidatorcountadditional-compactu32\")\n\n*   **interface**: `api.tx.staking.increaseValidatorCount`\n*   **summary**: See \\[`Pallet::increase_validator_count`\\].\n\n### kick(who: `Vec<MultiAddress>`)[\u200b](#kickwho-vecmultiaddress \"Direct link to kickwho-vecmultiaddress\")\n\n*   **interface**: `api.tx.staking.kick`\n*   **summary**: See \\[`Pallet::kick`\\].\n\n### nominate(targets: `Vec<MultiAddress>`)[\u200b](#nominatetargets-vecmultiaddress \"Direct link to nominatetargets-vecmultiaddress\")\n\n*   **interface**: `api.tx.staking.nominate`\n*   **summary**: See \\[`Pallet::nominate`\\].\n\n### payoutStakers(validator\\_stash: `AccountId32`, era: `u32`)[\u200b](#payoutstakersvalidator_stash-accountid32-era-u32 \"Direct link to payoutstakersvalidator_stash-accountid32-era-u32\")\n\n*   **interface**: `api.tx.staking.payoutStakers`\n*   **summary**: See \\[`Pallet::payout_stakers`\\].\n\n### reapStash(stash: `AccountId32`, num\\_slashing\\_spans: `u32`)[\u200b](#reapstashstash-accountid32-num_slashing_spans-u32 \"Direct link to reapstashstash-accountid32-num_slashing_spans-u32\")\n\n*   **interface**: `api.tx.staking.reapStash`\n*   **summary**: See \\[`Pallet::reap_stash`\\].\n\n### rebond(value: `Compact<u128>`)[\u200b](#rebondvalue-compactu128 \"Direct link to rebondvalue-compactu128\")\n\n*   **interface**: `api.tx.staking.rebond`\n*   **summary**: See \\[`Pallet::rebond`\\].\n\n### scaleValidatorCount(factor: `Percent`)[\u200b](#scalevalidatorcountfactor-percent \"Direct link to scalevalidatorcountfactor-percent\")\n\n*   **interface**: `api.tx.staking.scaleValidatorCount`\n*   **summary**: See \\[`Pallet::scale_validator_count`\\].\n\n### setController()[\u200b](#setcontroller \"Direct link to setController()\")\n\n*   **interface**: `api.tx.staking.setController`\n*   **summary**: See \\[`Pallet::set_controller`\\].\n\n### setInvulnerables(invulnerables: `Vec<AccountId32>`)[\u200b](#setinvulnerablesinvulnerables-vecaccountid32 \"Direct link to setinvulnerablesinvulnerables-vecaccountid32\")\n\n*   **interface**: `api.tx.staking.setInvulnerables`\n*   **summary**: See \\[`Pallet::set_invulnerables`\\].\n\n### setMinCommission(new: `Perbill`)[\u200b](#setmincommissionnew-perbill \"Direct link to setmincommissionnew-perbill\")\n\n*   **interface**: `api.tx.staking.setMinCommission`\n*   **summary**: See \\[`Pallet::set_min_commission`\\].\n\n### setPayee(payee: `PalletStakingRewardDestination`)[\u200b](#setpayeepayee-palletstakingrewarddestination \"Direct link to setpayeepayee-palletstakingrewarddestination\")\n\n*   **interface**: `api.tx.staking.setPayee`\n*   **summary**: See \\[`Pallet::set_payee`\\].\n\n### setStakingConfigs(min\\_nominator\\_bond: `PalletStakingPalletConfigOpU128`, min\\_validator\\_bond: `PalletStakingPalletConfigOpU128`, max\\_nominator\\_count: `PalletStakingPalletConfigOpU32`, max\\_validator\\_count: `PalletStakingPalletConfigOpU32`, chill\\_threshold: `PalletStakingPalletConfigOpPercent`, min\\_commission: `PalletStakingPalletConfigOpPerbill`)[\u200b](#setstakingconfigsmin_nominator_bond-palletstakingpalletconfigopu128-min_validator_bond-palletstakingpalletconfigopu128-max_nominator_count-palletstakingpalletconfigopu32-max_validator_count-palletstakingpalletconfigopu32-chill_threshold-palletstakingpalletconfigoppercent-min_commission-palletstakingpalletconfigopperbill \"Direct link to setstakingconfigsmin_nominator_bond-palletstakingpalletconfigopu128-min_validator_bond-palletstakingpalletconfigopu128-max_nominator_count-palletstakingpalletconfigopu32-max_validator_count-palletstakingpalletconfigopu32-chill_threshold-palletstakingpalletconfigoppercent-min_commission-palletstakingpalletconfigopperbill\")\n\n*   **interface**: `api.tx.staking.setStakingConfigs`\n*   **summary**: See \\[`Pallet::set_staking_configs`\\].\n\n### setValidatorCount(new: `Compact<u32>`)[\u200b](#setvalidatorcountnew-compactu32 \"Direct link to setvalidatorcountnew-compactu32\")\n\n*   **interface**: `api.tx.staking.setValidatorCount`\n*   **summary**: See \\[`Pallet::set_validator_count`\\].\n\n### unbond(value: `Compact<u128>`)[\u200b](#unbondvalue-compactu128 \"Direct link to unbondvalue-compactu128\")\n\n*   **interface**: `api.tx.staking.unbond`\n*   **summary**: See \\[`Pallet::unbond`\\].\n\n### validate(prefs: `PalletStakingValidatorPrefs`)[\u200b](#validateprefs-palletstakingvalidatorprefs \"Direct link to validateprefs-palletstakingvalidatorprefs\")\n\n*   **interface**: `api.tx.staking.validate`\n*   **summary**: See \\[`Pallet::validate`\\].\n\n### withdrawUnbonded(num\\_slashing\\_spans: `u32`)[\u200b](#withdrawunbondednum_slashing_spans-u32 \"Direct link to withdrawunbondednum_slashing_spans-u32\")\n\n*   **interface**: `api.tx.staking.withdrawUnbonded`\n*   **summary**: See \\[`Pallet::withdraw_unbonded`\\].\n\n* * *\n\nsystem[\u200b](#system \"Direct link to system\")\n\n-------------------------------------------\n\n### killPrefix(prefix: `Bytes`, subkeys: `u32`)[\u200b](#killprefixprefix-bytes-subkeys-u32 \"Direct link to killprefixprefix-bytes-subkeys-u32\")\n\n*   **interface**: `api.tx.system.killPrefix`\n*   **summary**: See \\[`Pallet::kill_prefix`\\].\n\n### killStorage(keys: `Vec<Bytes>`)[\u200b](#killstoragekeys-vecbytes \"Direct link to killstoragekeys-vecbytes\")\n\n*   **interface**: `api.tx.system.killStorage`\n*   **summary**: See \\[`Pallet::kill_storage`\\].\n\n### remark(remark: `Bytes`)[\u200b](#remarkremark-bytes \"Direct link to remarkremark-bytes\")\n\n*   **interface**: `api.tx.system.remark`\n*   **summary**: See \\[`Pallet::remark`\\].\n\n### remarkWithEvent(remark: `Bytes`)[\u200b](#remarkwitheventremark-bytes \"Direct link to remarkwitheventremark-bytes\")\n\n*   **interface**: `api.tx.system.remarkWithEvent`\n*   **summary**: See \\[`Pallet::remark_with_event`\\].\n\n### setCode(code: `Bytes`)[\u200b](#setcodecode-bytes \"Direct link to setcodecode-bytes\")\n\n*   **interface**: `api.tx.system.setCode`\n*   **summary**: See \\[`Pallet::set_code`\\].\n\n### setCodeWithoutChecks(code: `Bytes`)[\u200b](#setcodewithoutcheckscode-bytes \"Direct link to setcodewithoutcheckscode-bytes\")\n\n*   **interface**: `api.tx.system.setCodeWithoutChecks`\n*   **summary**: See \\[`Pallet::set_code_without_checks`\\].\n\n### setHeapPages(pages: `u64`)[\u200b](#setheappagespages-u64 \"Direct link to setheappagespages-u64\")\n\n*   **interface**: `api.tx.system.setHeapPages`\n*   **summary**: See \\[`Pallet::set_heap_pages`\\].\n\n### setStorage(items: `Vec<(Bytes,Bytes)>`)[\u200b](#setstorageitems-vecbytesbytes \"Direct link to setstorageitems-vecbytesbytes\")\n\n*   **interface**: `api.tx.system.setStorage`\n*   **summary**: See \\[`Pallet::set_storage`\\].\n\n* * *\n\ntimestamp[\u200b](#timestamp \"Direct link to timestamp\")\n\n----------------------------------------------------\n\n### set(now: `Compact<u64>`)[\u200b](#setnow-compactu64 \"Direct link to setnow-compactu64\")\n\n*   **interface**: `api.tx.timestamp.set`\n*   **summary**: See \\[`Pallet::set`\\].\n\n* * *\n\ntreasury[\u200b](#treasury \"Direct link to treasury\")\n\n-------------------------------------------------\n\n### approveProposal(proposal\\_id: `Compact<u32>`)[\u200b](#approveproposalproposal_id-compactu32 \"Direct link to approveproposalproposal_id-compactu32\")\n\n*   **interface**: `api.tx.treasury.approveProposal`\n*   **summary**: See \\[`Pallet::approve_proposal`\\].\n\n### proposeSpend(value: `Compact<u128>`, beneficiary: `MultiAddress`)[\u200b](#proposespendvalue-compactu128-beneficiary-multiaddress \"Direct link to proposespendvalue-compactu128-beneficiary-multiaddress\")\n\n*   **interface**: `api.tx.treasury.proposeSpend`\n*   **summary**: See \\[`Pallet::propose_spend`\\].\n\n### rejectProposal(proposal\\_id: `Compact<u32>`)[\u200b](#rejectproposalproposal_id-compactu32 \"Direct link to rejectproposalproposal_id-compactu32\")\n\n*   **interface**: `api.tx.treasury.rejectProposal`\n*   **summary**: See \\[`Pallet::reject_proposal`\\].\n\n### removeApproval(proposal\\_id: `Compact<u32>`)[\u200b](#removeapprovalproposal_id-compactu32 \"Direct link to removeapprovalproposal_id-compactu32\")\n\n*   **interface**: `api.tx.treasury.removeApproval`\n*   **summary**: See \\[`Pallet::remove_approval`\\].\n\n### spend(amount: `Compact<u128>`, beneficiary: `MultiAddress`)[\u200b](#spendamount-compactu128-beneficiary-multiaddress \"Direct link to spendamount-compactu128-beneficiary-multiaddress\")\n\n*   **interface**: `api.tx.treasury.spend`\n*   **summary**: See \\[`Pallet::spend`\\].\n\n* * *\n\nutility[\u200b](#utility \"Direct link to utility\")\n\n----------------------------------------------\n\n### asDerivative(index: `u16`, call: `Call`)[\u200b](#asderivativeindex-u16-call-call \"Direct link to asderivativeindex-u16-call-call\")\n\n*   **interface**: `api.tx.utility.asDerivative`\n*   **summary**: See \\[`Pallet::as_derivative`\\].\n\n### batch(calls: `Vec<Call>`)[\u200b](#batchcalls-veccall \"Direct link to batchcalls-veccall\")\n\n*   **interface**: `api.tx.utility.batch`\n*   **summary**: See \\[`Pallet::batch`\\].\n\n### batchAll(calls: `Vec<Call>`)[\u200b](#batchallcalls-veccall \"Direct link to batchallcalls-veccall\")\n\n*   **interface**: `api.tx.utility.batchAll`\n*   **summary**: See \\[`Pallet::batch_all`\\].\n\n### dispatchAs(as\\_origin: `PolkadotRuntimeOriginCaller`, call: `Call`)[\u200b](#dispatchasas_origin-polkadotruntimeorigincaller-call-call \"Direct link to dispatchasas_origin-polkadotruntimeorigincaller-call-call\")\n\n*   **interface**: `api.tx.utility.dispatchAs`\n*   **summary**: See \\[`Pallet::dispatch_as`\\].\n\n### forceBatch(calls: `Vec<Call>`)[\u200b](#forcebatchcalls-veccall \"Direct link to forcebatchcalls-veccall\")\n\n*   **interface**: `api.tx.utility.forceBatch`\n*   **summary**: See \\[`Pallet::force_batch`\\].\n\n### withWeight(call: `Call`, weight: `SpWeightsWeightV2Weight`)[\u200b](#withweightcall-call-weight-spweightsweightv2weight \"Direct link to withweightcall-call-weight-spweightsweightv2weight\")\n\n*   **interface**: `api.tx.utility.withWeight`\n*   **summary**: See \\[`Pallet::with_weight`\\].\n\n* * *\n\nvesting[\u200b](#vesting \"Direct link to vesting\")\n\n----------------------------------------------\n\n### forceVestedTransfer(source: `MultiAddress`, target: `MultiAddress`, schedule: `PalletVestingVestingInfo`)[\u200b](#forcevestedtransfersource-multiaddress-target-multiaddress-schedule-palletvestingvestinginfo \"Direct link to forcevestedtransfersource-multiaddress-target-multiaddress-schedule-palletvestingvestinginfo\")\n\n*   **interface**: `api.tx.vesting.forceVestedTransfer`\n*   **summary**: See \\[`Pallet::force_vested_transfer`\\].\n\n### mergeSchedules(schedule1\\_index: `u32`, schedule2\\_index: `u32`)[\u200b](#mergeschedulesschedule1_index-u32-schedule2_index-u32 \"Direct link to mergeschedulesschedule1_index-u32-schedule2_index-u32\")\n\n*   **interface**: `api.tx.vesting.mergeSchedules`\n*   **summary**: See \\[`Pallet::merge_schedules`\\].\n\n### vest()[\u200b](#vest \"Direct link to vest()\")\n\n*   **interface**: `api.tx.vesting.vest`\n*   **summary**: See \\[`Pallet::vest`\\].\n\n### vestOther(target: `MultiAddress`)[\u200b](#vestothertarget-multiaddress \"Direct link to vestothertarget-multiaddress\")\n\n*   **interface**: `api.tx.vesting.vestOther`\n*   **summary**: See \\[`Pallet::vest_other`\\].\n\n### vestedTransfer(target: `MultiAddress`, schedule: `PalletVestingVestingInfo`)[\u200b](#vestedtransfertarget-multiaddress-schedule-palletvestingvestinginfo \"Direct link to vestedtransfertarget-multiaddress-schedule-palletvestingvestinginfo\")\n\n*   **interface**: `api.tx.vesting.vestedTransfer`\n*   **summary**: See \\[`Pallet::vested_transfer`\\].\n\n* * *\n\nvoterList[\u200b](#voterlist \"Direct link to voterList\")\n\n----------------------------------------------------\n\n### putInFrontOf(lighter: `MultiAddress`)[\u200b](#putinfrontoflighter-multiaddress \"Direct link to putinfrontoflighter-multiaddress\")\n\n*   **interface**: `api.tx.voterList.putInFrontOf`\n*   **summary**: See \\[`Pallet::put_in_front_of`\\].\n\n### putInFrontOfOther(heavier: `MultiAddress`, lighter: `MultiAddress`)[\u200b](#putinfrontofotherheavier-multiaddress-lighter-multiaddress \"Direct link to putinfrontofotherheavier-multiaddress-lighter-multiaddress\")\n\n*   **interface**: `api.tx.voterList.putInFrontOfOther`\n*   **summary**: See \\[`Pallet::put_in_front_of_other`\\].\n\n### rebag(dislocated: `MultiAddress`)[\u200b](#rebagdislocated-multiaddress \"Direct link to rebagdislocated-multiaddress\")\n\n*   **interface**: `api.tx.voterList.rebag`\n*   **summary**: See \\[`Pallet::rebag`\\].\n\n* * *\n\nwhitelist[\u200b](#whitelist \"Direct link to whitelist\")\n\n----------------------------------------------------\n\n### dispatchWhitelistedCall(call\\_hash: `H256`, call\\_encoded\\_len: `u32`, call\\_weight\\_witness: `SpWeightsWeightV2Weight`)[\u200b](#dispatchwhitelistedcallcall_hash-h256-call_encoded_len-u32-call_weight_witness-spweightsweightv2weight \"Direct link to dispatchwhitelistedcallcall_hash-h256-call_encoded_len-u32-call_weight_witness-spweightsweightv2weight\")\n\n*   **interface**: `api.tx.whitelist.dispatchWhitelistedCall`\n*   **summary**: See \\[`Pallet::dispatch_whitelisted_call`\\].\n\n### dispatchWhitelistedCallWithPreimage(call: `Call`)[\u200b](#dispatchwhitelistedcallwithpreimagecall-call \"Direct link to dispatchwhitelistedcallwithpreimagecall-call\")\n\n*   **interface**: `api.tx.whitelist.dispatchWhitelistedCallWithPreimage`\n*   **summary**: See \\[`Pallet::dispatch_whitelisted_call_with_preimage`\\].\n\n### removeWhitelistedCall(call\\_hash: `H256`)[\u200b](#removewhitelistedcallcall_hash-h256 \"Direct link to removewhitelistedcallcall_hash-h256\")\n\n*   **interface**: `api.tx.whitelist.removeWhitelistedCall`\n*   **summary**: See \\[`Pallet::remove_whitelisted_call`\\].\n\n### whitelistCall(call\\_hash: `H256`)[\u200b](#whitelistcallcall_hash-h256 \"Direct link to whitelistcallcall_hash-h256\")\n\n*   **interface**: `api.tx.whitelist.whitelistCall`\n*   **summary**: See \\[`Pallet::whitelist_call`\\].\n\n* * *\n\nxcmPallet[\u200b](#xcmpallet \"Direct link to xcmPallet\")\n\n----------------------------------------------------\n\n### execute(message: `XcmVersionedXcm`, max\\_weight: `SpWeightsWeightV2Weight`)[\u200b](#executemessage-xcmversionedxcm-max_weight-spweightsweightv2weight \"Direct link to executemessage-xcmversionedxcm-max_weight-spweightsweightv2weight\")\n\n*   **interface**: `api.tx.xcmPallet.execute`\n*   **summary**: See \\[`Pallet::execute`\\].\n\n### forceDefaultXcmVersion(maybe\\_xcm\\_version: `Option<u32>`)[\u200b](#forcedefaultxcmversionmaybe_xcm_version-optionu32 \"Direct link to forcedefaultxcmversionmaybe_xcm_version-optionu32\")\n\n*   **interface**: `api.tx.xcmPallet.forceDefaultXcmVersion`\n*   **summary**: See \\[`Pallet::force_default_xcm_version`\\].\n\n### forceSubscribeVersionNotify(location: `XcmVersionedMultiLocation`)[\u200b](#forcesubscribeversionnotifylocation-xcmversionedmultilocation \"Direct link to forcesubscribeversionnotifylocation-xcmversionedmultilocation\")\n\n*   **interface**: `api.tx.xcmPallet.forceSubscribeVersionNotify`\n*   **summary**: See \\[`Pallet::force_subscribe_version_notify`\\].\n\n### forceSuspension(suspended: `bool`)[\u200b](#forcesuspensionsuspended-bool \"Direct link to forcesuspensionsuspended-bool\")\n\n*   **interface**: `api.tx.xcmPallet.forceSuspension`\n*   **summary**: See \\[`Pallet::force_suspension`\\].\n\n### forceUnsubscribeVersionNotify(location: `XcmVersionedMultiLocation`)[\u200b](#forceunsubscribeversionnotifylocation-xcmversionedmultilocation \"Direct link to forceunsubscribeversionnotifylocation-xcmversionedmultilocation\")\n\n*   **interface**: `api.tx.xcmPallet.forceUnsubscribeVersionNotify`\n*   **summary**: See \\[`Pallet::force_unsubscribe_version_notify`\\].\n\n### forceXcmVersion(location: `XcmV3MultiLocation`, version: `u32`)[\u200b](#forcexcmversionlocation-xcmv3multilocation-version-u32 \"Direct link to forcexcmversionlocation-xcmv3multilocation-version-u32\")\n\n*   **interface**: `api.tx.xcmPallet.forceXcmVersion`\n*   **summary**: See \\[`Pallet::force_xcm_version`\\].\n\n### limitedReserveTransferAssets(dest: `XcmVersionedMultiLocation`, beneficiary: `XcmVersionedMultiLocation`, assets: `XcmVersionedMultiAssets`, fee\\_asset\\_item: `u32`, weight\\_limit: `XcmV3WeightLimit`)[\u200b](#limitedreservetransferassetsdest-xcmversionedmultilocation-beneficiary-xcmversionedmultilocation-assets-xcmversionedmultiassets-fee_asset_item-u32-weight_limit-xcmv3weightlimit \"Direct link to limitedreservetransferassetsdest-xcmversionedmultilocation-beneficiary-xcmversionedmultilocation-assets-xcmversionedmultiassets-fee_asset_item-u32-weight_limit-xcmv3weightlimit\")\n\n*   **interface**: `api.tx.xcmPallet.limitedReserveTransferAssets`\n*   **summary**: See \\[`Pallet::limited_reserve_transfer_assets`\\].\n\n### limitedTeleportAssets(dest: `XcmVersionedMultiLocation`, beneficiary: `XcmVersionedMultiLocation`, assets: `XcmVersionedMultiAssets`, fee\\_asset\\_item: `u32`, weight\\_limit: `XcmV3WeightLimit`)[\u200b](#limitedteleportassetsdest-xcmversionedmultilocation-beneficiary-xcmversionedmultilocation-assets-xcmversionedmultiassets-fee_asset_item-u32-weight_limit-xcmv3weightlimit \"Direct link to limitedteleportassetsdest-xcmversionedmultilocation-beneficiary-xcmversionedmultilocation-assets-xcmversionedmultiassets-fee_asset_item-u32-weight_limit-xcmv3weightlimit\")\n\n*   **interface**: `api.tx.xcmPallet.limitedTeleportAssets`\n*   **summary**: See \\[`Pallet::limited_teleport_assets`\\].\n\n### reserveTransferAssets(dest: `XcmVersionedMultiLocation`, beneficiary: `XcmVersionedMultiLocation`, assets: `XcmVersionedMultiAssets`, fee\\_asset\\_item: `u32`)[\u200b](#reservetransferassetsdest-xcmversionedmultilocation-beneficiary-xcmversionedmultilocation-assets-xcmversionedmultiassets-fee_asset_item-u32 \"Direct link to reservetransferassetsdest-xcmversionedmultilocation-beneficiary-xcmversionedmultilocation-assets-xcmversionedmultiassets-fee_asset_item-u32\")\n\n*   **interface**: `api.tx.xcmPallet.reserveTransferAssets`\n*   **summary**: See \\[`Pallet::reserve_transfer_assets`\\].\n\n### send(dest: `XcmVersionedMultiLocation`, message: `XcmVersionedXcm`)[\u200b](#senddest-xcmversionedmultilocation-message-xcmversionedxcm \"Direct link to senddest-xcmversionedmultilocation-message-xcmversionedxcm\")\n\n*   **interface**: `api.tx.xcmPallet.send`\n*   **summary**: See \\[`Pallet::send`\\].\n\n### teleportAssets(dest: `XcmVersionedMultiLocation`, beneficiary: `XcmVersionedMultiLocation`, assets: `XcmVersionedMultiAssets`, fee\\_asset\\_item: `u32`)[\u200b](#teleportassetsdest-xcmversionedmultilocation-beneficiary-xcmversionedmultilocation-assets-xcmversionedmultiassets-fee_asset_item-u32 \"Direct link to teleportassetsdest-xcmversionedmultilocation-beneficiary-xcmversionedmultilocation-assets-xcmversionedmultiassets-fee_asset_item-u32\")\n\n*   **interface**: `api.tx.xcmPallet.teleportAssets`\n*   **summary**: See \\[`Pallet::teleport_assets`\\].\n\n[Edit this page](https://github.com/polkadot-js/docs/edit/master/docs/polkadot/extrinsics.md)\n\n[Previous\\\n\\\nStorage](/docs/polkadot/storage)\n[Next\\\n\\\nEvents](/docs/polkadot/events)\n\n*   [auctions](#auctions)\n    *   [bid(para: `Compact<u32>`, auction\\_index: `Compact<u32>`, first\\_slot: `Compact<u32>`, last\\_slot: `Compact<u32>`, amount: `Compact<u128>`)](#bidpara-compactu32-auction_index-compactu32-first_slot-compactu32-last_slot-compactu32-amount-compactu128)\n        \n    *   [cancelAuction()](#cancelauction)\n        \n    *   [newAuction(duration: `Compact<u32>`, lease\\_period\\_index: `Compact<u32>`)](#newauctionduration-compactu32-lease_period_index-compactu32)\n        \n*   [babe](#babe)\n    *   [planConfigChange(config: `SpConsensusBabeDigestsNextConfigDescriptor`)](#planconfigchangeconfig-spconsensusbabedigestsnextconfigdescriptor)\n        \n    *   [reportEquivocation(equivocation\\_proof: `SpConsensusSlotsEquivocationProof`, key\\_owner\\_proof: `SpSessionMembershipProof`)](#reportequivocationequivocation_proof-spconsensusslotsequivocationproof-key_owner_proof-spsessionmembershipproof)\n        \n    *   [reportEquivocationUnsigned(equivocation\\_proof: `SpConsensusSlotsEquivocationProof`, key\\_owner\\_proof: `SpSessionMembershipProof`)](#reportequivocationunsignedequivocation_proof-spconsensusslotsequivocationproof-key_owner_proof-spsessionmembershipproof)\n        \n*   [balances](#balances)\n    *   [forceSetBalance(who: `MultiAddress`, new\\_free: `Compact<u128>`)](#forcesetbalancewho-multiaddress-new_free-compactu128)\n        \n    *   [forceTransfer(source: `MultiAddress`, dest: `MultiAddress`, value: `Compact<u128>`)](#forcetransfersource-multiaddress-dest-multiaddress-value-compactu128)\n        \n    *   [forceUnreserve(who: `MultiAddress`, amount: `u128`)](#forceunreservewho-multiaddress-amount-u128)\n        \n    *   [setBalanceDeprecated(who: `MultiAddress`, new\\_free: `Compact<u128>`, old\\_reserved: `Compact<u128>`)](#setbalancedeprecatedwho-multiaddress-new_free-compactu128-old_reserved-compactu128)\n        \n    *   [transfer(dest: `MultiAddress`, value: `Compact<u128>`)](#transferdest-multiaddress-value-compactu128)\n        \n    *   [transferAll(dest: `MultiAddress`, keep\\_alive: `bool`)](#transferalldest-multiaddress-keep_alive-bool)\n        \n    *   [transferAllowDeath(dest: `MultiAddress`, value: `Compact<u128>`)](#transferallowdeathdest-multiaddress-value-compactu128)\n        \n    *   [transferKeepAlive(dest: `MultiAddress`, value: `Compact<u128>`)](#transferkeepalivedest-multiaddress-value-compactu128)\n        \n    *   [upgradeAccounts(who: `Vec<AccountId32>`)](#upgradeaccountswho-vecaccountid32)\n        \n*   [bounties](#bounties)\n    *   [acceptCurator(bounty\\_id: `Compact<u32>`)](#acceptcuratorbounty_id-compactu32)\n        \n    *   [approveBounty(bounty\\_id: `Compact<u32>`)](#approvebountybounty_id-compactu32)\n        \n    *   [awardBounty(bounty\\_id: `Compact<u32>`, beneficiary: `MultiAddress`)](#awardbountybounty_id-compactu32-beneficiary-multiaddress)\n        \n    *   [claimBounty(bounty\\_id: `Compact<u32>`)](#claimbountybounty_id-compactu32)\n        \n    *   [closeBounty(bounty\\_id: `Compact<u32>`)](#closebountybounty_id-compactu32)\n        \n    *   [extendBountyExpiry(bounty\\_id: `Compact<u32>`, remark: `Bytes`)](#extendbountyexpirybounty_id-compactu32-remark-bytes)\n        \n    *   [proposeBounty(value: `Compact<u128>`, description: `Bytes`)](#proposebountyvalue-compactu128-description-bytes)\n        \n    *   [proposeCurator(bounty\\_id: `Compact<u32>`, curator: `MultiAddress`, fee: `Compact<u128>`)](#proposecuratorbounty_id-compactu32-curator-multiaddress-fee-compactu128)\n        \n    *   [unassignCurator(bounty\\_id: `Compact<u32>`)](#unassigncuratorbounty_id-compactu32)\n        \n*   [childBounties](#childbounties)\n    *   [acceptCurator(parent\\_bounty\\_id: `Compact<u32>`, child\\_bounty\\_id: `Compact<u32>`)](#acceptcuratorparent_bounty_id-compactu32-child_bounty_id-compactu32)\n        \n    *   [addChildBounty(parent\\_bounty\\_id: `Compact<u32>`, value: `Compact<u128>`, description: `Bytes`)](#addchildbountyparent_bounty_id-compactu32-value-compactu128-description-bytes)\n        \n    *   [awardChildBounty(parent\\_bounty\\_id: `Compact<u32>`, child\\_bounty\\_id: `Compact<u32>`, beneficiary: `MultiAddress`)](#awardchildbountyparent_bounty_id-compactu32-child_bounty_id-compactu32-beneficiary-multiaddress)\n        \n    *   [claimChildBounty(parent\\_bounty\\_id: `Compact<u32>`, child\\_bounty\\_id: `Compact<u32>`)](#claimchildbountyparent_bounty_id-compactu32-child_bounty_id-compactu32)\n        \n    *   [closeChildBounty(parent\\_bounty\\_id: `Compact<u32>`, child\\_bounty\\_id: `Compact<u32>`)](#closechildbountyparent_bounty_id-compactu32-child_bounty_id-compactu32)\n        \n    *   [proposeCurator(parent\\_bounty\\_id: `Compact<u32>`, child\\_bounty\\_id: `Compact<u32>`, curator: `MultiAddress`, fee: `Compact<u128>`)](#proposecuratorparent_bounty_id-compactu32-child_bounty_id-compactu32-curator-multiaddress-fee-compactu128)\n        \n    *   [unassignCurator(parent\\_bounty\\_id: `Compact<u32>`, child\\_bounty\\_id: `Compact<u32>`)](#unassigncuratorparent_bounty_id-compactu32-child_bounty_id-compactu32)\n        \n*   [claims](#claims)\n    *   [attest(statement: `Bytes`)](#atteststatement-bytes)\n        \n    *   [claim(dest: `AccountId32`, ethereum\\_signature: `PolkadotRuntimeCommonClaimsEcdsaSignature`)](#claimdest-accountid32-ethereum_signature-polkadotruntimecommonclaimsecdsasignature)\n        \n    *   [claimAttest(dest: `AccountId32`, ethereum\\_signature: `PolkadotRuntimeCommonClaimsEcdsaSignature`, statement: `Bytes`)](#claimattestdest-accountid32-ethereum_signature-polkadotruntimecommonclaimsecdsasignature-statement-bytes)\n        \n    *   [mintClaim(who: `EthereumAddress`, value: `u128`, vesting\\_schedule: `Option<(u128,u128,u32)>`, statement: `Option<PolkadotRuntimeCommonClaimsStatementKind>`)](#mintclaimwho-ethereumaddress-value-u128-vesting_schedule-optionu128u128u32-statement-optionpolkadotruntimecommonclaimsstatementkind)\n        \n    *   [moveClaim(old: `EthereumAddress`, new: `EthereumAddress`, maybe\\_preclaim: `Option<AccountId32>`)](#moveclaimold-ethereumaddress-new-ethereumaddress-maybe_preclaim-optionaccountid32)\n        \n*   [configuration](#configuration)\n    *   [setAsyncBackingParams(new: `PolkadotPrimitivesVstagingAsyncBackingParams`)](#setasyncbackingparamsnew-polkadotprimitivesvstagingasyncbackingparams)\n        \n    *   [setBypassConsistencyCheck(new: `bool`)](#setbypassconsistencychecknew-bool)\n        \n    *   [setCodeRetentionPeriod(new: `u32`)](#setcoderetentionperiodnew-u32)\n        \n    *   [setDisputePeriod(new: `u32`)](#setdisputeperiodnew-u32)\n        \n    *   [setDisputePostConclusionAcceptancePeriod(new: `u32`)](#setdisputepostconclusionacceptanceperiodnew-u32)\n        \n    *   [setExecutorParams(new: `PolkadotPrimitivesV5ExecutorParams`)](#setexecutorparamsnew-polkadotprimitivesv5executorparams)\n        \n    *   [setGroupRotationFrequency(new: `u32`)](#setgrouprotationfrequencynew-u32)\n        \n    *   [setHrmpChannelMaxCapacity(new: `u32`)](#sethrmpchannelmaxcapacitynew-u32)\n        \n    *   [setHrmpChannelMaxMessageSize(new: `u32`)](#sethrmpchannelmaxmessagesizenew-u32)\n        \n    *   [setHrmpChannelMaxTotalSize(new: `u32`)](#sethrmpchannelmaxtotalsizenew-u32)\n        \n    *   [setHrmpMaxMessageNumPerCandidate(new: `u32`)](#sethrmpmaxmessagenumpercandidatenew-u32)\n        \n    *   [setHrmpMaxParachainInboundChannels(new: `u32`)](#sethrmpmaxparachaininboundchannelsnew-u32)\n        \n    *   [setHrmpMaxParachainOutboundChannels(new: `u32`)](#sethrmpmaxparachainoutboundchannelsnew-u32)\n        \n    *   [setHrmpOpenRequestTtl(new: `u32`)](#sethrmpopenrequestttlnew-u32)\n        \n    *   [setHrmpRecipientDeposit(new: `u128`)](#sethrmprecipientdepositnew-u128)\n        \n    *   [setHrmpSenderDeposit(new: `u128`)](#sethrmpsenderdepositnew-u128)\n        \n    *   [setMaxCodeSize(new: `u32`)](#setmaxcodesizenew-u32)\n        \n    *   [setMaxDownwardMessageSize(new: `u32`)](#setmaxdownwardmessagesizenew-u32)\n        \n    *   [setMaxHeadDataSize(new: `u32`)](#setmaxheaddatasizenew-u32)\n        \n    *   [setMaxPovSize(new: `u32`)](#setmaxpovsizenew-u32)\n        \n    *   [setMaxUpwardMessageNumPerCandidate(new: `u32`)](#setmaxupwardmessagenumpercandidatenew-u32)\n        \n    *   [setMaxUpwardMessageSize(new: `u32`)](#setmaxupwardmessagesizenew-u32)\n        \n    *   [setMaxUpwardQueueCount(new: `u32`)](#setmaxupwardqueuecountnew-u32)\n        \n    *   [setMaxUpwardQueueSize(new: `u32`)](#setmaxupwardqueuesizenew-u32)\n        \n    *   [setMaxValidators(new: `Option<u32>`)](#setmaxvalidatorsnew-optionu32)\n        \n    *   [setMaxValidatorsPerCore(new: `Option<u32>`)](#setmaxvalidatorspercorenew-optionu32)\n        \n    *   [setMinimumValidationUpgradeDelay(new: `u32`)](#setminimumvalidationupgradedelaynew-u32)\n        \n    *   [setNDelayTranches(new: `u32`)](#setndelaytranchesnew-u32)\n        \n    *   [setNeededApprovals(new: `u32`)](#setneededapprovalsnew-u32)\n        \n    *   [setNoShowSlots(new: `u32`)](#setnoshowslotsnew-u32)\n        \n    *   [setOnDemandBaseFee(new: `u128`)](#setondemandbasefeenew-u128)\n        \n    *   [setOnDemandCores(new: `u32`)](#setondemandcoresnew-u32)\n        \n    *   [setOnDemandFeeVariability(new: `Perbill`)](#setondemandfeevariabilitynew-perbill)\n        \n    *   [setOnDemandQueueMaxSize(new: `u32`)](#setondemandqueuemaxsizenew-u32)\n        \n    *   [setOnDemandRetries(new: `u32`)](#setondemandretriesnew-u32)\n        \n    *   [setOnDemandTargetQueueUtilization(new: `Perbill`)](#setondemandtargetqueueutilizationnew-perbill)\n        \n    *   [setOnDemandTtl(new: `u32`)](#setondemandttlnew-u32)\n        \n    *   [setParasAvailabilityPeriod(new: `u32`)](#setparasavailabilityperiodnew-u32)\n        \n    *   [setPvfVotingTtl(new: `u32`)](#setpvfvotingttlnew-u32)\n        \n    *   [setRelayVrfModuloSamples(new: `u32`)](#setrelayvrfmodulosamplesnew-u32)\n        \n    *   [setSchedulingLookahead(new: `u32`)](#setschedulinglookaheadnew-u32)\n        \n    *   [setValidationUpgradeCooldown(new: `u32`)](#setvalidationupgradecooldownnew-u32)\n        \n    *   [setValidationUpgradeDelay(new: `u32`)](#setvalidationupgradedelaynew-u32)\n        \n    *   [setZerothDelayTrancheWidth(new: `u32`)](#setzerothdelaytranchewidthnew-u32)\n        \n*   [convictionVoting](#convictionvoting)\n    *   [delegate(class: `u16`, to: `MultiAddress`, conviction: `PalletConvictionVotingConviction`, balance: `u128`)](#delegateclass-u16-to-multiaddress-conviction-palletconvictionvotingconviction-balance-u128)\n        \n    *   [removeOtherVote(target: `MultiAddress`, class: `u16`, index: `u32`)](#removeothervotetarget-multiaddress-class-u16-index-u32)\n        \n    *   [removeVote(class: `Option<u16>`, index: `u32`)](#removevoteclass-optionu16-index-u32)\n        \n    *   [undelegate(class: `u16`)](#undelegateclass-u16)\n        \n    *   [unlock(class: `u16`, target: `MultiAddress`)](#unlockclass-u16-target-multiaddress)\n        \n    *   [vote(poll\\_index: `Compact<u32>`, vote: `PalletConvictionVotingVoteAccountVote`)](#votepoll_index-compactu32-vote-palletconvictionvotingvoteaccountvote)\n        \n*   [crowdloan](#crowdloan)\n    *   [addMemo(index: `u32`, memo: `Bytes`)](#addmemoindex-u32-memo-bytes)\n        \n    *   [contribute(index: `Compact<u32>`, value: `Compact<u128>`, signature: `Option<SpRuntimeMultiSignature>`)](#contributeindex-compactu32-value-compactu128-signature-optionspruntimemultisignature)\n        \n    *   [contributeAll(index: `Compact<u32>`, signature: `Option<SpRuntimeMultiSignature>`)](#contributeallindex-compactu32-signature-optionspruntimemultisignature)\n        \n    *   [create(index: `Compact<u32>`, cap: `Compact<u128>`, first\\_period: `Compact<u32>`, last\\_period: `Compact<u32>`, end: `Compact<u32>`, verifier: `Option<SpRuntimeMultiSigner>`)](#createindex-compactu32-cap-compactu128-first_period-compactu32-last_period-compactu32-end-compactu32-verifier-optionspruntimemultisigner)\n        \n    *   [dissolve(index: `Compact<u32>`)](#dissolveindex-compactu32)\n        \n    *   [edit(index: `Compact<u32>`, cap: `Compact<u128>`, first\\_period: `Compact<u32>`, last\\_period: `Compact<u32>`, end: `Compact<u32>`, verifier: `Option<SpRuntimeMultiSigner>`)](#editindex-compactu32-cap-compactu128-first_period-compactu32-last_period-compactu32-end-compactu32-verifier-optionspruntimemultisigner)\n        \n    *   [poke(index: `u32`)](#pokeindex-u32)\n        \n    *   [refund(index: `Compact<u32>`)](#refundindex-compactu32)\n        \n    *   [withdraw(who: `AccountId32`, index: `Compact<u32>`)](#withdrawwho-accountid32-index-compactu32)\n        \n*   [electionProviderMultiPhase](#electionprovidermultiphase)\n    *   [governanceFallback(maybe\\_max\\_voters: `Option<u32>`, maybe\\_max\\_targets: `Option<u32>`)](#governancefallbackmaybe_max_voters-optionu32-maybe_max_targets-optionu32)\n        \n    *   [setEmergencyElectionResult(supports: `Vec<(AccountId32,SpNposElectionsSupport)>`)](#setemergencyelectionresultsupports-vecaccountid32spnposelectionssupport)\n        \n    *   [setMinimumUntrustedScore(maybe\\_next\\_score: `Option<SpNposElectionsElectionScore>`)](#setminimumuntrustedscoremaybe_next_score-optionspnposelectionselectionscore)\n        \n    *   [submit(raw\\_solution: `PalletElectionProviderMultiPhaseRawSolution`)](#submitraw_solution-palletelectionprovidermultiphaserawsolution)\n        \n    *   [submitUnsigned(raw\\_solution: `PalletElectionProviderMultiPhaseRawSolution`, witness: `PalletElectionProviderMultiPhaseSolutionOrSnapshotSize`)](#submitunsignedraw_solution-palletelectionprovidermultiphaserawsolution-witness-palletelectionprovidermultiphasesolutionorsnapshotsize)\n        \n*   [fastUnstake](#fastunstake)\n    *   [control(eras\\_to\\_check: `u32`)](#controleras_to_check-u32)\n        \n    *   [deregister()](#deregister)\n        \n    *   [registerFastUnstake()](#registerfastunstake)\n        \n*   [grandpa](#grandpa)\n    *   [noteStalled(delay: `u32`, best\\_finalized\\_block\\_number: `u32`)](#notestalleddelay-u32-best_finalized_block_number-u32)\n        \n    *   [reportEquivocation(equivocation\\_proof: `SpConsensusGrandpaEquivocationProof`, key\\_owner\\_proof: `SpSessionMembershipProof`)](#reportequivocationequivocation_proof-spconsensusgrandpaequivocationproof-key_owner_proof-spsessionmembershipproof)\n        \n    *   [reportEquivocationUnsigned(equivocation\\_proof: `SpConsensusGrandpaEquivocationProof`, key\\_owner\\_proof: `SpSessionMembershipProof`)](#reportequivocationunsignedequivocation_proof-spconsensusgrandpaequivocationproof-key_owner_proof-spsessionmembershipproof)\n        \n*   [hrmp](#hrmp)\n    *   [forceCleanHrmp(para: `u32`, inbound: `u32`, outbound: `u32`)](#forcecleanhrmppara-u32-inbound-u32-outbound-u32)\n        \n    *   [forceOpenHrmpChannel(sender: `u32`, recipient: `u32`, max\\_capacity: `u32`, max\\_message\\_size: `u32`)](#forceopenhrmpchannelsender-u32-recipient-u32-max_capacity-u32-max_message_size-u32)\n        \n    *   [forceProcessHrmpClose(channels: `u32`)](#forceprocesshrmpclosechannels-u32)\n        \n    *   [forceProcessHrmpOpen(channels: `u32`)](#forceprocesshrmpopenchannels-u32)\n        \n    *   [hrmpAcceptOpenChannel(sender: `u32`)](#hrmpacceptopenchannelsender-u32)\n        \n    *   [hrmpCancelOpenRequest(channel\\_id: `PolkadotParachainPrimitivesHrmpChannelId`, open\\_requests: `u32`)](#hrmpcancelopenrequestchannel_id-polkadotparachainprimitiveshrmpchannelid-open_requests-u32)\n        \n    *   [hrmpCloseChannel(channel\\_id: `PolkadotParachainPrimitivesHrmpChannelId`)](#hrmpclosechannelchannel_id-polkadotparachainprimitiveshrmpchannelid)\n        \n    *   [hrmpInitOpenChannel(recipient: `u32`, proposed\\_max\\_capacity: `u32`, proposed\\_max\\_message\\_size: `u32`)](#hrmpinitopenchannelrecipient-u32-proposed_max_capacity-u32-proposed_max_message_size-u32)\n        \n*   [identity](#identity)\n    *   [addRegistrar(account: `MultiAddress`)](#addregistraraccount-multiaddress)\n        \n    *   [addSub(sub: `MultiAddress`, data: `Data`)](#addsubsub-multiaddress-data-data)\n        \n    *   [cancelRequest(reg\\_index: `u32`)](#cancelrequestreg_index-u32)\n        \n    *   [clearIdentity()](#clearidentity)\n        \n    *   [killIdentity(target: `MultiAddress`)](#killidentitytarget-multiaddress)\n        \n    *   [provideJudgement(reg\\_index: `Compact<u32>`, target: `MultiAddress`, judgement: `PalletIdentityJudgement`, identity: `H256`)](#providejudgementreg_index-compactu32-target-multiaddress-judgement-palletidentityjudgement-identity-h256)\n        \n    *   [quitSub()](#quitsub)\n        \n    *   [removeSub(sub: `MultiAddress`)](#removesubsub-multiaddress)\n        \n    *   [renameSub(sub: `MultiAddress`, data: `Data`)](#renamesubsub-multiaddress-data-data)\n        \n    *   [requestJudgement(reg\\_index: `Compact<u32>`, max\\_fee: `Compact<u128>`)](#requestjudgementreg_index-compactu32-max_fee-compactu128)\n        \n    *   [setAccountId(index: `Compact<u32>`, new: `MultiAddress`)](#setaccountidindex-compactu32-new-multiaddress)\n        \n    *   [setFee(index: `Compact<u32>`, fee: `Compact<u128>`)](#setfeeindex-compactu32-fee-compactu128)\n        \n    *   [setFields(index: `Compact<u32>`, fields: `PalletIdentityBitFlags`)](#setfieldsindex-compactu32-fields-palletidentitybitflags)\n        \n    *   [setIdentity(info: `PalletIdentityIdentityInfo`)](#setidentityinfo-palletidentityidentityinfo)\n        \n    *   [setSubs(subs: `Vec<(AccountId32,Data)>`)](#setsubssubs-vecaccountid32data)\n        \n*   [imOnline](#imonline)\n    *   [heartbeat(heartbeat: `PalletImOnlineHeartbeat`, signature: `PalletImOnlineSr25519AppSr25519Signature`)](#heartbeatheartbeat-palletimonlineheartbeat-signature-palletimonlinesr25519appsr25519signature)\n        \n*   [indices](#indices)\n    *   [claim(index: `u32`)](#claimindex-u32)\n        \n    *   [forceTransfer(new: `MultiAddress`, index: `u32`, freeze: `bool`)](#forcetransfernew-multiaddress-index-u32-freeze-bool)\n        \n    *   [free(index: `u32`)](#freeindex-u32)\n        \n    *   [freeze(index: `u32`)](#freezeindex-u32)\n        \n    *   [transfer(new: `MultiAddress`, index: `u32`)](#transfernew-multiaddress-index-u32)\n        \n*   [initializer](#initializer)\n    *   [forceApprove(up\\_to: `u32`)](#forceapproveup_to-u32)\n        \n*   [messageQueue](#messagequeue)\n    *   [executeOverweight(message\\_origin: `PolkadotRuntimeParachainsInclusionAggregateMessageOrigin`, page: `u32`, index: `u32`, weight\\_limit: `SpWeightsWeightV2Weight`)](#executeoverweightmessage_origin-polkadotruntimeparachainsinclusionaggregatemessageorigin-page-u32-index-u32-weight_limit-spweightsweightv2weight)\n        \n    *   [reapPage(message\\_origin: `PolkadotRuntimeParachainsInclusionAggregateMessageOrigin`, page\\_index: `u32`)](#reappagemessage_origin-polkadotruntimeparachainsinclusionaggregatemessageorigin-page_index-u32)\n        \n*   [multisig](#multisig)\n    *   [approveAsMulti(threshold: `u16`, other\\_signatories: `Vec<AccountId32>`, maybe\\_timepoint: `Option<PalletMultisigTimepoint>`, call\\_hash: `[u8;32]`, max\\_weight: `SpWeightsWeightV2Weight`)](#approveasmultithreshold-u16-other_signatories-vecaccountid32-maybe_timepoint-optionpalletmultisigtimepoint-call_hash-u832-max_weight-spweightsweightv2weight)\n        \n    *   [asMulti(threshold: `u16`, other\\_signatories: `Vec<AccountId32>`, maybe\\_timepoint: `Option<PalletMultisigTimepoint>`, call: `Call`, max\\_weight: `SpWeightsWeightV2Weight`)](#asmultithreshold-u16-other_signatories-vecaccountid32-maybe_timepoint-optionpalletmultisigtimepoint-call-call-max_weight-spweightsweightv2weight)\n        \n    *   [asMultiThreshold1(other\\_signatories: `Vec<AccountId32>`, call: `Call`)](#asmultithreshold1other_signatories-vecaccountid32-call-call)\n        \n    *   [cancelAsMulti(threshold: `u16`, other\\_signatories: `Vec<AccountId32>`, timepoint: `PalletMultisigTimepoint`, call\\_hash: `[u8;32]`)](#cancelasmultithreshold-u16-other_signatories-vecaccountid32-timepoint-palletmultisigtimepoint-call_hash-u832)\n        \n*   [nominationPools](#nominationpools)\n    *   [bondExtra(extra: `PalletNominationPoolsBondExtra`)](#bondextraextra-palletnominationpoolsbondextra)\n        \n    *   [bondExtraOther(member: `MultiAddress`, extra: `PalletNominationPoolsBondExtra`)](#bondextraothermember-multiaddress-extra-palletnominationpoolsbondextra)\n        \n    *   [chill(pool\\_id: `u32`)](#chillpool_id-u32)\n        \n    *   [claimCommission(pool\\_id: `u32`)](#claimcommissionpool_id-u32)\n        \n    *   [claimPayout()](#claimpayout)\n        \n    *   [claimPayoutOther(other: `AccountId32`)](#claimpayoutotherother-accountid32)\n        \n    *   [create(amount: `Compact<u128>`, root: `MultiAddress`, nominator: `MultiAddress`, bouncer: `MultiAddress`)](#createamount-compactu128-root-multiaddress-nominator-multiaddress-bouncer-multiaddress)\n        \n    *   [createWithPoolId(amount: `Compact<u128>`, root: `MultiAddress`, nominator: `MultiAddress`, bouncer: `MultiAddress`, pool\\_id: `u32`)](#createwithpoolidamount-compactu128-root-multiaddress-nominator-multiaddress-bouncer-multiaddress-pool_id-u32)\n        \n    *   [join(amount: `Compact<u128>`, pool\\_id: `u32`)](#joinamount-compactu128-pool_id-u32)\n        \n    *   [nominate(pool\\_id: `u32`, validators: `Vec<AccountId32>`)](#nominatepool_id-u32-validators-vecaccountid32)\n        \n    *   [poolWithdrawUnbonded(pool\\_id: `u32`, num\\_slashing\\_spans: `u32`)](#poolwithdrawunbondedpool_id-u32-num_slashing_spans-u32)\n        \n    *   [setClaimPermission(permission: `PalletNominationPoolsClaimPermission`)](#setclaimpermissionpermission-palletnominationpoolsclaimpermission)\n        \n    *   [setCommission(pool\\_id: `u32`, new\\_commission: `Option<(Perbill,AccountId32)>`)](#setcommissionpool_id-u32-new_commission-optionperbillaccountid32)\n        \n    *   [setCommissionChangeRate(pool\\_id: `u32`, change\\_rate: `PalletNominationPoolsCommissionChangeRate`)](#setcommissionchangeratepool_id-u32-change_rate-palletnominationpoolscommissionchangerate)\n        \n    *   [setCommissionMax(pool\\_id: `u32`, max\\_commission: `Perbill`)](#setcommissionmaxpool_id-u32-max_commission-perbill)\n        \n    *   [setConfigs(min\\_join\\_bond: `PalletNominationPoolsConfigOpU128`, min\\_create\\_bond: `PalletNominationPoolsConfigOpU128`, max\\_pools: `PalletNominationPoolsConfigOpU32`, max\\_members: `PalletNominationPoolsConfigOpU32`, max\\_members\\_per\\_pool: `PalletNominationPoolsConfigOpU32`, global\\_max\\_commission: `PalletNominationPoolsConfigOpPerbill`)](#setconfigsmin_join_bond-palletnominationpoolsconfigopu128-min_create_bond-palletnominationpoolsconfigopu128-max_pools-palletnominationpoolsconfigopu32-max_members-palletnominationpoolsconfigopu32-max_members_per_pool-palletnominationpoolsconfigopu32-global_max_commission-palletnominationpoolsconfigopperbill)\n        \n    *   [setMetadata(pool\\_id: `u32`, metadata: `Bytes`)](#setmetadatapool_id-u32-metadata-bytes)\n        \n    *   [setState(pool\\_id: `u32`, state: `PalletNominationPoolsPoolState`)](#setstatepool_id-u32-state-palletnominationpoolspoolstate)\n        \n    *   [unbond(member\\_account: `MultiAddress`, unbonding\\_points: `Compact<u128>`)](#unbondmember_account-multiaddress-unbonding_points-compactu128)\n        \n    *   [updateRoles(pool\\_id: `u32`, new\\_root: `PalletNominationPoolsConfigOpAccountId32`, new\\_nominator: `PalletNominationPoolsConfigOpAccountId32`, new\\_bouncer: `PalletNominationPoolsConfigOpAccountId32`)](#updaterolespool_id-u32-new_root-palletnominationpoolsconfigopaccountid32-new_nominator-palletnominationpoolsconfigopaccountid32-new_bouncer-palletnominationpoolsconfigopaccountid32)\n        \n    *   [withdrawUnbonded(member\\_account: `MultiAddress`, num\\_slashing\\_spans: `u32`)](#withdrawunbondedmember_account-multiaddress-num_slashing_spans-u32)\n        \n*   [paraInclusion](#parainclusion)\n    \n*   [paraInherent](#parainherent)\n    *   [enter(data: `PolkadotPrimitivesV5InherentData`)](#enterdata-polkadotprimitivesv5inherentdata)\n        \n*   [paras](#paras)\n    *   [addTrustedValidationCode(validation\\_code: `Bytes`)](#addtrustedvalidationcodevalidation_code-bytes)\n        \n    *   [forceNoteNewHead(para: `u32`, new\\_head: `Bytes`)](#forcenotenewheadpara-u32-new_head-bytes)\n        \n    *   [forceQueueAction(para: `u32`)](#forcequeueactionpara-u32)\n        \n    *   [forceScheduleCodeUpgrade(para: `u32`, new\\_code: `Bytes`, relay\\_parent\\_number: `u32`)](#forceschedulecodeupgradepara-u32-new_code-bytes-relay_parent_number-u32)\n        \n    *   [forceSetCurrentCode(para: `u32`, new\\_code: `Bytes`)](#forcesetcurrentcodepara-u32-new_code-bytes)\n        \n    *   [forceSetCurrentHead(para: `u32`, new\\_head: `Bytes`)](#forcesetcurrentheadpara-u32-new_head-bytes)\n        \n    *   [forceSetMostRecentContext(para: `u32`, context: `u32`)](#forcesetmostrecentcontextpara-u32-context-u32)\n        \n    *   [includePvfCheckStatement(stmt: `PolkadotPrimitivesV5PvfCheckStatement`, signature: `PolkadotPrimitivesV5ValidatorAppSignature`)](#includepvfcheckstatementstmt-polkadotprimitivesv5pvfcheckstatement-signature-polkadotprimitivesv5validatorappsignature)\n        \n    *   [pokeUnusedValidationCode(validation\\_code\\_hash: `H256`)](#pokeunusedvalidationcodevalidation_code_hash-h256)\n        \n*   [parasDisputes](#parasdisputes)\n    *   [forceUnfreeze()](#forceunfreeze)\n        \n*   [parasShared](#parasshared)\n    \n*   [parasSlashing](#parasslashing)\n    *   [reportDisputeLostUnsigned(dispute\\_proof: `PolkadotPrimitivesV5SlashingDisputeProof`, key\\_owner\\_proof: `SpSessionMembershipProof`)](#reportdisputelostunsigneddispute_proof-polkadotprimitivesv5slashingdisputeproof-key_owner_proof-spsessionmembershipproof)\n        \n*   [preimage](#preimage)\n    *   [notePreimage(bytes: `Bytes`)](#notepreimagebytes-bytes)\n        \n    *   [requestPreimage(hash: `H256`)](#requestpreimagehash-h256)\n        \n    *   [unnotePreimage(hash: `H256`)](#unnotepreimagehash-h256)\n        \n    *   [unrequestPreimage(hash: `H256`)](#unrequestpreimagehash-h256)\n        \n*   [proxy](#proxy)\n    *   [addProxy(delegate: `MultiAddress`, proxy\\_type: `PolkadotRuntimeProxyType`, delay: `u32`)](#addproxydelegate-multiaddress-proxy_type-polkadotruntimeproxytype-delay-u32)\n        \n    *   [announce(real: `MultiAddress`, call\\_hash: `H256`)](#announcereal-multiaddress-call_hash-h256)\n        \n    *   [createPure(proxy\\_type: `PolkadotRuntimeProxyType`, delay: `u32`, index: `u16`)](#createpureproxy_type-polkadotruntimeproxytype-delay-u32-index-u16)\n        \n    *   [killPure(spawner: `MultiAddress`, proxy\\_type: `PolkadotRuntimeProxyType`, index: `u16`, height: `Compact<u32>`, ext\\_index: `Compact<u32>`)](#killpurespawner-multiaddress-proxy_type-polkadotruntimeproxytype-index-u16-height-compactu32-ext_index-compactu32)\n        \n    *   [proxy(real: `MultiAddress`, force\\_proxy\\_type: `Option<PolkadotRuntimeProxyType>`, call: `Call`)](#proxyreal-multiaddress-force_proxy_type-optionpolkadotruntimeproxytype-call-call)\n        \n    *   [proxyAnnounced(delegate: `MultiAddress`, real: `MultiAddress`, force\\_proxy\\_type: `Option<PolkadotRuntimeProxyType>`, call: `Call`)](#proxyannounceddelegate-multiaddress-real-multiaddress-force_proxy_type-optionpolkadotruntimeproxytype-call-call)\n        \n    *   [rejectAnnouncement(delegate: `MultiAddress`, call\\_hash: `H256`)](#rejectannouncementdelegate-multiaddress-call_hash-h256)\n        \n    *   [removeAnnouncement(real: `MultiAddress`, call\\_hash: `H256`)](#removeannouncementreal-multiaddress-call_hash-h256)\n        \n    *   [removeProxies()](#removeproxies)\n        \n    *   [removeProxy(delegate: `MultiAddress`, proxy\\_type: `PolkadotRuntimeProxyType`, delay: `u32`)](#removeproxydelegate-multiaddress-proxy_type-polkadotruntimeproxytype-delay-u32)\n        \n*   [referenda](#referenda)\n    *   [cancel(index: `u32`)](#cancelindex-u32)\n        \n    *   [kill(index: `u32`)](#killindex-u32)\n        \n    *   [nudgeReferendum(index: `u32`)](#nudgereferendumindex-u32)\n        \n    *   [oneFewerDeciding(track: `u16`)](#onefewerdecidingtrack-u16)\n        \n    *   [placeDecisionDeposit(index: `u32`)](#placedecisiondepositindex-u32)\n        \n    *   [refundDecisionDeposit(index: `u32`)](#refunddecisiondepositindex-u32)\n        \n    *   [refundSubmissionDeposit(index: `u32`)](#refundsubmissiondepositindex-u32)\n        \n    *   [setMetadata(index: `u32`, maybe\\_hash: `Option<H256>`)](#setmetadataindex-u32-maybe_hash-optionh256)\n        \n    *   [submit(proposal\\_origin: `PolkadotRuntimeOriginCaller`, proposal: `FrameSupportPreimagesBounded`, enactment\\_moment: `FrameSupportScheduleDispatchTime`)](#submitproposal_origin-polkadotruntimeorigincaller-proposal-framesupportpreimagesbounded-enactment_moment-framesupportscheduledispatchtime)\n        \n*   [registrar](#registrar)\n    *   [addLock(para: `u32`)](#addlockpara-u32)\n        \n    *   [deregister(id: `u32`)](#deregisterid-u32)\n        \n    *   [forceRegister(who: `AccountId32`, deposit: `u128`, id: `u32`, genesis\\_head: `Bytes`, validation\\_code: `Bytes`)](#forceregisterwho-accountid32-deposit-u128-id-u32-genesis_head-bytes-validation_code-bytes)\n        \n    *   [register(id: `u32`, genesis\\_head: `Bytes`, validation\\_code: `Bytes`)](#registerid-u32-genesis_head-bytes-validation_code-bytes)\n        \n    *   [removeLock(para: `u32`)](#removelockpara-u32)\n        \n    *   [reserve()](#reserve)\n        \n    *   [scheduleCodeUpgrade(para: `u32`, new\\_code: `Bytes`)](#schedulecodeupgradepara-u32-new_code-bytes)\n        \n    *   [setCurrentHead(para: `u32`, new\\_head: `Bytes`)](#setcurrentheadpara-u32-new_head-bytes)\n        \n    *   [swap(id: `u32`, other: `u32`)](#swapid-u32-other-u32)\n        \n*   [scheduler](#scheduler)\n    *   [cancel(when: `u32`, index: `u32`)](#cancelwhen-u32-index-u32)\n        \n    *   [cancelNamed(id: `[u8;32]`)](#cancelnamedid-u832)\n        \n    *   [schedule(when: `u32`, maybe\\_periodic: `Option<(u32,u32)>`, priority: `u8`, call: `Call`)](#schedulewhen-u32-maybe_periodic-optionu32u32-priority-u8-call-call)\n        \n    *   [scheduleAfter(after: `u32`, maybe\\_periodic: `Option<(u32,u32)>`, priority: `u8`, call: `Call`)](#scheduleafterafter-u32-maybe_periodic-optionu32u32-priority-u8-call-call)\n        \n    *   [scheduleNamed(id: `[u8;32]`, when: `u32`, maybe\\_periodic: `Option<(u32,u32)>`, priority: `u8`, call: `Call`)](#schedulenamedid-u832-when-u32-maybe_periodic-optionu32u32-priority-u8-call-call)\n        \n    *   [scheduleNamedAfter(id: `[u8;32]`, after: `u32`, maybe\\_periodic: `Option<(u32,u32)>`, priority: `u8`, call: `Call`)](#schedulenamedafterid-u832-after-u32-maybe_periodic-optionu32u32-priority-u8-call-call)\n        \n*   [session](#session)\n    *   [purgeKeys()](#purgekeys)\n        \n    *   [setKeys(keys: `PolkadotRuntimeSessionKeys`, proof: `Bytes`)](#setkeyskeys-polkadotruntimesessionkeys-proof-bytes)\n        \n*   [slots](#slots)\n    *   [clearAllLeases(para: `u32`)](#clearallleasespara-u32)\n        \n    *   [forceLease(para: `u32`, leaser: `AccountId32`, amount: `u128`, period\\_begin: `u32`, period\\_count: `u32`)](#forceleasepara-u32-leaser-accountid32-amount-u128-period_begin-u32-period_count-u32)\n        \n    *   [triggerOnboard(para: `u32`)](#triggeronboardpara-u32)\n        \n*   [staking](#staking)\n    *   [bond(value: `Compact<u128>`, payee: `PalletStakingRewardDestination`)](#bondvalue-compactu128-payee-palletstakingrewarddestination)\n        \n    *   [bondExtra(max\\_additional: `Compact<u128>`)](#bondextramax_additional-compactu128)\n        \n    *   [cancelDeferredSlash(era: `u32`, slash\\_indices: `Vec<u32>`)](#canceldeferredslashera-u32-slash_indices-vecu32)\n        \n    *   [chill()](#chill)\n        \n    *   [chillOther(controller: `AccountId32`)](#chillothercontroller-accountid32)\n        \n    *   [forceApplyMinCommission(validator\\_stash: `AccountId32`)](#forceapplymincommissionvalidator_stash-accountid32)\n        \n    *   [forceNewEra()](#forcenewera)\n        \n    *   [forceNewEraAlways()](#forceneweraalways)\n        \n    *   [forceNoEras()](#forcenoeras)\n        \n    *   [forceUnstake(stash: `AccountId32`, num\\_slashing\\_spans: `u32`)](#forceunstakestash-accountid32-num_slashing_spans-u32)\n        \n    *   [increaseValidatorCount(additional: `Compact<u32>`)](#increasevalidatorcountadditional-compactu32)\n        \n    *   [kick(who: `Vec<MultiAddress>`)](#kickwho-vecmultiaddress)\n        \n    *   [nominate(targets: `Vec<MultiAddress>`)](#nominatetargets-vecmultiaddress)\n        \n    *   [payoutStakers(validator\\_stash: `AccountId32`, era: `u32`)](#payoutstakersvalidator_stash-accountid32-era-u32)\n        \n    *   [reapStash(stash: `AccountId32`, num\\_slashing\\_spans: `u32`)](#reapstashstash-accountid32-num_slashing_spans-u32)\n        \n    *   [rebond(value: `Compact<u128>`)](#rebondvalue-compactu128)\n        \n    *   [scaleValidatorCount(factor: `Percent`)](#scalevalidatorcountfactor-percent)\n        \n    *   [setController()](#setcontroller)\n        \n    *   [setInvulnerables(invulnerables: `Vec<AccountId32>`)](#setinvulnerablesinvulnerables-vecaccountid32)\n        \n    *   [setMinCommission(new: `Perbill`)](#setmincommissionnew-perbill)\n        \n    *   [setPayee(payee: `PalletStakingRewardDestination`)](#setpayeepayee-palletstakingrewarddestination)\n        \n    *   [setStakingConfigs(min\\_nominator\\_bond: `PalletStakingPalletConfigOpU128`, min\\_validator\\_bond: `PalletStakingPalletConfigOpU128`, max\\_nominator\\_count: `PalletStakingPalletConfigOpU32`, max\\_validator\\_count: `PalletStakingPalletConfigOpU32`, chill\\_threshold: `PalletStakingPalletConfigOpPercent`, min\\_commission: `PalletStakingPalletConfigOpPerbill`)](#setstakingconfigsmin_nominator_bond-palletstakingpalletconfigopu128-min_validator_bond-palletstakingpalletconfigopu128-max_nominator_count-palletstakingpalletconfigopu32-max_validator_count-palletstakingpalletconfigopu32-chill_threshold-palletstakingpalletconfigoppercent-min_commission-palletstakingpalletconfigopperbill)\n        \n    *   [setValidatorCount(new: `Compact<u32>`)](#setvalidatorcountnew-compactu32)\n        \n    *   [unbond(value: `Compact<u128>`)](#unbondvalue-compactu128)\n        \n    *   [validate(prefs: `PalletStakingValidatorPrefs`)](#validateprefs-palletstakingvalidatorprefs)\n        \n    *   [withdrawUnbonded(num\\_slashing\\_spans: `u32`)](#withdrawunbondednum_slashing_spans-u32)\n        \n*   [system](#system)\n    *   [killPrefix(prefix: `Bytes`, subkeys: `u32`)](#killprefixprefix-bytes-subkeys-u32)\n        \n    *   [killStorage(keys: `Vec<Bytes>`)](#killstoragekeys-vecbytes)\n        \n    *   [remark(remark: `Bytes`)](#remarkremark-bytes)\n        \n    *   [remarkWithEvent(remark: `Bytes`)](#remarkwitheventremark-bytes)\n        \n    *   [setCode(code: `Bytes`)](#setcodecode-bytes)\n        \n    *   [setCodeWithoutChecks(code: `Bytes`)](#setcodewithoutcheckscode-bytes)\n        \n    *   [setHeapPages(pages: `u64`)](#setheappagespages-u64)\n        \n    *   [setStorage(items: `Vec<(Bytes,Bytes)>`)](#setstorageitems-vecbytesbytes)\n        \n*   [timestamp](#timestamp)\n    *   [set(now: `Compact<u64>`)](#setnow-compactu64)\n        \n*   [treasury](#treasury)\n    *   [approveProposal(proposal\\_id: `Compact<u32>`)](#approveproposalproposal_id-compactu32)\n        \n    *   [proposeSpend(value: `Compact<u128>`, beneficiary: `MultiAddress`)](#proposespendvalue-compactu128-beneficiary-multiaddress)\n        \n    *   [rejectProposal(proposal\\_id: `Compact<u32>`)](#rejectproposalproposal_id-compactu32)\n        \n    *   [removeApproval(proposal\\_id: `Compact<u32>`)](#removeapprovalproposal_id-compactu32)\n        \n    *   [spend(amount: `Compact<u128>`, beneficiary: `MultiAddress`)](#spendamount-compactu128-beneficiary-multiaddress)\n        \n*   [utility](#utility)\n    *   [asDerivative(index: `u16`, call: `Call`)](#asderivativeindex-u16-call-call)\n        \n    *   [batch(calls: `Vec<Call>`)](#batchcalls-veccall)\n        \n    *   [batchAll(calls: `Vec<Call>`)](#batchallcalls-veccall)\n        \n    *   [dispatchAs(as\\_origin: `PolkadotRuntimeOriginCaller`, call: `Call`)](#dispatchasas_origin-polkadotruntimeorigincaller-call-call)\n        \n    *   [forceBatch(calls: `Vec<Call>`)](#forcebatchcalls-veccall)\n        \n    *   [withWeight(call: `Call`, weight: `SpWeightsWeightV2Weight`)](#withweightcall-call-weight-spweightsweightv2weight)\n        \n*   [vesting](#vesting)\n    *   [forceVestedTransfer(source: `MultiAddress`, target: `MultiAddress`, schedule: `PalletVestingVestingInfo`)](#forcevestedtransfersource-multiaddress-target-multiaddress-schedule-palletvestingvestinginfo)\n        \n    *   [mergeSchedules(schedule1\\_index: `u32`, schedule2\\_index: `u32`)](#mergeschedulesschedule1_index-u32-schedule2_index-u32)\n        \n    *   [vest()](#vest)\n        \n    *   [vestOther(target: `MultiAddress`)](#vestothertarget-multiaddress)\n        \n    *   [vestedTransfer(target: `MultiAddress`, schedule: `PalletVestingVestingInfo`)](#vestedtransfertarget-multiaddress-schedule-palletvestingvestinginfo)\n        \n*   [voterList](#voterlist)\n    *   [putInFrontOf(lighter: `MultiAddress`)](#putinfrontoflighter-multiaddress)\n        \n    *   [putInFrontOfOther(heavier: `MultiAddress`, lighter: `MultiAddress`)](#putinfrontofotherheavier-multiaddress-lighter-multiaddress)\n        \n    *   [rebag(dislocated: `MultiAddress`)](#rebagdislocated-multiaddress)\n        \n*   [whitelist](#whitelist)\n    *   [dispatchWhitelistedCall(call\\_hash: `H256`, call\\_encoded\\_len: `u32`, call\\_weight\\_witness: `SpWeightsWeightV2Weight`)](#dispatchwhitelistedcallcall_hash-h256-call_encoded_len-u32-call_weight_witness-spweightsweightv2weight)\n        \n    *   [dispatchWhitelistedCallWithPreimage(call: `Call`)](#dispatchwhitelistedcallwithpreimagecall-call)\n        \n    *   [removeWhitelistedCall(call\\_hash: `H256`)](#removewhitelistedcallcall_hash-h256)\n        \n    *   [whitelistCall(call\\_hash: `H256`)](#whitelistcallcall_hash-h256)\n        \n*   [xcmPallet](#xcmpallet)\n    *   [execute(message: `XcmVersionedXcm`, max\\_weight: `SpWeightsWeightV2Weight`)](#executemessage-xcmversionedxcm-max_weight-spweightsweightv2weight)\n        \n    *   [forceDefaultXcmVersion(maybe\\_xcm\\_version: `Option<u32>`)](#forcedefaultxcmversionmaybe_xcm_version-optionu32)\n        \n    *   [forceSubscribeVersionNotify(location: `XcmVersionedMultiLocation`)](#forcesubscribeversionnotifylocation-xcmversionedmultilocation)\n        \n    *   [forceSuspension(suspended: `bool`)](#forcesuspensionsuspended-bool)\n        \n    *   [forceUnsubscribeVersionNotify(location: `XcmVersionedMultiLocation`)](#forceunsubscribeversionnotifylocation-xcmversionedmultilocation)\n        \n    *   [forceXcmVersion(location: `XcmV3MultiLocation`, version: `u32`)](#forcexcmversionlocation-xcmv3multilocation-version-u32)\n        \n    *   [limitedReserveTransferAssets(dest: `XcmVersionedMultiLocation`, beneficiary: `XcmVersionedMultiLocation`, assets: `XcmVersionedMultiAssets`, fee\\_asset\\_item: `u32`, weight\\_limit: `XcmV3WeightLimit`)](#limitedreservetransferassetsdest-xcmversionedmultilocation-beneficiary-xcmversionedmultilocation-assets-xcmversionedmultiassets-fee_asset_item-u32-weight_limit-xcmv3weightlimit)\n        \n    *   [limitedTeleportAssets(dest: `XcmVersionedMultiLocation`, beneficiary: `XcmVersionedMultiLocation`, assets: `XcmVersionedMultiAssets`, fee\\_asset\\_item: `u32`, weight\\_limit: `XcmV3WeightLimit`)](#limitedteleportassetsdest-xcmversionedmultilocation-beneficiary-xcmversionedmultilocation-assets-xcmversionedmultiassets-fee_asset_item-u32-weight_limit-xcmv3weightlimit)\n        \n    *   [reserveTransferAssets(dest: `XcmVersionedMultiLocation`, beneficiary: `XcmVersionedMultiLocation`, assets: `XcmVersionedMultiAssets`, fee\\_asset\\_item: `u32`)](#reservetransferassetsdest-xcmversionedmultilocation-beneficiary-xcmversionedmultilocation-assets-xcmversionedmultiassets-fee_asset_item-u32)\n        \n    *   [send(dest: `XcmVersionedMultiLocation`, message: `XcmVersionedXcm`)](#senddest-xcmversionedmultilocation-message-xcmversionedxcm)\n        \n    *   [teleportAssets(dest: `XcmVersionedMultiLocation`, beneficiary: `XcmVersionedMultiLocation`, assets: `XcmVersionedMultiAssets`, fee\\_asset\\_item: `u32`)](#teleportassetsdest-xcmversionedmultilocation-beneficiary-xcmversionedmultilocation-assets-xcmversionedmultiassets-fee_asset_item-u32)"}, {"title": null, "description": null, "source_url": "https://polkadot.js.org/docs/polkadot/rpc", "markdown": "[Skip to main content](#__docusaurus_skipToContent_fallback)\n\n[![polkadot{.js}](https://polkadot.js.org/docs/img/logo.svg)\\\n\\\n**polkadot{.js}**](/docs/)\n\n[Apps UI (Wallet)](https://polkadot.js.org/apps/)\n[GitHub](https://github.com/polkadot-js/docs)\n\nSearch...\n\n*   [Introduction](#)\n    \n*   [API](#)\n    \n*   [Metadata](#)\n    \n    *   [Substrate](#)\n        \n    *   [Polkadot](#)\n        \n        *   [Overview](/docs/polkadot)\n            \n        *   [Runtime](/docs/polkadot/runtime)\n            \n        *   [JSON-RPC](/docs/polkadot/rpc)\n            \n        *   [Constants](/docs/polkadot/constants)\n            \n        *   [Storage](/docs/polkadot/storage)\n            \n        *   [Extrinsics](/docs/polkadot/extrinsics)\n            \n        *   [Events](/docs/polkadot/events)\n            \n        *   [Errors](/docs/polkadot/errors)\n            \n    *   [Kusama](#)\n        \n*   [Keyring](#)\n    \n*   [Crypto Utilities](#)\n    \n*   [Contracts (API)](#)\n    \n*   [Identicon (UI)](#)\n    \n*   [Keyring (UI)](#)\n    \n*   [Extension](#)\n    \n*   [Run, Bundle, Test](#)\n    \n\n*   [](/docs/)\n    \n*   Metadata\n*   Polkadot\n*   JSON-RPC\n\nOn this page\n\nJSON-RPC\n========\n\nThe following sections contain known RPC methods that may be available on specific nodes (depending on configuration and available pallets) and allow you to interact with the actual node, query, and submit.\n\n*   **[author](#author)\n    **\n    \n*   **[babe](#babe)\n    **\n    \n*   **[beefy](#beefy)\n    **\n    \n*   **[chain](#chain)\n    **\n    \n*   **[childstate](#childstate)\n    **\n    \n*   **[grandpa](#grandpa)\n    **\n    \n*   **[mmr](#mmr)\n    **\n    \n*   **[offchain](#offchain)\n    **\n    \n*   **[payment](#payment)\n    **\n    \n*   **[rpc](#rpc)\n    **\n    \n*   **[state](#state)\n    **\n    \n*   **[syncstate](#syncstate)\n    **\n    \n*   **[system](#system)\n    **\n    \n\n* * *\n\nauthor[\u200b](#author \"Direct link to author\")\n\n-------------------------------------------\n\n### hasKey(publicKey: `Bytes`, keyType: `Text`): `bool`[\u200b](#haskeypublickey-bytes-keytype-text-bool \"Direct link to haskeypublickey-bytes-keytype-text-bool\")\n\n*   **interface**: `api.rpc.author.hasKey`\n*   **jsonrpc**: `author_hasKey`\n*   **summary**: Returns true if the keystore has private keys for the given public key and key type.\n*   **unsafe**: This method is only active with appropriate flags\n\n### hasSessionKeys(sessionKeys: `Bytes`): `bool`[\u200b](#hassessionkeyssessionkeys-bytes-bool \"Direct link to hassessionkeyssessionkeys-bytes-bool\")\n\n*   **interface**: `api.rpc.author.hasSessionKeys`\n*   **jsonrpc**: `author_hasSessionKeys`\n*   **summary**: Returns true if the keystore has private keys for the given session public keys.\n*   **unsafe**: This method is only active with appropriate flags\n\n### insertKey(keyType: `Text`, suri: `Text`, publicKey: `Bytes`): `Bytes`[\u200b](#insertkeykeytype-text-suri-text-publickey-bytes-bytes \"Direct link to insertkeykeytype-text-suri-text-publickey-bytes-bytes\")\n\n*   **interface**: `api.rpc.author.insertKey`\n*   **jsonrpc**: `author_insertKey`\n*   **summary**: Insert a key into the keystore.\n*   **unsafe**: This method is only active with appropriate flags\n\n### pendingExtrinsics(): `Vec<Extrinsic>`[\u200b](#pendingextrinsics-vecextrinsic \"Direct link to pendingextrinsics-vecextrinsic\")\n\n*   **interface**: `api.rpc.author.pendingExtrinsics`\n*   **jsonrpc**: `author_pendingExtrinsics`\n*   **summary**: Returns all pending extrinsics, potentially grouped by sender\n\n### removeExtrinsic(bytesOrHash: `Vec<ExtrinsicOrHash>`): `Vec<Hash>`[\u200b](#removeextrinsicbytesorhash-vecextrinsicorhash-vechash \"Direct link to removeextrinsicbytesorhash-vecextrinsicorhash-vechash\")\n\n*   **interface**: `api.rpc.author.removeExtrinsic`\n*   **jsonrpc**: `author_removeExtrinsic`\n*   **summary**: Remove given extrinsic from the pool and temporarily ban it to prevent reimporting\n*   **unsafe**: This method is only active with appropriate flags\n\n### rotateKeys(): `Bytes`[\u200b](#rotatekeys-bytes \"Direct link to rotatekeys-bytes\")\n\n*   **interface**: `api.rpc.author.rotateKeys`\n*   **jsonrpc**: `author_rotateKeys`\n*   **summary**: Generate new session keys and returns the corresponding public keys\n*   **unsafe**: This method is only active with appropriate flags\n\n### submitAndWatchExtrinsic(extrinsic: `Extrinsic`): `ExtrinsicStatus`[\u200b](#submitandwatchextrinsicextrinsic-extrinsic-extrinsicstatus \"Direct link to submitandwatchextrinsicextrinsic-extrinsic-extrinsicstatus\")\n\n*   **interface**: `api.rpc.author.submitAndWatchExtrinsic`\n*   **jsonrpc**: `author_submitAndWatchExtrinsic`\n*   **summary**: Submit and subscribe to watch an extrinsic until unsubscribed\n\n### submitExtrinsic(extrinsic: `Extrinsic`): `Hash`[\u200b](#submitextrinsicextrinsic-extrinsic-hash \"Direct link to submitextrinsicextrinsic-extrinsic-hash\")\n\n*   **interface**: `api.rpc.author.submitExtrinsic`\n*   **jsonrpc**: `author_submitExtrinsic`\n*   **summary**: Submit a fully formatted extrinsic for block inclusion\n\n* * *\n\nbabe[\u200b](#babe \"Direct link to babe\")\n\n-------------------------------------\n\n### epochAuthorship(): `HashMap<AuthorityId, EpochAuthorship>`[\u200b](#epochauthorship-hashmapauthorityid-epochauthorship \"Direct link to epochauthorship-hashmapauthorityid-epochauthorship\")\n\n*   **interface**: `api.rpc.babe.epochAuthorship`\n*   **jsonrpc**: `babe_epochAuthorship`\n*   **summary**: Returns data about which slots (primary or secondary) can be claimed in the current epoch with the keys in the keystore\n*   **unsafe**: This method is only active with appropriate flags\n\n* * *\n\nbeefy[\u200b](#beefy \"Direct link to beefy\")\n\n----------------------------------------\n\n### getFinalizedHead(): `H256`[\u200b](#getfinalizedhead-h256 \"Direct link to getfinalizedhead-h256\")\n\n*   **interface**: `api.rpc.beefy.getFinalizedHead`\n*   **jsonrpc**: `beefy_getFinalizedHead`\n*   **summary**: Returns hash of the latest BEEFY finalized block as seen by this client.\n\n### subscribeJustifications(): `BeefyVersionedFinalityProof`[\u200b](#subscribejustifications-beefyversionedfinalityproof \"Direct link to subscribejustifications-beefyversionedfinalityproof\")\n\n*   **interface**: `api.rpc.beefy.subscribeJustifications`\n*   **jsonrpc**: `beefy_subscribeJustifications`\n*   **summary**: Returns the block most recently finalized by BEEFY, alongside its justification.\n\n* * *\n\nchain[\u200b](#chain \"Direct link to chain\")\n\n----------------------------------------\n\n### getBlock(hash?: `BlockHash`): `SignedBlock`[\u200b](#getblockhash-blockhash-signedblock \"Direct link to getblockhash-blockhash-signedblock\")\n\n*   **interface**: `api.rpc.chain.getBlock`\n*   **jsonrpc**: `chain_getBlock`\n*   **summary**: Get header and body of a relay chain block\n\n### getBlockHash(blockNumber?: `BlockNumber`): `BlockHash`[\u200b](#getblockhashblocknumber-blocknumber-blockhash \"Direct link to getblockhashblocknumber-blocknumber-blockhash\")\n\n*   **interface**: `api.rpc.chain.getBlockHash`\n*   **jsonrpc**: `chain_getBlockHash`\n*   **summary**: Get the block hash for a specific block\n\n### getFinalizedHead(): `BlockHash`[\u200b](#getfinalizedhead-blockhash \"Direct link to getfinalizedhead-blockhash\")\n\n*   **interface**: `api.rpc.chain.getFinalizedHead`\n*   **jsonrpc**: `chain_getFinalizedHead`\n*   **summary**: Get hash of the last finalized block in the canon chain\n\n### getHeader(hash?: `BlockHash`): `Header`[\u200b](#getheaderhash-blockhash-header \"Direct link to getheaderhash-blockhash-header\")\n\n*   **interface**: `api.rpc.chain.getHeader`\n*   **jsonrpc**: `chain_getHeader`\n*   **summary**: Retrieves the header for a specific block\n\n### subscribeAllHeads(): `Header`[\u200b](#subscribeallheads-header \"Direct link to subscribeallheads-header\")\n\n*   **interface**: `api.rpc.chain.subscribeAllHeads`\n*   **jsonrpc**: `chain_subscribeAllHeads`\n*   **summary**: Retrieves the newest header via subscription\n\n### subscribeFinalizedHeads(): `Header`[\u200b](#subscribefinalizedheads-header \"Direct link to subscribefinalizedheads-header\")\n\n*   **interface**: `api.rpc.chain.subscribeFinalizedHeads`\n*   **jsonrpc**: `chain_subscribeFinalizedHeads`\n*   **summary**: Retrieves the best finalized header via subscription\n\n### subscribeNewHeads(): `Header`[\u200b](#subscribenewheads-header \"Direct link to subscribenewheads-header\")\n\n*   **interface**: `api.rpc.chain.subscribeNewHeads`\n*   **jsonrpc**: `chain_subscribeNewHeads`\n*   **summary**: Retrieves the best header via subscription\n\n* * *\n\nchildstate[\u200b](#childstate \"Direct link to childstate\")\n\n-------------------------------------------------------\n\n### getKeys(childKey: `PrefixedStorageKey`, prefix: `StorageKey`, at?: `Hash`): `Vec<StorageKey>`[\u200b](#getkeyschildkey-prefixedstoragekey-prefix-storagekey-at-hash-vecstoragekey \"Direct link to getkeyschildkey-prefixedstoragekey-prefix-storagekey-at-hash-vecstoragekey\")\n\n*   **interface**: `api.rpc.childstate.getKeys`\n*   **jsonrpc**: `childstate_getKeys`\n*   **summary**: Returns the keys with prefix from a child storage, leave empty to get all the keys\n\n### getKeysPaged(childKey: `PrefixedStorageKey`, prefix: `StorageKey`, count: `u32`, startKey?: `StorageKey`, at?: `Hash`): `Vec<StorageKey>`[\u200b](#getkeyspagedchildkey-prefixedstoragekey-prefix-storagekey-count-u32-startkey-storagekey-at-hash-vecstoragekey \"Direct link to getkeyspagedchildkey-prefixedstoragekey-prefix-storagekey-count-u32-startkey-storagekey-at-hash-vecstoragekey\")\n\n*   **interface**: `api.rpc.childstate.getKeysPaged`\n*   **jsonrpc**: `childstate_getKeysPaged`\n*   **summary**: Returns the keys with prefix from a child storage with pagination support\n\n### getStorage(childKey: `PrefixedStorageKey`, key: `StorageKey`, at?: `Hash`): `Option<StorageData>`[\u200b](#getstoragechildkey-prefixedstoragekey-key-storagekey-at-hash-optionstoragedata \"Direct link to getstoragechildkey-prefixedstoragekey-key-storagekey-at-hash-optionstoragedata\")\n\n*   **interface**: `api.rpc.childstate.getStorage`\n*   **jsonrpc**: `childstate_getStorage`\n*   **summary**: Returns a child storage entry at a specific block state\n\n### getStorageEntries(childKey: `PrefixedStorageKey`, keys: `Vec<StorageKey>`, at?: `Hash`): `Vec<Option<StorageData>>`[\u200b](#getstorageentrieschildkey-prefixedstoragekey-keys-vecstoragekey-at-hash-vecoptionstoragedata \"Direct link to getstorageentrieschildkey-prefixedstoragekey-keys-vecstoragekey-at-hash-vecoptionstoragedata\")\n\n*   **interface**: `api.rpc.childstate.getStorageEntries`\n*   **jsonrpc**: `childstate_getStorageEntries`\n*   **summary**: Returns child storage entries for multiple keys at a specific block state\n\n### getStorageHash(childKey: `PrefixedStorageKey`, key: `StorageKey`, at?: `Hash`): `Option<Hash>`[\u200b](#getstoragehashchildkey-prefixedstoragekey-key-storagekey-at-hash-optionhash \"Direct link to getstoragehashchildkey-prefixedstoragekey-key-storagekey-at-hash-optionhash\")\n\n*   **interface**: `api.rpc.childstate.getStorageHash`\n*   **jsonrpc**: `childstate_getStorageHash`\n*   **summary**: Returns the hash of a child storage entry at a block state\n\n### getStorageSize(childKey: `PrefixedStorageKey`, key: `StorageKey`, at?: `Hash`): `Option<u64>`[\u200b](#getstoragesizechildkey-prefixedstoragekey-key-storagekey-at-hash-optionu64 \"Direct link to getstoragesizechildkey-prefixedstoragekey-key-storagekey-at-hash-optionu64\")\n\n*   **interface**: `api.rpc.childstate.getStorageSize`\n*   **jsonrpc**: `childstate_getStorageSize`\n*   **summary**: Returns the size of a child storage entry at a block state\n\n* * *\n\ngrandpa[\u200b](#grandpa \"Direct link to grandpa\")\n\n----------------------------------------------\n\n### proveFinality(blockNumber: `BlockNumber`): `Option<EncodedFinalityProofs>`[\u200b](#provefinalityblocknumber-blocknumber-optionencodedfinalityproofs \"Direct link to provefinalityblocknumber-blocknumber-optionencodedfinalityproofs\")\n\n*   **interface**: `api.rpc.grandpa.proveFinality`\n*   **jsonrpc**: `grandpa_proveFinality`\n*   **summary**: Prove finality for the given block number, returning the Justification for the last block in the set.\n\n### roundState(): `ReportedRoundStates`[\u200b](#roundstate-reportedroundstates \"Direct link to roundstate-reportedroundstates\")\n\n*   **interface**: `api.rpc.grandpa.roundState`\n*   **jsonrpc**: `grandpa_roundState`\n*   **summary**: Returns the state of the current best round state as well as the ongoing background rounds\n\n### subscribeJustifications(): `JustificationNotification`[\u200b](#subscribejustifications-justificationnotification \"Direct link to subscribejustifications-justificationnotification\")\n\n*   **interface**: `api.rpc.grandpa.subscribeJustifications`\n*   **jsonrpc**: `grandpa_subscribeJustifications`\n*   **summary**: Subscribes to grandpa justifications\n\n* * *\n\nmmr[\u200b](#mmr \"Direct link to mmr\")\n\n----------------------------------\n\n### generateProof(blockNumbers: `Vec<u64>`, bestKnownBlockNumber?: `u64`, at?: `BlockHash`): `MmrLeafBatchProof`[\u200b](#generateproofblocknumbers-vecu64-bestknownblocknumber-u64-at-blockhash-mmrleafbatchproof \"Direct link to generateproofblocknumbers-vecu64-bestknownblocknumber-u64-at-blockhash-mmrleafbatchproof\")\n\n*   **interface**: `api.rpc.mmr.generateProof`\n*   **jsonrpc**: `mmr_generateProof`\n*   **summary**: Generate MMR proof for the given block numbers.\n\n### root(at?: `BlockHash`): `MmrHash`[\u200b](#rootat-blockhash-mmrhash \"Direct link to rootat-blockhash-mmrhash\")\n\n*   **interface**: `api.rpc.mmr.root`\n*   **jsonrpc**: `mmr_root`\n*   **summary**: Get the MMR root hash for the current best block.\n\n### verifyProof(proof: `MmrLeafBatchProof`): `bool`[\u200b](#verifyproofproof-mmrleafbatchproof-bool \"Direct link to verifyproofproof-mmrleafbatchproof-bool\")\n\n*   **interface**: `api.rpc.mmr.verifyProof`\n*   **jsonrpc**: `mmr_verifyProof`\n*   **summary**: Verify an MMR proof\n\n### verifyProofStateless(root: `MmrHash`, proof: `MmrLeafBatchProof`): `bool`[\u200b](#verifyproofstatelessroot-mmrhash-proof-mmrleafbatchproof-bool \"Direct link to verifyproofstatelessroot-mmrhash-proof-mmrleafbatchproof-bool\")\n\n*   **interface**: `api.rpc.mmr.verifyProofStateless`\n*   **jsonrpc**: `mmr_verifyProofStateless`\n*   **summary**: Verify an MMR proof statelessly given an mmr\\_root\n\n* * *\n\noffchain[\u200b](#offchain \"Direct link to offchain\")\n\n-------------------------------------------------\n\n### localStorageGet(kind: `StorageKind`, key: `Bytes`): `Option<Bytes>`[\u200b](#localstoragegetkind-storagekind-key-bytes-optionbytes \"Direct link to localstoragegetkind-storagekind-key-bytes-optionbytes\")\n\n*   **interface**: `api.rpc.offchain.localStorageGet`\n*   **jsonrpc**: `offchain_localStorageGet`\n*   **summary**: Get offchain local storage under given key and prefix\n*   **unsafe**: This method is only active with appropriate flags\n\n### localStorageSet(kind: `StorageKind`, key: `Bytes`, value: `Bytes`): `Null`[\u200b](#localstoragesetkind-storagekind-key-bytes-value-bytes-null \"Direct link to localstoragesetkind-storagekind-key-bytes-value-bytes-null\")\n\n*   **interface**: `api.rpc.offchain.localStorageSet`\n*   **jsonrpc**: `offchain_localStorageSet`\n*   **summary**: Set offchain local storage under given key and prefix\n*   **unsafe**: This method is only active with appropriate flags\n\n* * *\n\npayment[\u200b](#payment \"Direct link to payment\")\n\n----------------------------------------------\n\n### queryFeeDetails(extrinsic: `Bytes`, at?: `BlockHash`): `FeeDetails`[\u200b](#queryfeedetailsextrinsic-bytes-at-blockhash-feedetails \"Direct link to queryfeedetailsextrinsic-bytes-at-blockhash-feedetails\")\n\n*   **interface**: `api.rpc.payment.queryFeeDetails`\n*   **jsonrpc**: `payment_queryFeeDetails`\n*   **summary**: Query the detailed fee of a given encoded extrinsic\n*   **deprecated**: Use `api.call.transactionPaymentApi.queryFeeDetails` instead\n\n### queryInfo(extrinsic: `Bytes`, at?: `BlockHash`): `RuntimeDispatchInfoV1`[\u200b](#queryinfoextrinsic-bytes-at-blockhash-runtimedispatchinfov1 \"Direct link to queryinfoextrinsic-bytes-at-blockhash-runtimedispatchinfov1\")\n\n*   **interface**: `api.rpc.payment.queryInfo`\n*   **jsonrpc**: `payment_queryInfo`\n*   **summary**: Retrieves the fee information for an encoded extrinsic\n*   **deprecated**: Use `api.call.transactionPaymentApi.queryInfo` instead\n\n* * *\n\nrpc[\u200b](#rpc \"Direct link to rpc\")\n\n----------------------------------\n\n### methods(): `RpcMethods`[\u200b](#methods-rpcmethods \"Direct link to methods-rpcmethods\")\n\n*   **interface**: `api.rpc.rpc.methods`\n*   **jsonrpc**: `rpc_methods`\n*   **summary**: Retrieves the list of RPC methods that are exposed by the node\n\n* * *\n\nstate[\u200b](#state \"Direct link to state\")\n\n----------------------------------------\n\n### call(method: `Text`, data: `Bytes`, at?: `BlockHash`): `Bytes`[\u200b](#callmethod-text-data-bytes-at-blockhash-bytes \"Direct link to callmethod-text-data-bytes-at-blockhash-bytes\")\n\n*   **interface**: `api.rpc.state.call`\n*   **jsonrpc**: `state_call`\n*   **summary**: Perform a call to a builtin on the chain\n\n### getChildReadProof(childStorageKey: `PrefixedStorageKey`, keys: `Vec<StorageKey>`, at?: `BlockHash`): `ReadProof`[\u200b](#getchildreadproofchildstoragekey-prefixedstoragekey-keys-vecstoragekey-at-blockhash-readproof \"Direct link to getchildreadproofchildstoragekey-prefixedstoragekey-keys-vecstoragekey-at-blockhash-readproof\")\n\n*   **interface**: `api.rpc.state.getChildReadProof`\n*   **jsonrpc**: `state_getChildReadProof`\n*   **summary**: Returns proof of storage for child key entries at a specific block state.\n\n### getKeys(key: `StorageKey`, at?: `BlockHash`): `Vec<StorageKey>`[\u200b](#getkeyskey-storagekey-at-blockhash-vecstoragekey \"Direct link to getkeyskey-storagekey-at-blockhash-vecstoragekey\")\n\n*   **interface**: `api.rpc.state.getKeys`\n*   **jsonrpc**: `state_getKeys`\n*   **summary**: Retrieves the keys with a certain prefix\n*   **deprecated**: Use `api.rpc.state.getKeysPaged` to retrieve keys\n\n### getKeysPaged(key: `StorageKey`, count: `u32`, startKey?: `StorageKey`, at?: `BlockHash`): `Vec<StorageKey>`[\u200b](#getkeyspagedkey-storagekey-count-u32-startkey-storagekey-at-blockhash-vecstoragekey \"Direct link to getkeyspagedkey-storagekey-count-u32-startkey-storagekey-at-blockhash-vecstoragekey\")\n\n*   **interface**: `api.rpc.state.getKeysPaged`\n*   **jsonrpc**: `state_getKeysPaged`\n*   **summary**: Returns the keys with prefix with pagination support.\n\n### getMetadata(at?: `BlockHash`): `Metadata`[\u200b](#getmetadataat-blockhash-metadata \"Direct link to getmetadataat-blockhash-metadata\")\n\n*   **interface**: `api.rpc.state.getMetadata`\n*   **jsonrpc**: `state_getMetadata`\n*   **summary**: Returns the runtime metadata\n\n### getPairs(prefix: `StorageKey`, at?: `BlockHash`): `Vec<KeyValue>`[\u200b](#getpairsprefix-storagekey-at-blockhash-veckeyvalue \"Direct link to getpairsprefix-storagekey-at-blockhash-veckeyvalue\")\n\n*   **interface**: `api.rpc.state.getPairs`\n*   **jsonrpc**: `state_getPairs`\n*   **summary**: Returns the keys with prefix, leave empty to get all the keys (deprecated: Use getKeysPaged)\n*   **deprecated**: Use `api.rpc.state.getKeysPaged` to retrieve keys\n*   **unsafe**: This method is only active with appropriate flags\n\n### getReadProof(keys: `Vec<StorageKey>`, at?: `BlockHash`): `ReadProof`[\u200b](#getreadproofkeys-vecstoragekey-at-blockhash-readproof \"Direct link to getreadproofkeys-vecstoragekey-at-blockhash-readproof\")\n\n*   **interface**: `api.rpc.state.getReadProof`\n*   **jsonrpc**: `state_getReadProof`\n*   **summary**: Returns proof of storage entries at a specific block state\n\n### getRuntimeVersion(at?: `BlockHash`): `RuntimeVersion`[\u200b](#getruntimeversionat-blockhash-runtimeversion \"Direct link to getruntimeversionat-blockhash-runtimeversion\")\n\n*   **interface**: `api.rpc.state.getRuntimeVersion`\n*   **jsonrpc**: `state_getRuntimeVersion`\n*   **summary**: Get the runtime version\n\n### getStorage(key: `StorageKey`, at?: `BlockHash`): `StorageData`[\u200b](#getstoragekey-storagekey-at-blockhash-storagedata \"Direct link to getstoragekey-storagekey-at-blockhash-storagedata\")\n\n*   **interface**: `api.rpc.state.getStorage`\n*   **jsonrpc**: `state_getStorage`\n*   **summary**: Retrieves the storage for a key\n\n### getStorageHash(key: `StorageKey`, at?: `BlockHash`): `Hash`[\u200b](#getstoragehashkey-storagekey-at-blockhash-hash \"Direct link to getstoragehashkey-storagekey-at-blockhash-hash\")\n\n*   **interface**: `api.rpc.state.getStorageHash`\n*   **jsonrpc**: `state_getStorageHash`\n*   **summary**: Retrieves the storage hash\n\n### getStorageSize(key: `StorageKey`, at?: `BlockHash`): `u64`[\u200b](#getstoragesizekey-storagekey-at-blockhash-u64 \"Direct link to getstoragesizekey-storagekey-at-blockhash-u64\")\n\n*   **interface**: `api.rpc.state.getStorageSize`\n*   **jsonrpc**: `state_getStorageSize`\n*   **summary**: Retrieves the storage size\n\n### queryStorage(keys: `Vec<StorageKey>`, fromBlock: `Hash`, toBlock?: `BlockHash`): `Vec<StorageChangeSet>`[\u200b](#querystoragekeys-vecstoragekey-fromblock-hash-toblock-blockhash-vecstoragechangeset \"Direct link to querystoragekeys-vecstoragekey-fromblock-hash-toblock-blockhash-vecstoragechangeset\")\n\n*   **interface**: `api.rpc.state.queryStorage`\n*   **jsonrpc**: `state_queryStorage`\n*   **summary**: Query historical storage entries (by key) starting from a start block\n*   **unsafe**: This method is only active with appropriate flags\n\n### queryStorageAt(keys: `Vec<StorageKey>`, at?: `BlockHash`): `Vec<StorageChangeSet>`[\u200b](#querystorageatkeys-vecstoragekey-at-blockhash-vecstoragechangeset \"Direct link to querystorageatkeys-vecstoragekey-at-blockhash-vecstoragechangeset\")\n\n*   **interface**: `api.rpc.state.queryStorageAt`\n*   **jsonrpc**: `state_queryStorageAt`\n*   **summary**: Query storage entries (by key) starting at block hash given as the second parameter\n\n### subscribeRuntimeVersion(): `RuntimeVersion`[\u200b](#subscriberuntimeversion-runtimeversion \"Direct link to subscriberuntimeversion-runtimeversion\")\n\n*   **interface**: `api.rpc.state.subscribeRuntimeVersion`\n*   **jsonrpc**: `state_subscribeRuntimeVersion`\n*   **summary**: Retrieves the runtime version via subscription\n\n### subscribeStorage(keys?: `Vec<StorageKey>`): `StorageChangeSet`[\u200b](#subscribestoragekeys-vecstoragekey-storagechangeset \"Direct link to subscribestoragekeys-vecstoragekey-storagechangeset\")\n\n*   **interface**: `api.rpc.state.subscribeStorage`\n*   **jsonrpc**: `state_subscribeStorage`\n*   **summary**: Subscribes to storage changes for the provided keys\n\n### traceBlock(block: `Hash`, targets: `Option<Text>`, storageKeys: `Option<Text>`, methods: `Option<Text>`): `TraceBlockResponse`[\u200b](#traceblockblock-hash-targets-optiontext-storagekeys-optiontext-methods-optiontext-traceblockresponse \"Direct link to traceblockblock-hash-targets-optiontext-storagekeys-optiontext-methods-optiontext-traceblockresponse\")\n\n*   **interface**: `api.rpc.state.traceBlock`\n*   **jsonrpc**: `state_traceBlock`\n*   **summary**: Provides a way to trace the re-execution of a single block\n*   **unsafe**: This method is only active with appropriate flags\n\n### trieMigrationStatus(at?: `BlockHash`): `MigrationStatusResult`[\u200b](#triemigrationstatusat-blockhash-migrationstatusresult \"Direct link to triemigrationstatusat-blockhash-migrationstatusresult\")\n\n*   **interface**: `api.rpc.state.trieMigrationStatus`\n*   **jsonrpc**: `state_trieMigrationStatus`\n*   **summary**: Check current migration state\n*   **unsafe**: This method is only active with appropriate flags\n\n* * *\n\nsyncstate[\u200b](#syncstate \"Direct link to syncstate\")\n\n----------------------------------------------------\n\n### genSyncSpec(raw: `bool`): `Json`[\u200b](#gensyncspecraw-bool-json \"Direct link to gensyncspecraw-bool-json\")\n\n*   **interface**: `api.rpc.syncstate.genSyncSpec`\n*   **jsonrpc**: `sync_state_genSyncSpec`\n*   **summary**: Returns the json-serialized chainspec running the node, with a sync state.\n\n* * *\n\nsystem[\u200b](#system \"Direct link to system\")\n\n-------------------------------------------\n\n### accountNextIndex(accountId: `AccountId`): `Index`[\u200b](#accountnextindexaccountid-accountid-index \"Direct link to accountnextindexaccountid-accountid-index\")\n\n*   **interface**: `api.rpc.system.accountNextIndex`\n*   **jsonrpc**: `system_accountNextIndex`\n*   **summary**: Retrieves the next accountIndex as available on the node\n\n### addLogFilter(directives: `Text`): `Null`[\u200b](#addlogfilterdirectives-text-null \"Direct link to addlogfilterdirectives-text-null\")\n\n*   **interface**: `api.rpc.system.addLogFilter`\n*   **jsonrpc**: `system_addLogFilter`\n*   **summary**: Adds the supplied directives to the current log filter\n*   **unsafe**: This method is only active with appropriate flags\n\n### addReservedPeer(peer: `Text`): `Text`[\u200b](#addreservedpeerpeer-text-text \"Direct link to addreservedpeerpeer-text-text\")\n\n*   **interface**: `api.rpc.system.addReservedPeer`\n*   **jsonrpc**: `system_addReservedPeer`\n*   **summary**: Adds a reserved peer\n*   **unsafe**: This method is only active with appropriate flags\n\n### chain(): `Text`[\u200b](#chain-text \"Direct link to chain-text\")\n\n*   **interface**: `api.rpc.system.chain`\n*   **jsonrpc**: `system_chain`\n*   **summary**: Retrieves the chain\n\n### chainType(): `ChainType`[\u200b](#chaintype-chaintype \"Direct link to chaintype-chaintype\")\n\n*   **interface**: `api.rpc.system.chainType`\n*   **jsonrpc**: `system_chainType`\n*   **summary**: Retrieves the chain type\n\n### dryRun(extrinsic: `Bytes`, at?: `BlockHash`): `ApplyExtrinsicResult`[\u200b](#dryrunextrinsic-bytes-at-blockhash-applyextrinsicresult \"Direct link to dryrunextrinsic-bytes-at-blockhash-applyextrinsicresult\")\n\n*   **interface**: `api.rpc.system.dryRun`\n*   **jsonrpc**: `system_dryRun`\n*   **summary**: Dry run an extrinsic at a given block\n*   **unsafe**: This method is only active with appropriate flags\n\n### health(): `Health`[\u200b](#health-health \"Direct link to health-health\")\n\n*   **interface**: `api.rpc.system.health`\n*   **jsonrpc**: `system_health`\n*   **summary**: Return health status of the node\n\n### localListenAddresses(): `Vec<Text>`[\u200b](#locallistenaddresses-vectext \"Direct link to locallistenaddresses-vectext\")\n\n*   **interface**: `api.rpc.system.localListenAddresses`\n*   **jsonrpc**: `system_localListenAddresses`\n*   **summary**: The addresses include a trailing /p2p/ with the local PeerId, and are thus suitable to be passed to addReservedPeer or as a bootnode address for example\n\n### localPeerId(): `Text`[\u200b](#localpeerid-text \"Direct link to localpeerid-text\")\n\n*   **interface**: `api.rpc.system.localPeerId`\n*   **jsonrpc**: `system_localPeerId`\n*   **summary**: Returns the base58-encoded PeerId of the node\n\n### name(): `Text`[\u200b](#name-text \"Direct link to name-text\")\n\n*   **interface**: `api.rpc.system.name`\n*   **jsonrpc**: `system_name`\n*   **summary**: Retrieves the node name\n\n### nodeRoles(): `Vec<NodeRole>`[\u200b](#noderoles-vecnoderole \"Direct link to noderoles-vecnoderole\")\n\n*   **interface**: `api.rpc.system.nodeRoles`\n*   **jsonrpc**: `system_nodeRoles`\n*   **summary**: Returns the roles the node is running as\n\n### peers(): `Vec<PeerInfo>`[\u200b](#peers-vecpeerinfo \"Direct link to peers-vecpeerinfo\")\n\n*   **interface**: `api.rpc.system.peers`\n*   **jsonrpc**: `system_peers`\n*   **summary**: Returns the currently connected peers\n*   **unsafe**: This method is only active with appropriate flags\n\n### properties(): `ChainProperties`[\u200b](#properties-chainproperties \"Direct link to properties-chainproperties\")\n\n*   **interface**: `api.rpc.system.properties`\n*   **jsonrpc**: `system_properties`\n*   **summary**: Get a custom set of properties as a JSON object, defined in the chain spec\n\n### removeReservedPeer(peerId: `Text`): `Text`[\u200b](#removereservedpeerpeerid-text-text \"Direct link to removereservedpeerpeerid-text-text\")\n\n*   **interface**: `api.rpc.system.removeReservedPeer`\n*   **jsonrpc**: `system_removeReservedPeer`\n*   **summary**: Remove a reserved peer\n*   **unsafe**: This method is only active with appropriate flags\n\n### reservedPeers(): `Vec<Text>`[\u200b](#reservedpeers-vectext \"Direct link to reservedpeers-vectext\")\n\n*   **interface**: `api.rpc.system.reservedPeers`\n*   **jsonrpc**: `system_reservedPeers`\n*   **summary**: Returns the list of reserved peers\n\n### resetLogFilter(): `Null`[\u200b](#resetlogfilter-null \"Direct link to resetlogfilter-null\")\n\n*   **interface**: `api.rpc.system.resetLogFilter`\n*   **jsonrpc**: `system_resetLogFilter`\n*   **summary**: Resets the log filter to Substrate defaults\n*   **unsafe**: This method is only active with appropriate flags\n\n### syncState(): `SyncState`[\u200b](#syncstate-syncstate \"Direct link to syncstate-syncstate\")\n\n*   **interface**: `api.rpc.system.syncState`\n*   **jsonrpc**: `system_syncState`\n*   **summary**: Returns the state of the syncing of the node\n\n### version(): `Text`[\u200b](#version-text \"Direct link to version-text\")\n\n*   **interface**: `api.rpc.system.version`\n*   **jsonrpc**: `system_version`\n*   **summary**: Retrieves the version of the node\n\n[Edit this page](https://github.com/polkadot-js/docs/edit/master/docs/polkadot/rpc.md)\n\n[Previous\\\n\\\nRuntime](/docs/polkadot/runtime)\n[Next\\\n\\\nConstants](/docs/polkadot/constants)\n\n*   [author](#author)\n    *   [hasKey(publicKey: `Bytes`, keyType: `Text`): `bool`](#haskeypublickey-bytes-keytype-text-bool)\n        \n    *   [hasSessionKeys(sessionKeys: `Bytes`): `bool`](#hassessionkeyssessionkeys-bytes-bool)\n        \n    *   [insertKey(keyType: `Text`, suri: `Text`, publicKey: `Bytes`): `Bytes`](#insertkeykeytype-text-suri-text-publickey-bytes-bytes)\n        \n    *   [pendingExtrinsics(): `Vec<Extrinsic>`](#pendingextrinsics-vecextrinsic)\n        \n    *   [removeExtrinsic(bytesOrHash: `Vec<ExtrinsicOrHash>`): `Vec<Hash>`](#removeextrinsicbytesorhash-vecextrinsicorhash-vechash)\n        \n    *   [rotateKeys(): `Bytes`](#rotatekeys-bytes)\n        \n    *   [submitAndWatchExtrinsic(extrinsic: `Extrinsic`): `ExtrinsicStatus`](#submitandwatchextrinsicextrinsic-extrinsic-extrinsicstatus)\n        \n    *   [submitExtrinsic(extrinsic: `Extrinsic`): `Hash`](#submitextrinsicextrinsic-extrinsic-hash)\n        \n*   [babe](#babe)\n    *   [epochAuthorship(): `HashMap<AuthorityId, EpochAuthorship>`](#epochauthorship-hashmapauthorityid-epochauthorship)\n        \n*   [beefy](#beefy)\n    *   [getFinalizedHead(): `H256`](#getfinalizedhead-h256)\n        \n    *   [subscribeJustifications(): `BeefyVersionedFinalityProof`](#subscribejustifications-beefyversionedfinalityproof)\n        \n*   [chain](#chain)\n    *   [getBlock(hash?: `BlockHash`): `SignedBlock`](#getblockhash-blockhash-signedblock)\n        \n    *   [getBlockHash(blockNumber?: `BlockNumber`): `BlockHash`](#getblockhashblocknumber-blocknumber-blockhash)\n        \n    *   [getFinalizedHead(): `BlockHash`](#getfinalizedhead-blockhash)\n        \n    *   [getHeader(hash?: `BlockHash`): `Header`](#getheaderhash-blockhash-header)\n        \n    *   [subscribeAllHeads(): `Header`](#subscribeallheads-header)\n        \n    *   [subscribeFinalizedHeads(): `Header`](#subscribefinalizedheads-header)\n        \n    *   [subscribeNewHeads(): `Header`](#subscribenewheads-header)\n        \n*   [childstate](#childstate)\n    *   [getKeys(childKey: `PrefixedStorageKey`, prefix: `StorageKey`, at?: `Hash`): `Vec<StorageKey>`](#getkeyschildkey-prefixedstoragekey-prefix-storagekey-at-hash-vecstoragekey)\n        \n    *   [getKeysPaged(childKey: `PrefixedStorageKey`, prefix: `StorageKey`, count: `u32`, startKey?: `StorageKey`, at?: `Hash`): `Vec<StorageKey>`](#getkeyspagedchildkey-prefixedstoragekey-prefix-storagekey-count-u32-startkey-storagekey-at-hash-vecstoragekey)\n        \n    *   [getStorage(childKey: `PrefixedStorageKey`, key: `StorageKey`, at?: `Hash`): `Option<StorageData>`](#getstoragechildkey-prefixedstoragekey-key-storagekey-at-hash-optionstoragedata)\n        \n    *   [getStorageEntries(childKey: `PrefixedStorageKey`, keys: `Vec<StorageKey>`, at?: `Hash`): `Vec<Option<StorageData>>`](#getstorageentrieschildkey-prefixedstoragekey-keys-vecstoragekey-at-hash-vecoptionstoragedata)\n        \n    *   [getStorageHash(childKey: `PrefixedStorageKey`, key: `StorageKey`, at?: `Hash`): `Option<Hash>`](#getstoragehashchildkey-prefixedstoragekey-key-storagekey-at-hash-optionhash)\n        \n    *   [getStorageSize(childKey: `PrefixedStorageKey`, key: `StorageKey`, at?: `Hash`): `Option<u64>`](#getstoragesizechildkey-prefixedstoragekey-key-storagekey-at-hash-optionu64)\n        \n*   [grandpa](#grandpa)\n    *   [proveFinality(blockNumber: `BlockNumber`): `Option<EncodedFinalityProofs>`](#provefinalityblocknumber-blocknumber-optionencodedfinalityproofs)\n        \n    *   [roundState(): `ReportedRoundStates`](#roundstate-reportedroundstates)\n        \n    *   [subscribeJustifications(): `JustificationNotification`](#subscribejustifications-justificationnotification)\n        \n*   [mmr](#mmr)\n    *   [generateProof(blockNumbers: `Vec<u64>`, bestKnownBlockNumber?: `u64`, at?: `BlockHash`): `MmrLeafBatchProof`](#generateproofblocknumbers-vecu64-bestknownblocknumber-u64-at-blockhash-mmrleafbatchproof)\n        \n    *   [root(at?: `BlockHash`): `MmrHash`](#rootat-blockhash-mmrhash)\n        \n    *   [verifyProof(proof: `MmrLeafBatchProof`): `bool`](#verifyproofproof-mmrleafbatchproof-bool)\n        \n    *   [verifyProofStateless(root: `MmrHash`, proof: `MmrLeafBatchProof`): `bool`](#verifyproofstatelessroot-mmrhash-proof-mmrleafbatchproof-bool)\n        \n*   [offchain](#offchain)\n    *   [localStorageGet(kind: `StorageKind`, key: `Bytes`): `Option<Bytes>`](#localstoragegetkind-storagekind-key-bytes-optionbytes)\n        \n    *   [localStorageSet(kind: `StorageKind`, key: `Bytes`, value: `Bytes`): `Null`](#localstoragesetkind-storagekind-key-bytes-value-bytes-null)\n        \n*   [payment](#payment)\n    *   [queryFeeDetails(extrinsic: `Bytes`, at?: `BlockHash`): `FeeDetails`](#queryfeedetailsextrinsic-bytes-at-blockhash-feedetails)\n        \n    *   [queryInfo(extrinsic: `Bytes`, at?: `BlockHash`): `RuntimeDispatchInfoV1`](#queryinfoextrinsic-bytes-at-blockhash-runtimedispatchinfov1)\n        \n*   [rpc](#rpc)\n    *   [methods(): `RpcMethods`](#methods-rpcmethods)\n        \n*   [state](#state)\n    *   [call(method: `Text`, data: `Bytes`, at?: `BlockHash`): `Bytes`](#callmethod-text-data-bytes-at-blockhash-bytes)\n        \n    *   [getChildReadProof(childStorageKey: `PrefixedStorageKey`, keys: `Vec<StorageKey>`, at?: `BlockHash`): `ReadProof`](#getchildreadproofchildstoragekey-prefixedstoragekey-keys-vecstoragekey-at-blockhash-readproof)\n        \n    *   [getKeys(key: `StorageKey`, at?: `BlockHash`): `Vec<StorageKey>`](#getkeyskey-storagekey-at-blockhash-vecstoragekey)\n        \n    *   [getKeysPaged(key: `StorageKey`, count: `u32`, startKey?: `StorageKey`, at?: `BlockHash`): `Vec<StorageKey>`](#getkeyspagedkey-storagekey-count-u32-startkey-storagekey-at-blockhash-vecstoragekey)\n        \n    *   [getMetadata(at?: `BlockHash`): `Metadata`](#getmetadataat-blockhash-metadata)\n        \n    *   [getPairs(prefix: `StorageKey`, at?: `BlockHash`): `Vec<KeyValue>`](#getpairsprefix-storagekey-at-blockhash-veckeyvalue)\n        \n    *   [getReadProof(keys: `Vec<StorageKey>`, at?: `BlockHash`): `ReadProof`](#getreadproofkeys-vecstoragekey-at-blockhash-readproof)\n        \n    *   [getRuntimeVersion(at?: `BlockHash`): `RuntimeVersion`](#getruntimeversionat-blockhash-runtimeversion)\n        \n    *   [getStorage(key: `StorageKey`, at?: `BlockHash`): `StorageData`](#getstoragekey-storagekey-at-blockhash-storagedata)\n        \n    *   [getStorageHash(key: `StorageKey`, at?: `BlockHash`): `Hash`](#getstoragehashkey-storagekey-at-blockhash-hash)\n        \n    *   [getStorageSize(key: `StorageKey`, at?: `BlockHash`): `u64`](#getstoragesizekey-storagekey-at-blockhash-u64)\n        \n    *   [queryStorage(keys: `Vec<StorageKey>`, fromBlock: `Hash`, toBlock?: `BlockHash`): `Vec<StorageChangeSet>`](#querystoragekeys-vecstoragekey-fromblock-hash-toblock-blockhash-vecstoragechangeset)\n        \n    *   [queryStorageAt(keys: `Vec<StorageKey>`, at?: `BlockHash`): `Vec<StorageChangeSet>`](#querystorageatkeys-vecstoragekey-at-blockhash-vecstoragechangeset)\n        \n    *   [subscribeRuntimeVersion(): `RuntimeVersion`](#subscriberuntimeversion-runtimeversion)\n        \n    *   [subscribeStorage(keys?: `Vec<StorageKey>`): `StorageChangeSet`](#subscribestoragekeys-vecstoragekey-storagechangeset)\n        \n    *   [traceBlock(block: `Hash`, targets: `Option<Text>`, storageKeys: `Option<Text>`, methods: `Option<Text>`): `TraceBlockResponse`](#traceblockblock-hash-targets-optiontext-storagekeys-optiontext-methods-optiontext-traceblockresponse)\n        \n    *   [trieMigrationStatus(at?: `BlockHash`): `MigrationStatusResult`](#triemigrationstatusat-blockhash-migrationstatusresult)\n        \n*   [syncstate](#syncstate)\n    *   [genSyncSpec(raw: `bool`): `Json`](#gensyncspecraw-bool-json)\n        \n*   [system](#system)\n    *   [accountNextIndex(accountId: `AccountId`): `Index`](#accountnextindexaccountid-accountid-index)\n        \n    *   [addLogFilter(directives: `Text`): `Null`](#addlogfilterdirectives-text-null)\n        \n    *   [addReservedPeer(peer: `Text`): `Text`](#addreservedpeerpeer-text-text)\n        \n    *   [chain(): `Text`](#chain-text)\n        \n    *   [chainType(): `ChainType`](#chaintype-chaintype)\n        \n    *   [dryRun(extrinsic: `Bytes`, at?: `BlockHash`): `ApplyExtrinsicResult`](#dryrunextrinsic-bytes-at-blockhash-applyextrinsicresult)\n        \n    *   [health(): `Health`](#health-health)\n        \n    *   [localListenAddresses(): `Vec<Text>`](#locallistenaddresses-vectext)\n        \n    *   [localPeerId(): `Text`](#localpeerid-text)\n        \n    *   [name(): `Text`](#name-text)\n        \n    *   [nodeRoles(): `Vec<NodeRole>`](#noderoles-vecnoderole)\n        \n    *   [peers(): `Vec<PeerInfo>`](#peers-vecpeerinfo)\n        \n    *   [properties(): `ChainProperties`](#properties-chainproperties)\n        \n    *   [removeReservedPeer(peerId: `Text`): `Text`](#removereservedpeerpeerid-text-text)\n        \n    *   [reservedPeers(): `Vec<Text>`](#reservedpeers-vectext)\n        \n    *   [resetLogFilter(): `Null`](#resetlogfilter-null)\n        \n    *   [syncState(): `SyncState`](#syncstate-syncstate)\n        \n    *   [version(): `Text`](#version-text)"}, {"title": null, "description": null, "source_url": "https://polkadot.js.org/docs/polkadot/runtime", "markdown": "[Skip to main content](#__docusaurus_skipToContent_fallback)\n\n[![polkadot{.js}](https://polkadot.js.org/docs/img/logo.svg)\\\n\\\n**polkadot{.js}**](/docs/)\n\n[Apps UI (Wallet)](https://polkadot.js.org/apps/)\n[GitHub](https://github.com/polkadot-js/docs)\n\nSearch...\n\n*   [Introduction](#)\n    \n*   [API](#)\n    \n*   [Metadata](#)\n    \n    *   [Substrate](#)\n        \n    *   [Polkadot](#)\n        \n        *   [Overview](/docs/polkadot)\n            \n        *   [Runtime](/docs/polkadot/runtime)\n            \n        *   [JSON-RPC](/docs/polkadot/rpc)\n            \n        *   [Constants](/docs/polkadot/constants)\n            \n        *   [Storage](/docs/polkadot/storage)\n            \n        *   [Extrinsics](/docs/polkadot/extrinsics)\n            \n        *   [Events](/docs/polkadot/events)\n            \n        *   [Errors](/docs/polkadot/errors)\n            \n    *   [Kusama](#)\n        \n*   [Keyring](#)\n    \n*   [Crypto Utilities](#)\n    \n*   [Contracts (API)](#)\n    \n*   [Identicon (UI)](#)\n    \n*   [Keyring (UI)](#)\n    \n*   [Extension](#)\n    \n*   [Run, Bundle, Test](#)\n    \n\n*   [](/docs/)\n    \n*   Metadata\n*   Polkadot\n*   Runtime\n\nOn this page\n\nRuntime\n=======\n\nThe following section contains known runtime calls that may be available on specific runtimes (depending on configuration and available pallets). These call directly into the WASM runtime for queries and operations.\n\n*   **[accountNonceApi](#accountnonceapi)\n    **\n    \n*   **[authorityDiscoveryApi](#authoritydiscoveryapi)\n    **\n    \n*   **[babeApi](#babeapi)\n    **\n    \n*   **[beefyApi](#beefyapi)\n    **\n    \n*   **[blockBuilder](#blockbuilder)\n    **\n    \n*   **[core](#core)\n    **\n    \n*   **[grandpaApi](#grandpaapi)\n    **\n    \n*   **[metadata](#metadata)\n    **\n    \n*   **[mmrApi](#mmrapi)\n    **\n    \n*   **[nominationPoolsApi](#nominationpoolsapi)\n    **\n    \n*   **[offchainWorkerApi](#offchainworkerapi)\n    **\n    \n*   **[parachainHost](#parachainhost)\n    **\n    \n*   **[sessionKeys](#sessionkeys)\n    **\n    \n*   **[stakingApi](#stakingapi)\n    **\n    \n*   **[taggedTransactionQueue](#taggedtransactionqueue)\n    **\n    \n*   **[transactionPaymentApi](#transactionpaymentapi)\n    **\n    \n*   **[transactionPaymentCallApi](#transactionpaymentcallapi)\n    **\n    \n\n* * *\n\nAccountNonceApi[\u200b](#accountnonceapi \"Direct link to AccountNonceApi\")\n\n----------------------------------------------------------------------\n\n### accountNonce(accountId: `AccountId`): `Index`[\u200b](#accountnonceaccountid-accountid-index \"Direct link to accountnonceaccountid-accountid-index\")\n\n*   **interface**: `api.call.accountNonceApi.accountNonce`\n*   **runtime**: `AccountNonceApi_account_nonce`\n*   **summary**: The API to query account nonce (aka transaction index)\n\n* * *\n\nAuthorityDiscoveryApi[\u200b](#authoritydiscoveryapi \"Direct link to AuthorityDiscoveryApi\")\n\n----------------------------------------------------------------------------------------\n\n### authorities(): `Vec<AuthorityId>`[\u200b](#authorities-vecauthorityid \"Direct link to authorities-vecauthorityid\")\n\n*   **interface**: `api.call.authorityDiscoveryApi.authorities`\n*   **runtime**: `AuthorityDiscoveryApi_authorities`\n*   **summary**: Retrieve authority identifiers of the current and next authority set.\n\n* * *\n\nBabeApi[\u200b](#babeapi \"Direct link to BabeApi\")\n\n----------------------------------------------\n\n### configuration(): `BabeGenesisConfiguration`[\u200b](#configuration-babegenesisconfiguration \"Direct link to configuration-babegenesisconfiguration\")\n\n*   **interface**: `api.call.babeApi.configuration`\n*   **runtime**: `BabeApi_configuration`\n*   **summary**: Return the genesis configuration for BABE. The configuration is only read on genesis.\n\n### currentEpoch(): `Epoch`[\u200b](#currentepoch-epoch \"Direct link to currentepoch-epoch\")\n\n*   **interface**: `api.call.babeApi.currentEpoch`\n*   **runtime**: `BabeApi_current_epoch`\n*   **summary**: Returns information regarding the current epoch.\n\n### currentEpochStart(): `Slot`[\u200b](#currentepochstart-slot \"Direct link to currentepochstart-slot\")\n\n*   **interface**: `api.call.babeApi.currentEpochStart`\n*   **runtime**: `BabeApi_current_epoch_start`\n*   **summary**: Returns the slot that started the current epoch.\n\n### generateKeyOwnershipProof(slot: `Slot`, authorityId: `AuthorityId`): `Option<OpaqueKeyOwnershipProof>`[\u200b](#generatekeyownershipproofslot-slot-authorityid-authorityid-optionopaquekeyownershipproof \"Direct link to generatekeyownershipproofslot-slot-authorityid-authorityid-optionopaquekeyownershipproof\")\n\n*   **interface**: `api.call.babeApi.generateKeyOwnershipProof`\n*   **runtime**: `BabeApi_generate_key_ownership_proof`\n*   **summary**: Generates a proof of key ownership for the given authority in the current epoch.\n\n### nextEpoch(): `Epoch`[\u200b](#nextepoch-epoch \"Direct link to nextepoch-epoch\")\n\n*   **interface**: `api.call.babeApi.nextEpoch`\n*   **runtime**: `BabeApi_next_epoch`\n*   **summary**: Returns information regarding the next epoch (which was already previously announced).\n\n### submitReportEquivocationUnsignedExtrinsic(equivocationProof: `BabeEquivocationProof`, keyOwnerProof: `OpaqueKeyOwnershipProof`): `Option<Null>`[\u200b](#submitreportequivocationunsignedextrinsicequivocationproof-babeequivocationproof-keyownerproof-opaquekeyownershipproof-optionnull \"Direct link to submitreportequivocationunsignedextrinsicequivocationproof-babeequivocationproof-keyownerproof-opaquekeyownershipproof-optionnull\")\n\n*   **interface**: `api.call.babeApi.submitReportEquivocationUnsignedExtrinsic`\n*   **runtime**: `BabeApi_submit_report_equivocation_unsigned_extrinsic`\n*   **summary**: Submits an unsigned extrinsic to report an equivocation.\n\n* * *\n\nBeefyApi[\u200b](#beefyapi \"Direct link to BeefyApi\")\n\n-------------------------------------------------\n\n### beefyGenesis(): `Option<BlockNumber>`[\u200b](#beefygenesis-optionblocknumber \"Direct link to beefygenesis-optionblocknumber\")\n\n*   **interface**: `api.call.beefyApi.beefyGenesis`\n*   **runtime**: `BeefyApi_beefy_genesis`\n*   **summary**: Return the block number where BEEFY consensus is enabled/started\n\n### generateKeyOwnershipProof(setId: `ValidatorSetId`, authorityId: `AuthorityId`): `Option<OpaqueKeyOwnershipProof>`[\u200b](#generatekeyownershipproofsetid-validatorsetid-authorityid-authorityid-optionopaquekeyownershipproof \"Direct link to generatekeyownershipproofsetid-validatorsetid-authorityid-authorityid-optionopaquekeyownershipproof\")\n\n*   **interface**: `api.call.beefyApi.generateKeyOwnershipProof`\n*   **runtime**: `BeefyApi_generate_key_ownership_proof`\n*   **summary**: Generates a proof of key ownership for the given authority in the given set.\n\n### submitReportEquivocationUnsignedExtrinsic(equivocationProof: `BeefyEquivocationProof`, keyOwnerProof: `OpaqueKeyOwnershipProof`): `Option<Null>`[\u200b](#submitreportequivocationunsignedextrinsicequivocationproof-beefyequivocationproof-keyownerproof-opaquekeyownershipproof-optionnull \"Direct link to submitreportequivocationunsignedextrinsicequivocationproof-beefyequivocationproof-keyownerproof-opaquekeyownershipproof-optionnull\")\n\n*   **interface**: `api.call.beefyApi.submitReportEquivocationUnsignedExtrinsic`\n*   **runtime**: `BeefyApi_submit_report_equivocation_unsigned_extrinsic`\n*   **summary**: Submits an unsigned extrinsic to report an equivocation.\n\n### validatorSet(): `Option<ValidatorSet>`[\u200b](#validatorset-optionvalidatorset \"Direct link to validatorset-optionvalidatorset\")\n\n*   **interface**: `api.call.beefyApi.validatorSet`\n*   **runtime**: `BeefyApi_validator_set`\n*   **summary**: Return the current active BEEFY validator set\n\n* * *\n\nBlockBuilder[\u200b](#blockbuilder \"Direct link to BlockBuilder\")\n\n-------------------------------------------------------------\n\n### applyExtrinsic(extrinsic: `Extrinsic`): `ApplyExtrinsicResult`[\u200b](#applyextrinsicextrinsic-extrinsic-applyextrinsicresult \"Direct link to applyextrinsicextrinsic-extrinsic-applyextrinsicresult\")\n\n*   **interface**: `api.call.blockBuilder.applyExtrinsic`\n*   **runtime**: `BlockBuilder_apply_extrinsic`\n*   **summary**: Apply the given extrinsic.\n\n### checkInherents(block: `Block`, data: `InherentData`): `CheckInherentsResult`[\u200b](#checkinherentsblock-block-data-inherentdata-checkinherentsresult \"Direct link to checkinherentsblock-block-data-inherentdata-checkinherentsresult\")\n\n*   **interface**: `api.call.blockBuilder.checkInherents`\n*   **runtime**: `BlockBuilder_check_inherents`\n*   **summary**: Check that the inherents are valid.\n\n### finalizeBlock(): `Header`[\u200b](#finalizeblock-header \"Direct link to finalizeblock-header\")\n\n*   **interface**: `api.call.blockBuilder.finalizeBlock`\n*   **runtime**: `BlockBuilder_finalize_block`\n*   **summary**: Finish the current block.\n\n### inherentExtrinsics(inherent: `InherentData`): `Vec<Extrinsic>`[\u200b](#inherentextrinsicsinherent-inherentdata-vecextrinsic \"Direct link to inherentextrinsicsinherent-inherentdata-vecextrinsic\")\n\n*   **interface**: `api.call.blockBuilder.inherentExtrinsics`\n*   **runtime**: `BlockBuilder_inherent_extrinsics`\n*   **summary**: Generate inherent extrinsics.\n\n* * *\n\nCore[\u200b](#core \"Direct link to Core\")\n\n-------------------------------------\n\n### executeBlock(block: `Block`): `Null`[\u200b](#executeblockblock-block-null \"Direct link to executeblockblock-block-null\")\n\n*   **interface**: `api.call.core.executeBlock`\n*   **runtime**: `Core_execute_block`\n*   **summary**: Execute the given block.\n\n### initializeBlock(header: `Header`): `Null`[\u200b](#initializeblockheader-header-null \"Direct link to initializeblockheader-header-null\")\n\n*   **interface**: `api.call.core.initializeBlock`\n*   **runtime**: `Core_initialize_block`\n*   **summary**: Initialize a block with the given header.\n\n### version(): `RuntimeVersion`[\u200b](#version-runtimeversion \"Direct link to version-runtimeversion\")\n\n*   **interface**: `api.call.core.version`\n*   **runtime**: `Core_version`\n*   **summary**: Returns the version of the runtime.\n\n* * *\n\nGrandpaApi[\u200b](#grandpaapi \"Direct link to GrandpaApi\")\n\n-------------------------------------------------------\n\n### currentSetId(): `SetId`[\u200b](#currentsetid-setid \"Direct link to currentsetid-setid\")\n\n*   **interface**: `api.call.grandpaApi.currentSetId`\n*   **runtime**: `GrandpaApi_current_set_id`\n*   **summary**: Get current GRANDPA authority set id.\n\n### generateKeyOwnershipProof(setId: `SetId`, authorityId: `AuthorityId`): `Option<OpaqueKeyOwnershipProof>`[\u200b](#generatekeyownershipproofsetid-setid-authorityid-authorityid-optionopaquekeyownershipproof \"Direct link to generatekeyownershipproofsetid-setid-authorityid-authorityid-optionopaquekeyownershipproof\")\n\n*   **interface**: `api.call.grandpaApi.generateKeyOwnershipProof`\n*   **runtime**: `GrandpaApi_generate_key_ownership_proof`\n*   **summary**: Generates a proof of key ownership for the given authority in the given set.\n\n### grandpaAuthorities(): `AuthorityList`[\u200b](#grandpaauthorities-authoritylist \"Direct link to grandpaauthorities-authoritylist\")\n\n*   **interface**: `api.call.grandpaApi.grandpaAuthorities`\n*   **runtime**: `GrandpaApi_grandpa_authorities`\n*   **summary**: Get the current GRANDPA authorities and weights. This should not change except for when changes are scheduled and the corresponding delay has passed.\n\n### submitReportEquivocationUnsignedExtrinsic(equivocationProof: `GrandpaEquivocationProof`, keyOwnerProof: `OpaqueKeyOwnershipProof`): `Option<Null>`[\u200b](#submitreportequivocationunsignedextrinsicequivocationproof-grandpaequivocationproof-keyownerproof-opaquekeyownershipproof-optionnull \"Direct link to submitreportequivocationunsignedextrinsicequivocationproof-grandpaequivocationproof-keyownerproof-opaquekeyownershipproof-optionnull\")\n\n*   **interface**: `api.call.grandpaApi.submitReportEquivocationUnsignedExtrinsic`\n*   **runtime**: `GrandpaApi_submit_report_equivocation_unsigned_extrinsic`\n*   **summary**: Submits an unsigned extrinsic to report an equivocation.\n\n* * *\n\nMetadata[\u200b](#metadata \"Direct link to Metadata\")\n\n-------------------------------------------------\n\n### metadata(): `OpaqueMetadata`[\u200b](#metadata-opaquemetadata \"Direct link to metadata-opaquemetadata\")\n\n*   **interface**: `api.call.metadata.metadata`\n*   **runtime**: `Metadata_metadata`\n*   **summary**: Returns the metadata of a runtime\n\n### metadataAtVersion(version: `u32`): `Option<OpaqueMetadata>`[\u200b](#metadataatversionversion-u32-optionopaquemetadata \"Direct link to metadataatversionversion-u32-optionopaquemetadata\")\n\n*   **interface**: `api.call.metadata.metadataAtVersion`\n*   **runtime**: `Metadata_metadata_at_version`\n*   **summary**: Returns the metadata at a given version.\n\n### metadataVersions(): `Vec<u32>`[\u200b](#metadataversions-vecu32 \"Direct link to metadataversions-vecu32\")\n\n*   **interface**: `api.call.metadata.metadataVersions`\n*   **runtime**: `Metadata_metadata_versions`\n*   **summary**: Returns the supported metadata versions.\n\n* * *\n\nMmrApi[\u200b](#mmrapi \"Direct link to MmrApi\")\n\n-------------------------------------------\n\n### generateProof(blockNumbers: `Vec<BlockNumber>`, bestKnownBlockNumber: `Option<BlockNumber>`): `Result<(Vec<MmrEncodableOpaqueLeaf>, MmrBatchProof), MmrError>`[\u200b](#generateproofblocknumbers-vecblocknumber-bestknownblocknumber-optionblocknumber-resultvecmmrencodableopaqueleaf-mmrbatchproof-mmrerror \"Direct link to generateproofblocknumbers-vecblocknumber-bestknownblocknumber-optionblocknumber-resultvecmmrencodableopaqueleaf-mmrbatchproof-mmrerror\")\n\n*   **interface**: `api.call.mmrApi.generateProof`\n*   **runtime**: `MmrApi_generate_proof`\n*   **summary**: Generate MMR proof for the given block numbers.\n\n### root(): `Result<Hash, MmrError>`[\u200b](#root-resulthash-mmrerror \"Direct link to root-resulthash-mmrerror\")\n\n*   **interface**: `api.call.mmrApi.root`\n*   **runtime**: `MmrApi_root`\n*   **summary**: Return the on-chain MMR root hash.\n\n### verifyProof(leaves: `Vec<MmrEncodableOpaqueLeaf>`, proof: `MmrBatchProof`): `Result<(), MmrError>`[\u200b](#verifyproofleaves-vecmmrencodableopaqueleaf-proof-mmrbatchproof-result-mmrerror \"Direct link to verifyproofleaves-vecmmrencodableopaqueleaf-proof-mmrbatchproof-result-mmrerror\")\n\n*   **interface**: `api.call.mmrApi.verifyProof`\n*   **runtime**: `MmrApi_verify_proof`\n*   **summary**: Verify MMR proof against on-chain MMR.\n\n### verifyProofStateless(root: `Hash`, leaves: `Vec<MmrEncodableOpaqueLeaf>`, proof: `MmrBatchProof`): `Result<(), MmrError>`[\u200b](#verifyproofstatelessroot-hash-leaves-vecmmrencodableopaqueleaf-proof-mmrbatchproof-result-mmrerror \"Direct link to verifyproofstatelessroot-hash-leaves-vecmmrencodableopaqueleaf-proof-mmrbatchproof-result-mmrerror\")\n\n*   **interface**: `api.call.mmrApi.verifyProofStateless`\n*   **runtime**: `MmrApi_verify_proof_stateless`\n*   **summary**: Verify MMR proof against given root hash.\n\n* * *\n\nNominationPoolsApi[\u200b](#nominationpoolsapi \"Direct link to NominationPoolsApi\")\n\n-------------------------------------------------------------------------------\n\n### balanceToPoints(poolId: `NpPoolId`, newFunds: `Balance`): `Balance`[\u200b](#balancetopointspoolid-nppoolid-newfunds-balance-balance \"Direct link to balancetopointspoolid-nppoolid-newfunds-balance-balance\")\n\n*   **interface**: `api.call.nominationPoolsApi.balanceToPoints`\n*   **runtime**: `NominationPoolsApi_balance_to_points`\n*   **summary**: Returns the equivalent points of `new_funds` for a given pool.\n\n### pendingRewards(member: `AccountId`): `Balance`[\u200b](#pendingrewardsmember-accountid-balance \"Direct link to pendingrewardsmember-accountid-balance\")\n\n*   **interface**: `api.call.nominationPoolsApi.pendingRewards`\n*   **runtime**: `NominationPoolsApi_pending_rewards`\n*   **summary**: Returns the pending rewards for the given member.\n\n### pointsToBalance(poolId: `NpPoolId`, points: `Balance`): `Balance`[\u200b](#pointstobalancepoolid-nppoolid-points-balance-balance \"Direct link to pointstobalancepoolid-nppoolid-points-balance-balance\")\n\n*   **interface**: `api.call.nominationPoolsApi.pointsToBalance`\n*   **runtime**: `NominationPoolsApi_points_to_balance`\n*   **summary**: Returns the equivalent balance of `points` for a given pool.\n\n* * *\n\nOffchainWorkerApi[\u200b](#offchainworkerapi \"Direct link to OffchainWorkerApi\")\n\n----------------------------------------------------------------------------\n\n### offchainWorker(header: `Header`): `Null`[\u200b](#offchainworkerheader-header-null \"Direct link to offchainworkerheader-header-null\")\n\n*   **interface**: `api.call.offchainWorkerApi.offchainWorker`\n*   **runtime**: `OffchainWorkerApi_offchain_worker`\n*   **summary**: Starts the off-chain task for given block header.\n\n* * *\n\nParachainHost[\u200b](#parachainhost \"Direct link to ParachainHost\")\n\n----------------------------------------------------------------\n\n### assumedValidationData(paraId: `ParaId`, hash: `Hash`): `Option<(PersistedValidationData, ValidationCodeHash)>`[\u200b](#assumedvalidationdataparaid-paraid-hash-hash-optionpersistedvalidationdata-validationcodehash \"Direct link to assumedvalidationdataparaid-paraid-hash-hash-optionpersistedvalidationdata-validationcodehash\")\n\n*   **interface**: `api.call.parachainHost.assumedValidationData`\n*   **runtime**: `ParachainHost_assumed_validation_data`\n*   **summary**: Returns the persisted validation data for the given `ParaId` along with the corresponding validation code hash.\n\n### availabilityCores(): `Vec<CoreState>`[\u200b](#availabilitycores-veccorestate \"Direct link to availabilitycores-veccorestate\")\n\n*   **interface**: `api.call.parachainHost.availabilityCores`\n*   **runtime**: `ParachainHost_availability_cores`\n*   **summary**: Yields information on all availability cores as relevant to the child block.\n\n### candidateEvents(): `Vec<CandidateEvent>`[\u200b](#candidateevents-veccandidateevent \"Direct link to candidateevents-veccandidateevent\")\n\n*   **interface**: `api.call.parachainHost.candidateEvents`\n*   **runtime**: `ParachainHost_candidate_events`\n*   **summary**: Get a vector of events concerning candidates that occurred within a block.\n\n### candidatePendingAvailability(paraId: `ParaId`): `Option<CommittedCandidateReceipt>`[\u200b](#candidatependingavailabilityparaid-paraid-optioncommittedcandidatereceipt \"Direct link to candidatependingavailabilityparaid-paraid-optioncommittedcandidatereceipt\")\n\n*   **interface**: `api.call.parachainHost.candidatePendingAvailability`\n*   **runtime**: `ParachainHost_candidate_pending_availability`\n*   **summary**: Get the receipt of a candidate pending availability.\n\n### checkValidationOutputs(paraId: `ParaId`, outputs: `CandidateCommitments`): `bool`[\u200b](#checkvalidationoutputsparaid-paraid-outputs-candidatecommitments-bool \"Direct link to checkvalidationoutputsparaid-paraid-outputs-candidatecommitments-bool\")\n\n*   **interface**: `api.call.parachainHost.checkValidationOutputs`\n*   **runtime**: `ParachainHost_check_validation_outputs`\n*   **summary**: Checks if the given validation outputs pass the acceptance criteria.\n\n### disputes(): `Vec<(SessionIndex, CandidateHash, DisputeState)>`[\u200b](#disputes-vecsessionindex-candidatehash-disputestate \"Direct link to disputes-vecsessionindex-candidatehash-disputestate\")\n\n*   **interface**: `api.call.parachainHost.disputes`\n*   **runtime**: `ParachainHost_disputes`\n*   **summary**: Returns all onchain disputes.\n\n### dmqContents(paraId: `ParaId`): `Vec<InboundDownwardMessage>`[\u200b](#dmqcontentsparaid-paraid-vecinbounddownwardmessage \"Direct link to dmqcontentsparaid-paraid-vecinbounddownwardmessage\")\n\n*   **interface**: `api.call.parachainHost.dmqContents`\n*   **runtime**: `ParachainHost_dmq_contents`\n*   **summary**: Get all the pending inbound messages in the downward message queue for a para.\n\n### inboundHrmpChannelsContents(paraId: `ParaId`): `Vec<InboundHrmpMessage>`[\u200b](#inboundhrmpchannelscontentsparaid-paraid-vecinboundhrmpmessage \"Direct link to inboundhrmpchannelscontentsparaid-paraid-vecinboundhrmpmessage\")\n\n*   **interface**: `api.call.parachainHost.inboundHrmpChannelsContents`\n*   **runtime**: `ParachainHost_inbound_hrmp_channels_contents`\n*   **summary**: Get the contents of all channels addressed to the given recipient.\n\n### keyOwnershipProof(validatorId: `ValidatorId`): `Option<OpaqueKeyOwnershipProof>`[\u200b](#keyownershipproofvalidatorid-validatorid-optionopaquekeyownershipproof \"Direct link to keyownershipproofvalidatorid-validatorid-optionopaquekeyownershipproof\")\n\n*   **interface**: `api.call.parachainHost.keyOwnershipProof`\n*   **runtime**: `ParachainHost_key_ownership_proof`\n*   **summary**: Returns a merkle proof of a validator session key\n\n### onChainVotes(): `Option<ScrapedOnChainVotes>`[\u200b](#onchainvotes-optionscrapedonchainvotes \"Direct link to onchainvotes-optionscrapedonchainvotes\")\n\n*   **interface**: `api.call.parachainHost.onChainVotes`\n*   **runtime**: `ParachainHost_on_chain_votes`\n*   **summary**: Scrape dispute relevant from on-chain, backing votes and resolved disputes.\n\n### persistedValidationData(paraId: `ParaId`, assumption: `OccupiedCoreAssumption`): `Option<PersistedValidationData>`[\u200b](#persistedvalidationdataparaid-paraid-assumption-occupiedcoreassumption-optionpersistedvalidationdata \"Direct link to persistedvalidationdataparaid-paraid-assumption-occupiedcoreassumption-optionpersistedvalidationdata\")\n\n*   **interface**: `api.call.parachainHost.persistedValidationData`\n*   **runtime**: `ParachainHost_persisted_validation_data`\n*   **summary**: Yields the persisted validation data for the given `ParaId` along with an assumption that should be used if the para currently occupies a core.\n\n### pvfsRequirePrecheck(): `Vec<ValidationCodeHash>`[\u200b](#pvfsrequireprecheck-vecvalidationcodehash \"Direct link to pvfsrequireprecheck-vecvalidationcodehash\")\n\n*   **interface**: `api.call.parachainHost.pvfsRequirePrecheck`\n*   **runtime**: `ParachainHost_pvfs_require_precheck`\n*   **summary**: Returns code hashes of PVFs that require pre-checking by validators in the active set.\n\n### sessionExecutorParams(sessionIndex: `SessionIndex`): `Option<ExecutorParams>`[\u200b](#sessionexecutorparamssessionindex-sessionindex-optionexecutorparams \"Direct link to sessionexecutorparamssessionindex-sessionindex-optionexecutorparams\")\n\n*   **interface**: `api.call.parachainHost.sessionExecutorParams`\n*   **runtime**: `ParachainHost_session_executor_params`\n*   **summary**: Returns execution parameters for the session.\n\n### sessionIndexForChild(): `SessionIndex`[\u200b](#sessionindexforchild-sessionindex \"Direct link to sessionindexforchild-sessionindex\")\n\n*   **interface**: `api.call.parachainHost.sessionIndexForChild`\n*   **runtime**: `ParachainHost_session_index_for_child`\n*   **summary**: Returns the session index expected at a child of the block.\n\n### sessionInfo(index: `SessionIndex`): `Option<SessionInfo>`[\u200b](#sessioninfoindex-sessionindex-optionsessioninfo \"Direct link to sessioninfoindex-sessionindex-optionsessioninfo\")\n\n*   **interface**: `api.call.parachainHost.sessionInfo`\n*   **runtime**: `ParachainHost_session_info`\n*   **summary**: Get the session info for the given session, if stored.\n\n### submitPvfCheckStatement(stmt: `PvfCheckStatement`, signature: `ValidatorSignature`): `Null`[\u200b](#submitpvfcheckstatementstmt-pvfcheckstatement-signature-validatorsignature-null \"Direct link to submitpvfcheckstatementstmt-pvfcheckstatement-signature-validatorsignature-null\")\n\n*   **interface**: `api.call.parachainHost.submitPvfCheckStatement`\n*   **runtime**: `ParachainHost_submit_pvf_check_statement`\n*   **summary**: Submits a PVF pre-checking statement into the transaction pool.\n\n### submitReportDisputeLost(disputeProof: `DisputeProof`, keyOwnershipProof: `OpaqueKeyOwnershipProof`): `Option<Null>`[\u200b](#submitreportdisputelostdisputeproof-disputeproof-keyownershipproof-opaquekeyownershipproof-optionnull \"Direct link to submitreportdisputelostdisputeproof-disputeproof-keyownershipproof-opaquekeyownershipproof-optionnull\")\n\n*   **interface**: `api.call.parachainHost.submitReportDisputeLost`\n*   **runtime**: `ParachainHost_submit_report_dispute_lost`\n*   **summary**: Submit an unsigned extrinsic to slash validators who lost a dispute about a candidate of a past session\n\n### unappliedSlashes(): `Vec<(SessionIndex, CandidateHash, PendingSlashes)>`[\u200b](#unappliedslashes-vecsessionindex-candidatehash-pendingslashes \"Direct link to unappliedslashes-vecsessionindex-candidatehash-pendingslashes\")\n\n*   **interface**: `api.call.parachainHost.unappliedSlashes`\n*   **runtime**: `ParachainHost_unapplied_slashes`\n*   **summary**: Returns a list of validators that lost a past session dispute and need to be slashed\n\n### validationCode(paraId: `ParaId`, assumption: `OccupiedCoreAssumption`): `ValidationCode`[\u200b](#validationcodeparaid-paraid-assumption-occupiedcoreassumption-validationcode \"Direct link to validationcodeparaid-paraid-assumption-occupiedcoreassumption-validationcode\")\n\n*   **interface**: `api.call.parachainHost.validationCode`\n*   **runtime**: `ParachainHost_validation_code`\n*   **summary**: Fetch the validation code used by a para, making the given `OccupiedCoreAssumption`.\n\n### validationCodeByHash(hash: `ValidationCodeHash`): `Option<ValidationCode>`[\u200b](#validationcodebyhashhash-validationcodehash-optionvalidationcode \"Direct link to validationcodebyhashhash-validationcodehash-optionvalidationcode\")\n\n*   **interface**: `api.call.parachainHost.validationCodeByHash`\n*   **runtime**: `ParachainHost_validation_code_by_hash`\n*   **summary**: Get the validation code from its hash.\n\n### validationCodeHash(paraId: `ParaId`, assumption: `OccupiedCoreAssumption`): `Option<ValidationCodeHash>`[\u200b](#validationcodehashparaid-paraid-assumption-occupiedcoreassumption-optionvalidationcodehash \"Direct link to validationcodehashparaid-paraid-assumption-occupiedcoreassumption-optionvalidationcodehash\")\n\n*   **interface**: `api.call.parachainHost.validationCodeHash`\n*   **runtime**: `ParachainHost_validation_code_hash`\n*   **summary**: Fetch the hash of the validation code used by a para, making the given `OccupiedCoreAssumption`.\n\n### validatorGroups(): `(Vec<Vec<ParaValidatorIndex>>, GroupRotationInfo)`[\u200b](#validatorgroups-vecvecparavalidatorindex-grouprotationinfo \"Direct link to validatorgroups-vecvecparavalidatorindex-grouprotationinfo\")\n\n*   **interface**: `api.call.parachainHost.validatorGroups`\n*   **runtime**: `ParachainHost_validator_groups`\n*   **summary**: Returns the validator groups and rotation info localized based on the hypothetical child of a block whose state this is invoked on\n\n### validators(): `Vec<ValidatorId>`[\u200b](#validators-vecvalidatorid \"Direct link to validators-vecvalidatorid\")\n\n*   **interface**: `api.call.parachainHost.validators`\n*   **runtime**: `ParachainHost_validators`\n*   **summary**: Get the current validators.\n\n* * *\n\nSessionKeys[\u200b](#sessionkeys \"Direct link to SessionKeys\")\n\n----------------------------------------------------------\n\n### decodeSessionKeys(encoded: `Bytes`): `Option<Vec<(Bytes, KeyTypeId)>>`[\u200b](#decodesessionkeysencoded-bytes-optionvecbytes-keytypeid \"Direct link to decodesessionkeysencoded-bytes-optionvecbytes-keytypeid\")\n\n*   **interface**: `api.call.sessionKeys.decodeSessionKeys`\n*   **runtime**: `SessionKeys_decode_session_keys`\n*   **summary**: Decode the given public session keys.\n\n### generateSessionKeys(seed: `Option<Bytes>`): `Bytes`[\u200b](#generatesessionkeysseed-optionbytes-bytes \"Direct link to generatesessionkeysseed-optionbytes-bytes\")\n\n*   **interface**: `api.call.sessionKeys.generateSessionKeys`\n*   **runtime**: `SessionKeys_generate_session_keys`\n*   **summary**: Generate a set of session keys with optionally using the given seed.\n\n* * *\n\nStakingApi[\u200b](#stakingapi \"Direct link to StakingApi\")\n\n-------------------------------------------------------\n\n### nominationsQuota(balance: `Balance`): `u32`[\u200b](#nominationsquotabalance-balance-u32 \"Direct link to nominationsquotabalance-balance-u32\")\n\n*   **interface**: `api.call.stakingApi.nominationsQuota`\n*   **runtime**: `StakingApi_nominations_quota`\n*   **summary**: Returns the nominations quota for a nominator with a given balance.\n\n* * *\n\nTaggedTransactionQueue[\u200b](#taggedtransactionqueue \"Direct link to TaggedTransactionQueue\")\n\n-------------------------------------------------------------------------------------------\n\n### validateTransaction(source: `TransactionSource`, tx: `Extrinsic`, blockHash: `BlockHash`): `TransactionValidity`[\u200b](#validatetransactionsource-transactionsource-tx-extrinsic-blockhash-blockhash-transactionvalidity \"Direct link to validatetransactionsource-transactionsource-tx-extrinsic-blockhash-blockhash-transactionvalidity\")\n\n*   **interface**: `api.call.taggedTransactionQueue.validateTransaction`\n*   **runtime**: `TaggedTransactionQueue_validate_transaction`\n*   **summary**: Validate the transaction.\n\n* * *\n\nTransactionPaymentApi[\u200b](#transactionpaymentapi \"Direct link to TransactionPaymentApi\")\n\n----------------------------------------------------------------------------------------\n\n### queryFeeDetails(uxt: `Extrinsic`, len: `u32`): `FeeDetails`[\u200b](#queryfeedetailsuxt-extrinsic-len-u32-feedetails \"Direct link to queryfeedetailsuxt-extrinsic-len-u32-feedetails\")\n\n*   **interface**: `api.call.transactionPaymentApi.queryFeeDetails`\n*   **runtime**: `TransactionPaymentApi_query_fee_details`\n*   **summary**: The transaction fee details\n\n### queryInfo(uxt: `Extrinsic`, len: `u32`): `RuntimeDispatchInfo`[\u200b](#queryinfouxt-extrinsic-len-u32-runtimedispatchinfo \"Direct link to queryinfouxt-extrinsic-len-u32-runtimedispatchinfo\")\n\n*   **interface**: `api.call.transactionPaymentApi.queryInfo`\n*   **runtime**: `TransactionPaymentApi_query_info`\n*   **summary**: The transaction info\n\n### queryLengthToFee(length: `u32`): `Balance`[\u200b](#querylengthtofeelength-u32-balance \"Direct link to querylengthtofeelength-u32-balance\")\n\n*   **interface**: `api.call.transactionPaymentApi.queryLengthToFee`\n*   **runtime**: `TransactionPaymentApi_query_length_to_fee`\n*   **summary**: Query the output of the current LengthToFee given some input\n\n### queryWeightToFee(weight: `Weight`): `Balance`[\u200b](#queryweighttofeeweight-weight-balance \"Direct link to queryweighttofeeweight-weight-balance\")\n\n*   **interface**: `api.call.transactionPaymentApi.queryWeightToFee`\n*   **runtime**: `TransactionPaymentApi_query_weight_to_fee`\n*   **summary**: Query the output of the current WeightToFee given some input\n\n* * *\n\nTransactionPaymentCallApi[\u200b](#transactionpaymentcallapi \"Direct link to TransactionPaymentCallApi\")\n\n----------------------------------------------------------------------------------------------------\n\n### queryCallFeeDetails(call: `Call`, len: `u32`): `FeeDetails`[\u200b](#querycallfeedetailscall-call-len-u32-feedetails \"Direct link to querycallfeedetailscall-call-len-u32-feedetails\")\n\n*   **interface**: `api.call.transactionPaymentCallApi.queryCallFeeDetails`\n*   **runtime**: `TransactionPaymentCallApi_query_call_fee_details`\n*   **summary**: The call fee details\n\n### queryCallInfo(call: `Call`, len: `u32`): `RuntimeDispatchInfo`[\u200b](#querycallinfocall-call-len-u32-runtimedispatchinfo \"Direct link to querycallinfocall-call-len-u32-runtimedispatchinfo\")\n\n*   **interface**: `api.call.transactionPaymentCallApi.queryCallInfo`\n*   **runtime**: `TransactionPaymentCallApi_query_call_info`\n*   **summary**: The call info\n\n### queryLengthToFee(length: `u32`): `Balance`[\u200b](#querylengthtofeelength-u32-balance-1 \"Direct link to querylengthtofeelength-u32-balance-1\")\n\n*   **interface**: `api.call.transactionPaymentCallApi.queryLengthToFee`\n*   **runtime**: `TransactionPaymentCallApi_query_length_to_fee`\n*   **summary**: Query the output of the current LengthToFee given some input\n\n### queryWeightToFee(weight: `Weight`): `Balance`[\u200b](#queryweighttofeeweight-weight-balance-1 \"Direct link to queryweighttofeeweight-weight-balance-1\")\n\n*   **interface**: `api.call.transactionPaymentCallApi.queryWeightToFee`\n*   **runtime**: `TransactionPaymentCallApi_query_weight_to_fee`\n*   **summary**: Query the output of the current WeightToFee given some input\n\n[Edit this page](https://github.com/polkadot-js/docs/edit/master/docs/polkadot/runtime.md)\n\n[Previous\\\n\\\nOverview](/docs/polkadot)\n[Next\\\n\\\nJSON-RPC](/docs/polkadot/rpc)\n\n*   [AccountNonceApi](#accountnonceapi)\n    *   [accountNonce(accountId: `AccountId`): `Index`](#accountnonceaccountid-accountid-index)\n        \n*   [AuthorityDiscoveryApi](#authoritydiscoveryapi)\n    *   [authorities(): `Vec<AuthorityId>`](#authorities-vecauthorityid)\n        \n*   [BabeApi](#babeapi)\n    *   [configuration(): `BabeGenesisConfiguration`](#configuration-babegenesisconfiguration)\n        \n    *   [currentEpoch(): `Epoch`](#currentepoch-epoch)\n        \n    *   [currentEpochStart(): `Slot`](#currentepochstart-slot)\n        \n    *   [generateKeyOwnershipProof(slot: `Slot`, authorityId: `AuthorityId`): `Option<OpaqueKeyOwnershipProof>`](#generatekeyownershipproofslot-slot-authorityid-authorityid-optionopaquekeyownershipproof)\n        \n    *   [nextEpoch(): `Epoch`](#nextepoch-epoch)\n        \n    *   [submitReportEquivocationUnsignedExtrinsic(equivocationProof: `BabeEquivocationProof`, keyOwnerProof: `OpaqueKeyOwnershipProof`): `Option<Null>`](#submitreportequivocationunsignedextrinsicequivocationproof-babeequivocationproof-keyownerproof-opaquekeyownershipproof-optionnull)\n        \n*   [BeefyApi](#beefyapi)\n    *   [beefyGenesis(): `Option<BlockNumber>`](#beefygenesis-optionblocknumber)\n        \n    *   [generateKeyOwnershipProof(setId: `ValidatorSetId`, authorityId: `AuthorityId`): `Option<OpaqueKeyOwnershipProof>`](#generatekeyownershipproofsetid-validatorsetid-authorityid-authorityid-optionopaquekeyownershipproof)\n        \n    *   [submitReportEquivocationUnsignedExtrinsic(equivocationProof: `BeefyEquivocationProof`, keyOwnerProof: `OpaqueKeyOwnershipProof`): `Option<Null>`](#submitreportequivocationunsignedextrinsicequivocationproof-beefyequivocationproof-keyownerproof-opaquekeyownershipproof-optionnull)\n        \n    *   [validatorSet(): `Option<ValidatorSet>`](#validatorset-optionvalidatorset)\n        \n*   [BlockBuilder](#blockbuilder)\n    *   [applyExtrinsic(extrinsic: `Extrinsic`): `ApplyExtrinsicResult`](#applyextrinsicextrinsic-extrinsic-applyextrinsicresult)\n        \n    *   [checkInherents(block: `Block`, data: `InherentData`): `CheckInherentsResult`](#checkinherentsblock-block-data-inherentdata-checkinherentsresult)\n        \n    *   [finalizeBlock(): `Header`](#finalizeblock-header)\n        \n    *   [inherentExtrinsics(inherent: `InherentData`): `Vec<Extrinsic>`](#inherentextrinsicsinherent-inherentdata-vecextrinsic)\n        \n*   [Core](#core)\n    *   [executeBlock(block: `Block`): `Null`](#executeblockblock-block-null)\n        \n    *   [initializeBlock(header: `Header`): `Null`](#initializeblockheader-header-null)\n        \n    *   [version(): `RuntimeVersion`](#version-runtimeversion)\n        \n*   [GrandpaApi](#grandpaapi)\n    *   [currentSetId(): `SetId`](#currentsetid-setid)\n        \n    *   [generateKeyOwnershipProof(setId: `SetId`, authorityId: `AuthorityId`): `Option<OpaqueKeyOwnershipProof>`](#generatekeyownershipproofsetid-setid-authorityid-authorityid-optionopaquekeyownershipproof)\n        \n    *   [grandpaAuthorities(): `AuthorityList`](#grandpaauthorities-authoritylist)\n        \n    *   [submitReportEquivocationUnsignedExtrinsic(equivocationProof: `GrandpaEquivocationProof`, keyOwnerProof: `OpaqueKeyOwnershipProof`): `Option<Null>`](#submitreportequivocationunsignedextrinsicequivocationproof-grandpaequivocationproof-keyownerproof-opaquekeyownershipproof-optionnull)\n        \n*   [Metadata](#metadata)\n    *   [metadata(): `OpaqueMetadata`](#metadata-opaquemetadata)\n        \n    *   [metadataAtVersion(version: `u32`): `Option<OpaqueMetadata>`](#metadataatversionversion-u32-optionopaquemetadata)\n        \n    *   [metadataVersions(): `Vec<u32>`](#metadataversions-vecu32)\n        \n*   [MmrApi](#mmrapi)\n    *   [generateProof(blockNumbers: `Vec<BlockNumber>`, bestKnownBlockNumber: `Option<BlockNumber>`): `Result<(Vec<MmrEncodableOpaqueLeaf>, MmrBatchProof), MmrError>`](#generateproofblocknumbers-vecblocknumber-bestknownblocknumber-optionblocknumber-resultvecmmrencodableopaqueleaf-mmrbatchproof-mmrerror)\n        \n    *   [root(): `Result<Hash, MmrError>`](#root-resulthash-mmrerror)\n        \n    *   [verifyProof(leaves: `Vec<MmrEncodableOpaqueLeaf>`, proof: `MmrBatchProof`): `Result<(), MmrError>`](#verifyproofleaves-vecmmrencodableopaqueleaf-proof-mmrbatchproof-result-mmrerror)\n        \n    *   [verifyProofStateless(root: `Hash`, leaves: `Vec<MmrEncodableOpaqueLeaf>`, proof: `MmrBatchProof`): `Result<(), MmrError>`](#verifyproofstatelessroot-hash-leaves-vecmmrencodableopaqueleaf-proof-mmrbatchproof-result-mmrerror)\n        \n*   [NominationPoolsApi](#nominationpoolsapi)\n    *   [balanceToPoints(poolId: `NpPoolId`, newFunds: `Balance`): `Balance`](#balancetopointspoolid-nppoolid-newfunds-balance-balance)\n        \n    *   [pendingRewards(member: `AccountId`): `Balance`](#pendingrewardsmember-accountid-balance)\n        \n    *   [pointsToBalance(poolId: `NpPoolId`, points: `Balance`): `Balance`](#pointstobalancepoolid-nppoolid-points-balance-balance)\n        \n*   [OffchainWorkerApi](#offchainworkerapi)\n    *   [offchainWorker(header: `Header`): `Null`](#offchainworkerheader-header-null)\n        \n*   [ParachainHost](#parachainhost)\n    *   [assumedValidationData(paraId: `ParaId`, hash: `Hash`): `Option<(PersistedValidationData, ValidationCodeHash)>`](#assumedvalidationdataparaid-paraid-hash-hash-optionpersistedvalidationdata-validationcodehash)\n        \n    *   [availabilityCores(): `Vec<CoreState>`](#availabilitycores-veccorestate)\n        \n    *   [candidateEvents(): `Vec<CandidateEvent>`](#candidateevents-veccandidateevent)\n        \n    *   [candidatePendingAvailability(paraId: `ParaId`): `Option<CommittedCandidateReceipt>`](#candidatependingavailabilityparaid-paraid-optioncommittedcandidatereceipt)\n        \n    *   [checkValidationOutputs(paraId: `ParaId`, outputs: `CandidateCommitments`): `bool`](#checkvalidationoutputsparaid-paraid-outputs-candidatecommitments-bool)\n        \n    *   [disputes(): `Vec<(SessionIndex, CandidateHash, DisputeState)>`](#disputes-vecsessionindex-candidatehash-disputestate)\n        \n    *   [dmqContents(paraId: `ParaId`): `Vec<InboundDownwardMessage>`](#dmqcontentsparaid-paraid-vecinbounddownwardmessage)\n        \n    *   [inboundHrmpChannelsContents(paraId: `ParaId`): `Vec<InboundHrmpMessage>`](#inboundhrmpchannelscontentsparaid-paraid-vecinboundhrmpmessage)\n        \n    *   [keyOwnershipProof(validatorId: `ValidatorId`): `Option<OpaqueKeyOwnershipProof>`](#keyownershipproofvalidatorid-validatorid-optionopaquekeyownershipproof)\n        \n    *   [onChainVotes(): `Option<ScrapedOnChainVotes>`](#onchainvotes-optionscrapedonchainvotes)\n        \n    *   [persistedValidationData(paraId: `ParaId`, assumption: `OccupiedCoreAssumption`): `Option<PersistedValidationData>`](#persistedvalidationdataparaid-paraid-assumption-occupiedcoreassumption-optionpersistedvalidationdata)\n        \n    *   [pvfsRequirePrecheck(): `Vec<ValidationCodeHash>`](#pvfsrequireprecheck-vecvalidationcodehash)\n        \n    *   [sessionExecutorParams(sessionIndex: `SessionIndex`): `Option<ExecutorParams>`](#sessionexecutorparamssessionindex-sessionindex-optionexecutorparams)\n        \n    *   [sessionIndexForChild(): `SessionIndex`](#sessionindexforchild-sessionindex)\n        \n    *   [sessionInfo(index: `SessionIndex`): `Option<SessionInfo>`](#sessioninfoindex-sessionindex-optionsessioninfo)\n        \n    *   [submitPvfCheckStatement(stmt: `PvfCheckStatement`, signature: `ValidatorSignature`): `Null`](#submitpvfcheckstatementstmt-pvfcheckstatement-signature-validatorsignature-null)\n        \n    *   [submitReportDisputeLost(disputeProof: `DisputeProof`, keyOwnershipProof: `OpaqueKeyOwnershipProof`): `Option<Null>`](#submitreportdisputelostdisputeproof-disputeproof-keyownershipproof-opaquekeyownershipproof-optionnull)\n        \n    *   [unappliedSlashes(): `Vec<(SessionIndex, CandidateHash, PendingSlashes)>`](#unappliedslashes-vecsessionindex-candidatehash-pendingslashes)\n        \n    *   [validationCode(paraId: `ParaId`, assumption: `OccupiedCoreAssumption`): `ValidationCode`](#validationcodeparaid-paraid-assumption-occupiedcoreassumption-validationcode)\n        \n    *   [validationCodeByHash(hash: `ValidationCodeHash`): `Option<ValidationCode>`](#validationcodebyhashhash-validationcodehash-optionvalidationcode)\n        \n    *   [validationCodeHash(paraId: `ParaId`, assumption: `OccupiedCoreAssumption`): `Option<ValidationCodeHash>`](#validationcodehashparaid-paraid-assumption-occupiedcoreassumption-optionvalidationcodehash)\n        \n    *   [validatorGroups(): `(Vec<Vec<ParaValidatorIndex>>, GroupRotationInfo)`](#validatorgroups-vecvecparavalidatorindex-grouprotationinfo)\n        \n    *   [validators(): `Vec<ValidatorId>`](#validators-vecvalidatorid)\n        \n*   [SessionKeys](#sessionkeys)\n    *   [decodeSessionKeys(encoded: `Bytes`): `Option<Vec<(Bytes, KeyTypeId)>>`](#decodesessionkeysencoded-bytes-optionvecbytes-keytypeid)\n        \n    *   [generateSessionKeys(seed: `Option<Bytes>`): `Bytes`](#generatesessionkeysseed-optionbytes-bytes)\n        \n*   [StakingApi](#stakingapi)\n    *   [nominationsQuota(balance: `Balance`): `u32`](#nominationsquotabalance-balance-u32)\n        \n*   [TaggedTransactionQueue](#taggedtransactionqueue)\n    *   [validateTransaction(source: `TransactionSource`, tx: `Extrinsic`, blockHash: `BlockHash`): `TransactionValidity`](#validatetransactionsource-transactionsource-tx-extrinsic-blockhash-blockhash-transactionvalidity)\n        \n*   [TransactionPaymentApi](#transactionpaymentapi)\n    *   [queryFeeDetails(uxt: `Extrinsic`, len: `u32`): `FeeDetails`](#queryfeedetailsuxt-extrinsic-len-u32-feedetails)\n        \n    *   [queryInfo(uxt: `Extrinsic`, len: `u32`): `RuntimeDispatchInfo`](#queryinfouxt-extrinsic-len-u32-runtimedispatchinfo)\n        \n    *   [queryLengthToFee(length: `u32`): `Balance`](#querylengthtofeelength-u32-balance)\n        \n    *   [queryWeightToFee(weight: `Weight`): `Balance`](#queryweighttofeeweight-weight-balance)\n        \n*   [TransactionPaymentCallApi](#transactionpaymentcallapi)\n    *   [queryCallFeeDetails(call: `Call`, len: `u32`): `FeeDetails`](#querycallfeedetailscall-call-len-u32-feedetails)\n        \n    *   [queryCallInfo(call: `Call`, len: `u32`): `RuntimeDispatchInfo`](#querycallinfocall-call-len-u32-runtimedispatchinfo)\n        \n    *   [queryLengthToFee(length: `u32`): `Balance`](#querylengthtofeelength-u32-balance-1)\n        \n    *   [queryWeightToFee(weight: `Weight`): `Balance`](#queryweighttofeeweight-weight-balance-1)"}, {"title": null, "description": null, "source_url": "https://polkadot.js.org/docs/polkadot/storage", "markdown": "[Skip to main content](#__docusaurus_skipToContent_fallback)\n\n[![polkadot{.js}](https://polkadot.js.org/docs/img/logo.svg)\\\n\\\n**polkadot{.js}**](/docs/)\n\n[Apps UI (Wallet)](https://polkadot.js.org/apps/)\n[GitHub](https://github.com/polkadot-js/docs)\n\nSearch...\n\n*   [Introduction](#)\n    \n*   [API](#)\n    \n*   [Metadata](#)\n    \n    *   [Substrate](#)\n        \n    *   [Polkadot](#)\n        \n        *   [Overview](/docs/polkadot)\n            \n        *   [Runtime](/docs/polkadot/runtime)\n            \n        *   [JSON-RPC](/docs/polkadot/rpc)\n            \n        *   [Constants](/docs/polkadot/constants)\n            \n        *   [Storage](/docs/polkadot/storage)\n            \n        *   [Extrinsics](/docs/polkadot/extrinsics)\n            \n        *   [Events](/docs/polkadot/events)\n            \n        *   [Errors](/docs/polkadot/errors)\n            \n    *   [Kusama](#)\n        \n*   [Keyring](#)\n    \n*   [Crypto Utilities](#)\n    \n*   [Contracts (API)](#)\n    \n*   [Identicon (UI)](#)\n    \n*   [Keyring (UI)](#)\n    \n*   [Extension](#)\n    \n*   [Run, Bundle, Test](#)\n    \n\n*   [](/docs/)\n    \n*   Metadata\n*   Polkadot\n*   Storage\n\nOn this page\n\nStorage\n=======\n\nThe following sections contain Storage methods are part of the default Polkadot runtime. On the api, these are exposed via `api.query.<module>.<method>`.\n\n(NOTE: These were generated from a static/snapshot view of a recent default Polkadot runtime. Some items may not be available in older nodes, or in any customized implementations.)\n\n*   **[auctions](#auctions)\n    **\n    \n*   **[authorship](#authorship)\n    **\n    \n*   **[babe](#babe)\n    **\n    \n*   **[balances](#balances)\n    **\n    \n*   **[bounties](#bounties)\n    **\n    \n*   **[childBounties](#childbounties)\n    **\n    \n*   **[claims](#claims)\n    **\n    \n*   **[configuration](#configuration)\n    **\n    \n*   **[convictionVoting](#convictionvoting)\n    **\n    \n*   **[crowdloan](#crowdloan)\n    **\n    \n*   **[dmp](#dmp)\n    **\n    \n*   **[electionProviderMultiPhase](#electionprovidermultiphase)\n    **\n    \n*   **[fastUnstake](#fastunstake)\n    **\n    \n*   **[grandpa](#grandpa)\n    **\n    \n*   **[hrmp](#hrmp)\n    **\n    \n*   **[identity](#identity)\n    **\n    \n*   **[imOnline](#imonline)\n    **\n    \n*   **[indices](#indices)\n    **\n    \n*   **[initializer](#initializer)\n    **\n    \n*   **[messageQueue](#messagequeue)\n    **\n    \n*   **[multisig](#multisig)\n    **\n    \n*   **[nominationPools](#nominationpools)\n    **\n    \n*   **[offences](#offences)\n    **\n    \n*   **[paraInclusion](#parainclusion)\n    **\n    \n*   **[paraInherent](#parainherent)\n    **\n    \n*   **[paras](#paras)\n    **\n    \n*   **[paraScheduler](#parascheduler)\n    **\n    \n*   **[parasDisputes](#parasdisputes)\n    **\n    \n*   **[paraSessionInfo](#parasessioninfo)\n    **\n    \n*   **[parasShared](#parasshared)\n    **\n    \n*   **[parasSlashing](#parasslashing)\n    **\n    \n*   **[preimage](#preimage)\n    **\n    \n*   **[proxy](#proxy)\n    **\n    \n*   **[referenda](#referenda)\n    **\n    \n*   **[registrar](#registrar)\n    **\n    \n*   **[scheduler](#scheduler)\n    **\n    \n*   **[session](#session)\n    **\n    \n*   **[slots](#slots)\n    **\n    \n*   **[staking](#staking)\n    **\n    \n*   **[substrate](#substrate)\n    **\n    \n*   **[system](#system)\n    **\n    \n*   **[timestamp](#timestamp)\n    **\n    \n*   **[transactionPayment](#transactionpayment)\n    **\n    \n*   **[treasury](#treasury)\n    **\n    \n*   **[vesting](#vesting)\n    **\n    \n*   **[voterList](#voterlist)\n    **\n    \n*   **[whitelist](#whitelist)\n    **\n    \n*   **[xcmPallet](#xcmpallet)\n    **\n    \n\n* * *\n\nauctions[\u200b](#auctions \"Direct link to auctions\")\n\n-------------------------------------------------\n\n### auctionCounter(): `u32`[\u200b](#auctioncounter-u32 \"Direct link to auctioncounter-u32\")\n\n*   **interface**: `api.query.auctions.auctionCounter`\n*   **summary**: Number of auctions started so far.\n\n### auctionInfo(): `Option<(u32,u32)>`[\u200b](#auctioninfo-optionu32u32 \"Direct link to auctioninfo-optionu32u32\")\n\n*   **interface**: `api.query.auctions.auctionInfo`\n    \n*   **summary**: Information relating to the current auction, if there is one.\n    \n    The first item in the tuple is the lease period index that the first of the four contiguous lease periods on auction is for. The second is the block number when the auction will \"begin to end\", i.e. the first block of the Ending Period of the auction.\n    \n\n### reservedAmounts(`(AccountId32,u32)`): `Option<u128>`[\u200b](#reservedamountsaccountid32u32-optionu128 \"Direct link to reservedamountsaccountid32u32-optionu128\")\n\n*   **interface**: `api.query.auctions.reservedAmounts`\n*   **summary**: Amounts currently reserved in the accounts of the bidders currently winning (sub-)ranges.\n\n### winning(`u32`): `Option<[Option<(AccountId32,u32,u128)>;36]>`[\u200b](#winningu32-optionoptionaccountid32u32u12836 \"Direct link to winningu32-optionoptionaccountid32u32u12836\")\n\n*   **interface**: `api.query.auctions.winning`\n*   **summary**: The winning bids for each of the 10 ranges at each sample in the final Ending Period of the current auction. The map's key is the 0-based index into the Sample Size. The first sample of the ending period is 0; the last is `Sample Size - 1`.\n\n* * *\n\nauthorship[\u200b](#authorship \"Direct link to authorship\")\n\n-------------------------------------------------------\n\n### author(): `Option<AccountId32>`[\u200b](#author-optionaccountid32 \"Direct link to author-optionaccountid32\")\n\n*   **interface**: `api.query.authorship.author`\n*   **summary**: Author of current block.\n\n* * *\n\nbabe[\u200b](#babe \"Direct link to babe\")\n\n-------------------------------------\n\n### authorities(): `Vec<(SpConsensusBabeAppPublic,u64)>`[\u200b](#authorities-vecspconsensusbabeapppublicu64 \"Direct link to authorities-vecspconsensusbabeapppublicu64\")\n\n*   **interface**: `api.query.babe.authorities`\n*   **summary**: Current epoch authorities.\n\n### authorVrfRandomness(): `Option<[u8;32]>`[\u200b](#authorvrfrandomness-optionu832 \"Direct link to authorvrfrandomness-optionu832\")\n\n*   **interface**: `api.query.babe.authorVrfRandomness`\n    \n*   **summary**: This field should always be populated during block processing unless secondary plain slots are enabled (which don't contain a VRF output).\n    \n    It is set in `on_finalize`, before it will contain the value from the last block.\n    \n\n### currentSlot(): `u64`[\u200b](#currentslot-u64 \"Direct link to currentslot-u64\")\n\n*   **interface**: `api.query.babe.currentSlot`\n*   **summary**: Current slot number.\n\n### epochConfig(): `Option<SpConsensusBabeBabeEpochConfiguration>`[\u200b](#epochconfig-optionspconsensusbabebabeepochconfiguration \"Direct link to epochconfig-optionspconsensusbabebabeepochconfiguration\")\n\n*   **interface**: `api.query.babe.epochConfig`\n*   **summary**: The configuration for the current epoch. Should never be `None` as it is initialized in genesis.\n\n### epochIndex(): `u64`[\u200b](#epochindex-u64 \"Direct link to epochindex-u64\")\n\n*   **interface**: `api.query.babe.epochIndex`\n*   **summary**: Current epoch index.\n\n### epochStart(): `(u32,u32)`[\u200b](#epochstart-u32u32 \"Direct link to epochstart-u32u32\")\n\n*   **interface**: `api.query.babe.epochStart`\n*   **summary**: The block numbers when the last and current epoch have started, respectively `N-1` and `N`. NOTE: We track this is in order to annotate the block number when a given pool of entropy was fixed (i.e. it was known to chain observers). Since epochs are defined in slots, which may be skipped, the block numbers may not line up with the slot numbers.\n\n### genesisSlot(): `u64`[\u200b](#genesisslot-u64 \"Direct link to genesisslot-u64\")\n\n*   **interface**: `api.query.babe.genesisSlot`\n*   **summary**: The slot at which the first epoch actually started. This is 0 until the first block of the chain.\n\n### initialized(): `Option<Option<SpConsensusBabeDigestsPreDigest>>`[\u200b](#initialized-optionoptionspconsensusbabedigestspredigest \"Direct link to initialized-optionoptionspconsensusbabedigestspredigest\")\n\n*   **interface**: `api.query.babe.initialized`\n*   **summary**: Temporary value (cleared at block finalization) which is `Some` if per-block initialization has already been called for current block.\n\n### lateness(): `u32`[\u200b](#lateness-u32 \"Direct link to lateness-u32\")\n\n*   **interface**: `api.query.babe.lateness`\n    \n*   **summary**: How late the current block is compared to its parent.\n    \n    This entry is populated as part of block execution and is cleaned up on block finalization. Querying this storage entry outside of block execution context should always yield zero.\n    \n\n### nextAuthorities(): `Vec<(SpConsensusBabeAppPublic,u64)>`[\u200b](#nextauthorities-vecspconsensusbabeapppublicu64 \"Direct link to nextauthorities-vecspconsensusbabeapppublicu64\")\n\n*   **interface**: `api.query.babe.nextAuthorities`\n*   **summary**: Next epoch authorities.\n\n### nextEpochConfig(): `Option<SpConsensusBabeBabeEpochConfiguration>`[\u200b](#nextepochconfig-optionspconsensusbabebabeepochconfiguration \"Direct link to nextepochconfig-optionspconsensusbabebabeepochconfiguration\")\n\n*   **interface**: `api.query.babe.nextEpochConfig`\n*   **summary**: The configuration for the next epoch, `None` if the config will not change (you can fallback to `EpochConfig` instead in that case).\n\n### nextRandomness(): `[u8;32]`[\u200b](#nextrandomness-u832 \"Direct link to nextrandomness-u832\")\n\n*   **interface**: `api.query.babe.nextRandomness`\n*   **summary**: Next epoch randomness.\n\n### pendingEpochConfigChange(): `Option<SpConsensusBabeDigestsNextConfigDescriptor>`[\u200b](#pendingepochconfigchange-optionspconsensusbabedigestsnextconfigdescriptor \"Direct link to pendingepochconfigchange-optionspconsensusbabedigestsnextconfigdescriptor\")\n\n*   **interface**: `api.query.babe.pendingEpochConfigChange`\n*   **summary**: Pending epoch configuration change that will be applied when the next epoch is enacted.\n\n### randomness(): `[u8;32]`[\u200b](#randomness-u832 \"Direct link to randomness-u832\")\n\n*   **interface**: `api.query.babe.randomness`\n    \n*   **summary**: The epoch randomness for the _current_ epoch.\n    \n    #### Security[\u200b](#security \"Direct link to Security\")\n    \n    This MUST NOT be used for gambling, as it can be influenced by a malicious validator in the short term. It MAY be used in many cryptographic protocols, however, so long as one remembers that this (like everything else on-chain) it is public. For example, it can be used where a number is needed that cannot have been chosen by an adversary, for purposes such as public-coin zero-knowledge proofs.\n    \n\n### segmentIndex(): `u32`[\u200b](#segmentindex-u32 \"Direct link to segmentindex-u32\")\n\n*   **interface**: `api.query.babe.segmentIndex`\n    \n*   **summary**: Randomness under construction.\n    \n    We make a trade-off between storage accesses and list length. We store the under-construction randomness in segments of up to `UNDER_CONSTRUCTION_SEGMENT_LENGTH`.\n    \n    Once a segment reaches this length, we begin the next one. We reset all segments and return to `0` at the beginning of every epoch.\n    \n\n### skippedEpochs(): `Vec<(u64,u32)>`[\u200b](#skippedepochs-vecu64u32 \"Direct link to skippedepochs-vecu64u32\")\n\n*   **interface**: `api.query.babe.skippedEpochs`\n    \n*   **summary**: A list of the last 100 skipped epochs and the corresponding session index when the epoch was skipped.\n    \n    This is only used for validating equivocation proofs. An equivocation proof must contains a key-ownership proof for a given session, therefore we need a way to tie together sessions and epoch indices, i.e. we need to validate that a validator was the owner of a given key on a given session, and what the active epoch index was during that session.\n    \n\n### underConstruction(`u32`): `Vec<[u8;32]>`[\u200b](#underconstructionu32-vecu832 \"Direct link to underconstructionu32-vecu832\")\n\n*   **interface**: `api.query.babe.underConstruction`\n*   **summary**: TWOX-NOTE: `SegmentIndex` is an increasing integer, so this is okay.\n\n* * *\n\nbalances[\u200b](#balances \"Direct link to balances\")\n\n-------------------------------------------------\n\n### account(`AccountId32`): `PalletBalancesAccountData`[\u200b](#accountaccountid32-palletbalancesaccountdata \"Direct link to accountaccountid32-palletbalancesaccountdata\")\n\n*   **interface**: `api.query.balances.account`\n    \n*   **summary**: The Balances pallet example of storing the balance of an account.\n    \n    #### Example[\u200b](#example \"Direct link to Example\")\n    \n    `nocompile impl pallet_balances::Config for Runtime { type AccountStore = StorageMapShim<Self::Account<Runtime>, frame_system::Provider<Runtime>, AccountId, Self::AccountData<Balance>> }`\n    \n    You can also store the balance of an account in the `System` pallet.\n    \n    #### Example[\u200b](#example-1 \"Direct link to Example\")\n    \n    `nocompile impl pallet_balances::Config for Runtime { type AccountStore = System }`\n    \n    But this comes with tradeoffs, storing account balances in the system pallet stores `frame_system` data alongside the account data contrary to storing account balances in the `Balances` pallet, which uses a `StorageMap` to store balances data only. NOTE: This is only used in the case that this pallet is used to store balances.\n    \n\n### freezes(`AccountId32`): `Vec<PalletBalancesIdAmount>`[\u200b](#freezesaccountid32-vecpalletbalancesidamount \"Direct link to freezesaccountid32-vecpalletbalancesidamount\")\n\n*   **interface**: `api.query.balances.freezes`\n*   **summary**: Freeze locks on account balances.\n\n### holds(`AccountId32`): `Vec<{\"id\":\"PolkadotRuntimeRuntimeHoldReason\",\"amount\":\"u128\"}>`[\u200b](#holdsaccountid32-vecidpolkadotruntimeruntimeholdreasonamountu128 \"Direct link to holdsaccountid32-vecidpolkadotruntimeruntimeholdreasonamountu128\")\n\n*   **interface**: `api.query.balances.holds`\n*   **summary**: Holds on account balances.\n\n### inactiveIssuance(): `u128`[\u200b](#inactiveissuance-u128 \"Direct link to inactiveissuance-u128\")\n\n*   **interface**: `api.query.balances.inactiveIssuance`\n*   **summary**: The total units of outstanding deactivated balance in the system.\n\n### locks(`AccountId32`): `Vec<PalletBalancesBalanceLock>`[\u200b](#locksaccountid32-vecpalletbalancesbalancelock \"Direct link to locksaccountid32-vecpalletbalancesbalancelock\")\n\n*   **interface**: `api.query.balances.locks`\n*   **summary**: Any liquidity locks on some account balances. NOTE: Should only be accessed when setting, changing and freeing a lock.\n\n### reserves(`AccountId32`): `Vec<PalletBalancesReserveData>`[\u200b](#reservesaccountid32-vecpalletbalancesreservedata \"Direct link to reservesaccountid32-vecpalletbalancesreservedata\")\n\n*   **interface**: `api.query.balances.reserves`\n*   **summary**: Named reserves on some account balances.\n\n### totalIssuance(): `u128`[\u200b](#totalissuance-u128 \"Direct link to totalissuance-u128\")\n\n*   **interface**: `api.query.balances.totalIssuance`\n*   **summary**: The total units issued in the system.\n\n* * *\n\nbounties[\u200b](#bounties \"Direct link to bounties\")\n\n-------------------------------------------------\n\n### bounties(`u32`): `Option<PalletBountiesBounty>`[\u200b](#bountiesu32-optionpalletbountiesbounty \"Direct link to bountiesu32-optionpalletbountiesbounty\")\n\n*   **interface**: `api.query.bounties.bounties`\n*   **summary**: Bounties that have been made.\n\n### bountyApprovals(): `Vec<u32>`[\u200b](#bountyapprovals-vecu32 \"Direct link to bountyapprovals-vecu32\")\n\n*   **interface**: `api.query.bounties.bountyApprovals`\n*   **summary**: Bounty indices that have been approved but not yet funded.\n\n### bountyCount(): `u32`[\u200b](#bountycount-u32 \"Direct link to bountycount-u32\")\n\n*   **interface**: `api.query.bounties.bountyCount`\n*   **summary**: Number of bounty proposals that have been made.\n\n### bountyDescriptions(`u32`): `Option<Bytes>`[\u200b](#bountydescriptionsu32-optionbytes \"Direct link to bountydescriptionsu32-optionbytes\")\n\n*   **interface**: `api.query.bounties.bountyDescriptions`\n*   **summary**: The description of each bounty.\n\n* * *\n\nchildBounties[\u200b](#childbounties \"Direct link to childBounties\")\n\n----------------------------------------------------------------\n\n### childBounties(`u32, u32`): `Option<PalletChildBountiesChildBounty>`[\u200b](#childbountiesu32-u32-optionpalletchildbountieschildbounty \"Direct link to childbountiesu32-u32-optionpalletchildbountieschildbounty\")\n\n*   **interface**: `api.query.childBounties.childBounties`\n*   **summary**: Child bounties that have been added.\n\n### childBountyCount(): `u32`[\u200b](#childbountycount-u32 \"Direct link to childbountycount-u32\")\n\n*   **interface**: `api.query.childBounties.childBountyCount`\n*   **summary**: Number of total child bounties.\n\n### childBountyDescriptions(`u32`): `Option<Bytes>`[\u200b](#childbountydescriptionsu32-optionbytes \"Direct link to childbountydescriptionsu32-optionbytes\")\n\n*   **interface**: `api.query.childBounties.childBountyDescriptions`\n*   **summary**: The description of each child-bounty.\n\n### childrenCuratorFees(`u32`): `u128`[\u200b](#childrencuratorfeesu32-u128 \"Direct link to childrencuratorfeesu32-u128\")\n\n*   **interface**: `api.query.childBounties.childrenCuratorFees`\n*   **summary**: The cumulative child-bounty curator fee for each parent bounty.\n\n### parentChildBounties(`u32`): `u32`[\u200b](#parentchildbountiesu32-u32 \"Direct link to parentchildbountiesu32-u32\")\n\n*   **interface**: `api.query.childBounties.parentChildBounties`\n*   **summary**: Number of child bounties per parent bounty. Map of parent bounty index to number of child bounties.\n\n* * *\n\nclaims[\u200b](#claims \"Direct link to claims\")\n\n-------------------------------------------\n\n### claims(`EthereumAddress`): `Option<u128>`[\u200b](#claimsethereumaddress-optionu128 \"Direct link to claimsethereumaddress-optionu128\")\n\n*   **interface**: `api.query.claims.claims`\n\n### preclaims(`AccountId32`): `Option<EthereumAddress>`[\u200b](#preclaimsaccountid32-optionethereumaddress \"Direct link to preclaimsaccountid32-optionethereumaddress\")\n\n*   **interface**: `api.query.claims.preclaims`\n*   **summary**: Pre-claimed Ethereum accounts, by the Account ID that they are claimed to.\n\n### signing(`EthereumAddress`): `Option<PolkadotRuntimeCommonClaimsStatementKind>`[\u200b](#signingethereumaddress-optionpolkadotruntimecommonclaimsstatementkind \"Direct link to signingethereumaddress-optionpolkadotruntimecommonclaimsstatementkind\")\n\n*   **interface**: `api.query.claims.signing`\n*   **summary**: The statement kind that must be signed, if any.\n\n### total(): `u128`[\u200b](#total-u128 \"Direct link to total-u128\")\n\n*   **interface**: `api.query.claims.total`\n\n### vesting(`EthereumAddress`): `Option<(u128,u128,u32)>`[\u200b](#vestingethereumaddress-optionu128u128u32 \"Direct link to vestingethereumaddress-optionu128u128u32\")\n\n*   **interface**: `api.query.claims.vesting`\n*   **summary**: Vesting schedule for a claim. First balance is the total amount that should be held for vesting. Second balance is how much should be unlocked per block. The block number is when the vesting should start.\n\n* * *\n\nconfiguration[\u200b](#configuration \"Direct link to configuration\")\n\n----------------------------------------------------------------\n\n### activeConfig(): `PolkadotRuntimeParachainsConfigurationHostConfiguration`[\u200b](#activeconfig-polkadotruntimeparachainsconfigurationhostconfiguration \"Direct link to activeconfig-polkadotruntimeparachainsconfigurationhostconfiguration\")\n\n*   **interface**: `api.query.configuration.activeConfig`\n*   **summary**: The active configuration for the current session.\n\n### bypassConsistencyCheck(): `bool`[\u200b](#bypassconsistencycheck-bool \"Direct link to bypassconsistencycheck-bool\")\n\n*   **interface**: `api.query.configuration.bypassConsistencyCheck`\n*   **summary**: If this is set, then the configuration setters will bypass the consistency checks. This is meant to be used only as the last resort.\n\n### pendingConfigs(): `Vec<(u32,PolkadotRuntimeParachainsConfigurationHostConfiguration)>`[\u200b](#pendingconfigs-vecu32polkadotruntimeparachainsconfigurationhostconfiguration \"Direct link to pendingconfigs-vecu32polkadotruntimeparachainsconfigurationhostconfiguration\")\n\n*   **interface**: `api.query.configuration.pendingConfigs`\n    \n*   **summary**: Pending configuration changes.\n    \n    This is a list of configuration changes, each with a session index at which it should be applied.\n    \n    The list is sorted ascending by session index. Also, this list can only contain at most 2 items: for the next session and for the `scheduled_session`.\n    \n\n* * *\n\nconvictionVoting[\u200b](#convictionvoting \"Direct link to convictionVoting\")\n\n-------------------------------------------------------------------------\n\n### classLocksFor(`AccountId32`): `Vec<(u16,u128)>`[\u200b](#classlocksforaccountid32-vecu16u128 \"Direct link to classlocksforaccountid32-vecu16u128\")\n\n*   **interface**: `api.query.convictionVoting.classLocksFor`\n*   **summary**: The voting classes which have a non-zero lock requirement and the lock amounts which they require. The actual amount locked on behalf of this pallet should always be the maximum of this list.\n\n### votingFor(`AccountId32, u16`): `PalletConvictionVotingVoteVoting`[\u200b](#votingforaccountid32-u16-palletconvictionvotingvotevoting \"Direct link to votingforaccountid32-u16-palletconvictionvotingvotevoting\")\n\n*   **interface**: `api.query.convictionVoting.votingFor`\n*   **summary**: All voting for a particular voter in a particular voting class. We store the balance for the number of votes that we have recorded.\n\n* * *\n\ncrowdloan[\u200b](#crowdloan \"Direct link to crowdloan\")\n\n----------------------------------------------------\n\n### endingsCount(): `u32`[\u200b](#endingscount-u32 \"Direct link to endingscount-u32\")\n\n*   **interface**: `api.query.crowdloan.endingsCount`\n*   **summary**: The number of auctions that have entered into their ending period so far.\n\n### funds(`u32`): `Option<PolkadotRuntimeCommonCrowdloanFundInfo>`[\u200b](#fundsu32-optionpolkadotruntimecommoncrowdloanfundinfo \"Direct link to fundsu32-optionpolkadotruntimecommoncrowdloanfundinfo\")\n\n*   **interface**: `api.query.crowdloan.funds`\n*   **summary**: Info on all of the funds.\n\n### newRaise(): `Vec<u32>`[\u200b](#newraise-vecu32 \"Direct link to newraise-vecu32\")\n\n*   **interface**: `api.query.crowdloan.newRaise`\n*   **summary**: The funds that have had additional contributions during the last block. This is used in order to determine which funds should submit new or updated bids.\n\n### nextFundIndex(): `u32`[\u200b](#nextfundindex-u32 \"Direct link to nextfundindex-u32\")\n\n*   **interface**: `api.query.crowdloan.nextFundIndex`\n*   **summary**: Tracker for the next available fund index\n\n* * *\n\ndmp[\u200b](#dmp \"Direct link to dmp\")\n\n----------------------------------\n\n### deliveryFeeFactor(`u32`): `u128`[\u200b](#deliveryfeefactoru32-u128 \"Direct link to deliveryfeefactoru32-u128\")\n\n*   **interface**: `api.query.dmp.deliveryFeeFactor`\n*   **summary**: The number to multiply the base delivery fee by.\n\n### downwardMessageQueueHeads(`u32`): `H256`[\u200b](#downwardmessagequeueheadsu32-h256 \"Direct link to downwardmessagequeueheadsu32-h256\")\n\n*   **interface**: `api.query.dmp.downwardMessageQueueHeads`\n    \n*   **summary**: A mapping that stores the downward message queue MQC head for each para.\n    \n    Each link in this chain has a form: `(prev_head, B, H(M))`, where\n    \n    *   `prev_head`: is the previous head hash or zero if none.\n        \n    *   `B`: is the relay-chain block number in which a message was appended.\n        \n    *   `H(M)`: is the hash of the message being appended.\n        \n\n### downwardMessageQueues(`u32`): `Vec<PolkadotCorePrimitivesInboundDownwardMessage>`[\u200b](#downwardmessagequeuesu32-vecpolkadotcoreprimitivesinbounddownwardmessage \"Direct link to downwardmessagequeuesu32-vecpolkadotcoreprimitivesinbounddownwardmessage\")\n\n*   **interface**: `api.query.dmp.downwardMessageQueues`\n*   **summary**: The downward messages addressed for a certain para.\n\n* * *\n\nelectionProviderMultiPhase[\u200b](#electionprovidermultiphase \"Direct link to electionProviderMultiPhase\")\n\n-------------------------------------------------------------------------------------------------------\n\n### currentPhase(): `PalletElectionProviderMultiPhasePhase`[\u200b](#currentphase-palletelectionprovidermultiphasephase \"Direct link to currentphase-palletelectionprovidermultiphasephase\")\n\n*   **interface**: `api.query.electionProviderMultiPhase.currentPhase`\n*   **summary**: Current phase.\n\n### desiredTargets(): `Option<u32>`[\u200b](#desiredtargets-optionu32 \"Direct link to desiredtargets-optionu32\")\n\n*   **interface**: `api.query.electionProviderMultiPhase.desiredTargets`\n    \n*   **summary**: Desired number of targets to elect for this round.\n    \n    Only exists when \\[`Snapshot`\\] is present.\n    \n\n### minimumUntrustedScore(): `Option<SpNposElectionsElectionScore>`[\u200b](#minimumuntrustedscore-optionspnposelectionselectionscore \"Direct link to minimumuntrustedscore-optionspnposelectionselectionscore\")\n\n*   **interface**: `api.query.electionProviderMultiPhase.minimumUntrustedScore`\n    \n*   **summary**: The minimum score that each 'untrusted' solution must attain in order to be considered feasible.\n    \n    Can be set via `set_minimum_untrusted_score`.\n    \n\n### queuedSolution(): `Option<PalletElectionProviderMultiPhaseReadySolution>`[\u200b](#queuedsolution-optionpalletelectionprovidermultiphasereadysolution \"Direct link to queuedsolution-optionpalletelectionprovidermultiphasereadysolution\")\n\n*   **interface**: `api.query.electionProviderMultiPhase.queuedSolution`\n    \n*   **summary**: Current best solution, signed or unsigned, queued to be returned upon `elect`.\n    \n    Always sorted by score.\n    \n\n### round(): `u32`[\u200b](#round-u32 \"Direct link to round-u32\")\n\n*   **interface**: `api.query.electionProviderMultiPhase.round`\n    \n*   **summary**: Internal counter for the number of rounds.\n    \n    This is useful for de-duplication of transactions submitted to the pool, and general diagnostics of the pallet.\n    \n    This is merely incremented once per every time that an upstream `elect` is called.\n    \n\n### signedSubmissionIndices(): `Vec<(SpNposElectionsElectionScore,u32,u32)>`[\u200b](#signedsubmissionindices-vecspnposelectionselectionscoreu32u32 \"Direct link to signedsubmissionindices-vecspnposelectionselectionscoreu32u32\")\n\n*   **interface**: `api.query.electionProviderMultiPhase.signedSubmissionIndices`\n    \n*   **summary**: A sorted, bounded vector of `(score, block_number, index)`, where each `index` points to a value in `SignedSubmissions`.\n    \n    We never need to process more than a single signed submission at a time. Signed submissions can be quite large, so we're willing to pay the cost of multiple database accesses to access them one at a time instead of reading and decoding all of them at once.\n    \n\n### signedSubmissionNextIndex(): `u32`[\u200b](#signedsubmissionnextindex-u32 \"Direct link to signedsubmissionnextindex-u32\")\n\n*   **interface**: `api.query.electionProviderMultiPhase.signedSubmissionNextIndex`\n    \n*   **summary**: The next index to be assigned to an incoming signed submission.\n    \n    Every accepted submission is assigned a unique index; that index is bound to that particular submission for the duration of the election. On election finalization, the next index is reset to 0.\n    \n    We can't just use `SignedSubmissionIndices.len()`, because that's a bounded set; past its capacity, it will simply saturate. We can't just iterate over `SignedSubmissionsMap`, because iteration is slow. Instead, we store the value here.\n    \n\n### signedSubmissionsMap(`u32`): `Option<PalletElectionProviderMultiPhaseSignedSignedSubmission>`[\u200b](#signedsubmissionsmapu32-optionpalletelectionprovidermultiphasesignedsignedsubmission \"Direct link to signedsubmissionsmapu32-optionpalletelectionprovidermultiphasesignedsignedsubmission\")\n\n*   **interface**: `api.query.electionProviderMultiPhase.signedSubmissionsMap`\n    \n*   **summary**: Unchecked, signed solutions.\n    \n    Together with `SubmissionIndices`, this stores a bounded set of `SignedSubmissions` while allowing us to keep only a single one in memory at a time.\n    \n    Twox note: the key of the map is an auto-incrementing index which users cannot inspect or affect; we shouldn't need a cryptographically secure hasher.\n    \n\n### snapshot(): `Option<PalletElectionProviderMultiPhaseRoundSnapshot>`[\u200b](#snapshot-optionpalletelectionprovidermultiphaseroundsnapshot \"Direct link to snapshot-optionpalletelectionprovidermultiphaseroundsnapshot\")\n\n*   **interface**: `api.query.electionProviderMultiPhase.snapshot`\n    \n*   **summary**: Snapshot data of the round.\n    \n    This is created at the beginning of the signed phase and cleared upon calling `elect`.\n    \n\n### snapshotMetadata(): `Option<PalletElectionProviderMultiPhaseSolutionOrSnapshotSize>`[\u200b](#snapshotmetadata-optionpalletelectionprovidermultiphasesolutionorsnapshotsize \"Direct link to snapshotmetadata-optionpalletelectionprovidermultiphasesolutionorsnapshotsize\")\n\n*   **interface**: `api.query.electionProviderMultiPhase.snapshotMetadata`\n    \n*   **summary**: The metadata of the \\[`RoundSnapshot`\\]\n    \n    Only exists when \\[`Snapshot`\\] is present.\n    \n\n* * *\n\nfastUnstake[\u200b](#fastunstake \"Direct link to fastUnstake\")\n\n----------------------------------------------------------\n\n### counterForQueue(): `u32`[\u200b](#counterforqueue-u32 \"Direct link to counterforqueue-u32\")\n\n*   **interface**: `api.query.fastUnstake.counterForQueue`\n*   **summary**: Counter for the related counted storage map\n\n### erasToCheckPerBlock(): `u32`[\u200b](#erastocheckperblock-u32 \"Direct link to erastocheckperblock-u32\")\n\n*   **interface**: `api.query.fastUnstake.erasToCheckPerBlock`\n    \n*   **summary**: Number of eras to check per block.\n    \n    If set to 0, this pallet does absolutely nothing. Cannot be set to more than \\[`Config::MaxErasToCheckPerBlock`\\].\n    \n    Based on the amount of weight available at \\[`Pallet::on_idle`\\], up to this many eras are checked. The checking is represented by updating \\[`UnstakeRequest::checked`\\], which is stored in \\[`Head`\\].\n    \n\n### head(): `Option<PalletFastUnstakeUnstakeRequest>`[\u200b](#head-optionpalletfastunstakeunstakerequest \"Direct link to head-optionpalletfastunstakeunstakerequest\")\n\n*   **interface**: `api.query.fastUnstake.head`\n    \n*   **summary**: The current \"head of the queue\" being unstaked.\n    \n    The head in itself can be a batch of up to \\[`Config::BatchSize`\\] stakers.\n    \n\n### queue(`AccountId32`): `Option<u128>`[\u200b](#queueaccountid32-optionu128 \"Direct link to queueaccountid32-optionu128\")\n\n*   **interface**: `api.query.fastUnstake.queue`\n    \n*   **summary**: The map of all accounts wishing to be unstaked.\n    \n    Keeps track of `AccountId` wishing to unstake and it's corresponding deposit.\n    \n\n* * *\n\ngrandpa[\u200b](#grandpa \"Direct link to grandpa\")\n\n----------------------------------------------\n\n### currentSetId(): `u64`[\u200b](#currentsetid-u64 \"Direct link to currentsetid-u64\")\n\n*   **interface**: `api.query.grandpa.currentSetId`\n*   **summary**: The number of changes (both in terms of keys and underlying economic responsibilities) in the \"set\" of Grandpa validators from genesis.\n\n### nextForced(): `Option<u32>`[\u200b](#nextforced-optionu32 \"Direct link to nextforced-optionu32\")\n\n*   **interface**: `api.query.grandpa.nextForced`\n*   **summary**: next block number where we can force a change.\n\n### pendingChange(): `Option<PalletGrandpaStoredPendingChange>`[\u200b](#pendingchange-optionpalletgrandpastoredpendingchange \"Direct link to pendingchange-optionpalletgrandpastoredpendingchange\")\n\n*   **interface**: `api.query.grandpa.pendingChange`\n*   **summary**: Pending change: (signaled at, scheduled change).\n\n### setIdSession(`u64`): `Option<u32>`[\u200b](#setidsessionu64-optionu32 \"Direct link to setidsessionu64-optionu32\")\n\n*   **interface**: `api.query.grandpa.setIdSession`\n    \n*   **summary**: A mapping from grandpa set ID to the index of the _most recent_ session for which its members were responsible.\n    \n    This is only used for validating equivocation proofs. An equivocation proof must contains a key-ownership proof for a given session, therefore we need a way to tie together sessions and GRANDPA set ids, i.e. we need to validate that a validator was the owner of a given key on a given session, and what the active set ID was during that session.\n    \n    TWOX-NOTE: `SetId` is not under user control.\n    \n\n### stalled(): `Option<(u32,u32)>`[\u200b](#stalled-optionu32u32 \"Direct link to stalled-optionu32u32\")\n\n*   **interface**: `api.query.grandpa.stalled`\n*   **summary**: `true` if we are currently stalled.\n\n### state(): `PalletGrandpaStoredState`[\u200b](#state-palletgrandpastoredstate \"Direct link to state-palletgrandpastoredstate\")\n\n*   **interface**: `api.query.grandpa.state`\n*   **summary**: State of the current authority set.\n\n* * *\n\nhrmp[\u200b](#hrmp \"Direct link to hrmp\")\n\n-------------------------------------\n\n### hrmpAcceptedChannelRequestCount(`u32`): `u32`[\u200b](#hrmpacceptedchannelrequestcountu32-u32 \"Direct link to hrmpacceptedchannelrequestcountu32-u32\")\n\n*   **interface**: `api.query.hrmp.hrmpAcceptedChannelRequestCount`\n*   **summary**: This mapping tracks how many open channel requests were accepted by a given recipient para. Invariant: `HrmpOpenChannelRequests` should contain the same number of items `(_, X)` with `confirmed` set to true, as the number of `HrmpAcceptedChannelRequestCount` for `X`.\n\n### hrmpChannelContents(`PolkadotParachainPrimitivesHrmpChannelId`): `Vec<PolkadotCorePrimitivesInboundHrmpMessage>`[\u200b](#hrmpchannelcontentspolkadotparachainprimitiveshrmpchannelid-vecpolkadotcoreprimitivesinboundhrmpmessage \"Direct link to hrmpchannelcontentspolkadotparachainprimitiveshrmpchannelid-vecpolkadotcoreprimitivesinboundhrmpmessage\")\n\n*   **interface**: `api.query.hrmp.hrmpChannelContents`\n*   **summary**: Storage for the messages for each channel. Invariant: cannot be non-empty if the corresponding channel in `HrmpChannels` is `None`.\n\n### hrmpChannelDigests(`u32`): `Vec<(u32,Vec<u32>)>`[\u200b](#hrmpchanneldigestsu32-vecu32vecu32 \"Direct link to hrmpchanneldigestsu32-vecu32vecu32\")\n\n*   **interface**: `api.query.hrmp.hrmpChannelDigests`\n    \n*   **summary**: Maintains a mapping that can be used to answer the question: What paras sent a message at the given block number for a given receiver. Invariants:\n    \n    *   The inner `Vec<ParaId>` is never empty.\n        \n    *   The inner `Vec<ParaId>` cannot store two same `ParaId`.\n        \n    *   The outer vector is sorted ascending by block number and cannot store two items with the same block number.\n        \n\n### hrmpChannels(`PolkadotParachainPrimitivesHrmpChannelId`): `Option<PolkadotRuntimeParachainsHrmpHrmpChannel>`[\u200b](#hrmpchannelspolkadotparachainprimitiveshrmpchannelid-optionpolkadotruntimeparachainshrmphrmpchannel \"Direct link to hrmpchannelspolkadotparachainprimitiveshrmpchannelid-optionpolkadotruntimeparachainshrmphrmpchannel\")\n\n*   **interface**: `api.query.hrmp.hrmpChannels`\n    \n*   **summary**: HRMP channel data associated with each para. Invariant:\n    \n    *   each participant in the channel should satisfy `Paras::is_valid_para(P)` within a session.\n\n### hrmpCloseChannelRequests(`PolkadotParachainPrimitivesHrmpChannelId`): `Option<Null>`[\u200b](#hrmpclosechannelrequestspolkadotparachainprimitiveshrmpchannelid-optionnull \"Direct link to hrmpclosechannelrequestspolkadotparachainprimitiveshrmpchannelid-optionnull\")\n\n*   **interface**: `api.query.hrmp.hrmpCloseChannelRequests`\n    \n*   **summary**: A set of pending HRMP close channel requests that are going to be closed during the session change. Used for checking if a given channel is registered for closure.\n    \n    The set is accompanied by a list for iteration.\n    \n    Invariant:\n    \n    *   There are no channels that exists in list but not in the set and vice versa.\n\n### hrmpCloseChannelRequestsList(): `Vec<PolkadotParachainPrimitivesHrmpChannelId>`[\u200b](#hrmpclosechannelrequestslist-vecpolkadotparachainprimitiveshrmpchannelid \"Direct link to hrmpclosechannelrequestslist-vecpolkadotparachainprimitiveshrmpchannelid\")\n\n*   **interface**: `api.query.hrmp.hrmpCloseChannelRequestsList`\n\n### hrmpEgressChannelsIndex(`u32`): `Vec<u32>`[\u200b](#hrmpegresschannelsindexu32-vecu32 \"Direct link to hrmpegresschannelsindexu32-vecu32\")\n\n*   **interface**: `api.query.hrmp.hrmpEgressChannelsIndex`\n\n### hrmpIngressChannelsIndex(`u32`): `Vec<u32>`[\u200b](#hrmpingresschannelsindexu32-vecu32 \"Direct link to hrmpingresschannelsindexu32-vecu32\")\n\n*   **interface**: `api.query.hrmp.hrmpIngressChannelsIndex`\n    \n*   **summary**: Ingress/egress indexes allow to find all the senders and receivers given the opposite side. I.e.\n    \n    (a) ingress index allows to find all the senders for a given recipient. (b) egress index allows to find all the recipients for a given sender.\n    \n    Invariants:\n    \n    *   for each ingress index entry for `P` each item `I` in the index should present in `HrmpChannels` as `(I, P)`.\n        \n    *   for each egress index entry for `P` each item `E` in the index should present in `HrmpChannels` as `(P, E)`.\n        \n    *   there should be no other dangling channels in `HrmpChannels`.\n        \n    *   the vectors are sorted.\n        \n\n### hrmpOpenChannelRequestCount(`u32`): `u32`[\u200b](#hrmpopenchannelrequestcountu32-u32 \"Direct link to hrmpopenchannelrequestcountu32-u32\")\n\n*   **interface**: `api.query.hrmp.hrmpOpenChannelRequestCount`\n*   **summary**: This mapping tracks how many open channel requests are initiated by a given sender para. Invariant: `HrmpOpenChannelRequests` should contain the same number of items that has `(X, _)` as the number of `HrmpOpenChannelRequestCount` for `X`.\n\n### hrmpOpenChannelRequests(`PolkadotParachainPrimitivesHrmpChannelId`): `Option<PolkadotRuntimeParachainsHrmpHrmpOpenChannelRequest>`[\u200b](#hrmpopenchannelrequestspolkadotparachainprimitiveshrmpchannelid-optionpolkadotruntimeparachainshrmphrmpopenchannelrequest \"Direct link to hrmpopenchannelrequestspolkadotparachainprimitiveshrmpchannelid-optionpolkadotruntimeparachainshrmphrmpopenchannelrequest\")\n\n*   **interface**: `api.query.hrmp.hrmpOpenChannelRequests`\n    \n*   **summary**: The set of pending HRMP open channel requests.\n    \n    The set is accompanied by a list for iteration.\n    \n    Invariant:\n    \n    *   There are no channels that exists in list but not in the set and vice versa.\n\n### hrmpOpenChannelRequestsList(): `Vec<PolkadotParachainPrimitivesHrmpChannelId>`[\u200b](#hrmpopenchannelrequestslist-vecpolkadotparachainprimitiveshrmpchannelid \"Direct link to hrmpopenchannelrequestslist-vecpolkadotparachainprimitiveshrmpchannelid\")\n\n*   **interface**: `api.query.hrmp.hrmpOpenChannelRequestsList`\n\n### hrmpWatermarks(`u32`): `Option<u32>`[\u200b](#hrmpwatermarksu32-optionu32 \"Direct link to hrmpwatermarksu32-optionu32\")\n\n*   **interface**: `api.query.hrmp.hrmpWatermarks`\n    \n*   **summary**: The HRMP watermark associated with each para. Invariant:\n    \n    *   each para `P` used here as a key should satisfy `Paras::is_valid_para(P)` within a session.\n\n* * *\n\nidentity[\u200b](#identity \"Direct link to identity\")\n\n-------------------------------------------------\n\n### identityOf(`AccountId32`): `Option<PalletIdentityRegistration>`[\u200b](#identityofaccountid32-optionpalletidentityregistration \"Direct link to identityofaccountid32-optionpalletidentityregistration\")\n\n*   **interface**: `api.query.identity.identityOf`\n    \n*   **summary**: Information that is pertinent to identify the entity behind an account.\n    \n    TWOX-NOTE: OK \u2015 `AccountId` is a secure hash.\n    \n\n### registrars(): `Vec<Option<PalletIdentityRegistrarInfo>>`[\u200b](#registrars-vecoptionpalletidentityregistrarinfo \"Direct link to registrars-vecoptionpalletidentityregistrarinfo\")\n\n*   **interface**: `api.query.identity.registrars`\n    \n*   **summary**: The set of registrars. Not expected to get very big as can only be added through a special origin (likely a council motion).\n    \n    The index into this can be cast to `RegistrarIndex` to get a valid value.\n    \n\n### subsOf(`AccountId32`): `(u128,Vec<AccountId32>)`[\u200b](#subsofaccountid32-u128vecaccountid32 \"Direct link to subsofaccountid32-u128vecaccountid32\")\n\n*   **interface**: `api.query.identity.subsOf`\n    \n*   **summary**: Alternative \"sub\" identities of this account.\n    \n    The first item is the deposit, the second is a vector of the accounts.\n    \n    TWOX-NOTE: OK \u2015 `AccountId` is a secure hash.\n    \n\n### superOf(`AccountId32`): `Option<(AccountId32,Data)>`[\u200b](#superofaccountid32-optionaccountid32data \"Direct link to superofaccountid32-optionaccountid32data\")\n\n*   **interface**: `api.query.identity.superOf`\n*   **summary**: The super-identity of an alternative \"sub\" identity together with its name, within that context. If the account is not some other account's sub-identity, then just `None`.\n\n* * *\n\nimOnline[\u200b](#imonline \"Direct link to imOnline\")\n\n-------------------------------------------------\n\n### authoredBlocks(`u32, AccountId32`): `u32`[\u200b](#authoredblocksu32-accountid32-u32 \"Direct link to authoredblocksu32-accountid32-u32\")\n\n*   **interface**: `api.query.imOnline.authoredBlocks`\n*   **summary**: For each session index, we keep a mapping of `ValidatorId<T>` to the number of blocks authored by the given authority.\n\n### heartbeatAfter(): `u32`[\u200b](#heartbeatafter-u32 \"Direct link to heartbeatafter-u32\")\n\n*   **interface**: `api.query.imOnline.heartbeatAfter`\n    \n*   **summary**: The block number after which it's ok to send heartbeats in the current session.\n    \n    At the beginning of each session we set this to a value that should fall roughly in the middle of the session duration. The idea is to first wait for the validators to produce a block in the current session, so that the heartbeat later on will not be necessary.\n    \n    This value will only be used as a fallback if we fail to get a proper session progress estimate from `NextSessionRotation`, as those estimates should be more accurate then the value we calculate for `HeartbeatAfter`.\n    \n\n### keys(): `Vec<PalletImOnlineSr25519AppSr25519Public>`[\u200b](#keys-vecpalletimonlinesr25519appsr25519public \"Direct link to keys-vecpalletimonlinesr25519appsr25519public\")\n\n*   **interface**: `api.query.imOnline.keys`\n*   **summary**: The current set of keys that may issue a heartbeat.\n\n### receivedHeartbeats(`u32, u32`): `Option<bool>`[\u200b](#receivedheartbeatsu32-u32-optionbool \"Direct link to receivedheartbeatsu32-u32-optionbool\")\n\n*   **interface**: `api.query.imOnline.receivedHeartbeats`\n*   **summary**: For each session index, we keep a mapping of `SessionIndex` and `AuthIndex`.\n\n* * *\n\nindices[\u200b](#indices \"Direct link to indices\")\n\n----------------------------------------------\n\n### accounts(`u32`): `Option<(AccountId32,u128,bool)>`[\u200b](#accountsu32-optionaccountid32u128bool \"Direct link to accountsu32-optionaccountid32u128bool\")\n\n*   **interface**: `api.query.indices.accounts`\n*   **summary**: The lookup from index to account.\n\n* * *\n\ninitializer[\u200b](#initializer \"Direct link to initializer\")\n\n----------------------------------------------------------\n\n### bufferedSessionChanges(): `Vec<PolkadotRuntimeParachainsInitializerBufferedSessionChange>`[\u200b](#bufferedsessionchanges-vecpolkadotruntimeparachainsinitializerbufferedsessionchange \"Direct link to bufferedsessionchanges-vecpolkadotruntimeparachainsinitializerbufferedsessionchange\")\n\n*   **interface**: `api.query.initializer.bufferedSessionChanges`\n    \n*   **summary**: Buffered session changes along with the block number at which they should be applied.\n    \n    Typically this will be empty or one element long. Apart from that this item never hits the storage.\n    \n    However this is a `Vec` regardless to handle various edge cases that may occur at runtime upgrade boundaries or if governance intervenes.\n    \n\n### hasInitialized(): `Option<Null>`[\u200b](#hasinitialized-optionnull \"Direct link to hasinitialized-optionnull\")\n\n*   **interface**: `api.query.initializer.hasInitialized`\n    \n*   **summary**: Whether the parachains modules have been initialized within this block.\n    \n    Semantically a `bool`, but this guarantees it should never hit the trie, as this is cleared in `on_finalize` and Frame optimizes `None` values to be empty values.\n    \n    As a `bool`, `set(false)` and `remove()` both lead to the next `get()` being false, but one of them writes to the trie and one does not. This confusion makes `Option<()>` more suitable for the semantics of this variable.\n    \n\n* * *\n\nmessageQueue[\u200b](#messagequeue \"Direct link to messageQueue\")\n\n-------------------------------------------------------------\n\n### bookStateFor(`PolkadotRuntimeParachainsInclusionAggregateMessageOrigin`): `PalletMessageQueueBookState`[\u200b](#bookstateforpolkadotruntimeparachainsinclusionaggregatemessageorigin-palletmessagequeuebookstate \"Direct link to bookstateforpolkadotruntimeparachainsinclusionaggregatemessageorigin-palletmessagequeuebookstate\")\n\n*   **interface**: `api.query.messageQueue.bookStateFor`\n*   **summary**: The index of the first and last (non-empty) pages.\n\n### pages(`PolkadotRuntimeParachainsInclusionAggregateMessageOrigin, u32`): `Option<PalletMessageQueuePage>`[\u200b](#pagespolkadotruntimeparachainsinclusionaggregatemessageorigin-u32-optionpalletmessagequeuepage \"Direct link to pagespolkadotruntimeparachainsinclusionaggregatemessageorigin-u32-optionpalletmessagequeuepage\")\n\n*   **interface**: `api.query.messageQueue.pages`\n*   **summary**: The map of page indices to pages.\n\n### serviceHead(): `Option<PolkadotRuntimeParachainsInclusionAggregateMessageOrigin>`[\u200b](#servicehead-optionpolkadotruntimeparachainsinclusionaggregatemessageorigin \"Direct link to servicehead-optionpolkadotruntimeparachainsinclusionaggregatemessageorigin\")\n\n*   **interface**: `api.query.messageQueue.serviceHead`\n*   **summary**: The origin at which we should begin servicing.\n\n* * *\n\nmultisig[\u200b](#multisig \"Direct link to multisig\")\n\n-------------------------------------------------\n\n### multisigs(`AccountId32, [u8;32]`): `Option<PalletMultisigMultisig>`[\u200b](#multisigsaccountid32-u832-optionpalletmultisigmultisig \"Direct link to multisigsaccountid32-u832-optionpalletmultisigmultisig\")\n\n*   **interface**: `api.query.multisig.multisigs`\n*   **summary**: The set of open multisig operations.\n\n* * *\n\nnominationPools[\u200b](#nominationpools \"Direct link to nominationPools\")\n\n----------------------------------------------------------------------\n\n### bondedPools(`u32`): `Option<PalletNominationPoolsBondedPoolInner>`[\u200b](#bondedpoolsu32-optionpalletnominationpoolsbondedpoolinner \"Direct link to bondedpoolsu32-optionpalletnominationpoolsbondedpoolinner\")\n\n*   **interface**: `api.query.nominationPools.bondedPools`\n*   **summary**: Storage for bonded pools.\n\n### claimPermissions(`AccountId32`): `PalletNominationPoolsClaimPermission`[\u200b](#claimpermissionsaccountid32-palletnominationpoolsclaimpermission \"Direct link to claimpermissionsaccountid32-palletnominationpoolsclaimpermission\")\n\n*   **interface**: `api.query.nominationPools.claimPermissions`\n*   **summary**: Map from a pool member account to their opted claim permission.\n\n### counterForBondedPools(): `u32`[\u200b](#counterforbondedpools-u32 \"Direct link to counterforbondedpools-u32\")\n\n*   **interface**: `api.query.nominationPools.counterForBondedPools`\n*   **summary**: Counter for the related counted storage map\n\n### counterForMetadata(): `u32`[\u200b](#counterformetadata-u32 \"Direct link to counterformetadata-u32\")\n\n*   **interface**: `api.query.nominationPools.counterForMetadata`\n*   **summary**: Counter for the related counted storage map\n\n### counterForPoolMembers(): `u32`[\u200b](#counterforpoolmembers-u32 \"Direct link to counterforpoolmembers-u32\")\n\n*   **interface**: `api.query.nominationPools.counterForPoolMembers`\n*   **summary**: Counter for the related counted storage map\n\n### counterForReversePoolIdLookup(): `u32`[\u200b](#counterforreversepoolidlookup-u32 \"Direct link to counterforreversepoolidlookup-u32\")\n\n*   **interface**: `api.query.nominationPools.counterForReversePoolIdLookup`\n*   **summary**: Counter for the related counted storage map\n\n### counterForRewardPools(): `u32`[\u200b](#counterforrewardpools-u32 \"Direct link to counterforrewardpools-u32\")\n\n*   **interface**: `api.query.nominationPools.counterForRewardPools`\n*   **summary**: Counter for the related counted storage map\n\n### counterForSubPoolsStorage(): `u32`[\u200b](#counterforsubpoolsstorage-u32 \"Direct link to counterforsubpoolsstorage-u32\")\n\n*   **interface**: `api.query.nominationPools.counterForSubPoolsStorage`\n*   **summary**: Counter for the related counted storage map\n\n### globalMaxCommission(): `Option<Perbill>`[\u200b](#globalmaxcommission-optionperbill \"Direct link to globalmaxcommission-optionperbill\")\n\n*   **interface**: `api.query.nominationPools.globalMaxCommission`\n*   **summary**: The maximum commission that can be charged by a pool. Used on commission payouts to bound pool commissions that are > `GlobalMaxCommission`, necessary if a future `GlobalMaxCommission` is lower than some current pool commissions.\n\n### lastPoolId(): `u32`[\u200b](#lastpoolid-u32 \"Direct link to lastpoolid-u32\")\n\n*   **interface**: `api.query.nominationPools.lastPoolId`\n*   **summary**: Ever increasing number of all pools created so far.\n\n### maxPoolMembers(): `Option<u32>`[\u200b](#maxpoolmembers-optionu32 \"Direct link to maxpoolmembers-optionu32\")\n\n*   **interface**: `api.query.nominationPools.maxPoolMembers`\n*   **summary**: Maximum number of members that can exist in the system. If `None`, then the count members are not bound on a system wide basis.\n\n### maxPoolMembersPerPool(): `Option<u32>`[\u200b](#maxpoolmembersperpool-optionu32 \"Direct link to maxpoolmembersperpool-optionu32\")\n\n*   **interface**: `api.query.nominationPools.maxPoolMembersPerPool`\n*   **summary**: Maximum number of members that may belong to pool. If `None`, then the count of members is not bound on a per pool basis.\n\n### maxPools(): `Option<u32>`[\u200b](#maxpools-optionu32 \"Direct link to maxpools-optionu32\")\n\n*   **interface**: `api.query.nominationPools.maxPools`\n*   **summary**: Maximum number of nomination pools that can exist. If `None`, then an unbounded number of pools can exist.\n\n### metadata(`u32`): `Bytes`[\u200b](#metadatau32-bytes \"Direct link to metadatau32-bytes\")\n\n*   **interface**: `api.query.nominationPools.metadata`\n*   **summary**: Metadata for the pool.\n\n### minCreateBond(): `u128`[\u200b](#mincreatebond-u128 \"Direct link to mincreatebond-u128\")\n\n*   **interface**: `api.query.nominationPools.minCreateBond`\n    \n*   **summary**: Minimum bond required to create a pool.\n    \n    This is the amount that the depositor must put as their initial stake in the pool, as an indication of \"skin in the game\".\n    \n    This is the value that will always exist in the staking ledger of the pool bonded account while all other accounts leave.\n    \n\n### minJoinBond(): `u128`[\u200b](#minjoinbond-u128 \"Direct link to minjoinbond-u128\")\n\n*   **interface**: `api.query.nominationPools.minJoinBond`\n*   **summary**: Minimum amount to bond to join a pool.\n\n### poolMembers(`AccountId32`): `Option<PalletNominationPoolsPoolMember>`[\u200b](#poolmembersaccountid32-optionpalletnominationpoolspoolmember \"Direct link to poolmembersaccountid32-optionpalletnominationpoolspoolmember\")\n\n*   **interface**: `api.query.nominationPools.poolMembers`\n    \n*   **summary**: Active members.\n    \n    TWOX-NOTE: SAFE since `AccountId` is a secure hash.\n    \n\n### reversePoolIdLookup(`AccountId32`): `Option<u32>`[\u200b](#reversepoolidlookupaccountid32-optionu32 \"Direct link to reversepoolidlookupaccountid32-optionu32\")\n\n*   **interface**: `api.query.nominationPools.reversePoolIdLookup`\n    \n*   **summary**: A reverse lookup from the pool's account id to its id.\n    \n    This is only used for slashing. In all other instances, the pool id is used, and the accounts are deterministically derived from it.\n    \n\n### rewardPools(`u32`): `Option<PalletNominationPoolsRewardPool>`[\u200b](#rewardpoolsu32-optionpalletnominationpoolsrewardpool \"Direct link to rewardpoolsu32-optionpalletnominationpoolsrewardpool\")\n\n*   **interface**: `api.query.nominationPools.rewardPools`\n*   **summary**: Reward pools. This is where there rewards for each pool accumulate. When a members payout is claimed, the balance comes out fo the reward pool. Keyed by the bonded pools account.\n\n### subPoolsStorage(`u32`): `Option<PalletNominationPoolsSubPools>`[\u200b](#subpoolsstorageu32-optionpalletnominationpoolssubpools \"Direct link to subpoolsstorageu32-optionpalletnominationpoolssubpools\")\n\n*   **interface**: `api.query.nominationPools.subPoolsStorage`\n*   **summary**: Groups of unbonding pools. Each group of unbonding pools belongs to a bonded pool, hence the name sub-pools. Keyed by the bonded pools account.\n\n* * *\n\noffences[\u200b](#offences \"Direct link to offences\")\n\n-------------------------------------------------\n\n### concurrentReportsIndex(`[u8;16], Bytes`): `Vec<H256>`[\u200b](#concurrentreportsindexu816-bytes-vech256 \"Direct link to concurrentreportsindexu816-bytes-vech256\")\n\n*   **interface**: `api.query.offences.concurrentReportsIndex`\n*   **summary**: A vector of reports of the same kind that happened at the same time slot.\n\n### reports(`H256`): `Option<SpStakingOffenceOffenceDetails>`[\u200b](#reportsh256-optionspstakingoffenceoffencedetails \"Direct link to reportsh256-optionspstakingoffenceoffencedetails\")\n\n*   **interface**: `api.query.offences.reports`\n*   **summary**: The primary structure that holds all offence records keyed by report identifiers.\n\n* * *\n\nparaInclusion[\u200b](#parainclusion \"Direct link to paraInclusion\")\n\n----------------------------------------------------------------\n\n### availabilityBitfields(`u32`): `Option<PolkadotRuntimeParachainsInclusionAvailabilityBitfieldRecord>`[\u200b](#availabilitybitfieldsu32-optionpolkadotruntimeparachainsinclusionavailabilitybitfieldrecord \"Direct link to availabilitybitfieldsu32-optionpolkadotruntimeparachainsinclusionavailabilitybitfieldrecord\")\n\n*   **interface**: `api.query.paraInclusion.availabilityBitfields`\n*   **summary**: The latest bitfield for each validator, referred to by their index in the validator set.\n\n### pendingAvailability(`u32`): `Option<PolkadotRuntimeParachainsInclusionCandidatePendingAvailability>`[\u200b](#pendingavailabilityu32-optionpolkadotruntimeparachainsinclusioncandidatependingavailability \"Direct link to pendingavailabilityu32-optionpolkadotruntimeparachainsinclusioncandidatependingavailability\")\n\n*   **interface**: `api.query.paraInclusion.pendingAvailability`\n*   **summary**: Candidates pending availability by `ParaId`.\n\n### pendingAvailabilityCommitments(`u32`): `Option<PolkadotPrimitivesV5CandidateCommitments>`[\u200b](#pendingavailabilitycommitmentsu32-optionpolkadotprimitivesv5candidatecommitments \"Direct link to pendingavailabilitycommitmentsu32-optionpolkadotprimitivesv5candidatecommitments\")\n\n*   **interface**: `api.query.paraInclusion.pendingAvailabilityCommitments`\n*   **summary**: The commitments of candidates pending availability, by `ParaId`.\n\n* * *\n\nparaInherent[\u200b](#parainherent \"Direct link to paraInherent\")\n\n-------------------------------------------------------------\n\n### included(): `Option<Null>`[\u200b](#included-optionnull \"Direct link to included-optionnull\")\n\n*   **interface**: `api.query.paraInherent.included`\n    \n*   **summary**: Whether the paras inherent was included within this block.\n    \n    The `Option<()>` is effectively a `bool`, but it never hits storage in the `None` variant due to the guarantees of FRAME's storage APIs.\n    \n    If this is `None` at the end of the block, we panic and render the block invalid.\n    \n\n### onChainVotes(): `Option<PolkadotPrimitivesV5ScrapedOnChainVotes>`[\u200b](#onchainvotes-optionpolkadotprimitivesv5scrapedonchainvotes \"Direct link to onchainvotes-optionpolkadotprimitivesv5scrapedonchainvotes\")\n\n*   **interface**: `api.query.paraInherent.onChainVotes`\n*   **summary**: Scraped on chain data for extracting resolved disputes as well as backing votes.\n\n* * *\n\nparas[\u200b](#paras \"Direct link to paras\")\n\n----------------------------------------\n\n### actionsQueue(`u32`): `Vec<u32>`[\u200b](#actionsqueueu32-vecu32 \"Direct link to actionsqueueu32-vecu32\")\n\n*   **interface**: `api.query.paras.actionsQueue`\n*   **summary**: The actions to perform during the start of a specific session index.\n\n### codeByHash(`H256`): `Option<Bytes>`[\u200b](#codebyhashh256-optionbytes \"Direct link to codebyhashh256-optionbytes\")\n\n*   **interface**: `api.query.paras.codeByHash`\n    \n*   **summary**: Validation code stored by its hash.\n    \n    This storage is consistent with \\[`FutureCodeHash`\\], \\[`CurrentCodeHash`\\] and \\[`PastCodeHash`\\].\n    \n\n### codeByHashRefs(`H256`): `u32`[\u200b](#codebyhashrefsh256-u32 \"Direct link to codebyhashrefsh256-u32\")\n\n*   **interface**: `api.query.paras.codeByHashRefs`\n*   **summary**: The number of reference on the validation code in \\[`CodeByHash`\\] storage.\n\n### currentCodeHash(`u32`): `Option<H256>`[\u200b](#currentcodehashu32-optionh256 \"Direct link to currentcodehashu32-optionh256\")\n\n*   **interface**: `api.query.paras.currentCodeHash`\n    \n*   **summary**: The validation code hash of every live para.\n    \n    Corresponding code can be retrieved with \\[`CodeByHash`\\].\n    \n\n### futureCodeHash(`u32`): `Option<H256>`[\u200b](#futurecodehashu32-optionh256 \"Direct link to futurecodehashu32-optionh256\")\n\n*   **interface**: `api.query.paras.futureCodeHash`\n    \n*   **summary**: The actual future code hash of a para.\n    \n    Corresponding code can be retrieved with \\[`CodeByHash`\\].\n    \n\n### futureCodeUpgrades(`u32`): `Option<u32>`[\u200b](#futurecodeupgradesu32-optionu32 \"Direct link to futurecodeupgradesu32-optionu32\")\n\n*   **interface**: `api.query.paras.futureCodeUpgrades`\n*   **summary**: The block number at which the planned code change is expected for a para. The change will be applied after the first parablock for this ID included which executes in the context of a relay chain block with a number >= `expected_at`.\n\n### heads(`u32`): `Option<Bytes>`[\u200b](#headsu32-optionbytes \"Direct link to headsu32-optionbytes\")\n\n*   **interface**: `api.query.paras.heads`\n*   **summary**: The head-data of every registered para.\n\n### mostRecentContext(`u32`): `Option<u32>`[\u200b](#mostrecentcontextu32-optionu32 \"Direct link to mostrecentcontextu32-optionu32\")\n\n*   **interface**: `api.query.paras.mostRecentContext`\n*   **summary**: The context (relay-chain block number) of the most recent parachain head.\n\n### parachains(): `Vec<u32>`[\u200b](#parachains-vecu32 \"Direct link to parachains-vecu32\")\n\n*   **interface**: `api.query.paras.parachains`\n    \n*   **summary**: All lease holding parachains. Ordered ascending by `ParaId`. On demand parachains are not included.\n    \n    Consider using the \\[`ParachainsCache`\\] type of modifying.\n    \n\n### paraLifecycles(`u32`): `Option<PolkadotRuntimeParachainsParasParaLifecycle>`[\u200b](#paralifecyclesu32-optionpolkadotruntimeparachainsparasparalifecycle \"Direct link to paralifecyclesu32-optionpolkadotruntimeparachainsparasparalifecycle\")\n\n*   **interface**: `api.query.paras.paraLifecycles`\n*   **summary**: The current lifecycle of a all known Para IDs.\n\n### pastCodeHash(`(u32,u32)`): `Option<H256>`[\u200b](#pastcodehashu32u32-optionh256 \"Direct link to pastcodehashu32u32-optionh256\")\n\n*   **interface**: `api.query.paras.pastCodeHash`\n    \n*   **summary**: Actual past code hash, indicated by the para id as well as the block number at which it became outdated.\n    \n    Corresponding code can be retrieved with \\[`CodeByHash`\\].\n    \n\n### pastCodeMeta(`u32`): `PolkadotRuntimeParachainsParasParaPastCodeMeta`[\u200b](#pastcodemetau32-polkadotruntimeparachainsparasparapastcodemeta \"Direct link to pastcodemetau32-polkadotruntimeparachainsparasparapastcodemeta\")\n\n*   **interface**: `api.query.paras.pastCodeMeta`\n*   **summary**: Past code of parachains. The parachains themselves may not be registered anymore, but we also keep their code on-chain for the same amount of time as outdated code to keep it available for approval checkers.\n\n### pastCodePruning(): `Vec<(u32,u32)>`[\u200b](#pastcodepruning-vecu32u32 \"Direct link to pastcodepruning-vecu32u32\")\n\n*   **interface**: `api.query.paras.pastCodePruning`\n*   **summary**: Which paras have past code that needs pruning and the relay-chain block at which the code was replaced. Note that this is the actual height of the included block, not the expected height at which the code upgrade would be applied, although they may be equal. This is to ensure the entire acceptance period is covered, not an offset acceptance period starting from the time at which the parachain perceives a code upgrade as having occurred. Multiple entries for a single para are permitted. Ordered ascending by block number.\n\n### pvfActiveVoteList(): `Vec<H256>`[\u200b](#pvfactivevotelist-vech256 \"Direct link to pvfactivevotelist-vech256\")\n\n*   **interface**: `api.query.paras.pvfActiveVoteList`\n*   **summary**: The list of all currently active PVF votes. Auxiliary to `PvfActiveVoteMap`.\n\n### pvfActiveVoteMap(`H256`): `Option<PolkadotRuntimeParachainsParasPvfCheckActiveVoteState>`[\u200b](#pvfactivevotemaph256-optionpolkadotruntimeparachainsparaspvfcheckactivevotestate \"Direct link to pvfactivevotemaph256-optionpolkadotruntimeparachainsparaspvfcheckactivevotestate\")\n\n*   **interface**: `api.query.paras.pvfActiveVoteMap`\n    \n*   **summary**: All currently active PVF pre-checking votes.\n    \n    Invariant:\n    \n    *   There are no PVF pre-checking votes that exists in list but not in the set and vice versa.\n\n### upcomingParasGenesis(`u32`): `Option<PolkadotRuntimeParachainsParasParaGenesisArgs>`[\u200b](#upcomingparasgenesisu32-optionpolkadotruntimeparachainsparasparagenesisargs \"Direct link to upcomingparasgenesisu32-optionpolkadotruntimeparachainsparasparagenesisargs\")\n\n*   **interface**: `api.query.paras.upcomingParasGenesis`\n    \n*   **summary**: Upcoming paras instantiation arguments.\n    \n    NOTE that after PVF pre-checking is enabled the para genesis arg will have it's code set to empty. Instead, the code will be saved into the storage right away via `CodeByHash`.\n    \n\n### upcomingUpgrades(): `Vec<(u32,u32)>`[\u200b](#upcomingupgrades-vecu32u32 \"Direct link to upcomingupgrades-vecu32u32\")\n\n*   **interface**: `api.query.paras.upcomingUpgrades`\n    \n*   **summary**: The list of upcoming code upgrades. Each item is a pair of which para performs a code upgrade and at which relay-chain block it is expected at.\n    \n    Ordered ascending by block number.\n    \n\n### upgradeCooldowns(): `Vec<(u32,u32)>`[\u200b](#upgradecooldowns-vecu32u32 \"Direct link to upgradecooldowns-vecu32u32\")\n\n*   **interface**: `api.query.paras.upgradeCooldowns`\n    \n*   **summary**: The list of parachains that are awaiting for their upgrade restriction to cooldown.\n    \n    Ordered ascending by block number.\n    \n\n### upgradeGoAheadSignal(`u32`): `Option<PolkadotPrimitivesV5UpgradeGoAhead>`[\u200b](#upgradegoaheadsignalu32-optionpolkadotprimitivesv5upgradegoahead \"Direct link to upgradegoaheadsignalu32-optionpolkadotprimitivesv5upgradegoahead\")\n\n*   **interface**: `api.query.paras.upgradeGoAheadSignal`\n    \n*   **summary**: This is used by the relay-chain to communicate to a parachain a go-ahead with in the upgrade procedure.\n    \n    This value is absent when there are no upgrades scheduled or during the time the relay chain performs the checks. It is set at the first relay-chain block when the corresponding parachain can switch its upgrade function. As soon as the parachain's block is included, the value gets reset to `None`.\n    \n    NOTE that this field is used by parachains via merkle storage proofs, therefore changing the format will require migration of parachains.\n    \n\n### upgradeRestrictionSignal(`u32`): `Option<PolkadotPrimitivesV5UpgradeRestriction>`[\u200b](#upgraderestrictionsignalu32-optionpolkadotprimitivesv5upgraderestriction \"Direct link to upgraderestrictionsignalu32-optionpolkadotprimitivesv5upgraderestriction\")\n\n*   **interface**: `api.query.paras.upgradeRestrictionSignal`\n    \n*   **summary**: This is used by the relay-chain to communicate that there are restrictions for performing an upgrade for this parachain.\n    \n    This may be a because the parachain waits for the upgrade cooldown to expire. Another potential use case is when we want to perform some maintenance (such as storage migration) we could restrict upgrades to make the process simpler.\n    \n    NOTE that this field is used by parachains via merkle storage proofs, therefore changing the format will require migration of parachains.\n    \n\n* * *\n\nparaScheduler[\u200b](#parascheduler \"Direct link to paraScheduler\")\n\n----------------------------------------------------------------\n\n### availabilityCores(): `Vec<PolkadotPrimitivesV5CoreOccupied>`[\u200b](#availabilitycores-vecpolkadotprimitivesv5coreoccupied \"Direct link to availabilitycores-vecpolkadotprimitivesv5coreoccupied\")\n\n*   **interface**: `api.query.paraScheduler.availabilityCores`\n    \n*   **summary**: One entry for each availability core. Entries are `None` if the core is not currently occupied. Can be temporarily `Some` if scheduled but not occupied. The i'th parachain belongs to the i'th core, with the remaining cores all being parathread-multiplexers.\n    \n    Bounded by the maximum of either of these two values:\n    \n    *   The number of parachains and parathread multiplexers\n        \n    *   The number of validators divided by `configuration.max_validators_per_core`.\n        \n\n### claimQueue(): `BTreeMap<u32, Vec<Option<PolkadotPrimitivesV5ParasEntry>>>`[\u200b](#claimqueue-btreemapu32-vecoptionpolkadotprimitivesv5parasentry \"Direct link to claimqueue-btreemapu32-vecoptionpolkadotprimitivesv5parasentry\")\n\n*   **interface**: `api.query.paraScheduler.claimQueue`\n*   **summary**: One entry for each availability core. The `VecDeque` represents the assignments to be scheduled on that core. `None` is used to signal to not schedule the next para of the core as there is one currently being scheduled. Not using `None` here would overwrite the `CoreState` in the runtime API. The value contained here will not be valid after the end of a block. Runtime APIs should be used to determine scheduled cores/ for the upcoming block.\n\n### sessionStartBlock(): `u32`[\u200b](#sessionstartblock-u32 \"Direct link to sessionstartblock-u32\")\n\n*   **interface**: `api.query.paraScheduler.sessionStartBlock`\n    \n*   **summary**: The block number where the session start occurred. Used to track how many group rotations have occurred.\n    \n    Note that in the context of parachains modules the session change is signaled during the block and enacted at the end of the block (at the finalization stage, to be exact). Thus for all intents and purposes the effect of the session change is observed at the block following the session change, block number of which we save in this storage value.\n    \n\n### validatorGroups(): `Vec<Vec<u32>>`[\u200b](#validatorgroups-vecvecu32 \"Direct link to validatorgroups-vecvecu32\")\n\n*   **interface**: `api.query.paraScheduler.validatorGroups`\n    \n*   **summary**: All the validator groups. One for each core. Indices are into `ActiveValidators` - not the broader set of Polkadot validators, but instead just the subset used for parachains during this session.\n    \n    Bound: The number of cores is the sum of the numbers of parachains and parathread multiplexers. Reasonably, 100-1000. The dominant factor is the number of validators: safe upper bound at 10k.\n    \n\n* * *\n\nparasDisputes[\u200b](#parasdisputes \"Direct link to parasDisputes\")\n\n----------------------------------------------------------------\n\n### backersOnDisputes(`u32, H256`): `Option<BTreeSet<u32>>`[\u200b](#backersondisputesu32-h256-optionbtreesetu32 \"Direct link to backersondisputesu32-h256-optionbtreesetu32\")\n\n*   **interface**: `api.query.parasDisputes.backersOnDisputes`\n*   **summary**: Backing votes stored for each dispute. This storage is used for slashing.\n\n### disputes(`u32, H256`): `Option<PolkadotPrimitivesV5DisputeState>`[\u200b](#disputesu32-h256-optionpolkadotprimitivesv5disputestate \"Direct link to disputesu32-h256-optionpolkadotprimitivesv5disputestate\")\n\n*   **interface**: `api.query.parasDisputes.disputes`\n*   **summary**: All ongoing or concluded disputes for the last several sessions.\n\n### frozen(): `Option<u32>`[\u200b](#frozen-optionu32 \"Direct link to frozen-optionu32\")\n\n*   **interface**: `api.query.parasDisputes.frozen`\n*   **summary**: Whether the chain is frozen. Starts as `None`. When this is `Some`, the chain will not accept any new parachain blocks for backing or inclusion, and its value indicates the last valid block number in the chain. It can only be set back to `None` by governance intervention.\n\n### included(`u32, H256`): `Option<u32>`[\u200b](#includedu32-h256-optionu32 \"Direct link to includedu32-h256-optionu32\")\n\n*   **interface**: `api.query.parasDisputes.included`\n*   **summary**: All included blocks on the chain, as well as the block number in this chain that should be reverted back to if the candidate is disputed and determined to be invalid.\n\n### lastPrunedSession(): `Option<u32>`[\u200b](#lastprunedsession-optionu32 \"Direct link to lastprunedsession-optionu32\")\n\n*   **interface**: `api.query.parasDisputes.lastPrunedSession`\n*   **summary**: The last pruned session, if any. All data stored by this module references sessions.\n\n* * *\n\nparaSessionInfo[\u200b](#parasessioninfo \"Direct link to paraSessionInfo\")\n\n----------------------------------------------------------------------\n\n### accountKeys(`u32`): `Option<Vec<AccountId32>>`[\u200b](#accountkeysu32-optionvecaccountid32 \"Direct link to accountkeysu32-optionvecaccountid32\")\n\n*   **interface**: `api.query.paraSessionInfo.accountKeys`\n*   **summary**: The validator account keys of the validators actively participating in parachain consensus.\n\n### assignmentKeysUnsafe(): `Vec<PolkadotPrimitivesV5AssignmentAppPublic>`[\u200b](#assignmentkeysunsafe-vecpolkadotprimitivesv5assignmentapppublic \"Direct link to assignmentkeysunsafe-vecpolkadotprimitivesv5assignmentapppublic\")\n\n*   **interface**: `api.query.paraSessionInfo.assignmentKeysUnsafe`\n*   **summary**: Assignment keys for the current session. Note that this API is private due to it being prone to 'off-by-one' at session boundaries. When in doubt, use `Sessions` API instead.\n\n### earliestStoredSession(): `u32`[\u200b](#earlieststoredsession-u32 \"Direct link to earlieststoredsession-u32\")\n\n*   **interface**: `api.query.paraSessionInfo.earliestStoredSession`\n*   **summary**: The earliest session for which previous session info is stored.\n\n### sessionExecutorParams(`u32`): `Option<PolkadotPrimitivesV5ExecutorParams>`[\u200b](#sessionexecutorparamsu32-optionpolkadotprimitivesv5executorparams \"Direct link to sessionexecutorparamsu32-optionpolkadotprimitivesv5executorparams\")\n\n*   **interface**: `api.query.paraSessionInfo.sessionExecutorParams`\n*   **summary**: Executor parameter set for a given session index\n\n### sessions(`u32`): `Option<PolkadotPrimitivesV5SessionInfo>`[\u200b](#sessionsu32-optionpolkadotprimitivesv5sessioninfo \"Direct link to sessionsu32-optionpolkadotprimitivesv5sessioninfo\")\n\n*   **interface**: `api.query.paraSessionInfo.sessions`\n*   **summary**: Session information in a rolling window. Should have an entry in range `EarliestStoredSession..=CurrentSessionIndex`. Does not have any entries before the session index in the first session change notification.\n\n* * *\n\nparasShared[\u200b](#parasshared \"Direct link to parasShared\")\n\n----------------------------------------------------------\n\n### activeValidatorIndices(): `Vec<u32>`[\u200b](#activevalidatorindices-vecu32 \"Direct link to activevalidatorindices-vecu32\")\n\n*   **interface**: `api.query.parasShared.activeValidatorIndices`\n*   **summary**: All the validators actively participating in parachain consensus. Indices are into the broader validator set.\n\n### activeValidatorKeys(): `Vec<PolkadotPrimitivesV5ValidatorAppPublic>`[\u200b](#activevalidatorkeys-vecpolkadotprimitivesv5validatorapppublic \"Direct link to activevalidatorkeys-vecpolkadotprimitivesv5validatorapppublic\")\n\n*   **interface**: `api.query.parasShared.activeValidatorKeys`\n*   **summary**: The parachain attestation keys of the validators actively participating in parachain consensus. This should be the same length as `ActiveValidatorIndices`.\n\n### allowedRelayParents(): `PolkadotRuntimeParachainsSharedAllowedRelayParentsTracker`[\u200b](#allowedrelayparents-polkadotruntimeparachainssharedallowedrelayparentstracker \"Direct link to allowedrelayparents-polkadotruntimeparachainssharedallowedrelayparentstracker\")\n\n*   **interface**: `api.query.parasShared.allowedRelayParents`\n*   **summary**: All allowed relay-parents.\n\n### currentSessionIndex(): `u32`[\u200b](#currentsessionindex-u32 \"Direct link to currentsessionindex-u32\")\n\n*   **interface**: `api.query.parasShared.currentSessionIndex`\n*   **summary**: The current session index.\n\n* * *\n\nparasSlashing[\u200b](#parasslashing \"Direct link to parasSlashing\")\n\n----------------------------------------------------------------\n\n### unappliedSlashes(`u32, H256`): `Option<PolkadotPrimitivesV5SlashingPendingSlashes>`[\u200b](#unappliedslashesu32-h256-optionpolkadotprimitivesv5slashingpendingslashes \"Direct link to unappliedslashesu32-h256-optionpolkadotprimitivesv5slashingpendingslashes\")\n\n*   **interface**: `api.query.parasSlashing.unappliedSlashes`\n*   **summary**: Validators pending dispute slashes.\n\n### validatorSetCounts(`u32`): `Option<u32>`[\u200b](#validatorsetcountsu32-optionu32 \"Direct link to validatorsetcountsu32-optionu32\")\n\n*   **interface**: `api.query.parasSlashing.validatorSetCounts`\n*   **summary**: `ValidatorSetCount` per session.\n\n* * *\n\npreimage[\u200b](#preimage \"Direct link to preimage\")\n\n-------------------------------------------------\n\n### preimageFor(`(H256,u32)`): `Option<Bytes>`[\u200b](#preimageforh256u32-optionbytes \"Direct link to preimageforh256u32-optionbytes\")\n\n*   **interface**: `api.query.preimage.preimageFor`\n\n### statusFor(`H256`): `Option<PalletPreimageRequestStatus>`[\u200b](#statusforh256-optionpalletpreimagerequeststatus \"Direct link to statusforh256-optionpalletpreimagerequeststatus\")\n\n*   **interface**: `api.query.preimage.statusFor`\n*   **summary**: The request status of a given hash.\n\n* * *\n\nproxy[\u200b](#proxy \"Direct link to proxy\")\n\n----------------------------------------\n\n### announcements(`AccountId32`): `(Vec<PalletProxyAnnouncement>,u128)`[\u200b](#announcementsaccountid32-vecpalletproxyannouncementu128 \"Direct link to announcementsaccountid32-vecpalletproxyannouncementu128\")\n\n*   **interface**: `api.query.proxy.announcements`\n*   **summary**: The announcements made by the proxy (key).\n\n### proxies(`AccountId32`): `(Vec<PalletProxyProxyDefinition>,u128)`[\u200b](#proxiesaccountid32-vecpalletproxyproxydefinitionu128 \"Direct link to proxiesaccountid32-vecpalletproxyproxydefinitionu128\")\n\n*   **interface**: `api.query.proxy.proxies`\n*   **summary**: The set of account proxies. Maps the account which has delegated to the accounts which are being delegated to, together with the amount held on deposit.\n\n* * *\n\nreferenda[\u200b](#referenda \"Direct link to referenda\")\n\n----------------------------------------------------\n\n### decidingCount(`u16`): `u32`[\u200b](#decidingcountu16-u32 \"Direct link to decidingcountu16-u32\")\n\n*   **interface**: `api.query.referenda.decidingCount`\n*   **summary**: The number of referenda being decided currently.\n\n### metadataOf(`u32`): `Option<H256>`[\u200b](#metadataofu32-optionh256 \"Direct link to metadataofu32-optionh256\")\n\n*   **interface**: `api.query.referenda.metadataOf`\n    \n*   **summary**: The metadata is a general information concerning the referendum. The `PreimageHash` refers to the preimage of the `Preimages` provider which can be a JSON dump or IPFS hash of a JSON file.\n    \n    Consider a garbage collection for a metadata of finished referendums to `unrequest` (remove) large preimages.\n    \n\n### referendumCount(): `u32`[\u200b](#referendumcount-u32 \"Direct link to referendumcount-u32\")\n\n*   **interface**: `api.query.referenda.referendumCount`\n*   **summary**: The next free referendum index, aka the number of referenda started so far.\n\n### referendumInfoFor(`u32`): `Option<PalletReferendaReferendumInfo>`[\u200b](#referenduminfoforu32-optionpalletreferendareferenduminfo \"Direct link to referenduminfoforu32-optionpalletreferendareferenduminfo\")\n\n*   **interface**: `api.query.referenda.referendumInfoFor`\n*   **summary**: Information concerning any given referendum.\n\n### trackQueue(`u16`): `Vec<(u32,u128)>`[\u200b](#trackqueueu16-vecu32u128 \"Direct link to trackqueueu16-vecu32u128\")\n\n*   **interface**: `api.query.referenda.trackQueue`\n    \n*   **summary**: The sorted list of referenda ready to be decided but not yet being decided, ordered by conviction-weighted approvals.\n    \n    This should be empty if `DecidingCount` is less than `TrackInfo::max_deciding`.\n    \n\n* * *\n\nregistrar[\u200b](#registrar \"Direct link to registrar\")\n\n----------------------------------------------------\n\n### nextFreeParaId(): `u32`[\u200b](#nextfreeparaid-u32 \"Direct link to nextfreeparaid-u32\")\n\n*   **interface**: `api.query.registrar.nextFreeParaId`\n*   **summary**: The next free `ParaId`.\n\n### paras(`u32`): `Option<PolkadotRuntimeCommonParasRegistrarParaInfo>`[\u200b](#parasu32-optionpolkadotruntimecommonparasregistrarparainfo \"Direct link to parasu32-optionpolkadotruntimecommonparasregistrarparainfo\")\n\n*   **interface**: `api.query.registrar.paras`\n    \n*   **summary**: Amount held on deposit for each para and the original depositor.\n    \n    The given account ID is responsible for registering the code and initial head data, but may only do so if it isn't yet registered. (After that, it's up to governance to do so.)\n    \n\n### pendingSwap(`u32`): `Option<u32>`[\u200b](#pendingswapu32-optionu32 \"Direct link to pendingswapu32-optionu32\")\n\n*   **interface**: `api.query.registrar.pendingSwap`\n*   **summary**: Pending swap operations.\n\n* * *\n\nscheduler[\u200b](#scheduler \"Direct link to scheduler\")\n\n----------------------------------------------------\n\n### agenda(`u32`): `Vec<Option<PalletSchedulerScheduled>>`[\u200b](#agendau32-vecoptionpalletschedulerscheduled \"Direct link to agendau32-vecoptionpalletschedulerscheduled\")\n\n*   **interface**: `api.query.scheduler.agenda`\n*   **summary**: Items to be executed, indexed by the block number that they should be executed on.\n\n### incompleteSince(): `Option<u32>`[\u200b](#incompletesince-optionu32 \"Direct link to incompletesince-optionu32\")\n\n*   **interface**: `api.query.scheduler.incompleteSince`\n\n### lookup(`[u8;32]`): `Option<(u32,u32)>`[\u200b](#lookupu832-optionu32u32 \"Direct link to lookupu832-optionu32u32\")\n\n*   **interface**: `api.query.scheduler.lookup`\n    \n*   **summary**: Lookup from a name to the block number and index of the task.\n    \n    For v3 -> v4 the previously unbounded identities are Blake2-256 hashed to form the v4 identities.\n    \n\n* * *\n\nsession[\u200b](#session \"Direct link to session\")\n\n----------------------------------------------\n\n### currentIndex(): `u32`[\u200b](#currentindex-u32 \"Direct link to currentindex-u32\")\n\n*   **interface**: `api.query.session.currentIndex`\n*   **summary**: Current index of the session.\n\n### disabledValidators(): `Vec<u32>`[\u200b](#disabledvalidators-vecu32 \"Direct link to disabledvalidators-vecu32\")\n\n*   **interface**: `api.query.session.disabledValidators`\n    \n*   **summary**: Indices of disabled validators.\n    \n    The vec is always kept sorted so that we can find whether a given validator is disabled using binary search. It gets cleared when `on_session_ending` returns a new set of identities.\n    \n\n### keyOwner(`(SpCoreCryptoKeyTypeId,Bytes)`): `Option<AccountId32>`[\u200b](#keyownerspcorecryptokeytypeidbytes-optionaccountid32 \"Direct link to keyownerspcorecryptokeytypeidbytes-optionaccountid32\")\n\n*   **interface**: `api.query.session.keyOwner`\n*   **summary**: The owner of a key. The key is the `KeyTypeId` + the encoded key.\n\n### nextKeys(`AccountId32`): `Option<PolkadotRuntimeSessionKeys>`[\u200b](#nextkeysaccountid32-optionpolkadotruntimesessionkeys \"Direct link to nextkeysaccountid32-optionpolkadotruntimesessionkeys\")\n\n*   **interface**: `api.query.session.nextKeys`\n*   **summary**: The next session keys for a validator.\n\n### queuedChanged(): `bool`[\u200b](#queuedchanged-bool \"Direct link to queuedchanged-bool\")\n\n*   **interface**: `api.query.session.queuedChanged`\n*   **summary**: True if the underlying economic identities or weighting behind the validators has changed in the queued validator set.\n\n### queuedKeys(): `Vec<(AccountId32,PolkadotRuntimeSessionKeys)>`[\u200b](#queuedkeys-vecaccountid32polkadotruntimesessionkeys \"Direct link to queuedkeys-vecaccountid32polkadotruntimesessionkeys\")\n\n*   **interface**: `api.query.session.queuedKeys`\n*   **summary**: The queued keys for the next session. When the next session begins, these keys will be used to determine the validator's session keys.\n\n### validators(): `Vec<AccountId32>`[\u200b](#validators-vecaccountid32 \"Direct link to validators-vecaccountid32\")\n\n*   **interface**: `api.query.session.validators`\n*   **summary**: The current set of validators.\n\n* * *\n\nslots[\u200b](#slots \"Direct link to slots\")\n\n----------------------------------------\n\n### leases(`u32`): `Vec<Option<(AccountId32,u128)>>`[\u200b](#leasesu32-vecoptionaccountid32u128 \"Direct link to leasesu32-vecoptionaccountid32u128\")\n\n*   **interface**: `api.query.slots.leases`\n    \n*   **summary**: Amounts held on deposit for each (possibly future) leased parachain.\n    \n    The actual amount locked on its behalf by any account at any time is the maximum of the second values of the items in this list whose first value is the account.\n    \n    The first item in the list is the amount locked for the current Lease Period. Following items are for the subsequent lease periods.\n    \n    The default value (an empty list) implies that the parachain no longer exists (or never existed) as far as this pallet is concerned.\n    \n    If a parachain doesn't exist _yet_ but is scheduled to exist in the future, then it will be left-padded with one or more `None`s to denote the fact that nothing is held on deposit for the non-existent chain currently, but is held at some point in the future.\n    \n    It is illegal for a `None` value to trail in the list.\n    \n\n* * *\n\nstaking[\u200b](#staking \"Direct link to staking\")\n\n----------------------------------------------\n\n### activeEra(): `Option<PalletStakingActiveEraInfo>`[\u200b](#activeera-optionpalletstakingactiveerainfo \"Direct link to activeera-optionpalletstakingactiveerainfo\")\n\n*   **interface**: `api.query.staking.activeEra`\n    \n*   **summary**: The active era information, it holds index and start.\n    \n    The active era is the era being currently rewarded. Validator set of this era must be equal to \\[`SessionInterface::validators`\\].\n    \n\n### bonded(`AccountId32`): `Option<AccountId32>`[\u200b](#bondedaccountid32-optionaccountid32 \"Direct link to bondedaccountid32-optionaccountid32\")\n\n*   **interface**: `api.query.staking.bonded`\n    \n*   **summary**: Map from all locked \"stash\" accounts to the controller account.\n    \n    TWOX-NOTE: SAFE since `AccountId` is a secure hash.\n    \n\n### bondedEras(): `Vec<(u32,u32)>`[\u200b](#bondederas-vecu32u32 \"Direct link to bondederas-vecu32u32\")\n\n*   **interface**: `api.query.staking.bondedEras`\n    \n*   **summary**: A mapping from still-bonded eras to the first session index of that era.\n    \n    Must contains information for eras for the range: `[active_era - bounding_duration; active_era]`\n    \n\n### canceledSlashPayout(): `u128`[\u200b](#canceledslashpayout-u128 \"Direct link to canceledslashpayout-u128\")\n\n*   **interface**: `api.query.staking.canceledSlashPayout`\n*   **summary**: The amount of currency given to reporters of a slash event which was canceled by extraordinary circumstances (e.g. governance).\n\n### chillThreshold(): `Option<Percent>`[\u200b](#chillthreshold-optionpercent \"Direct link to chillthreshold-optionpercent\")\n\n*   **interface**: `api.query.staking.chillThreshold`\n*   **summary**: The threshold for when users can start calling `chill_other` for other validators / nominators. The threshold is compared to the actual number of validators / nominators (`CountFor*`) in the system compared to the configured max (`Max*Count`).\n\n### counterForNominators(): `u32`[\u200b](#counterfornominators-u32 \"Direct link to counterfornominators-u32\")\n\n*   **interface**: `api.query.staking.counterForNominators`\n*   **summary**: Counter for the related counted storage map\n\n### counterForValidators(): `u32`[\u200b](#counterforvalidators-u32 \"Direct link to counterforvalidators-u32\")\n\n*   **interface**: `api.query.staking.counterForValidators`\n*   **summary**: Counter for the related counted storage map\n\n### currentEra(): `Option<u32>`[\u200b](#currentera-optionu32 \"Direct link to currentera-optionu32\")\n\n*   **interface**: `api.query.staking.currentEra`\n    \n*   **summary**: The current era index.\n    \n    This is the latest planned era, depending on how the Session pallet queues the validator set, it might be active or not.\n    \n\n### currentPlannedSession(): `u32`[\u200b](#currentplannedsession-u32 \"Direct link to currentplannedsession-u32\")\n\n*   **interface**: `api.query.staking.currentPlannedSession`\n    \n*   **summary**: The last planned session scheduled by the session pallet.\n    \n    This is basically in sync with the call to \\[`pallet_session::SessionManager::new_session`\\].\n    \n\n### erasRewardPoints(`u32`): `PalletStakingEraRewardPoints`[\u200b](#erasrewardpointsu32-palletstakingerarewardpoints \"Direct link to erasrewardpointsu32-palletstakingerarewardpoints\")\n\n*   **interface**: `api.query.staking.erasRewardPoints`\n*   **summary**: Rewards for the last `HISTORY_DEPTH` eras. If reward hasn't been set or has been removed then 0 reward is returned.\n\n### erasStakers(`u32, AccountId32`): `PalletStakingExposure`[\u200b](#erasstakersu32-accountid32-palletstakingexposure \"Direct link to erasstakersu32-accountid32-palletstakingexposure\")\n\n*   **interface**: `api.query.staking.erasStakers`\n    \n*   **summary**: Exposure of validator at era.\n    \n    This is keyed first by the era index to allow bulk deletion and then the stash account.\n    \n    Is it removed after `HISTORY_DEPTH` eras. If stakers hasn't been set or has been removed then empty exposure is returned.\n    \n\n### erasStakersClipped(`u32, AccountId32`): `PalletStakingExposure`[\u200b](#erasstakersclippedu32-accountid32-palletstakingexposure \"Direct link to erasstakersclippedu32-accountid32-palletstakingexposure\")\n\n*   **interface**: `api.query.staking.erasStakersClipped`\n    \n*   **summary**: Clipped Exposure of validator at era.\n    \n    This is similar to \\[`ErasStakers`\\] but number of nominators exposed is reduced to the `T::MaxNominatorRewardedPerValidator` biggest stakers. (Note: the field `total` and `own` of the exposure remains unchanged). This is used to limit the i/o cost for the nominator payout.\n    \n    This is keyed fist by the era index to allow bulk deletion and then the stash account.\n    \n    Is it removed after `HISTORY_DEPTH` eras. If stakers hasn't been set or has been removed then empty exposure is returned.\n    \n\n### erasStartSessionIndex(`u32`): `Option<u32>`[\u200b](#erasstartsessionindexu32-optionu32 \"Direct link to erasstartsessionindexu32-optionu32\")\n\n*   **interface**: `api.query.staking.erasStartSessionIndex`\n    \n*   **summary**: The session index at which the era start for the last `HISTORY_DEPTH` eras.\n    \n    Note: This tracks the starting session (i.e. session index when era start being active) for the eras in `[CurrentEra - HISTORY_DEPTH, CurrentEra]`.\n    \n\n### erasTotalStake(`u32`): `u128`[\u200b](#erastotalstakeu32-u128 \"Direct link to erastotalstakeu32-u128\")\n\n*   **interface**: `api.query.staking.erasTotalStake`\n*   **summary**: The total amount staked for the last `HISTORY_DEPTH` eras. If total hasn't been set or has been removed then 0 stake is returned.\n\n### erasValidatorPrefs(`u32, AccountId32`): `PalletStakingValidatorPrefs`[\u200b](#erasvalidatorprefsu32-accountid32-palletstakingvalidatorprefs \"Direct link to erasvalidatorprefsu32-accountid32-palletstakingvalidatorprefs\")\n\n*   **interface**: `api.query.staking.erasValidatorPrefs`\n    \n*   **summary**: Similar to `ErasStakers`, this holds the preferences of validators.\n    \n    This is keyed first by the era index to allow bulk deletion and then the stash account.\n    \n    Is it removed after `HISTORY_DEPTH` eras.\n    \n\n### erasValidatorReward(`u32`): `Option<u128>`[\u200b](#erasvalidatorrewardu32-optionu128 \"Direct link to erasvalidatorrewardu32-optionu128\")\n\n*   **interface**: `api.query.staking.erasValidatorReward`\n    \n*   **summary**: The total validator era payout for the last `HISTORY_DEPTH` eras.\n    \n    Eras that haven't finished yet or has been removed doesn't have reward.\n    \n\n### forceEra(): `PalletStakingForcing`[\u200b](#forceera-palletstakingforcing \"Direct link to forceera-palletstakingforcing\")\n\n*   **interface**: `api.query.staking.forceEra`\n*   **summary**: Mode of era forcing.\n\n### invulnerables(): `Vec<AccountId32>`[\u200b](#invulnerables-vecaccountid32 \"Direct link to invulnerables-vecaccountid32\")\n\n*   **interface**: `api.query.staking.invulnerables`\n*   **summary**: Any validators that may never be slashed or forcibly kicked. It's a Vec since they're easy to initialize and the performance hit is minimal (we expect no more than four invulnerables) and restricted to testnets.\n\n### ledger(`AccountId32`): `Option<PalletStakingStakingLedger>`[\u200b](#ledgeraccountid32-optionpalletstakingstakingledger \"Direct link to ledgeraccountid32-optionpalletstakingstakingledger\")\n\n*   **interface**: `api.query.staking.ledger`\n*   **summary**: Map from all (unlocked) \"controller\" accounts to the info regarding the staking.\n\n### maxNominatorsCount(): `Option<u32>`[\u200b](#maxnominatorscount-optionu32 \"Direct link to maxnominatorscount-optionu32\")\n\n*   **interface**: `api.query.staking.maxNominatorsCount`\n    \n*   **summary**: The maximum nominator count before we stop allowing new validators to join.\n    \n    When this value is not set, no limits are enforced.\n    \n\n### maxValidatorsCount(): `Option<u32>`[\u200b](#maxvalidatorscount-optionu32 \"Direct link to maxvalidatorscount-optionu32\")\n\n*   **interface**: `api.query.staking.maxValidatorsCount`\n    \n*   **summary**: The maximum validator count before we stop allowing new validators to join.\n    \n    When this value is not set, no limits are enforced.\n    \n\n### minCommission(): `Perbill`[\u200b](#mincommission-perbill \"Direct link to mincommission-perbill\")\n\n*   **interface**: `api.query.staking.minCommission`\n    \n*   **summary**: The minimum amount of commission that validators can set.\n    \n    If set to `0`, no limit exists.\n    \n\n### minimumActiveStake(): `u128`[\u200b](#minimumactivestake-u128 \"Direct link to minimumactivestake-u128\")\n\n*   **interface**: `api.query.staking.minimumActiveStake`\n*   **summary**: The minimum active nominator stake of the last successful election.\n\n### minimumValidatorCount(): `u32`[\u200b](#minimumvalidatorcount-u32 \"Direct link to minimumvalidatorcount-u32\")\n\n*   **interface**: `api.query.staking.minimumValidatorCount`\n*   **summary**: Minimum number of staking participants before emergency conditions are imposed.\n\n### minNominatorBond(): `u128`[\u200b](#minnominatorbond-u128 \"Direct link to minnominatorbond-u128\")\n\n*   **interface**: `api.query.staking.minNominatorBond`\n*   **summary**: The minimum active bond to become and maintain the role of a nominator.\n\n### minValidatorBond(): `u128`[\u200b](#minvalidatorbond-u128 \"Direct link to minvalidatorbond-u128\")\n\n*   **interface**: `api.query.staking.minValidatorBond`\n*   **summary**: The minimum active bond to become and maintain the role of a validator.\n\n### nominators(`AccountId32`): `Option<PalletStakingNominations>`[\u200b](#nominatorsaccountid32-optionpalletstakingnominations \"Direct link to nominatorsaccountid32-optionpalletstakingnominations\")\n\n*   **interface**: `api.query.staking.nominators`\n    \n*   **summary**: The map from nominator stash key to their nomination preferences, namely the validators that they wish to support.\n    \n    Note that the keys of this storage map might become non-decodable in case the account's \\[`NominationsQuota::MaxNominations`\\] configuration is decreased. In this rare case, these nominators are still existent in storage, their key is correct and retrievable (i.e. `contains_key` indicates that they exist), but their value cannot be decoded. Therefore, the non-decodable nominators will effectively not-exist, until they re-submit their preferences such that it is within the bounds of the newly set `Config::MaxNominations`.\n    \n    This implies that `::iter_keys().count()` and `::iter().count()` might return different values for this map. Moreover, the main `::count()` is aligned with the former, namely the number of keys that exist.\n    \n    Lastly, if any of the nominators become non-decodable, they can be chilled immediately via \\[`Call::chill_other`\\] dispatchable by anyone.\n    \n    TWOX-NOTE: SAFE since `AccountId` is a secure hash.\n    \n\n### nominatorSlashInEra(`u32, AccountId32`): `Option<u128>`[\u200b](#nominatorslashinerau32-accountid32-optionu128 \"Direct link to nominatorslashinerau32-accountid32-optionu128\")\n\n*   **interface**: `api.query.staking.nominatorSlashInEra`\n*   **summary**: All slashing events on nominators, mapped by era to the highest slash value of the era.\n\n### offendingValidators(): `Vec<(u32,bool)>`[\u200b](#offendingvalidators-vecu32bool \"Direct link to offendingvalidators-vecu32bool\")\n\n*   **interface**: `api.query.staking.offendingValidators`\n    \n*   **summary**: Indices of validators that have offended in the active era and whether they are currently disabled.\n    \n    This value should be a superset of disabled validators since not all offences lead to the validator being disabled (if there was no slash). This is needed to track the percentage of validators that have offended in the current era, ensuring a new era is forced if `OffendingValidatorsThreshold` is reached. The vec is always kept sorted so that we can find whether a given validator has previously offended using binary search. It gets cleared when the era ends.\n    \n\n### payee(`AccountId32`): `PalletStakingRewardDestination`[\u200b](#payeeaccountid32-palletstakingrewarddestination \"Direct link to payeeaccountid32-palletstakingrewarddestination\")\n\n*   **interface**: `api.query.staking.payee`\n    \n*   **summary**: Where the reward payment should be made. Keyed by stash.\n    \n    TWOX-NOTE: SAFE since `AccountId` is a secure hash.\n    \n\n### slashingSpans(`AccountId32`): `Option<PalletStakingSlashingSlashingSpans>`[\u200b](#slashingspansaccountid32-optionpalletstakingslashingslashingspans \"Direct link to slashingspansaccountid32-optionpalletstakingslashingslashingspans\")\n\n*   **interface**: `api.query.staking.slashingSpans`\n*   **summary**: Slashing spans for stash accounts.\n\n### slashRewardFraction(): `Perbill`[\u200b](#slashrewardfraction-perbill \"Direct link to slashrewardfraction-perbill\")\n\n*   **interface**: `api.query.staking.slashRewardFraction`\n    \n*   **summary**: The percentage of the slash that is distributed to reporters.\n    \n    The rest of the slashed value is handled by the `Slash`.\n    \n\n### spanSlash(`(AccountId32,u32)`): `PalletStakingSlashingSpanRecord`[\u200b](#spanslashaccountid32u32-palletstakingslashingspanrecord \"Direct link to spanslashaccountid32u32-palletstakingslashingspanrecord\")\n\n*   **interface**: `api.query.staking.spanSlash`\n*   **summary**: Records information about the maximum slash of a stash within a slashing span, as well as how much reward has been paid out.\n\n### unappliedSlashes(`u32`): `Vec<PalletStakingUnappliedSlash>`[\u200b](#unappliedslashesu32-vecpalletstakingunappliedslash \"Direct link to unappliedslashesu32-vecpalletstakingunappliedslash\")\n\n*   **interface**: `api.query.staking.unappliedSlashes`\n*   **summary**: All unapplied slashes that are queued for later.\n\n### validatorCount(): `u32`[\u200b](#validatorcount-u32 \"Direct link to validatorcount-u32\")\n\n*   **interface**: `api.query.staking.validatorCount`\n*   **summary**: The ideal number of active validators.\n\n### validators(`AccountId32`): `PalletStakingValidatorPrefs`[\u200b](#validatorsaccountid32-palletstakingvalidatorprefs \"Direct link to validatorsaccountid32-palletstakingvalidatorprefs\")\n\n*   **interface**: `api.query.staking.validators`\n    \n*   **summary**: The map from (wannabe) validator stash key to the preferences of that validator.\n    \n    TWOX-NOTE: SAFE since `AccountId` is a secure hash.\n    \n\n### validatorSlashInEra(`u32, AccountId32`): `Option<(Perbill,u128)>`[\u200b](#validatorslashinerau32-accountid32-optionperbillu128 \"Direct link to validatorslashinerau32-accountid32-optionperbillu128\")\n\n*   **interface**: `api.query.staking.validatorSlashInEra`\n*   **summary**: All slashing events on validators, mapped by era to the highest slash proportion and slash value of the era.\n\n* * *\n\nsubstrate[\u200b](#substrate \"Direct link to substrate\")\n\n----------------------------------------------------\n\n_These are well-known keys that are always available to the runtime implementation of any Substrate-based network._\n\n### changesTrieConfig(): `u32`[\u200b](#changestrieconfig-u32 \"Direct link to changestrieconfig-u32\")\n\n*   **interface**: `api.query.substrate.changesTrieConfig`\n*   **summary**: Changes trie configuration is stored under this key.\n\n### childStorageKeyPrefix(): `u32`[\u200b](#childstoragekeyprefix-u32 \"Direct link to childstoragekeyprefix-u32\")\n\n*   **interface**: `api.query.substrate.childStorageKeyPrefix`\n*   **summary**: Prefix of child storage keys.\n\n### code(): `Bytes`[\u200b](#code-bytes \"Direct link to code-bytes\")\n\n*   **interface**: `api.query.substrate.code`\n*   **summary**: Wasm code of the runtime.\n\n### extrinsicIndex(): `u32`[\u200b](#extrinsicindex-u32 \"Direct link to extrinsicindex-u32\")\n\n*   **interface**: `api.query.substrate.extrinsicIndex`\n*   **summary**: Current extrinsic index (u32) is stored under this key.\n\n### heapPages(): `u64`[\u200b](#heappages-u64 \"Direct link to heappages-u64\")\n\n*   **interface**: `api.query.substrate.heapPages`\n*   **summary**: Number of wasm linear memory pages required for execution of the runtime.\n\n### intrablockEntropy(): `[u8;32]`[\u200b](#intrablockentropy-u832 \"Direct link to intrablockentropy-u832\")\n\n*   **interface**: `api.query.substrate.intrablockEntropy`\n*   **summary**: Current intra-block entropy (a universally unique `[u8; 32]` value) is stored here.\n\n* * *\n\nsystem[\u200b](#system \"Direct link to system\")\n\n-------------------------------------------\n\n### account(`AccountId32`): `FrameSystemAccountInfo`[\u200b](#accountaccountid32-framesystemaccountinfo \"Direct link to accountaccountid32-framesystemaccountinfo\")\n\n*   **interface**: `api.query.system.account`\n*   **summary**: The full account information for a particular account ID.\n\n### allExtrinsicsLen(): `Option<u32>`[\u200b](#allextrinsicslen-optionu32 \"Direct link to allextrinsicslen-optionu32\")\n\n*   **interface**: `api.query.system.allExtrinsicsLen`\n*   **summary**: Total length (in bytes) for all extrinsics put together, for the current block.\n\n### blockHash(`u32`): `H256`[\u200b](#blockhashu32-h256 \"Direct link to blockhashu32-h256\")\n\n*   **interface**: `api.query.system.blockHash`\n*   **summary**: Map of block numbers to block hashes.\n\n### blockWeight(): `FrameSupportDispatchPerDispatchClassWeight`[\u200b](#blockweight-framesupportdispatchperdispatchclassweight \"Direct link to blockweight-framesupportdispatchperdispatchclassweight\")\n\n*   **interface**: `api.query.system.blockWeight`\n*   **summary**: The current weight for the block.\n\n### digest(): `SpRuntimeDigest`[\u200b](#digest-spruntimedigest \"Direct link to digest-spruntimedigest\")\n\n*   **interface**: `api.query.system.digest`\n*   **summary**: Digest of the current block, also part of the block header.\n\n### eventCount(): `u32`[\u200b](#eventcount-u32 \"Direct link to eventcount-u32\")\n\n*   **interface**: `api.query.system.eventCount`\n*   **summary**: The number of events in the `Events<T>` list.\n\n### events(): `Vec<FrameSystemEventRecord>`[\u200b](#events-vecframesystemeventrecord \"Direct link to events-vecframesystemeventrecord\")\n\n*   **interface**: `api.query.system.events`\n    \n*   **summary**: Events deposited for the current block.\n    \n    NOTE: The item is unbound and should therefore never be read on chain. It could otherwise inflate the PoV size of a block.\n    \n    Events have a large in-memory size. Box the events to not go out-of-memory just in case someone still reads them from within the runtime.\n    \n\n### eventTopics(`H256`): `Vec<(u32,u32)>`[\u200b](#eventtopicsh256-vecu32u32 \"Direct link to eventtopicsh256-vecu32u32\")\n\n*   **interface**: `api.query.system.eventTopics`\n    \n*   **summary**: Mapping between a topic (represented by T::Hash) and a vector of indexes of events in the `<Events<T>>` list.\n    \n    All topic vectors have deterministic storage locations depending on the topic. This allows light-clients to leverage the changes trie storage tracking mechanism and in case of changes fetch the list of events of interest.\n    \n    The value has the type `(BlockNumberFor<T>, EventIndex)` because if we used only just the `EventIndex` then in case if the topic has the same contents on the next block no notification will be triggered thus the event might be lost.\n    \n\n### executionPhase(): `Option<FrameSystemPhase>`[\u200b](#executionphase-optionframesystemphase \"Direct link to executionphase-optionframesystemphase\")\n\n*   **interface**: `api.query.system.executionPhase`\n*   **summary**: The execution phase of the block.\n\n### extrinsicCount(): `Option<u32>`[\u200b](#extrinsiccount-optionu32 \"Direct link to extrinsiccount-optionu32\")\n\n*   **interface**: `api.query.system.extrinsicCount`\n*   **summary**: Total extrinsics count for the current block.\n\n### extrinsicData(`u32`): `Bytes`[\u200b](#extrinsicdatau32-bytes \"Direct link to extrinsicdatau32-bytes\")\n\n*   **interface**: `api.query.system.extrinsicData`\n*   **summary**: Extrinsics data for the current block (maps an extrinsic's index to its data).\n\n### lastRuntimeUpgrade(): `Option<FrameSystemLastRuntimeUpgradeInfo>`[\u200b](#lastruntimeupgrade-optionframesystemlastruntimeupgradeinfo \"Direct link to lastruntimeupgrade-optionframesystemlastruntimeupgradeinfo\")\n\n*   **interface**: `api.query.system.lastRuntimeUpgrade`\n*   **summary**: Stores the `spec_version` and `spec_name` of when the last runtime upgrade happened.\n\n### number(): `u32`[\u200b](#number-u32 \"Direct link to number-u32\")\n\n*   **interface**: `api.query.system.number`\n*   **summary**: The current block number being processed. Set by `execute_block`.\n\n### parentHash(): `H256`[\u200b](#parenthash-h256 \"Direct link to parenthash-h256\")\n\n*   **interface**: `api.query.system.parentHash`\n*   **summary**: Hash of the previous block.\n\n### upgradedToTripleRefCount(): `bool`[\u200b](#upgradedtotriplerefcount-bool \"Direct link to upgradedtotriplerefcount-bool\")\n\n*   **interface**: `api.query.system.upgradedToTripleRefCount`\n*   **summary**: True if we have upgraded so that AccountInfo contains three types of `RefCount`. False (default) if not.\n\n### upgradedToU32RefCount(): `bool`[\u200b](#upgradedtou32refcount-bool \"Direct link to upgradedtou32refcount-bool\")\n\n*   **interface**: `api.query.system.upgradedToU32RefCount`\n*   **summary**: True if we have upgraded so that `type RefCount` is `u32`. False (default) if not.\n\n* * *\n\ntimestamp[\u200b](#timestamp \"Direct link to timestamp\")\n\n----------------------------------------------------\n\n### didUpdate(): `bool`[\u200b](#didupdate-bool \"Direct link to didupdate-bool\")\n\n*   **interface**: `api.query.timestamp.didUpdate`\n*   **summary**: Did the timestamp get updated in this block?\n\n### now(): `u64`[\u200b](#now-u64 \"Direct link to now-u64\")\n\n*   **interface**: `api.query.timestamp.now`\n*   **summary**: Current time for the current block.\n\n* * *\n\ntransactionPayment[\u200b](#transactionpayment \"Direct link to transactionPayment\")\n\n-------------------------------------------------------------------------------\n\n### nextFeeMultiplier(): `u128`[\u200b](#nextfeemultiplier-u128 \"Direct link to nextfeemultiplier-u128\")\n\n*   **interface**: `api.query.transactionPayment.nextFeeMultiplier`\n\n### storageVersion(): `PalletTransactionPaymentReleases`[\u200b](#storageversion-pallettransactionpaymentreleases \"Direct link to storageversion-pallettransactionpaymentreleases\")\n\n*   **interface**: `api.query.transactionPayment.storageVersion`\n\n* * *\n\ntreasury[\u200b](#treasury \"Direct link to treasury\")\n\n-------------------------------------------------\n\n### approvals(): `Vec<u32>`[\u200b](#approvals-vecu32 \"Direct link to approvals-vecu32\")\n\n*   **interface**: `api.query.treasury.approvals`\n*   **summary**: Proposal indices that have been approved but not yet awarded.\n\n### deactivated(): `u128`[\u200b](#deactivated-u128 \"Direct link to deactivated-u128\")\n\n*   **interface**: `api.query.treasury.deactivated`\n*   **summary**: The amount which has been reported as inactive to Currency.\n\n### proposalCount(): `u32`[\u200b](#proposalcount-u32 \"Direct link to proposalcount-u32\")\n\n*   **interface**: `api.query.treasury.proposalCount`\n*   **summary**: Number of proposals that have been made.\n\n### proposals(`u32`): `Option<PalletTreasuryProposal>`[\u200b](#proposalsu32-optionpallettreasuryproposal \"Direct link to proposalsu32-optionpallettreasuryproposal\")\n\n*   **interface**: `api.query.treasury.proposals`\n*   **summary**: Proposals that have been made.\n\n* * *\n\nvesting[\u200b](#vesting \"Direct link to vesting\")\n\n----------------------------------------------\n\n### storageVersion(): `PalletVestingReleases`[\u200b](#storageversion-palletvestingreleases \"Direct link to storageversion-palletvestingreleases\")\n\n*   **interface**: `api.query.vesting.storageVersion`\n    \n*   **summary**: Storage version of the pallet.\n    \n    New networks start with latest version, as determined by the genesis build.\n    \n\n### vesting(`AccountId32`): `Option<Vec<PalletVestingVestingInfo>>`[\u200b](#vestingaccountid32-optionvecpalletvestingvestinginfo \"Direct link to vestingaccountid32-optionvecpalletvestingvestinginfo\")\n\n*   **interface**: `api.query.vesting.vesting`\n*   **summary**: Information regarding the vesting of a given account.\n\n* * *\n\nvoterList[\u200b](#voterlist \"Direct link to voterList\")\n\n----------------------------------------------------\n\n### counterForListNodes(): `u32`[\u200b](#counterforlistnodes-u32 \"Direct link to counterforlistnodes-u32\")\n\n*   **interface**: `api.query.voterList.counterForListNodes`\n*   **summary**: Counter for the related counted storage map\n\n### listBags(`u64`): `Option<PalletBagsListListBag>`[\u200b](#listbagsu64-optionpalletbagslistlistbag \"Direct link to listbagsu64-optionpalletbagslistlistbag\")\n\n*   **interface**: `api.query.voterList.listBags`\n    \n*   **summary**: A bag stored in storage.\n    \n    Stores a `Bag` struct, which stores head and tail pointers to itself.\n    \n\n### listNodes(`AccountId32`): `Option<PalletBagsListListNode>`[\u200b](#listnodesaccountid32-optionpalletbagslistlistnode \"Direct link to listnodesaccountid32-optionpalletbagslistlistnode\")\n\n*   **interface**: `api.query.voterList.listNodes`\n    \n*   **summary**: A single node, within some bag.\n    \n    Nodes store links forward and back within their respective bags.\n    \n\n* * *\n\nwhitelist[\u200b](#whitelist \"Direct link to whitelist\")\n\n----------------------------------------------------\n\n### whitelistedCall(`H256`): `Option<Null>`[\u200b](#whitelistedcallh256-optionnull \"Direct link to whitelistedcallh256-optionnull\")\n\n*   **interface**: `api.query.whitelist.whitelistedCall`\n\n* * *\n\nxcmPallet[\u200b](#xcmpallet \"Direct link to xcmPallet\")\n\n----------------------------------------------------\n\n### assetTraps(`H256`): `u32`[\u200b](#assettrapsh256-u32 \"Direct link to assettrapsh256-u32\")\n\n*   **interface**: `api.query.xcmPallet.assetTraps`\n    \n*   **summary**: The existing asset traps.\n    \n    Key is the blake2 256 hash of (origin, versioned `MultiAssets`) pair. Value is the number of times this pair has been trapped (usually just 1 if it exists at all).\n    \n\n### currentMigration(): `Option<PalletXcmVersionMigrationStage>`[\u200b](#currentmigration-optionpalletxcmversionmigrationstage \"Direct link to currentmigration-optionpalletxcmversionmigrationstage\")\n\n*   **interface**: `api.query.xcmPallet.currentMigration`\n*   **summary**: The current migration's stage, if any.\n\n### lockedFungibles(`AccountId32`): `Option<Vec<(u128,XcmVersionedMultiLocation)>>`[\u200b](#lockedfungiblesaccountid32-optionvecu128xcmversionedmultilocation \"Direct link to lockedfungiblesaccountid32-optionvecu128xcmversionedmultilocation\")\n\n*   **interface**: `api.query.xcmPallet.lockedFungibles`\n*   **summary**: Fungible assets which we know are locked on this chain.\n\n### queries(`u64`): `Option<PalletXcmQueryStatus>`[\u200b](#queriesu64-optionpalletxcmquerystatus \"Direct link to queriesu64-optionpalletxcmquerystatus\")\n\n*   **interface**: `api.query.xcmPallet.queries`\n*   **summary**: The ongoing queries.\n\n### queryCounter(): `u64`[\u200b](#querycounter-u64 \"Direct link to querycounter-u64\")\n\n*   **interface**: `api.query.xcmPallet.queryCounter`\n*   **summary**: The latest available query index.\n\n### remoteLockedFungibles(`u32, AccountId32, XcmVersionedAssetId`): `Option<PalletXcmRemoteLockedFungibleRecord>`[\u200b](#remotelockedfungiblesu32-accountid32-xcmversionedassetid-optionpalletxcmremotelockedfungiblerecord \"Direct link to remotelockedfungiblesu32-accountid32-xcmversionedassetid-optionpalletxcmremotelockedfungiblerecord\")\n\n*   **interface**: `api.query.xcmPallet.remoteLockedFungibles`\n*   **summary**: Fungible assets which we know are locked on a remote chain.\n\n### safeXcmVersion(): `Option<u32>`[\u200b](#safexcmversion-optionu32 \"Direct link to safexcmversion-optionu32\")\n\n*   **interface**: `api.query.xcmPallet.safeXcmVersion`\n*   **summary**: Default version to encode XCM when latest version of destination is unknown. If `None`, then the destinations whose XCM version is unknown are considered unreachable.\n\n### supportedVersion(`u32, XcmVersionedMultiLocation`): `Option<u32>`[\u200b](#supportedversionu32-xcmversionedmultilocation-optionu32 \"Direct link to supportedversionu32-xcmversionedmultilocation-optionu32\")\n\n*   **interface**: `api.query.xcmPallet.supportedVersion`\n*   **summary**: The Latest versions that we know various locations support.\n\n### versionDiscoveryQueue(): `Vec<(XcmVersionedMultiLocation,u32)>`[\u200b](#versiondiscoveryqueue-vecxcmversionedmultilocationu32 \"Direct link to versiondiscoveryqueue-vecxcmversionedmultilocationu32\")\n\n*   **interface**: `api.query.xcmPallet.versionDiscoveryQueue`\n*   **summary**: Destinations whose latest XCM version we would like to know. Duplicates not allowed, and the `u32` counter is the number of times that a send to the destination has been attempted, which is used as a prioritization.\n\n### versionNotifiers(`u32, XcmVersionedMultiLocation`): `Option<u64>`[\u200b](#versionnotifiersu32-xcmversionedmultilocation-optionu64 \"Direct link to versionnotifiersu32-xcmversionedmultilocation-optionu64\")\n\n*   **interface**: `api.query.xcmPallet.versionNotifiers`\n*   **summary**: All locations that we have requested version notifications from.\n\n### versionNotifyTargets(`u32, XcmVersionedMultiLocation`): `Option<(u64,SpWeightsWeightV2Weight,u32)>`[\u200b](#versionnotifytargetsu32-xcmversionedmultilocation-optionu64spweightsweightv2weightu32 \"Direct link to versionnotifytargetsu32-xcmversionedmultilocation-optionu64spweightsweightv2weightu32\")\n\n*   **interface**: `api.query.xcmPallet.versionNotifyTargets`\n*   **summary**: The target locations that are subscribed to our version changes, as well as the most recent of our versions we informed them of.\n\n### xcmExecutionSuspended(): `bool`[\u200b](#xcmexecutionsuspended-bool \"Direct link to xcmexecutionsuspended-bool\")\n\n*   **interface**: `api.query.xcmPallet.xcmExecutionSuspended`\n*   **summary**: Global suspension state of the XCM executor.\n\n[Edit this page](https://github.com/polkadot-js/docs/edit/master/docs/polkadot/storage.md)\n\n[Previous\\\n\\\nConstants](/docs/polkadot/constants)\n[Next\\\n\\\nExtrinsics](/docs/polkadot/extrinsics)\n\n*   [auctions](#auctions)\n    *   [auctionCounter(): `u32`](#auctioncounter-u32)\n        \n    *   [auctionInfo(): `Option<(u32,u32)>`](#auctioninfo-optionu32u32)\n        \n    *   [reservedAmounts(`(AccountId32,u32)`): `Option<u128>`](#reservedamountsaccountid32u32-optionu128)\n        \n    *   [winning(`u32`): `Option<[Option<(AccountId32,u32,u128)>;36]>`](#winningu32-optionoptionaccountid32u32u12836)\n        \n*   [authorship](#authorship)\n    *   [author(): `Option<AccountId32>`](#author-optionaccountid32)\n        \n*   [babe](#babe)\n    *   [authorities(): `Vec<(SpConsensusBabeAppPublic,u64)>`](#authorities-vecspconsensusbabeapppublicu64)\n        \n    *   [authorVrfRandomness(): `Option<[u8;32]>`](#authorvrfrandomness-optionu832)\n        \n    *   [currentSlot(): `u64`](#currentslot-u64)\n        \n    *   [epochConfig(): `Option<SpConsensusBabeBabeEpochConfiguration>`](#epochconfig-optionspconsensusbabebabeepochconfiguration)\n        \n    *   [epochIndex(): `u64`](#epochindex-u64)\n        \n    *   [epochStart(): `(u32,u32)`](#epochstart-u32u32)\n        \n    *   [genesisSlot(): `u64`](#genesisslot-u64)\n        \n    *   [initialized(): `Option<Option<SpConsensusBabeDigestsPreDigest>>`](#initialized-optionoptionspconsensusbabedigestspredigest)\n        \n    *   [lateness(): `u32`](#lateness-u32)\n        \n    *   [nextAuthorities(): `Vec<(SpConsensusBabeAppPublic,u64)>`](#nextauthorities-vecspconsensusbabeapppublicu64)\n        \n    *   [nextEpochConfig(): `Option<SpConsensusBabeBabeEpochConfiguration>`](#nextepochconfig-optionspconsensusbabebabeepochconfiguration)\n        \n    *   [nextRandomness(): `[u8;32]`](#nextrandomness-u832)\n        \n    *   [pendingEpochConfigChange(): `Option<SpConsensusBabeDigestsNextConfigDescriptor>`](#pendingepochconfigchange-optionspconsensusbabedigestsnextconfigdescriptor)\n        \n    *   [randomness(): `[u8;32]`](#randomness-u832)\n        \n    *   [segmentIndex(): `u32`](#segmentindex-u32)\n        \n    *   [skippedEpochs(): `Vec<(u64,u32)>`](#skippedepochs-vecu64u32)\n        \n    *   [underConstruction(`u32`): `Vec<[u8;32]>`](#underconstructionu32-vecu832)\n        \n*   [balances](#balances)\n    *   [account(`AccountId32`): `PalletBalancesAccountData`](#accountaccountid32-palletbalancesaccountdata)\n        \n    *   [freezes(`AccountId32`): `Vec<PalletBalancesIdAmount>`](#freezesaccountid32-vecpalletbalancesidamount)\n        \n    *   [holds(`AccountId32`): `Vec<{\"id\":\"PolkadotRuntimeRuntimeHoldReason\",\"amount\":\"u128\"}>`](#holdsaccountid32-vecidpolkadotruntimeruntimeholdreasonamountu128)\n        \n    *   [inactiveIssuance(): `u128`](#inactiveissuance-u128)\n        \n    *   [locks(`AccountId32`): `Vec<PalletBalancesBalanceLock>`](#locksaccountid32-vecpalletbalancesbalancelock)\n        \n    *   [reserves(`AccountId32`): `Vec<PalletBalancesReserveData>`](#reservesaccountid32-vecpalletbalancesreservedata)\n        \n    *   [totalIssuance(): `u128`](#totalissuance-u128)\n        \n*   [bounties](#bounties)\n    *   [bounties(`u32`): `Option<PalletBountiesBounty>`](#bountiesu32-optionpalletbountiesbounty)\n        \n    *   [bountyApprovals(): `Vec<u32>`](#bountyapprovals-vecu32)\n        \n    *   [bountyCount(): `u32`](#bountycount-u32)\n        \n    *   [bountyDescriptions(`u32`): `Option<Bytes>`](#bountydescriptionsu32-optionbytes)\n        \n*   [childBounties](#childbounties)\n    *   [childBounties(`u32, u32`): `Option<PalletChildBountiesChildBounty>`](#childbountiesu32-u32-optionpalletchildbountieschildbounty)\n        \n    *   [childBountyCount(): `u32`](#childbountycount-u32)\n        \n    *   [childBountyDescriptions(`u32`): `Option<Bytes>`](#childbountydescriptionsu32-optionbytes)\n        \n    *   [childrenCuratorFees(`u32`): `u128`](#childrencuratorfeesu32-u128)\n        \n    *   [parentChildBounties(`u32`): `u32`](#parentchildbountiesu32-u32)\n        \n*   [claims](#claims)\n    *   [claims(`EthereumAddress`): `Option<u128>`](#claimsethereumaddress-optionu128)\n        \n    *   [preclaims(`AccountId32`): `Option<EthereumAddress>`](#preclaimsaccountid32-optionethereumaddress)\n        \n    *   [signing(`EthereumAddress`): `Option<PolkadotRuntimeCommonClaimsStatementKind>`](#signingethereumaddress-optionpolkadotruntimecommonclaimsstatementkind)\n        \n    *   [total(): `u128`](#total-u128)\n        \n    *   [vesting(`EthereumAddress`): `Option<(u128,u128,u32)>`](#vestingethereumaddress-optionu128u128u32)\n        \n*   [configuration](#configuration)\n    *   [activeConfig(): `PolkadotRuntimeParachainsConfigurationHostConfiguration`](#activeconfig-polkadotruntimeparachainsconfigurationhostconfiguration)\n        \n    *   [bypassConsistencyCheck(): `bool`](#bypassconsistencycheck-bool)\n        \n    *   [pendingConfigs(): `Vec<(u32,PolkadotRuntimeParachainsConfigurationHostConfiguration)>`](#pendingconfigs-vecu32polkadotruntimeparachainsconfigurationhostconfiguration)\n        \n*   [convictionVoting](#convictionvoting)\n    *   [classLocksFor(`AccountId32`): `Vec<(u16,u128)>`](#classlocksforaccountid32-vecu16u128)\n        \n    *   [votingFor(`AccountId32, u16`): `PalletConvictionVotingVoteVoting`](#votingforaccountid32-u16-palletconvictionvotingvotevoting)\n        \n*   [crowdloan](#crowdloan)\n    *   [endingsCount(): `u32`](#endingscount-u32)\n        \n    *   [funds(`u32`): `Option<PolkadotRuntimeCommonCrowdloanFundInfo>`](#fundsu32-optionpolkadotruntimecommoncrowdloanfundinfo)\n        \n    *   [newRaise(): `Vec<u32>`](#newraise-vecu32)\n        \n    *   [nextFundIndex(): `u32`](#nextfundindex-u32)\n        \n*   [dmp](#dmp)\n    *   [deliveryFeeFactor(`u32`): `u128`](#deliveryfeefactoru32-u128)\n        \n    *   [downwardMessageQueueHeads(`u32`): `H256`](#downwardmessagequeueheadsu32-h256)\n        \n    *   [downwardMessageQueues(`u32`): `Vec<PolkadotCorePrimitivesInboundDownwardMessage>`](#downwardmessagequeuesu32-vecpolkadotcoreprimitivesinbounddownwardmessage)\n        \n*   [electionProviderMultiPhase](#electionprovidermultiphase)\n    *   [currentPhase(): `PalletElectionProviderMultiPhasePhase`](#currentphase-palletelectionprovidermultiphasephase)\n        \n    *   [desiredTargets(): `Option<u32>`](#desiredtargets-optionu32)\n        \n    *   [minimumUntrustedScore(): `Option<SpNposElectionsElectionScore>`](#minimumuntrustedscore-optionspnposelectionselectionscore)\n        \n    *   [queuedSolution(): `Option<PalletElectionProviderMultiPhaseReadySolution>`](#queuedsolution-optionpalletelectionprovidermultiphasereadysolution)\n        \n    *   [round(): `u32`](#round-u32)\n        \n    *   [signedSubmissionIndices(): `Vec<(SpNposElectionsElectionScore,u32,u32)>`](#signedsubmissionindices-vecspnposelectionselectionscoreu32u32)\n        \n    *   [signedSubmissionNextIndex(): `u32`](#signedsubmissionnextindex-u32)\n        \n    *   [signedSubmissionsMap(`u32`): `Option<PalletElectionProviderMultiPhaseSignedSignedSubmission>`](#signedsubmissionsmapu32-optionpalletelectionprovidermultiphasesignedsignedsubmission)\n        \n    *   [snapshot(): `Option<PalletElectionProviderMultiPhaseRoundSnapshot>`](#snapshot-optionpalletelectionprovidermultiphaseroundsnapshot)\n        \n    *   [snapshotMetadata(): `Option<PalletElectionProviderMultiPhaseSolutionOrSnapshotSize>`](#snapshotmetadata-optionpalletelectionprovidermultiphasesolutionorsnapshotsize)\n        \n*   [fastUnstake](#fastunstake)\n    *   [counterForQueue(): `u32`](#counterforqueue-u32)\n        \n    *   [erasToCheckPerBlock(): `u32`](#erastocheckperblock-u32)\n        \n    *   [head(): `Option<PalletFastUnstakeUnstakeRequest>`](#head-optionpalletfastunstakeunstakerequest)\n        \n    *   [queue(`AccountId32`): `Option<u128>`](#queueaccountid32-optionu128)\n        \n*   [grandpa](#grandpa)\n    *   [currentSetId(): `u64`](#currentsetid-u64)\n        \n    *   [nextForced(): `Option<u32>`](#nextforced-optionu32)\n        \n    *   [pendingChange(): `Option<PalletGrandpaStoredPendingChange>`](#pendingchange-optionpalletgrandpastoredpendingchange)\n        \n    *   [setIdSession(`u64`): `Option<u32>`](#setidsessionu64-optionu32)\n        \n    *   [stalled(): `Option<(u32,u32)>`](#stalled-optionu32u32)\n        \n    *   [state(): `PalletGrandpaStoredState`](#state-palletgrandpastoredstate)\n        \n*   [hrmp](#hrmp)\n    *   [hrmpAcceptedChannelRequestCount(`u32`): `u32`](#hrmpacceptedchannelrequestcountu32-u32)\n        \n    *   [hrmpChannelContents(`PolkadotParachainPrimitivesHrmpChannelId`): `Vec<PolkadotCorePrimitivesInboundHrmpMessage>`](#hrmpchannelcontentspolkadotparachainprimitiveshrmpchannelid-vecpolkadotcoreprimitivesinboundhrmpmessage)\n        \n    *   [hrmpChannelDigests(`u32`): `Vec<(u32,Vec<u32>)>`](#hrmpchanneldigestsu32-vecu32vecu32)\n        \n    *   [hrmpChannels(`PolkadotParachainPrimitivesHrmpChannelId`): `Option<PolkadotRuntimeParachainsHrmpHrmpChannel>`](#hrmpchannelspolkadotparachainprimitiveshrmpchannelid-optionpolkadotruntimeparachainshrmphrmpchannel)\n        \n    *   [hrmpCloseChannelRequests(`PolkadotParachainPrimitivesHrmpChannelId`): `Option<Null>`](#hrmpclosechannelrequestspolkadotparachainprimitiveshrmpchannelid-optionnull)\n        \n    *   [hrmpCloseChannelRequestsList(): `Vec<PolkadotParachainPrimitivesHrmpChannelId>`](#hrmpclosechannelrequestslist-vecpolkadotparachainprimitiveshrmpchannelid)\n        \n    *   [hrmpEgressChannelsIndex(`u32`): `Vec<u32>`](#hrmpegresschannelsindexu32-vecu32)\n        \n    *   [hrmpIngressChannelsIndex(`u32`): `Vec<u32>`](#hrmpingresschannelsindexu32-vecu32)\n        \n    *   [hrmpOpenChannelRequestCount(`u32`): `u32`](#hrmpopenchannelrequestcountu32-u32)\n        \n    *   [hrmpOpenChannelRequests(`PolkadotParachainPrimitivesHrmpChannelId`): `Option<PolkadotRuntimeParachainsHrmpHrmpOpenChannelRequest>`](#hrmpopenchannelrequestspolkadotparachainprimitiveshrmpchannelid-optionpolkadotruntimeparachainshrmphrmpopenchannelrequest)\n        \n    *   [hrmpOpenChannelRequestsList(): `Vec<PolkadotParachainPrimitivesHrmpChannelId>`](#hrmpopenchannelrequestslist-vecpolkadotparachainprimitiveshrmpchannelid)\n        \n    *   [hrmpWatermarks(`u32`): `Option<u32>`](#hrmpwatermarksu32-optionu32)\n        \n*   [identity](#identity)\n    *   [identityOf(`AccountId32`): `Option<PalletIdentityRegistration>`](#identityofaccountid32-optionpalletidentityregistration)\n        \n    *   [registrars(): `Vec<Option<PalletIdentityRegistrarInfo>>`](#registrars-vecoptionpalletidentityregistrarinfo)\n        \n    *   [subsOf(`AccountId32`): `(u128,Vec<AccountId32>)`](#subsofaccountid32-u128vecaccountid32)\n        \n    *   [superOf(`AccountId32`): `Option<(AccountId32,Data)>`](#superofaccountid32-optionaccountid32data)\n        \n*   [imOnline](#imonline)\n    *   [authoredBlocks(`u32, AccountId32`): `u32`](#authoredblocksu32-accountid32-u32)\n        \n    *   [heartbeatAfter(): `u32`](#heartbeatafter-u32)\n        \n    *   [keys(): `Vec<PalletImOnlineSr25519AppSr25519Public>`](#keys-vecpalletimonlinesr25519appsr25519public)\n        \n    *   [receivedHeartbeats(`u32, u32`): `Option<bool>`](#receivedheartbeatsu32-u32-optionbool)\n        \n*   [indices](#indices)\n    *   [accounts(`u32`): `Option<(AccountId32,u128,bool)>`](#accountsu32-optionaccountid32u128bool)\n        \n*   [initializer](#initializer)\n    *   [bufferedSessionChanges(): `Vec<PolkadotRuntimeParachainsInitializerBufferedSessionChange>`](#bufferedsessionchanges-vecpolkadotruntimeparachainsinitializerbufferedsessionchange)\n        \n    *   [hasInitialized(): `Option<Null>`](#hasinitialized-optionnull)\n        \n*   [messageQueue](#messagequeue)\n    *   [bookStateFor(`PolkadotRuntimeParachainsInclusionAggregateMessageOrigin`): `PalletMessageQueueBookState`](#bookstateforpolkadotruntimeparachainsinclusionaggregatemessageorigin-palletmessagequeuebookstate)\n        \n    *   [pages(`PolkadotRuntimeParachainsInclusionAggregateMessageOrigin, u32`): `Option<PalletMessageQueuePage>`](#pagespolkadotruntimeparachainsinclusionaggregatemessageorigin-u32-optionpalletmessagequeuepage)\n        \n    *   [serviceHead(): `Option<PolkadotRuntimeParachainsInclusionAggregateMessageOrigin>`](#servicehead-optionpolkadotruntimeparachainsinclusionaggregatemessageorigin)\n        \n*   [multisig](#multisig)\n    *   [multisigs(`AccountId32, [u8;32]`): `Option<PalletMultisigMultisig>`](#multisigsaccountid32-u832-optionpalletmultisigmultisig)\n        \n*   [nominationPools](#nominationpools)\n    *   [bondedPools(`u32`): `Option<PalletNominationPoolsBondedPoolInner>`](#bondedpoolsu32-optionpalletnominationpoolsbondedpoolinner)\n        \n    *   [claimPermissions(`AccountId32`): `PalletNominationPoolsClaimPermission`](#claimpermissionsaccountid32-palletnominationpoolsclaimpermission)\n        \n    *   [counterForBondedPools(): `u32`](#counterforbondedpools-u32)\n        \n    *   [counterForMetadata(): `u32`](#counterformetadata-u32)\n        \n    *   [counterForPoolMembers(): `u32`](#counterforpoolmembers-u32)\n        \n    *   [counterForReversePoolIdLookup(): `u32`](#counterforreversepoolidlookup-u32)\n        \n    *   [counterForRewardPools(): `u32`](#counterforrewardpools-u32)\n        \n    *   [counterForSubPoolsStorage(): `u32`](#counterforsubpoolsstorage-u32)\n        \n    *   [globalMaxCommission(): `Option<Perbill>`](#globalmaxcommission-optionperbill)\n        \n    *   [lastPoolId(): `u32`](#lastpoolid-u32)\n        \n    *   [maxPoolMembers(): `Option<u32>`](#maxpoolmembers-optionu32)\n        \n    *   [maxPoolMembersPerPool(): `Option<u32>`](#maxpoolmembersperpool-optionu32)\n        \n    *   [maxPools(): `Option<u32>`](#maxpools-optionu32)\n        \n    *   [metadata(`u32`): `Bytes`](#metadatau32-bytes)\n        \n    *   [minCreateBond(): `u128`](#mincreatebond-u128)\n        \n    *   [minJoinBond(): `u128`](#minjoinbond-u128)\n        \n    *   [poolMembers(`AccountId32`): `Option<PalletNominationPoolsPoolMember>`](#poolmembersaccountid32-optionpalletnominationpoolspoolmember)\n        \n    *   [reversePoolIdLookup(`AccountId32`): `Option<u32>`](#reversepoolidlookupaccountid32-optionu32)\n        \n    *   [rewardPools(`u32`): `Option<PalletNominationPoolsRewardPool>`](#rewardpoolsu32-optionpalletnominationpoolsrewardpool)\n        \n    *   [subPoolsStorage(`u32`): `Option<PalletNominationPoolsSubPools>`](#subpoolsstorageu32-optionpalletnominationpoolssubpools)\n        \n*   [offences](#offences)\n    *   [concurrentReportsIndex(`[u8;16], Bytes`): `Vec<H256>`](#concurrentreportsindexu816-bytes-vech256)\n        \n    *   [reports(`H256`): `Option<SpStakingOffenceOffenceDetails>`](#reportsh256-optionspstakingoffenceoffencedetails)\n        \n*   [paraInclusion](#parainclusion)\n    *   [availabilityBitfields(`u32`): `Option<PolkadotRuntimeParachainsInclusionAvailabilityBitfieldRecord>`](#availabilitybitfieldsu32-optionpolkadotruntimeparachainsinclusionavailabilitybitfieldrecord)\n        \n    *   [pendingAvailability(`u32`): `Option<PolkadotRuntimeParachainsInclusionCandidatePendingAvailability>`](#pendingavailabilityu32-optionpolkadotruntimeparachainsinclusioncandidatependingavailability)\n        \n    *   [pendingAvailabilityCommitments(`u32`): `Option<PolkadotPrimitivesV5CandidateCommitments>`](#pendingavailabilitycommitmentsu32-optionpolkadotprimitivesv5candidatecommitments)\n        \n*   [paraInherent](#parainherent)\n    *   [included(): `Option<Null>`](#included-optionnull)\n        \n    *   [onChainVotes(): `Option<PolkadotPrimitivesV5ScrapedOnChainVotes>`](#onchainvotes-optionpolkadotprimitivesv5scrapedonchainvotes)\n        \n*   [paras](#paras)\n    *   [actionsQueue(`u32`): `Vec<u32>`](#actionsqueueu32-vecu32)\n        \n    *   [codeByHash(`H256`): `Option<Bytes>`](#codebyhashh256-optionbytes)\n        \n    *   [codeByHashRefs(`H256`): `u32`](#codebyhashrefsh256-u32)\n        \n    *   [currentCodeHash(`u32`): `Option<H256>`](#currentcodehashu32-optionh256)\n        \n    *   [futureCodeHash(`u32`): `Option<H256>`](#futurecodehashu32-optionh256)\n        \n    *   [futureCodeUpgrades(`u32`): `Option<u32>`](#futurecodeupgradesu32-optionu32)\n        \n    *   [heads(`u32`): `Option<Bytes>`](#headsu32-optionbytes)\n        \n    *   [mostRecentContext(`u32`): `Option<u32>`](#mostrecentcontextu32-optionu32)\n        \n    *   [parachains(): `Vec<u32>`](#parachains-vecu32)\n        \n    *   [paraLifecycles(`u32`): `Option<PolkadotRuntimeParachainsParasParaLifecycle>`](#paralifecyclesu32-optionpolkadotruntimeparachainsparasparalifecycle)\n        \n    *   [pastCodeHash(`(u32,u32)`): `Option<H256>`](#pastcodehashu32u32-optionh256)\n        \n    *   [pastCodeMeta(`u32`): `PolkadotRuntimeParachainsParasParaPastCodeMeta`](#pastcodemetau32-polkadotruntimeparachainsparasparapastcodemeta)\n        \n    *   [pastCodePruning(): `Vec<(u32,u32)>`](#pastcodepruning-vecu32u32)\n        \n    *   [pvfActiveVoteList(): `Vec<H256>`](#pvfactivevotelist-vech256)\n        \n    *   [pvfActiveVoteMap(`H256`): `Option<PolkadotRuntimeParachainsParasPvfCheckActiveVoteState>`](#pvfactivevotemaph256-optionpolkadotruntimeparachainsparaspvfcheckactivevotestate)\n        \n    *   [upcomingParasGenesis(`u32`): `Option<PolkadotRuntimeParachainsParasParaGenesisArgs>`](#upcomingparasgenesisu32-optionpolkadotruntimeparachainsparasparagenesisargs)\n        \n    *   [upcomingUpgrades(): `Vec<(u32,u32)>`](#upcomingupgrades-vecu32u32)\n        \n    *   [upgradeCooldowns(): `Vec<(u32,u32)>`](#upgradecooldowns-vecu32u32)\n        \n    *   [upgradeGoAheadSignal(`u32`): `Option<PolkadotPrimitivesV5UpgradeGoAhead>`](#upgradegoaheadsignalu32-optionpolkadotprimitivesv5upgradegoahead)\n        \n    *   [upgradeRestrictionSignal(`u32`): `Option<PolkadotPrimitivesV5UpgradeRestriction>`](#upgraderestrictionsignalu32-optionpolkadotprimitivesv5upgraderestriction)\n        \n*   [paraScheduler](#parascheduler)\n    *   [availabilityCores(): `Vec<PolkadotPrimitivesV5CoreOccupied>`](#availabilitycores-vecpolkadotprimitivesv5coreoccupied)\n        \n    *   [claimQueue(): `BTreeMap<u32, Vec<Option<PolkadotPrimitivesV5ParasEntry>>>`](#claimqueue-btreemapu32-vecoptionpolkadotprimitivesv5parasentry)\n        \n    *   [sessionStartBlock(): `u32`](#sessionstartblock-u32)\n        \n    *   [validatorGroups(): `Vec<Vec<u32>>`](#validatorgroups-vecvecu32)\n        \n*   [parasDisputes](#parasdisputes)\n    *   [backersOnDisputes(`u32, H256`): `Option<BTreeSet<u32>>`](#backersondisputesu32-h256-optionbtreesetu32)\n        \n    *   [disputes(`u32, H256`): `Option<PolkadotPrimitivesV5DisputeState>`](#disputesu32-h256-optionpolkadotprimitivesv5disputestate)\n        \n    *   [frozen(): `Option<u32>`](#frozen-optionu32)\n        \n    *   [included(`u32, H256`): `Option<u32>`](#includedu32-h256-optionu32)\n        \n    *   [lastPrunedSession(): `Option<u32>`](#lastprunedsession-optionu32)\n        \n*   [paraSessionInfo](#parasessioninfo)\n    *   [accountKeys(`u32`): `Option<Vec<AccountId32>>`](#accountkeysu32-optionvecaccountid32)\n        \n    *   [assignmentKeysUnsafe(): `Vec<PolkadotPrimitivesV5AssignmentAppPublic>`](#assignmentkeysunsafe-vecpolkadotprimitivesv5assignmentapppublic)\n        \n    *   [earliestStoredSession(): `u32`](#earlieststoredsession-u32)\n        \n    *   [sessionExecutorParams(`u32`): `Option<PolkadotPrimitivesV5ExecutorParams>`](#sessionexecutorparamsu32-optionpolkadotprimitivesv5executorparams)\n        \n    *   [sessions(`u32`): `Option<PolkadotPrimitivesV5SessionInfo>`](#sessionsu32-optionpolkadotprimitivesv5sessioninfo)\n        \n*   [parasShared](#parasshared)\n    *   [activeValidatorIndices(): `Vec<u32>`](#activevalidatorindices-vecu32)\n        \n    *   [activeValidatorKeys(): `Vec<PolkadotPrimitivesV5ValidatorAppPublic>`](#activevalidatorkeys-vecpolkadotprimitivesv5validatorapppublic)\n        \n    *   [allowedRelayParents(): `PolkadotRuntimeParachainsSharedAllowedRelayParentsTracker`](#allowedrelayparents-polkadotruntimeparachainssharedallowedrelayparentstracker)\n        \n    *   [currentSessionIndex(): `u32`](#currentsessionindex-u32)\n        \n*   [parasSlashing](#parasslashing)\n    *   [unappliedSlashes(`u32, H256`): `Option<PolkadotPrimitivesV5SlashingPendingSlashes>`](#unappliedslashesu32-h256-optionpolkadotprimitivesv5slashingpendingslashes)\n        \n    *   [validatorSetCounts(`u32`): `Option<u32>`](#validatorsetcountsu32-optionu32)\n        \n*   [preimage](#preimage)\n    *   [preimageFor(`(H256,u32)`): `Option<Bytes>`](#preimageforh256u32-optionbytes)\n        \n    *   [statusFor(`H256`): `Option<PalletPreimageRequestStatus>`](#statusforh256-optionpalletpreimagerequeststatus)\n        \n*   [proxy](#proxy)\n    *   [announcements(`AccountId32`): `(Vec<PalletProxyAnnouncement>,u128)`](#announcementsaccountid32-vecpalletproxyannouncementu128)\n        \n    *   [proxies(`AccountId32`): `(Vec<PalletProxyProxyDefinition>,u128)`](#proxiesaccountid32-vecpalletproxyproxydefinitionu128)\n        \n*   [referenda](#referenda)\n    *   [decidingCount(`u16`): `u32`](#decidingcountu16-u32)\n        \n    *   [metadataOf(`u32`): `Option<H256>`](#metadataofu32-optionh256)\n        \n    *   [referendumCount(): `u32`](#referendumcount-u32)\n        \n    *   [referendumInfoFor(`u32`): `Option<PalletReferendaReferendumInfo>`](#referenduminfoforu32-optionpalletreferendareferenduminfo)\n        \n    *   [trackQueue(`u16`): `Vec<(u32,u128)>`](#trackqueueu16-vecu32u128)\n        \n*   [registrar](#registrar)\n    *   [nextFreeParaId(): `u32`](#nextfreeparaid-u32)\n        \n    *   [paras(`u32`): `Option<PolkadotRuntimeCommonParasRegistrarParaInfo>`](#parasu32-optionpolkadotruntimecommonparasregistrarparainfo)\n        \n    *   [pendingSwap(`u32`): `Option<u32>`](#pendingswapu32-optionu32)\n        \n*   [scheduler](#scheduler)\n    *   [agenda(`u32`): `Vec<Option<PalletSchedulerScheduled>>`](#agendau32-vecoptionpalletschedulerscheduled)\n        \n    *   [incompleteSince(): `Option<u32>`](#incompletesince-optionu32)\n        \n    *   [lookup(`[u8;32]`): `Option<(u32,u32)>`](#lookupu832-optionu32u32)\n        \n*   [session](#session)\n    *   [currentIndex(): `u32`](#currentindex-u32)\n        \n    *   [disabledValidators(): `Vec<u32>`](#disabledvalidators-vecu32)\n        \n    *   [keyOwner(`(SpCoreCryptoKeyTypeId,Bytes)`): `Option<AccountId32>`](#keyownerspcorecryptokeytypeidbytes-optionaccountid32)\n        \n    *   [nextKeys(`AccountId32`): `Option<PolkadotRuntimeSessionKeys>`](#nextkeysaccountid32-optionpolkadotruntimesessionkeys)\n        \n    *   [queuedChanged(): `bool`](#queuedchanged-bool)\n        \n    *   [queuedKeys(): `Vec<(AccountId32,PolkadotRuntimeSessionKeys)>`](#queuedkeys-vecaccountid32polkadotruntimesessionkeys)\n        \n    *   [validators(): `Vec<AccountId32>`](#validators-vecaccountid32)\n        \n*   [slots](#slots)\n    *   [leases(`u32`): `Vec<Option<(AccountId32,u128)>>`](#leasesu32-vecoptionaccountid32u128)\n        \n*   [staking](#staking)\n    *   [activeEra(): `Option<PalletStakingActiveEraInfo>`](#activeera-optionpalletstakingactiveerainfo)\n        \n    *   [bonded(`AccountId32`): `Option<AccountId32>`](#bondedaccountid32-optionaccountid32)\n        \n    *   [bondedEras(): `Vec<(u32,u32)>`](#bondederas-vecu32u32)\n        \n    *   [canceledSlashPayout(): `u128`](#canceledslashpayout-u128)\n        \n    *   [chillThreshold(): `Option<Percent>`](#chillthreshold-optionpercent)\n        \n    *   [counterForNominators(): `u32`](#counterfornominators-u32)\n        \n    *   [counterForValidators(): `u32`](#counterforvalidators-u32)\n        \n    *   [currentEra(): `Option<u32>`](#currentera-optionu32)\n        \n    *   [currentPlannedSession(): `u32`](#currentplannedsession-u32)\n        \n    *   [erasRewardPoints(`u32`): `PalletStakingEraRewardPoints`](#erasrewardpointsu32-palletstakingerarewardpoints)\n        \n    *   [erasStakers(`u32, AccountId32`): `PalletStakingExposure`](#erasstakersu32-accountid32-palletstakingexposure)\n        \n    *   [erasStakersClipped(`u32, AccountId32`): `PalletStakingExposure`](#erasstakersclippedu32-accountid32-palletstakingexposure)\n        \n    *   [erasStartSessionIndex(`u32`): `Option<u32>`](#erasstartsessionindexu32-optionu32)\n        \n    *   [erasTotalStake(`u32`): `u128`](#erastotalstakeu32-u128)\n        \n    *   [erasValidatorPrefs(`u32, AccountId32`): `PalletStakingValidatorPrefs`](#erasvalidatorprefsu32-accountid32-palletstakingvalidatorprefs)\n        \n    *   [erasValidatorReward(`u32`): `Option<u128>`](#erasvalidatorrewardu32-optionu128)\n        \n    *   [forceEra(): `PalletStakingForcing`](#forceera-palletstakingforcing)\n        \n    *   [invulnerables(): `Vec<AccountId32>`](#invulnerables-vecaccountid32)\n        \n    *   [ledger(`AccountId32`): `Option<PalletStakingStakingLedger>`](#ledgeraccountid32-optionpalletstakingstakingledger)\n        \n    *   [maxNominatorsCount(): `Option<u32>`](#maxnominatorscount-optionu32)\n        \n    *   [maxValidatorsCount(): `Option<u32>`](#maxvalidatorscount-optionu32)\n        \n    *   [minCommission(): `Perbill`](#mincommission-perbill)\n        \n    *   [minimumActiveStake(): `u128`](#minimumactivestake-u128)\n        \n    *   [minimumValidatorCount(): `u32`](#minimumvalidatorcount-u32)\n        \n    *   [minNominatorBond(): `u128`](#minnominatorbond-u128)\n        \n    *   [minValidatorBond(): `u128`](#minvalidatorbond-u128)\n        \n    *   [nominators(`AccountId32`): `Option<PalletStakingNominations>`](#nominatorsaccountid32-optionpalletstakingnominations)\n        \n    *   [nominatorSlashInEra(`u32, AccountId32`): `Option<u128>`](#nominatorslashinerau32-accountid32-optionu128)\n        \n    *   [offendingValidators(): `Vec<(u32,bool)>`](#offendingvalidators-vecu32bool)\n        \n    *   [payee(`AccountId32`): `PalletStakingRewardDestination`](#payeeaccountid32-palletstakingrewarddestination)\n        \n    *   [slashingSpans(`AccountId32`): `Option<PalletStakingSlashingSlashingSpans>`](#slashingspansaccountid32-optionpalletstakingslashingslashingspans)\n        \n    *   [slashRewardFraction(): `Perbill`](#slashrewardfraction-perbill)\n        \n    *   [spanSlash(`(AccountId32,u32)`): `PalletStakingSlashingSpanRecord`](#spanslashaccountid32u32-palletstakingslashingspanrecord)\n        \n    *   [unappliedSlashes(`u32`): `Vec<PalletStakingUnappliedSlash>`](#unappliedslashesu32-vecpalletstakingunappliedslash)\n        \n    *   [validatorCount(): `u32`](#validatorcount-u32)\n        \n    *   [validators(`AccountId32`): `PalletStakingValidatorPrefs`](#validatorsaccountid32-palletstakingvalidatorprefs)\n        \n    *   [validatorSlashInEra(`u32, AccountId32`): `Option<(Perbill,u128)>`](#validatorslashinerau32-accountid32-optionperbillu128)\n        \n*   [substrate](#substrate)\n    *   [changesTrieConfig(): `u32`](#changestrieconfig-u32)\n        \n    *   [childStorageKeyPrefix(): `u32`](#childstoragekeyprefix-u32)\n        \n    *   [code(): `Bytes`](#code-bytes)\n        \n    *   [extrinsicIndex(): `u32`](#extrinsicindex-u32)\n        \n    *   [heapPages(): `u64`](#heappages-u64)\n        \n    *   [intrablockEntropy(): `[u8;32]`](#intrablockentropy-u832)\n        \n*   [system](#system)\n    *   [account(`AccountId32`): `FrameSystemAccountInfo`](#accountaccountid32-framesystemaccountinfo)\n        \n    *   [allExtrinsicsLen(): `Option<u32>`](#allextrinsicslen-optionu32)\n        \n    *   [blockHash(`u32`): `H256`](#blockhashu32-h256)\n        \n    *   [blockWeight(): `FrameSupportDispatchPerDispatchClassWeight`](#blockweight-framesupportdispatchperdispatchclassweight)\n        \n    *   [digest(): `SpRuntimeDigest`](#digest-spruntimedigest)\n        \n    *   [eventCount(): `u32`](#eventcount-u32)\n        \n    *   [events(): `Vec<FrameSystemEventRecord>`](#events-vecframesystemeventrecord)\n        \n    *   [eventTopics(`H256`): `Vec<(u32,u32)>`](#eventtopicsh256-vecu32u32)\n        \n    *   [executionPhase(): `Option<FrameSystemPhase>`](#executionphase-optionframesystemphase)\n        \n    *   [extrinsicCount(): `Option<u32>`](#extrinsiccount-optionu32)\n        \n    *   [extrinsicData(`u32`): `Bytes`](#extrinsicdatau32-bytes)\n        \n    *   [lastRuntimeUpgrade(): `Option<FrameSystemLastRuntimeUpgradeInfo>`](#lastruntimeupgrade-optionframesystemlastruntimeupgradeinfo)\n        \n    *   [number(): `u32`](#number-u32)\n        \n    *   [parentHash(): `H256`](#parenthash-h256)\n        \n    *   [upgradedToTripleRefCount(): `bool`](#upgradedtotriplerefcount-bool)\n        \n    *   [upgradedToU32RefCount(): `bool`](#upgradedtou32refcount-bool)\n        \n*   [timestamp](#timestamp)\n    *   [didUpdate(): `bool`](#didupdate-bool)\n        \n    *   [now(): `u64`](#now-u64)\n        \n*   [transactionPayment](#transactionpayment)\n    *   [nextFeeMultiplier(): `u128`](#nextfeemultiplier-u128)\n        \n    *   [storageVersion(): `PalletTransactionPaymentReleases`](#storageversion-pallettransactionpaymentreleases)\n        \n*   [treasury](#treasury)\n    *   [approvals(): `Vec<u32>`](#approvals-vecu32)\n        \n    *   [deactivated(): `u128`](#deactivated-u128)\n        \n    *   [proposalCount(): `u32`](#proposalcount-u32)\n        \n    *   [proposals(`u32`): `Option<PalletTreasuryProposal>`](#proposalsu32-optionpallettreasuryproposal)\n        \n*   [vesting](#vesting)\n    *   [storageVersion(): `PalletVestingReleases`](#storageversion-palletvestingreleases)\n        \n    *   [vesting(`AccountId32`): `Option<Vec<PalletVestingVestingInfo>>`](#vestingaccountid32-optionvecpalletvestingvestinginfo)\n        \n*   [voterList](#voterlist)\n    *   [counterForListNodes(): `u32`](#counterforlistnodes-u32)\n        \n    *   [listBags(`u64`): `Option<PalletBagsListListBag>`](#listbagsu64-optionpalletbagslistlistbag)\n        \n    *   [listNodes(`AccountId32`): `Option<PalletBagsListListNode>`](#listnodesaccountid32-optionpalletbagslistlistnode)\n        \n*   [whitelist](#whitelist)\n    *   [whitelistedCall(`H256`): `Option<Null>`](#whitelistedcallh256-optionnull)\n        \n*   [xcmPallet](#xcmpallet)\n    *   [assetTraps(`H256`): `u32`](#assettrapsh256-u32)\n        \n    *   [currentMigration(): `Option<PalletXcmVersionMigrationStage>`](#currentmigration-optionpalletxcmversionmigrationstage)\n        \n    *   [lockedFungibles(`AccountId32`): `Option<Vec<(u128,XcmVersionedMultiLocation)>>`](#lockedfungiblesaccountid32-optionvecu128xcmversionedmultilocation)\n        \n    *   [queries(`u64`): `Option<PalletXcmQueryStatus>`](#queriesu64-optionpalletxcmquerystatus)\n        \n    *   [queryCounter(): `u64`](#querycounter-u64)\n        \n    *   [remoteLockedFungibles(`u32, AccountId32, XcmVersionedAssetId`): `Option<PalletXcmRemoteLockedFungibleRecord>`](#remotelockedfungiblesu32-accountid32-xcmversionedassetid-optionpalletxcmremotelockedfungiblerecord)\n        \n    *   [safeXcmVersion(): `Option<u32>`](#safexcmversion-optionu32)\n        \n    *   [supportedVersion(`u32, XcmVersionedMultiLocation`): `Option<u32>`](#supportedversionu32-xcmversionedmultilocation-optionu32)\n        \n    *   [versionDiscoveryQueue(): `Vec<(XcmVersionedMultiLocation,u32)>`](#versiondiscoveryqueue-vecxcmversionedmultilocationu32)\n        \n    *   [versionNotifiers(`u32, XcmVersionedMultiLocation`): `Option<u64>`](#versionnotifiersu32-xcmversionedmultilocation-optionu64)\n        \n    *   [versionNotifyTargets(`u32, XcmVersionedMultiLocation`): `Option<(u64,SpWeightsWeightV2Weight,u32)>`](#versionnotifytargetsu32-xcmversionedmultilocation-optionu64spweightsweightv2weightu32)\n        \n    *   [xcmExecutionSuspended(): `bool`](#xcmexecutionsuspended-bool)"}, {"title": null, "description": null, "source_url": "https://polkadot.js.org/docs/substrate", "markdown": "[Skip to main content](#__docusaurus_skipToContent_fallback)\n\n[![polkadot{.js}](https://polkadot.js.org/docs/img/logo.svg)\\\n\\\n**polkadot{.js}**](/docs/)\n\n[Apps UI (Wallet)](https://polkadot.js.org/apps/)\n[GitHub](https://github.com/polkadot-js/docs)\n\nSearch...\n\n*   [Introduction](#)\n    \n*   [API](#)\n    \n*   [Metadata](#)\n    \n    *   [Substrate](#)\n        \n        *   [Overview](/docs/substrate)\n            \n        *   [Runtime](/docs/substrate/runtime)\n            \n        *   [JSON-RPC](/docs/substrate/rpc)\n            \n        *   [Constants](/docs/substrate/constants)\n            \n        *   [Storage](/docs/substrate/storage)\n            \n        *   [Extrinsics](/docs/substrate/extrinsics)\n            \n        *   [Events](/docs/substrate/events)\n            \n        *   [Errors](/docs/substrate/errors)\n            \n    *   [Polkadot](#)\n        \n    *   [Kusama](#)\n        \n*   [Keyring](#)\n    \n*   [Crypto Utilities](#)\n    \n*   [Contracts (API)](#)\n    \n*   [Identicon (UI)](#)\n    \n*   [Keyring (UI)](#)\n    \n*   [Extension](#)\n    \n*   [Run, Bundle, Test](#)\n    \n\n*   [](/docs/)\n    \n*   Metadata\n*   Substrate\n*   Overview\n\nOverview\n========\n\nAs part of a running node, some information is exposed as part of the metadata. These sections provide a static list of available interfaces as generated from a running Substrate node.\n\n[Edit this page](https://github.com/polkadot-js/docs/edit/master/docs/substrate/intro.md)\n\n[Previous\\\n\\\nFAQ](/docs/api/FAQ)\n[Next\\\n\\\nRuntime](/docs/substrate/runtime)"}, {"title": null, "description": null, "source_url": "https://polkadot.js.org/docs/substrate/constants", "markdown": "[Skip to main content](#__docusaurus_skipToContent_fallback)\n\n[![polkadot{.js}](https://polkadot.js.org/docs/img/logo.svg)\\\n\\\n**polkadot{.js}**](/docs/)\n\n[Apps UI (Wallet)](https://polkadot.js.org/apps/)\n[GitHub](https://github.com/polkadot-js/docs)\n\nSearch...\n\n*   [Introduction](#)\n    \n*   [API](#)\n    \n*   [Metadata](#)\n    \n    *   [Substrate](#)\n        \n        *   [Overview](/docs/substrate)\n            \n        *   [Runtime](/docs/substrate/runtime)\n            \n        *   [JSON-RPC](/docs/substrate/rpc)\n            \n        *   [Constants](/docs/substrate/constants)\n            \n        *   [Storage](/docs/substrate/storage)\n            \n        *   [Extrinsics](/docs/substrate/extrinsics)\n            \n        *   [Events](/docs/substrate/events)\n            \n        *   [Errors](/docs/substrate/errors)\n            \n    *   [Polkadot](#)\n        \n    *   [Kusama](#)\n        \n*   [Keyring](#)\n    \n*   [Crypto Utilities](#)\n    \n*   [Contracts (API)](#)\n    \n*   [Identicon (UI)](#)\n    \n*   [Keyring (UI)](#)\n    \n*   [Extension](#)\n    \n*   [Run, Bundle, Test](#)\n    \n\n*   [](/docs/)\n    \n*   Metadata\n*   Substrate\n*   Constants\n\nOn this page\n\nConstants\n=========\n\nThe following sections contain the module constants, also known as parameter types. These can only be changed as part of a runtime upgrade. On the api, these are exposed via `api.consts.<module>.<method>`.\n\n(NOTE: These were generated from a static/snapshot view of a recent default Substrate runtime. Some items may not be available in older nodes, or in any customized implementations.)\n\n*   **[alliance](#alliance)\n    **\n    \n*   **[allianceMotion](#alliancemotion)\n    **\n    \n*   **[assetConversion](#assetconversion)\n    **\n    \n*   **[assets](#assets)\n    **\n    \n*   **[babe](#babe)\n    **\n    \n*   **[balances](#balances)\n    **\n    \n*   **[bounties](#bounties)\n    **\n    \n*   **[broker](#broker)\n    **\n    \n*   **[childBounties](#childbounties)\n    **\n    \n*   **[contracts](#contracts)\n    **\n    \n*   **[convictionVoting](#convictionvoting)\n    **\n    \n*   **[coreFellowship](#corefellowship)\n    **\n    \n*   **[council](#council)\n    **\n    \n*   **[democracy](#democracy)\n    **\n    \n*   **[electionProviderMultiPhase](#electionprovidermultiphase)\n    **\n    \n*   **[elections](#elections)\n    **\n    \n*   **[fastUnstake](#fastunstake)\n    **\n    \n*   **[grandpa](#grandpa)\n    **\n    \n*   **[identity](#identity)\n    **\n    \n*   **[imOnline](#imonline)\n    **\n    \n*   **[indices](#indices)\n    **\n    \n*   **[lottery](#lottery)\n    **\n    \n*   **[messageQueue](#messagequeue)\n    **\n    \n*   **[mixnet](#mixnet)\n    **\n    \n*   **[multisig](#multisig)\n    **\n    \n*   **[nftFractionalization](#nftfractionalization)\n    **\n    \n*   **[nfts](#nfts)\n    **\n    \n*   **[nis](#nis)\n    **\n    \n*   **[nominationPools](#nominationpools)\n    **\n    \n*   **[poolAssets](#poolassets)\n    **\n    \n*   **[proxy](#proxy)\n    **\n    \n*   **[rankedPolls](#rankedpolls)\n    **\n    \n*   **[recovery](#recovery)\n    **\n    \n*   **[referenda](#referenda)\n    **\n    \n*   **[safeMode](#safemode)\n    **\n    \n*   **[salary](#salary)\n    **\n    \n*   **[scheduler](#scheduler)\n    **\n    \n*   **[society](#society)\n    **\n    \n*   **[staking](#staking)\n    **\n    \n*   **[statement](#statement)\n    **\n    \n*   **[stateTrieMigration](#statetriemigration)\n    **\n    \n*   **[system](#system)\n    **\n    \n*   **[technicalCommittee](#technicalcommittee)\n    **\n    \n*   **[timestamp](#timestamp)\n    **\n    \n*   **[tips](#tips)\n    **\n    \n*   **[transactionPayment](#transactionpayment)\n    **\n    \n*   **[treasury](#treasury)\n    **\n    \n*   **[txPause](#txpause)\n    **\n    \n*   **[uniques](#uniques)\n    **\n    \n*   **[utility](#utility)\n    **\n    \n*   **[vesting](#vesting)\n    **\n    \n*   **[voterList](#voterlist)\n    **\n    \n\n* * *\n\nalliance[\u200b](#alliance \"Direct link to alliance\")\n\n-------------------------------------------------\n\n### allyDeposit: `u128`[\u200b](#allydeposit-u128 \"Direct link to allydeposit-u128\")\n\n*   **interface**: `api.consts.alliance.allyDeposit`\n*   **summary**: The deposit required for submitting candidacy.\n\n### maxAnnouncementsCount: `u32`[\u200b](#maxannouncementscount-u32 \"Direct link to maxannouncementscount-u32\")\n\n*   **interface**: `api.consts.alliance.maxAnnouncementsCount`\n*   **summary**: The maximum number of announcements.\n\n### maxMembersCount: `u32`[\u200b](#maxmemberscount-u32 \"Direct link to maxmemberscount-u32\")\n\n*   **interface**: `api.consts.alliance.maxMembersCount`\n*   **summary**: The maximum number of members per member role.\n\n### maxUnscrupulousItems: `u32`[\u200b](#maxunscrupulousitems-u32 \"Direct link to maxunscrupulousitems-u32\")\n\n*   **interface**: `api.consts.alliance.maxUnscrupulousItems`\n*   **summary**: The maximum number of the unscrupulous items supported by the pallet.\n\n### maxWebsiteUrlLength: `u32`[\u200b](#maxwebsiteurllength-u32 \"Direct link to maxwebsiteurllength-u32\")\n\n*   **interface**: `api.consts.alliance.maxWebsiteUrlLength`\n*   **summary**: The maximum length of a website URL.\n\n* * *\n\nallianceMotion[\u200b](#alliancemotion \"Direct link to allianceMotion\")\n\n-------------------------------------------------------------------\n\n### maxProposalWeight: `SpWeightsWeightV2Weight`[\u200b](#maxproposalweight-spweightsweightv2weight \"Direct link to maxproposalweight-spweightsweightv2weight\")\n\n*   **interface**: `api.consts.allianceMotion.maxProposalWeight`\n*   **summary**: The maximum weight of a dispatch call that can be proposed and executed.\n\n* * *\n\nassetConversion[\u200b](#assetconversion \"Direct link to assetConversion\")\n\n----------------------------------------------------------------------\n\n### allowMultiAssetPools: `bool`[\u200b](#allowmultiassetpools-bool \"Direct link to allowmultiassetpools-bool\")\n\n*   **interface**: `api.consts.assetConversion.allowMultiAssetPools`\n*   **summary**: A setting to allow creating pools with both non-native assets.\n\n### liquidityWithdrawalFee: `Permill`[\u200b](#liquiditywithdrawalfee-permill \"Direct link to liquiditywithdrawalfee-permill\")\n\n*   **interface**: `api.consts.assetConversion.liquidityWithdrawalFee`\n*   **summary**: A fee to withdraw the liquidity.\n\n### lpFee: `u32`[\u200b](#lpfee-u32 \"Direct link to lpfee-u32\")\n\n*   **interface**: `api.consts.assetConversion.lpFee`\n*   **summary**: A % the liquidity providers will take of every swap. Represents 10ths of a percent.\n\n### maxSwapPathLength: `u32`[\u200b](#maxswappathlength-u32 \"Direct link to maxswappathlength-u32\")\n\n*   **interface**: `api.consts.assetConversion.maxSwapPathLength`\n*   **summary**: The max number of hops in a swap.\n\n### mintMinLiquidity: `u128`[\u200b](#mintminliquidity-u128 \"Direct link to mintminliquidity-u128\")\n\n*   **interface**: `api.consts.assetConversion.mintMinLiquidity`\n*   **summary**: The minimum LP token amount that could be minted. Ameliorates rounding errors.\n\n### palletId: `FrameSupportPalletId`[\u200b](#palletid-framesupportpalletid \"Direct link to palletid-framesupportpalletid\")\n\n*   **interface**: `api.consts.assetConversion.palletId`\n*   **summary**: The pallet's id, used for deriving its sovereign account ID.\n\n### poolSetupFee: `u128`[\u200b](#poolsetupfee-u128 \"Direct link to poolsetupfee-u128\")\n\n*   **interface**: `api.consts.assetConversion.poolSetupFee`\n*   **summary**: A one-time fee to setup the pool.\n\n* * *\n\nassets[\u200b](#assets \"Direct link to assets\")\n\n-------------------------------------------\n\n### approvalDeposit: `u128`[\u200b](#approvaldeposit-u128 \"Direct link to approvaldeposit-u128\")\n\n*   **interface**: `api.consts.assets.approvalDeposit`\n*   **summary**: The amount of funds that must be reserved when creating a new approval.\n\n### assetAccountDeposit: `u128`[\u200b](#assetaccountdeposit-u128 \"Direct link to assetaccountdeposit-u128\")\n\n*   **interface**: `api.consts.assets.assetAccountDeposit`\n*   **summary**: The amount of funds that must be reserved for a non-provider asset account to be maintained.\n\n### assetDeposit: `u128`[\u200b](#assetdeposit-u128 \"Direct link to assetdeposit-u128\")\n\n*   **interface**: `api.consts.assets.assetDeposit`\n*   **summary**: The basic amount of funds that must be reserved for an asset.\n\n### metadataDepositBase: `u128`[\u200b](#metadatadepositbase-u128 \"Direct link to metadatadepositbase-u128\")\n\n*   **interface**: `api.consts.assets.metadataDepositBase`\n*   **summary**: The basic amount of funds that must be reserved when adding metadata to your asset.\n\n### metadataDepositPerByte: `u128`[\u200b](#metadatadepositperbyte-u128 \"Direct link to metadatadepositperbyte-u128\")\n\n*   **interface**: `api.consts.assets.metadataDepositPerByte`\n*   **summary**: The additional funds that must be reserved for the number of bytes you store in your metadata.\n\n### removeItemsLimit: `u32`[\u200b](#removeitemslimit-u32 \"Direct link to removeitemslimit-u32\")\n\n*   **interface**: `api.consts.assets.removeItemsLimit`\n    \n*   **summary**: Max number of items to destroy per `destroy_accounts` and `destroy_approvals` call.\n    \n    Must be configured to result in a weight that makes each call fit in a block.\n    \n\n### stringLimit: `u32`[\u200b](#stringlimit-u32 \"Direct link to stringlimit-u32\")\n\n*   **interface**: `api.consts.assets.stringLimit`\n*   **summary**: The maximum length of a name or symbol stored on-chain.\n\n* * *\n\nbabe[\u200b](#babe \"Direct link to babe\")\n\n-------------------------------------\n\n### epochDuration: `u64`[\u200b](#epochduration-u64 \"Direct link to epochduration-u64\")\n\n*   **interface**: `api.consts.babe.epochDuration`\n*   **summary**: The amount of time, in slots, that each epoch should last. NOTE: Currently it is not possible to change the epoch duration after the chain has started. Attempting to do so will brick block production.\n\n### expectedBlockTime: `u64`[\u200b](#expectedblocktime-u64 \"Direct link to expectedblocktime-u64\")\n\n*   **interface**: `api.consts.babe.expectedBlockTime`\n*   **summary**: The expected average block time at which BABE should be creating blocks. Since BABE is probabilistic it is not trivial to figure out what the expected average block time should be based on the slot duration and the security parameter `c` (where `1 - c` represents the probability of a slot being empty).\n\n### maxAuthorities: `u32`[\u200b](#maxauthorities-u32 \"Direct link to maxauthorities-u32\")\n\n*   **interface**: `api.consts.babe.maxAuthorities`\n*   **summary**: Max number of authorities allowed\n\n### maxNominators: `u32`[\u200b](#maxnominators-u32 \"Direct link to maxnominators-u32\")\n\n*   **interface**: `api.consts.babe.maxNominators`\n*   **summary**: The maximum number of nominators for each validator.\n\n* * *\n\nbalances[\u200b](#balances \"Direct link to balances\")\n\n-------------------------------------------------\n\n### existentialDeposit: `u128`[\u200b](#existentialdeposit-u128 \"Direct link to existentialdeposit-u128\")\n\n*   **interface**: `api.consts.balances.existentialDeposit`\n    \n*   **summary**: The minimum amount required to keep an account open. MUST BE GREATER THAN ZERO!\n    \n    If you _really_ need it to be zero, you can enable the feature `insecure_zero_ed` for this pallet. However, you do so at your own risk: this will open up a major DoS vector. In case you have multiple sources of provider references, you may also get unexpected behaviour if you set this to zero.\n    \n    Bottom line: Do yourself a favour and make it at least one!\n    \n\n### maxFreezes: `u32`[\u200b](#maxfreezes-u32 \"Direct link to maxfreezes-u32\")\n\n*   **interface**: `api.consts.balances.maxFreezes`\n*   **summary**: The maximum number of individual freeze locks that can exist on an account at any time.\n\n### maxHolds: `u32`[\u200b](#maxholds-u32 \"Direct link to maxholds-u32\")\n\n*   **interface**: `api.consts.balances.maxHolds`\n*   **summary**: The maximum number of holds that can exist on an account at any time.\n\n### maxLocks: `u32`[\u200b](#maxlocks-u32 \"Direct link to maxlocks-u32\")\n\n*   **interface**: `api.consts.balances.maxLocks`\n*   **summary**: The maximum number of locks that should exist on an account. Not strictly enforced, but used for weight estimation.\n\n### maxReserves: `u32`[\u200b](#maxreserves-u32 \"Direct link to maxreserves-u32\")\n\n*   **interface**: `api.consts.balances.maxReserves`\n*   **summary**: The maximum number of named reserves that can exist on an account.\n\n* * *\n\nbounties[\u200b](#bounties \"Direct link to bounties\")\n\n-------------------------------------------------\n\n### bountyDepositBase: `u128`[\u200b](#bountydepositbase-u128 \"Direct link to bountydepositbase-u128\")\n\n*   **interface**: `api.consts.bounties.bountyDepositBase`\n*   **summary**: The amount held on deposit for placing a bounty proposal.\n\n### bountyDepositPayoutDelay: `u32`[\u200b](#bountydepositpayoutdelay-u32 \"Direct link to bountydepositpayoutdelay-u32\")\n\n*   **interface**: `api.consts.bounties.bountyDepositPayoutDelay`\n*   **summary**: The delay period for which a bounty beneficiary need to wait before claim the payout.\n\n### bountyUpdatePeriod: `u32`[\u200b](#bountyupdateperiod-u32 \"Direct link to bountyupdateperiod-u32\")\n\n*   **interface**: `api.consts.bounties.bountyUpdatePeriod`\n*   **summary**: Bounty duration in blocks.\n\n### bountyValueMinimum: `u128`[\u200b](#bountyvalueminimum-u128 \"Direct link to bountyvalueminimum-u128\")\n\n*   **interface**: `api.consts.bounties.bountyValueMinimum`\n*   **summary**: Minimum value for a bounty.\n\n### curatorDepositMax: `Option<u128>`[\u200b](#curatordepositmax-optionu128 \"Direct link to curatordepositmax-optionu128\")\n\n*   **interface**: `api.consts.bounties.curatorDepositMax`\n*   **summary**: Maximum amount of funds that should be placed in a deposit for making a proposal.\n\n### curatorDepositMin: `Option<u128>`[\u200b](#curatordepositmin-optionu128 \"Direct link to curatordepositmin-optionu128\")\n\n*   **interface**: `api.consts.bounties.curatorDepositMin`\n*   **summary**: Minimum amount of funds that should be placed in a deposit for making a proposal.\n\n### curatorDepositMultiplier: `Permill`[\u200b](#curatordepositmultiplier-permill \"Direct link to curatordepositmultiplier-permill\")\n\n*   **interface**: `api.consts.bounties.curatorDepositMultiplier`\n    \n*   **summary**: The curator deposit is calculated as a percentage of the curator fee.\n    \n    This deposit has optional upper and lower bounds with `CuratorDepositMax` and `CuratorDepositMin`.\n    \n\n### dataDepositPerByte: `u128`[\u200b](#datadepositperbyte-u128 \"Direct link to datadepositperbyte-u128\")\n\n*   **interface**: `api.consts.bounties.dataDepositPerByte`\n*   **summary**: The amount held on deposit per byte within the tip report reason or bounty description.\n\n### maximumReasonLength: `u32`[\u200b](#maximumreasonlength-u32 \"Direct link to maximumreasonlength-u32\")\n\n*   **interface**: `api.consts.bounties.maximumReasonLength`\n    \n*   **summary**: Maximum acceptable reason length.\n    \n    Benchmarks depend on this value, be sure to update weights file when changing this value\n    \n\n* * *\n\nbroker[\u200b](#broker \"Direct link to broker\")\n\n-------------------------------------------\n\n### maxLeasedCores: `u32`[\u200b](#maxleasedcores-u32 \"Direct link to maxleasedcores-u32\")\n\n*   **interface**: `api.consts.broker.maxLeasedCores`\n*   **summary**: Maximum number of legacy leases.\n\n### maxReservedCores: `u32`[\u200b](#maxreservedcores-u32 \"Direct link to maxreservedcores-u32\")\n\n*   **interface**: `api.consts.broker.maxReservedCores`\n*   **summary**: Maximum number of system cores.\n\n### palletId: `FrameSupportPalletId`[\u200b](#palletid-framesupportpalletid-1 \"Direct link to palletid-framesupportpalletid-1\")\n\n*   **interface**: `api.consts.broker.palletId`\n*   **summary**: Identifier from which the internal Pot is generated.\n\n### timeslicePeriod: `u32`[\u200b](#timesliceperiod-u32 \"Direct link to timesliceperiod-u32\")\n\n*   **interface**: `api.consts.broker.timeslicePeriod`\n*   **summary**: Number of Relay-chain blocks per timeslice.\n\n* * *\n\nchildBounties[\u200b](#childbounties \"Direct link to childBounties\")\n\n----------------------------------------------------------------\n\n### childBountyValueMinimum: `u128`[\u200b](#childbountyvalueminimum-u128 \"Direct link to childbountyvalueminimum-u128\")\n\n*   **interface**: `api.consts.childBounties.childBountyValueMinimum`\n*   **summary**: Minimum value for a child-bounty.\n\n### maxActiveChildBountyCount: `u32`[\u200b](#maxactivechildbountycount-u32 \"Direct link to maxactivechildbountycount-u32\")\n\n*   **interface**: `api.consts.childBounties.maxActiveChildBountyCount`\n*   **summary**: Maximum number of child bounties that can be added to a parent bounty.\n\n* * *\n\ncontracts[\u200b](#contracts \"Direct link to contracts\")\n\n----------------------------------------------------\n\n### codeHashLockupDepositPercent: `Perbill`[\u200b](#codehashlockupdepositpercent-perbill \"Direct link to codehashlockupdepositpercent-perbill\")\n\n*   **interface**: `api.consts.contracts.codeHashLockupDepositPercent`\n*   **summary**: The percentage of the storage deposit that should be held for using a code hash. Instantiating a contract, or calling \\[`chain_extension::Ext::add_delegate_dependency`\\] protects the code from being removed. In order to prevent abuse these actions are protected with a percentage of the code deposit.\n\n### defaultDepositLimit: `u128`[\u200b](#defaultdepositlimit-u128 \"Direct link to defaultdepositlimit-u128\")\n\n*   **interface**: `api.consts.contracts.defaultDepositLimit`\n*   **summary**: Fallback value to limit the storage deposit if it's not being set by the caller.\n\n### depositPerByte: `u128`[\u200b](#depositperbyte-u128 \"Direct link to depositperbyte-u128\")\n\n*   **interface**: `api.consts.contracts.depositPerByte`\n    \n*   **summary**: The amount of balance a caller has to pay for each byte of storage.\n    \n    #### Note[\u200b](#note \"Direct link to Note\")\n    \n    Changing this value for an existing chain might need a storage migration.\n    \n\n### depositPerItem: `u128`[\u200b](#depositperitem-u128 \"Direct link to depositperitem-u128\")\n\n*   **interface**: `api.consts.contracts.depositPerItem`\n    \n*   **summary**: The amount of balance a caller has to pay for each storage item.\n    \n    #### Note[\u200b](#note-1 \"Direct link to Note\")\n    \n    Changing this value for an existing chain might need a storage migration.\n    \n\n### environment: `PalletContractsEnvironment`[\u200b](#environment-palletcontractsenvironment \"Direct link to environment-palletcontractsenvironment\")\n\n*   **interface**: `api.consts.contracts.environment`\n    \n*   **summary**: Type that bundles together all the runtime configurable interface types.\n    \n    This is not a real config. We just mention the type here as constant so that its type appears in the metadata. Only valid value is `()`.\n    \n\n### maxCodeLen: `u32`[\u200b](#maxcodelen-u32 \"Direct link to maxcodelen-u32\")\n\n*   **interface**: `api.consts.contracts.maxCodeLen`\n    \n*   **summary**: The maximum length of a contract code in bytes.\n    \n    The value should be chosen carefully taking into the account the overall memory limit your runtime has, as well as the [maximum allowed callstack depth](#associatedtype.CallStack)\n    . Look into the `integrity_test()` for some insights.\n    \n\n### maxDebugBufferLen: `u32`[\u200b](#maxdebugbufferlen-u32 \"Direct link to maxdebugbufferlen-u32\")\n\n*   **interface**: `api.consts.contracts.maxDebugBufferLen`\n*   **summary**: The maximum length of the debug buffer in bytes.\n\n### maxDelegateDependencies: `u32`[\u200b](#maxdelegatedependencies-u32 \"Direct link to maxdelegatedependencies-u32\")\n\n*   **interface**: `api.consts.contracts.maxDelegateDependencies`\n*   **summary**: The maximum number of delegate\\_dependencies that a contract can lock with \\[`chain_extension::Ext::add_delegate_dependency`\\].\n\n### maxStorageKeyLen: `u32`[\u200b](#maxstoragekeylen-u32 \"Direct link to maxstoragekeylen-u32\")\n\n*   **interface**: `api.consts.contracts.maxStorageKeyLen`\n*   **summary**: The maximum allowable length in bytes for storage keys.\n\n### schedule: `PalletContractsSchedule`[\u200b](#schedule-palletcontractsschedule \"Direct link to schedule-palletcontractsschedule\")\n\n*   **interface**: `api.consts.contracts.schedule`\n*   **summary**: Cost schedule and limits.\n\n### unsafeUnstableInterface: `bool`[\u200b](#unsafeunstableinterface-bool \"Direct link to unsafeunstableinterface-bool\")\n\n*   **interface**: `api.consts.contracts.unsafeUnstableInterface`\n    \n*   **summary**: Make contract callable functions marked as `#[unstable]` available.\n    \n    Contracts that use `#[unstable]` functions won't be able to be uploaded unless this is set to `true`. This is only meant for testnets and dev nodes in order to experiment with new features.\n    \n    #### Warning[\u200b](#warning \"Direct link to Warning\")\n    \n    Do **not** set to `true` on productions chains.\n    \n\n* * *\n\nconvictionVoting[\u200b](#convictionvoting \"Direct link to convictionVoting\")\n\n-------------------------------------------------------------------------\n\n### maxVotes: `u32`[\u200b](#maxvotes-u32 \"Direct link to maxvotes-u32\")\n\n*   **interface**: `api.consts.convictionVoting.maxVotes`\n    \n*   **summary**: The maximum number of concurrent votes an account may have.\n    \n    Also used to compute weight, an overly large value can lead to extrinsics with large weight estimation: see `delegate` for instance.\n    \n\n### voteLockingPeriod: `u32`[\u200b](#votelockingperiod-u32 \"Direct link to votelockingperiod-u32\")\n\n*   **interface**: `api.consts.convictionVoting.voteLockingPeriod`\n    \n*   **summary**: The minimum period of vote locking.\n    \n    It should be no shorter than enactment period to ensure that in the case of an approval, those successful voters are locked into the consequences that their votes entail.\n    \n\n* * *\n\ncoreFellowship[\u200b](#corefellowship \"Direct link to coreFellowship\")\n\n-------------------------------------------------------------------\n\n### evidenceSize: `u32`[\u200b](#evidencesize-u32 \"Direct link to evidencesize-u32\")\n\n*   **interface**: `api.consts.coreFellowship.evidenceSize`\n*   **summary**: The maximum size in bytes submitted evidence is allowed to be.\n\n* * *\n\ncouncil[\u200b](#council \"Direct link to council\")\n\n----------------------------------------------\n\n### maxProposalWeight: `SpWeightsWeightV2Weight`[\u200b](#maxproposalweight-spweightsweightv2weight-1 \"Direct link to maxproposalweight-spweightsweightv2weight-1\")\n\n*   **interface**: `api.consts.council.maxProposalWeight`\n*   **summary**: The maximum weight of a dispatch call that can be proposed and executed.\n\n* * *\n\ndemocracy[\u200b](#democracy \"Direct link to democracy\")\n\n----------------------------------------------------\n\n### cooloffPeriod: `u32`[\u200b](#cooloffperiod-u32 \"Direct link to cooloffperiod-u32\")\n\n*   **interface**: `api.consts.democracy.cooloffPeriod`\n*   **summary**: Period in blocks where an external proposal may not be re-submitted after being vetoed.\n\n### enactmentPeriod: `u32`[\u200b](#enactmentperiod-u32 \"Direct link to enactmentperiod-u32\")\n\n*   **interface**: `api.consts.democracy.enactmentPeriod`\n    \n*   **summary**: The period between a proposal being approved and enacted.\n    \n    It should generally be a little more than the unstake period to ensure that voting stakers have an opportunity to remove themselves from the system in the case where they are on the losing side of a vote.\n    \n\n### fastTrackVotingPeriod: `u32`[\u200b](#fasttrackvotingperiod-u32 \"Direct link to fasttrackvotingperiod-u32\")\n\n*   **interface**: `api.consts.democracy.fastTrackVotingPeriod`\n*   **summary**: Minimum voting period allowed for a fast-track referendum.\n\n### instantAllowed: `bool`[\u200b](#instantallowed-bool \"Direct link to instantallowed-bool\")\n\n*   **interface**: `api.consts.democracy.instantAllowed`\n*   **summary**: Indicator for whether an emergency origin is even allowed to happen. Some chains may want to set this permanently to `false`, others may want to condition it on things such as an upgrade having happened recently.\n\n### launchPeriod: `u32`[\u200b](#launchperiod-u32 \"Direct link to launchperiod-u32\")\n\n*   **interface**: `api.consts.democracy.launchPeriod`\n*   **summary**: How often (in blocks) new public referenda are launched.\n\n### maxBlacklisted: `u32`[\u200b](#maxblacklisted-u32 \"Direct link to maxblacklisted-u32\")\n\n*   **interface**: `api.consts.democracy.maxBlacklisted`\n*   **summary**: The maximum number of items which can be blacklisted.\n\n### maxDeposits: `u32`[\u200b](#maxdeposits-u32 \"Direct link to maxdeposits-u32\")\n\n*   **interface**: `api.consts.democracy.maxDeposits`\n*   **summary**: The maximum number of deposits a public proposal may have at any time.\n\n### maxProposals: `u32`[\u200b](#maxproposals-u32 \"Direct link to maxproposals-u32\")\n\n*   **interface**: `api.consts.democracy.maxProposals`\n*   **summary**: The maximum number of public proposals that can exist at any time.\n\n### maxVotes: `u32`[\u200b](#maxvotes-u32-1 \"Direct link to maxvotes-u32-1\")\n\n*   **interface**: `api.consts.democracy.maxVotes`\n    \n*   **summary**: The maximum number of votes for an account.\n    \n    Also used to compute weight, an overly big value can lead to extrinsic with very big weight: see `delegate` for instance.\n    \n\n### minimumDeposit: `u128`[\u200b](#minimumdeposit-u128 \"Direct link to minimumdeposit-u128\")\n\n*   **interface**: `api.consts.democracy.minimumDeposit`\n*   **summary**: The minimum amount to be used as a deposit for a public referendum proposal.\n\n### voteLockingPeriod: `u32`[\u200b](#votelockingperiod-u32-1 \"Direct link to votelockingperiod-u32-1\")\n\n*   **interface**: `api.consts.democracy.voteLockingPeriod`\n    \n*   **summary**: The minimum period of vote locking.\n    \n    It should be no shorter than enactment period to ensure that in the case of an approval, those successful voters are locked into the consequences that their votes entail.\n    \n\n### votingPeriod: `u32`[\u200b](#votingperiod-u32 \"Direct link to votingperiod-u32\")\n\n*   **interface**: `api.consts.democracy.votingPeriod`\n*   **summary**: How often (in blocks) to check for new votes.\n\n* * *\n\nelectionProviderMultiPhase[\u200b](#electionprovidermultiphase \"Direct link to electionProviderMultiPhase\")\n\n-------------------------------------------------------------------------------------------------------\n\n### betterSignedThreshold: `Perbill`[\u200b](#bettersignedthreshold-perbill \"Direct link to bettersignedthreshold-perbill\")\n\n*   **interface**: `api.consts.electionProviderMultiPhase.betterSignedThreshold`\n*   **summary**: The minimum amount of improvement to the solution score that defines a solution as \"better\" in the Signed phase.\n\n### betterUnsignedThreshold: `Perbill`[\u200b](#betterunsignedthreshold-perbill \"Direct link to betterunsignedthreshold-perbill\")\n\n*   **interface**: `api.consts.electionProviderMultiPhase.betterUnsignedThreshold`\n*   **summary**: The minimum amount of improvement to the solution score that defines a solution as \"better\" in the Unsigned phase.\n\n### maxWinners: `u32`[\u200b](#maxwinners-u32 \"Direct link to maxwinners-u32\")\n\n*   **interface**: `api.consts.electionProviderMultiPhase.maxWinners`\n    \n*   **summary**: The maximum number of winners that can be elected by this `ElectionProvider` implementation.\n    \n    Note: This must always be greater or equal to `T::DataProvider::desired_targets()`.\n    \n\n### minerMaxLength: `u32`[\u200b](#minermaxlength-u32 \"Direct link to minermaxlength-u32\")\n\n*   **interface**: `api.consts.electionProviderMultiPhase.minerMaxLength`\n\n### minerMaxVotesPerVoter: `u32`[\u200b](#minermaxvotespervoter-u32 \"Direct link to minermaxvotespervoter-u32\")\n\n*   **interface**: `api.consts.electionProviderMultiPhase.minerMaxVotesPerVoter`\n\n### minerMaxWeight: `SpWeightsWeightV2Weight`[\u200b](#minermaxweight-spweightsweightv2weight \"Direct link to minermaxweight-spweightsweightv2weight\")\n\n*   **interface**: `api.consts.electionProviderMultiPhase.minerMaxWeight`\n\n### minerMaxWinners: `u32`[\u200b](#minermaxwinners-u32 \"Direct link to minermaxwinners-u32\")\n\n*   **interface**: `api.consts.electionProviderMultiPhase.minerMaxWinners`\n\n### minerTxPriority: `u64`[\u200b](#minertxpriority-u64 \"Direct link to minertxpriority-u64\")\n\n*   **interface**: `api.consts.electionProviderMultiPhase.minerTxPriority`\n*   **summary**: The priority of the unsigned transaction submitted in the unsigned-phase\n\n### offchainRepeat: `u32`[\u200b](#offchainrepeat-u32 \"Direct link to offchainrepeat-u32\")\n\n*   **interface**: `api.consts.electionProviderMultiPhase.offchainRepeat`\n    \n*   **summary**: The repeat threshold of the offchain worker.\n    \n    For example, if it is 5, that means that at least 5 blocks will elapse between attempts to submit the worker's solution.\n    \n\n### signedDepositByte: `u128`[\u200b](#signeddepositbyte-u128 \"Direct link to signeddepositbyte-u128\")\n\n*   **interface**: `api.consts.electionProviderMultiPhase.signedDepositByte`\n*   **summary**: Per-byte deposit for a signed solution.\n\n### signedDepositWeight: `u128`[\u200b](#signeddepositweight-u128 \"Direct link to signeddepositweight-u128\")\n\n*   **interface**: `api.consts.electionProviderMultiPhase.signedDepositWeight`\n*   **summary**: Per-weight deposit for a signed solution.\n\n### signedMaxRefunds: `u32`[\u200b](#signedmaxrefunds-u32 \"Direct link to signedmaxrefunds-u32\")\n\n*   **interface**: `api.consts.electionProviderMultiPhase.signedMaxRefunds`\n*   **summary**: The maximum amount of unchecked solutions to refund the call fee for.\n\n### signedMaxSubmissions: `u32`[\u200b](#signedmaxsubmissions-u32 \"Direct link to signedmaxsubmissions-u32\")\n\n*   **interface**: `api.consts.electionProviderMultiPhase.signedMaxSubmissions`\n    \n*   **summary**: Maximum number of signed submissions that can be queued.\n    \n    It is best to avoid adjusting this during an election, as it impacts downstream data structures. In particular, `SignedSubmissionIndices<T>` is bounded on this value. If you update this value during an election, you _must_ ensure that `SignedSubmissionIndices.len()` is less than or equal to the new value. Otherwise, attempts to submit new solutions may cause a runtime panic.\n    \n\n### signedMaxWeight: `SpWeightsWeightV2Weight`[\u200b](#signedmaxweight-spweightsweightv2weight \"Direct link to signedmaxweight-spweightsweightv2weight\")\n\n*   **interface**: `api.consts.electionProviderMultiPhase.signedMaxWeight`\n    \n*   **summary**: Maximum weight of a signed solution.\n    \n    If \\[`Config::MinerConfig`\\] is being implemented to submit signed solutions (outside of this pallet), then \\[`MinerConfig::solution_weight`\\] is used to compare against this value.\n    \n\n### signedPhase: `u32`[\u200b](#signedphase-u32 \"Direct link to signedphase-u32\")\n\n*   **interface**: `api.consts.electionProviderMultiPhase.signedPhase`\n*   **summary**: Duration of the signed phase.\n\n### signedRewardBase: `u128`[\u200b](#signedrewardbase-u128 \"Direct link to signedrewardbase-u128\")\n\n*   **interface**: `api.consts.electionProviderMultiPhase.signedRewardBase`\n*   **summary**: Base reward for a signed solution\n\n### unsignedPhase: `u32`[\u200b](#unsignedphase-u32 \"Direct link to unsignedphase-u32\")\n\n*   **interface**: `api.consts.electionProviderMultiPhase.unsignedPhase`\n*   **summary**: Duration of the unsigned phase.\n\n* * *\n\nelections[\u200b](#elections \"Direct link to elections\")\n\n----------------------------------------------------\n\n### candidacyBond: `u128`[\u200b](#candidacybond-u128 \"Direct link to candidacybond-u128\")\n\n*   **interface**: `api.consts.elections.candidacyBond`\n*   **summary**: How much should be locked up in order to submit one's candidacy.\n\n### desiredMembers: `u32`[\u200b](#desiredmembers-u32 \"Direct link to desiredmembers-u32\")\n\n*   **interface**: `api.consts.elections.desiredMembers`\n*   **summary**: Number of members to elect.\n\n### desiredRunnersUp: `u32`[\u200b](#desiredrunnersup-u32 \"Direct link to desiredrunnersup-u32\")\n\n*   **interface**: `api.consts.elections.desiredRunnersUp`\n*   **summary**: Number of runners\\_up to keep.\n\n### maxCandidates: `u32`[\u200b](#maxcandidates-u32 \"Direct link to maxcandidates-u32\")\n\n*   **interface**: `api.consts.elections.maxCandidates`\n    \n*   **summary**: The maximum number of candidates in a phragmen election.\n    \n    Warning: This impacts the size of the election which is run onchain. Chose wisely, and consider how it will impact `T::WeightInfo::election_phragmen`.\n    \n    When this limit is reached no more candidates are accepted in the election.\n    \n\n### maxVoters: `u32`[\u200b](#maxvoters-u32 \"Direct link to maxvoters-u32\")\n\n*   **interface**: `api.consts.elections.maxVoters`\n    \n*   **summary**: The maximum number of voters to allow in a phragmen election.\n    \n    Warning: This impacts the size of the election which is run onchain. Chose wisely, and consider how it will impact `T::WeightInfo::election_phragmen`.\n    \n    When the limit is reached the new voters are ignored.\n    \n\n### maxVotesPerVoter: `u32`[\u200b](#maxvotespervoter-u32 \"Direct link to maxvotespervoter-u32\")\n\n*   **interface**: `api.consts.elections.maxVotesPerVoter`\n    \n*   **summary**: Maximum numbers of votes per voter.\n    \n    Warning: This impacts the size of the election which is run onchain. Chose wisely, and consider how it will impact `T::WeightInfo::election_phragmen`.\n    \n\n### palletId: `[u8;8]`[\u200b](#palletid-u88 \"Direct link to palletid-u88\")\n\n*   **interface**: `api.consts.elections.palletId`\n*   **summary**: Identifier for the elections-phragmen pallet's lock\n\n### termDuration: `u32`[\u200b](#termduration-u32 \"Direct link to termduration-u32\")\n\n*   **interface**: `api.consts.elections.termDuration`\n*   **summary**: How long each seat is kept. This defines the next block number at which an election round will happen. If set to zero, no elections are ever triggered and the module will be in passive mode.\n\n### votingBondBase: `u128`[\u200b](#votingbondbase-u128 \"Direct link to votingbondbase-u128\")\n\n*   **interface**: `api.consts.elections.votingBondBase`\n    \n*   **summary**: Base deposit associated with voting.\n    \n    This should be sensibly high to economically ensure the pallet cannot be attacked by creating a gigantic number of votes.\n    \n\n### votingBondFactor: `u128`[\u200b](#votingbondfactor-u128 \"Direct link to votingbondfactor-u128\")\n\n*   **interface**: `api.consts.elections.votingBondFactor`\n*   **summary**: The amount of bond that need to be locked for each vote (32 bytes).\n\n* * *\n\nfastUnstake[\u200b](#fastunstake \"Direct link to fastUnstake\")\n\n----------------------------------------------------------\n\n### deposit: `u128`[\u200b](#deposit-u128 \"Direct link to deposit-u128\")\n\n*   **interface**: `api.consts.fastUnstake.deposit`\n*   **summary**: Deposit to take for unstaking, to make sure we're able to slash the it in order to cover the costs of resources on unsuccessful unstake.\n\n* * *\n\ngrandpa[\u200b](#grandpa \"Direct link to grandpa\")\n\n----------------------------------------------\n\n### maxAuthorities: `u32`[\u200b](#maxauthorities-u32-1 \"Direct link to maxauthorities-u32-1\")\n\n*   **interface**: `api.consts.grandpa.maxAuthorities`\n*   **summary**: Max Authorities in use\n\n### maxNominators: `u32`[\u200b](#maxnominators-u32-1 \"Direct link to maxnominators-u32-1\")\n\n*   **interface**: `api.consts.grandpa.maxNominators`\n*   **summary**: The maximum number of nominators for each validator.\n\n### maxSetIdSessionEntries: `u64`[\u200b](#maxsetidsessionentries-u64 \"Direct link to maxsetidsessionentries-u64\")\n\n*   **interface**: `api.consts.grandpa.maxSetIdSessionEntries`\n    \n*   **summary**: The maximum number of entries to keep in the set id to session index mapping.\n    \n    Since the `SetIdSession` map is only used for validating equivocations this value should relate to the bonding duration of whatever staking system is being used (if any). If equivocation handling is not enabled then this value can be zero.\n    \n\n* * *\n\nidentity[\u200b](#identity \"Direct link to identity\")\n\n-------------------------------------------------\n\n### basicDeposit: `u128`[\u200b](#basicdeposit-u128 \"Direct link to basicdeposit-u128\")\n\n*   **interface**: `api.consts.identity.basicDeposit`\n*   **summary**: The amount held on deposit for a registered identity\n\n### byteDeposit: `u128`[\u200b](#bytedeposit-u128 \"Direct link to bytedeposit-u128\")\n\n*   **interface**: `api.consts.identity.byteDeposit`\n*   **summary**: The amount held on deposit per encoded byte for a registered identity.\n\n### maxRegistrars: `u32`[\u200b](#maxregistrars-u32 \"Direct link to maxregistrars-u32\")\n\n*   **interface**: `api.consts.identity.maxRegistrars`\n*   **summary**: Maxmimum number of registrars allowed in the system. Needed to bound the complexity of, e.g., updating judgements.\n\n### maxSubAccounts: `u32`[\u200b](#maxsubaccounts-u32 \"Direct link to maxsubaccounts-u32\")\n\n*   **interface**: `api.consts.identity.maxSubAccounts`\n*   **summary**: The maximum number of sub-accounts allowed per identified account.\n\n### subAccountDeposit: `u128`[\u200b](#subaccountdeposit-u128 \"Direct link to subaccountdeposit-u128\")\n\n*   **interface**: `api.consts.identity.subAccountDeposit`\n*   **summary**: The amount held on deposit for a registered subaccount. This should account for the fact that one storage item's value will increase by the size of an account ID, and there will be another trie item whose value is the size of an account ID plus 32 bytes.\n\n* * *\n\nimOnline[\u200b](#imonline \"Direct link to imOnline\")\n\n-------------------------------------------------\n\n### unsignedPriority: `u64`[\u200b](#unsignedpriority-u64 \"Direct link to unsignedpriority-u64\")\n\n*   **interface**: `api.consts.imOnline.unsignedPriority`\n    \n*   **summary**: A configuration for base priority of unsigned transactions.\n    \n    This is exposed so that it can be tuned for particular runtime, when multiple pallets send unsigned transactions.\n    \n\n* * *\n\nindices[\u200b](#indices \"Direct link to indices\")\n\n----------------------------------------------\n\n### deposit: `u128`[\u200b](#deposit-u128-1 \"Direct link to deposit-u128-1\")\n\n*   **interface**: `api.consts.indices.deposit`\n*   **summary**: The deposit needed for reserving an index.\n\n* * *\n\nlottery[\u200b](#lottery \"Direct link to lottery\")\n\n----------------------------------------------\n\n### maxCalls: `u32`[\u200b](#maxcalls-u32 \"Direct link to maxcalls-u32\")\n\n*   **interface**: `api.consts.lottery.maxCalls`\n*   **summary**: The max number of calls available in a single lottery.\n\n### maxGenerateRandom: `u32`[\u200b](#maxgeneraterandom-u32 \"Direct link to maxgeneraterandom-u32\")\n\n*   **interface**: `api.consts.lottery.maxGenerateRandom`\n*   **summary**: Number of time we should try to generate a random number that has no modulo bias. The larger this number, the more potential computation is used for picking the winner, but also the more likely that the chosen winner is done fairly.\n\n### palletId: `FrameSupportPalletId`[\u200b](#palletid-framesupportpalletid-2 \"Direct link to palletid-framesupportpalletid-2\")\n\n*   **interface**: `api.consts.lottery.palletId`\n*   **summary**: The Lottery's pallet id\n\n* * *\n\nmessageQueue[\u200b](#messagequeue \"Direct link to messageQueue\")\n\n-------------------------------------------------------------\n\n### heapSize: `u32`[\u200b](#heapsize-u32 \"Direct link to heapsize-u32\")\n\n*   **interface**: `api.consts.messageQueue.heapSize`\n    \n*   **summary**: The size of the page; this implies the maximum message size which can be sent.\n    \n    A good value depends on the expected message sizes, their weights, the weight that is available for processing them and the maximal needed message size. The maximal message size is slightly lower than this as defined by \\[`MaxMessageLenOf`\\].\n    \n\n### maxStale: `u32`[\u200b](#maxstale-u32 \"Direct link to maxstale-u32\")\n\n*   **interface**: `api.consts.messageQueue.maxStale`\n*   **summary**: The maximum number of stale pages (i.e. of overweight messages) allowed before culling can happen. Once there are more stale pages than this, then historical pages may be dropped, even if they contain unprocessed overweight messages.\n\n### serviceWeight: `Option<SpWeightsWeightV2Weight>`[\u200b](#serviceweight-optionspweightsweightv2weight \"Direct link to serviceweight-optionspweightsweightv2weight\")\n\n*   **interface**: `api.consts.messageQueue.serviceWeight`\n    \n*   **summary**: The amount of weight (if any) which should be provided to the message queue for servicing enqueued items.\n    \n    This may be legitimately `None` in the case that you will call `ServiceQueues::service_queues` manually.\n    \n\n* * *\n\nmixnet[\u200b](#mixnet \"Direct link to mixnet\")\n\n-------------------------------------------\n\n### maxAuthorities: `u32`[\u200b](#maxauthorities-u32-2 \"Direct link to maxauthorities-u32-2\")\n\n*   **interface**: `api.consts.mixnet.maxAuthorities`\n*   **summary**: The maximum number of authorities per session.\n\n### maxExternalAddressesPerMixnode: `u32`[\u200b](#maxexternaladdressespermixnode-u32 \"Direct link to maxexternaladdressespermixnode-u32\")\n\n*   **interface**: `api.consts.mixnet.maxExternalAddressesPerMixnode`\n*   **summary**: The maximum number of external addresses for a mixnode.\n\n### maxExternalAddressSize: `u32`[\u200b](#maxexternaladdresssize-u32 \"Direct link to maxexternaladdresssize-u32\")\n\n*   **interface**: `api.consts.mixnet.maxExternalAddressSize`\n*   **summary**: The maximum size of one of a mixnode's external addresses.\n\n### minMixnodes: `u32`[\u200b](#minmixnodes-u32 \"Direct link to minmixnodes-u32\")\n\n*   **interface**: `api.consts.mixnet.minMixnodes`\n*   **summary**: Minimum number of mixnodes. If there are fewer than this many mixnodes registered for a session, the mixnet will not be active during the session.\n\n### numCoverToCurrentBlocks: `u32`[\u200b](#numcovertocurrentblocks-u32 \"Direct link to numcovertocurrentblocks-u32\")\n\n*   **interface**: `api.consts.mixnet.numCoverToCurrentBlocks`\n*   **summary**: Length of the first phase of each session (`CoverToCurrent`), in blocks.\n\n### numCoverToPrevBlocks: `u32`[\u200b](#numcovertoprevblocks-u32 \"Direct link to numcovertoprevblocks-u32\")\n\n*   **interface**: `api.consts.mixnet.numCoverToPrevBlocks`\n*   **summary**: Length of the third phase of each session (`CoverToPrev`), in blocks.\n\n### numRegisterEndSlackBlocks: `u32`[\u200b](#numregisterendslackblocks-u32 \"Direct link to numregisterendslackblocks-u32\")\n\n*   **interface**: `api.consts.mixnet.numRegisterEndSlackBlocks`\n*   **summary**: The number of \"slack\" blocks at the end of each session. [`maybe_register`](Pallet::maybe_register)\n     will try to register before this slack period, but may post registration transactions during the slack period as a last resort.\n\n### numRegisterStartSlackBlocks: `u32`[\u200b](#numregisterstartslackblocks-u32 \"Direct link to numregisterstartslackblocks-u32\")\n\n*   **interface**: `api.consts.mixnet.numRegisterStartSlackBlocks`\n*   **summary**: The number of \"slack\" blocks at the start of each session, during which [`maybe_register`](Pallet::maybe_register)\n     will not attempt to post registration transactions.\n\n### numRequestsToCurrentBlocks: `u32`[\u200b](#numrequeststocurrentblocks-u32 \"Direct link to numrequeststocurrentblocks-u32\")\n\n*   **interface**: `api.consts.mixnet.numRequestsToCurrentBlocks`\n*   **summary**: Length of the second phase of each session (`RequestsToCurrent`), in blocks.\n\n### registrationPriority: `u64`[\u200b](#registrationpriority-u64 \"Direct link to registrationpriority-u64\")\n\n*   **interface**: `api.consts.mixnet.registrationPriority`\n*   **summary**: Priority of unsigned transactions used to register mixnodes.\n\n* * *\n\nmultisig[\u200b](#multisig \"Direct link to multisig\")\n\n-------------------------------------------------\n\n### depositBase: `u128`[\u200b](#depositbase-u128 \"Direct link to depositbase-u128\")\n\n*   **interface**: `api.consts.multisig.depositBase`\n    \n*   **summary**: The base amount of currency needed to reserve for creating a multisig execution or to store a dispatch call for later.\n    \n    This is held for an additional storage item whose value size is `4 + sizeof((BlockNumber, Balance, AccountId))` bytes and whose key size is `32 + sizeof(AccountId)` bytes.\n    \n\n### depositFactor: `u128`[\u200b](#depositfactor-u128 \"Direct link to depositfactor-u128\")\n\n*   **interface**: `api.consts.multisig.depositFactor`\n    \n*   **summary**: The amount of currency needed per unit threshold when creating a multisig execution.\n    \n    This is held for adding 32 bytes more into a pre-existing storage value.\n    \n\n### maxSignatories: `u32`[\u200b](#maxsignatories-u32 \"Direct link to maxsignatories-u32\")\n\n*   **interface**: `api.consts.multisig.maxSignatories`\n*   **summary**: The maximum amount of signatories allowed in the multisig.\n\n* * *\n\nnftFractionalization[\u200b](#nftfractionalization \"Direct link to nftFractionalization\")\n\n-------------------------------------------------------------------------------------\n\n### deposit: `u128`[\u200b](#deposit-u128-2 \"Direct link to deposit-u128-2\")\n\n*   **interface**: `api.consts.nftFractionalization.deposit`\n*   **summary**: The deposit paid by the user locking an NFT. The deposit is returned to the original NFT owner when the asset is unified and the NFT is unlocked.\n\n### newAssetName: `Bytes`[\u200b](#newassetname-bytes \"Direct link to newassetname-bytes\")\n\n*   **interface**: `api.consts.nftFractionalization.newAssetName`\n*   **summary**: The newly created asset's name.\n\n### newAssetSymbol: `Bytes`[\u200b](#newassetsymbol-bytes \"Direct link to newassetsymbol-bytes\")\n\n*   **interface**: `api.consts.nftFractionalization.newAssetSymbol`\n*   **summary**: The newly created asset's symbol.\n\n### palletId: `FrameSupportPalletId`[\u200b](#palletid-framesupportpalletid-3 \"Direct link to palletid-framesupportpalletid-3\")\n\n*   **interface**: `api.consts.nftFractionalization.palletId`\n*   **summary**: The pallet's id, used for deriving its sovereign account ID.\n\n### stringLimit: `u32`[\u200b](#stringlimit-u32-1 \"Direct link to stringlimit-u32-1\")\n\n*   **interface**: `api.consts.nftFractionalization.stringLimit`\n*   **summary**: The maximum length of a name or symbol stored on-chain.\n\n* * *\n\nnfts[\u200b](#nfts \"Direct link to nfts\")\n\n-------------------------------------\n\n### approvalsLimit: `u32`[\u200b](#approvalslimit-u32 \"Direct link to approvalslimit-u32\")\n\n*   **interface**: `api.consts.nfts.approvalsLimit`\n*   **summary**: The maximum approvals an item could have.\n\n### attributeDepositBase: `u128`[\u200b](#attributedepositbase-u128 \"Direct link to attributedepositbase-u128\")\n\n*   **interface**: `api.consts.nfts.attributeDepositBase`\n*   **summary**: The basic amount of funds that must be reserved when adding an attribute to an item.\n\n### collectionDeposit: `u128`[\u200b](#collectiondeposit-u128 \"Direct link to collectiondeposit-u128\")\n\n*   **interface**: `api.consts.nfts.collectionDeposit`\n*   **summary**: The basic amount of funds that must be reserved for collection.\n\n### depositPerByte: `u128`[\u200b](#depositperbyte-u128-1 \"Direct link to depositperbyte-u128-1\")\n\n*   **interface**: `api.consts.nfts.depositPerByte`\n*   **summary**: The additional funds that must be reserved for the number of bytes store in metadata, either \"normal\" metadata or attribute metadata.\n\n### features: `u64`[\u200b](#features-u64 \"Direct link to features-u64\")\n\n*   **interface**: `api.consts.nfts.features`\n*   **summary**: Disables some of pallet's features.\n\n### itemAttributesApprovalsLimit: `u32`[\u200b](#itemattributesapprovalslimit-u32 \"Direct link to itemattributesapprovalslimit-u32\")\n\n*   **interface**: `api.consts.nfts.itemAttributesApprovalsLimit`\n*   **summary**: The maximum attributes approvals an item could have.\n\n### itemDeposit: `u128`[\u200b](#itemdeposit-u128 \"Direct link to itemdeposit-u128\")\n\n*   **interface**: `api.consts.nfts.itemDeposit`\n*   **summary**: The basic amount of funds that must be reserved for an item.\n\n### keyLimit: `u32`[\u200b](#keylimit-u32 \"Direct link to keylimit-u32\")\n\n*   **interface**: `api.consts.nfts.keyLimit`\n*   **summary**: The maximum length of an attribute key.\n\n### maxAttributesPerCall: `u32`[\u200b](#maxattributespercall-u32 \"Direct link to maxattributespercall-u32\")\n\n*   **interface**: `api.consts.nfts.maxAttributesPerCall`\n*   **summary**: The max number of attributes a user could set per call.\n\n### maxDeadlineDuration: `u32`[\u200b](#maxdeadlineduration-u32 \"Direct link to maxdeadlineduration-u32\")\n\n*   **interface**: `api.consts.nfts.maxDeadlineDuration`\n*   **summary**: The max duration in blocks for deadlines.\n\n### maxTips: `u32`[\u200b](#maxtips-u32 \"Direct link to maxtips-u32\")\n\n*   **interface**: `api.consts.nfts.maxTips`\n*   **summary**: The max number of tips a user could send.\n\n### metadataDepositBase: `u128`[\u200b](#metadatadepositbase-u128-1 \"Direct link to metadatadepositbase-u128-1\")\n\n*   **interface**: `api.consts.nfts.metadataDepositBase`\n*   **summary**: The basic amount of funds that must be reserved when adding metadata to your item.\n\n### stringLimit: `u32`[\u200b](#stringlimit-u32-2 \"Direct link to stringlimit-u32-2\")\n\n*   **interface**: `api.consts.nfts.stringLimit`\n*   **summary**: The maximum length of data stored on-chain.\n\n### valueLimit: `u32`[\u200b](#valuelimit-u32 \"Direct link to valuelimit-u32\")\n\n*   **interface**: `api.consts.nfts.valueLimit`\n*   **summary**: The maximum length of an attribute value.\n\n* * *\n\nnis[\u200b](#nis \"Direct link to nis\")\n\n----------------------------------\n\n### basePeriod: `u32`[\u200b](#baseperiod-u32 \"Direct link to baseperiod-u32\")\n\n*   **interface**: `api.consts.nis.basePeriod`\n*   **summary**: The base period for the duration queues. This is the common multiple across all supported freezing durations that can be bid upon.\n\n### fifoQueueLen: `u32`[\u200b](#fifoqueuelen-u32 \"Direct link to fifoqueuelen-u32\")\n\n*   **interface**: `api.consts.nis.fifoQueueLen`\n    \n*   **summary**: Portion of the queue which is free from ordering and just a FIFO.\n    \n    Must be no greater than `MaxQueueLen`.\n    \n\n### intakePeriod: `u32`[\u200b](#intakeperiod-u32 \"Direct link to intakeperiod-u32\")\n\n*   **interface**: `api.consts.nis.intakePeriod`\n    \n*   **summary**: The number of blocks between consecutive attempts to dequeue bids and create receipts.\n    \n    A larger value results in fewer storage hits each block, but a slower period to get to the target.\n    \n\n### maxIntakeWeight: `SpWeightsWeightV2Weight`[\u200b](#maxintakeweight-spweightsweightv2weight \"Direct link to maxintakeweight-spweightsweightv2weight\")\n\n*   **interface**: `api.consts.nis.maxIntakeWeight`\n*   **summary**: The maximum amount of bids that can consolidated into receipts in a single intake. A larger value here means less of the block available for transactions should there be a glut of bids.\n\n### maxQueueLen: `u32`[\u200b](#maxqueuelen-u32 \"Direct link to maxqueuelen-u32\")\n\n*   **interface**: `api.consts.nis.maxQueueLen`\n    \n*   **summary**: Maximum number of items that may be in each duration queue.\n    \n    Must be larger than zero.\n    \n\n### minBid: `u128`[\u200b](#minbid-u128 \"Direct link to minbid-u128\")\n\n*   **interface**: `api.consts.nis.minBid`\n    \n*   **summary**: The minimum amount of funds that may be placed in a bid. Note that this does not actually limit the amount which may be represented in a receipt since bids may be split up by the system.\n    \n    It should be at least big enough to ensure that there is no possible storage spam attack or queue-filling attack.\n    \n\n### minReceipt: `Perquintill`[\u200b](#minreceipt-perquintill \"Direct link to minreceipt-perquintill\")\n\n*   **interface**: `api.consts.nis.minReceipt`\n*   **summary**: The minimum amount of funds which may intentionally be left remaining under a single receipt.\n\n### palletId: `FrameSupportPalletId`[\u200b](#palletid-framesupportpalletid-4 \"Direct link to palletid-framesupportpalletid-4\")\n\n*   **interface**: `api.consts.nis.palletId`\n*   **summary**: The treasury's pallet id, used for deriving its sovereign account ID.\n\n### queueCount: `u32`[\u200b](#queuecount-u32 \"Direct link to queuecount-u32\")\n\n*   **interface**: `api.consts.nis.queueCount`\n*   **summary**: Number of duration queues in total. This sets the maximum duration supported, which is this value multiplied by `Period`.\n\n### thawThrottle: `(Perquintill,u32)`[\u200b](#thawthrottle-perquintillu32 \"Direct link to thawthrottle-perquintillu32\")\n\n*   **interface**: `api.consts.nis.thawThrottle`\n*   **summary**: The maximum proportion which may be thawed and the period over which it is reset.\n\n* * *\n\nnominationPools[\u200b](#nominationpools \"Direct link to nominationPools\")\n\n----------------------------------------------------------------------\n\n### maxPointsToBalance: `u8`[\u200b](#maxpointstobalance-u8 \"Direct link to maxpointstobalance-u8\")\n\n*   **interface**: `api.consts.nominationPools.maxPointsToBalance`\n    \n*   **summary**: The maximum pool points-to-balance ratio that an `open` pool can have.\n    \n    This is important in the event slashing takes place and the pool's points-to-balance ratio becomes disproportional.\n    \n    Moreover, this relates to the `RewardCounter` type as well, as the arithmetic operations are a function of number of points, and by setting this value to e.g. 10, you ensure that the total number of points in the system are at most 10 times the total\\_issuance of the chain, in the absolute worse case.\n    \n    For a value of 10, the threshold would be a pool points-to-balance ratio of 10:1. Such a scenario would also be the equivalent of the pool being 90% slashed.\n    \n\n### maxUnbonding: `u32`[\u200b](#maxunbonding-u32 \"Direct link to maxunbonding-u32\")\n\n*   **interface**: `api.consts.nominationPools.maxUnbonding`\n*   **summary**: The maximum number of simultaneous unbonding chunks that can exist per member.\n\n### palletId: `FrameSupportPalletId`[\u200b](#palletid-framesupportpalletid-5 \"Direct link to palletid-framesupportpalletid-5\")\n\n*   **interface**: `api.consts.nominationPools.palletId`\n*   **summary**: The nomination pool's pallet id.\n\n* * *\n\npoolAssets[\u200b](#poolassets \"Direct link to poolAssets\")\n\n-------------------------------------------------------\n\n### approvalDeposit: `u128`[\u200b](#approvaldeposit-u128-1 \"Direct link to approvaldeposit-u128-1\")\n\n*   **interface**: `api.consts.poolAssets.approvalDeposit`\n*   **summary**: The amount of funds that must be reserved when creating a new approval.\n\n### assetAccountDeposit: `u128`[\u200b](#assetaccountdeposit-u128-1 \"Direct link to assetaccountdeposit-u128-1\")\n\n*   **interface**: `api.consts.poolAssets.assetAccountDeposit`\n*   **summary**: The amount of funds that must be reserved for a non-provider asset account to be maintained.\n\n### assetDeposit: `u128`[\u200b](#assetdeposit-u128-1 \"Direct link to assetdeposit-u128-1\")\n\n*   **interface**: `api.consts.poolAssets.assetDeposit`\n*   **summary**: The basic amount of funds that must be reserved for an asset.\n\n### metadataDepositBase: `u128`[\u200b](#metadatadepositbase-u128-2 \"Direct link to metadatadepositbase-u128-2\")\n\n*   **interface**: `api.consts.poolAssets.metadataDepositBase`\n*   **summary**: The basic amount of funds that must be reserved when adding metadata to your asset.\n\n### metadataDepositPerByte: `u128`[\u200b](#metadatadepositperbyte-u128-1 \"Direct link to metadatadepositperbyte-u128-1\")\n\n*   **interface**: `api.consts.poolAssets.metadataDepositPerByte`\n*   **summary**: The additional funds that must be reserved for the number of bytes you store in your metadata.\n\n### removeItemsLimit: `u32`[\u200b](#removeitemslimit-u32-1 \"Direct link to removeitemslimit-u32-1\")\n\n*   **interface**: `api.consts.poolAssets.removeItemsLimit`\n    \n*   **summary**: Max number of items to destroy per `destroy_accounts` and `destroy_approvals` call.\n    \n    Must be configured to result in a weight that makes each call fit in a block.\n    \n\n### stringLimit: `u32`[\u200b](#stringlimit-u32-3 \"Direct link to stringlimit-u32-3\")\n\n*   **interface**: `api.consts.poolAssets.stringLimit`\n*   **summary**: The maximum length of a name or symbol stored on-chain.\n\n* * *\n\nproxy[\u200b](#proxy \"Direct link to proxy\")\n\n----------------------------------------\n\n### announcementDepositBase: `u128`[\u200b](#announcementdepositbase-u128 \"Direct link to announcementdepositbase-u128\")\n\n*   **interface**: `api.consts.proxy.announcementDepositBase`\n    \n*   **summary**: The base amount of currency needed to reserve for creating an announcement.\n    \n    This is held when a new storage item holding a `Balance` is created (typically 16 bytes).\n    \n\n### announcementDepositFactor: `u128`[\u200b](#announcementdepositfactor-u128 \"Direct link to announcementdepositfactor-u128\")\n\n*   **interface**: `api.consts.proxy.announcementDepositFactor`\n    \n*   **summary**: The amount of currency needed per announcement made.\n    \n    This is held for adding an `AccountId`, `Hash` and `BlockNumber` (typically 68 bytes) into a pre-existing storage value.\n    \n\n### maxPending: `u32`[\u200b](#maxpending-u32 \"Direct link to maxpending-u32\")\n\n*   **interface**: `api.consts.proxy.maxPending`\n*   **summary**: The maximum amount of time-delayed announcements that are allowed to be pending.\n\n### maxProxies: `u32`[\u200b](#maxproxies-u32 \"Direct link to maxproxies-u32\")\n\n*   **interface**: `api.consts.proxy.maxProxies`\n*   **summary**: The maximum amount of proxies allowed for a single account.\n\n### proxyDepositBase: `u128`[\u200b](#proxydepositbase-u128 \"Direct link to proxydepositbase-u128\")\n\n*   **interface**: `api.consts.proxy.proxyDepositBase`\n    \n*   **summary**: The base amount of currency needed to reserve for creating a proxy.\n    \n    This is held for an additional storage item whose value size is `sizeof(Balance)` bytes and whose key size is `sizeof(AccountId)` bytes.\n    \n\n### proxyDepositFactor: `u128`[\u200b](#proxydepositfactor-u128 \"Direct link to proxydepositfactor-u128\")\n\n*   **interface**: `api.consts.proxy.proxyDepositFactor`\n    \n*   **summary**: The amount of currency needed per proxy added.\n    \n    This is held for adding 32 bytes plus an instance of `ProxyType` more into a pre-existing storage value. Thus, when configuring `ProxyDepositFactor` one should take into account `32 + proxy_type.encode().len()` bytes of data.\n    \n\n* * *\n\nrankedPolls[\u200b](#rankedpolls \"Direct link to rankedPolls\")\n\n----------------------------------------------------------\n\n### alarmInterval: `u32`[\u200b](#alarminterval-u32 \"Direct link to alarminterval-u32\")\n\n*   **interface**: `api.consts.rankedPolls.alarmInterval`\n*   **summary**: Quantization level for the referendum wakeup scheduler. A higher number will result in fewer storage reads/writes needed for smaller voters, but also result in delays to the automatic referendum status changes. Explicit servicing instructions are unaffected.\n\n### maxQueued: `u32`[\u200b](#maxqueued-u32 \"Direct link to maxqueued-u32\")\n\n*   **interface**: `api.consts.rankedPolls.maxQueued`\n*   **summary**: Maximum size of the referendum queue for a single track.\n\n### submissionDeposit: `u128`[\u200b](#submissiondeposit-u128 \"Direct link to submissiondeposit-u128\")\n\n*   **interface**: `api.consts.rankedPolls.submissionDeposit`\n*   **summary**: The minimum amount to be used as a deposit for a public referendum proposal.\n\n### tracks: `Vec<(u16,PalletReferendaTrackInfo)>`[\u200b](#tracks-vecu16palletreferendatrackinfo \"Direct link to tracks-vecu16palletreferendatrackinfo\")\n\n*   **interface**: `api.consts.rankedPolls.tracks`\n*   **summary**: Information concerning the different referendum tracks.\n\n### undecidingTimeout: `u32`[\u200b](#undecidingtimeout-u32 \"Direct link to undecidingtimeout-u32\")\n\n*   **interface**: `api.consts.rankedPolls.undecidingTimeout`\n*   **summary**: The number of blocks after submission that a referendum must begin being decided by. Once this passes, then anyone may cancel the referendum.\n\n* * *\n\nrecovery[\u200b](#recovery \"Direct link to recovery\")\n\n-------------------------------------------------\n\n### configDepositBase: `u128`[\u200b](#configdepositbase-u128 \"Direct link to configdepositbase-u128\")\n\n*   **interface**: `api.consts.recovery.configDepositBase`\n    \n*   **summary**: The base amount of currency needed to reserve for creating a recovery configuration.\n    \n    This is held for an additional storage item whose value size is `2 + sizeof(BlockNumber, Balance)` bytes.\n    \n\n### friendDepositFactor: `u128`[\u200b](#frienddepositfactor-u128 \"Direct link to frienddepositfactor-u128\")\n\n*   **interface**: `api.consts.recovery.friendDepositFactor`\n    \n*   **summary**: The amount of currency needed per additional user when creating a recovery configuration.\n    \n    This is held for adding `sizeof(AccountId)` bytes more into a pre-existing storage value.\n    \n\n### maxFriends: `u32`[\u200b](#maxfriends-u32 \"Direct link to maxfriends-u32\")\n\n*   **interface**: `api.consts.recovery.maxFriends`\n    \n*   **summary**: The maximum amount of friends allowed in a recovery configuration.\n    \n    NOTE: The threshold programmed in this Pallet uses u16, so it does not really make sense to have a limit here greater than u16::MAX. But also, that is a lot more than you should probably set this value to anyway...\n    \n\n### recoveryDeposit: `u128`[\u200b](#recoverydeposit-u128 \"Direct link to recoverydeposit-u128\")\n\n*   **interface**: `api.consts.recovery.recoveryDeposit`\n    \n*   **summary**: The base amount of currency needed to reserve for starting a recovery.\n    \n    This is primarily held for deterring malicious recovery attempts, and should have a value large enough that a bad actor would choose not to place this deposit. It also acts to fund additional storage item whose value size is `sizeof(BlockNumber, Balance + T * AccountId)` bytes. Where T is a configurable threshold.\n    \n\n* * *\n\nreferenda[\u200b](#referenda \"Direct link to referenda\")\n\n----------------------------------------------------\n\n### alarmInterval: `u32`[\u200b](#alarminterval-u32-1 \"Direct link to alarminterval-u32-1\")\n\n*   **interface**: `api.consts.referenda.alarmInterval`\n*   **summary**: Quantization level for the referendum wakeup scheduler. A higher number will result in fewer storage reads/writes needed for smaller voters, but also result in delays to the automatic referendum status changes. Explicit servicing instructions are unaffected.\n\n### maxQueued: `u32`[\u200b](#maxqueued-u32-1 \"Direct link to maxqueued-u32-1\")\n\n*   **interface**: `api.consts.referenda.maxQueued`\n*   **summary**: Maximum size of the referendum queue for a single track.\n\n### submissionDeposit: `u128`[\u200b](#submissiondeposit-u128-1 \"Direct link to submissiondeposit-u128-1\")\n\n*   **interface**: `api.consts.referenda.submissionDeposit`\n*   **summary**: The minimum amount to be used as a deposit for a public referendum proposal.\n\n### tracks: `Vec<(u16,PalletReferendaTrackInfo)>`[\u200b](#tracks-vecu16palletreferendatrackinfo-1 \"Direct link to tracks-vecu16palletreferendatrackinfo-1\")\n\n*   **interface**: `api.consts.referenda.tracks`\n*   **summary**: Information concerning the different referendum tracks.\n\n### undecidingTimeout: `u32`[\u200b](#undecidingtimeout-u32-1 \"Direct link to undecidingtimeout-u32-1\")\n\n*   **interface**: `api.consts.referenda.undecidingTimeout`\n*   **summary**: The number of blocks after submission that a referendum must begin being decided by. Once this passes, then anyone may cancel the referendum.\n\n* * *\n\nsafeMode[\u200b](#safemode \"Direct link to safeMode\")\n\n-------------------------------------------------\n\n### enterDepositAmount: `Option<u128>`[\u200b](#enterdepositamount-optionu128 \"Direct link to enterdepositamount-optionu128\")\n\n*   **interface**: `api.consts.safeMode.enterDepositAmount`\n    \n*   **summary**: The amount that will be reserved upon calling \\[`Pallet::enter`\\].\n    \n    `None` disallows permissionlessly enabling the safe-mode and is a sane default.\n    \n\n### enterDuration: `u32`[\u200b](#enterduration-u32 \"Direct link to enterduration-u32\")\n\n*   **interface**: `api.consts.safeMode.enterDuration`\n*   **summary**: For how many blocks the safe-mode will be entered by \\[`Pallet::enter`\\].\n\n### extendDepositAmount: `Option<u128>`[\u200b](#extenddepositamount-optionu128 \"Direct link to extenddepositamount-optionu128\")\n\n*   **interface**: `api.consts.safeMode.extendDepositAmount`\n    \n*   **summary**: The amount that will be reserved upon calling \\[`Pallet::extend`\\].\n    \n    `None` disallows permissionlessly extending the safe-mode and is a sane default.\n    \n\n### extendDuration: `u32`[\u200b](#extendduration-u32 \"Direct link to extendduration-u32\")\n\n*   **interface**: `api.consts.safeMode.extendDuration`\n    \n*   **summary**: For how many blocks the safe-mode can be extended by each \\[`Pallet::extend`\\] call.\n    \n    This does not impose a hard limit as the safe-mode can be extended multiple times.\n    \n\n### releaseDelay: `Option<u32>`[\u200b](#releasedelay-optionu32 \"Direct link to releasedelay-optionu32\")\n\n*   **interface**: `api.consts.safeMode.releaseDelay`\n    \n*   **summary**: The minimal duration a deposit will remain reserved after safe-mode is entered or extended, unless \\[`Pallet::force_release_deposit`\\] is successfully called sooner.\n    \n    Every deposit is tied to a specific activation or extension, thus each deposit can be released independently after the delay for it has passed.\n    \n    `None` disallows permissionlessly releasing the safe-mode deposits and is a sane default.\n    \n\n* * *\n\nsalary[\u200b](#salary \"Direct link to salary\")\n\n-------------------------------------------\n\n### budget: `u128`[\u200b](#budget-u128 \"Direct link to budget-u128\")\n\n*   **interface**: `api.consts.salary.budget`\n    \n*   **summary**: The total budget per cycle.\n    \n    This may change over the course of a cycle without any problem.\n    \n\n### payoutPeriod: `u32`[\u200b](#payoutperiod-u32 \"Direct link to payoutperiod-u32\")\n\n*   **interface**: `api.consts.salary.payoutPeriod`\n    \n*   **summary**: The number of blocks within a cycle which accounts have to claim the payout.\n    \n    The number of blocks between sequential payout cycles is the sum of this and `RegistrationPeriod`.\n    \n\n### registrationPeriod: `u32`[\u200b](#registrationperiod-u32 \"Direct link to registrationperiod-u32\")\n\n*   **interface**: `api.consts.salary.registrationPeriod`\n    \n*   **summary**: The number of blocks within a cycle which accounts have to register their intent to claim.\n    \n    The number of blocks between sequential payout cycles is the sum of this and `PayoutPeriod`.\n    \n\n* * *\n\nscheduler[\u200b](#scheduler \"Direct link to scheduler\")\n\n----------------------------------------------------\n\n### maximumWeight: `SpWeightsWeightV2Weight`[\u200b](#maximumweight-spweightsweightv2weight \"Direct link to maximumweight-spweightsweightv2weight\")\n\n*   **interface**: `api.consts.scheduler.maximumWeight`\n*   **summary**: The maximum weight that may be scheduled per block for any dispatchables.\n\n### maxScheduledPerBlock: `u32`[\u200b](#maxscheduledperblock-u32 \"Direct link to maxscheduledperblock-u32\")\n\n*   **interface**: `api.consts.scheduler.maxScheduledPerBlock`\n    \n*   **summary**: The maximum number of scheduled calls in the queue for a single block.\n    \n    NOTE: + Dependent pallets' benchmarks might require a higher limit for the setting. Set a higher limit under `runtime-benchmarks` feature.\n    \n\n* * *\n\nsociety[\u200b](#society \"Direct link to society\")\n\n----------------------------------------------\n\n### challengePeriod: `u32`[\u200b](#challengeperiod-u32 \"Direct link to challengeperiod-u32\")\n\n*   **interface**: `api.consts.society.challengePeriod`\n*   **summary**: The number of blocks between membership challenges.\n\n### claimPeriod: `u32`[\u200b](#claimperiod-u32 \"Direct link to claimperiod-u32\")\n\n*   **interface**: `api.consts.society.claimPeriod`\n*   **summary**: The number of blocks on which new candidates can claim their membership and be the named head.\n\n### graceStrikes: `u32`[\u200b](#gracestrikes-u32 \"Direct link to gracestrikes-u32\")\n\n*   **interface**: `api.consts.society.graceStrikes`\n*   **summary**: The maximum number of strikes before a member gets funds slashed.\n\n### maxBids: `u32`[\u200b](#maxbids-u32 \"Direct link to maxbids-u32\")\n\n*   **interface**: `api.consts.society.maxBids`\n*   **summary**: The maximum number of bids at once.\n\n### maxLockDuration: `u32`[\u200b](#maxlockduration-u32 \"Direct link to maxlockduration-u32\")\n\n*   **interface**: `api.consts.society.maxLockDuration`\n*   **summary**: The maximum duration of the payout lock.\n\n### maxPayouts: `u32`[\u200b](#maxpayouts-u32 \"Direct link to maxpayouts-u32\")\n\n*   **interface**: `api.consts.society.maxPayouts`\n*   **summary**: The maximum number of payouts a member may have waiting unclaimed.\n\n### palletId: `FrameSupportPalletId`[\u200b](#palletid-framesupportpalletid-6 \"Direct link to palletid-framesupportpalletid-6\")\n\n*   **interface**: `api.consts.society.palletId`\n*   **summary**: The societies's pallet id\n\n### periodSpend: `u128`[\u200b](#periodspend-u128 \"Direct link to periodspend-u128\")\n\n*   **interface**: `api.consts.society.periodSpend`\n*   **summary**: The amount of incentive paid within each period. Doesn't include VoterTip.\n\n### votingPeriod: `u32`[\u200b](#votingperiod-u32-1 \"Direct link to votingperiod-u32-1\")\n\n*   **interface**: `api.consts.society.votingPeriod`\n*   **summary**: The number of blocks on which new candidates should be voted on. Together with `ClaimPeriod`, this sums to the number of blocks between candidate intake periods.\n\n* * *\n\nstaking[\u200b](#staking \"Direct link to staking\")\n\n----------------------------------------------\n\n### bondingDuration: `u32`[\u200b](#bondingduration-u32 \"Direct link to bondingduration-u32\")\n\n*   **interface**: `api.consts.staking.bondingDuration`\n*   **summary**: Number of eras that staked funds must remain bonded for.\n\n### historyDepth: `u32`[\u200b](#historydepth-u32 \"Direct link to historydepth-u32\")\n\n*   **interface**: `api.consts.staking.historyDepth`\n    \n*   **summary**: Number of eras to keep in history.\n    \n    Following information is kept for eras in `[current_era - HistoryDepth, current_era]`: `ErasStakers`, `ErasStakersClipped`, `ErasValidatorPrefs`, `ErasValidatorReward`, `ErasRewardPoints`, `ErasTotalStake`, `ErasStartSessionIndex`, `ClaimedRewards`, `ErasStakersPaged`, `ErasStakersOverview`.\n    \n    Must be more than the number of eras delayed by session. I.e. active era must always be in history. I.e. `active_era > current_era - history_depth` must be guaranteed.\n    \n    If migrating an existing pallet from storage value to config value, this should be set to same value or greater as in storage.\n    \n    Note: `HistoryDepth` is used as the upper bound for the `BoundedVec` item `StakingLedger.legacy_claimed_rewards`. Setting this value lower than the existing value can lead to inconsistencies in the `StakingLedger` and will need to be handled properly in a migration. The test `reducing_history_depth_abrupt` shows this effect.\n    \n\n### maxExposurePageSize: `u32`[\u200b](#maxexposurepagesize-u32 \"Direct link to maxexposurepagesize-u32\")\n\n*   **interface**: `api.consts.staking.maxExposurePageSize`\n    \n*   **summary**: The maximum size of each `T::ExposurePage`.\n    \n    An `ExposurePage` is weakly bounded to a maximum of `MaxExposurePageSize` nominators.\n    \n    For older non-paged exposure, a reward payout was restricted to the top `MaxExposurePageSize` nominators. This is to limit the i/o cost for the nominator payout.\n    \n    Note: `MaxExposurePageSize` is used to bound `ClaimedRewards` and is unsafe to reduce without handling it in a migration.\n    \n\n### maxUnlockingChunks: `u32`[\u200b](#maxunlockingchunks-u32 \"Direct link to maxunlockingchunks-u32\")\n\n*   **interface**: `api.consts.staking.maxUnlockingChunks`\n    \n*   **summary**: The maximum number of `unlocking` chunks a \\[`StakingLedger`\\] can have. Effectively determines how many unique eras a staker may be unbonding in.\n    \n    Note: `MaxUnlockingChunks` is used as the upper bound for the `BoundedVec` item `StakingLedger.unlocking`. Setting this value lower than the existing value can lead to inconsistencies in the `StakingLedger` and will need to be handled properly in a runtime migration. The test `reducing_max_unlocking_chunks_abrupt` shows this effect.\n    \n\n### sessionsPerEra: `u32`[\u200b](#sessionsperera-u32 \"Direct link to sessionsperera-u32\")\n\n*   **interface**: `api.consts.staking.sessionsPerEra`\n*   **summary**: Number of sessions per era.\n\n### slashDeferDuration: `u32`[\u200b](#slashdeferduration-u32 \"Direct link to slashdeferduration-u32\")\n\n*   **interface**: `api.consts.staking.slashDeferDuration`\n    \n*   **summary**: Number of eras that slashes are deferred by, after computation.\n    \n    This should be less than the bonding duration. Set to 0 if slashes should be applied immediately, without opportunity for intervention.\n    \n\n* * *\n\nstatement[\u200b](#statement \"Direct link to statement\")\n\n----------------------------------------------------\n\n### byteCost: `u128`[\u200b](#bytecost-u128 \"Direct link to bytecost-u128\")\n\n*   **interface**: `api.consts.statement.byteCost`\n*   **summary**: Cost of data byte used for priority calculation.\n\n### maxAllowedBytes: `u32`[\u200b](#maxallowedbytes-u32 \"Direct link to maxallowedbytes-u32\")\n\n*   **interface**: `api.consts.statement.maxAllowedBytes`\n*   **summary**: Maximum data bytes allowed per account.\n\n### maxAllowedStatements: `u32`[\u200b](#maxallowedstatements-u32 \"Direct link to maxallowedstatements-u32\")\n\n*   **interface**: `api.consts.statement.maxAllowedStatements`\n*   **summary**: Maximum number of statements allowed per account.\n\n### minAllowedBytes: `u32`[\u200b](#minallowedbytes-u32 \"Direct link to minallowedbytes-u32\")\n\n*   **interface**: `api.consts.statement.minAllowedBytes`\n*   **summary**: Minimum data bytes allowed per account.\n\n### minAllowedStatements: `u32`[\u200b](#minallowedstatements-u32 \"Direct link to minallowedstatements-u32\")\n\n*   **interface**: `api.consts.statement.minAllowedStatements`\n*   **summary**: Minimum number of statements allowed per account.\n\n### statementCost: `u128`[\u200b](#statementcost-u128 \"Direct link to statementcost-u128\")\n\n*   **interface**: `api.consts.statement.statementCost`\n*   **summary**: Min balance for priority statements.\n\n* * *\n\nstateTrieMigration[\u200b](#statetriemigration \"Direct link to stateTrieMigration\")\n\n-------------------------------------------------------------------------------\n\n### maxKeyLen: `u32`[\u200b](#maxkeylen-u32 \"Direct link to maxkeylen-u32\")\n\n*   **interface**: `api.consts.stateTrieMigration.maxKeyLen`\n    \n*   **summary**: Maximal number of bytes that a key can have.\n    \n    FRAME itself does not limit the key length. The concrete value must therefore depend on your storage usage. A \\[`frame_support::storage::StorageNMap`\\] for example can have an arbitrary number of keys which are then hashed and concatenated, resulting in arbitrarily long keys.\n    \n    Use the _state migration RPC_ to retrieve the length of the longest key in your storage: [https://github.com/paritytech/substrate/issues/11642](https://github.com/paritytech/substrate/issues/11642)\n    \n    The migration will halt with a `Halted` event if this value is too small. Since there is no real penalty from over-estimating, it is advised to use a large value. The default is 512 byte.\n    \n    Some key lengths for reference:\n    \n    *   \\[`frame_support::storage::StorageValue`\\]: 32 byte\n        \n    *   \\[`frame_support::storage::StorageMap`\\]: 64 byte\n        \n    *   \\[`frame_support::storage::StorageDoubleMap`\\]: 96 byte\n        \n        For more info see [https://www.shawntabrizi.com/substrate/querying-substrate-storage-via-rpc/](https://www.shawntabrizi.com/substrate/querying-substrate-storage-via-rpc/)\n        \n\n* * *\n\nsystem[\u200b](#system \"Direct link to system\")\n\n-------------------------------------------\n\n### blockHashCount: `u32`[\u200b](#blockhashcount-u32 \"Direct link to blockhashcount-u32\")\n\n*   **interface**: `api.consts.system.blockHashCount`\n*   **summary**: Maximum number of block number to block hash mappings to keep (oldest pruned first).\n\n### blockLength: `FrameSystemLimitsBlockLength`[\u200b](#blocklength-framesystemlimitsblocklength \"Direct link to blocklength-framesystemlimitsblocklength\")\n\n*   **interface**: `api.consts.system.blockLength`\n*   **summary**: The maximum length of a block (in bytes).\n\n### blockWeights: `FrameSystemLimitsBlockWeights`[\u200b](#blockweights-framesystemlimitsblockweights \"Direct link to blockweights-framesystemlimitsblockweights\")\n\n*   **interface**: `api.consts.system.blockWeights`\n*   **summary**: Block & extrinsics weights: base values and limits.\n\n### dbWeight: `SpWeightsRuntimeDbWeight`[\u200b](#dbweight-spweightsruntimedbweight \"Direct link to dbweight-spweightsruntimedbweight\")\n\n*   **interface**: `api.consts.system.dbWeight`\n*   **summary**: The weight of runtime database operations the runtime can invoke.\n\n### ss58Prefix: `u16`[\u200b](#ss58prefix-u16 \"Direct link to ss58prefix-u16\")\n\n*   **interface**: `api.consts.system.ss58Prefix`\n    \n*   **summary**: The designated SS58 prefix of this chain.\n    \n    This replaces the \"ss58Format\" property declared in the chain spec. Reason is that the runtime should know about the prefix in order to make use of it as an identifier of the chain.\n    \n\n### version: `SpVersionRuntimeVersion`[\u200b](#version-spversionruntimeversion \"Direct link to version-spversionruntimeversion\")\n\n*   **interface**: `api.consts.system.version`\n*   **summary**: Get the chain's current version.\n\n* * *\n\ntechnicalCommittee[\u200b](#technicalcommittee \"Direct link to technicalCommittee\")\n\n-------------------------------------------------------------------------------\n\n### maxProposalWeight: `SpWeightsWeightV2Weight`[\u200b](#maxproposalweight-spweightsweightv2weight-2 \"Direct link to maxproposalweight-spweightsweightv2weight-2\")\n\n*   **interface**: `api.consts.technicalCommittee.maxProposalWeight`\n*   **summary**: The maximum weight of a dispatch call that can be proposed and executed.\n\n* * *\n\ntimestamp[\u200b](#timestamp \"Direct link to timestamp\")\n\n----------------------------------------------------\n\n### minimumPeriod: `u64`[\u200b](#minimumperiod-u64 \"Direct link to minimumperiod-u64\")\n\n*   **interface**: `api.consts.timestamp.minimumPeriod`\n    \n*   **summary**: The minimum period between blocks.\n    \n    Be aware that this is different to the _expected_ period that the block production apparatus provides. Your chosen consensus system will generally work with this to determine a sensible block time. For example, in the Aura pallet it will be double this period on default settings.\n    \n\n* * *\n\ntips[\u200b](#tips \"Direct link to tips\")\n\n-------------------------------------\n\n### dataDepositPerByte: `u128`[\u200b](#datadepositperbyte-u128-1 \"Direct link to datadepositperbyte-u128-1\")\n\n*   **interface**: `api.consts.tips.dataDepositPerByte`\n*   **summary**: The amount held on deposit per byte within the tip report reason or bounty description.\n\n### maximumReasonLength: `u32`[\u200b](#maximumreasonlength-u32-1 \"Direct link to maximumreasonlength-u32-1\")\n\n*   **interface**: `api.consts.tips.maximumReasonLength`\n    \n*   **summary**: Maximum acceptable reason length.\n    \n    Benchmarks depend on this value, be sure to update weights file when changing this value\n    \n\n### maxTipAmount: `u128`[\u200b](#maxtipamount-u128 \"Direct link to maxtipamount-u128\")\n\n*   **interface**: `api.consts.tips.maxTipAmount`\n*   **summary**: The maximum amount for a single tip.\n\n### tipCountdown: `u32`[\u200b](#tipcountdown-u32 \"Direct link to tipcountdown-u32\")\n\n*   **interface**: `api.consts.tips.tipCountdown`\n*   **summary**: The period for which a tip remains open after is has achieved threshold tippers.\n\n### tipFindersFee: `Percent`[\u200b](#tipfindersfee-percent \"Direct link to tipfindersfee-percent\")\n\n*   **interface**: `api.consts.tips.tipFindersFee`\n*   **summary**: The percent of the final tip which goes to the original reporter of the tip.\n\n### tipReportDepositBase: `u128`[\u200b](#tipreportdepositbase-u128 \"Direct link to tipreportdepositbase-u128\")\n\n*   **interface**: `api.consts.tips.tipReportDepositBase`\n*   **summary**: The amount held on deposit for placing a tip report.\n\n* * *\n\ntransactionPayment[\u200b](#transactionpayment \"Direct link to transactionPayment\")\n\n-------------------------------------------------------------------------------\n\n### operationalFeeMultiplier: `u8`[\u200b](#operationalfeemultiplier-u8 \"Direct link to operationalfeemultiplier-u8\")\n\n*   **interface**: `api.consts.transactionPayment.operationalFeeMultiplier`\n    \n*   **summary**: A fee multiplier for `Operational` extrinsics to compute \"virtual tip\" to boost their `priority`\n    \n    This value is multiplied by the `final_fee` to obtain a \"virtual tip\" that is later added to a tip component in regular `priority` calculations. It means that a `Normal` transaction can front-run a similarly-sized `Operational` extrinsic (with no tip), by including a tip value greater than the virtual tip.\n    \n    \\`\\``rust,ignore // For` Normal\\` let priority = priority\\_calc(tip);\n    \n    // For `Operational` let virtual\\_tip = (inclusion\\_fee + tip) \\* OperationalFeeMultiplier; let priority = priority\\_calc(tip + virtual\\_tip); \\`\\`\\`\n    \n    Note that since we use `final_fee` the multiplier applies also to the regular `tip` sent with the transaction. So, not only does the transaction get a priority bump based on the `inclusion_fee`, but we also amplify the impact of tips applied to `Operational` transactions.\n    \n\n* * *\n\ntreasury[\u200b](#treasury \"Direct link to treasury\")\n\n-------------------------------------------------\n\n### burn: `Permill`[\u200b](#burn-permill \"Direct link to burn-permill\")\n\n*   **interface**: `api.consts.treasury.burn`\n*   **summary**: Percentage of spare funds (if any) that are burnt per spend period.\n\n### maxApprovals: `u32`[\u200b](#maxapprovals-u32 \"Direct link to maxapprovals-u32\")\n\n*   **interface**: `api.consts.treasury.maxApprovals`\n    \n*   **summary**: The maximum number of approvals that can wait in the spending queue.\n    \n    NOTE: This parameter is also used within the Bounties Pallet extension if enabled.\n    \n\n### palletId: `FrameSupportPalletId`[\u200b](#palletid-framesupportpalletid-7 \"Direct link to palletid-framesupportpalletid-7\")\n\n*   **interface**: `api.consts.treasury.palletId`\n*   **summary**: The treasury's pallet id, used for deriving its sovereign account ID.\n\n### payoutPeriod: `u32`[\u200b](#payoutperiod-u32-1 \"Direct link to payoutperiod-u32-1\")\n\n*   **interface**: `api.consts.treasury.payoutPeriod`\n*   **summary**: The period during which an approved treasury spend has to be claimed.\n\n### proposalBond: `Permill`[\u200b](#proposalbond-permill \"Direct link to proposalbond-permill\")\n\n*   **interface**: `api.consts.treasury.proposalBond`\n*   **summary**: Fraction of a proposal's value that should be bonded in order to place the proposal. An accepted proposal gets these back. A rejected proposal does not.\n\n### proposalBondMaximum: `Option<u128>`[\u200b](#proposalbondmaximum-optionu128 \"Direct link to proposalbondmaximum-optionu128\")\n\n*   **interface**: `api.consts.treasury.proposalBondMaximum`\n*   **summary**: Maximum amount of funds that should be placed in a deposit for making a proposal.\n\n### proposalBondMinimum: `u128`[\u200b](#proposalbondminimum-u128 \"Direct link to proposalbondminimum-u128\")\n\n*   **interface**: `api.consts.treasury.proposalBondMinimum`\n*   **summary**: Minimum amount of funds that should be placed in a deposit for making a proposal.\n\n### spendPeriod: `u32`[\u200b](#spendperiod-u32 \"Direct link to spendperiod-u32\")\n\n*   **interface**: `api.consts.treasury.spendPeriod`\n*   **summary**: Period between successive spends.\n\n* * *\n\ntxPause[\u200b](#txpause \"Direct link to txPause\")\n\n----------------------------------------------\n\n### maxNameLen: `u32`[\u200b](#maxnamelen-u32 \"Direct link to maxnamelen-u32\")\n\n*   **interface**: `api.consts.txPause.maxNameLen`\n    \n*   **summary**: Maximum length for pallet name and call name SCALE encoded string names.\n    \n    TOO LONG NAMES WILL BE TREATED AS PAUSED.\n    \n\n* * *\n\nuniques[\u200b](#uniques \"Direct link to uniques\")\n\n----------------------------------------------\n\n### attributeDepositBase: `u128`[\u200b](#attributedepositbase-u128-1 \"Direct link to attributedepositbase-u128-1\")\n\n*   **interface**: `api.consts.uniques.attributeDepositBase`\n*   **summary**: The basic amount of funds that must be reserved when adding an attribute to an item.\n\n### collectionDeposit: `u128`[\u200b](#collectiondeposit-u128-1 \"Direct link to collectiondeposit-u128-1\")\n\n*   **interface**: `api.consts.uniques.collectionDeposit`\n*   **summary**: The basic amount of funds that must be reserved for collection.\n\n### depositPerByte: `u128`[\u200b](#depositperbyte-u128-2 \"Direct link to depositperbyte-u128-2\")\n\n*   **interface**: `api.consts.uniques.depositPerByte`\n*   **summary**: The additional funds that must be reserved for the number of bytes store in metadata, either \"normal\" metadata or attribute metadata.\n\n### itemDeposit: `u128`[\u200b](#itemdeposit-u128-1 \"Direct link to itemdeposit-u128-1\")\n\n*   **interface**: `api.consts.uniques.itemDeposit`\n*   **summary**: The basic amount of funds that must be reserved for an item.\n\n### keyLimit: `u32`[\u200b](#keylimit-u32-1 \"Direct link to keylimit-u32-1\")\n\n*   **interface**: `api.consts.uniques.keyLimit`\n*   **summary**: The maximum length of an attribute key.\n\n### metadataDepositBase: `u128`[\u200b](#metadatadepositbase-u128-3 \"Direct link to metadatadepositbase-u128-3\")\n\n*   **interface**: `api.consts.uniques.metadataDepositBase`\n*   **summary**: The basic amount of funds that must be reserved when adding metadata to your item.\n\n### stringLimit: `u32`[\u200b](#stringlimit-u32-4 \"Direct link to stringlimit-u32-4\")\n\n*   **interface**: `api.consts.uniques.stringLimit`\n*   **summary**: The maximum length of data stored on-chain.\n\n### valueLimit: `u32`[\u200b](#valuelimit-u32-1 \"Direct link to valuelimit-u32-1\")\n\n*   **interface**: `api.consts.uniques.valueLimit`\n*   **summary**: The maximum length of an attribute value.\n\n* * *\n\nutility[\u200b](#utility \"Direct link to utility\")\n\n----------------------------------------------\n\n### batchedCallsLimit: `u32`[\u200b](#batchedcallslimit-u32 \"Direct link to batchedcallslimit-u32\")\n\n*   **interface**: `api.consts.utility.batchedCallsLimit`\n*   **summary**: The limit on the number of batched calls.\n\n* * *\n\nvesting[\u200b](#vesting \"Direct link to vesting\")\n\n----------------------------------------------\n\n### maxVestingSchedules: `u32`[\u200b](#maxvestingschedules-u32 \"Direct link to maxvestingschedules-u32\")\n\n*   **interface**: `api.consts.vesting.maxVestingSchedules`\n\n### minVestedTransfer: `u128`[\u200b](#minvestedtransfer-u128 \"Direct link to minvestedtransfer-u128\")\n\n*   **interface**: `api.consts.vesting.minVestedTransfer`\n*   **summary**: The minimum amount transferred to call `vested_transfer`.\n\n* * *\n\nvoterList[\u200b](#voterlist \"Direct link to voterList\")\n\n----------------------------------------------------\n\n### bagThresholds: `Vec<u64>`[\u200b](#bagthresholds-vecu64 \"Direct link to bagthresholds-vecu64\")\n\n*   **interface**: `api.consts.voterList.bagThresholds`\n    \n*   **summary**: The list of thresholds separating the various bags.\n    \n    Ids are separated into unsorted bags according to their score. This specifies the thresholds separating the bags. An id's bag is the largest bag for which the id's score is less than or equal to its upper threshold.\n    \n    When ids are iterated, higher bags are iterated completely before lower bags. This means that iteration is _semi-sorted_: ids of higher score tend to come before ids of lower score, but peer ids within a particular bag are sorted in insertion order.\n    \n    #### Expressing the constant[\u200b](#expressing-the-constant \"Direct link to Expressing the constant\")\n    \n    This constant must be sorted in strictly increasing order. Duplicate items are not permitted.\n    \n    There is an implied upper limit of `Score::MAX`; that value does not need to be specified within the bag. For any two threshold lists, if one ends with `Score::MAX`, the other one does not, and they are otherwise equal, the two lists will behave identically.\n    \n    #### Calculation[\u200b](#calculation \"Direct link to Calculation\")\n    \n    It is recommended to generate the set of thresholds in a geometric series, such that there exists some constant ratio such that `threshold[k + 1] == (threshold[k] * constant_ratio).max(threshold[k] + 1)` for all `k`.\n    \n    The helpers in the `/utils/frame/generate-bags` module can simplify this calculation.\n    \n    #### Examples[\u200b](#examples \"Direct link to Examples\")\n    \n    *   If `BagThresholds::get().is_empty()`, then all ids are put into the same bag, and iteration is strictly in insertion order.\n        \n    *   If `BagThresholds::get().len() == 64`, and the thresholds are determined according to the procedure given above, then the constant ratio is equal to 2.\n        \n    *   If `BagThresholds::get().len() == 200`, and the thresholds are determined according to the procedure given above, then the constant ratio is approximately equal to 1.248.\n        \n    *   If the threshold list begins `[1, 2, 3, ...]`, then an id with score 0 or 1 will fall into bag 0, an id with score 2 will fall into bag 1, etc.\n        \n        #### Migration[\u200b](#migration \"Direct link to Migration\")\n        \n        In the event that this list ever changes, a copy of the old bags list must be retained. With that `List::migrate` can be called, which will perform the appropriate migration.\n        \n\n[Edit this page](https://github.com/polkadot-js/docs/edit/master/docs/substrate/constants.md)\n\n[Previous\\\n\\\nJSON-RPC](/docs/substrate/rpc)\n[Next\\\n\\\nStorage](/docs/substrate/storage)\n\n*   [alliance](#alliance)\n    *   [allyDeposit: `u128`](#allydeposit-u128)\n        \n    *   [maxAnnouncementsCount: `u32`](#maxannouncementscount-u32)\n        \n    *   [maxMembersCount: `u32`](#maxmemberscount-u32)\n        \n    *   [maxUnscrupulousItems: `u32`](#maxunscrupulousitems-u32)\n        \n    *   [maxWebsiteUrlLength: `u32`](#maxwebsiteurllength-u32)\n        \n*   [allianceMotion](#alliancemotion)\n    *   [maxProposalWeight: `SpWeightsWeightV2Weight`](#maxproposalweight-spweightsweightv2weight)\n        \n*   [assetConversion](#assetconversion)\n    *   [allowMultiAssetPools: `bool`](#allowmultiassetpools-bool)\n        \n    *   [liquidityWithdrawalFee: `Permill`](#liquiditywithdrawalfee-permill)\n        \n    *   [lpFee: `u32`](#lpfee-u32)\n        \n    *   [maxSwapPathLength: `u32`](#maxswappathlength-u32)\n        \n    *   [mintMinLiquidity: `u128`](#mintminliquidity-u128)\n        \n    *   [palletId: `FrameSupportPalletId`](#palletid-framesupportpalletid)\n        \n    *   [poolSetupFee: `u128`](#poolsetupfee-u128)\n        \n*   [assets](#assets)\n    *   [approvalDeposit: `u128`](#approvaldeposit-u128)\n        \n    *   [assetAccountDeposit: `u128`](#assetaccountdeposit-u128)\n        \n    *   [assetDeposit: `u128`](#assetdeposit-u128)\n        \n    *   [metadataDepositBase: `u128`](#metadatadepositbase-u128)\n        \n    *   [metadataDepositPerByte: `u128`](#metadatadepositperbyte-u128)\n        \n    *   [removeItemsLimit: `u32`](#removeitemslimit-u32)\n        \n    *   [stringLimit: `u32`](#stringlimit-u32)\n        \n*   [babe](#babe)\n    *   [epochDuration: `u64`](#epochduration-u64)\n        \n    *   [expectedBlockTime: `u64`](#expectedblocktime-u64)\n        \n    *   [maxAuthorities: `u32`](#maxauthorities-u32)\n        \n    *   [maxNominators: `u32`](#maxnominators-u32)\n        \n*   [balances](#balances)\n    *   [existentialDeposit: `u128`](#existentialdeposit-u128)\n        \n    *   [maxFreezes: `u32`](#maxfreezes-u32)\n        \n    *   [maxHolds: `u32`](#maxholds-u32)\n        \n    *   [maxLocks: `u32`](#maxlocks-u32)\n        \n    *   [maxReserves: `u32`](#maxreserves-u32)\n        \n*   [bounties](#bounties)\n    *   [bountyDepositBase: `u128`](#bountydepositbase-u128)\n        \n    *   [bountyDepositPayoutDelay: `u32`](#bountydepositpayoutdelay-u32)\n        \n    *   [bountyUpdatePeriod: `u32`](#bountyupdateperiod-u32)\n        \n    *   [bountyValueMinimum: `u128`](#bountyvalueminimum-u128)\n        \n    *   [curatorDepositMax: `Option<u128>`](#curatordepositmax-optionu128)\n        \n    *   [curatorDepositMin: `Option<u128>`](#curatordepositmin-optionu128)\n        \n    *   [curatorDepositMultiplier: `Permill`](#curatordepositmultiplier-permill)\n        \n    *   [dataDepositPerByte: `u128`](#datadepositperbyte-u128)\n        \n    *   [maximumReasonLength: `u32`](#maximumreasonlength-u32)\n        \n*   [broker](#broker)\n    *   [maxLeasedCores: `u32`](#maxleasedcores-u32)\n        \n    *   [maxReservedCores: `u32`](#maxreservedcores-u32)\n        \n    *   [palletId: `FrameSupportPalletId`](#palletid-framesupportpalletid-1)\n        \n    *   [timeslicePeriod: `u32`](#timesliceperiod-u32)\n        \n*   [childBounties](#childbounties)\n    *   [childBountyValueMinimum: `u128`](#childbountyvalueminimum-u128)\n        \n    *   [maxActiveChildBountyCount: `u32`](#maxactivechildbountycount-u32)\n        \n*   [contracts](#contracts)\n    *   [codeHashLockupDepositPercent: `Perbill`](#codehashlockupdepositpercent-perbill)\n        \n    *   [defaultDepositLimit: `u128`](#defaultdepositlimit-u128)\n        \n    *   [depositPerByte: `u128`](#depositperbyte-u128)\n        \n    *   [depositPerItem: `u128`](#depositperitem-u128)\n        \n    *   [environment: `PalletContractsEnvironment`](#environment-palletcontractsenvironment)\n        \n    *   [maxCodeLen: `u32`](#maxcodelen-u32)\n        \n    *   [maxDebugBufferLen: `u32`](#maxdebugbufferlen-u32)\n        \n    *   [maxDelegateDependencies: `u32`](#maxdelegatedependencies-u32)\n        \n    *   [maxStorageKeyLen: `u32`](#maxstoragekeylen-u32)\n        \n    *   [schedule: `PalletContractsSchedule`](#schedule-palletcontractsschedule)\n        \n    *   [unsafeUnstableInterface: `bool`](#unsafeunstableinterface-bool)\n        \n*   [convictionVoting](#convictionvoting)\n    *   [maxVotes: `u32`](#maxvotes-u32)\n        \n    *   [voteLockingPeriod: `u32`](#votelockingperiod-u32)\n        \n*   [coreFellowship](#corefellowship)\n    *   [evidenceSize: `u32`](#evidencesize-u32)\n        \n*   [council](#council)\n    *   [maxProposalWeight: `SpWeightsWeightV2Weight`](#maxproposalweight-spweightsweightv2weight-1)\n        \n*   [democracy](#democracy)\n    *   [cooloffPeriod: `u32`](#cooloffperiod-u32)\n        \n    *   [enactmentPeriod: `u32`](#enactmentperiod-u32)\n        \n    *   [fastTrackVotingPeriod: `u32`](#fasttrackvotingperiod-u32)\n        \n    *   [instantAllowed: `bool`](#instantallowed-bool)\n        \n    *   [launchPeriod: `u32`](#launchperiod-u32)\n        \n    *   [maxBlacklisted: `u32`](#maxblacklisted-u32)\n        \n    *   [maxDeposits: `u32`](#maxdeposits-u32)\n        \n    *   [maxProposals: `u32`](#maxproposals-u32)\n        \n    *   [maxVotes: `u32`](#maxvotes-u32-1)\n        \n    *   [minimumDeposit: `u128`](#minimumdeposit-u128)\n        \n    *   [voteLockingPeriod: `u32`](#votelockingperiod-u32-1)\n        \n    *   [votingPeriod: `u32`](#votingperiod-u32)\n        \n*   [electionProviderMultiPhase](#electionprovidermultiphase)\n    *   [betterSignedThreshold: `Perbill`](#bettersignedthreshold-perbill)\n        \n    *   [betterUnsignedThreshold: `Perbill`](#betterunsignedthreshold-perbill)\n        \n    *   [maxWinners: `u32`](#maxwinners-u32)\n        \n    *   [minerMaxLength: `u32`](#minermaxlength-u32)\n        \n    *   [minerMaxVotesPerVoter: `u32`](#minermaxvotespervoter-u32)\n        \n    *   [minerMaxWeight: `SpWeightsWeightV2Weight`](#minermaxweight-spweightsweightv2weight)\n        \n    *   [minerMaxWinners: `u32`](#minermaxwinners-u32)\n        \n    *   [minerTxPriority: `u64`](#minertxpriority-u64)\n        \n    *   [offchainRepeat: `u32`](#offchainrepeat-u32)\n        \n    *   [signedDepositByte: `u128`](#signeddepositbyte-u128)\n        \n    *   [signedDepositWeight: `u128`](#signeddepositweight-u128)\n        \n    *   [signedMaxRefunds: `u32`](#signedmaxrefunds-u32)\n        \n    *   [signedMaxSubmissions: `u32`](#signedmaxsubmissions-u32)\n        \n    *   [signedMaxWeight: `SpWeightsWeightV2Weight`](#signedmaxweight-spweightsweightv2weight)\n        \n    *   [signedPhase: `u32`](#signedphase-u32)\n        \n    *   [signedRewardBase: `u128`](#signedrewardbase-u128)\n        \n    *   [unsignedPhase: `u32`](#unsignedphase-u32)\n        \n*   [elections](#elections)\n    *   [candidacyBond: `u128`](#candidacybond-u128)\n        \n    *   [desiredMembers: `u32`](#desiredmembers-u32)\n        \n    *   [desiredRunnersUp: `u32`](#desiredrunnersup-u32)\n        \n    *   [maxCandidates: `u32`](#maxcandidates-u32)\n        \n    *   [maxVoters: `u32`](#maxvoters-u32)\n        \n    *   [maxVotesPerVoter: `u32`](#maxvotespervoter-u32)\n        \n    *   [palletId: `[u8;8]`](#palletid-u88)\n        \n    *   [termDuration: `u32`](#termduration-u32)\n        \n    *   [votingBondBase: `u128`](#votingbondbase-u128)\n        \n    *   [votingBondFactor: `u128`](#votingbondfactor-u128)\n        \n*   [fastUnstake](#fastunstake)\n    *   [deposit: `u128`](#deposit-u128)\n        \n*   [grandpa](#grandpa)\n    *   [maxAuthorities: `u32`](#maxauthorities-u32-1)\n        \n    *   [maxNominators: `u32`](#maxnominators-u32-1)\n        \n    *   [maxSetIdSessionEntries: `u64`](#maxsetidsessionentries-u64)\n        \n*   [identity](#identity)\n    *   [basicDeposit: `u128`](#basicdeposit-u128)\n        \n    *   [byteDeposit: `u128`](#bytedeposit-u128)\n        \n    *   [maxRegistrars: `u32`](#maxregistrars-u32)\n        \n    *   [maxSubAccounts: `u32`](#maxsubaccounts-u32)\n        \n    *   [subAccountDeposit: `u128`](#subaccountdeposit-u128)\n        \n*   [imOnline](#imonline)\n    *   [unsignedPriority: `u64`](#unsignedpriority-u64)\n        \n*   [indices](#indices)\n    *   [deposit: `u128`](#deposit-u128-1)\n        \n*   [lottery](#lottery)\n    *   [maxCalls: `u32`](#maxcalls-u32)\n        \n    *   [maxGenerateRandom: `u32`](#maxgeneraterandom-u32)\n        \n    *   [palletId: `FrameSupportPalletId`](#palletid-framesupportpalletid-2)\n        \n*   [messageQueue](#messagequeue)\n    *   [heapSize: `u32`](#heapsize-u32)\n        \n    *   [maxStale: `u32`](#maxstale-u32)\n        \n    *   [serviceWeight: `Option<SpWeightsWeightV2Weight>`](#serviceweight-optionspweightsweightv2weight)\n        \n*   [mixnet](#mixnet)\n    *   [maxAuthorities: `u32`](#maxauthorities-u32-2)\n        \n    *   [maxExternalAddressesPerMixnode: `u32`](#maxexternaladdressespermixnode-u32)\n        \n    *   [maxExternalAddressSize: `u32`](#maxexternaladdresssize-u32)\n        \n    *   [minMixnodes: `u32`](#minmixnodes-u32)\n        \n    *   [numCoverToCurrentBlocks: `u32`](#numcovertocurrentblocks-u32)\n        \n    *   [numCoverToPrevBlocks: `u32`](#numcovertoprevblocks-u32)\n        \n    *   [numRegisterEndSlackBlocks: `u32`](#numregisterendslackblocks-u32)\n        \n    *   [numRegisterStartSlackBlocks: `u32`](#numregisterstartslackblocks-u32)\n        \n    *   [numRequestsToCurrentBlocks: `u32`](#numrequeststocurrentblocks-u32)\n        \n    *   [registrationPriority: `u64`](#registrationpriority-u64)\n        \n*   [multisig](#multisig)\n    *   [depositBase: `u128`](#depositbase-u128)\n        \n    *   [depositFactor: `u128`](#depositfactor-u128)\n        \n    *   [maxSignatories: `u32`](#maxsignatories-u32)\n        \n*   [nftFractionalization](#nftfractionalization)\n    *   [deposit: `u128`](#deposit-u128-2)\n        \n    *   [newAssetName: `Bytes`](#newassetname-bytes)\n        \n    *   [newAssetSymbol: `Bytes`](#newassetsymbol-bytes)\n        \n    *   [palletId: `FrameSupportPalletId`](#palletid-framesupportpalletid-3)\n        \n    *   [stringLimit: `u32`](#stringlimit-u32-1)\n        \n*   [nfts](#nfts)\n    *   [approvalsLimit: `u32`](#approvalslimit-u32)\n        \n    *   [attributeDepositBase: `u128`](#attributedepositbase-u128)\n        \n    *   [collectionDeposit: `u128`](#collectiondeposit-u128)\n        \n    *   [depositPerByte: `u128`](#depositperbyte-u128-1)\n        \n    *   [features: `u64`](#features-u64)\n        \n    *   [itemAttributesApprovalsLimit: `u32`](#itemattributesapprovalslimit-u32)\n        \n    *   [itemDeposit: `u128`](#itemdeposit-u128)\n        \n    *   [keyLimit: `u32`](#keylimit-u32)\n        \n    *   [maxAttributesPerCall: `u32`](#maxattributespercall-u32)\n        \n    *   [maxDeadlineDuration: `u32`](#maxdeadlineduration-u32)\n        \n    *   [maxTips: `u32`](#maxtips-u32)\n        \n    *   [metadataDepositBase: `u128`](#metadatadepositbase-u128-1)\n        \n    *   [stringLimit: `u32`](#stringlimit-u32-2)\n        \n    *   [valueLimit: `u32`](#valuelimit-u32)\n        \n*   [nis](#nis)\n    *   [basePeriod: `u32`](#baseperiod-u32)\n        \n    *   [fifoQueueLen: `u32`](#fifoqueuelen-u32)\n        \n    *   [intakePeriod: `u32`](#intakeperiod-u32)\n        \n    *   [maxIntakeWeight: `SpWeightsWeightV2Weight`](#maxintakeweight-spweightsweightv2weight)\n        \n    *   [maxQueueLen: `u32`](#maxqueuelen-u32)\n        \n    *   [minBid: `u128`](#minbid-u128)\n        \n    *   [minReceipt: `Perquintill`](#minreceipt-perquintill)\n        \n    *   [palletId: `FrameSupportPalletId`](#palletid-framesupportpalletid-4)\n        \n    *   [queueCount: `u32`](#queuecount-u32)\n        \n    *   [thawThrottle: `(Perquintill,u32)`](#thawthrottle-perquintillu32)\n        \n*   [nominationPools](#nominationpools)\n    *   [maxPointsToBalance: `u8`](#maxpointstobalance-u8)\n        \n    *   [maxUnbonding: `u32`](#maxunbonding-u32)\n        \n    *   [palletId: `FrameSupportPalletId`](#palletid-framesupportpalletid-5)\n        \n*   [poolAssets](#poolassets)\n    *   [approvalDeposit: `u128`](#approvaldeposit-u128-1)\n        \n    *   [assetAccountDeposit: `u128`](#assetaccountdeposit-u128-1)\n        \n    *   [assetDeposit: `u128`](#assetdeposit-u128-1)\n        \n    *   [metadataDepositBase: `u128`](#metadatadepositbase-u128-2)\n        \n    *   [metadataDepositPerByte: `u128`](#metadatadepositperbyte-u128-1)\n        \n    *   [removeItemsLimit: `u32`](#removeitemslimit-u32-1)\n        \n    *   [stringLimit: `u32`](#stringlimit-u32-3)\n        \n*   [proxy](#proxy)\n    *   [announcementDepositBase: `u128`](#announcementdepositbase-u128)\n        \n    *   [announcementDepositFactor: `u128`](#announcementdepositfactor-u128)\n        \n    *   [maxPending: `u32`](#maxpending-u32)\n        \n    *   [maxProxies: `u32`](#maxproxies-u32)\n        \n    *   [proxyDepositBase: `u128`](#proxydepositbase-u128)\n        \n    *   [proxyDepositFactor: `u128`](#proxydepositfactor-u128)\n        \n*   [rankedPolls](#rankedpolls)\n    *   [alarmInterval: `u32`](#alarminterval-u32)\n        \n    *   [maxQueued: `u32`](#maxqueued-u32)\n        \n    *   [submissionDeposit: `u128`](#submissiondeposit-u128)\n        \n    *   [tracks: `Vec<(u16,PalletReferendaTrackInfo)>`](#tracks-vecu16palletreferendatrackinfo)\n        \n    *   [undecidingTimeout: `u32`](#undecidingtimeout-u32)\n        \n*   [recovery](#recovery)\n    *   [configDepositBase: `u128`](#configdepositbase-u128)\n        \n    *   [friendDepositFactor: `u128`](#frienddepositfactor-u128)\n        \n    *   [maxFriends: `u32`](#maxfriends-u32)\n        \n    *   [recoveryDeposit: `u128`](#recoverydeposit-u128)\n        \n*   [referenda](#referenda)\n    *   [alarmInterval: `u32`](#alarminterval-u32-1)\n        \n    *   [maxQueued: `u32`](#maxqueued-u32-1)\n        \n    *   [submissionDeposit: `u128`](#submissiondeposit-u128-1)\n        \n    *   [tracks: `Vec<(u16,PalletReferendaTrackInfo)>`](#tracks-vecu16palletreferendatrackinfo-1)\n        \n    *   [undecidingTimeout: `u32`](#undecidingtimeout-u32-1)\n        \n*   [safeMode](#safemode)\n    *   [enterDepositAmount: `Option<u128>`](#enterdepositamount-optionu128)\n        \n    *   [enterDuration: `u32`](#enterduration-u32)\n        \n    *   [extendDepositAmount: `Option<u128>`](#extenddepositamount-optionu128)\n        \n    *   [extendDuration: `u32`](#extendduration-u32)\n        \n    *   [releaseDelay: `Option<u32>`](#releasedelay-optionu32)\n        \n*   [salary](#salary)\n    *   [budget: `u128`](#budget-u128)\n        \n    *   [payoutPeriod: `u32`](#payoutperiod-u32)\n        \n    *   [registrationPeriod: `u32`](#registrationperiod-u32)\n        \n*   [scheduler](#scheduler)\n    *   [maximumWeight: `SpWeightsWeightV2Weight`](#maximumweight-spweightsweightv2weight)\n        \n    *   [maxScheduledPerBlock: `u32`](#maxscheduledperblock-u32)\n        \n*   [society](#society)\n    *   [challengePeriod: `u32`](#challengeperiod-u32)\n        \n    *   [claimPeriod: `u32`](#claimperiod-u32)\n        \n    *   [graceStrikes: `u32`](#gracestrikes-u32)\n        \n    *   [maxBids: `u32`](#maxbids-u32)\n        \n    *   [maxLockDuration: `u32`](#maxlockduration-u32)\n        \n    *   [maxPayouts: `u32`](#maxpayouts-u32)\n        \n    *   [palletId: `FrameSupportPalletId`](#palletid-framesupportpalletid-6)\n        \n    *   [periodSpend: `u128`](#periodspend-u128)\n        \n    *   [votingPeriod: `u32`](#votingperiod-u32-1)\n        \n*   [staking](#staking)\n    *   [bondingDuration: `u32`](#bondingduration-u32)\n        \n    *   [historyDepth: `u32`](#historydepth-u32)\n        \n    *   [maxExposurePageSize: `u32`](#maxexposurepagesize-u32)\n        \n    *   [maxUnlockingChunks: `u32`](#maxunlockingchunks-u32)\n        \n    *   [sessionsPerEra: `u32`](#sessionsperera-u32)\n        \n    *   [slashDeferDuration: `u32`](#slashdeferduration-u32)\n        \n*   [statement](#statement)\n    *   [byteCost: `u128`](#bytecost-u128)\n        \n    *   [maxAllowedBytes: `u32`](#maxallowedbytes-u32)\n        \n    *   [maxAllowedStatements: `u32`](#maxallowedstatements-u32)\n        \n    *   [minAllowedBytes: `u32`](#minallowedbytes-u32)\n        \n    *   [minAllowedStatements: `u32`](#minallowedstatements-u32)\n        \n    *   [statementCost: `u128`](#statementcost-u128)\n        \n*   [stateTrieMigration](#statetriemigration)\n    *   [maxKeyLen: `u32`](#maxkeylen-u32)\n        \n*   [system](#system)\n    *   [blockHashCount: `u32`](#blockhashcount-u32)\n        \n    *   [blockLength: `FrameSystemLimitsBlockLength`](#blocklength-framesystemlimitsblocklength)\n        \n    *   [blockWeights: `FrameSystemLimitsBlockWeights`](#blockweights-framesystemlimitsblockweights)\n        \n    *   [dbWeight: `SpWeightsRuntimeDbWeight`](#dbweight-spweightsruntimedbweight)\n        \n    *   [ss58Prefix: `u16`](#ss58prefix-u16)\n        \n    *   [version: `SpVersionRuntimeVersion`](#version-spversionruntimeversion)\n        \n*   [technicalCommittee](#technicalcommittee)\n    *   [maxProposalWeight: `SpWeightsWeightV2Weight`](#maxproposalweight-spweightsweightv2weight-2)\n        \n*   [timestamp](#timestamp)\n    *   [minimumPeriod: `u64`](#minimumperiod-u64)\n        \n*   [tips](#tips)\n    *   [dataDepositPerByte: `u128`](#datadepositperbyte-u128-1)\n        \n    *   [maximumReasonLength: `u32`](#maximumreasonlength-u32-1)\n        \n    *   [maxTipAmount: `u128`](#maxtipamount-u128)\n        \n    *   [tipCountdown: `u32`](#tipcountdown-u32)\n        \n    *   [tipFindersFee: `Percent`](#tipfindersfee-percent)\n        \n    *   [tipReportDepositBase: `u128`](#tipreportdepositbase-u128)\n        \n*   [transactionPayment](#transactionpayment)\n    *   [operationalFeeMultiplier: `u8`](#operationalfeemultiplier-u8)\n        \n*   [treasury](#treasury)\n    *   [burn: `Permill`](#burn-permill)\n        \n    *   [maxApprovals: `u32`](#maxapprovals-u32)\n        \n    *   [palletId: `FrameSupportPalletId`](#palletid-framesupportpalletid-7)\n        \n    *   [payoutPeriod: `u32`](#payoutperiod-u32-1)\n        \n    *   [proposalBond: `Permill`](#proposalbond-permill)\n        \n    *   [proposalBondMaximum: `Option<u128>`](#proposalbondmaximum-optionu128)\n        \n    *   [proposalBondMinimum: `u128`](#proposalbondminimum-u128)\n        \n    *   [spendPeriod: `u32`](#spendperiod-u32)\n        \n*   [txPause](#txpause)\n    *   [maxNameLen: `u32`](#maxnamelen-u32)\n        \n*   [uniques](#uniques)\n    *   [attributeDepositBase: `u128`](#attributedepositbase-u128-1)\n        \n    *   [collectionDeposit: `u128`](#collectiondeposit-u128-1)\n        \n    *   [depositPerByte: `u128`](#depositperbyte-u128-2)\n        \n    *   [itemDeposit: `u128`](#itemdeposit-u128-1)\n        \n    *   [keyLimit: `u32`](#keylimit-u32-1)\n        \n    *   [metadataDepositBase: `u128`](#metadatadepositbase-u128-3)\n        \n    *   [stringLimit: `u32`](#stringlimit-u32-4)\n        \n    *   [valueLimit: `u32`](#valuelimit-u32-1)\n        \n*   [utility](#utility)\n    *   [batchedCallsLimit: `u32`](#batchedcallslimit-u32)\n        \n*   [vesting](#vesting)\n    *   [maxVestingSchedules: `u32`](#maxvestingschedules-u32)\n        \n    *   [minVestedTransfer: `u128`](#minvestedtransfer-u128)\n        \n*   [voterList](#voterlist)\n    *   [bagThresholds: `Vec<u64>`](#bagthresholds-vecu64)"}, {"title": null, "description": null, "source_url": "https://polkadot.js.org/docs/substrate/errors", "markdown": "[Skip to main content](#__docusaurus_skipToContent_fallback)\n\n[![polkadot{.js}](https://polkadot.js.org/docs/img/logo.svg)\\\n\\\n**polkadot{.js}**](/docs/)\n\n[Apps UI (Wallet)](https://polkadot.js.org/apps/)\n[GitHub](https://github.com/polkadot-js/docs)\n\nSearch...\n\n*   [Introduction](#)\n    \n*   [API](#)\n    \n*   [Metadata](#)\n    \n    *   [Substrate](#)\n        \n        *   [Overview](/docs/substrate)\n            \n        *   [Runtime](/docs/substrate/runtime)\n            \n        *   [JSON-RPC](/docs/substrate/rpc)\n            \n        *   [Constants](/docs/substrate/constants)\n            \n        *   [Storage](/docs/substrate/storage)\n            \n        *   [Extrinsics](/docs/substrate/extrinsics)\n            \n        *   [Events](/docs/substrate/events)\n            \n        *   [Errors](/docs/substrate/errors)\n            \n    *   [Polkadot](#)\n        \n    *   [Kusama](#)\n        \n*   [Keyring](#)\n    \n*   [Crypto Utilities](#)\n    \n*   [Contracts (API)](#)\n    \n*   [Identicon (UI)](#)\n    \n*   [Keyring (UI)](#)\n    \n*   [Extension](#)\n    \n*   [Run, Bundle, Test](#)\n    \n\n*   [](/docs/)\n    \n*   Metadata\n*   Substrate\n*   Errors\n\nOn this page\n\nErrors\n======\n\nThis page lists the errors that can be encountered in the different modules.\n\n(NOTE: These were generated from a static/snapshot view of a recent default Substrate runtime. Some items may not be available in older nodes, or in any customized implementations.)\n\n*   **[alliance](#alliance)\n    **\n    \n*   **[allianceMotion](#alliancemotion)\n    **\n    \n*   **[assetConversion](#assetconversion)\n    **\n    \n*   **[assetRate](#assetrate)\n    **\n    \n*   **[assets](#assets)\n    **\n    \n*   **[babe](#babe)\n    **\n    \n*   **[balances](#balances)\n    **\n    \n*   **[bounties](#bounties)\n    **\n    \n*   **[broker](#broker)\n    **\n    \n*   **[childBounties](#childbounties)\n    **\n    \n*   **[contracts](#contracts)\n    **\n    \n*   **[convictionVoting](#convictionvoting)\n    **\n    \n*   **[coreFellowship](#corefellowship)\n    **\n    \n*   **[council](#council)\n    **\n    \n*   **[democracy](#democracy)\n    **\n    \n*   **[electionProviderMultiPhase](#electionprovidermultiphase)\n    **\n    \n*   **[elections](#elections)\n    **\n    \n*   **[fastUnstake](#fastunstake)\n    **\n    \n*   **[glutton](#glutton)\n    **\n    \n*   **[grandpa](#grandpa)\n    **\n    \n*   **[identity](#identity)\n    **\n    \n*   **[imOnline](#imonline)\n    **\n    \n*   **[indices](#indices)\n    **\n    \n*   **[lottery](#lottery)\n    **\n    \n*   **[messageQueue](#messagequeue)\n    **\n    \n*   **[multisig](#multisig)\n    **\n    \n*   **[nftFractionalization](#nftfractionalization)\n    **\n    \n*   **[nfts](#nfts)\n    **\n    \n*   **[nis](#nis)\n    **\n    \n*   **[nominationPools](#nominationpools)\n    **\n    \n*   **[poolAssets](#poolassets)\n    **\n    \n*   **[preimage](#preimage)\n    **\n    \n*   **[proxy](#proxy)\n    **\n    \n*   **[rankedCollective](#rankedcollective)\n    **\n    \n*   **[rankedPolls](#rankedpolls)\n    **\n    \n*   **[recovery](#recovery)\n    **\n    \n*   **[referenda](#referenda)\n    **\n    \n*   **[remark](#remark)\n    **\n    \n*   **[safeMode](#safemode)\n    **\n    \n*   **[salary](#salary)\n    **\n    \n*   **[scheduler](#scheduler)\n    **\n    \n*   **[session](#session)\n    **\n    \n*   **[society](#society)\n    **\n    \n*   **[staking](#staking)\n    **\n    \n*   **[stateTrieMigration](#statetriemigration)\n    **\n    \n*   **[sudo](#sudo)\n    **\n    \n*   **[system](#system)\n    **\n    \n*   **[tasksExample](#tasksexample)\n    **\n    \n*   **[technicalCommittee](#technicalcommittee)\n    **\n    \n*   **[technicalMembership](#technicalmembership)\n    **\n    \n*   **[tips](#tips)\n    **\n    \n*   **[transactionStorage](#transactionstorage)\n    **\n    \n*   **[treasury](#treasury)\n    **\n    \n*   **[txPause](#txpause)\n    **\n    \n*   **[uniques](#uniques)\n    **\n    \n*   **[utility](#utility)\n    **\n    \n*   **[vesting](#vesting)\n    **\n    \n*   **[voterList](#voterlist)\n    **\n    \n*   **[whitelist](#whitelist)\n    **\n    \n\n* * *\n\nalliance[\u200b](#alliance \"Direct link to alliance\")\n\n-------------------------------------------------\n\n### AccountNonGrata[\u200b](#accountnongrata \"Direct link to AccountNonGrata\")\n\n*   **interface**: `api.errors.alliance.AccountNonGrata.is`\n*   **summary**: Account has been deemed unscrupulous by the Alliance and is not welcome to join or be nominated.\n\n### AllianceAlreadyInitialized[\u200b](#alliancealreadyinitialized \"Direct link to AllianceAlreadyInitialized\")\n\n*   **interface**: `api.errors.alliance.AllianceAlreadyInitialized.is`\n*   **summary**: The Alliance has been initialized, therefore cannot be initialized again.\n\n### AllianceNotYetInitialized[\u200b](#alliancenotyetinitialized \"Direct link to AllianceNotYetInitialized\")\n\n*   **interface**: `api.errors.alliance.AllianceNotYetInitialized.is`\n*   **summary**: The Alliance has not been initialized yet, therefore accounts cannot join it.\n\n### AlreadyElevated[\u200b](#alreadyelevated \"Direct link to AlreadyElevated\")\n\n*   **interface**: `api.errors.alliance.AlreadyElevated.is`\n*   **summary**: Account is already an elevated (fellow) member.\n\n### AlreadyMember[\u200b](#alreadymember \"Direct link to AlreadyMember\")\n\n*   **interface**: `api.errors.alliance.AlreadyMember.is`\n*   **summary**: Account is already a member.\n\n### AlreadyRetiring[\u200b](#alreadyretiring \"Direct link to AlreadyRetiring\")\n\n*   **interface**: `api.errors.alliance.AlreadyRetiring.is`\n*   **summary**: Account already gave retirement notice\n\n### AlreadyUnscrupulous[\u200b](#alreadyunscrupulous \"Direct link to AlreadyUnscrupulous\")\n\n*   **interface**: `api.errors.alliance.AlreadyUnscrupulous.is`\n*   **summary**: Item is already listed as unscrupulous.\n\n### BadWitness[\u200b](#badwitness \"Direct link to BadWitness\")\n\n*   **interface**: `api.errors.alliance.BadWitness.is`\n*   **summary**: Invalid witness data given.\n\n### FellowsMissing[\u200b](#fellowsmissing \"Direct link to FellowsMissing\")\n\n*   **interface**: `api.errors.alliance.FellowsMissing.is`\n*   **summary**: Fellows must be provided to initialize the Alliance.\n\n### InsufficientFunds[\u200b](#insufficientfunds \"Direct link to InsufficientFunds\")\n\n*   **interface**: `api.errors.alliance.InsufficientFunds.is`\n*   **summary**: Balance is insufficient for the required deposit.\n\n### MissingAnnouncement[\u200b](#missingannouncement \"Direct link to MissingAnnouncement\")\n\n*   **interface**: `api.errors.alliance.MissingAnnouncement.is`\n*   **summary**: The announcement is not found.\n\n### MissingProposalHash[\u200b](#missingproposalhash \"Direct link to MissingProposalHash\")\n\n*   **interface**: `api.errors.alliance.MissingProposalHash.is`\n*   **summary**: The proposal hash is not found.\n\n### NotAlly[\u200b](#notally \"Direct link to NotAlly\")\n\n*   **interface**: `api.errors.alliance.NotAlly.is`\n*   **summary**: Account is not an ally.\n\n### NotListedAsUnscrupulous[\u200b](#notlistedasunscrupulous \"Direct link to NotListedAsUnscrupulous\")\n\n*   **interface**: `api.errors.alliance.NotListedAsUnscrupulous.is`\n*   **summary**: Item has not been deemed unscrupulous.\n\n### NotMember[\u200b](#notmember \"Direct link to NotMember\")\n\n*   **interface**: `api.errors.alliance.NotMember.is`\n*   **summary**: Account is not a member.\n\n### NoVotingRights[\u200b](#novotingrights \"Direct link to NoVotingRights\")\n\n*   **interface**: `api.errors.alliance.NoVotingRights.is`\n*   **summary**: Account does not have voting rights.\n\n### RetirementNoticeNotGiven[\u200b](#retirementnoticenotgiven \"Direct link to RetirementNoticeNotGiven\")\n\n*   **interface**: `api.errors.alliance.RetirementNoticeNotGiven.is`\n*   **summary**: Account did not give a retirement notice required to retire.\n\n### RetirementPeriodNotPassed[\u200b](#retirementperiodnotpassed \"Direct link to RetirementPeriodNotPassed\")\n\n*   **interface**: `api.errors.alliance.RetirementPeriodNotPassed.is`\n*   **summary**: Retirement period has not passed.\n\n### TooLongWebsiteUrl[\u200b](#toolongwebsiteurl \"Direct link to TooLongWebsiteUrl\")\n\n*   **interface**: `api.errors.alliance.TooLongWebsiteUrl.is`\n*   **summary**: Length of website URL exceeds `MaxWebsiteUrlLength`.\n\n### TooManyAnnouncements[\u200b](#toomanyannouncements \"Direct link to TooManyAnnouncements\")\n\n*   **interface**: `api.errors.alliance.TooManyAnnouncements.is`\n*   **summary**: Number of announcements exceeds `MaxAnnouncementsCount`.\n\n### TooManyMembers[\u200b](#toomanymembers \"Direct link to TooManyMembers\")\n\n*   **interface**: `api.errors.alliance.TooManyMembers.is`\n*   **summary**: Number of members exceeds `MaxMembersCount`.\n\n### TooManyUnscrupulousItems[\u200b](#toomanyunscrupulousitems \"Direct link to TooManyUnscrupulousItems\")\n\n*   **interface**: `api.errors.alliance.TooManyUnscrupulousItems.is`\n*   **summary**: The number of unscrupulous items exceeds `MaxUnscrupulousItems`.\n\n### WithoutGoodIdentityJudgement[\u200b](#withoutgoodidentityjudgement \"Direct link to WithoutGoodIdentityJudgement\")\n\n*   **interface**: `api.errors.alliance.WithoutGoodIdentityJudgement.is`\n*   **summary**: The account's identity has no good judgement.\n\n### WithoutRequiredIdentityFields[\u200b](#withoutrequiredidentityfields \"Direct link to WithoutRequiredIdentityFields\")\n\n*   **interface**: `api.errors.alliance.WithoutRequiredIdentityFields.is`\n*   **summary**: The account's identity does not have display field and website field.\n\n* * *\n\nallianceMotion[\u200b](#alliancemotion \"Direct link to allianceMotion\")\n\n-------------------------------------------------------------------\n\n### AlreadyInitialized[\u200b](#alreadyinitialized \"Direct link to AlreadyInitialized\")\n\n*   **interface**: `api.errors.allianceMotion.AlreadyInitialized.is`\n*   **summary**: Members are already initialized!\n\n### DuplicateProposal[\u200b](#duplicateproposal \"Direct link to DuplicateProposal\")\n\n*   **interface**: `api.errors.allianceMotion.DuplicateProposal.is`\n*   **summary**: Duplicate proposals not allowed\n\n### DuplicateVote[\u200b](#duplicatevote \"Direct link to DuplicateVote\")\n\n*   **interface**: `api.errors.allianceMotion.DuplicateVote.is`\n*   **summary**: Duplicate vote ignored\n\n### NotMember[\u200b](#notmember-1 \"Direct link to NotMember\")\n\n*   **interface**: `api.errors.allianceMotion.NotMember.is`\n*   **summary**: Account is not a member\n\n### PrimeAccountNotMember[\u200b](#primeaccountnotmember \"Direct link to PrimeAccountNotMember\")\n\n*   **interface**: `api.errors.allianceMotion.PrimeAccountNotMember.is`\n*   **summary**: Prime account is not a member\n\n### ProposalMissing[\u200b](#proposalmissing \"Direct link to ProposalMissing\")\n\n*   **interface**: `api.errors.allianceMotion.ProposalMissing.is`\n*   **summary**: Proposal must exist\n\n### TooEarly[\u200b](#tooearly \"Direct link to TooEarly\")\n\n*   **interface**: `api.errors.allianceMotion.TooEarly.is`\n*   **summary**: The close call was made too early, before the end of the voting.\n\n### TooManyProposals[\u200b](#toomanyproposals \"Direct link to TooManyProposals\")\n\n*   **interface**: `api.errors.allianceMotion.TooManyProposals.is`\n*   **summary**: There can only be a maximum of `MaxProposals` active proposals.\n\n### WrongIndex[\u200b](#wrongindex \"Direct link to WrongIndex\")\n\n*   **interface**: `api.errors.allianceMotion.WrongIndex.is`\n*   **summary**: Mismatched index\n\n### WrongProposalLength[\u200b](#wrongproposallength \"Direct link to WrongProposalLength\")\n\n*   **interface**: `api.errors.allianceMotion.WrongProposalLength.is`\n*   **summary**: The given length bound for the proposal was too low.\n\n### WrongProposalWeight[\u200b](#wrongproposalweight \"Direct link to WrongProposalWeight\")\n\n*   **interface**: `api.errors.allianceMotion.WrongProposalWeight.is`\n*   **summary**: The given weight bound for the proposal was too low.\n\n* * *\n\nassetConversion[\u200b](#assetconversion \"Direct link to assetConversion\")\n\n----------------------------------------------------------------------\n\n### AmountOneLessThanMinimal[\u200b](#amountonelessthanminimal \"Direct link to AmountOneLessThanMinimal\")\n\n*   **interface**: `api.errors.assetConversion.AmountOneLessThanMinimal.is`\n*   **summary**: Provided amount should be greater than or equal to the existential deposit/asset's minimal amount.\n\n### AmountOutTooHigh[\u200b](#amountouttoohigh \"Direct link to AmountOutTooHigh\")\n\n*   **interface**: `api.errors.assetConversion.AmountOutTooHigh.is`\n*   **summary**: Desired amount can't be equal to the pool reserve.\n\n### AmountTwoLessThanMinimal[\u200b](#amounttwolessthanminimal \"Direct link to AmountTwoLessThanMinimal\")\n\n*   **interface**: `api.errors.assetConversion.AmountTwoLessThanMinimal.is`\n*   **summary**: Provided amount should be greater than or equal to the existential deposit/asset's minimal amount.\n\n### AssetOneDepositDidNotMeetMinimum[\u200b](#assetonedepositdidnotmeetminimum \"Direct link to AssetOneDepositDidNotMeetMinimum\")\n\n*   **interface**: `api.errors.assetConversion.AssetOneDepositDidNotMeetMinimum.is`\n*   **summary**: The minimal amount requirement for the first token in the pair wasn't met.\n\n### AssetOneWithdrawalDidNotMeetMinimum[\u200b](#assetonewithdrawaldidnotmeetminimum \"Direct link to AssetOneWithdrawalDidNotMeetMinimum\")\n\n*   **interface**: `api.errors.assetConversion.AssetOneWithdrawalDidNotMeetMinimum.is`\n*   **summary**: The minimal amount requirement for the first token in the pair wasn't met.\n\n### AssetTwoDepositDidNotMeetMinimum[\u200b](#assettwodepositdidnotmeetminimum \"Direct link to AssetTwoDepositDidNotMeetMinimum\")\n\n*   **interface**: `api.errors.assetConversion.AssetTwoDepositDidNotMeetMinimum.is`\n*   **summary**: The minimal amount requirement for the second token in the pair wasn't met.\n\n### AssetTwoWithdrawalDidNotMeetMinimum[\u200b](#assettwowithdrawaldidnotmeetminimum \"Direct link to AssetTwoWithdrawalDidNotMeetMinimum\")\n\n*   **interface**: `api.errors.assetConversion.AssetTwoWithdrawalDidNotMeetMinimum.is`\n*   **summary**: The minimal amount requirement for the second token in the pair wasn't met.\n\n### CorrespondenceError[\u200b](#correspondenceerror \"Direct link to CorrespondenceError\")\n\n*   **interface**: `api.errors.assetConversion.CorrespondenceError.is`\n*   **summary**: Unable to find an element in an array/vec that should have one-to-one correspondence with another. For example, an array of assets constituting a `path` should have a corresponding array of `amounts` along the path.\n\n### EqualAssets[\u200b](#equalassets \"Direct link to EqualAssets\")\n\n*   **interface**: `api.errors.assetConversion.EqualAssets.is`\n*   **summary**: Provided assets are equal.\n\n### IncorrectPoolAssetId[\u200b](#incorrectpoolassetid \"Direct link to IncorrectPoolAssetId\")\n\n*   **interface**: `api.errors.assetConversion.IncorrectPoolAssetId.is`\n*   **summary**: It was not possible to get or increment the Id of the pool.\n\n### InsufficientLiquidity[\u200b](#insufficientliquidity \"Direct link to InsufficientLiquidity\")\n\n*   **interface**: `api.errors.assetConversion.InsufficientLiquidity.is`\n*   **summary**: Insufficient liquidity in the pool.\n\n### InsufficientLiquidityMinted[\u200b](#insufficientliquidityminted \"Direct link to InsufficientLiquidityMinted\")\n\n*   **interface**: `api.errors.assetConversion.InsufficientLiquidityMinted.is`\n*   **summary**: Insufficient liquidity minted.\n\n### InvalidPath[\u200b](#invalidpath \"Direct link to InvalidPath\")\n\n*   **interface**: `api.errors.assetConversion.InvalidPath.is`\n*   **summary**: The provided path must consists of 2 assets at least.\n\n### NonUniquePath[\u200b](#nonuniquepath \"Direct link to NonUniquePath\")\n\n*   **interface**: `api.errors.assetConversion.NonUniquePath.is`\n*   **summary**: The provided path must consists of unique assets.\n\n### OptimalAmountLessThanDesired[\u200b](#optimalamountlessthandesired \"Direct link to OptimalAmountLessThanDesired\")\n\n*   **interface**: `api.errors.assetConversion.OptimalAmountLessThanDesired.is`\n*   **summary**: Optimal calculated amount is less than desired.\n\n### Overflow[\u200b](#overflow \"Direct link to Overflow\")\n\n*   **interface**: `api.errors.assetConversion.Overflow.is`\n*   **summary**: An overflow happened.\n\n### PathError[\u200b](#patherror \"Direct link to PathError\")\n\n*   **interface**: `api.errors.assetConversion.PathError.is`\n*   **summary**: It was not possible to calculate path data.\n\n### PoolExists[\u200b](#poolexists \"Direct link to PoolExists\")\n\n*   **interface**: `api.errors.assetConversion.PoolExists.is`\n*   **summary**: Pool already exists.\n\n### PoolMustContainNativeCurrency[\u200b](#poolmustcontainnativecurrency \"Direct link to PoolMustContainNativeCurrency\")\n\n*   **interface**: `api.errors.assetConversion.PoolMustContainNativeCurrency.is`\n*   **summary**: Only pools with native on one side are valid.\n\n### PoolNotFound[\u200b](#poolnotfound \"Direct link to PoolNotFound\")\n\n*   **interface**: `api.errors.assetConversion.PoolNotFound.is`\n*   **summary**: The pool doesn't exist.\n\n### ProvidedMaximumNotSufficientForSwap[\u200b](#providedmaximumnotsufficientforswap \"Direct link to ProvidedMaximumNotSufficientForSwap\")\n\n*   **interface**: `api.errors.assetConversion.ProvidedMaximumNotSufficientForSwap.is`\n*   **summary**: Provided maximum amount is not sufficient for swap.\n\n### ProvidedMinimumNotSufficientForSwap[\u200b](#providedminimumnotsufficientforswap \"Direct link to ProvidedMinimumNotSufficientForSwap\")\n\n*   **interface**: `api.errors.assetConversion.ProvidedMinimumNotSufficientForSwap.is`\n*   **summary**: Calculated amount out is less than provided minimum amount.\n\n### ReserveLeftLessThanMinimal[\u200b](#reserveleftlessthanminimal \"Direct link to ReserveLeftLessThanMinimal\")\n\n*   **interface**: `api.errors.assetConversion.ReserveLeftLessThanMinimal.is`\n*   **summary**: Reserve needs to always be greater than or equal to the existential deposit/asset's minimal amount.\n\n### UnsupportedAsset[\u200b](#unsupportedasset \"Direct link to UnsupportedAsset\")\n\n*   **interface**: `api.errors.assetConversion.UnsupportedAsset.is`\n*   **summary**: Provided asset is not supported for pool.\n\n### WrongDesiredAmount[\u200b](#wrongdesiredamount \"Direct link to WrongDesiredAmount\")\n\n*   **interface**: `api.errors.assetConversion.WrongDesiredAmount.is`\n*   **summary**: Desired amount can't be zero.\n\n### ZeroAmount[\u200b](#zeroamount \"Direct link to ZeroAmount\")\n\n*   **interface**: `api.errors.assetConversion.ZeroAmount.is`\n*   **summary**: Amount can't be zero.\n\n### ZeroLiquidity[\u200b](#zeroliquidity \"Direct link to ZeroLiquidity\")\n\n*   **interface**: `api.errors.assetConversion.ZeroLiquidity.is`\n*   **summary**: Requested liquidity can't be zero.\n\n* * *\n\nassetRate[\u200b](#assetrate \"Direct link to assetRate\")\n\n----------------------------------------------------\n\n### AlreadyExists[\u200b](#alreadyexists \"Direct link to AlreadyExists\")\n\n*   **interface**: `api.errors.assetRate.AlreadyExists.is`\n*   **summary**: The given asset ID already has an assigned conversion rate and cannot be re-created.\n\n### UnknownAssetKind[\u200b](#unknownassetkind \"Direct link to UnknownAssetKind\")\n\n*   **interface**: `api.errors.assetRate.UnknownAssetKind.is`\n*   **summary**: The given asset ID is unknown.\n\n* * *\n\nassets[\u200b](#assets \"Direct link to assets\")\n\n-------------------------------------------\n\n### AlreadyExists[\u200b](#alreadyexists-1 \"Direct link to AlreadyExists\")\n\n*   **interface**: `api.errors.assets.AlreadyExists.is`\n*   **summary**: The asset-account already exists.\n\n### AssetNotLive[\u200b](#assetnotlive \"Direct link to AssetNotLive\")\n\n*   **interface**: `api.errors.assets.AssetNotLive.is`\n*   **summary**: The asset is not live, and likely being destroyed.\n\n### BadMetadata[\u200b](#badmetadata \"Direct link to BadMetadata\")\n\n*   **interface**: `api.errors.assets.BadMetadata.is`\n*   **summary**: Invalid metadata given.\n\n### BadWitness[\u200b](#badwitness-1 \"Direct link to BadWitness\")\n\n*   **interface**: `api.errors.assets.BadWitness.is`\n*   **summary**: Invalid witness data given.\n\n### BalanceLow[\u200b](#balancelow \"Direct link to BalanceLow\")\n\n*   **interface**: `api.errors.assets.BalanceLow.is`\n*   **summary**: Account balance must be greater than or equal to the transfer amount.\n\n### CallbackFailed[\u200b](#callbackfailed \"Direct link to CallbackFailed\")\n\n*   **interface**: `api.errors.assets.CallbackFailed.is`\n*   **summary**: Callback action resulted in error\n\n### Frozen[\u200b](#frozen \"Direct link to Frozen\")\n\n*   **interface**: `api.errors.assets.Frozen.is`\n*   **summary**: The origin account is frozen.\n\n### IncorrectStatus[\u200b](#incorrectstatus \"Direct link to IncorrectStatus\")\n\n*   **interface**: `api.errors.assets.IncorrectStatus.is`\n*   **summary**: The asset status is not the expected status.\n\n### InUse[\u200b](#inuse \"Direct link to InUse\")\n\n*   **interface**: `api.errors.assets.InUse.is`\n*   **summary**: The asset ID is already taken.\n\n### LiveAsset[\u200b](#liveasset \"Direct link to LiveAsset\")\n\n*   **interface**: `api.errors.assets.LiveAsset.is`\n*   **summary**: The asset is a live asset and is actively being used. Usually emit for operations such as `start_destroy` which require the asset to be in a destroying state.\n\n### MinBalanceZero[\u200b](#minbalancezero \"Direct link to MinBalanceZero\")\n\n*   **interface**: `api.errors.assets.MinBalanceZero.is`\n*   **summary**: Minimum balance should be non-zero.\n\n### NoAccount[\u200b](#noaccount \"Direct link to NoAccount\")\n\n*   **interface**: `api.errors.assets.NoAccount.is`\n*   **summary**: The account to alter does not exist.\n\n### NoDeposit[\u200b](#nodeposit \"Direct link to NoDeposit\")\n\n*   **interface**: `api.errors.assets.NoDeposit.is`\n*   **summary**: The asset-account doesn't have an associated deposit.\n\n### NoPermission[\u200b](#nopermission \"Direct link to NoPermission\")\n\n*   **interface**: `api.errors.assets.NoPermission.is`\n*   **summary**: The signing account has no permission to do the operation.\n\n### NotFrozen[\u200b](#notfrozen \"Direct link to NotFrozen\")\n\n*   **interface**: `api.errors.assets.NotFrozen.is`\n*   **summary**: The asset should be frozen before the given operation.\n\n### Unapproved[\u200b](#unapproved \"Direct link to Unapproved\")\n\n*   **interface**: `api.errors.assets.Unapproved.is`\n*   **summary**: No approval exists that would allow the transfer.\n\n### UnavailableConsumer[\u200b](#unavailableconsumer \"Direct link to UnavailableConsumer\")\n\n*   **interface**: `api.errors.assets.UnavailableConsumer.is`\n*   **summary**: Unable to increment the consumer reference counters on the account. Either no provider reference exists to allow a non-zero balance of a non-self-sufficient asset, or one fewer then the maximum number of consumers has been reached.\n\n### Unknown[\u200b](#unknown \"Direct link to Unknown\")\n\n*   **interface**: `api.errors.assets.Unknown.is`\n*   **summary**: The given asset ID is unknown.\n\n### WouldBurn[\u200b](#wouldburn \"Direct link to WouldBurn\")\n\n*   **interface**: `api.errors.assets.WouldBurn.is`\n*   **summary**: The operation would result in funds being burned.\n\n### WouldDie[\u200b](#woulddie \"Direct link to WouldDie\")\n\n*   **interface**: `api.errors.assets.WouldDie.is`\n*   **summary**: The source account would not survive the transfer and it needs to stay alive.\n\n* * *\n\nbabe[\u200b](#babe \"Direct link to babe\")\n\n-------------------------------------\n\n### DuplicateOffenceReport[\u200b](#duplicateoffencereport \"Direct link to DuplicateOffenceReport\")\n\n*   **interface**: `api.errors.babe.DuplicateOffenceReport.is`\n*   **summary**: A given equivocation report is valid but already previously reported.\n\n### InvalidConfiguration[\u200b](#invalidconfiguration \"Direct link to InvalidConfiguration\")\n\n*   **interface**: `api.errors.babe.InvalidConfiguration.is`\n*   **summary**: Submitted configuration is invalid.\n\n### InvalidEquivocationProof[\u200b](#invalidequivocationproof \"Direct link to InvalidEquivocationProof\")\n\n*   **interface**: `api.errors.babe.InvalidEquivocationProof.is`\n*   **summary**: An equivocation proof provided as part of an equivocation report is invalid.\n\n### InvalidKeyOwnershipProof[\u200b](#invalidkeyownershipproof \"Direct link to InvalidKeyOwnershipProof\")\n\n*   **interface**: `api.errors.babe.InvalidKeyOwnershipProof.is`\n*   **summary**: A key ownership proof provided as part of an equivocation report is invalid.\n\n* * *\n\nbalances[\u200b](#balances \"Direct link to balances\")\n\n-------------------------------------------------\n\n### DeadAccount[\u200b](#deadaccount \"Direct link to DeadAccount\")\n\n*   **interface**: `api.errors.balances.DeadAccount.is`\n*   **summary**: Beneficiary account must pre-exist.\n\n### ExistentialDeposit[\u200b](#existentialdeposit \"Direct link to ExistentialDeposit\")\n\n*   **interface**: `api.errors.balances.ExistentialDeposit.is`\n*   **summary**: Value too low to create account due to existential deposit.\n\n### ExistingVestingSchedule[\u200b](#existingvestingschedule \"Direct link to ExistingVestingSchedule\")\n\n*   **interface**: `api.errors.balances.ExistingVestingSchedule.is`\n*   **summary**: A vesting schedule already exists for this account.\n\n### Expendability[\u200b](#expendability \"Direct link to Expendability\")\n\n*   **interface**: `api.errors.balances.Expendability.is`\n*   **summary**: Transfer/payment would kill account.\n\n### InsufficientBalance[\u200b](#insufficientbalance \"Direct link to InsufficientBalance\")\n\n*   **interface**: `api.errors.balances.InsufficientBalance.is`\n*   **summary**: Balance too low to send value.\n\n### LiquidityRestrictions[\u200b](#liquidityrestrictions \"Direct link to LiquidityRestrictions\")\n\n*   **interface**: `api.errors.balances.LiquidityRestrictions.is`\n*   **summary**: Account liquidity restrictions prevent withdrawal.\n\n### TooManyFreezes[\u200b](#toomanyfreezes \"Direct link to TooManyFreezes\")\n\n*   **interface**: `api.errors.balances.TooManyFreezes.is`\n*   **summary**: Number of freezes exceed `MaxFreezes`.\n\n### TooManyHolds[\u200b](#toomanyholds \"Direct link to TooManyHolds\")\n\n*   **interface**: `api.errors.balances.TooManyHolds.is`\n*   **summary**: Number of holds exceed `MaxHolds`.\n\n### TooManyReserves[\u200b](#toomanyreserves \"Direct link to TooManyReserves\")\n\n*   **interface**: `api.errors.balances.TooManyReserves.is`\n*   **summary**: Number of named reserves exceed `MaxReserves`.\n\n### VestingBalance[\u200b](#vestingbalance \"Direct link to VestingBalance\")\n\n*   **interface**: `api.errors.balances.VestingBalance.is`\n*   **summary**: Vesting balance too high to send value.\n\n* * *\n\nbounties[\u200b](#bounties \"Direct link to bounties\")\n\n-------------------------------------------------\n\n### HasActiveChildBounty[\u200b](#hasactivechildbounty \"Direct link to HasActiveChildBounty\")\n\n*   **interface**: `api.errors.bounties.HasActiveChildBounty.is`\n*   **summary**: The bounty cannot be closed because it has active child bounties.\n\n### InsufficientProposersBalance[\u200b](#insufficientproposersbalance \"Direct link to InsufficientProposersBalance\")\n\n*   **interface**: `api.errors.bounties.InsufficientProposersBalance.is`\n*   **summary**: Proposer's balance is too low.\n\n### InvalidFee[\u200b](#invalidfee \"Direct link to InvalidFee\")\n\n*   **interface**: `api.errors.bounties.InvalidFee.is`\n*   **summary**: Invalid bounty fee.\n\n### InvalidIndex[\u200b](#invalidindex \"Direct link to InvalidIndex\")\n\n*   **interface**: `api.errors.bounties.InvalidIndex.is`\n*   **summary**: No proposal or bounty at that index.\n\n### InvalidValue[\u200b](#invalidvalue \"Direct link to InvalidValue\")\n\n*   **interface**: `api.errors.bounties.InvalidValue.is`\n*   **summary**: Invalid bounty value.\n\n### PendingPayout[\u200b](#pendingpayout \"Direct link to PendingPayout\")\n\n*   **interface**: `api.errors.bounties.PendingPayout.is`\n*   **summary**: A bounty payout is pending. To cancel the bounty, you must unassign and slash the curator.\n\n### Premature[\u200b](#premature \"Direct link to Premature\")\n\n*   **interface**: `api.errors.bounties.Premature.is`\n*   **summary**: The bounties cannot be claimed/closed because it's still in the countdown period.\n\n### ReasonTooBig[\u200b](#reasontoobig \"Direct link to ReasonTooBig\")\n\n*   **interface**: `api.errors.bounties.ReasonTooBig.is`\n*   **summary**: The reason given is just too big.\n\n### RequireCurator[\u200b](#requirecurator \"Direct link to RequireCurator\")\n\n*   **interface**: `api.errors.bounties.RequireCurator.is`\n*   **summary**: Require bounty curator.\n\n### TooManyQueued[\u200b](#toomanyqueued \"Direct link to TooManyQueued\")\n\n*   **interface**: `api.errors.bounties.TooManyQueued.is`\n*   **summary**: Too many approvals are already queued.\n\n### UnexpectedStatus[\u200b](#unexpectedstatus \"Direct link to UnexpectedStatus\")\n\n*   **interface**: `api.errors.bounties.UnexpectedStatus.is`\n*   **summary**: The bounty status is unexpected.\n\n* * *\n\nbroker[\u200b](#broker \"Direct link to broker\")\n\n-------------------------------------------\n\n### AlreadyExpired[\u200b](#alreadyexpired \"Direct link to AlreadyExpired\")\n\n*   **interface**: `api.errors.broker.AlreadyExpired.is`\n*   **summary**: The lease expiry time has already passed.\n\n### CompletePivot[\u200b](#completepivot \"Direct link to CompletePivot\")\n\n*   **interface**: `api.errors.broker.CompletePivot.is`\n*   **summary**: The pivot mask for the interlacing is complete (and therefore not a strict subset).\n\n### CorruptWorkplan[\u200b](#corruptworkplan \"Direct link to CorruptWorkplan\")\n\n*   **interface**: `api.errors.broker.CorruptWorkplan.is`\n*   **summary**: The workplan of the pallet's state is invalid. This indicates a state corruption.\n\n### ExteriorPivot[\u200b](#exteriorpivot \"Direct link to ExteriorPivot\")\n\n*   **interface**: `api.errors.broker.ExteriorPivot.is`\n*   **summary**: The pivot mask for the interlacing is not contained within the region's interlace mask.\n\n### IncompleteAssignment[\u200b](#incompleteassignment \"Direct link to IncompleteAssignment\")\n\n*   **interface**: `api.errors.broker.IncompleteAssignment.is`\n*   **summary**: The workload assigned for renewal is incomplete. This is unexpected and indicates a logic error.\n\n### InvalidConfig[\u200b](#invalidconfig \"Direct link to InvalidConfig\")\n\n*   **interface**: `api.errors.broker.InvalidConfig.is`\n*   **summary**: The configuration could not be applied because it is invalid.\n\n### NoHistory[\u200b](#nohistory \"Direct link to NoHistory\")\n\n*   **interface**: `api.errors.broker.NoHistory.is`\n*   **summary**: The history item does not exist.\n\n### NoSales[\u200b](#nosales \"Direct link to NoSales\")\n\n*   **interface**: `api.errors.broker.NoSales.is`\n*   **summary**: There is no sale happening currently.\n\n### NotAllowed[\u200b](#notallowed \"Direct link to NotAllowed\")\n\n*   **interface**: `api.errors.broker.NotAllowed.is`\n*   **summary**: Invalid attempt to renew.\n\n### NothingToDo[\u200b](#nothingtodo \"Direct link to NothingToDo\")\n\n*   **interface**: `api.errors.broker.NothingToDo.is`\n*   **summary**: There is no work to be done.\n\n### NotOwner[\u200b](#notowner \"Direct link to NotOwner\")\n\n*   **interface**: `api.errors.broker.NotOwner.is`\n*   **summary**: The owner of the region is not the origin.\n\n### Overpriced[\u200b](#overpriced \"Direct link to Overpriced\")\n\n*   **interface**: `api.errors.broker.Overpriced.is`\n*   **summary**: The price limit is exceeded.\n\n### PivotTooEarly[\u200b](#pivottooearly \"Direct link to PivotTooEarly\")\n\n*   **interface**: `api.errors.broker.PivotTooEarly.is`\n*   **summary**: The pivot point of the partition at the beginning of the region.\n\n### PivotTooLate[\u200b](#pivottoolate \"Direct link to PivotTooLate\")\n\n*   **interface**: `api.errors.broker.PivotTooLate.is`\n*   **summary**: The pivot point of the partition at or after the end of the region.\n\n### SoldOut[\u200b](#soldout \"Direct link to SoldOut\")\n\n*   **interface**: `api.errors.broker.SoldOut.is`\n*   **summary**: The sale limit has been reached.\n\n### StillValid[\u200b](#stillvalid \"Direct link to StillValid\")\n\n*   **interface**: `api.errors.broker.StillValid.is`\n*   **summary**: An item cannot be dropped because it is still valid.\n\n### TooEarly[\u200b](#tooearly-1 \"Direct link to TooEarly\")\n\n*   **interface**: `api.errors.broker.TooEarly.is`\n*   **summary**: The purchase cannot happen yet as the sale period is yet to begin.\n\n### TooManyLeases[\u200b](#toomanyleases \"Direct link to TooManyLeases\")\n\n*   **interface**: `api.errors.broker.TooManyLeases.is`\n*   **summary**: The maximum amount of leases has already been reached.\n\n### TooManyReservations[\u200b](#toomanyreservations \"Direct link to TooManyReservations\")\n\n*   **interface**: `api.errors.broker.TooManyReservations.is`\n*   **summary**: The maximum amount of reservations has already been reached.\n\n### Unavailable[\u200b](#unavailable \"Direct link to Unavailable\")\n\n*   **interface**: `api.errors.broker.Unavailable.is`\n*   **summary**: There are no cores available.\n\n### Uninitialized[\u200b](#uninitialized \"Direct link to Uninitialized\")\n\n*   **interface**: `api.errors.broker.Uninitialized.is`\n*   **summary**: This pallet has not yet been initialized.\n\n### UnknownContribution[\u200b](#unknowncontribution \"Direct link to UnknownContribution\")\n\n*   **interface**: `api.errors.broker.UnknownContribution.is`\n*   **summary**: The identified contribution to the Instantaneous Core Pool is unknown.\n\n### UnknownRegion[\u200b](#unknownregion \"Direct link to UnknownRegion\")\n\n*   **interface**: `api.errors.broker.UnknownRegion.is`\n*   **summary**: The given region identity is not known.\n\n### UnknownRenewal[\u200b](#unknownrenewal \"Direct link to UnknownRenewal\")\n\n*   **interface**: `api.errors.broker.UnknownRenewal.is`\n*   **summary**: The renewal record cannot be found.\n\n### UnknownReservation[\u200b](#unknownreservation \"Direct link to UnknownReservation\")\n\n*   **interface**: `api.errors.broker.UnknownReservation.is`\n*   **summary**: No reservation of the given index exists.\n\n### UnknownRevenue[\u200b](#unknownrevenue \"Direct link to UnknownRevenue\")\n\n*   **interface**: `api.errors.broker.UnknownRevenue.is`\n*   **summary**: The revenue for the Instantaneous Core Sales of this period is not (yet) known and thus this operation cannot proceed.\n\n### VoidPivot[\u200b](#voidpivot \"Direct link to VoidPivot\")\n\n*   **interface**: `api.errors.broker.VoidPivot.is`\n*   **summary**: The pivot mask for the interlacing is void (and therefore unschedulable).\n\n### WrongTime[\u200b](#wrongtime \"Direct link to WrongTime\")\n\n*   **interface**: `api.errors.broker.WrongTime.is`\n*   **summary**: The renewal operation is not valid at the current time (it may become valid in the next sale).\n\n* * *\n\nchildBounties[\u200b](#childbounties \"Direct link to childBounties\")\n\n----------------------------------------------------------------\n\n### InsufficientBountyBalance[\u200b](#insufficientbountybalance \"Direct link to InsufficientBountyBalance\")\n\n*   **interface**: `api.errors.childBounties.InsufficientBountyBalance.is`\n*   **summary**: The bounty balance is not enough to add new child-bounty.\n\n### ParentBountyNotActive[\u200b](#parentbountynotactive \"Direct link to ParentBountyNotActive\")\n\n*   **interface**: `api.errors.childBounties.ParentBountyNotActive.is`\n*   **summary**: The parent bounty is not in active state.\n\n### TooManyChildBounties[\u200b](#toomanychildbounties \"Direct link to TooManyChildBounties\")\n\n*   **interface**: `api.errors.childBounties.TooManyChildBounties.is`\n*   **summary**: Number of child bounties exceeds limit `MaxActiveChildBountyCount`.\n\n* * *\n\ncontracts[\u200b](#contracts \"Direct link to contracts\")\n\n----------------------------------------------------\n\n### CannotAddSelfAsDelegateDependency[\u200b](#cannotaddselfasdelegatedependency \"Direct link to CannotAddSelfAsDelegateDependency\")\n\n*   **interface**: `api.errors.contracts.CannotAddSelfAsDelegateDependency.is`\n*   **summary**: Can not add a delegate dependency to the code hash of the contract itself.\n\n### CodeInfoNotFound[\u200b](#codeinfonotfound \"Direct link to CodeInfoNotFound\")\n\n*   **interface**: `api.errors.contracts.CodeInfoNotFound.is`\n*   **summary**: No code info could be found at the supplied code hash.\n\n### CodeInUse[\u200b](#codeinuse \"Direct link to CodeInUse\")\n\n*   **interface**: `api.errors.contracts.CodeInUse.is`\n*   **summary**: Code removal was denied because the code is still in use by at least one contract.\n\n### CodeNotFound[\u200b](#codenotfound \"Direct link to CodeNotFound\")\n\n*   **interface**: `api.errors.contracts.CodeNotFound.is`\n*   **summary**: No code could be found at the supplied code hash.\n\n### CodeRejected[\u200b](#coderejected \"Direct link to CodeRejected\")\n\n*   **interface**: `api.errors.contracts.CodeRejected.is`\n    \n*   **summary**: The contract's code was found to be invalid during validation.\n    \n    The most likely cause of this is that an API was used which is not supported by the node. This happens if an older node is used with a new version of ink!. Try updating your node to the newest available version.\n    \n    A more detailed error can be found on the node console if debug messages are enabled by supplying `-lruntime::contracts=debug`.\n    \n\n### CodeTooLarge[\u200b](#codetoolarge \"Direct link to CodeTooLarge\")\n\n*   **interface**: `api.errors.contracts.CodeTooLarge.is`\n*   **summary**: The code supplied to `instantiate_with_code` exceeds the limit specified in the current schedule.\n\n### ContractNotFound[\u200b](#contractnotfound \"Direct link to ContractNotFound\")\n\n*   **interface**: `api.errors.contracts.ContractNotFound.is`\n*   **summary**: No contract was found at the specified address.\n\n### ContractReverted[\u200b](#contractreverted \"Direct link to ContractReverted\")\n\n*   **interface**: `api.errors.contracts.ContractReverted.is`\n*   **summary**: The contract ran to completion but decided to revert its storage changes. Please note that this error is only returned from extrinsics. When called directly or via RPC an `Ok` will be returned. In this case the caller needs to inspect the flags to determine whether a reversion has taken place.\n\n### ContractTrapped[\u200b](#contracttrapped \"Direct link to ContractTrapped\")\n\n*   **interface**: `api.errors.contracts.ContractTrapped.is`\n*   **summary**: Contract trapped during execution.\n\n### DecodingFailed[\u200b](#decodingfailed \"Direct link to DecodingFailed\")\n\n*   **interface**: `api.errors.contracts.DecodingFailed.is`\n*   **summary**: Input passed to a contract API function failed to decode as expected type.\n\n### DelegateDependencyAlreadyExists[\u200b](#delegatedependencyalreadyexists \"Direct link to DelegateDependencyAlreadyExists\")\n\n*   **interface**: `api.errors.contracts.DelegateDependencyAlreadyExists.is`\n*   **summary**: The contract already depends on the given delegate dependency.\n\n### DelegateDependencyNotFound[\u200b](#delegatedependencynotfound \"Direct link to DelegateDependencyNotFound\")\n\n*   **interface**: `api.errors.contracts.DelegateDependencyNotFound.is`\n*   **summary**: The dependency was not found in the contract's delegate dependencies.\n\n### DuplicateContract[\u200b](#duplicatecontract \"Direct link to DuplicateContract\")\n\n*   **interface**: `api.errors.contracts.DuplicateContract.is`\n*   **summary**: A contract with the same AccountId already exists.\n\n### Indeterministic[\u200b](#indeterministic \"Direct link to Indeterministic\")\n\n*   **interface**: `api.errors.contracts.Indeterministic.is`\n*   **summary**: An indetermistic code was used in a context where this is not permitted.\n\n### InputForwarded[\u200b](#inputforwarded \"Direct link to InputForwarded\")\n\n*   **interface**: `api.errors.contracts.InputForwarded.is`\n*   **summary**: `seal_call` forwarded this contracts input. It therefore is no longer available.\n\n### InvalidCallFlags[\u200b](#invalidcallflags \"Direct link to InvalidCallFlags\")\n\n*   **interface**: `api.errors.contracts.InvalidCallFlags.is`\n*   **summary**: Invalid combination of flags supplied to `seal_call` or `seal_delegate_call`.\n\n### InvalidSchedule[\u200b](#invalidschedule \"Direct link to InvalidSchedule\")\n\n*   **interface**: `api.errors.contracts.InvalidSchedule.is`\n*   **summary**: Invalid schedule supplied, e.g. with zero weight of a basic operation.\n\n### MaxCallDepthReached[\u200b](#maxcalldepthreached \"Direct link to MaxCallDepthReached\")\n\n*   **interface**: `api.errors.contracts.MaxCallDepthReached.is`\n*   **summary**: Performing a call was denied because the calling depth reached the limit of what is specified in the schedule.\n\n### MaxDelegateDependenciesReached[\u200b](#maxdelegatedependenciesreached \"Direct link to MaxDelegateDependenciesReached\")\n\n*   **interface**: `api.errors.contracts.MaxDelegateDependenciesReached.is`\n*   **summary**: The contract has reached its maximum number of delegate dependencies.\n\n### MigrationInProgress[\u200b](#migrationinprogress \"Direct link to MigrationInProgress\")\n\n*   **interface**: `api.errors.contracts.MigrationInProgress.is`\n*   **summary**: A pending migration needs to complete before the extrinsic can be called.\n\n### NoChainExtension[\u200b](#nochainextension \"Direct link to NoChainExtension\")\n\n*   **interface**: `api.errors.contracts.NoChainExtension.is`\n*   **summary**: The chain does not provide a chain extension. Calling the chain extension results in this error. Note that this usually shouldn't happen as deploying such contracts is rejected.\n\n### NoMigrationPerformed[\u200b](#nomigrationperformed \"Direct link to NoMigrationPerformed\")\n\n*   **interface**: `api.errors.contracts.NoMigrationPerformed.is`\n*   **summary**: Migrate dispatch call was attempted but no migration was performed.\n\n### OutOfBounds[\u200b](#outofbounds \"Direct link to OutOfBounds\")\n\n*   **interface**: `api.errors.contracts.OutOfBounds.is`\n*   **summary**: A buffer outside of sandbox memory was passed to a contract API function.\n\n### OutOfGas[\u200b](#outofgas \"Direct link to OutOfGas\")\n\n*   **interface**: `api.errors.contracts.OutOfGas.is`\n*   **summary**: The executed contract exhausted its gas limit.\n\n### OutputBufferTooSmall[\u200b](#outputbuffertoosmall \"Direct link to OutputBufferTooSmall\")\n\n*   **interface**: `api.errors.contracts.OutputBufferTooSmall.is`\n*   **summary**: The output buffer supplied to a contract API call was too small.\n\n### RandomSubjectTooLong[\u200b](#randomsubjecttoolong \"Direct link to RandomSubjectTooLong\")\n\n*   **interface**: `api.errors.contracts.RandomSubjectTooLong.is`\n*   **summary**: The subject passed to `seal_random` exceeds the limit.\n\n### ReentranceDenied[\u200b](#reentrancedenied \"Direct link to ReentranceDenied\")\n\n*   **interface**: `api.errors.contracts.ReentranceDenied.is`\n*   **summary**: A call tried to invoke a contract that is flagged as non-reentrant. The only other cause is that a call from a contract into the runtime tried to call back into `pallet-contracts`. This would make the whole pallet reentrant with regard to contract code execution which is not supported.\n\n### StorageDepositLimitExhausted[\u200b](#storagedepositlimitexhausted \"Direct link to StorageDepositLimitExhausted\")\n\n*   **interface**: `api.errors.contracts.StorageDepositLimitExhausted.is`\n*   **summary**: More storage was created than allowed by the storage deposit limit.\n\n### StorageDepositNotEnoughFunds[\u200b](#storagedepositnotenoughfunds \"Direct link to StorageDepositNotEnoughFunds\")\n\n*   **interface**: `api.errors.contracts.StorageDepositNotEnoughFunds.is`\n*   **summary**: Origin doesn't have enough balance to pay the required storage deposits.\n\n### TerminatedInConstructor[\u200b](#terminatedinconstructor \"Direct link to TerminatedInConstructor\")\n\n*   **interface**: `api.errors.contracts.TerminatedInConstructor.is`\n    \n*   **summary**: A contract self destructed in its constructor.\n    \n    This can be triggered by a call to `seal_terminate`.\n    \n\n### TerminatedWhileReentrant[\u200b](#terminatedwhilereentrant \"Direct link to TerminatedWhileReentrant\")\n\n*   **interface**: `api.errors.contracts.TerminatedWhileReentrant.is`\n*   **summary**: Termination of a contract is not allowed while the contract is already on the call stack. Can be triggered by `seal_terminate`.\n\n### TooManyTopics[\u200b](#toomanytopics \"Direct link to TooManyTopics\")\n\n*   **interface**: `api.errors.contracts.TooManyTopics.is`\n*   **summary**: The amount of topics passed to `seal_deposit_events` exceeds the limit.\n\n### TransferFailed[\u200b](#transferfailed \"Direct link to TransferFailed\")\n\n*   **interface**: `api.errors.contracts.TransferFailed.is`\n*   **summary**: Performing the requested transfer failed. Probably because there isn't enough free balance in the sender's account.\n\n### ValueTooLarge[\u200b](#valuetoolarge \"Direct link to ValueTooLarge\")\n\n*   **interface**: `api.errors.contracts.ValueTooLarge.is`\n*   **summary**: The size defined in `T::MaxValueSize` was exceeded.\n\n### XCMDecodeFailed[\u200b](#xcmdecodefailed \"Direct link to XCMDecodeFailed\")\n\n*   **interface**: `api.errors.contracts.XCMDecodeFailed.is`\n*   **summary**: Failed to decode the XCM program.\n\n* * *\n\nconvictionVoting[\u200b](#convictionvoting \"Direct link to convictionVoting\")\n\n-------------------------------------------------------------------------\n\n### AlreadyDelegating[\u200b](#alreadydelegating \"Direct link to AlreadyDelegating\")\n\n*   **interface**: `api.errors.convictionVoting.AlreadyDelegating.is`\n*   **summary**: The account is already delegating.\n\n### AlreadyVoting[\u200b](#alreadyvoting \"Direct link to AlreadyVoting\")\n\n*   **interface**: `api.errors.convictionVoting.AlreadyVoting.is`\n*   **summary**: The account currently has votes attached to it and the operation cannot succeed until these are removed, either through `unvote` or `reap_vote`.\n\n### BadClass[\u200b](#badclass \"Direct link to BadClass\")\n\n*   **interface**: `api.errors.convictionVoting.BadClass.is`\n*   **summary**: The class ID supplied is invalid.\n\n### ClassNeeded[\u200b](#classneeded \"Direct link to ClassNeeded\")\n\n*   **interface**: `api.errors.convictionVoting.ClassNeeded.is`\n*   **summary**: The class must be supplied since it is not easily determinable from the state.\n\n### InsufficientFunds[\u200b](#insufficientfunds-1 \"Direct link to InsufficientFunds\")\n\n*   **interface**: `api.errors.convictionVoting.InsufficientFunds.is`\n*   **summary**: Too high a balance was provided that the account cannot afford.\n\n### MaxVotesReached[\u200b](#maxvotesreached \"Direct link to MaxVotesReached\")\n\n*   **interface**: `api.errors.convictionVoting.MaxVotesReached.is`\n*   **summary**: Maximum number of votes reached.\n\n### Nonsense[\u200b](#nonsense \"Direct link to Nonsense\")\n\n*   **interface**: `api.errors.convictionVoting.Nonsense.is`\n*   **summary**: Delegation to oneself makes no sense.\n\n### NoPermission[\u200b](#nopermission-1 \"Direct link to NoPermission\")\n\n*   **interface**: `api.errors.convictionVoting.NoPermission.is`\n*   **summary**: The actor has no permission to conduct the action.\n\n### NoPermissionYet[\u200b](#nopermissionyet \"Direct link to NoPermissionYet\")\n\n*   **interface**: `api.errors.convictionVoting.NoPermissionYet.is`\n*   **summary**: The actor has no permission to conduct the action right now but will do in the future.\n\n### NotDelegating[\u200b](#notdelegating \"Direct link to NotDelegating\")\n\n*   **interface**: `api.errors.convictionVoting.NotDelegating.is`\n*   **summary**: The account is not currently delegating.\n\n### NotOngoing[\u200b](#notongoing \"Direct link to NotOngoing\")\n\n*   **interface**: `api.errors.convictionVoting.NotOngoing.is`\n*   **summary**: Poll is not ongoing.\n\n### NotVoter[\u200b](#notvoter \"Direct link to NotVoter\")\n\n*   **interface**: `api.errors.convictionVoting.NotVoter.is`\n*   **summary**: The given account did not vote on the poll.\n\n* * *\n\ncoreFellowship[\u200b](#corefellowship \"Direct link to coreFellowship\")\n\n-------------------------------------------------------------------\n\n### AlreadyInducted[\u200b](#alreadyinducted \"Direct link to AlreadyInducted\")\n\n*   **interface**: `api.errors.coreFellowship.AlreadyInducted.is`\n*   **summary**: The candidate has already been inducted. This should never happen since it would require a candidate (rank 0) to already be tracked in the pallet.\n\n### InvalidRank[\u200b](#invalidrank \"Direct link to InvalidRank\")\n\n*   **interface**: `api.errors.coreFellowship.InvalidRank.is`\n*   **summary**: The given rank is invalid - this generally means it's not between 1 and `RANK_COUNT`.\n\n### NoPermission[\u200b](#nopermission-2 \"Direct link to NoPermission\")\n\n*   **interface**: `api.errors.coreFellowship.NoPermission.is`\n*   **summary**: The origin does not have enough permission to do this operation.\n\n### NothingDoing[\u200b](#nothingdoing \"Direct link to NothingDoing\")\n\n*   **interface**: `api.errors.coreFellowship.NothingDoing.is`\n*   **summary**: No work needs to be done at present for this member.\n\n### NotTracked[\u200b](#nottracked \"Direct link to NotTracked\")\n\n*   **interface**: `api.errors.coreFellowship.NotTracked.is`\n*   **summary**: The candidate has not been inducted, so cannot be offboarded from this pallet.\n\n### Ranked[\u200b](#ranked \"Direct link to Ranked\")\n\n*   **interface**: `api.errors.coreFellowship.Ranked.is`\n*   **summary**: Member's rank is not zero.\n\n### TooSoon[\u200b](#toosoon \"Direct link to TooSoon\")\n\n*   **interface**: `api.errors.coreFellowship.TooSoon.is`\n*   **summary**: Operation cannot be done yet since not enough time has passed.\n\n### UnexpectedRank[\u200b](#unexpectedrank \"Direct link to UnexpectedRank\")\n\n*   **interface**: `api.errors.coreFellowship.UnexpectedRank.is`\n*   **summary**: Member's rank is not as expected - generally means that the rank provided to the call does not agree with the state of the system.\n\n### Unranked[\u200b](#unranked \"Direct link to Unranked\")\n\n*   **interface**: `api.errors.coreFellowship.Unranked.is`\n*   **summary**: Member's rank is too low.\n\n* * *\n\ncouncil[\u200b](#council \"Direct link to council\")\n\n----------------------------------------------\n\n### AlreadyInitialized[\u200b](#alreadyinitialized-1 \"Direct link to AlreadyInitialized\")\n\n*   **interface**: `api.errors.council.AlreadyInitialized.is`\n*   **summary**: Members are already initialized!\n\n### DuplicateProposal[\u200b](#duplicateproposal-1 \"Direct link to DuplicateProposal\")\n\n*   **interface**: `api.errors.council.DuplicateProposal.is`\n*   **summary**: Duplicate proposals not allowed\n\n### DuplicateVote[\u200b](#duplicatevote-1 \"Direct link to DuplicateVote\")\n\n*   **interface**: `api.errors.council.DuplicateVote.is`\n*   **summary**: Duplicate vote ignored\n\n### NotMember[\u200b](#notmember-2 \"Direct link to NotMember\")\n\n*   **interface**: `api.errors.council.NotMember.is`\n*   **summary**: Account is not a member\n\n### PrimeAccountNotMember[\u200b](#primeaccountnotmember-1 \"Direct link to PrimeAccountNotMember\")\n\n*   **interface**: `api.errors.council.PrimeAccountNotMember.is`\n*   **summary**: Prime account is not a member\n\n### ProposalMissing[\u200b](#proposalmissing-1 \"Direct link to ProposalMissing\")\n\n*   **interface**: `api.errors.council.ProposalMissing.is`\n*   **summary**: Proposal must exist\n\n### TooEarly[\u200b](#tooearly-2 \"Direct link to TooEarly\")\n\n*   **interface**: `api.errors.council.TooEarly.is`\n*   **summary**: The close call was made too early, before the end of the voting.\n\n### TooManyProposals[\u200b](#toomanyproposals-1 \"Direct link to TooManyProposals\")\n\n*   **interface**: `api.errors.council.TooManyProposals.is`\n*   **summary**: There can only be a maximum of `MaxProposals` active proposals.\n\n### WrongIndex[\u200b](#wrongindex-1 \"Direct link to WrongIndex\")\n\n*   **interface**: `api.errors.council.WrongIndex.is`\n*   **summary**: Mismatched index\n\n### WrongProposalLength[\u200b](#wrongproposallength-1 \"Direct link to WrongProposalLength\")\n\n*   **interface**: `api.errors.council.WrongProposalLength.is`\n*   **summary**: The given length bound for the proposal was too low.\n\n### WrongProposalWeight[\u200b](#wrongproposalweight-1 \"Direct link to WrongProposalWeight\")\n\n*   **interface**: `api.errors.council.WrongProposalWeight.is`\n*   **summary**: The given weight bound for the proposal was too low.\n\n* * *\n\ndemocracy[\u200b](#democracy \"Direct link to democracy\")\n\n----------------------------------------------------\n\n### AlreadyCanceled[\u200b](#alreadycanceled \"Direct link to AlreadyCanceled\")\n\n*   **interface**: `api.errors.democracy.AlreadyCanceled.is`\n*   **summary**: Cannot cancel the same proposal twice\n\n### AlreadyDelegating[\u200b](#alreadydelegating-1 \"Direct link to AlreadyDelegating\")\n\n*   **interface**: `api.errors.democracy.AlreadyDelegating.is`\n*   **summary**: The account is already delegating.\n\n### AlreadyVetoed[\u200b](#alreadyvetoed \"Direct link to AlreadyVetoed\")\n\n*   **interface**: `api.errors.democracy.AlreadyVetoed.is`\n*   **summary**: Identity may not veto a proposal twice\n\n### DuplicateProposal[\u200b](#duplicateproposal-2 \"Direct link to DuplicateProposal\")\n\n*   **interface**: `api.errors.democracy.DuplicateProposal.is`\n*   **summary**: Proposal already made\n\n### InstantNotAllowed[\u200b](#instantnotallowed \"Direct link to InstantNotAllowed\")\n\n*   **interface**: `api.errors.democracy.InstantNotAllowed.is`\n*   **summary**: The instant referendum origin is currently disallowed.\n\n### InsufficientFunds[\u200b](#insufficientfunds-2 \"Direct link to InsufficientFunds\")\n\n*   **interface**: `api.errors.democracy.InsufficientFunds.is`\n*   **summary**: Too high a balance was provided that the account cannot afford.\n\n### InvalidHash[\u200b](#invalidhash \"Direct link to InvalidHash\")\n\n*   **interface**: `api.errors.democracy.InvalidHash.is`\n*   **summary**: Invalid hash\n\n### MaxVotesReached[\u200b](#maxvotesreached-1 \"Direct link to MaxVotesReached\")\n\n*   **interface**: `api.errors.democracy.MaxVotesReached.is`\n*   **summary**: Maximum number of votes reached.\n\n### NoneWaiting[\u200b](#nonewaiting \"Direct link to NoneWaiting\")\n\n*   **interface**: `api.errors.democracy.NoneWaiting.is`\n*   **summary**: No proposals waiting\n\n### Nonsense[\u200b](#nonsense-1 \"Direct link to Nonsense\")\n\n*   **interface**: `api.errors.democracy.Nonsense.is`\n*   **summary**: Delegation to oneself makes no sense.\n\n### NoPermission[\u200b](#nopermission-3 \"Direct link to NoPermission\")\n\n*   **interface**: `api.errors.democracy.NoPermission.is`\n*   **summary**: The actor has no permission to conduct the action.\n\n### NoProposal[\u200b](#noproposal \"Direct link to NoProposal\")\n\n*   **interface**: `api.errors.democracy.NoProposal.is`\n*   **summary**: No external proposal\n\n### NotDelegating[\u200b](#notdelegating-1 \"Direct link to NotDelegating\")\n\n*   **interface**: `api.errors.democracy.NotDelegating.is`\n*   **summary**: The account is not currently delegating.\n\n### NotSimpleMajority[\u200b](#notsimplemajority \"Direct link to NotSimpleMajority\")\n\n*   **interface**: `api.errors.democracy.NotSimpleMajority.is`\n*   **summary**: Next external proposal not simple majority\n\n### NotVoter[\u200b](#notvoter-1 \"Direct link to NotVoter\")\n\n*   **interface**: `api.errors.democracy.NotVoter.is`\n*   **summary**: The given account did not vote on the referendum.\n\n### PreimageNotExist[\u200b](#preimagenotexist \"Direct link to PreimageNotExist\")\n\n*   **interface**: `api.errors.democracy.PreimageNotExist.is`\n*   **summary**: The preimage does not exist.\n\n### ProposalBlacklisted[\u200b](#proposalblacklisted \"Direct link to ProposalBlacklisted\")\n\n*   **interface**: `api.errors.democracy.ProposalBlacklisted.is`\n*   **summary**: Proposal still blacklisted\n\n### ProposalMissing[\u200b](#proposalmissing-2 \"Direct link to ProposalMissing\")\n\n*   **interface**: `api.errors.democracy.ProposalMissing.is`\n*   **summary**: Proposal does not exist\n\n### ReferendumInvalid[\u200b](#referenduminvalid \"Direct link to ReferendumInvalid\")\n\n*   **interface**: `api.errors.democracy.ReferendumInvalid.is`\n*   **summary**: Vote given for invalid referendum\n\n### TooMany[\u200b](#toomany \"Direct link to TooMany\")\n\n*   **interface**: `api.errors.democracy.TooMany.is`\n*   **summary**: Maximum number of items reached.\n\n### ValueLow[\u200b](#valuelow \"Direct link to ValueLow\")\n\n*   **interface**: `api.errors.democracy.ValueLow.is`\n*   **summary**: Value too low\n\n### VotesExist[\u200b](#votesexist \"Direct link to VotesExist\")\n\n*   **interface**: `api.errors.democracy.VotesExist.is`\n*   **summary**: The account currently has votes attached to it and the operation cannot succeed until these are removed, either through `unvote` or `reap_vote`.\n\n### VotingPeriodLow[\u200b](#votingperiodlow \"Direct link to VotingPeriodLow\")\n\n*   **interface**: `api.errors.democracy.VotingPeriodLow.is`\n*   **summary**: Voting period too low\n\n### WrongUpperBound[\u200b](#wrongupperbound \"Direct link to WrongUpperBound\")\n\n*   **interface**: `api.errors.democracy.WrongUpperBound.is`\n*   **summary**: Invalid upper bound.\n\n* * *\n\nelectionProviderMultiPhase[\u200b](#electionprovidermultiphase \"Direct link to electionProviderMultiPhase\")\n\n-------------------------------------------------------------------------------------------------------\n\n### BoundNotMet[\u200b](#boundnotmet \"Direct link to BoundNotMet\")\n\n*   **interface**: `api.errors.electionProviderMultiPhase.BoundNotMet.is`\n*   **summary**: Some bound not met\n\n### CallNotAllowed[\u200b](#callnotallowed \"Direct link to CallNotAllowed\")\n\n*   **interface**: `api.errors.electionProviderMultiPhase.CallNotAllowed.is`\n*   **summary**: The call is not allowed at this point.\n\n### FallbackFailed[\u200b](#fallbackfailed \"Direct link to FallbackFailed\")\n\n*   **interface**: `api.errors.electionProviderMultiPhase.FallbackFailed.is`\n*   **summary**: The fallback failed\n\n### InvalidSubmissionIndex[\u200b](#invalidsubmissionindex \"Direct link to InvalidSubmissionIndex\")\n\n*   **interface**: `api.errors.electionProviderMultiPhase.InvalidSubmissionIndex.is`\n*   **summary**: `Self::insert_submission` returned an invalid index.\n\n### MissingSnapshotMetadata[\u200b](#missingsnapshotmetadata \"Direct link to MissingSnapshotMetadata\")\n\n*   **interface**: `api.errors.electionProviderMultiPhase.MissingSnapshotMetadata.is`\n*   **summary**: Snapshot metadata should exist but didn't.\n\n### OcwCallWrongEra[\u200b](#ocwcallwrongera \"Direct link to OcwCallWrongEra\")\n\n*   **interface**: `api.errors.electionProviderMultiPhase.OcwCallWrongEra.is`\n*   **summary**: OCW submitted solution for wrong round\n\n### PreDispatchEarlySubmission[\u200b](#predispatchearlysubmission \"Direct link to PreDispatchEarlySubmission\")\n\n*   **interface**: `api.errors.electionProviderMultiPhase.PreDispatchEarlySubmission.is`\n*   **summary**: Submission was too early.\n\n### PreDispatchWeakSubmission[\u200b](#predispatchweaksubmission \"Direct link to PreDispatchWeakSubmission\")\n\n*   **interface**: `api.errors.electionProviderMultiPhase.PreDispatchWeakSubmission.is`\n*   **summary**: Submission was too weak, score-wise.\n\n### PreDispatchWrongWinnerCount[\u200b](#predispatchwrongwinnercount \"Direct link to PreDispatchWrongWinnerCount\")\n\n*   **interface**: `api.errors.electionProviderMultiPhase.PreDispatchWrongWinnerCount.is`\n*   **summary**: Wrong number of winners presented.\n\n### SignedCannotPayDeposit[\u200b](#signedcannotpaydeposit \"Direct link to SignedCannotPayDeposit\")\n\n*   **interface**: `api.errors.electionProviderMultiPhase.SignedCannotPayDeposit.is`\n*   **summary**: The origin failed to pay the deposit.\n\n### SignedInvalidWitness[\u200b](#signedinvalidwitness \"Direct link to SignedInvalidWitness\")\n\n*   **interface**: `api.errors.electionProviderMultiPhase.SignedInvalidWitness.is`\n*   **summary**: Witness data to dispatchable is invalid.\n\n### SignedQueueFull[\u200b](#signedqueuefull \"Direct link to SignedQueueFull\")\n\n*   **interface**: `api.errors.electionProviderMultiPhase.SignedQueueFull.is`\n*   **summary**: The queue was full, and the solution was not better than any of the existing ones.\n\n### SignedTooMuchWeight[\u200b](#signedtoomuchweight \"Direct link to SignedTooMuchWeight\")\n\n*   **interface**: `api.errors.electionProviderMultiPhase.SignedTooMuchWeight.is`\n*   **summary**: The signed submission consumes too much weight\n\n### TooManyWinners[\u200b](#toomanywinners \"Direct link to TooManyWinners\")\n\n*   **interface**: `api.errors.electionProviderMultiPhase.TooManyWinners.is`\n*   **summary**: Submitted solution has too many winners\n\n* * *\n\nelections[\u200b](#elections \"Direct link to elections\")\n\n----------------------------------------------------\n\n### DuplicatedCandidate[\u200b](#duplicatedcandidate \"Direct link to DuplicatedCandidate\")\n\n*   **interface**: `api.errors.elections.DuplicatedCandidate.is`\n*   **summary**: Duplicated candidate submission.\n\n### InsufficientCandidateFunds[\u200b](#insufficientcandidatefunds \"Direct link to InsufficientCandidateFunds\")\n\n*   **interface**: `api.errors.elections.InsufficientCandidateFunds.is`\n*   **summary**: Candidate does not have enough funds.\n\n### InvalidRenouncing[\u200b](#invalidrenouncing \"Direct link to InvalidRenouncing\")\n\n*   **interface**: `api.errors.elections.InvalidRenouncing.is`\n*   **summary**: The renouncing origin presented a wrong `Renouncing` parameter.\n\n### InvalidReplacement[\u200b](#invalidreplacement \"Direct link to InvalidReplacement\")\n\n*   **interface**: `api.errors.elections.InvalidReplacement.is`\n*   **summary**: Prediction regarding replacement after member removal is wrong.\n\n### InvalidVoteCount[\u200b](#invalidvotecount \"Direct link to InvalidVoteCount\")\n\n*   **interface**: `api.errors.elections.InvalidVoteCount.is`\n*   **summary**: The provided count of number of votes is incorrect.\n\n### InvalidWitnessData[\u200b](#invalidwitnessdata \"Direct link to InvalidWitnessData\")\n\n*   **interface**: `api.errors.elections.InvalidWitnessData.is`\n*   **summary**: The provided count of number of candidates is incorrect.\n\n### LowBalance[\u200b](#lowbalance \"Direct link to LowBalance\")\n\n*   **interface**: `api.errors.elections.LowBalance.is`\n*   **summary**: Cannot vote with stake less than minimum balance.\n\n### MaximumVotesExceeded[\u200b](#maximumvotesexceeded \"Direct link to MaximumVotesExceeded\")\n\n*   **interface**: `api.errors.elections.MaximumVotesExceeded.is`\n*   **summary**: Cannot vote more than maximum allowed.\n\n### MemberSubmit[\u200b](#membersubmit \"Direct link to MemberSubmit\")\n\n*   **interface**: `api.errors.elections.MemberSubmit.is`\n*   **summary**: Member cannot re-submit candidacy.\n\n### MustBeVoter[\u200b](#mustbevoter \"Direct link to MustBeVoter\")\n\n*   **interface**: `api.errors.elections.MustBeVoter.is`\n*   **summary**: Must be a voter.\n\n### NotMember[\u200b](#notmember-3 \"Direct link to NotMember\")\n\n*   **interface**: `api.errors.elections.NotMember.is`\n*   **summary**: Not a member.\n\n### NoVotes[\u200b](#novotes \"Direct link to NoVotes\")\n\n*   **interface**: `api.errors.elections.NoVotes.is`\n*   **summary**: Must vote for at least one candidate.\n\n### RunnerUpSubmit[\u200b](#runnerupsubmit \"Direct link to RunnerUpSubmit\")\n\n*   **interface**: `api.errors.elections.RunnerUpSubmit.is`\n*   **summary**: Runner cannot re-submit candidacy.\n\n### TooManyCandidates[\u200b](#toomanycandidates \"Direct link to TooManyCandidates\")\n\n*   **interface**: `api.errors.elections.TooManyCandidates.is`\n*   **summary**: Too many candidates have been created.\n\n### TooManyVotes[\u200b](#toomanyvotes \"Direct link to TooManyVotes\")\n\n*   **interface**: `api.errors.elections.TooManyVotes.is`\n*   **summary**: Cannot vote more than candidates.\n\n### UnableToPayBond[\u200b](#unabletopaybond \"Direct link to UnableToPayBond\")\n\n*   **interface**: `api.errors.elections.UnableToPayBond.is`\n*   **summary**: Voter can not pay voting bond.\n\n### UnableToVote[\u200b](#unabletovote \"Direct link to UnableToVote\")\n\n*   **interface**: `api.errors.elections.UnableToVote.is`\n*   **summary**: Cannot vote when no candidates or members exist.\n\n* * *\n\nfastUnstake[\u200b](#fastunstake \"Direct link to fastUnstake\")\n\n----------------------------------------------------------\n\n### AlreadyHead[\u200b](#alreadyhead \"Direct link to AlreadyHead\")\n\n*   **interface**: `api.errors.fastUnstake.AlreadyHead.is`\n*   **summary**: The provided un-staker is already in Head, and cannot deregister.\n\n### AlreadyQueued[\u200b](#alreadyqueued \"Direct link to AlreadyQueued\")\n\n*   **interface**: `api.errors.fastUnstake.AlreadyQueued.is`\n*   **summary**: The bonded account has already been queued.\n\n### CallNotAllowed[\u200b](#callnotallowed-1 \"Direct link to CallNotAllowed\")\n\n*   **interface**: `api.errors.fastUnstake.CallNotAllowed.is`\n*   **summary**: The call is not allowed at this point because the pallet is not active.\n\n### NotController[\u200b](#notcontroller \"Direct link to NotController\")\n\n*   **interface**: `api.errors.fastUnstake.NotController.is`\n    \n*   **summary**: The provided Controller account was not found.\n    \n    This means that the given account is not bonded.\n    \n\n### NotFullyBonded[\u200b](#notfullybonded \"Direct link to NotFullyBonded\")\n\n*   **interface**: `api.errors.fastUnstake.NotFullyBonded.is`\n*   **summary**: The bonded account has active unlocking chunks.\n\n### NotQueued[\u200b](#notqueued \"Direct link to NotQueued\")\n\n*   **interface**: `api.errors.fastUnstake.NotQueued.is`\n*   **summary**: The provided un-staker is not in the `Queue`.\n\n* * *\n\nglutton[\u200b](#glutton \"Direct link to glutton\")\n\n----------------------------------------------\n\n### AlreadyInitialized[\u200b](#alreadyinitialized-2 \"Direct link to AlreadyInitialized\")\n\n*   **interface**: `api.errors.glutton.AlreadyInitialized.is`\n    \n*   **summary**: The pallet was already initialized.\n    \n    Set `witness_count` to `Some` to bypass this error.\n    \n\n### InsaneLimit[\u200b](#insanelimit \"Direct link to InsaneLimit\")\n\n*   **interface**: `api.errors.glutton.InsaneLimit.is`\n*   **summary**: The limit was over \\[`crate::RESOURCE_HARD_LIMIT`\\].\n\n* * *\n\ngrandpa[\u200b](#grandpa \"Direct link to grandpa\")\n\n----------------------------------------------\n\n### ChangePending[\u200b](#changepending \"Direct link to ChangePending\")\n\n*   **interface**: `api.errors.grandpa.ChangePending.is`\n*   **summary**: Attempt to signal GRANDPA change with one already pending.\n\n### DuplicateOffenceReport[\u200b](#duplicateoffencereport-1 \"Direct link to DuplicateOffenceReport\")\n\n*   **interface**: `api.errors.grandpa.DuplicateOffenceReport.is`\n*   **summary**: A given equivocation report is valid but already previously reported.\n\n### InvalidEquivocationProof[\u200b](#invalidequivocationproof-1 \"Direct link to InvalidEquivocationProof\")\n\n*   **interface**: `api.errors.grandpa.InvalidEquivocationProof.is`\n*   **summary**: An equivocation proof provided as part of an equivocation report is invalid.\n\n### InvalidKeyOwnershipProof[\u200b](#invalidkeyownershipproof-1 \"Direct link to InvalidKeyOwnershipProof\")\n\n*   **interface**: `api.errors.grandpa.InvalidKeyOwnershipProof.is`\n*   **summary**: A key ownership proof provided as part of an equivocation report is invalid.\n\n### PauseFailed[\u200b](#pausefailed \"Direct link to PauseFailed\")\n\n*   **interface**: `api.errors.grandpa.PauseFailed.is`\n*   **summary**: Attempt to signal GRANDPA pause when the authority set isn't live (either paused or already pending pause).\n\n### ResumeFailed[\u200b](#resumefailed \"Direct link to ResumeFailed\")\n\n*   **interface**: `api.errors.grandpa.ResumeFailed.is`\n*   **summary**: Attempt to signal GRANDPA resume when the authority set isn't paused (either live or already pending resume).\n\n### TooSoon[\u200b](#toosoon-1 \"Direct link to TooSoon\")\n\n*   **interface**: `api.errors.grandpa.TooSoon.is`\n*   **summary**: Cannot signal forced change so soon after last.\n\n* * *\n\nidentity[\u200b](#identity \"Direct link to identity\")\n\n-------------------------------------------------\n\n### AlreadyClaimed[\u200b](#alreadyclaimed \"Direct link to AlreadyClaimed\")\n\n*   **interface**: `api.errors.identity.AlreadyClaimed.is`\n*   **summary**: Account ID is already named.\n\n### EmptyIndex[\u200b](#emptyindex \"Direct link to EmptyIndex\")\n\n*   **interface**: `api.errors.identity.EmptyIndex.is`\n*   **summary**: Empty index.\n\n### FeeChanged[\u200b](#feechanged \"Direct link to FeeChanged\")\n\n*   **interface**: `api.errors.identity.FeeChanged.is`\n*   **summary**: Fee is changed.\n\n### InvalidIndex[\u200b](#invalidindex-1 \"Direct link to InvalidIndex\")\n\n*   **interface**: `api.errors.identity.InvalidIndex.is`\n*   **summary**: The index is invalid.\n\n### InvalidJudgement[\u200b](#invalidjudgement \"Direct link to InvalidJudgement\")\n\n*   **interface**: `api.errors.identity.InvalidJudgement.is`\n*   **summary**: Invalid judgement.\n\n### InvalidTarget[\u200b](#invalidtarget \"Direct link to InvalidTarget\")\n\n*   **interface**: `api.errors.identity.InvalidTarget.is`\n*   **summary**: The target is invalid.\n\n### JudgementForDifferentIdentity[\u200b](#judgementfordifferentidentity \"Direct link to JudgementForDifferentIdentity\")\n\n*   **interface**: `api.errors.identity.JudgementForDifferentIdentity.is`\n*   **summary**: The provided judgement was for a different identity.\n\n### JudgementGiven[\u200b](#judgementgiven \"Direct link to JudgementGiven\")\n\n*   **interface**: `api.errors.identity.JudgementGiven.is`\n*   **summary**: Judgement given.\n\n### JudgementPaymentFailed[\u200b](#judgementpaymentfailed \"Direct link to JudgementPaymentFailed\")\n\n*   **interface**: `api.errors.identity.JudgementPaymentFailed.is`\n*   **summary**: Error that occurs when there is an issue paying for judgement.\n\n### NoIdentity[\u200b](#noidentity \"Direct link to NoIdentity\")\n\n*   **interface**: `api.errors.identity.NoIdentity.is`\n*   **summary**: No identity found.\n\n### NotFound[\u200b](#notfound \"Direct link to NotFound\")\n\n*   **interface**: `api.errors.identity.NotFound.is`\n*   **summary**: Account isn't found.\n\n### NotNamed[\u200b](#notnamed \"Direct link to NotNamed\")\n\n*   **interface**: `api.errors.identity.NotNamed.is`\n*   **summary**: Account isn't named.\n\n### NotOwned[\u200b](#notowned \"Direct link to NotOwned\")\n\n*   **interface**: `api.errors.identity.NotOwned.is`\n*   **summary**: Sub-account isn't owned by sender.\n\n### NotSub[\u200b](#notsub \"Direct link to NotSub\")\n\n*   **interface**: `api.errors.identity.NotSub.is`\n*   **summary**: Sender is not a sub-account.\n\n### StickyJudgement[\u200b](#stickyjudgement \"Direct link to StickyJudgement\")\n\n*   **interface**: `api.errors.identity.StickyJudgement.is`\n*   **summary**: Sticky judgement.\n\n### TooManyRegistrars[\u200b](#toomanyregistrars \"Direct link to TooManyRegistrars\")\n\n*   **interface**: `api.errors.identity.TooManyRegistrars.is`\n*   **summary**: Maximum amount of registrars reached. Cannot add any more.\n\n### TooManySubAccounts[\u200b](#toomanysubaccounts \"Direct link to TooManySubAccounts\")\n\n*   **interface**: `api.errors.identity.TooManySubAccounts.is`\n*   **summary**: Too many subs-accounts.\n\n* * *\n\nimOnline[\u200b](#imonline \"Direct link to imOnline\")\n\n-------------------------------------------------\n\n### DuplicatedHeartbeat[\u200b](#duplicatedheartbeat \"Direct link to DuplicatedHeartbeat\")\n\n*   **interface**: `api.errors.imOnline.DuplicatedHeartbeat.is`\n*   **summary**: Duplicated heartbeat.\n\n### InvalidKey[\u200b](#invalidkey \"Direct link to InvalidKey\")\n\n*   **interface**: `api.errors.imOnline.InvalidKey.is`\n*   **summary**: Non existent public key.\n\n* * *\n\nindices[\u200b](#indices \"Direct link to indices\")\n\n----------------------------------------------\n\n### InUse[\u200b](#inuse-1 \"Direct link to InUse\")\n\n*   **interface**: `api.errors.indices.InUse.is`\n*   **summary**: The index was not available.\n\n### NotAssigned[\u200b](#notassigned \"Direct link to NotAssigned\")\n\n*   **interface**: `api.errors.indices.NotAssigned.is`\n*   **summary**: The index was not already assigned.\n\n### NotOwner[\u200b](#notowner-1 \"Direct link to NotOwner\")\n\n*   **interface**: `api.errors.indices.NotOwner.is`\n*   **summary**: The index is assigned to another account.\n\n### NotTransfer[\u200b](#nottransfer \"Direct link to NotTransfer\")\n\n*   **interface**: `api.errors.indices.NotTransfer.is`\n*   **summary**: The source and destination accounts are identical.\n\n### Permanent[\u200b](#permanent \"Direct link to Permanent\")\n\n*   **interface**: `api.errors.indices.Permanent.is`\n*   **summary**: The index is permanent and may not be freed/changed.\n\n* * *\n\nlottery[\u200b](#lottery \"Direct link to lottery\")\n\n----------------------------------------------\n\n### AlreadyEnded[\u200b](#alreadyended \"Direct link to AlreadyEnded\")\n\n*   **interface**: `api.errors.lottery.AlreadyEnded.is`\n*   **summary**: A lottery has already ended.\n\n### AlreadyParticipating[\u200b](#alreadyparticipating \"Direct link to AlreadyParticipating\")\n\n*   **interface**: `api.errors.lottery.AlreadyParticipating.is`\n*   **summary**: You are already participating in the lottery with this call.\n\n### EncodingFailed[\u200b](#encodingfailed \"Direct link to EncodingFailed\")\n\n*   **interface**: `api.errors.lottery.EncodingFailed.is`\n*   **summary**: Failed to encode calls\n\n### InProgress[\u200b](#inprogress \"Direct link to InProgress\")\n\n*   **interface**: `api.errors.lottery.InProgress.is`\n*   **summary**: A lottery is already in progress.\n\n### InvalidCall[\u200b](#invalidcall \"Direct link to InvalidCall\")\n\n*   **interface**: `api.errors.lottery.InvalidCall.is`\n*   **summary**: The call is not valid for an open lottery.\n\n### NotConfigured[\u200b](#notconfigured \"Direct link to NotConfigured\")\n\n*   **interface**: `api.errors.lottery.NotConfigured.is`\n*   **summary**: A lottery has not been configured.\n\n### TooManyCalls[\u200b](#toomanycalls \"Direct link to TooManyCalls\")\n\n*   **interface**: `api.errors.lottery.TooManyCalls.is`\n*   **summary**: Too many calls for a single lottery.\n\n* * *\n\nmessageQueue[\u200b](#messagequeue \"Direct link to messageQueue\")\n\n-------------------------------------------------------------\n\n### AlreadyProcessed[\u200b](#alreadyprocessed \"Direct link to AlreadyProcessed\")\n\n*   **interface**: `api.errors.messageQueue.AlreadyProcessed.is`\n*   **summary**: The message was already processed and cannot be processed again.\n\n### InsufficientWeight[\u200b](#insufficientweight \"Direct link to InsufficientWeight\")\n\n*   **interface**: `api.errors.messageQueue.InsufficientWeight.is`\n*   **summary**: There is temporarily not enough weight to continue servicing messages.\n\n### NoMessage[\u200b](#nomessage \"Direct link to NoMessage\")\n\n*   **interface**: `api.errors.messageQueue.NoMessage.is`\n*   **summary**: The referenced message could not be found.\n\n### NoPage[\u200b](#nopage \"Direct link to NoPage\")\n\n*   **interface**: `api.errors.messageQueue.NoPage.is`\n*   **summary**: Page to be reaped does not exist.\n\n### NotReapable[\u200b](#notreapable \"Direct link to NotReapable\")\n\n*   **interface**: `api.errors.messageQueue.NotReapable.is`\n*   **summary**: Page is not reapable because it has items remaining to be processed and is not old enough.\n\n### Queued[\u200b](#queued \"Direct link to Queued\")\n\n*   **interface**: `api.errors.messageQueue.Queued.is`\n*   **summary**: The message is queued for future execution.\n\n### QueuePaused[\u200b](#queuepaused \"Direct link to QueuePaused\")\n\n*   **interface**: `api.errors.messageQueue.QueuePaused.is`\n    \n*   **summary**: The queue is paused and no message can be executed from it.\n    \n    This can change at any time and may resolve in the future by re-trying.\n    \n\n### RecursiveDisallowed[\u200b](#recursivedisallowed \"Direct link to RecursiveDisallowed\")\n\n*   **interface**: `api.errors.messageQueue.RecursiveDisallowed.is`\n*   **summary**: Another call is in progress and needs to finish before this call can happen.\n\n### TemporarilyUnprocessable[\u200b](#temporarilyunprocessable \"Direct link to TemporarilyUnprocessable\")\n\n*   **interface**: `api.errors.messageQueue.TemporarilyUnprocessable.is`\n    \n*   **summary**: This message is temporarily unprocessable.\n    \n    Such errors are expected, but not guaranteed, to resolve themselves eventually through retrying.\n    \n\n* * *\n\nmultisig[\u200b](#multisig \"Direct link to multisig\")\n\n-------------------------------------------------\n\n### AlreadyApproved[\u200b](#alreadyapproved \"Direct link to AlreadyApproved\")\n\n*   **interface**: `api.errors.multisig.AlreadyApproved.is`\n*   **summary**: Call is already approved by this signatory.\n\n### AlreadyStored[\u200b](#alreadystored \"Direct link to AlreadyStored\")\n\n*   **interface**: `api.errors.multisig.AlreadyStored.is`\n*   **summary**: The data to be stored is already stored.\n\n### MaxWeightTooLow[\u200b](#maxweighttoolow \"Direct link to MaxWeightTooLow\")\n\n*   **interface**: `api.errors.multisig.MaxWeightTooLow.is`\n*   **summary**: The maximum weight information provided was too low.\n\n### MinimumThreshold[\u200b](#minimumthreshold \"Direct link to MinimumThreshold\")\n\n*   **interface**: `api.errors.multisig.MinimumThreshold.is`\n*   **summary**: Threshold must be 2 or greater.\n\n### NoApprovalsNeeded[\u200b](#noapprovalsneeded \"Direct link to NoApprovalsNeeded\")\n\n*   **interface**: `api.errors.multisig.NoApprovalsNeeded.is`\n*   **summary**: Call doesn't need any (more) approvals.\n\n### NotFound[\u200b](#notfound-1 \"Direct link to NotFound\")\n\n*   **interface**: `api.errors.multisig.NotFound.is`\n*   **summary**: Multisig operation not found when attempting to cancel.\n\n### NoTimepoint[\u200b](#notimepoint \"Direct link to NoTimepoint\")\n\n*   **interface**: `api.errors.multisig.NoTimepoint.is`\n*   **summary**: No timepoint was given, yet the multisig operation is already underway.\n\n### NotOwner[\u200b](#notowner-2 \"Direct link to NotOwner\")\n\n*   **interface**: `api.errors.multisig.NotOwner.is`\n*   **summary**: Only the account that originally created the multisig is able to cancel it.\n\n### SenderInSignatories[\u200b](#senderinsignatories \"Direct link to SenderInSignatories\")\n\n*   **interface**: `api.errors.multisig.SenderInSignatories.is`\n*   **summary**: The sender was contained in the other signatories; it shouldn't be.\n\n### SignatoriesOutOfOrder[\u200b](#signatoriesoutoforder \"Direct link to SignatoriesOutOfOrder\")\n\n*   **interface**: `api.errors.multisig.SignatoriesOutOfOrder.is`\n*   **summary**: The signatories were provided out of order; they should be ordered.\n\n### TooFewSignatories[\u200b](#toofewsignatories \"Direct link to TooFewSignatories\")\n\n*   **interface**: `api.errors.multisig.TooFewSignatories.is`\n*   **summary**: There are too few signatories in the list.\n\n### TooManySignatories[\u200b](#toomanysignatories \"Direct link to TooManySignatories\")\n\n*   **interface**: `api.errors.multisig.TooManySignatories.is`\n*   **summary**: There are too many signatories in the list.\n\n### UnexpectedTimepoint[\u200b](#unexpectedtimepoint \"Direct link to UnexpectedTimepoint\")\n\n*   **interface**: `api.errors.multisig.UnexpectedTimepoint.is`\n*   **summary**: A timepoint was given, yet no multisig operation is underway.\n\n### WrongTimepoint[\u200b](#wrongtimepoint \"Direct link to WrongTimepoint\")\n\n*   **interface**: `api.errors.multisig.WrongTimepoint.is`\n*   **summary**: A different timepoint was given to the multisig operation that is underway.\n\n* * *\n\nnftFractionalization[\u200b](#nftfractionalization \"Direct link to nftFractionalization\")\n\n-------------------------------------------------------------------------------------\n\n### IncorrectAssetId[\u200b](#incorrectassetid \"Direct link to IncorrectAssetId\")\n\n*   **interface**: `api.errors.nftFractionalization.IncorrectAssetId.is`\n*   **summary**: Asset ID does not correspond to locked NFT.\n\n### NftNotFound[\u200b](#nftnotfound \"Direct link to NftNotFound\")\n\n*   **interface**: `api.errors.nftFractionalization.NftNotFound.is`\n*   **summary**: NFT doesn't exist.\n\n### NftNotFractionalized[\u200b](#nftnotfractionalized \"Direct link to NftNotFractionalized\")\n\n*   **interface**: `api.errors.nftFractionalization.NftNotFractionalized.is`\n*   **summary**: NFT has not yet been fractionalised.\n\n### NoPermission[\u200b](#nopermission-4 \"Direct link to NoPermission\")\n\n*   **interface**: `api.errors.nftFractionalization.NoPermission.is`\n*   **summary**: The signing account has no permission to do the operation.\n\n* * *\n\nnfts[\u200b](#nfts \"Direct link to nfts\")\n\n-------------------------------------\n\n### AlreadyClaimed[\u200b](#alreadyclaimed-1 \"Direct link to AlreadyClaimed\")\n\n*   **interface**: `api.errors.nfts.AlreadyClaimed.is`\n*   **summary**: The provided Item was already used for claiming.\n\n### AlreadyExists[\u200b](#alreadyexists-2 \"Direct link to AlreadyExists\")\n\n*   **interface**: `api.errors.nfts.AlreadyExists.is`\n*   **summary**: The item ID has already been used for an item.\n\n### ApprovalExpired[\u200b](#approvalexpired \"Direct link to ApprovalExpired\")\n\n*   **interface**: `api.errors.nfts.ApprovalExpired.is`\n*   **summary**: The approval had a deadline that expired, so the approval isn't valid anymore.\n\n### AttributeNotFound[\u200b](#attributenotfound \"Direct link to AttributeNotFound\")\n\n*   **interface**: `api.errors.nfts.AttributeNotFound.is`\n*   **summary**: The provided attribute can't be found.\n\n### BadWitness[\u200b](#badwitness-2 \"Direct link to BadWitness\")\n\n*   **interface**: `api.errors.nfts.BadWitness.is`\n*   **summary**: The witness data given does not match the current state of the chain.\n\n### BidTooLow[\u200b](#bidtoolow \"Direct link to BidTooLow\")\n\n*   **interface**: `api.errors.nfts.BidTooLow.is`\n*   **summary**: The provided bid is too low.\n\n### CollectionIdInUse[\u200b](#collectionidinuse \"Direct link to CollectionIdInUse\")\n\n*   **interface**: `api.errors.nfts.CollectionIdInUse.is`\n*   **summary**: Collection ID is already taken.\n\n### CollectionNotEmpty[\u200b](#collectionnotempty \"Direct link to CollectionNotEmpty\")\n\n*   **interface**: `api.errors.nfts.CollectionNotEmpty.is`\n*   **summary**: Can't delete non-empty collections.\n\n### DeadlineExpired[\u200b](#deadlineexpired \"Direct link to DeadlineExpired\")\n\n*   **interface**: `api.errors.nfts.DeadlineExpired.is`\n*   **summary**: The deadline has already expired.\n\n### InconsistentItemConfig[\u200b](#inconsistentitemconfig \"Direct link to InconsistentItemConfig\")\n\n*   **interface**: `api.errors.nfts.InconsistentItemConfig.is`\n*   **summary**: Item's config already exists and should be equal to the provided one.\n\n### IncorrectData[\u200b](#incorrectdata \"Direct link to IncorrectData\")\n\n*   **interface**: `api.errors.nfts.IncorrectData.is`\n*   **summary**: The provided data is incorrect.\n\n### IncorrectMetadata[\u200b](#incorrectmetadata \"Direct link to IncorrectMetadata\")\n\n*   **interface**: `api.errors.nfts.IncorrectMetadata.is`\n*   **summary**: The provided metadata might be too long.\n\n### ItemLocked[\u200b](#itemlocked \"Direct link to ItemLocked\")\n\n*   **interface**: `api.errors.nfts.ItemLocked.is`\n*   **summary**: The item is locked (non-transferable).\n\n### ItemsNonTransferable[\u200b](#itemsnontransferable \"Direct link to ItemsNonTransferable\")\n\n*   **interface**: `api.errors.nfts.ItemsNonTransferable.is`\n*   **summary**: Items within that collection are non-transferable.\n\n### LockedCollectionAttributes[\u200b](#lockedcollectionattributes \"Direct link to LockedCollectionAttributes\")\n\n*   **interface**: `api.errors.nfts.LockedCollectionAttributes.is`\n*   **summary**: Collection's attributes are locked.\n\n### LockedCollectionMetadata[\u200b](#lockedcollectionmetadata \"Direct link to LockedCollectionMetadata\")\n\n*   **interface**: `api.errors.nfts.LockedCollectionMetadata.is`\n*   **summary**: Collection's metadata is locked.\n\n### LockedItemAttributes[\u200b](#lockeditemattributes \"Direct link to LockedItemAttributes\")\n\n*   **interface**: `api.errors.nfts.LockedItemAttributes.is`\n*   **summary**: Item's attributes are locked.\n\n### LockedItemMetadata[\u200b](#lockeditemmetadata \"Direct link to LockedItemMetadata\")\n\n*   **interface**: `api.errors.nfts.LockedItemMetadata.is`\n*   **summary**: Item's metadata is locked.\n\n### MaxAttributesLimitReached[\u200b](#maxattributeslimitreached \"Direct link to MaxAttributesLimitReached\")\n\n*   **interface**: `api.errors.nfts.MaxAttributesLimitReached.is`\n*   **summary**: Can't set more attributes per one call.\n\n### MaxSupplyLocked[\u200b](#maxsupplylocked \"Direct link to MaxSupplyLocked\")\n\n*   **interface**: `api.errors.nfts.MaxSupplyLocked.is`\n*   **summary**: The max supply is locked and can't be changed.\n\n### MaxSupplyReached[\u200b](#maxsupplyreached \"Direct link to MaxSupplyReached\")\n\n*   **interface**: `api.errors.nfts.MaxSupplyReached.is`\n*   **summary**: All items have been minted.\n\n### MaxSupplyTooSmall[\u200b](#maxsupplytoosmall \"Direct link to MaxSupplyTooSmall\")\n\n*   **interface**: `api.errors.nfts.MaxSupplyTooSmall.is`\n*   **summary**: The provided max supply is less than the number of items a collection already has.\n\n### MetadataNotFound[\u200b](#metadatanotfound \"Direct link to MetadataNotFound\")\n\n*   **interface**: `api.errors.nfts.MetadataNotFound.is`\n*   **summary**: The given item has no metadata set.\n\n### MethodDisabled[\u200b](#methoddisabled \"Direct link to MethodDisabled\")\n\n*   **interface**: `api.errors.nfts.MethodDisabled.is`\n*   **summary**: The method is disabled by system settings.\n\n### MintEnded[\u200b](#mintended \"Direct link to MintEnded\")\n\n*   **interface**: `api.errors.nfts.MintEnded.is`\n*   **summary**: Mint has already ended.\n\n### MintNotStarted[\u200b](#mintnotstarted \"Direct link to MintNotStarted\")\n\n*   **interface**: `api.errors.nfts.MintNotStarted.is`\n*   **summary**: Mint has not started yet.\n\n### NoConfig[\u200b](#noconfig \"Direct link to NoConfig\")\n\n*   **interface**: `api.errors.nfts.NoConfig.is`\n*   **summary**: Config for a collection or an item can't be found.\n\n### NoPermission[\u200b](#nopermission-5 \"Direct link to NoPermission\")\n\n*   **interface**: `api.errors.nfts.NoPermission.is`\n*   **summary**: The signing account has no permission to do the operation.\n\n### NotDelegate[\u200b](#notdelegate \"Direct link to NotDelegate\")\n\n*   **interface**: `api.errors.nfts.NotDelegate.is`\n*   **summary**: The provided account is not a delegate.\n\n### NotForSale[\u200b](#notforsale \"Direct link to NotForSale\")\n\n*   **interface**: `api.errors.nfts.NotForSale.is`\n*   **summary**: Item is not for sale.\n\n### ReachedApprovalLimit[\u200b](#reachedapprovallimit \"Direct link to ReachedApprovalLimit\")\n\n*   **interface**: `api.errors.nfts.ReachedApprovalLimit.is`\n*   **summary**: The item has reached its approval limit.\n\n### RolesNotCleared[\u200b](#rolesnotcleared \"Direct link to RolesNotCleared\")\n\n*   **interface**: `api.errors.nfts.RolesNotCleared.is`\n*   **summary**: Some roles were not cleared.\n\n### Unaccepted[\u200b](#unaccepted \"Direct link to Unaccepted\")\n\n*   **interface**: `api.errors.nfts.Unaccepted.is`\n*   **summary**: The named owner has not signed ownership acceptance of the collection.\n\n### Unapproved[\u200b](#unapproved-1 \"Direct link to Unapproved\")\n\n*   **interface**: `api.errors.nfts.Unapproved.is`\n*   **summary**: No approval exists that would allow the transfer.\n\n### UnknownCollection[\u200b](#unknowncollection \"Direct link to UnknownCollection\")\n\n*   **interface**: `api.errors.nfts.UnknownCollection.is`\n*   **summary**: The given item ID is unknown.\n\n### UnknownItem[\u200b](#unknownitem \"Direct link to UnknownItem\")\n\n*   **interface**: `api.errors.nfts.UnknownItem.is`\n*   **summary**: The given item ID is unknown.\n\n### UnknownSwap[\u200b](#unknownswap \"Direct link to UnknownSwap\")\n\n*   **interface**: `api.errors.nfts.UnknownSwap.is`\n*   **summary**: Swap doesn't exist.\n\n### WitnessRequired[\u200b](#witnessrequired \"Direct link to WitnessRequired\")\n\n*   **interface**: `api.errors.nfts.WitnessRequired.is`\n*   **summary**: The witness data should be provided.\n\n### WrongDelegate[\u200b](#wrongdelegate \"Direct link to WrongDelegate\")\n\n*   **interface**: `api.errors.nfts.WrongDelegate.is`\n*   **summary**: The delegate turned out to be different to what was expected.\n\n### WrongDuration[\u200b](#wrongduration \"Direct link to WrongDuration\")\n\n*   **interface**: `api.errors.nfts.WrongDuration.is`\n*   **summary**: The duration provided should be less than or equal to `MaxDeadlineDuration`.\n\n### WrongNamespace[\u200b](#wrongnamespace \"Direct link to WrongNamespace\")\n\n*   **interface**: `api.errors.nfts.WrongNamespace.is`\n*   **summary**: The provided namespace isn't supported in this call.\n\n### WrongOrigin[\u200b](#wrongorigin \"Direct link to WrongOrigin\")\n\n*   **interface**: `api.errors.nfts.WrongOrigin.is`\n*   **summary**: The extrinsic was sent by the wrong origin.\n\n### WrongOwner[\u200b](#wrongowner \"Direct link to WrongOwner\")\n\n*   **interface**: `api.errors.nfts.WrongOwner.is`\n*   **summary**: The owner turned out to be different to what was expected.\n\n### WrongSetting[\u200b](#wrongsetting \"Direct link to WrongSetting\")\n\n*   **interface**: `api.errors.nfts.WrongSetting.is`\n*   **summary**: The provided setting can't be set.\n\n### WrongSignature[\u200b](#wrongsignature \"Direct link to WrongSignature\")\n\n*   **interface**: `api.errors.nfts.WrongSignature.is`\n*   **summary**: The provided signature is incorrect.\n\n* * *\n\nnis[\u200b](#nis \"Direct link to nis\")\n\n----------------------------------\n\n### AlreadyCommunal[\u200b](#alreadycommunal \"Direct link to AlreadyCommunal\")\n\n*   **interface**: `api.errors.nis.AlreadyCommunal.is`\n*   **summary**: The receipt is already communal.\n\n### AlreadyFunded[\u200b](#alreadyfunded \"Direct link to AlreadyFunded\")\n\n*   **interface**: `api.errors.nis.AlreadyFunded.is`\n*   **summary**: There are enough funds for what is required.\n\n### AlreadyPrivate[\u200b](#alreadyprivate \"Direct link to AlreadyPrivate\")\n\n*   **interface**: `api.errors.nis.AlreadyPrivate.is`\n*   **summary**: The receipt is already private.\n\n### AmountTooSmall[\u200b](#amounttoosmall \"Direct link to AmountTooSmall\")\n\n*   **interface**: `api.errors.nis.AmountTooSmall.is`\n*   **summary**: The amount of the bid is less than the minimum allowed.\n\n### BidTooLow[\u200b](#bidtoolow-1 \"Direct link to BidTooLow\")\n\n*   **interface**: `api.errors.nis.BidTooLow.is`\n*   **summary**: The queue for the bid's duration is full and the amount bid is too low to get in through replacing an existing bid.\n\n### DurationTooBig[\u200b](#durationtoobig \"Direct link to DurationTooBig\")\n\n*   **interface**: `api.errors.nis.DurationTooBig.is`\n*   **summary**: The duration is the bid is greater than the number of queues.\n\n### DurationTooSmall[\u200b](#durationtoosmall \"Direct link to DurationTooSmall\")\n\n*   **interface**: `api.errors.nis.DurationTooSmall.is`\n*   **summary**: The duration of the bid is less than one.\n\n### MakesDust[\u200b](#makesdust \"Direct link to MakesDust\")\n\n*   **interface**: `api.errors.nis.MakesDust.is`\n*   **summary**: The operation would result in a receipt worth an insignficant value.\n\n### NotExpired[\u200b](#notexpired \"Direct link to NotExpired\")\n\n*   **interface**: `api.errors.nis.NotExpired.is`\n*   **summary**: Bond not yet at expiry date.\n\n### NotOwner[\u200b](#notowner-3 \"Direct link to NotOwner\")\n\n*   **interface**: `api.errors.nis.NotOwner.is`\n*   **summary**: Not the owner of the receipt.\n\n### PortionTooBig[\u200b](#portiontoobig \"Direct link to PortionTooBig\")\n\n*   **interface**: `api.errors.nis.PortionTooBig.is`\n*   **summary**: The portion supplied is beyond the value of the receipt.\n\n### Throttled[\u200b](#throttled \"Direct link to Throttled\")\n\n*   **interface**: `api.errors.nis.Throttled.is`\n*   **summary**: The thaw throttle has been reached for this period.\n\n### Unfunded[\u200b](#unfunded \"Direct link to Unfunded\")\n\n*   **interface**: `api.errors.nis.Unfunded.is`\n*   **summary**: Not enough funds are held to pay out.\n\n### UnknownBid[\u200b](#unknownbid \"Direct link to UnknownBid\")\n\n*   **interface**: `api.errors.nis.UnknownBid.is`\n*   **summary**: The given bid for retraction is not found.\n\n### UnknownReceipt[\u200b](#unknownreceipt \"Direct link to UnknownReceipt\")\n\n*   **interface**: `api.errors.nis.UnknownReceipt.is`\n*   **summary**: Receipt index is unknown.\n\n* * *\n\nnominationPools[\u200b](#nominationpools \"Direct link to nominationPools\")\n\n----------------------------------------------------------------------\n\n### AccountBelongsToOtherPool[\u200b](#accountbelongstootherpool \"Direct link to AccountBelongsToOtherPool\")\n\n*   **interface**: `api.errors.nominationPools.AccountBelongsToOtherPool.is`\n*   **summary**: An account is already delegating in another pool. An account may only belong to one pool at a time.\n\n### BondExtraRestricted[\u200b](#bondextrarestricted \"Direct link to BondExtraRestricted\")\n\n*   **interface**: `api.errors.nominationPools.BondExtraRestricted.is`\n*   **summary**: Bonding extra is restricted to the exact pending reward amount.\n\n### CanNotChangeState[\u200b](#cannotchangestate \"Direct link to CanNotChangeState\")\n\n*   **interface**: `api.errors.nominationPools.CanNotChangeState.is`\n*   **summary**: The pools state cannot be changed.\n\n### CannotWithdrawAny[\u200b](#cannotwithdrawany \"Direct link to CannotWithdrawAny\")\n\n*   **interface**: `api.errors.nominationPools.CannotWithdrawAny.is`\n*   **summary**: None of the funds can be withdrawn yet because the bonding duration has not passed.\n\n### CommissionChangeRateNotAllowed[\u200b](#commissionchangeratenotallowed \"Direct link to CommissionChangeRateNotAllowed\")\n\n*   **interface**: `api.errors.nominationPools.CommissionChangeRateNotAllowed.is`\n*   **summary**: The submitted changes to commission change rate are not allowed.\n\n### CommissionChangeThrottled[\u200b](#commissionchangethrottled \"Direct link to CommissionChangeThrottled\")\n\n*   **interface**: `api.errors.nominationPools.CommissionChangeThrottled.is`\n*   **summary**: Not enough blocks have surpassed since the last commission update.\n\n### CommissionExceedsGlobalMaximum[\u200b](#commissionexceedsglobalmaximum \"Direct link to CommissionExceedsGlobalMaximum\")\n\n*   **interface**: `api.errors.nominationPools.CommissionExceedsGlobalMaximum.is`\n*   **summary**: The supplied commission exceeds global maximum commission.\n\n### CommissionExceedsMaximum[\u200b](#commissionexceedsmaximum \"Direct link to CommissionExceedsMaximum\")\n\n*   **interface**: `api.errors.nominationPools.CommissionExceedsMaximum.is`\n*   **summary**: The supplied commission exceeds the max allowed commission.\n\n### Defensive[\u200b](#defensive \"Direct link to Defensive\")\n\n*   **interface**: `api.errors.nominationPools.Defensive.is`\n*   **summary**: Some error occurred that should never happen. This should be reported to the maintainers.\n\n### DoesNotHavePermission[\u200b](#doesnothavepermission \"Direct link to DoesNotHavePermission\")\n\n*   **interface**: `api.errors.nominationPools.DoesNotHavePermission.is`\n*   **summary**: The caller does not have adequate permissions.\n\n### FullyUnbonding[\u200b](#fullyunbonding \"Direct link to FullyUnbonding\")\n\n*   **interface**: `api.errors.nominationPools.FullyUnbonding.is`\n*   **summary**: The member is fully unbonded (and thus cannot access the bonded and reward pool anymore to, for example, collect rewards).\n\n### InvalidPoolId[\u200b](#invalidpoolid \"Direct link to InvalidPoolId\")\n\n*   **interface**: `api.errors.nominationPools.InvalidPoolId.is`\n*   **summary**: Pool id provided is not correct/usable.\n\n### MaxCommissionRestricted[\u200b](#maxcommissionrestricted \"Direct link to MaxCommissionRestricted\")\n\n*   **interface**: `api.errors.nominationPools.MaxCommissionRestricted.is`\n*   **summary**: The pool's max commission cannot be set higher than the existing value.\n\n### MaxPoolMembers[\u200b](#maxpoolmembers \"Direct link to MaxPoolMembers\")\n\n*   **interface**: `api.errors.nominationPools.MaxPoolMembers.is`\n*   **summary**: Too many members in the pool or system.\n\n### MaxPools[\u200b](#maxpools \"Direct link to MaxPools\")\n\n*   **interface**: `api.errors.nominationPools.MaxPools.is`\n*   **summary**: The system is maxed out on pools.\n\n### MaxUnbondingLimit[\u200b](#maxunbondinglimit \"Direct link to MaxUnbondingLimit\")\n\n*   **interface**: `api.errors.nominationPools.MaxUnbondingLimit.is`\n*   **summary**: The member cannot unbond further chunks due to reaching the limit.\n\n### MetadataExceedsMaxLen[\u200b](#metadataexceedsmaxlen \"Direct link to MetadataExceedsMaxLen\")\n\n*   **interface**: `api.errors.nominationPools.MetadataExceedsMaxLen.is`\n*   **summary**: Metadata exceeds \\[`Config::MaxMetadataLen`\\]\n\n### MinimumBondNotMet[\u200b](#minimumbondnotmet \"Direct link to MinimumBondNotMet\")\n\n*   **interface**: `api.errors.nominationPools.MinimumBondNotMet.is`\n    \n*   **summary**: The amount does not meet the minimum bond to either join or create a pool.\n    \n    The depositor can never unbond to a value less than `Pallet::depositor_min_bond`. The caller does not have nominating permissions for the pool. Members can never unbond to a value below `MinJoinBond`.\n    \n\n### NoCommissionCurrentSet[\u200b](#nocommissioncurrentset \"Direct link to NoCommissionCurrentSet\")\n\n*   **interface**: `api.errors.nominationPools.NoCommissionCurrentSet.is`\n*   **summary**: No commission current has been set.\n\n### NoPendingCommission[\u200b](#nopendingcommission \"Direct link to NoPendingCommission\")\n\n*   **interface**: `api.errors.nominationPools.NoPendingCommission.is`\n*   **summary**: There is no pending commission to claim.\n\n### NotDestroying[\u200b](#notdestroying \"Direct link to NotDestroying\")\n\n*   **interface**: `api.errors.nominationPools.NotDestroying.is`\n*   **summary**: A pool must be in \\[`PoolState::Destroying`\\] in order for the depositor to unbond or for other members to be permissionlessly unbonded.\n\n### NothingToAdjust[\u200b](#nothingtoadjust \"Direct link to NothingToAdjust\")\n\n*   **interface**: `api.errors.nominationPools.NothingToAdjust.is`\n*   **summary**: No imbalance in the ED deposit for the pool.\n\n### NotKickerOrDestroying[\u200b](#notkickerordestroying \"Direct link to NotKickerOrDestroying\")\n\n*   **interface**: `api.errors.nominationPools.NotKickerOrDestroying.is`\n*   **summary**: Either a) the caller cannot make a valid kick or b) the pool is not destroying.\n\n### NotNominator[\u200b](#notnominator \"Direct link to NotNominator\")\n\n*   **interface**: `api.errors.nominationPools.NotNominator.is`\n*   **summary**: The caller does not have nominating permissions for the pool.\n\n### NotOpen[\u200b](#notopen \"Direct link to NotOpen\")\n\n*   **interface**: `api.errors.nominationPools.NotOpen.is`\n*   **summary**: The pool is not open to join\n\n### OverflowRisk[\u200b](#overflowrisk \"Direct link to OverflowRisk\")\n\n*   **interface**: `api.errors.nominationPools.OverflowRisk.is`\n*   **summary**: The transaction could not be executed due to overflow risk for the pool.\n\n### PartialUnbondNotAllowedPermissionlessly[\u200b](#partialunbondnotallowedpermissionlessly \"Direct link to PartialUnbondNotAllowedPermissionlessly\")\n\n*   **interface**: `api.errors.nominationPools.PartialUnbondNotAllowedPermissionlessly.is`\n*   **summary**: Partial unbonding now allowed permissionlessly.\n\n### PoolIdInUse[\u200b](#poolidinuse \"Direct link to PoolIdInUse\")\n\n*   **interface**: `api.errors.nominationPools.PoolIdInUse.is`\n*   **summary**: Pool id currently in use.\n\n### PoolMemberNotFound[\u200b](#poolmembernotfound \"Direct link to PoolMemberNotFound\")\n\n*   **interface**: `api.errors.nominationPools.PoolMemberNotFound.is`\n*   **summary**: An account is not a member.\n\n### PoolNotFound[\u200b](#poolnotfound-1 \"Direct link to PoolNotFound\")\n\n*   **interface**: `api.errors.nominationPools.PoolNotFound.is`\n*   **summary**: A (bonded) pool id does not exist.\n\n### RewardPoolNotFound[\u200b](#rewardpoolnotfound \"Direct link to RewardPoolNotFound\")\n\n*   **interface**: `api.errors.nominationPools.RewardPoolNotFound.is`\n*   **summary**: A reward pool does not exist. In all cases this is a system logic error.\n\n### SubPoolsNotFound[\u200b](#subpoolsnotfound \"Direct link to SubPoolsNotFound\")\n\n*   **interface**: `api.errors.nominationPools.SubPoolsNotFound.is`\n*   **summary**: A sub pool does not exist.\n\n* * *\n\npoolAssets[\u200b](#poolassets \"Direct link to poolAssets\")\n\n-------------------------------------------------------\n\n### AlreadyExists[\u200b](#alreadyexists-3 \"Direct link to AlreadyExists\")\n\n*   **interface**: `api.errors.poolAssets.AlreadyExists.is`\n*   **summary**: The asset-account already exists.\n\n### AssetNotLive[\u200b](#assetnotlive-1 \"Direct link to AssetNotLive\")\n\n*   **interface**: `api.errors.poolAssets.AssetNotLive.is`\n*   **summary**: The asset is not live, and likely being destroyed.\n\n### BadMetadata[\u200b](#badmetadata-1 \"Direct link to BadMetadata\")\n\n*   **interface**: `api.errors.poolAssets.BadMetadata.is`\n*   **summary**: Invalid metadata given.\n\n### BadWitness[\u200b](#badwitness-3 \"Direct link to BadWitness\")\n\n*   **interface**: `api.errors.poolAssets.BadWitness.is`\n*   **summary**: Invalid witness data given.\n\n### BalanceLow[\u200b](#balancelow-1 \"Direct link to BalanceLow\")\n\n*   **interface**: `api.errors.poolAssets.BalanceLow.is`\n*   **summary**: Account balance must be greater than or equal to the transfer amount.\n\n### CallbackFailed[\u200b](#callbackfailed-1 \"Direct link to CallbackFailed\")\n\n*   **interface**: `api.errors.poolAssets.CallbackFailed.is`\n*   **summary**: Callback action resulted in error\n\n### Frozen[\u200b](#frozen-1 \"Direct link to Frozen\")\n\n*   **interface**: `api.errors.poolAssets.Frozen.is`\n*   **summary**: The origin account is frozen.\n\n### IncorrectStatus[\u200b](#incorrectstatus-1 \"Direct link to IncorrectStatus\")\n\n*   **interface**: `api.errors.poolAssets.IncorrectStatus.is`\n*   **summary**: The asset status is not the expected status.\n\n### InUse[\u200b](#inuse-2 \"Direct link to InUse\")\n\n*   **interface**: `api.errors.poolAssets.InUse.is`\n*   **summary**: The asset ID is already taken.\n\n### LiveAsset[\u200b](#liveasset-1 \"Direct link to LiveAsset\")\n\n*   **interface**: `api.errors.poolAssets.LiveAsset.is`\n*   **summary**: The asset is a live asset and is actively being used. Usually emit for operations such as `start_destroy` which require the asset to be in a destroying state.\n\n### MinBalanceZero[\u200b](#minbalancezero-1 \"Direct link to MinBalanceZero\")\n\n*   **interface**: `api.errors.poolAssets.MinBalanceZero.is`\n*   **summary**: Minimum balance should be non-zero.\n\n### NoAccount[\u200b](#noaccount-1 \"Direct link to NoAccount\")\n\n*   **interface**: `api.errors.poolAssets.NoAccount.is`\n*   **summary**: The account to alter does not exist.\n\n### NoDeposit[\u200b](#nodeposit-1 \"Direct link to NoDeposit\")\n\n*   **interface**: `api.errors.poolAssets.NoDeposit.is`\n*   **summary**: The asset-account doesn't have an associated deposit.\n\n### NoPermission[\u200b](#nopermission-6 \"Direct link to NoPermission\")\n\n*   **interface**: `api.errors.poolAssets.NoPermission.is`\n*   **summary**: The signing account has no permission to do the operation.\n\n### NotFrozen[\u200b](#notfrozen-1 \"Direct link to NotFrozen\")\n\n*   **interface**: `api.errors.poolAssets.NotFrozen.is`\n*   **summary**: The asset should be frozen before the given operation.\n\n### Unapproved[\u200b](#unapproved-2 \"Direct link to Unapproved\")\n\n*   **interface**: `api.errors.poolAssets.Unapproved.is`\n*   **summary**: No approval exists that would allow the transfer.\n\n### UnavailableConsumer[\u200b](#unavailableconsumer-1 \"Direct link to UnavailableConsumer\")\n\n*   **interface**: `api.errors.poolAssets.UnavailableConsumer.is`\n*   **summary**: Unable to increment the consumer reference counters on the account. Either no provider reference exists to allow a non-zero balance of a non-self-sufficient asset, or one fewer then the maximum number of consumers has been reached.\n\n### Unknown[\u200b](#unknown-1 \"Direct link to Unknown\")\n\n*   **interface**: `api.errors.poolAssets.Unknown.is`\n*   **summary**: The given asset ID is unknown.\n\n### WouldBurn[\u200b](#wouldburn-1 \"Direct link to WouldBurn\")\n\n*   **interface**: `api.errors.poolAssets.WouldBurn.is`\n*   **summary**: The operation would result in funds being burned.\n\n### WouldDie[\u200b](#woulddie-1 \"Direct link to WouldDie\")\n\n*   **interface**: `api.errors.poolAssets.WouldDie.is`\n*   **summary**: The source account would not survive the transfer and it needs to stay alive.\n\n* * *\n\npreimage[\u200b](#preimage \"Direct link to preimage\")\n\n-------------------------------------------------\n\n### AlreadyNoted[\u200b](#alreadynoted \"Direct link to AlreadyNoted\")\n\n*   **interface**: `api.errors.preimage.AlreadyNoted.is`\n*   **summary**: Preimage has already been noted on-chain.\n\n### NotAuthorized[\u200b](#notauthorized \"Direct link to NotAuthorized\")\n\n*   **interface**: `api.errors.preimage.NotAuthorized.is`\n*   **summary**: The user is not authorized to perform this action.\n\n### NotNoted[\u200b](#notnoted \"Direct link to NotNoted\")\n\n*   **interface**: `api.errors.preimage.NotNoted.is`\n*   **summary**: The preimage cannot be removed since it has not yet been noted.\n\n### NotRequested[\u200b](#notrequested \"Direct link to NotRequested\")\n\n*   **interface**: `api.errors.preimage.NotRequested.is`\n*   **summary**: The preimage request cannot be removed since no outstanding requests exist.\n\n### Requested[\u200b](#requested \"Direct link to Requested\")\n\n*   **interface**: `api.errors.preimage.Requested.is`\n*   **summary**: A preimage may not be removed when there are outstanding requests.\n\n### TooBig[\u200b](#toobig \"Direct link to TooBig\")\n\n*   **interface**: `api.errors.preimage.TooBig.is`\n*   **summary**: Preimage is too large to store on-chain.\n\n### TooFew[\u200b](#toofew \"Direct link to TooFew\")\n\n*   **interface**: `api.errors.preimage.TooFew.is`\n*   **summary**: Too few hashes were requested to be upgraded (i.e. zero).\n\n### TooMany[\u200b](#toomany-1 \"Direct link to TooMany\")\n\n*   **interface**: `api.errors.preimage.TooMany.is`\n*   **summary**: More than `MAX_HASH_UPGRADE_BULK_COUNT` hashes were requested to be upgraded at once.\n\n* * *\n\nproxy[\u200b](#proxy \"Direct link to proxy\")\n\n----------------------------------------\n\n### Duplicate[\u200b](#duplicate \"Direct link to Duplicate\")\n\n*   **interface**: `api.errors.proxy.Duplicate.is`\n*   **summary**: Account is already a proxy.\n\n### NoPermission[\u200b](#nopermission-7 \"Direct link to NoPermission\")\n\n*   **interface**: `api.errors.proxy.NoPermission.is`\n*   **summary**: Call may not be made by proxy because it may escalate its privileges.\n\n### NoSelfProxy[\u200b](#noselfproxy \"Direct link to NoSelfProxy\")\n\n*   **interface**: `api.errors.proxy.NoSelfProxy.is`\n*   **summary**: Cannot add self as proxy.\n\n### NotFound[\u200b](#notfound-2 \"Direct link to NotFound\")\n\n*   **interface**: `api.errors.proxy.NotFound.is`\n*   **summary**: Proxy registration not found.\n\n### NotProxy[\u200b](#notproxy \"Direct link to NotProxy\")\n\n*   **interface**: `api.errors.proxy.NotProxy.is`\n*   **summary**: Sender is not a proxy of the account to be proxied.\n\n### TooMany[\u200b](#toomany-2 \"Direct link to TooMany\")\n\n*   **interface**: `api.errors.proxy.TooMany.is`\n*   **summary**: There are too many proxies registered or too many announcements pending.\n\n### Unannounced[\u200b](#unannounced \"Direct link to Unannounced\")\n\n*   **interface**: `api.errors.proxy.Unannounced.is`\n*   **summary**: Announcement, if made at all, was made too recently.\n\n### Unproxyable[\u200b](#unproxyable \"Direct link to Unproxyable\")\n\n*   **interface**: `api.errors.proxy.Unproxyable.is`\n*   **summary**: A call which is incompatible with the proxy type's filter was attempted.\n\n* * *\n\nrankedCollective[\u200b](#rankedcollective \"Direct link to rankedCollective\")\n\n-------------------------------------------------------------------------\n\n### AlreadyMember[\u200b](#alreadymember-1 \"Direct link to AlreadyMember\")\n\n*   **interface**: `api.errors.rankedCollective.AlreadyMember.is`\n*   **summary**: Account is already a member.\n\n### Corruption[\u200b](#corruption \"Direct link to Corruption\")\n\n*   **interface**: `api.errors.rankedCollective.Corruption.is`\n*   **summary**: Unexpected error in state.\n\n### InvalidWitness[\u200b](#invalidwitness \"Direct link to InvalidWitness\")\n\n*   **interface**: `api.errors.rankedCollective.InvalidWitness.is`\n*   **summary**: The information provided is incorrect.\n\n### NoneRemaining[\u200b](#noneremaining \"Direct link to NoneRemaining\")\n\n*   **interface**: `api.errors.rankedCollective.NoneRemaining.is`\n*   **summary**: There are no further records to be removed.\n\n### NoPermission[\u200b](#nopermission-8 \"Direct link to NoPermission\")\n\n*   **interface**: `api.errors.rankedCollective.NoPermission.is`\n*   **summary**: The origin is not sufficiently privileged to do the operation.\n\n### NotMember[\u200b](#notmember-4 \"Direct link to NotMember\")\n\n*   **interface**: `api.errors.rankedCollective.NotMember.is`\n*   **summary**: Account is not a member.\n\n### NotPolling[\u200b](#notpolling \"Direct link to NotPolling\")\n\n*   **interface**: `api.errors.rankedCollective.NotPolling.is`\n*   **summary**: The given poll index is unknown or has closed.\n\n### Ongoing[\u200b](#ongoing \"Direct link to Ongoing\")\n\n*   **interface**: `api.errors.rankedCollective.Ongoing.is`\n*   **summary**: The given poll is still ongoing.\n\n### RankTooLow[\u200b](#ranktoolow \"Direct link to RankTooLow\")\n\n*   **interface**: `api.errors.rankedCollective.RankTooLow.is`\n*   **summary**: The member's rank is too low to vote.\n\n* * *\n\nrankedPolls[\u200b](#rankedpolls \"Direct link to rankedPolls\")\n\n----------------------------------------------------------\n\n### BadReferendum[\u200b](#badreferendum \"Direct link to BadReferendum\")\n\n*   **interface**: `api.errors.rankedPolls.BadReferendum.is`\n*   **summary**: The referendum index provided is invalid in this context.\n\n### BadStatus[\u200b](#badstatus \"Direct link to BadStatus\")\n\n*   **interface**: `api.errors.rankedPolls.BadStatus.is`\n*   **summary**: The referendum status is invalid for this operation.\n\n### BadTrack[\u200b](#badtrack \"Direct link to BadTrack\")\n\n*   **interface**: `api.errors.rankedPolls.BadTrack.is`\n*   **summary**: The track identifier given was invalid.\n\n### Full[\u200b](#full \"Direct link to Full\")\n\n*   **interface**: `api.errors.rankedPolls.Full.is`\n*   **summary**: There are already a full complement of referenda in progress for this track.\n\n### HasDeposit[\u200b](#hasdeposit \"Direct link to HasDeposit\")\n\n*   **interface**: `api.errors.rankedPolls.HasDeposit.is`\n*   **summary**: Referendum's decision deposit is already paid.\n\n### NoDeposit[\u200b](#nodeposit-2 \"Direct link to NoDeposit\")\n\n*   **interface**: `api.errors.rankedPolls.NoDeposit.is`\n*   **summary**: The deposit cannot be refunded since none was made.\n\n### NoPermission[\u200b](#nopermission-9 \"Direct link to NoPermission\")\n\n*   **interface**: `api.errors.rankedPolls.NoPermission.is`\n*   **summary**: The deposit refunder is not the depositor.\n\n### NothingToDo[\u200b](#nothingtodo-1 \"Direct link to NothingToDo\")\n\n*   **interface**: `api.errors.rankedPolls.NothingToDo.is`\n*   **summary**: There was nothing to do in the advancement.\n\n### NotOngoing[\u200b](#notongoing-1 \"Direct link to NotOngoing\")\n\n*   **interface**: `api.errors.rankedPolls.NotOngoing.is`\n*   **summary**: Referendum is not ongoing.\n\n### NoTrack[\u200b](#notrack \"Direct link to NoTrack\")\n\n*   **interface**: `api.errors.rankedPolls.NoTrack.is`\n*   **summary**: No track exists for the proposal origin.\n\n### PreimageNotExist[\u200b](#preimagenotexist-1 \"Direct link to PreimageNotExist\")\n\n*   **interface**: `api.errors.rankedPolls.PreimageNotExist.is`\n*   **summary**: The preimage does not exist.\n\n### QueueEmpty[\u200b](#queueempty \"Direct link to QueueEmpty\")\n\n*   **interface**: `api.errors.rankedPolls.QueueEmpty.is`\n*   **summary**: The queue of the track is empty.\n\n### Unfinished[\u200b](#unfinished \"Direct link to Unfinished\")\n\n*   **interface**: `api.errors.rankedPolls.Unfinished.is`\n*   **summary**: Any deposit cannot be refunded until after the decision is over.\n\n* * *\n\nrecovery[\u200b](#recovery \"Direct link to recovery\")\n\n-------------------------------------------------\n\n### AlreadyProxy[\u200b](#alreadyproxy \"Direct link to AlreadyProxy\")\n\n*   **interface**: `api.errors.recovery.AlreadyProxy.is`\n*   **summary**: This account is already set up for recovery\n\n### AlreadyRecoverable[\u200b](#alreadyrecoverable \"Direct link to AlreadyRecoverable\")\n\n*   **interface**: `api.errors.recovery.AlreadyRecoverable.is`\n*   **summary**: This account is already set up for recovery\n\n### AlreadyStarted[\u200b](#alreadystarted \"Direct link to AlreadyStarted\")\n\n*   **interface**: `api.errors.recovery.AlreadyStarted.is`\n*   **summary**: A recovery process has already started for this account\n\n### AlreadyVouched[\u200b](#alreadyvouched \"Direct link to AlreadyVouched\")\n\n*   **interface**: `api.errors.recovery.AlreadyVouched.is`\n*   **summary**: This user has already vouched for this recovery\n\n### BadState[\u200b](#badstate \"Direct link to BadState\")\n\n*   **interface**: `api.errors.recovery.BadState.is`\n*   **summary**: Some internal state is broken.\n\n### DelayPeriod[\u200b](#delayperiod \"Direct link to DelayPeriod\")\n\n*   **interface**: `api.errors.recovery.DelayPeriod.is`\n*   **summary**: The friend must wait until the delay period to vouch for this recovery\n\n### MaxFriends[\u200b](#maxfriends \"Direct link to MaxFriends\")\n\n*   **interface**: `api.errors.recovery.MaxFriends.is`\n*   **summary**: Friends list must be less than max friends\n\n### NotAllowed[\u200b](#notallowed-1 \"Direct link to NotAllowed\")\n\n*   **interface**: `api.errors.recovery.NotAllowed.is`\n*   **summary**: User is not allowed to make a call on behalf of this account\n\n### NotEnoughFriends[\u200b](#notenoughfriends \"Direct link to NotEnoughFriends\")\n\n*   **interface**: `api.errors.recovery.NotEnoughFriends.is`\n*   **summary**: Friends list must be greater than zero and threshold\n\n### NotFriend[\u200b](#notfriend \"Direct link to NotFriend\")\n\n*   **interface**: `api.errors.recovery.NotFriend.is`\n*   **summary**: This account is not a friend who can vouch\n\n### NotRecoverable[\u200b](#notrecoverable \"Direct link to NotRecoverable\")\n\n*   **interface**: `api.errors.recovery.NotRecoverable.is`\n*   **summary**: This account is not set up for recovery\n\n### NotSorted[\u200b](#notsorted \"Direct link to NotSorted\")\n\n*   **interface**: `api.errors.recovery.NotSorted.is`\n*   **summary**: Friends list must be sorted and free of duplicates\n\n### NotStarted[\u200b](#notstarted \"Direct link to NotStarted\")\n\n*   **interface**: `api.errors.recovery.NotStarted.is`\n*   **summary**: A recovery process has not started for this rescuer\n\n### StillActive[\u200b](#stillactive \"Direct link to StillActive\")\n\n*   **interface**: `api.errors.recovery.StillActive.is`\n*   **summary**: There are still active recovery attempts that need to be closed\n\n### Threshold[\u200b](#threshold \"Direct link to Threshold\")\n\n*   **interface**: `api.errors.recovery.Threshold.is`\n*   **summary**: The threshold for recovering this account has not been met\n\n### ZeroThreshold[\u200b](#zerothreshold \"Direct link to ZeroThreshold\")\n\n*   **interface**: `api.errors.recovery.ZeroThreshold.is`\n*   **summary**: Threshold must be greater than zero\n\n* * *\n\nreferenda[\u200b](#referenda \"Direct link to referenda\")\n\n----------------------------------------------------\n\n### BadReferendum[\u200b](#badreferendum-1 \"Direct link to BadReferendum\")\n\n*   **interface**: `api.errors.referenda.BadReferendum.is`\n*   **summary**: The referendum index provided is invalid in this context.\n\n### BadStatus[\u200b](#badstatus-1 \"Direct link to BadStatus\")\n\n*   **interface**: `api.errors.referenda.BadStatus.is`\n*   **summary**: The referendum status is invalid for this operation.\n\n### BadTrack[\u200b](#badtrack-1 \"Direct link to BadTrack\")\n\n*   **interface**: `api.errors.referenda.BadTrack.is`\n*   **summary**: The track identifier given was invalid.\n\n### Full[\u200b](#full-1 \"Direct link to Full\")\n\n*   **interface**: `api.errors.referenda.Full.is`\n*   **summary**: There are already a full complement of referenda in progress for this track.\n\n### HasDeposit[\u200b](#hasdeposit-1 \"Direct link to HasDeposit\")\n\n*   **interface**: `api.errors.referenda.HasDeposit.is`\n*   **summary**: Referendum's decision deposit is already paid.\n\n### NoDeposit[\u200b](#nodeposit-3 \"Direct link to NoDeposit\")\n\n*   **interface**: `api.errors.referenda.NoDeposit.is`\n*   **summary**: The deposit cannot be refunded since none was made.\n\n### NoPermission[\u200b](#nopermission-10 \"Direct link to NoPermission\")\n\n*   **interface**: `api.errors.referenda.NoPermission.is`\n*   **summary**: The deposit refunder is not the depositor.\n\n### NothingToDo[\u200b](#nothingtodo-2 \"Direct link to NothingToDo\")\n\n*   **interface**: `api.errors.referenda.NothingToDo.is`\n*   **summary**: There was nothing to do in the advancement.\n\n### NotOngoing[\u200b](#notongoing-2 \"Direct link to NotOngoing\")\n\n*   **interface**: `api.errors.referenda.NotOngoing.is`\n*   **summary**: Referendum is not ongoing.\n\n### NoTrack[\u200b](#notrack-1 \"Direct link to NoTrack\")\n\n*   **interface**: `api.errors.referenda.NoTrack.is`\n*   **summary**: No track exists for the proposal origin.\n\n### PreimageNotExist[\u200b](#preimagenotexist-2 \"Direct link to PreimageNotExist\")\n\n*   **interface**: `api.errors.referenda.PreimageNotExist.is`\n*   **summary**: The preimage does not exist.\n\n### QueueEmpty[\u200b](#queueempty-1 \"Direct link to QueueEmpty\")\n\n*   **interface**: `api.errors.referenda.QueueEmpty.is`\n*   **summary**: The queue of the track is empty.\n\n### Unfinished[\u200b](#unfinished-1 \"Direct link to Unfinished\")\n\n*   **interface**: `api.errors.referenda.Unfinished.is`\n*   **summary**: Any deposit cannot be refunded until after the decision is over.\n\n* * *\n\nremark[\u200b](#remark \"Direct link to remark\")\n\n-------------------------------------------\n\n### BadContext[\u200b](#badcontext \"Direct link to BadContext\")\n\n*   **interface**: `api.errors.remark.BadContext.is`\n*   **summary**: Attempted to call `store` outside of block execution.\n\n### Empty[\u200b](#empty \"Direct link to Empty\")\n\n*   **interface**: `api.errors.remark.Empty.is`\n*   **summary**: Attempting to store empty data.\n\n* * *\n\nsafeMode[\u200b](#safemode \"Direct link to safeMode\")\n\n-------------------------------------------------\n\n### AlreadyDeposited[\u200b](#alreadydeposited \"Direct link to AlreadyDeposited\")\n\n*   **interface**: `api.errors.safeMode.AlreadyDeposited.is`\n*   **summary**: The account already has a deposit reserved and can therefore not enter or extend again.\n\n### CannotReleaseYet[\u200b](#cannotreleaseyet \"Direct link to CannotReleaseYet\")\n\n*   **interface**: `api.errors.safeMode.CannotReleaseYet.is`\n*   **summary**: This deposit cannot be released yet.\n\n### CurrencyError[\u200b](#currencyerror \"Direct link to CurrencyError\")\n\n*   **interface**: `api.errors.safeMode.CurrencyError.is`\n*   **summary**: An error from the underlying `Currency`.\n\n### Entered[\u200b](#entered \"Direct link to Entered\")\n\n*   **interface**: `api.errors.safeMode.Entered.is`\n*   **summary**: The safe-mode is (already or still) entered.\n\n### Exited[\u200b](#exited \"Direct link to Exited\")\n\n*   **interface**: `api.errors.safeMode.Exited.is`\n*   **summary**: The safe-mode is (already or still) exited.\n\n### NoDeposit[\u200b](#nodeposit-4 \"Direct link to NoDeposit\")\n\n*   **interface**: `api.errors.safeMode.NoDeposit.is`\n*   **summary**: There is no balance reserved.\n\n### NotConfigured[\u200b](#notconfigured-1 \"Direct link to NotConfigured\")\n\n*   **interface**: `api.errors.safeMode.NotConfigured.is`\n*   **summary**: This functionality of the pallet is disabled by the configuration.\n\n* * *\n\nsalary[\u200b](#salary \"Direct link to salary\")\n\n-------------------------------------------\n\n### AlreadyInducted[\u200b](#alreadyinducted-1 \"Direct link to AlreadyInducted\")\n\n*   **interface**: `api.errors.salary.AlreadyInducted.is`\n*   **summary**: The account is already inducted.\n\n### AlreadyStarted[\u200b](#alreadystarted-1 \"Direct link to AlreadyStarted\")\n\n*   **interface**: `api.errors.salary.AlreadyStarted.is`\n*   **summary**: The salary system has already been started.\n\n### Bankrupt[\u200b](#bankrupt \"Direct link to Bankrupt\")\n\n*   **interface**: `api.errors.salary.Bankrupt.is`\n*   **summary**: There is no budget left for the payout.\n\n### ClaimZero[\u200b](#claimzero \"Direct link to ClaimZero\")\n\n*   **interface**: `api.errors.salary.ClaimZero.is`\n*   **summary**: The member's claim is zero.\n\n### Inconclusive[\u200b](#inconclusive \"Direct link to Inconclusive\")\n\n*   **interface**: `api.errors.salary.Inconclusive.is`\n*   **summary**: The payment has neither failed nor succeeded yet.\n\n### NoClaim[\u200b](#noclaim \"Direct link to NoClaim\")\n\n*   **interface**: `api.errors.salary.NoClaim.is`\n*   **summary**: The member does not have a current valid claim.\n\n### NotCurrent[\u200b](#notcurrent \"Direct link to NotCurrent\")\n\n*   **interface**: `api.errors.salary.NotCurrent.is`\n*   **summary**: The cycle is after that in which the payment was made.\n\n### NotInducted[\u200b](#notinducted \"Direct link to NotInducted\")\n\n*   **interface**: `api.errors.salary.NotInducted.is`\n\n### NotMember[\u200b](#notmember-5 \"Direct link to NotMember\")\n\n*   **interface**: `api.errors.salary.NotMember.is`\n*   **summary**: The account is not a ranked member.\n\n### NotStarted[\u200b](#notstarted-1 \"Direct link to NotStarted\")\n\n*   **interface**: `api.errors.salary.NotStarted.is`\n*   **summary**: The payout cycles have not yet started.\n\n### NotYet[\u200b](#notyet \"Direct link to NotYet\")\n\n*   **interface**: `api.errors.salary.NotYet.is`\n*   **summary**: Cycle is not yet over.\n\n### PayError[\u200b](#payerror \"Direct link to PayError\")\n\n*   **interface**: `api.errors.salary.PayError.is`\n*   **summary**: There was some issue with the mechanism of payment.\n\n### TooEarly[\u200b](#tooearly-3 \"Direct link to TooEarly\")\n\n*   **interface**: `api.errors.salary.TooEarly.is`\n*   **summary**: Current cycle's payment period is not yet begun.\n\n### TooLate[\u200b](#toolate \"Direct link to TooLate\")\n\n*   **interface**: `api.errors.salary.TooLate.is`\n*   **summary**: Current cycle's registration period is over.\n\n* * *\n\nscheduler[\u200b](#scheduler \"Direct link to scheduler\")\n\n----------------------------------------------------\n\n### FailedToSchedule[\u200b](#failedtoschedule \"Direct link to FailedToSchedule\")\n\n*   **interface**: `api.errors.scheduler.FailedToSchedule.is`\n*   **summary**: Failed to schedule a call\n\n### Named[\u200b](#named \"Direct link to Named\")\n\n*   **interface**: `api.errors.scheduler.Named.is`\n*   **summary**: Attempt to use a non-named function on a named task.\n\n### NotFound[\u200b](#notfound-3 \"Direct link to NotFound\")\n\n*   **interface**: `api.errors.scheduler.NotFound.is`\n*   **summary**: Cannot find the scheduled call.\n\n### RescheduleNoChange[\u200b](#reschedulenochange \"Direct link to RescheduleNoChange\")\n\n*   **interface**: `api.errors.scheduler.RescheduleNoChange.is`\n*   **summary**: Reschedule failed because it does not change scheduled time.\n\n### TargetBlockNumberInPast[\u200b](#targetblocknumberinpast \"Direct link to TargetBlockNumberInPast\")\n\n*   **interface**: `api.errors.scheduler.TargetBlockNumberInPast.is`\n*   **summary**: Given target block number is in the past.\n\n* * *\n\nsession[\u200b](#session \"Direct link to session\")\n\n----------------------------------------------\n\n### DuplicatedKey[\u200b](#duplicatedkey \"Direct link to DuplicatedKey\")\n\n*   **interface**: `api.errors.session.DuplicatedKey.is`\n*   **summary**: Registered duplicate key.\n\n### InvalidProof[\u200b](#invalidproof \"Direct link to InvalidProof\")\n\n*   **interface**: `api.errors.session.InvalidProof.is`\n*   **summary**: Invalid ownership proof.\n\n### NoAccount[\u200b](#noaccount-2 \"Direct link to NoAccount\")\n\n*   **interface**: `api.errors.session.NoAccount.is`\n*   **summary**: Key setting account is not live, so it's impossible to associate keys.\n\n### NoAssociatedValidatorId[\u200b](#noassociatedvalidatorid \"Direct link to NoAssociatedValidatorId\")\n\n*   **interface**: `api.errors.session.NoAssociatedValidatorId.is`\n*   **summary**: No associated validator ID for account.\n\n### NoKeys[\u200b](#nokeys \"Direct link to NoKeys\")\n\n*   **interface**: `api.errors.session.NoKeys.is`\n*   **summary**: No keys are associated with this account.\n\n* * *\n\nsociety[\u200b](#society \"Direct link to society\")\n\n----------------------------------------------\n\n### AlreadyBid[\u200b](#alreadybid \"Direct link to AlreadyBid\")\n\n*   **interface**: `api.errors.society.AlreadyBid.is`\n*   **summary**: User has already made a bid.\n\n### AlreadyCandidate[\u200b](#alreadycandidate \"Direct link to AlreadyCandidate\")\n\n*   **interface**: `api.errors.society.AlreadyCandidate.is`\n*   **summary**: User is already a candidate.\n\n### AlreadyElevated[\u200b](#alreadyelevated-1 \"Direct link to AlreadyElevated\")\n\n*   **interface**: `api.errors.society.AlreadyElevated.is`\n*   **summary**: The member is already elevated to this rank.\n\n### AlreadyFounded[\u200b](#alreadyfounded \"Direct link to AlreadyFounded\")\n\n*   **interface**: `api.errors.society.AlreadyFounded.is`\n*   **summary**: Society already founded.\n\n### AlreadyMember[\u200b](#alreadymember-2 \"Direct link to AlreadyMember\")\n\n*   **interface**: `api.errors.society.AlreadyMember.is`\n*   **summary**: User is already a member.\n\n### AlreadyPunished[\u200b](#alreadypunished \"Direct link to AlreadyPunished\")\n\n*   **interface**: `api.errors.society.AlreadyPunished.is`\n*   **summary**: The skeptic has already been punished for this offence.\n\n### AlreadyVouching[\u200b](#alreadyvouching \"Direct link to AlreadyVouching\")\n\n*   **interface**: `api.errors.society.AlreadyVouching.is`\n*   **summary**: Member is already vouching or banned from vouching again.\n\n### Approved[\u200b](#approved \"Direct link to Approved\")\n\n*   **interface**: `api.errors.society.Approved.is`\n*   **summary**: The candidacy cannot be dropped as the candidate was clearly approved.\n\n### Expired[\u200b](#expired \"Direct link to Expired\")\n\n*   **interface**: `api.errors.society.Expired.is`\n*   **summary**: The skeptic need not vote on candidates from expired rounds.\n\n### Founder[\u200b](#founder \"Direct link to Founder\")\n\n*   **interface**: `api.errors.society.Founder.is`\n*   **summary**: Cannot remove the founder.\n\n### Head[\u200b](#head \"Direct link to Head\")\n\n*   **interface**: `api.errors.society.Head.is`\n*   **summary**: Cannot remove the head of the chain.\n\n### InProgress[\u200b](#inprogress-1 \"Direct link to InProgress\")\n\n*   **interface**: `api.errors.society.InProgress.is`\n*   **summary**: The candidacy cannot be concluded as the voting is still in progress.\n\n### InsufficientFunds[\u200b](#insufficientfunds-3 \"Direct link to InsufficientFunds\")\n\n*   **interface**: `api.errors.society.InsufficientFunds.is`\n*   **summary**: Funds are insufficient to pay off society debts.\n\n### InsufficientPot[\u200b](#insufficientpot \"Direct link to InsufficientPot\")\n\n*   **interface**: `api.errors.society.InsufficientPot.is`\n*   **summary**: Not enough in pot to accept candidate.\n\n### MaxMembers[\u200b](#maxmembers \"Direct link to MaxMembers\")\n\n*   **interface**: `api.errors.society.MaxMembers.is`\n*   **summary**: Too many members in the society.\n\n### NoDefender[\u200b](#nodefender \"Direct link to NoDefender\")\n\n*   **interface**: `api.errors.society.NoDefender.is`\n*   **summary**: There is no defender currently.\n\n### NoPayout[\u200b](#nopayout \"Direct link to NoPayout\")\n\n*   **interface**: `api.errors.society.NoPayout.is`\n*   **summary**: Nothing to payout.\n\n### NotApproved[\u200b](#notapproved \"Direct link to NotApproved\")\n\n*   **interface**: `api.errors.society.NotApproved.is`\n*   **summary**: The membership cannot be claimed as the candidate was not clearly approved.\n\n### NotBidder[\u200b](#notbidder \"Direct link to NotBidder\")\n\n*   **interface**: `api.errors.society.NotBidder.is`\n*   **summary**: User is not a bidder.\n\n### NotCandidate[\u200b](#notcandidate \"Direct link to NotCandidate\")\n\n*   **interface**: `api.errors.society.NotCandidate.is`\n*   **summary**: User is not a candidate.\n\n### NotFounder[\u200b](#notfounder \"Direct link to NotFounder\")\n\n*   **interface**: `api.errors.society.NotFounder.is`\n*   **summary**: The caller is not the founder.\n\n### NotGroup[\u200b](#notgroup \"Direct link to NotGroup\")\n\n*   **interface**: `api.errors.society.NotGroup.is`\n*   **summary**: Group doesn't exist.\n\n### NotHead[\u200b](#nothead \"Direct link to NotHead\")\n\n*   **interface**: `api.errors.society.NotHead.is`\n*   **summary**: The caller is not the head.\n\n### NotMember[\u200b](#notmember-6 \"Direct link to NotMember\")\n\n*   **interface**: `api.errors.society.NotMember.is`\n*   **summary**: User is not a member.\n\n### NotRejected[\u200b](#notrejected \"Direct link to NotRejected\")\n\n*   **interface**: `api.errors.society.NotRejected.is`\n*   **summary**: The candidate cannot be kicked as the candidate was not clearly rejected.\n\n### NotSuspended[\u200b](#notsuspended \"Direct link to NotSuspended\")\n\n*   **interface**: `api.errors.society.NotSuspended.is`\n*   **summary**: User is not suspended.\n\n### NotVouchingOnBidder[\u200b](#notvouchingonbidder \"Direct link to NotVouchingOnBidder\")\n\n*   **interface**: `api.errors.society.NotVouchingOnBidder.is`\n*   **summary**: Member is not vouching.\n\n### NoVotes[\u200b](#novotes-1 \"Direct link to NoVotes\")\n\n*   **interface**: `api.errors.society.NoVotes.is`\n*   **summary**: The candidate/defender has no stale votes to remove.\n\n### Rejected[\u200b](#rejected \"Direct link to Rejected\")\n\n*   **interface**: `api.errors.society.Rejected.is`\n*   **summary**: The candidacy cannot be bestowed as the candidate was clearly rejected.\n\n### Suspended[\u200b](#suspended \"Direct link to Suspended\")\n\n*   **interface**: `api.errors.society.Suspended.is`\n*   **summary**: User is suspended.\n\n### TooEarly[\u200b](#tooearly-4 \"Direct link to TooEarly\")\n\n*   **interface**: `api.errors.society.TooEarly.is`\n*   **summary**: The candidacy cannot be pruned until a full additional intake period has passed.\n\n### Voted[\u200b](#voted \"Direct link to Voted\")\n\n*   **interface**: `api.errors.society.Voted.is`\n*   **summary**: The skeptic already voted.\n\n* * *\n\nstaking[\u200b](#staking \"Direct link to staking\")\n\n----------------------------------------------\n\n### AlreadyBonded[\u200b](#alreadybonded \"Direct link to AlreadyBonded\")\n\n*   **interface**: `api.errors.staking.AlreadyBonded.is`\n*   **summary**: Stash is already bonded.\n\n### AlreadyClaimed[\u200b](#alreadyclaimed-2 \"Direct link to AlreadyClaimed\")\n\n*   **interface**: `api.errors.staking.AlreadyClaimed.is`\n*   **summary**: Rewards for this era have already been claimed for this validator.\n\n### AlreadyPaired[\u200b](#alreadypaired \"Direct link to AlreadyPaired\")\n\n*   **interface**: `api.errors.staking.AlreadyPaired.is`\n*   **summary**: Controller is already paired.\n\n### BadState[\u200b](#badstate-1 \"Direct link to BadState\")\n\n*   **interface**: `api.errors.staking.BadState.is`\n*   **summary**: Internal state has become somehow corrupted and the operation cannot continue.\n\n### BadTarget[\u200b](#badtarget \"Direct link to BadTarget\")\n\n*   **interface**: `api.errors.staking.BadTarget.is`\n*   **summary**: A nomination target was supplied that was blocked or otherwise not a validator.\n\n### BoundNotMet[\u200b](#boundnotmet-1 \"Direct link to BoundNotMet\")\n\n*   **interface**: `api.errors.staking.BoundNotMet.is`\n*   **summary**: Some bound is not met.\n\n### CannotChillOther[\u200b](#cannotchillother \"Direct link to CannotChillOther\")\n\n*   **interface**: `api.errors.staking.CannotChillOther.is`\n*   **summary**: The user has enough bond and thus cannot be chilled forcefully by an external person.\n\n### CommissionTooLow[\u200b](#commissiontoolow \"Direct link to CommissionTooLow\")\n\n*   **interface**: `api.errors.staking.CommissionTooLow.is`\n*   **summary**: Commission is too low. Must be at least `MinCommission`.\n\n### ControllerDeprecated[\u200b](#controllerdeprecated \"Direct link to ControllerDeprecated\")\n\n*   **interface**: `api.errors.staking.ControllerDeprecated.is`\n*   **summary**: Used when attempting to use deprecated controller account logic.\n\n### DuplicateIndex[\u200b](#duplicateindex \"Direct link to DuplicateIndex\")\n\n*   **interface**: `api.errors.staking.DuplicateIndex.is`\n*   **summary**: Duplicate index.\n\n### EmptyTargets[\u200b](#emptytargets \"Direct link to EmptyTargets\")\n\n*   **interface**: `api.errors.staking.EmptyTargets.is`\n*   **summary**: Targets cannot be empty.\n\n### FundedTarget[\u200b](#fundedtarget \"Direct link to FundedTarget\")\n\n*   **interface**: `api.errors.staking.FundedTarget.is`\n*   **summary**: Attempting to target a stash that still has funds.\n\n### IncorrectHistoryDepth[\u200b](#incorrecthistorydepth \"Direct link to IncorrectHistoryDepth\")\n\n*   **interface**: `api.errors.staking.IncorrectHistoryDepth.is`\n*   **summary**: Incorrect previous history depth input provided.\n\n### IncorrectSlashingSpans[\u200b](#incorrectslashingspans \"Direct link to IncorrectSlashingSpans\")\n\n*   **interface**: `api.errors.staking.IncorrectSlashingSpans.is`\n*   **summary**: Incorrect number of slashing spans provided.\n\n### InsufficientBond[\u200b](#insufficientbond \"Direct link to InsufficientBond\")\n\n*   **interface**: `api.errors.staking.InsufficientBond.is`\n*   **summary**: Cannot have a validator or nominator role, with value less than the minimum defined by governance (see `MinValidatorBond` and `MinNominatorBond`). If unbonding is the intention, `chill` first to remove one's role as validator/nominator.\n\n### InvalidEraToReward[\u200b](#invalideratoreward \"Direct link to InvalidEraToReward\")\n\n*   **interface**: `api.errors.staking.InvalidEraToReward.is`\n*   **summary**: Invalid era to reward.\n\n### InvalidNumberOfNominations[\u200b](#invalidnumberofnominations \"Direct link to InvalidNumberOfNominations\")\n\n*   **interface**: `api.errors.staking.InvalidNumberOfNominations.is`\n*   **summary**: Invalid number of nominations.\n\n### InvalidPage[\u200b](#invalidpage \"Direct link to InvalidPage\")\n\n*   **interface**: `api.errors.staking.InvalidPage.is`\n*   **summary**: No nominators exist on this page.\n\n### InvalidSlashIndex[\u200b](#invalidslashindex \"Direct link to InvalidSlashIndex\")\n\n*   **interface**: `api.errors.staking.InvalidSlashIndex.is`\n*   **summary**: Slash record index out of bounds.\n\n### NoMoreChunks[\u200b](#nomorechunks \"Direct link to NoMoreChunks\")\n\n*   **interface**: `api.errors.staking.NoMoreChunks.is`\n*   **summary**: Can not schedule more unlock chunks.\n\n### NotController[\u200b](#notcontroller-1 \"Direct link to NotController\")\n\n*   **interface**: `api.errors.staking.NotController.is`\n*   **summary**: Not a controller account.\n\n### NotSortedAndUnique[\u200b](#notsortedandunique \"Direct link to NotSortedAndUnique\")\n\n*   **interface**: `api.errors.staking.NotSortedAndUnique.is`\n*   **summary**: Items are not sorted and unique.\n\n### NotStash[\u200b](#notstash \"Direct link to NotStash\")\n\n*   **interface**: `api.errors.staking.NotStash.is`\n*   **summary**: Not a stash account.\n\n### NoUnlockChunk[\u200b](#nounlockchunk \"Direct link to NoUnlockChunk\")\n\n*   **interface**: `api.errors.staking.NoUnlockChunk.is`\n*   **summary**: Can not rebond without unlocking chunks.\n\n### TooManyNominators[\u200b](#toomanynominators \"Direct link to TooManyNominators\")\n\n*   **interface**: `api.errors.staking.TooManyNominators.is`\n*   **summary**: There are too many nominators in the system. Governance needs to adjust the staking settings to keep things safe for the runtime.\n\n### TooManyTargets[\u200b](#toomanytargets \"Direct link to TooManyTargets\")\n\n*   **interface**: `api.errors.staking.TooManyTargets.is`\n*   **summary**: Too many nomination targets supplied.\n\n### TooManyValidators[\u200b](#toomanyvalidators \"Direct link to TooManyValidators\")\n\n*   **interface**: `api.errors.staking.TooManyValidators.is`\n*   **summary**: There are too many validator candidates in the system. Governance needs to adjust the staking settings to keep things safe for the runtime.\n\n* * *\n\nstateTrieMigration[\u200b](#statetriemigration \"Direct link to stateTrieMigration\")\n\n-------------------------------------------------------------------------------\n\n### BadChildRoot[\u200b](#badchildroot \"Direct link to BadChildRoot\")\n\n*   **interface**: `api.errors.stateTrieMigration.BadChildRoot.is`\n*   **summary**: Bad child root provided.\n\n### BadWitness[\u200b](#badwitness-4 \"Direct link to BadWitness\")\n\n*   **interface**: `api.errors.stateTrieMigration.BadWitness.is`\n*   **summary**: Bad witness data provided.\n\n### KeyTooLong[\u200b](#keytoolong \"Direct link to KeyTooLong\")\n\n*   **interface**: `api.errors.stateTrieMigration.KeyTooLong.is`\n    \n*   **summary**: A key was longer than the configured maximum.\n    \n    This means that the migration halted at the current \\[`Progress`\\] and can be resumed with a larger \\[`crate::Config::MaxKeyLen`\\] value. Retrying with the same \\[`crate::Config::MaxKeyLen`\\] value will not work. The value should only be increased to avoid a storage migration for the currently stored \\[`crate::Progress::LastKey`\\].\n    \n\n### MaxSignedLimits[\u200b](#maxsignedlimits \"Direct link to MaxSignedLimits\")\n\n*   **interface**: `api.errors.stateTrieMigration.MaxSignedLimits.is`\n*   **summary**: Max signed limits not respected.\n\n### NotEnoughFunds[\u200b](#notenoughfunds \"Direct link to NotEnoughFunds\")\n\n*   **interface**: `api.errors.stateTrieMigration.NotEnoughFunds.is`\n*   **summary**: submitter does not have enough funds.\n\n### SignedMigrationNotAllowed[\u200b](#signedmigrationnotallowed \"Direct link to SignedMigrationNotAllowed\")\n\n*   **interface**: `api.errors.stateTrieMigration.SignedMigrationNotAllowed.is`\n*   **summary**: Signed migration is not allowed because the maximum limit is not set yet.\n\n* * *\n\nsudo[\u200b](#sudo \"Direct link to sudo\")\n\n-------------------------------------\n\n### RequireSudo[\u200b](#requiresudo \"Direct link to RequireSudo\")\n\n*   **interface**: `api.errors.sudo.RequireSudo.is`\n*   **summary**: Sender must be the Sudo account.\n\n* * *\n\nsystem[\u200b](#system \"Direct link to system\")\n\n-------------------------------------------\n\n### CallFiltered[\u200b](#callfiltered \"Direct link to CallFiltered\")\n\n*   **interface**: `api.errors.system.CallFiltered.is`\n*   **summary**: The origin filter prevent the call to be dispatched.\n\n### FailedTask[\u200b](#failedtask \"Direct link to FailedTask\")\n\n*   **interface**: `api.errors.system.FailedTask.is`\n*   **summary**: The specified \\[`Task`\\] failed during execution.\n\n### FailedToExtractRuntimeVersion[\u200b](#failedtoextractruntimeversion \"Direct link to FailedToExtractRuntimeVersion\")\n\n*   **interface**: `api.errors.system.FailedToExtractRuntimeVersion.is`\n    \n*   **summary**: Failed to extract the runtime version from the new runtime.\n    \n    Either calling `Core_version` or decoding `RuntimeVersion` failed.\n    \n\n### InvalidSpecName[\u200b](#invalidspecname \"Direct link to InvalidSpecName\")\n\n*   **interface**: `api.errors.system.InvalidSpecName.is`\n*   **summary**: The name of specification does not match between the current runtime and the new runtime.\n\n### InvalidTask[\u200b](#invalidtask \"Direct link to InvalidTask\")\n\n*   **interface**: `api.errors.system.InvalidTask.is`\n*   **summary**: The specified \\[`Task`\\] is not valid.\n\n### NonDefaultComposite[\u200b](#nondefaultcomposite \"Direct link to NonDefaultComposite\")\n\n*   **interface**: `api.errors.system.NonDefaultComposite.is`\n*   **summary**: Suicide called when the account has non-default composite data.\n\n### NonZeroRefCount[\u200b](#nonzerorefcount \"Direct link to NonZeroRefCount\")\n\n*   **interface**: `api.errors.system.NonZeroRefCount.is`\n*   **summary**: There is a non-zero reference count preventing the account from being purged.\n\n### SpecVersionNeedsToIncrease[\u200b](#specversionneedstoincrease \"Direct link to SpecVersionNeedsToIncrease\")\n\n*   **interface**: `api.errors.system.SpecVersionNeedsToIncrease.is`\n*   **summary**: The specification version is not allowed to decrease between the current runtime and the new runtime.\n\n* * *\n\ntasksExample[\u200b](#tasksexample \"Direct link to tasksExample\")\n\n-------------------------------------------------------------\n\n### NotFound[\u200b](#notfound-4 \"Direct link to NotFound\")\n\n*   **interface**: `api.errors.tasksExample.NotFound.is`\n*   **summary**: The referenced task was not found.\n\n* * *\n\ntechnicalCommittee[\u200b](#technicalcommittee \"Direct link to technicalCommittee\")\n\n-------------------------------------------------------------------------------\n\n### AlreadyInitialized[\u200b](#alreadyinitialized-3 \"Direct link to AlreadyInitialized\")\n\n*   **interface**: `api.errors.technicalCommittee.AlreadyInitialized.is`\n*   **summary**: Members are already initialized!\n\n### DuplicateProposal[\u200b](#duplicateproposal-3 \"Direct link to DuplicateProposal\")\n\n*   **interface**: `api.errors.technicalCommittee.DuplicateProposal.is`\n*   **summary**: Duplicate proposals not allowed\n\n### DuplicateVote[\u200b](#duplicatevote-2 \"Direct link to DuplicateVote\")\n\n*   **interface**: `api.errors.technicalCommittee.DuplicateVote.is`\n*   **summary**: Duplicate vote ignored\n\n### NotMember[\u200b](#notmember-7 \"Direct link to NotMember\")\n\n*   **interface**: `api.errors.technicalCommittee.NotMember.is`\n*   **summary**: Account is not a member\n\n### PrimeAccountNotMember[\u200b](#primeaccountnotmember-2 \"Direct link to PrimeAccountNotMember\")\n\n*   **interface**: `api.errors.technicalCommittee.PrimeAccountNotMember.is`\n*   **summary**: Prime account is not a member\n\n### ProposalMissing[\u200b](#proposalmissing-3 \"Direct link to ProposalMissing\")\n\n*   **interface**: `api.errors.technicalCommittee.ProposalMissing.is`\n*   **summary**: Proposal must exist\n\n### TooEarly[\u200b](#tooearly-5 \"Direct link to TooEarly\")\n\n*   **interface**: `api.errors.technicalCommittee.TooEarly.is`\n*   **summary**: The close call was made too early, before the end of the voting.\n\n### TooManyProposals[\u200b](#toomanyproposals-2 \"Direct link to TooManyProposals\")\n\n*   **interface**: `api.errors.technicalCommittee.TooManyProposals.is`\n*   **summary**: There can only be a maximum of `MaxProposals` active proposals.\n\n### WrongIndex[\u200b](#wrongindex-2 \"Direct link to WrongIndex\")\n\n*   **interface**: `api.errors.technicalCommittee.WrongIndex.is`\n*   **summary**: Mismatched index\n\n### WrongProposalLength[\u200b](#wrongproposallength-2 \"Direct link to WrongProposalLength\")\n\n*   **interface**: `api.errors.technicalCommittee.WrongProposalLength.is`\n*   **summary**: The given length bound for the proposal was too low.\n\n### WrongProposalWeight[\u200b](#wrongproposalweight-2 \"Direct link to WrongProposalWeight\")\n\n*   **interface**: `api.errors.technicalCommittee.WrongProposalWeight.is`\n*   **summary**: The given weight bound for the proposal was too low.\n\n* * *\n\ntechnicalMembership[\u200b](#technicalmembership \"Direct link to technicalMembership\")\n\n----------------------------------------------------------------------------------\n\n### AlreadyMember[\u200b](#alreadymember-3 \"Direct link to AlreadyMember\")\n\n*   **interface**: `api.errors.technicalMembership.AlreadyMember.is`\n*   **summary**: Already a member.\n\n### NotMember[\u200b](#notmember-8 \"Direct link to NotMember\")\n\n*   **interface**: `api.errors.technicalMembership.NotMember.is`\n*   **summary**: Not a member.\n\n### TooManyMembers[\u200b](#toomanymembers-1 \"Direct link to TooManyMembers\")\n\n*   **interface**: `api.errors.technicalMembership.TooManyMembers.is`\n*   **summary**: Too many members.\n\n* * *\n\ntips[\u200b](#tips \"Direct link to tips\")\n\n-------------------------------------\n\n### AlreadyKnown[\u200b](#alreadyknown \"Direct link to AlreadyKnown\")\n\n*   **interface**: `api.errors.tips.AlreadyKnown.is`\n*   **summary**: The tip was already found/started.\n\n### MaxTipAmountExceeded[\u200b](#maxtipamountexceeded \"Direct link to MaxTipAmountExceeded\")\n\n*   **interface**: `api.errors.tips.MaxTipAmountExceeded.is`\n*   **summary**: The tip given was too generous.\n\n### NotFinder[\u200b](#notfinder \"Direct link to NotFinder\")\n\n*   **interface**: `api.errors.tips.NotFinder.is`\n*   **summary**: The account attempting to retract the tip is not the finder of the tip.\n\n### Premature[\u200b](#premature-1 \"Direct link to Premature\")\n\n*   **interface**: `api.errors.tips.Premature.is`\n*   **summary**: The tip cannot be claimed/closed because it's still in the countdown period.\n\n### ReasonTooBig[\u200b](#reasontoobig-1 \"Direct link to ReasonTooBig\")\n\n*   **interface**: `api.errors.tips.ReasonTooBig.is`\n*   **summary**: The reason given is just too big.\n\n### StillOpen[\u200b](#stillopen \"Direct link to StillOpen\")\n\n*   **interface**: `api.errors.tips.StillOpen.is`\n*   **summary**: The tip cannot be claimed/closed because there are not enough tippers yet.\n\n### UnknownTip[\u200b](#unknowntip \"Direct link to UnknownTip\")\n\n*   **interface**: `api.errors.tips.UnknownTip.is`\n*   **summary**: The tip hash is unknown.\n\n* * *\n\ntransactionStorage[\u200b](#transactionstorage \"Direct link to transactionStorage\")\n\n-------------------------------------------------------------------------------\n\n### BadContext[\u200b](#badcontext-1 \"Direct link to BadContext\")\n\n*   **interface**: `api.errors.transactionStorage.BadContext.is`\n*   **summary**: Attempted to call `store` outside of block execution.\n\n### DoubleCheck[\u200b](#doublecheck \"Direct link to DoubleCheck\")\n\n*   **interface**: `api.errors.transactionStorage.DoubleCheck.is`\n*   **summary**: Double proof check in the block.\n\n### EmptyTransaction[\u200b](#emptytransaction \"Direct link to EmptyTransaction\")\n\n*   **interface**: `api.errors.transactionStorage.EmptyTransaction.is`\n*   **summary**: Attempting to store empty transaction\n\n### InvalidProof[\u200b](#invalidproof-1 \"Direct link to InvalidProof\")\n\n*   **interface**: `api.errors.transactionStorage.InvalidProof.is`\n*   **summary**: Proof failed verification.\n\n### MissingProof[\u200b](#missingproof \"Direct link to MissingProof\")\n\n*   **interface**: `api.errors.transactionStorage.MissingProof.is`\n*   **summary**: Missing storage proof.\n\n### MissingStateData[\u200b](#missingstatedata \"Direct link to MissingStateData\")\n\n*   **interface**: `api.errors.transactionStorage.MissingStateData.is`\n*   **summary**: Unable to verify proof becasue state data is missing.\n\n### NotConfigured[\u200b](#notconfigured-2 \"Direct link to NotConfigured\")\n\n*   **interface**: `api.errors.transactionStorage.NotConfigured.is`\n*   **summary**: Invalid configuration.\n\n### ProofNotChecked[\u200b](#proofnotchecked \"Direct link to ProofNotChecked\")\n\n*   **interface**: `api.errors.transactionStorage.ProofNotChecked.is`\n*   **summary**: Storage proof was not checked in the block.\n\n### RenewedNotFound[\u200b](#renewednotfound \"Direct link to RenewedNotFound\")\n\n*   **interface**: `api.errors.transactionStorage.RenewedNotFound.is`\n*   **summary**: Renewed extrinsic is not found.\n\n### TooManyTransactions[\u200b](#toomanytransactions \"Direct link to TooManyTransactions\")\n\n*   **interface**: `api.errors.transactionStorage.TooManyTransactions.is`\n*   **summary**: Too many transactions in the block.\n\n### TransactionTooLarge[\u200b](#transactiontoolarge \"Direct link to TransactionTooLarge\")\n\n*   **interface**: `api.errors.transactionStorage.TransactionTooLarge.is`\n*   **summary**: Transaction is too large.\n\n### UnexpectedProof[\u200b](#unexpectedproof \"Direct link to UnexpectedProof\")\n\n*   **interface**: `api.errors.transactionStorage.UnexpectedProof.is`\n*   **summary**: Proof was not expected in this block.\n\n* * *\n\ntreasury[\u200b](#treasury \"Direct link to treasury\")\n\n-------------------------------------------------\n\n### AlreadyAttempted[\u200b](#alreadyattempted \"Direct link to AlreadyAttempted\")\n\n*   **interface**: `api.errors.treasury.AlreadyAttempted.is`\n*   **summary**: The payment has already been attempted.\n\n### EarlyPayout[\u200b](#earlypayout \"Direct link to EarlyPayout\")\n\n*   **interface**: `api.errors.treasury.EarlyPayout.is`\n*   **summary**: The spend is not yet eligible for payout.\n\n### FailedToConvertBalance[\u200b](#failedtoconvertbalance \"Direct link to FailedToConvertBalance\")\n\n*   **interface**: `api.errors.treasury.FailedToConvertBalance.is`\n*   **summary**: The balance of the asset kind is not convertible to the balance of the native asset.\n\n### Inconclusive[\u200b](#inconclusive-1 \"Direct link to Inconclusive\")\n\n*   **interface**: `api.errors.treasury.Inconclusive.is`\n*   **summary**: The payment has neither failed nor succeeded yet.\n\n### InsufficientPermission[\u200b](#insufficientpermission \"Direct link to InsufficientPermission\")\n\n*   **interface**: `api.errors.treasury.InsufficientPermission.is`\n*   **summary**: The spend origin is valid but the amount it is allowed to spend is lower than the amount to be spent.\n\n### InsufficientProposersBalance[\u200b](#insufficientproposersbalance-1 \"Direct link to InsufficientProposersBalance\")\n\n*   **interface**: `api.errors.treasury.InsufficientProposersBalance.is`\n*   **summary**: Proposer's balance is too low.\n\n### InvalidIndex[\u200b](#invalidindex-2 \"Direct link to InvalidIndex\")\n\n*   **interface**: `api.errors.treasury.InvalidIndex.is`\n*   **summary**: No proposal, bounty or spend at that index.\n\n### NotAttempted[\u200b](#notattempted \"Direct link to NotAttempted\")\n\n*   **interface**: `api.errors.treasury.NotAttempted.is`\n*   **summary**: The payout was not yet attempted/claimed.\n\n### PayoutError[\u200b](#payouterror \"Direct link to PayoutError\")\n\n*   **interface**: `api.errors.treasury.PayoutError.is`\n*   **summary**: There was some issue with the mechanism of payment.\n\n### ProposalNotApproved[\u200b](#proposalnotapproved \"Direct link to ProposalNotApproved\")\n\n*   **interface**: `api.errors.treasury.ProposalNotApproved.is`\n*   **summary**: Proposal has not been approved.\n\n### SpendExpired[\u200b](#spendexpired \"Direct link to SpendExpired\")\n\n*   **interface**: `api.errors.treasury.SpendExpired.is`\n*   **summary**: The spend has expired and cannot be claimed.\n\n### TooManyApprovals[\u200b](#toomanyapprovals \"Direct link to TooManyApprovals\")\n\n*   **interface**: `api.errors.treasury.TooManyApprovals.is`\n*   **summary**: Too many approvals in the queue.\n\n* * *\n\ntxPause[\u200b](#txpause \"Direct link to txPause\")\n\n----------------------------------------------\n\n### IsPaused[\u200b](#ispaused \"Direct link to IsPaused\")\n\n*   **interface**: `api.errors.txPause.IsPaused.is`\n*   **summary**: The call is paused.\n\n### IsUnpaused[\u200b](#isunpaused \"Direct link to IsUnpaused\")\n\n*   **interface**: `api.errors.txPause.IsUnpaused.is`\n*   **summary**: The call is unpaused.\n\n### NotFound[\u200b](#notfound-5 \"Direct link to NotFound\")\n\n*   **interface**: `api.errors.txPause.NotFound.is`\n\n### Unpausable[\u200b](#unpausable \"Direct link to Unpausable\")\n\n*   **interface**: `api.errors.txPause.Unpausable.is`\n*   **summary**: The call is whitelisted and cannot be paused.\n\n* * *\n\nuniques[\u200b](#uniques \"Direct link to uniques\")\n\n----------------------------------------------\n\n### AlreadyExists[\u200b](#alreadyexists-4 \"Direct link to AlreadyExists\")\n\n*   **interface**: `api.errors.uniques.AlreadyExists.is`\n*   **summary**: The item ID has already been used for an item.\n\n### BadWitness[\u200b](#badwitness-5 \"Direct link to BadWitness\")\n\n*   **interface**: `api.errors.uniques.BadWitness.is`\n*   **summary**: Invalid witness data given.\n\n### BidTooLow[\u200b](#bidtoolow-2 \"Direct link to BidTooLow\")\n\n*   **interface**: `api.errors.uniques.BidTooLow.is`\n*   **summary**: The provided bid is too low.\n\n### Frozen[\u200b](#frozen-2 \"Direct link to Frozen\")\n\n*   **interface**: `api.errors.uniques.Frozen.is`\n*   **summary**: The item or collection is frozen.\n\n### InUse[\u200b](#inuse-3 \"Direct link to InUse\")\n\n*   **interface**: `api.errors.uniques.InUse.is`\n*   **summary**: The item ID is already taken.\n\n### Locked[\u200b](#locked \"Direct link to Locked\")\n\n*   **interface**: `api.errors.uniques.Locked.is`\n*   **summary**: The item is locked.\n\n### MaxSupplyAlreadySet[\u200b](#maxsupplyalreadyset \"Direct link to MaxSupplyAlreadySet\")\n\n*   **interface**: `api.errors.uniques.MaxSupplyAlreadySet.is`\n*   **summary**: The max supply has already been set.\n\n### MaxSupplyReached[\u200b](#maxsupplyreached-1 \"Direct link to MaxSupplyReached\")\n\n*   **interface**: `api.errors.uniques.MaxSupplyReached.is`\n*   **summary**: All items have been minted.\n\n### MaxSupplyTooSmall[\u200b](#maxsupplytoosmall-1 \"Direct link to MaxSupplyTooSmall\")\n\n*   **interface**: `api.errors.uniques.MaxSupplyTooSmall.is`\n*   **summary**: The provided max supply is less to the amount of items a collection already has.\n\n### NoDelegate[\u200b](#nodelegate \"Direct link to NoDelegate\")\n\n*   **interface**: `api.errors.uniques.NoDelegate.is`\n*   **summary**: There is no delegate approved.\n\n### NoPermission[\u200b](#nopermission-11 \"Direct link to NoPermission\")\n\n*   **interface**: `api.errors.uniques.NoPermission.is`\n*   **summary**: The signing account has no permission to do the operation.\n\n### NotForSale[\u200b](#notforsale-1 \"Direct link to NotForSale\")\n\n*   **interface**: `api.errors.uniques.NotForSale.is`\n*   **summary**: Item is not for sale.\n\n### Unaccepted[\u200b](#unaccepted-1 \"Direct link to Unaccepted\")\n\n*   **interface**: `api.errors.uniques.Unaccepted.is`\n*   **summary**: The named owner has not signed ownership of the collection is acceptable.\n\n### Unapproved[\u200b](#unapproved-3 \"Direct link to Unapproved\")\n\n*   **interface**: `api.errors.uniques.Unapproved.is`\n*   **summary**: No approval exists that would allow the transfer.\n\n### UnknownCollection[\u200b](#unknowncollection-1 \"Direct link to UnknownCollection\")\n\n*   **interface**: `api.errors.uniques.UnknownCollection.is`\n*   **summary**: The given item ID is unknown.\n\n### UnknownItem[\u200b](#unknownitem-1 \"Direct link to UnknownItem\")\n\n*   **interface**: `api.errors.uniques.UnknownItem.is`\n*   **summary**: The given item ID is unknown.\n\n### WrongDelegate[\u200b](#wrongdelegate-1 \"Direct link to WrongDelegate\")\n\n*   **interface**: `api.errors.uniques.WrongDelegate.is`\n*   **summary**: The delegate turned out to be different to what was expected.\n\n### WrongOwner[\u200b](#wrongowner-1 \"Direct link to WrongOwner\")\n\n*   **interface**: `api.errors.uniques.WrongOwner.is`\n*   **summary**: The owner turned out to be different to what was expected.\n\n* * *\n\nutility[\u200b](#utility \"Direct link to utility\")\n\n----------------------------------------------\n\n### TooManyCalls[\u200b](#toomanycalls-1 \"Direct link to TooManyCalls\")\n\n*   **interface**: `api.errors.utility.TooManyCalls.is`\n*   **summary**: Too many calls batched.\n\n* * *\n\nvesting[\u200b](#vesting \"Direct link to vesting\")\n\n----------------------------------------------\n\n### AmountLow[\u200b](#amountlow \"Direct link to AmountLow\")\n\n*   **interface**: `api.errors.vesting.AmountLow.is`\n*   **summary**: Amount being transferred is too low to create a vesting schedule.\n\n### AtMaxVestingSchedules[\u200b](#atmaxvestingschedules \"Direct link to AtMaxVestingSchedules\")\n\n*   **interface**: `api.errors.vesting.AtMaxVestingSchedules.is`\n*   **summary**: The account already has `MaxVestingSchedules` count of schedules and thus cannot add another one. Consider merging existing schedules in order to add another.\n\n### InvalidScheduleParams[\u200b](#invalidscheduleparams \"Direct link to InvalidScheduleParams\")\n\n*   **interface**: `api.errors.vesting.InvalidScheduleParams.is`\n*   **summary**: Failed to create a new schedule because some parameter was invalid.\n\n### NotVesting[\u200b](#notvesting \"Direct link to NotVesting\")\n\n*   **interface**: `api.errors.vesting.NotVesting.is`\n*   **summary**: The account given is not vesting.\n\n### ScheduleIndexOutOfBounds[\u200b](#scheduleindexoutofbounds \"Direct link to ScheduleIndexOutOfBounds\")\n\n*   **interface**: `api.errors.vesting.ScheduleIndexOutOfBounds.is`\n*   **summary**: An index was out of bounds of the vesting schedules.\n\n* * *\n\nvoterList[\u200b](#voterlist \"Direct link to voterList\")\n\n----------------------------------------------------\n\n### List[\u200b](#list \"Direct link to List\")\n\n*   **interface**: `api.errors.voterList.List.is`\n*   **summary**: A error in the list interface implementation.\n\n* * *\n\nwhitelist[\u200b](#whitelist \"Direct link to whitelist\")\n\n----------------------------------------------------\n\n### CallAlreadyWhitelisted[\u200b](#callalreadywhitelisted \"Direct link to CallAlreadyWhitelisted\")\n\n*   **interface**: `api.errors.whitelist.CallAlreadyWhitelisted.is`\n*   **summary**: The call was already whitelisted; No-Op.\n\n### CallIsNotWhitelisted[\u200b](#callisnotwhitelisted \"Direct link to CallIsNotWhitelisted\")\n\n*   **interface**: `api.errors.whitelist.CallIsNotWhitelisted.is`\n*   **summary**: The call was not whitelisted.\n\n### InvalidCallWeightWitness[\u200b](#invalidcallweightwitness \"Direct link to InvalidCallWeightWitness\")\n\n*   **interface**: `api.errors.whitelist.InvalidCallWeightWitness.is`\n*   **summary**: The weight of the decoded call was higher than the witness.\n\n### UnavailablePreImage[\u200b](#unavailablepreimage \"Direct link to UnavailablePreImage\")\n\n*   **interface**: `api.errors.whitelist.UnavailablePreImage.is`\n*   **summary**: The preimage of the call hash could not be loaded.\n\n### UndecodableCall[\u200b](#undecodablecall \"Direct link to UndecodableCall\")\n\n*   **interface**: `api.errors.whitelist.UndecodableCall.is`\n*   **summary**: The call could not be decoded.\n\n[Edit this page](https://github.com/polkadot-js/docs/edit/master/docs/substrate/errors.md)\n\n[Previous\\\n\\\nEvents](/docs/substrate/events)\n[Next\\\n\\\nOverview](/docs/polkadot)\n\n*   [alliance](#alliance)\n    *   [AccountNonGrata](#accountnongrata)\n        \n    *   [AllianceAlreadyInitialized](#alliancealreadyinitialized)\n        \n    *   [AllianceNotYetInitialized](#alliancenotyetinitialized)\n        \n    *   [AlreadyElevated](#alreadyelevated)\n        \n    *   [AlreadyMember](#alreadymember)\n        \n    *   [AlreadyRetiring](#alreadyretiring)\n        \n    *   [AlreadyUnscrupulous](#alreadyunscrupulous)\n        \n    *   [BadWitness](#badwitness)\n        \n    *   [FellowsMissing](#fellowsmissing)\n        \n    *   [InsufficientFunds](#insufficientfunds)\n        \n    *   [MissingAnnouncement](#missingannouncement)\n        \n    *   [MissingProposalHash](#missingproposalhash)\n        \n    *   [NotAlly](#notally)\n        \n    *   [NotListedAsUnscrupulous](#notlistedasunscrupulous)\n        \n    *   [NotMember](#notmember)\n        \n    *   [NoVotingRights](#novotingrights)\n        \n    *   [RetirementNoticeNotGiven](#retirementnoticenotgiven)\n        \n    *   [RetirementPeriodNotPassed](#retirementperiodnotpassed)\n        \n    *   [TooLongWebsiteUrl](#toolongwebsiteurl)\n        \n    *   [TooManyAnnouncements](#toomanyannouncements)\n        \n    *   [TooManyMembers](#toomanymembers)\n        \n    *   [TooManyUnscrupulousItems](#toomanyunscrupulousitems)\n        \n    *   [WithoutGoodIdentityJudgement](#withoutgoodidentityjudgement)\n        \n    *   [WithoutRequiredIdentityFields](#withoutrequiredidentityfields)\n        \n*   [allianceMotion](#alliancemotion)\n    *   [AlreadyInitialized](#alreadyinitialized)\n        \n    *   [DuplicateProposal](#duplicateproposal)\n        \n    *   [DuplicateVote](#duplicatevote)\n        \n    *   [NotMember](#notmember-1)\n        \n    *   [PrimeAccountNotMember](#primeaccountnotmember)\n        \n    *   [ProposalMissing](#proposalmissing)\n        \n    *   [TooEarly](#tooearly)\n        \n    *   [TooManyProposals](#toomanyproposals)\n        \n    *   [WrongIndex](#wrongindex)\n        \n    *   [WrongProposalLength](#wrongproposallength)\n        \n    *   [WrongProposalWeight](#wrongproposalweight)\n        \n*   [assetConversion](#assetconversion)\n    *   [AmountOneLessThanMinimal](#amountonelessthanminimal)\n        \n    *   [AmountOutTooHigh](#amountouttoohigh)\n        \n    *   [AmountTwoLessThanMinimal](#amounttwolessthanminimal)\n        \n    *   [AssetOneDepositDidNotMeetMinimum](#assetonedepositdidnotmeetminimum)\n        \n    *   [AssetOneWithdrawalDidNotMeetMinimum](#assetonewithdrawaldidnotmeetminimum)\n        \n    *   [AssetTwoDepositDidNotMeetMinimum](#assettwodepositdidnotmeetminimum)\n        \n    *   [AssetTwoWithdrawalDidNotMeetMinimum](#assettwowithdrawaldidnotmeetminimum)\n        \n    *   [CorrespondenceError](#correspondenceerror)\n        \n    *   [EqualAssets](#equalassets)\n        \n    *   [IncorrectPoolAssetId](#incorrectpoolassetid)\n        \n    *   [InsufficientLiquidity](#insufficientliquidity)\n        \n    *   [InsufficientLiquidityMinted](#insufficientliquidityminted)\n        \n    *   [InvalidPath](#invalidpath)\n        \n    *   [NonUniquePath](#nonuniquepath)\n        \n    *   [OptimalAmountLessThanDesired](#optimalamountlessthandesired)\n        \n    *   [Overflow](#overflow)\n        \n    *   [PathError](#patherror)\n        \n    *   [PoolExists](#poolexists)\n        \n    *   [PoolMustContainNativeCurrency](#poolmustcontainnativecurrency)\n        \n    *   [PoolNotFound](#poolnotfound)\n        \n    *   [ProvidedMaximumNotSufficientForSwap](#providedmaximumnotsufficientforswap)\n        \n    *   [ProvidedMinimumNotSufficientForSwap](#providedminimumnotsufficientforswap)\n        \n    *   [ReserveLeftLessThanMinimal](#reserveleftlessthanminimal)\n        \n    *   [UnsupportedAsset](#unsupportedasset)\n        \n    *   [WrongDesiredAmount](#wrongdesiredamount)\n        \n    *   [ZeroAmount](#zeroamount)\n        \n    *   [ZeroLiquidity](#zeroliquidity)\n        \n*   [assetRate](#assetrate)\n    *   [AlreadyExists](#alreadyexists)\n        \n    *   [UnknownAssetKind](#unknownassetkind)\n        \n*   [assets](#assets)\n    *   [AlreadyExists](#alreadyexists-1)\n        \n    *   [AssetNotLive](#assetnotlive)\n        \n    *   [BadMetadata](#badmetadata)\n        \n    *   [BadWitness](#badwitness-1)\n        \n    *   [BalanceLow](#balancelow)\n        \n    *   [CallbackFailed](#callbackfailed)\n        \n    *   [Frozen](#frozen)\n        \n    *   [IncorrectStatus](#incorrectstatus)\n        \n    *   [InUse](#inuse)\n        \n    *   [LiveAsset](#liveasset)\n        \n    *   [MinBalanceZero](#minbalancezero)\n        \n    *   [NoAccount](#noaccount)\n        \n    *   [NoDeposit](#nodeposit)\n        \n    *   [NoPermission](#nopermission)\n        \n    *   [NotFrozen](#notfrozen)\n        \n    *   [Unapproved](#unapproved)\n        \n    *   [UnavailableConsumer](#unavailableconsumer)\n        \n    *   [Unknown](#unknown)\n        \n    *   [WouldBurn](#wouldburn)\n        \n    *   [WouldDie](#woulddie)\n        \n*   [babe](#babe)\n    *   [DuplicateOffenceReport](#duplicateoffencereport)\n        \n    *   [InvalidConfiguration](#invalidconfiguration)\n        \n    *   [InvalidEquivocationProof](#invalidequivocationproof)\n        \n    *   [InvalidKeyOwnershipProof](#invalidkeyownershipproof)\n        \n*   [balances](#balances)\n    *   [DeadAccount](#deadaccount)\n        \n    *   [ExistentialDeposit](#existentialdeposit)\n        \n    *   [ExistingVestingSchedule](#existingvestingschedule)\n        \n    *   [Expendability](#expendability)\n        \n    *   [InsufficientBalance](#insufficientbalance)\n        \n    *   [LiquidityRestrictions](#liquidityrestrictions)\n        \n    *   [TooManyFreezes](#toomanyfreezes)\n        \n    *   [TooManyHolds](#toomanyholds)\n        \n    *   [TooManyReserves](#toomanyreserves)\n        \n    *   [VestingBalance](#vestingbalance)\n        \n*   [bounties](#bounties)\n    *   [HasActiveChildBounty](#hasactivechildbounty)\n        \n    *   [InsufficientProposersBalance](#insufficientproposersbalance)\n        \n    *   [InvalidFee](#invalidfee)\n        \n    *   [InvalidIndex](#invalidindex)\n        \n    *   [InvalidValue](#invalidvalue)\n        \n    *   [PendingPayout](#pendingpayout)\n        \n    *   [Premature](#premature)\n        \n    *   [ReasonTooBig](#reasontoobig)\n        \n    *   [RequireCurator](#requirecurator)\n        \n    *   [TooManyQueued](#toomanyqueued)\n        \n    *   [UnexpectedStatus](#unexpectedstatus)\n        \n*   [broker](#broker)\n    *   [AlreadyExpired](#alreadyexpired)\n        \n    *   [CompletePivot](#completepivot)\n        \n    *   [CorruptWorkplan](#corruptworkplan)\n        \n    *   [ExteriorPivot](#exteriorpivot)\n        \n    *   [IncompleteAssignment](#incompleteassignment)\n        \n    *   [InvalidConfig](#invalidconfig)\n        \n    *   [NoHistory](#nohistory)\n        \n    *   [NoSales](#nosales)\n        \n    *   [NotAllowed](#notallowed)\n        \n    *   [NothingToDo](#nothingtodo)\n        \n    *   [NotOwner](#notowner)\n        \n    *   [Overpriced](#overpriced)\n        \n    *   [PivotTooEarly](#pivottooearly)\n        \n    *   [PivotTooLate](#pivottoolate)\n        \n    *   [SoldOut](#soldout)\n        \n    *   [StillValid](#stillvalid)\n        \n    *   [TooEarly](#tooearly-1)\n        \n    *   [TooManyLeases](#toomanyleases)\n        \n    *   [TooManyReservations](#toomanyreservations)\n        \n    *   [Unavailable](#unavailable)\n        \n    *   [Uninitialized](#uninitialized)\n        \n    *   [UnknownContribution](#unknowncontribution)\n        \n    *   [UnknownRegion](#unknownregion)\n        \n    *   [UnknownRenewal](#unknownrenewal)\n        \n    *   [UnknownReservation](#unknownreservation)\n        \n    *   [UnknownRevenue](#unknownrevenue)\n        \n    *   [VoidPivot](#voidpivot)\n        \n    *   [WrongTime](#wrongtime)\n        \n*   [childBounties](#childbounties)\n    *   [InsufficientBountyBalance](#insufficientbountybalance)\n        \n    *   [ParentBountyNotActive](#parentbountynotactive)\n        \n    *   [TooManyChildBounties](#toomanychildbounties)\n        \n*   [contracts](#contracts)\n    *   [CannotAddSelfAsDelegateDependency](#cannotaddselfasdelegatedependency)\n        \n    *   [CodeInfoNotFound](#codeinfonotfound)\n        \n    *   [CodeInUse](#codeinuse)\n        \n    *   [CodeNotFound](#codenotfound)\n        \n    *   [CodeRejected](#coderejected)\n        \n    *   [CodeTooLarge](#codetoolarge)\n        \n    *   [ContractNotFound](#contractnotfound)\n        \n    *   [ContractReverted](#contractreverted)\n        \n    *   [ContractTrapped](#contracttrapped)\n        \n    *   [DecodingFailed](#decodingfailed)\n        \n    *   [DelegateDependencyAlreadyExists](#delegatedependencyalreadyexists)\n        \n    *   [DelegateDependencyNotFound](#delegatedependencynotfound)\n        \n    *   [DuplicateContract](#duplicatecontract)\n        \n    *   [Indeterministic](#indeterministic)\n        \n    *   [InputForwarded](#inputforwarded)\n        \n    *   [InvalidCallFlags](#invalidcallflags)\n        \n    *   [InvalidSchedule](#invalidschedule)\n        \n    *   [MaxCallDepthReached](#maxcalldepthreached)\n        \n    *   [MaxDelegateDependenciesReached](#maxdelegatedependenciesreached)\n        \n    *   [MigrationInProgress](#migrationinprogress)\n        \n    *   [NoChainExtension](#nochainextension)\n        \n    *   [NoMigrationPerformed](#nomigrationperformed)\n        \n    *   [OutOfBounds](#outofbounds)\n        \n    *   [OutOfGas](#outofgas)\n        \n    *   [OutputBufferTooSmall](#outputbuffertoosmall)\n        \n    *   [RandomSubjectTooLong](#randomsubjecttoolong)\n        \n    *   [ReentranceDenied](#reentrancedenied)\n        \n    *   [StorageDepositLimitExhausted](#storagedepositlimitexhausted)\n        \n    *   [StorageDepositNotEnoughFunds](#storagedepositnotenoughfunds)\n        \n    *   [TerminatedInConstructor](#terminatedinconstructor)\n        \n    *   [TerminatedWhileReentrant](#terminatedwhilereentrant)\n        \n    *   [TooManyTopics](#toomanytopics)\n        \n    *   [TransferFailed](#transferfailed)\n        \n    *   [ValueTooLarge](#valuetoolarge)\n        \n    *   [XCMDecodeFailed](#xcmdecodefailed)\n        \n*   [convictionVoting](#convictionvoting)\n    *   [AlreadyDelegating](#alreadydelegating)\n        \n    *   [AlreadyVoting](#alreadyvoting)\n        \n    *   [BadClass](#badclass)\n        \n    *   [ClassNeeded](#classneeded)\n        \n    *   [InsufficientFunds](#insufficientfunds-1)\n        \n    *   [MaxVotesReached](#maxvotesreached)\n        \n    *   [Nonsense](#nonsense)\n        \n    *   [NoPermission](#nopermission-1)\n        \n    *   [NoPermissionYet](#nopermissionyet)\n        \n    *   [NotDelegating](#notdelegating)\n        \n    *   [NotOngoing](#notongoing)\n        \n    *   [NotVoter](#notvoter)\n        \n*   [coreFellowship](#corefellowship)\n    *   [AlreadyInducted](#alreadyinducted)\n        \n    *   [InvalidRank](#invalidrank)\n        \n    *   [NoPermission](#nopermission-2)\n        \n    *   [NothingDoing](#nothingdoing)\n        \n    *   [NotTracked](#nottracked)\n        \n    *   [Ranked](#ranked)\n        \n    *   [TooSoon](#toosoon)\n        \n    *   [UnexpectedRank](#unexpectedrank)\n        \n    *   [Unranked](#unranked)\n        \n*   [council](#council)\n    *   [AlreadyInitialized](#alreadyinitialized-1)\n        \n    *   [DuplicateProposal](#duplicateproposal-1)\n        \n    *   [DuplicateVote](#duplicatevote-1)\n        \n    *   [NotMember](#notmember-2)\n        \n    *   [PrimeAccountNotMember](#primeaccountnotmember-1)\n        \n    *   [ProposalMissing](#proposalmissing-1)\n        \n    *   [TooEarly](#tooearly-2)\n        \n    *   [TooManyProposals](#toomanyproposals-1)\n        \n    *   [WrongIndex](#wrongindex-1)\n        \n    *   [WrongProposalLength](#wrongproposallength-1)\n        \n    *   [WrongProposalWeight](#wrongproposalweight-1)\n        \n*   [democracy](#democracy)\n    *   [AlreadyCanceled](#alreadycanceled)\n        \n    *   [AlreadyDelegating](#alreadydelegating-1)\n        \n    *   [AlreadyVetoed](#alreadyvetoed)\n        \n    *   [DuplicateProposal](#duplicateproposal-2)\n        \n    *   [InstantNotAllowed](#instantnotallowed)\n        \n    *   [InsufficientFunds](#insufficientfunds-2)\n        \n    *   [InvalidHash](#invalidhash)\n        \n    *   [MaxVotesReached](#maxvotesreached-1)\n        \n    *   [NoneWaiting](#nonewaiting)\n        \n    *   [Nonsense](#nonsense-1)\n        \n    *   [NoPermission](#nopermission-3)\n        \n    *   [NoProposal](#noproposal)\n        \n    *   [NotDelegating](#notdelegating-1)\n        \n    *   [NotSimpleMajority](#notsimplemajority)\n        \n    *   [NotVoter](#notvoter-1)\n        \n    *   [PreimageNotExist](#preimagenotexist)\n        \n    *   [ProposalBlacklisted](#proposalblacklisted)\n        \n    *   [ProposalMissing](#proposalmissing-2)\n        \n    *   [ReferendumInvalid](#referenduminvalid)\n        \n    *   [TooMany](#toomany)\n        \n    *   [ValueLow](#valuelow)\n        \n    *   [VotesExist](#votesexist)\n        \n    *   [VotingPeriodLow](#votingperiodlow)\n        \n    *   [WrongUpperBound](#wrongupperbound)\n        \n*   [electionProviderMultiPhase](#electionprovidermultiphase)\n    *   [BoundNotMet](#boundnotmet)\n        \n    *   [CallNotAllowed](#callnotallowed)\n        \n    *   [FallbackFailed](#fallbackfailed)\n        \n    *   [InvalidSubmissionIndex](#invalidsubmissionindex)\n        \n    *   [MissingSnapshotMetadata](#missingsnapshotmetadata)\n        \n    *   [OcwCallWrongEra](#ocwcallwrongera)\n        \n    *   [PreDispatchEarlySubmission](#predispatchearlysubmission)\n        \n    *   [PreDispatchWeakSubmission](#predispatchweaksubmission)\n        \n    *   [PreDispatchWrongWinnerCount](#predispatchwrongwinnercount)\n        \n    *   [SignedCannotPayDeposit](#signedcannotpaydeposit)\n        \n    *   [SignedInvalidWitness](#signedinvalidwitness)\n        \n    *   [SignedQueueFull](#signedqueuefull)\n        \n    *   [SignedTooMuchWeight](#signedtoomuchweight)\n        \n    *   [TooManyWinners](#toomanywinners)\n        \n*   [elections](#elections)\n    *   [DuplicatedCandidate](#duplicatedcandidate)\n        \n    *   [InsufficientCandidateFunds](#insufficientcandidatefunds)\n        \n    *   [InvalidRenouncing](#invalidrenouncing)\n        \n    *   [InvalidReplacement](#invalidreplacement)\n        \n    *   [InvalidVoteCount](#invalidvotecount)\n        \n    *   [InvalidWitnessData](#invalidwitnessdata)\n        \n    *   [LowBalance](#lowbalance)\n        \n    *   [MaximumVotesExceeded](#maximumvotesexceeded)\n        \n    *   [MemberSubmit](#membersubmit)\n        \n    *   [MustBeVoter](#mustbevoter)\n        \n    *   [NotMember](#notmember-3)\n        \n    *   [NoVotes](#novotes)\n        \n    *   [RunnerUpSubmit](#runnerupsubmit)\n        \n    *   [TooManyCandidates](#toomanycandidates)\n        \n    *   [TooManyVotes](#toomanyvotes)\n        \n    *   [UnableToPayBond](#unabletopaybond)\n        \n    *   [UnableToVote](#unabletovote)\n        \n*   [fastUnstake](#fastunstake)\n    *   [AlreadyHead](#alreadyhead)\n        \n    *   [AlreadyQueued](#alreadyqueued)\n        \n    *   [CallNotAllowed](#callnotallowed-1)\n        \n    *   [NotController](#notcontroller)\n        \n    *   [NotFullyBonded](#notfullybonded)\n        \n    *   [NotQueued](#notqueued)\n        \n*   [glutton](#glutton)\n    *   [AlreadyInitialized](#alreadyinitialized-2)\n        \n    *   [InsaneLimit](#insanelimit)\n        \n*   [grandpa](#grandpa)\n    *   [ChangePending](#changepending)\n        \n    *   [DuplicateOffenceReport](#duplicateoffencereport-1)\n        \n    *   [InvalidEquivocationProof](#invalidequivocationproof-1)\n        \n    *   [InvalidKeyOwnershipProof](#invalidkeyownershipproof-1)\n        \n    *   [PauseFailed](#pausefailed)\n        \n    *   [ResumeFailed](#resumefailed)\n        \n    *   [TooSoon](#toosoon-1)\n        \n*   [identity](#identity)\n    *   [AlreadyClaimed](#alreadyclaimed)\n        \n    *   [EmptyIndex](#emptyindex)\n        \n    *   [FeeChanged](#feechanged)\n        \n    *   [InvalidIndex](#invalidindex-1)\n        \n    *   [InvalidJudgement](#invalidjudgement)\n        \n    *   [InvalidTarget](#invalidtarget)\n        \n    *   [JudgementForDifferentIdentity](#judgementfordifferentidentity)\n        \n    *   [JudgementGiven](#judgementgiven)\n        \n    *   [JudgementPaymentFailed](#judgementpaymentfailed)\n        \n    *   [NoIdentity](#noidentity)\n        \n    *   [NotFound](#notfound)\n        \n    *   [NotNamed](#notnamed)\n        \n    *   [NotOwned](#notowned)\n        \n    *   [NotSub](#notsub)\n        \n    *   [StickyJudgement](#stickyjudgement)\n        \n    *   [TooManyRegistrars](#toomanyregistrars)\n        \n    *   [TooManySubAccounts](#toomanysubaccounts)\n        \n*   [imOnline](#imonline)\n    *   [DuplicatedHeartbeat](#duplicatedheartbeat)\n        \n    *   [InvalidKey](#invalidkey)\n        \n*   [indices](#indices)\n    *   [InUse](#inuse-1)\n        \n    *   [NotAssigned](#notassigned)\n        \n    *   [NotOwner](#notowner-1)\n        \n    *   [NotTransfer](#nottransfer)\n        \n    *   [Permanent](#permanent)\n        \n*   [lottery](#lottery)\n    *   [AlreadyEnded](#alreadyended)\n        \n    *   [AlreadyParticipating](#alreadyparticipating)\n        \n    *   [EncodingFailed](#encodingfailed)\n        \n    *   [InProgress](#inprogress)\n        \n    *   [InvalidCall](#invalidcall)\n        \n    *   [NotConfigured](#notconfigured)\n        \n    *   [TooManyCalls](#toomanycalls)\n        \n*   [messageQueue](#messagequeue)\n    *   [AlreadyProcessed](#alreadyprocessed)\n        \n    *   [InsufficientWeight](#insufficientweight)\n        \n    *   [NoMessage](#nomessage)\n        \n    *   [NoPage](#nopage)\n        \n    *   [NotReapable](#notreapable)\n        \n    *   [Queued](#queued)\n        \n    *   [QueuePaused](#queuepaused)\n        \n    *   [RecursiveDisallowed](#recursivedisallowed)\n        \n    *   [TemporarilyUnprocessable](#temporarilyunprocessable)\n        \n*   [multisig](#multisig)\n    *   [AlreadyApproved](#alreadyapproved)\n        \n    *   [AlreadyStored](#alreadystored)\n        \n    *   [MaxWeightTooLow](#maxweighttoolow)\n        \n    *   [MinimumThreshold](#minimumthreshold)\n        \n    *   [NoApprovalsNeeded](#noapprovalsneeded)\n        \n    *   [NotFound](#notfound-1)\n        \n    *   [NoTimepoint](#notimepoint)\n        \n    *   [NotOwner](#notowner-2)\n        \n    *   [SenderInSignatories](#senderinsignatories)\n        \n    *   [SignatoriesOutOfOrder](#signatoriesoutoforder)\n        \n    *   [TooFewSignatories](#toofewsignatories)\n        \n    *   [TooManySignatories](#toomanysignatories)\n        \n    *   [UnexpectedTimepoint](#unexpectedtimepoint)\n        \n    *   [WrongTimepoint](#wrongtimepoint)\n        \n*   [nftFractionalization](#nftfractionalization)\n    *   [IncorrectAssetId](#incorrectassetid)\n        \n    *   [NftNotFound](#nftnotfound)\n        \n    *   [NftNotFractionalized](#nftnotfractionalized)\n        \n    *   [NoPermission](#nopermission-4)\n        \n*   [nfts](#nfts)\n    *   [AlreadyClaimed](#alreadyclaimed-1)\n        \n    *   [AlreadyExists](#alreadyexists-2)\n        \n    *   [ApprovalExpired](#approvalexpired)\n        \n    *   [AttributeNotFound](#attributenotfound)\n        \n    *   [BadWitness](#badwitness-2)\n        \n    *   [BidTooLow](#bidtoolow)\n        \n    *   [CollectionIdInUse](#collectionidinuse)\n        \n    *   [CollectionNotEmpty](#collectionnotempty)\n        \n    *   [DeadlineExpired](#deadlineexpired)\n        \n    *   [InconsistentItemConfig](#inconsistentitemconfig)\n        \n    *   [IncorrectData](#incorrectdata)\n        \n    *   [IncorrectMetadata](#incorrectmetadata)\n        \n    *   [ItemLocked](#itemlocked)\n        \n    *   [ItemsNonTransferable](#itemsnontransferable)\n        \n    *   [LockedCollectionAttributes](#lockedcollectionattributes)\n        \n    *   [LockedCollectionMetadata](#lockedcollectionmetadata)\n        \n    *   [LockedItemAttributes](#lockeditemattributes)\n        \n    *   [LockedItemMetadata](#lockeditemmetadata)\n        \n    *   [MaxAttributesLimitReached](#maxattributeslimitreached)\n        \n    *   [MaxSupplyLocked](#maxsupplylocked)\n        \n    *   [MaxSupplyReached](#maxsupplyreached)\n        \n    *   [MaxSupplyTooSmall](#maxsupplytoosmall)\n        \n    *   [MetadataNotFound](#metadatanotfound)\n        \n    *   [MethodDisabled](#methoddisabled)\n        \n    *   [MintEnded](#mintended)\n        \n    *   [MintNotStarted](#mintnotstarted)\n        \n    *   [NoConfig](#noconfig)\n        \n    *   [NoPermission](#nopermission-5)\n        \n    *   [NotDelegate](#notdelegate)\n        \n    *   [NotForSale](#notforsale)\n        \n    *   [ReachedApprovalLimit](#reachedapprovallimit)\n        \n    *   [RolesNotCleared](#rolesnotcleared)\n        \n    *   [Unaccepted](#unaccepted)\n        \n    *   [Unapproved](#unapproved-1)\n        \n    *   [UnknownCollection](#unknowncollection)\n        \n    *   [UnknownItem](#unknownitem)\n        \n    *   [UnknownSwap](#unknownswap)\n        \n    *   [WitnessRequired](#witnessrequired)\n        \n    *   [WrongDelegate](#wrongdelegate)\n        \n    *   [WrongDuration](#wrongduration)\n        \n    *   [WrongNamespace](#wrongnamespace)\n        \n    *   [WrongOrigin](#wrongorigin)\n        \n    *   [WrongOwner](#wrongowner)\n        \n    *   [WrongSetting](#wrongsetting)\n        \n    *   [WrongSignature](#wrongsignature)\n        \n*   [nis](#nis)\n    *   [AlreadyCommunal](#alreadycommunal)\n        \n    *   [AlreadyFunded](#alreadyfunded)\n        \n    *   [AlreadyPrivate](#alreadyprivate)\n        \n    *   [AmountTooSmall](#amounttoosmall)\n        \n    *   [BidTooLow](#bidtoolow-1)\n        \n    *   [DurationTooBig](#durationtoobig)\n        \n    *   [DurationTooSmall](#durationtoosmall)\n        \n    *   [MakesDust](#makesdust)\n        \n    *   [NotExpired](#notexpired)\n        \n    *   [NotOwner](#notowner-3)\n        \n    *   [PortionTooBig](#portiontoobig)\n        \n    *   [Throttled](#throttled)\n        \n    *   [Unfunded](#unfunded)\n        \n    *   [UnknownBid](#unknownbid)\n        \n    *   [UnknownReceipt](#unknownreceipt)\n        \n*   [nominationPools](#nominationpools)\n    *   [AccountBelongsToOtherPool](#accountbelongstootherpool)\n        \n    *   [BondExtraRestricted](#bondextrarestricted)\n        \n    *   [CanNotChangeState](#cannotchangestate)\n        \n    *   [CannotWithdrawAny](#cannotwithdrawany)\n        \n    *   [CommissionChangeRateNotAllowed](#commissionchangeratenotallowed)\n        \n    *   [CommissionChangeThrottled](#commissionchangethrottled)\n        \n    *   [CommissionExceedsGlobalMaximum](#commissionexceedsglobalmaximum)\n        \n    *   [CommissionExceedsMaximum](#commissionexceedsmaximum)\n        \n    *   [Defensive](#defensive)\n        \n    *   [DoesNotHavePermission](#doesnothavepermission)\n        \n    *   [FullyUnbonding](#fullyunbonding)\n        \n    *   [InvalidPoolId](#invalidpoolid)\n        \n    *   [MaxCommissionRestricted](#maxcommissionrestricted)\n        \n    *   [MaxPoolMembers](#maxpoolmembers)\n        \n    *   [MaxPools](#maxpools)\n        \n    *   [MaxUnbondingLimit](#maxunbondinglimit)\n        \n    *   [MetadataExceedsMaxLen](#metadataexceedsmaxlen)\n        \n    *   [MinimumBondNotMet](#minimumbondnotmet)\n        \n    *   [NoCommissionCurrentSet](#nocommissioncurrentset)\n        \n    *   [NoPendingCommission](#nopendingcommission)\n        \n    *   [NotDestroying](#notdestroying)\n        \n    *   [NothingToAdjust](#nothingtoadjust)\n        \n    *   [NotKickerOrDestroying](#notkickerordestroying)\n        \n    *   [NotNominator](#notnominator)\n        \n    *   [NotOpen](#notopen)\n        \n    *   [OverflowRisk](#overflowrisk)\n        \n    *   [PartialUnbondNotAllowedPermissionlessly](#partialunbondnotallowedpermissionlessly)\n        \n    *   [PoolIdInUse](#poolidinuse)\n        \n    *   [PoolMemberNotFound](#poolmembernotfound)\n        \n    *   [PoolNotFound](#poolnotfound-1)\n        \n    *   [RewardPoolNotFound](#rewardpoolnotfound)\n        \n    *   [SubPoolsNotFound](#subpoolsnotfound)\n        \n*   [poolAssets](#poolassets)\n    *   [AlreadyExists](#alreadyexists-3)\n        \n    *   [AssetNotLive](#assetnotlive-1)\n        \n    *   [BadMetadata](#badmetadata-1)\n        \n    *   [BadWitness](#badwitness-3)\n        \n    *   [BalanceLow](#balancelow-1)\n        \n    *   [CallbackFailed](#callbackfailed-1)\n        \n    *   [Frozen](#frozen-1)\n        \n    *   [IncorrectStatus](#incorrectstatus-1)\n        \n    *   [InUse](#inuse-2)\n        \n    *   [LiveAsset](#liveasset-1)\n        \n    *   [MinBalanceZero](#minbalancezero-1)\n        \n    *   [NoAccount](#noaccount-1)\n        \n    *   [NoDeposit](#nodeposit-1)\n        \n    *   [NoPermission](#nopermission-6)\n        \n    *   [NotFrozen](#notfrozen-1)\n        \n    *   [Unapproved](#unapproved-2)\n        \n    *   [UnavailableConsumer](#unavailableconsumer-1)\n        \n    *   [Unknown](#unknown-1)\n        \n    *   [WouldBurn](#wouldburn-1)\n        \n    *   [WouldDie](#woulddie-1)\n        \n*   [preimage](#preimage)\n    *   [AlreadyNoted](#alreadynoted)\n        \n    *   [NotAuthorized](#notauthorized)\n        \n    *   [NotNoted](#notnoted)\n        \n    *   [NotRequested](#notrequested)\n        \n    *   [Requested](#requested)\n        \n    *   [TooBig](#toobig)\n        \n    *   [TooFew](#toofew)\n        \n    *   [TooMany](#toomany-1)\n        \n*   [proxy](#proxy)\n    *   [Duplicate](#duplicate)\n        \n    *   [NoPermission](#nopermission-7)\n        \n    *   [NoSelfProxy](#noselfproxy)\n        \n    *   [NotFound](#notfound-2)\n        \n    *   [NotProxy](#notproxy)\n        \n    *   [TooMany](#toomany-2)\n        \n    *   [Unannounced](#unannounced)\n        \n    *   [Unproxyable](#unproxyable)\n        \n*   [rankedCollective](#rankedcollective)\n    *   [AlreadyMember](#alreadymember-1)\n        \n    *   [Corruption](#corruption)\n        \n    *   [InvalidWitness](#invalidwitness)\n        \n    *   [NoneRemaining](#noneremaining)\n        \n    *   [NoPermission](#nopermission-8)\n        \n    *   [NotMember](#notmember-4)\n        \n    *   [NotPolling](#notpolling)\n        \n    *   [Ongoing](#ongoing)\n        \n    *   [RankTooLow](#ranktoolow)\n        \n*   [rankedPolls](#rankedpolls)\n    *   [BadReferendum](#badreferendum)\n        \n    *   [BadStatus](#badstatus)\n        \n    *   [BadTrack](#badtrack)\n        \n    *   [Full](#full)\n        \n    *   [HasDeposit](#hasdeposit)\n        \n    *   [NoDeposit](#nodeposit-2)\n        \n    *   [NoPermission](#nopermission-9)\n        \n    *   [NothingToDo](#nothingtodo-1)\n        \n    *   [NotOngoing](#notongoing-1)\n        \n    *   [NoTrack](#notrack)\n        \n    *   [PreimageNotExist](#preimagenotexist-1)\n        \n    *   [QueueEmpty](#queueempty)\n        \n    *   [Unfinished](#unfinished)\n        \n*   [recovery](#recovery)\n    *   [AlreadyProxy](#alreadyproxy)\n        \n    *   [AlreadyRecoverable](#alreadyrecoverable)\n        \n    *   [AlreadyStarted](#alreadystarted)\n        \n    *   [AlreadyVouched](#alreadyvouched)\n        \n    *   [BadState](#badstate)\n        \n    *   [DelayPeriod](#delayperiod)\n        \n    *   [MaxFriends](#maxfriends)\n        \n    *   [NotAllowed](#notallowed-1)\n        \n    *   [NotEnoughFriends](#notenoughfriends)\n        \n    *   [NotFriend](#notfriend)\n        \n    *   [NotRecoverable](#notrecoverable)\n        \n    *   [NotSorted](#notsorted)\n        \n    *   [NotStarted](#notstarted)\n        \n    *   [StillActive](#stillactive)\n        \n    *   [Threshold](#threshold)\n        \n    *   [ZeroThreshold](#zerothreshold)\n        \n*   [referenda](#referenda)\n    *   [BadReferendum](#badreferendum-1)\n        \n    *   [BadStatus](#badstatus-1)\n        \n    *   [BadTrack](#badtrack-1)\n        \n    *   [Full](#full-1)\n        \n    *   [HasDeposit](#hasdeposit-1)\n        \n    *   [NoDeposit](#nodeposit-3)\n        \n    *   [NoPermission](#nopermission-10)\n        \n    *   [NothingToDo](#nothingtodo-2)\n        \n    *   [NotOngoing](#notongoing-2)\n        \n    *   [NoTrack](#notrack-1)\n        \n    *   [PreimageNotExist](#preimagenotexist-2)\n        \n    *   [QueueEmpty](#queueempty-1)\n        \n    *   [Unfinished](#unfinished-1)\n        \n*   [remark](#remark)\n    *   [BadContext](#badcontext)\n        \n    *   [Empty](#empty)\n        \n*   [safeMode](#safemode)\n    *   [AlreadyDeposited](#alreadydeposited)\n        \n    *   [CannotReleaseYet](#cannotreleaseyet)\n        \n    *   [CurrencyError](#currencyerror)\n        \n    *   [Entered](#entered)\n        \n    *   [Exited](#exited)\n        \n    *   [NoDeposit](#nodeposit-4)\n        \n    *   [NotConfigured](#notconfigured-1)\n        \n*   [salary](#salary)\n    *   [AlreadyInducted](#alreadyinducted-1)\n        \n    *   [AlreadyStarted](#alreadystarted-1)\n        \n    *   [Bankrupt](#bankrupt)\n        \n    *   [ClaimZero](#claimzero)\n        \n    *   [Inconclusive](#inconclusive)\n        \n    *   [NoClaim](#noclaim)\n        \n    *   [NotCurrent](#notcurrent)\n        \n    *   [NotInducted](#notinducted)\n        \n    *   [NotMember](#notmember-5)\n        \n    *   [NotStarted](#notstarted-1)\n        \n    *   [NotYet](#notyet)\n        \n    *   [PayError](#payerror)\n        \n    *   [TooEarly](#tooearly-3)\n        \n    *   [TooLate](#toolate)\n        \n*   [scheduler](#scheduler)\n    *   [FailedToSchedule](#failedtoschedule)\n        \n    *   [Named](#named)\n        \n    *   [NotFound](#notfound-3)\n        \n    *   [RescheduleNoChange](#reschedulenochange)\n        \n    *   [TargetBlockNumberInPast](#targetblocknumberinpast)\n        \n*   [session](#session)\n    *   [DuplicatedKey](#duplicatedkey)\n        \n    *   [InvalidProof](#invalidproof)\n        \n    *   [NoAccount](#noaccount-2)\n        \n    *   [NoAssociatedValidatorId](#noassociatedvalidatorid)\n        \n    *   [NoKeys](#nokeys)\n        \n*   [society](#society)\n    *   [AlreadyBid](#alreadybid)\n        \n    *   [AlreadyCandidate](#alreadycandidate)\n        \n    *   [AlreadyElevated](#alreadyelevated-1)\n        \n    *   [AlreadyFounded](#alreadyfounded)\n        \n    *   [AlreadyMember](#alreadymember-2)\n        \n    *   [AlreadyPunished](#alreadypunished)\n        \n    *   [AlreadyVouching](#alreadyvouching)\n        \n    *   [Approved](#approved)\n        \n    *   [Expired](#expired)\n        \n    *   [Founder](#founder)\n        \n    *   [Head](#head)\n        \n    *   [InProgress](#inprogress-1)\n        \n    *   [InsufficientFunds](#insufficientfunds-3)\n        \n    *   [InsufficientPot](#insufficientpot)\n        \n    *   [MaxMembers](#maxmembers)\n        \n    *   [NoDefender](#nodefender)\n        \n    *   [NoPayout](#nopayout)\n        \n    *   [NotApproved](#notapproved)\n        \n    *   [NotBidder](#notbidder)\n        \n    *   [NotCandidate](#notcandidate)\n        \n    *   [NotFounder](#notfounder)\n        \n    *   [NotGroup](#notgroup)\n        \n    *   [NotHead](#nothead)\n        \n    *   [NotMember](#notmember-6)\n        \n    *   [NotRejected](#notrejected)\n        \n    *   [NotSuspended](#notsuspended)\n        \n    *   [NotVouchingOnBidder](#notvouchingonbidder)\n        \n    *   [NoVotes](#novotes-1)\n        \n    *   [Rejected](#rejected)\n        \n    *   [Suspended](#suspended)\n        \n    *   [TooEarly](#tooearly-4)\n        \n    *   [Voted](#voted)\n        \n*   [staking](#staking)\n    *   [AlreadyBonded](#alreadybonded)\n        \n    *   [AlreadyClaimed](#alreadyclaimed-2)\n        \n    *   [AlreadyPaired](#alreadypaired)\n        \n    *   [BadState](#badstate-1)\n        \n    *   [BadTarget](#badtarget)\n        \n    *   [BoundNotMet](#boundnotmet-1)\n        \n    *   [CannotChillOther](#cannotchillother)\n        \n    *   [CommissionTooLow](#commissiontoolow)\n        \n    *   [ControllerDeprecated](#controllerdeprecated)\n        \n    *   [DuplicateIndex](#duplicateindex)\n        \n    *   [EmptyTargets](#emptytargets)\n        \n    *   [FundedTarget](#fundedtarget)\n        \n    *   [IncorrectHistoryDepth](#incorrecthistorydepth)\n        \n    *   [IncorrectSlashingSpans](#incorrectslashingspans)\n        \n    *   [InsufficientBond](#insufficientbond)\n        \n    *   [InvalidEraToReward](#invalideratoreward)\n        \n    *   [InvalidNumberOfNominations](#invalidnumberofnominations)\n        \n    *   [InvalidPage](#invalidpage)\n        \n    *   [InvalidSlashIndex](#invalidslashindex)\n        \n    *   [NoMoreChunks](#nomorechunks)\n        \n    *   [NotController](#notcontroller-1)\n        \n    *   [NotSortedAndUnique](#notsortedandunique)\n        \n    *   [NotStash](#notstash)\n        \n    *   [NoUnlockChunk](#nounlockchunk)\n        \n    *   [TooManyNominators](#toomanynominators)\n        \n    *   [TooManyTargets](#toomanytargets)\n        \n    *   [TooManyValidators](#toomanyvalidators)\n        \n*   [stateTrieMigration](#statetriemigration)\n    *   [BadChildRoot](#badchildroot)\n        \n    *   [BadWitness](#badwitness-4)\n        \n    *   [KeyTooLong](#keytoolong)\n        \n    *   [MaxSignedLimits](#maxsignedlimits)\n        \n    *   [NotEnoughFunds](#notenoughfunds)\n        \n    *   [SignedMigrationNotAllowed](#signedmigrationnotallowed)\n        \n*   [sudo](#sudo)\n    *   [RequireSudo](#requiresudo)\n        \n*   [system](#system)\n    *   [CallFiltered](#callfiltered)\n        \n    *   [FailedTask](#failedtask)\n        \n    *   [FailedToExtractRuntimeVersion](#failedtoextractruntimeversion)\n        \n    *   [InvalidSpecName](#invalidspecname)\n        \n    *   [InvalidTask](#invalidtask)\n        \n    *   [NonDefaultComposite](#nondefaultcomposite)\n        \n    *   [NonZeroRefCount](#nonzerorefcount)\n        \n    *   [SpecVersionNeedsToIncrease](#specversionneedstoincrease)\n        \n*   [tasksExample](#tasksexample)\n    *   [NotFound](#notfound-4)\n        \n*   [technicalCommittee](#technicalcommittee)\n    *   [AlreadyInitialized](#alreadyinitialized-3)\n        \n    *   [DuplicateProposal](#duplicateproposal-3)\n        \n    *   [DuplicateVote](#duplicatevote-2)\n        \n    *   [NotMember](#notmember-7)\n        \n    *   [PrimeAccountNotMember](#primeaccountnotmember-2)\n        \n    *   [ProposalMissing](#proposalmissing-3)\n        \n    *   [TooEarly](#tooearly-5)\n        \n    *   [TooManyProposals](#toomanyproposals-2)\n        \n    *   [WrongIndex](#wrongindex-2)\n        \n    *   [WrongProposalLength](#wrongproposallength-2)\n        \n    *   [WrongProposalWeight](#wrongproposalweight-2)\n        \n*   [technicalMembership](#technicalmembership)\n    *   [AlreadyMember](#alreadymember-3)\n        \n    *   [NotMember](#notmember-8)\n        \n    *   [TooManyMembers](#toomanymembers-1)\n        \n*   [tips](#tips)\n    *   [AlreadyKnown](#alreadyknown)\n        \n    *   [MaxTipAmountExceeded](#maxtipamountexceeded)\n        \n    *   [NotFinder](#notfinder)\n        \n    *   [Premature](#premature-1)\n        \n    *   [ReasonTooBig](#reasontoobig-1)\n        \n    *   [StillOpen](#stillopen)\n        \n    *   [UnknownTip](#unknowntip)\n        \n*   [transactionStorage](#transactionstorage)\n    *   [BadContext](#badcontext-1)\n        \n    *   [DoubleCheck](#doublecheck)\n        \n    *   [EmptyTransaction](#emptytransaction)\n        \n    *   [InvalidProof](#invalidproof-1)\n        \n    *   [MissingProof](#missingproof)\n        \n    *   [MissingStateData](#missingstatedata)\n        \n    *   [NotConfigured](#notconfigured-2)\n        \n    *   [ProofNotChecked](#proofnotchecked)\n        \n    *   [RenewedNotFound](#renewednotfound)\n        \n    *   [TooManyTransactions](#toomanytransactions)\n        \n    *   [TransactionTooLarge](#transactiontoolarge)\n        \n    *   [UnexpectedProof](#unexpectedproof)\n        \n*   [treasury](#treasury)\n    *   [AlreadyAttempted](#alreadyattempted)\n        \n    *   [EarlyPayout](#earlypayout)\n        \n    *   [FailedToConvertBalance](#failedtoconvertbalance)\n        \n    *   [Inconclusive](#inconclusive-1)\n        \n    *   [InsufficientPermission](#insufficientpermission)\n        \n    *   [InsufficientProposersBalance](#insufficientproposersbalance-1)\n        \n    *   [InvalidIndex](#invalidindex-2)\n        \n    *   [NotAttempted](#notattempted)\n        \n    *   [PayoutError](#payouterror)\n        \n    *   [ProposalNotApproved](#proposalnotapproved)\n        \n    *   [SpendExpired](#spendexpired)\n        \n    *   [TooManyApprovals](#toomanyapprovals)\n        \n*   [txPause](#txpause)\n    *   [IsPaused](#ispaused)\n        \n    *   [IsUnpaused](#isunpaused)\n        \n    *   [NotFound](#notfound-5)\n        \n    *   [Unpausable](#unpausable)\n        \n*   [uniques](#uniques)\n    *   [AlreadyExists](#alreadyexists-4)\n        \n    *   [BadWitness](#badwitness-5)\n        \n    *   [BidTooLow](#bidtoolow-2)\n        \n    *   [Frozen](#frozen-2)\n        \n    *   [InUse](#inuse-3)\n        \n    *   [Locked](#locked)\n        \n    *   [MaxSupplyAlreadySet](#maxsupplyalreadyset)\n        \n    *   [MaxSupplyReached](#maxsupplyreached-1)\n        \n    *   [MaxSupplyTooSmall](#maxsupplytoosmall-1)\n        \n    *   [NoDelegate](#nodelegate)\n        \n    *   [NoPermission](#nopermission-11)\n        \n    *   [NotForSale](#notforsale-1)\n        \n    *   [Unaccepted](#unaccepted-1)\n        \n    *   [Unapproved](#unapproved-3)\n        \n    *   [UnknownCollection](#unknowncollection-1)\n        \n    *   [UnknownItem](#unknownitem-1)\n        \n    *   [WrongDelegate](#wrongdelegate-1)\n        \n    *   [WrongOwner](#wrongowner-1)\n        \n*   [utility](#utility)\n    *   [TooManyCalls](#toomanycalls-1)\n        \n*   [vesting](#vesting)\n    *   [AmountLow](#amountlow)\n        \n    *   [AtMaxVestingSchedules](#atmaxvestingschedules)\n        \n    *   [InvalidScheduleParams](#invalidscheduleparams)\n        \n    *   [NotVesting](#notvesting)\n        \n    *   [ScheduleIndexOutOfBounds](#scheduleindexoutofbounds)\n        \n*   [voterList](#voterlist)\n    *   [List](#list)\n        \n*   [whitelist](#whitelist)\n    *   [CallAlreadyWhitelisted](#callalreadywhitelisted)\n        \n    *   [CallIsNotWhitelisted](#callisnotwhitelisted)\n        \n    *   [InvalidCallWeightWitness](#invalidcallweightwitness)\n        \n    *   [UnavailablePreImage](#unavailablepreimage)\n        \n    *   [UndecodableCall](#undecodablecall)"}, {"title": null, "description": null, "source_url": "https://polkadot.js.org/docs/substrate/events", "markdown": "[Skip to main content](#__docusaurus_skipToContent_fallback)\n\n[![polkadot{.js}](https://polkadot.js.org/docs/img/logo.svg)\\\n\\\n**polkadot{.js}**](/docs/)\n\n[Apps UI (Wallet)](https://polkadot.js.org/apps/)\n[GitHub](https://github.com/polkadot-js/docs)\n\nSearch...\n\n*   [Introduction](#)\n    \n*   [API](#)\n    \n*   [Metadata](#)\n    \n    *   [Substrate](#)\n        \n        *   [Overview](/docs/substrate)\n            \n        *   [Runtime](/docs/substrate/runtime)\n            \n        *   [JSON-RPC](/docs/substrate/rpc)\n            \n        *   [Constants](/docs/substrate/constants)\n            \n        *   [Storage](/docs/substrate/storage)\n            \n        *   [Extrinsics](/docs/substrate/extrinsics)\n            \n        *   [Events](/docs/substrate/events)\n            \n        *   [Errors](/docs/substrate/errors)\n            \n    *   [Polkadot](#)\n        \n    *   [Kusama](#)\n        \n*   [Keyring](#)\n    \n*   [Crypto Utilities](#)\n    \n*   [Contracts (API)](#)\n    \n*   [Identicon (UI)](#)\n    \n*   [Keyring (UI)](#)\n    \n*   [Extension](#)\n    \n*   [Run, Bundle, Test](#)\n    \n\n*   [](/docs/)\n    \n*   Metadata\n*   Substrate\n*   Events\n\nOn this page\n\nEvents\n======\n\nEvents are emitted for certain operations on the runtime. The following sections describe the events that are part of the default Substrate runtime.\n\n(NOTE: These were generated from a static/snapshot view of a recent default Substrate runtime. Some items may not be available in older nodes, or in any customized implementations.)\n\n*   **[alliance](#alliance)\n    **\n    \n*   **[allianceMotion](#alliancemotion)\n    **\n    \n*   **[assetConversion](#assetconversion)\n    **\n    \n*   **[assetConversionTxPayment](#assetconversiontxpayment)\n    **\n    \n*   **[assetRate](#assetrate)\n    **\n    \n*   **[assets](#assets)\n    **\n    \n*   **[assetTxPayment](#assettxpayment)\n    **\n    \n*   **[balances](#balances)\n    **\n    \n*   **[bounties](#bounties)\n    **\n    \n*   **[broker](#broker)\n    **\n    \n*   **[childBounties](#childbounties)\n    **\n    \n*   **[contracts](#contracts)\n    **\n    \n*   **[convictionVoting](#convictionvoting)\n    **\n    \n*   **[coreFellowship](#corefellowship)\n    **\n    \n*   **[council](#council)\n    **\n    \n*   **[democracy](#democracy)\n    **\n    \n*   **[electionProviderMultiPhase](#electionprovidermultiphase)\n    **\n    \n*   **[elections](#elections)\n    **\n    \n*   **[fastUnstake](#fastunstake)\n    **\n    \n*   **[glutton](#glutton)\n    **\n    \n*   **[grandpa](#grandpa)\n    **\n    \n*   **[identity](#identity)\n    **\n    \n*   **[imOnline](#imonline)\n    **\n    \n*   **[indices](#indices)\n    **\n    \n*   **[lottery](#lottery)\n    **\n    \n*   **[messageQueue](#messagequeue)\n    **\n    \n*   **[multisig](#multisig)\n    **\n    \n*   **[nftFractionalization](#nftfractionalization)\n    **\n    \n*   **[nfts](#nfts)\n    **\n    \n*   **[nis](#nis)\n    **\n    \n*   **[nominationPools](#nominationpools)\n    **\n    \n*   **[offences](#offences)\n    **\n    \n*   **[poolAssets](#poolassets)\n    **\n    \n*   **[pov](#pov)\n    **\n    \n*   **[preimage](#preimage)\n    **\n    \n*   **[proxy](#proxy)\n    **\n    \n*   **[rankedCollective](#rankedcollective)\n    **\n    \n*   **[rankedPolls](#rankedpolls)\n    **\n    \n*   **[recovery](#recovery)\n    **\n    \n*   **[referenda](#referenda)\n    **\n    \n*   **[remark](#remark)\n    **\n    \n*   **[rootTesting](#roottesting)\n    **\n    \n*   **[safeMode](#safemode)\n    **\n    \n*   **[salary](#salary)\n    **\n    \n*   **[scheduler](#scheduler)\n    **\n    \n*   **[session](#session)\n    **\n    \n*   **[skipFeelessPayment](#skipfeelesspayment)\n    **\n    \n*   **[society](#society)\n    **\n    \n*   **[staking](#staking)\n    **\n    \n*   **[statement](#statement)\n    **\n    \n*   **[stateTrieMigration](#statetriemigration)\n    **\n    \n*   **[sudo](#sudo)\n    **\n    \n*   **[system](#system)\n    **\n    \n*   **[technicalCommittee](#technicalcommittee)\n    **\n    \n*   **[technicalMembership](#technicalmembership)\n    **\n    \n*   **[tips](#tips)\n    **\n    \n*   **[transactionPayment](#transactionpayment)\n    **\n    \n*   **[transactionStorage](#transactionstorage)\n    **\n    \n*   **[treasury](#treasury)\n    **\n    \n*   **[txPause](#txpause)\n    **\n    \n*   **[uniques](#uniques)\n    **\n    \n*   **[utility](#utility)\n    **\n    \n*   **[vesting](#vesting)\n    **\n    \n*   **[voterList](#voterlist)\n    **\n    \n*   **[whitelist](#whitelist)\n    **\n    \n\n* * *\n\nalliance[\u200b](#alliance \"Direct link to alliance\")\n\n-------------------------------------------------\n\n### AllianceDisbanded(`u32`, `u32`, `u32`)[\u200b](#alliancedisbandedu32-u32-u32 \"Direct link to alliancedisbandedu32-u32-u32\")\n\n*   **interface**: `api.events.alliance.AllianceDisbanded.is`\n*   **summary**: Alliance disbanded. Includes number deleted members and unreserved deposits.\n\n### AllyElevated(`AccountId32`)[\u200b](#allyelevatedaccountid32 \"Direct link to allyelevatedaccountid32\")\n\n*   **interface**: `api.events.alliance.AllyElevated.is`\n*   **summary**: An ally has been elevated to Fellow.\n\n### Announced(`PalletAllianceCid`)[\u200b](#announcedpalletalliancecid \"Direct link to announcedpalletalliancecid\")\n\n*   **interface**: `api.events.alliance.Announced.is`\n*   **summary**: A new announcement has been proposed.\n\n### AnnouncementRemoved(`PalletAllianceCid`)[\u200b](#announcementremovedpalletalliancecid \"Direct link to announcementremovedpalletalliancecid\")\n\n*   **interface**: `api.events.alliance.AnnouncementRemoved.is`\n*   **summary**: An on-chain announcement has been removed.\n\n### FellowAbdicated(`AccountId32`)[\u200b](#fellowabdicatedaccountid32 \"Direct link to fellowabdicatedaccountid32\")\n\n*   **interface**: `api.events.alliance.FellowAbdicated.is`\n*   **summary**: A Fellow abdicated their voting rights. They are now an Ally.\n\n### MemberKicked(`AccountId32`, `Option<u128>`)[\u200b](#memberkickedaccountid32-optionu128 \"Direct link to memberkickedaccountid32-optionu128\")\n\n*   **interface**: `api.events.alliance.MemberKicked.is`\n*   **summary**: A member has been kicked out with its deposit slashed.\n\n### MemberRetired(`AccountId32`, `Option<u128>`)[\u200b](#memberretiredaccountid32-optionu128 \"Direct link to memberretiredaccountid32-optionu128\")\n\n*   **interface**: `api.events.alliance.MemberRetired.is`\n*   **summary**: A member has retired with its deposit unreserved.\n\n### MemberRetirementPeriodStarted(`AccountId32`)[\u200b](#memberretirementperiodstartedaccountid32 \"Direct link to memberretirementperiodstartedaccountid32\")\n\n*   **interface**: `api.events.alliance.MemberRetirementPeriodStarted.is`\n*   **summary**: A member gave retirement notice and their retirement period started.\n\n### MembersInitialized(`Vec<AccountId32>`, `Vec<AccountId32>`)[\u200b](#membersinitializedvecaccountid32-vecaccountid32 \"Direct link to membersinitializedvecaccountid32-vecaccountid32\")\n\n*   **interface**: `api.events.alliance.MembersInitialized.is`\n*   **summary**: Some accounts have been initialized as members (fellows/allies).\n\n### NewAllyJoined(`AccountId32`, `Option<AccountId32>`, `Option<u128>`)[\u200b](#newallyjoinedaccountid32-optionaccountid32-optionu128 \"Direct link to newallyjoinedaccountid32-optionaccountid32-optionu128\")\n\n*   **interface**: `api.events.alliance.NewAllyJoined.is`\n*   **summary**: An account has been added as an Ally and reserved its deposit.\n\n### NewRuleSet(`PalletAllianceCid`)[\u200b](#newrulesetpalletalliancecid \"Direct link to newrulesetpalletalliancecid\")\n\n*   **interface**: `api.events.alliance.NewRuleSet.is`\n*   **summary**: A new rule has been set.\n\n### UnscrupulousItemAdded(`Vec<PalletAllianceUnscrupulousItem>`)[\u200b](#unscrupulousitemaddedvecpalletallianceunscrupulousitem \"Direct link to unscrupulousitemaddedvecpalletallianceunscrupulousitem\")\n\n*   **interface**: `api.events.alliance.UnscrupulousItemAdded.is`\n*   **summary**: Accounts or websites have been added into the list of unscrupulous items.\n\n### UnscrupulousItemRemoved(`Vec<PalletAllianceUnscrupulousItem>`)[\u200b](#unscrupulousitemremovedvecpalletallianceunscrupulousitem \"Direct link to unscrupulousitemremovedvecpalletallianceunscrupulousitem\")\n\n*   **interface**: `api.events.alliance.UnscrupulousItemRemoved.is`\n*   **summary**: Accounts or websites have been removed from the list of unscrupulous items.\n\n* * *\n\nallianceMotion[\u200b](#alliancemotion \"Direct link to allianceMotion\")\n\n-------------------------------------------------------------------\n\n### Approved(`H256`)[\u200b](#approvedh256 \"Direct link to approvedh256\")\n\n*   **interface**: `api.events.allianceMotion.Approved.is`\n*   **summary**: A motion was approved by the required threshold.\n\n### Closed(`H256`, `u32`, `u32`)[\u200b](#closedh256-u32-u32 \"Direct link to closedh256-u32-u32\")\n\n*   **interface**: `api.events.allianceMotion.Closed.is`\n*   **summary**: A proposal was closed because its threshold was reached or after its duration was up.\n\n### Disapproved(`H256`)[\u200b](#disapprovedh256 \"Direct link to disapprovedh256\")\n\n*   **interface**: `api.events.allianceMotion.Disapproved.is`\n*   **summary**: A motion was not approved by the required threshold.\n\n### Executed(`H256`, `Result<Null, SpRuntimeDispatchError>`)[\u200b](#executedh256-resultnull-spruntimedispatcherror \"Direct link to executedh256-resultnull-spruntimedispatcherror\")\n\n*   **interface**: `api.events.allianceMotion.Executed.is`\n*   **summary**: A motion was executed; result will be `Ok` if it returned without error.\n\n### MemberExecuted(`H256`, `Result<Null, SpRuntimeDispatchError>`)[\u200b](#memberexecutedh256-resultnull-spruntimedispatcherror \"Direct link to memberexecutedh256-resultnull-spruntimedispatcherror\")\n\n*   **interface**: `api.events.allianceMotion.MemberExecuted.is`\n*   **summary**: A single member did some action; result will be `Ok` if it returned without error.\n\n### Proposed(`AccountId32`, `u32`, `H256`, `u32`)[\u200b](#proposedaccountid32-u32-h256-u32 \"Direct link to proposedaccountid32-u32-h256-u32\")\n\n*   **interface**: `api.events.allianceMotion.Proposed.is`\n*   **summary**: A motion (given hash) has been proposed (by given account) with a threshold (given `MemberCount`).\n\n### Voted(`AccountId32`, `H256`, `bool`, `u32`, `u32`)[\u200b](#votedaccountid32-h256-bool-u32-u32 \"Direct link to votedaccountid32-h256-bool-u32-u32\")\n\n*   **interface**: `api.events.allianceMotion.Voted.is`\n*   **summary**: A motion (given hash) has been voted on by given account, leaving a tally (yes votes and no votes given respectively as `MemberCount`).\n\n* * *\n\nassetConversion[\u200b](#assetconversion \"Direct link to assetConversion\")\n\n----------------------------------------------------------------------\n\n### LiquidityAdded(`AccountId32`, `AccountId32`, `(PalletAssetConversionNativeOrAssetId,PalletAssetConversionNativeOrAssetId)`, `u128`, `u128`, `u32`, `u128`)[\u200b](#liquidityaddedaccountid32-accountid32-palletassetconversionnativeorassetidpalletassetconversionnativeorassetid-u128-u128-u32-u128 \"Direct link to liquidityaddedaccountid32-accountid32-palletassetconversionnativeorassetidpalletassetconversionnativeorassetid-u128-u128-u32-u128\")\n\n*   **interface**: `api.events.assetConversion.LiquidityAdded.is`\n*   **summary**: A successful call of the `AddLiquidity` extrinsic will create this event.\n\n### LiquidityRemoved(`AccountId32`, `AccountId32`, `(PalletAssetConversionNativeOrAssetId,PalletAssetConversionNativeOrAssetId)`, `u128`, `u128`, `u32`, `u128`, `Permill`)[\u200b](#liquidityremovedaccountid32-accountid32-palletassetconversionnativeorassetidpalletassetconversionnativeorassetid-u128-u128-u32-u128-permill \"Direct link to liquidityremovedaccountid32-accountid32-palletassetconversionnativeorassetidpalletassetconversionnativeorassetid-u128-u128-u32-u128-permill\")\n\n*   **interface**: `api.events.assetConversion.LiquidityRemoved.is`\n*   **summary**: A successful call of the `RemoveLiquidity` extrinsic will create this event.\n\n### PoolCreated(`AccountId32`, `(PalletAssetConversionNativeOrAssetId,PalletAssetConversionNativeOrAssetId)`, `AccountId32`, `u32`)[\u200b](#poolcreatedaccountid32-palletassetconversionnativeorassetidpalletassetconversionnativeorassetid-accountid32-u32 \"Direct link to poolcreatedaccountid32-palletassetconversionnativeorassetidpalletassetconversionnativeorassetid-accountid32-u32\")\n\n*   **interface**: `api.events.assetConversion.PoolCreated.is`\n*   **summary**: A successful call of the `CretaPool` extrinsic will create this event.\n\n### SwapExecuted(`AccountId32`, `AccountId32`, `Vec<PalletAssetConversionNativeOrAssetId>`, `u128`, `u128`)[\u200b](#swapexecutedaccountid32-accountid32-vecpalletassetconversionnativeorassetid-u128-u128 \"Direct link to swapexecutedaccountid32-accountid32-vecpalletassetconversionnativeorassetid-u128-u128\")\n\n*   **interface**: `api.events.assetConversion.SwapExecuted.is`\n*   **summary**: Assets have been converted from one to another. Both `SwapExactTokenForToken` and `SwapTokenForExactToken` will generate this event.\n\n### Transfer(`AccountId32`, `AccountId32`, `PalletAssetConversionNativeOrAssetId`, `u128`)[\u200b](#transferaccountid32-accountid32-palletassetconversionnativeorassetid-u128 \"Direct link to transferaccountid32-accountid32-palletassetconversionnativeorassetid-u128\")\n\n*   **interface**: `api.events.assetConversion.Transfer.is`\n*   **summary**: An amount has been transferred from one account to another.\n\n* * *\n\nassetConversionTxPayment[\u200b](#assetconversiontxpayment \"Direct link to assetConversionTxPayment\")\n\n-------------------------------------------------------------------------------------------------\n\n### AssetRefundFailed(`u128`)[\u200b](#assetrefundfailedu128 \"Direct link to assetrefundfailedu128\")\n\n*   **interface**: `api.events.assetConversionTxPayment.AssetRefundFailed.is`\n*   **summary**: A swap of the refund in native currency back to asset failed.\n\n### AssetTxFeePaid(`AccountId32`, `u128`, `u128`, `u32`)[\u200b](#assettxfeepaidaccountid32-u128-u128-u32 \"Direct link to assettxfeepaidaccountid32-u128-u128-u32\")\n\n*   **interface**: `api.events.assetConversionTxPayment.AssetTxFeePaid.is`\n*   **summary**: A transaction fee `actual_fee`, of which `tip` was added to the minimum inclusion fee, has been paid by `who` in an asset `asset_id`.\n\n* * *\n\nassetRate[\u200b](#assetrate \"Direct link to assetRate\")\n\n----------------------------------------------------\n\n### AssetRateCreated(`u32`, `u128`)[\u200b](#assetratecreatedu32-u128 \"Direct link to assetratecreatedu32-u128\")\n\n*   **interface**: `api.events.assetRate.AssetRateCreated.is`\n\n### AssetRateRemoved(`u32`)[\u200b](#assetrateremovedu32 \"Direct link to assetrateremovedu32\")\n\n*   **interface**: `api.events.assetRate.AssetRateRemoved.is`\n\n### AssetRateUpdated(`u32`, `u128`, `u128`)[\u200b](#assetrateupdatedu32-u128-u128 \"Direct link to assetrateupdatedu32-u128-u128\")\n\n*   **interface**: `api.events.assetRate.AssetRateUpdated.is`\n\n* * *\n\nassets[\u200b](#assets \"Direct link to assets\")\n\n-------------------------------------------\n\n### AccountsDestroyed(`u32`, `u32`, `u32`)[\u200b](#accountsdestroyedu32-u32-u32 \"Direct link to accountsdestroyedu32-u32-u32\")\n\n*   **interface**: `api.events.assets.AccountsDestroyed.is`\n*   **summary**: Accounts were destroyed for given asset.\n\n### ApprovalCancelled(`u32`, `AccountId32`, `AccountId32`)[\u200b](#approvalcancelledu32-accountid32-accountid32 \"Direct link to approvalcancelledu32-accountid32-accountid32\")\n\n*   **interface**: `api.events.assets.ApprovalCancelled.is`\n*   **summary**: An approval for account `delegate` was cancelled by `owner`.\n\n### ApprovalsDestroyed(`u32`, `u32`, `u32`)[\u200b](#approvalsdestroyedu32-u32-u32 \"Direct link to approvalsdestroyedu32-u32-u32\")\n\n*   **interface**: `api.events.assets.ApprovalsDestroyed.is`\n*   **summary**: Approvals were destroyed for given asset.\n\n### ApprovedTransfer(`u32`, `AccountId32`, `AccountId32`, `u128`)[\u200b](#approvedtransferu32-accountid32-accountid32-u128 \"Direct link to approvedtransferu32-accountid32-accountid32-u128\")\n\n*   **interface**: `api.events.assets.ApprovedTransfer.is`\n*   **summary**: (Additional) funds have been approved for transfer to a destination account.\n\n### AssetFrozen(`u32`)[\u200b](#assetfrozenu32 \"Direct link to assetfrozenu32\")\n\n*   **interface**: `api.events.assets.AssetFrozen.is`\n*   **summary**: Some asset `asset_id` was frozen.\n\n### AssetMinBalanceChanged(`u32`, `u128`)[\u200b](#assetminbalancechangedu32-u128 \"Direct link to assetminbalancechangedu32-u128\")\n\n*   **interface**: `api.events.assets.AssetMinBalanceChanged.is`\n*   **summary**: The min\\_balance of an asset has been updated by the asset owner.\n\n### AssetStatusChanged(`u32`)[\u200b](#assetstatuschangedu32 \"Direct link to assetstatuschangedu32\")\n\n*   **interface**: `api.events.assets.AssetStatusChanged.is`\n*   **summary**: An asset has had its attributes changed by the `Force` origin.\n\n### AssetThawed(`u32`)[\u200b](#assetthawedu32 \"Direct link to assetthawedu32\")\n\n*   **interface**: `api.events.assets.AssetThawed.is`\n*   **summary**: Some asset `asset_id` was thawed.\n\n### Blocked(`u32`, `AccountId32`)[\u200b](#blockedu32-accountid32 \"Direct link to blockedu32-accountid32\")\n\n*   **interface**: `api.events.assets.Blocked.is`\n*   **summary**: Some account `who` was blocked.\n\n### Burned(`u32`, `AccountId32`, `u128`)[\u200b](#burnedu32-accountid32-u128 \"Direct link to burnedu32-accountid32-u128\")\n\n*   **interface**: `api.events.assets.Burned.is`\n*   **summary**: Some assets were destroyed.\n\n### Created(`u32`, `AccountId32`, `AccountId32`)[\u200b](#createdu32-accountid32-accountid32 \"Direct link to createdu32-accountid32-accountid32\")\n\n*   **interface**: `api.events.assets.Created.is`\n*   **summary**: Some asset class was created.\n\n### Destroyed(`u32`)[\u200b](#destroyedu32 \"Direct link to destroyedu32\")\n\n*   **interface**: `api.events.assets.Destroyed.is`\n*   **summary**: An asset class was destroyed.\n\n### DestructionStarted(`u32`)[\u200b](#destructionstartedu32 \"Direct link to destructionstartedu32\")\n\n*   **interface**: `api.events.assets.DestructionStarted.is`\n*   **summary**: An asset class is in the process of being destroyed.\n\n### ForceCreated(`u32`, `AccountId32`)[\u200b](#forcecreatedu32-accountid32 \"Direct link to forcecreatedu32-accountid32\")\n\n*   **interface**: `api.events.assets.ForceCreated.is`\n*   **summary**: Some asset class was force-created.\n\n### Frozen(`u32`, `AccountId32`)[\u200b](#frozenu32-accountid32 \"Direct link to frozenu32-accountid32\")\n\n*   **interface**: `api.events.assets.Frozen.is`\n*   **summary**: Some account `who` was frozen.\n\n### Issued(`u32`, `AccountId32`, `u128`)[\u200b](#issuedu32-accountid32-u128 \"Direct link to issuedu32-accountid32-u128\")\n\n*   **interface**: `api.events.assets.Issued.is`\n*   **summary**: Some assets were issued.\n\n### MetadataCleared(`u32`)[\u200b](#metadataclearedu32 \"Direct link to metadataclearedu32\")\n\n*   **interface**: `api.events.assets.MetadataCleared.is`\n*   **summary**: Metadata has been cleared for an asset.\n\n### MetadataSet(`u32`, `Bytes`, `Bytes`, `u8`, `bool`)[\u200b](#metadatasetu32-bytes-bytes-u8-bool \"Direct link to metadatasetu32-bytes-bytes-u8-bool\")\n\n*   **interface**: `api.events.assets.MetadataSet.is`\n*   **summary**: New metadata has been set for an asset.\n\n### OwnerChanged(`u32`, `AccountId32`)[\u200b](#ownerchangedu32-accountid32 \"Direct link to ownerchangedu32-accountid32\")\n\n*   **interface**: `api.events.assets.OwnerChanged.is`\n*   **summary**: The owner changed.\n\n### TeamChanged(`u32`, `AccountId32`, `AccountId32`, `AccountId32`)[\u200b](#teamchangedu32-accountid32-accountid32-accountid32 \"Direct link to teamchangedu32-accountid32-accountid32-accountid32\")\n\n*   **interface**: `api.events.assets.TeamChanged.is`\n*   **summary**: The management team changed.\n\n### Thawed(`u32`, `AccountId32`)[\u200b](#thawedu32-accountid32 \"Direct link to thawedu32-accountid32\")\n\n*   **interface**: `api.events.assets.Thawed.is`\n*   **summary**: Some account `who` was thawed.\n\n### Touched(`u32`, `AccountId32`, `AccountId32`)[\u200b](#touchedu32-accountid32-accountid32 \"Direct link to touchedu32-accountid32-accountid32\")\n\n*   **interface**: `api.events.assets.Touched.is`\n*   **summary**: Some account `who` was created with a deposit from `depositor`.\n\n### Transferred(`u32`, `AccountId32`, `AccountId32`, `u128`)[\u200b](#transferredu32-accountid32-accountid32-u128 \"Direct link to transferredu32-accountid32-accountid32-u128\")\n\n*   **interface**: `api.events.assets.Transferred.is`\n*   **summary**: Some assets were transferred.\n\n### TransferredApproved(`u32`, `AccountId32`, `AccountId32`, `AccountId32`, `u128`)[\u200b](#transferredapprovedu32-accountid32-accountid32-accountid32-u128 \"Direct link to transferredapprovedu32-accountid32-accountid32-accountid32-u128\")\n\n*   **interface**: `api.events.assets.TransferredApproved.is`\n*   **summary**: An `amount` was transferred in its entirety from `owner` to `destination` by the approved `delegate`.\n\n* * *\n\nassetTxPayment[\u200b](#assettxpayment \"Direct link to assetTxPayment\")\n\n-------------------------------------------------------------------\n\n### AssetTxFeePaid(`AccountId32`, `u128`, `u128`, `Option<u32>`)[\u200b](#assettxfeepaidaccountid32-u128-u128-optionu32 \"Direct link to assettxfeepaidaccountid32-u128-u128-optionu32\")\n\n*   **interface**: `api.events.assetTxPayment.AssetTxFeePaid.is`\n*   **summary**: A transaction fee `actual_fee`, of which `tip` was added to the minimum inclusion fee, has been paid by `who` in an asset `asset_id`.\n\n* * *\n\nbalances[\u200b](#balances \"Direct link to balances\")\n\n-------------------------------------------------\n\n### BalanceSet(`AccountId32`, `u128`)[\u200b](#balancesetaccountid32-u128 \"Direct link to balancesetaccountid32-u128\")\n\n*   **interface**: `api.events.balances.BalanceSet.is`\n*   **summary**: A balance was set by root.\n\n### Burned(`AccountId32`, `u128`)[\u200b](#burnedaccountid32-u128 \"Direct link to burnedaccountid32-u128\")\n\n*   **interface**: `api.events.balances.Burned.is`\n*   **summary**: Some amount was burned from an account.\n\n### Deposit(`AccountId32`, `u128`)[\u200b](#depositaccountid32-u128 \"Direct link to depositaccountid32-u128\")\n\n*   **interface**: `api.events.balances.Deposit.is`\n*   **summary**: Some amount was deposited (e.g. for transaction fees).\n\n### DustLost(`AccountId32`, `u128`)[\u200b](#dustlostaccountid32-u128 \"Direct link to dustlostaccountid32-u128\")\n\n*   **interface**: `api.events.balances.DustLost.is`\n*   **summary**: An account was removed whose balance was non-zero but below ExistentialDeposit, resulting in an outright loss.\n\n### Endowed(`AccountId32`, `u128`)[\u200b](#endowedaccountid32-u128 \"Direct link to endowedaccountid32-u128\")\n\n*   **interface**: `api.events.balances.Endowed.is`\n*   **summary**: An account was created with some free balance.\n\n### Frozen(`AccountId32`, `u128`)[\u200b](#frozenaccountid32-u128 \"Direct link to frozenaccountid32-u128\")\n\n*   **interface**: `api.events.balances.Frozen.is`\n*   **summary**: Some balance was frozen.\n\n### Issued(`u128`)[\u200b](#issuedu128 \"Direct link to issuedu128\")\n\n*   **interface**: `api.events.balances.Issued.is`\n*   **summary**: Total issuance was increased by `amount`, creating a credit to be balanced.\n\n### Locked(`AccountId32`, `u128`)[\u200b](#lockedaccountid32-u128 \"Direct link to lockedaccountid32-u128\")\n\n*   **interface**: `api.events.balances.Locked.is`\n*   **summary**: Some balance was locked.\n\n### Minted(`AccountId32`, `u128`)[\u200b](#mintedaccountid32-u128 \"Direct link to mintedaccountid32-u128\")\n\n*   **interface**: `api.events.balances.Minted.is`\n*   **summary**: Some amount was minted into an account.\n\n### Rescinded(`u128`)[\u200b](#rescindedu128 \"Direct link to rescindedu128\")\n\n*   **interface**: `api.events.balances.Rescinded.is`\n*   **summary**: Total issuance was decreased by `amount`, creating a debt to be balanced.\n\n### Reserved(`AccountId32`, `u128`)[\u200b](#reservedaccountid32-u128 \"Direct link to reservedaccountid32-u128\")\n\n*   **interface**: `api.events.balances.Reserved.is`\n*   **summary**: Some balance was reserved (moved from free to reserved).\n\n### ReserveRepatriated(`AccountId32`, `AccountId32`, `u128`, `FrameSupportTokensMiscBalanceStatus`)[\u200b](#reserverepatriatedaccountid32-accountid32-u128-framesupporttokensmiscbalancestatus \"Direct link to reserverepatriatedaccountid32-accountid32-u128-framesupporttokensmiscbalancestatus\")\n\n*   **interface**: `api.events.balances.ReserveRepatriated.is`\n*   **summary**: Some balance was moved from the reserve of the first account to the second account. Final argument indicates the destination balance type.\n\n### Restored(`AccountId32`, `u128`)[\u200b](#restoredaccountid32-u128 \"Direct link to restoredaccountid32-u128\")\n\n*   **interface**: `api.events.balances.Restored.is`\n*   **summary**: Some amount was restored into an account.\n\n### Slashed(`AccountId32`, `u128`)[\u200b](#slashedaccountid32-u128 \"Direct link to slashedaccountid32-u128\")\n\n*   **interface**: `api.events.balances.Slashed.is`\n*   **summary**: Some amount was removed from the account (e.g. for misbehavior).\n\n### Suspended(`AccountId32`, `u128`)[\u200b](#suspendedaccountid32-u128 \"Direct link to suspendedaccountid32-u128\")\n\n*   **interface**: `api.events.balances.Suspended.is`\n*   **summary**: Some amount was suspended from an account (it can be restored later).\n\n### Thawed(`AccountId32`, `u128`)[\u200b](#thawedaccountid32-u128 \"Direct link to thawedaccountid32-u128\")\n\n*   **interface**: `api.events.balances.Thawed.is`\n*   **summary**: Some balance was thawed.\n\n### Transfer(`AccountId32`, `AccountId32`, `u128`)[\u200b](#transferaccountid32-accountid32-u128 \"Direct link to transferaccountid32-accountid32-u128\")\n\n*   **interface**: `api.events.balances.Transfer.is`\n*   **summary**: Transfer succeeded.\n\n### Unlocked(`AccountId32`, `u128`)[\u200b](#unlockedaccountid32-u128 \"Direct link to unlockedaccountid32-u128\")\n\n*   **interface**: `api.events.balances.Unlocked.is`\n*   **summary**: Some balance was unlocked.\n\n### Unreserved(`AccountId32`, `u128`)[\u200b](#unreservedaccountid32-u128 \"Direct link to unreservedaccountid32-u128\")\n\n*   **interface**: `api.events.balances.Unreserved.is`\n*   **summary**: Some balance was unreserved (moved from reserved to free).\n\n### Upgraded(`AccountId32`)[\u200b](#upgradedaccountid32 \"Direct link to upgradedaccountid32\")\n\n*   **interface**: `api.events.balances.Upgraded.is`\n*   **summary**: An account was upgraded.\n\n### Withdraw(`AccountId32`, `u128`)[\u200b](#withdrawaccountid32-u128 \"Direct link to withdrawaccountid32-u128\")\n\n*   **interface**: `api.events.balances.Withdraw.is`\n*   **summary**: Some amount was withdrawn from the account (e.g. for transaction fees).\n\n* * *\n\nbounties[\u200b](#bounties \"Direct link to bounties\")\n\n-------------------------------------------------\n\n### BountyApproved(`u32`)[\u200b](#bountyapprovedu32 \"Direct link to bountyapprovedu32\")\n\n*   **interface**: `api.events.bounties.BountyApproved.is`\n*   **summary**: A bounty is approved.\n\n### BountyAwarded(`u32`, `AccountId32`)[\u200b](#bountyawardedu32-accountid32 \"Direct link to bountyawardedu32-accountid32\")\n\n*   **interface**: `api.events.bounties.BountyAwarded.is`\n*   **summary**: A bounty is awarded to a beneficiary.\n\n### BountyBecameActive(`u32`)[\u200b](#bountybecameactiveu32 \"Direct link to bountybecameactiveu32\")\n\n*   **interface**: `api.events.bounties.BountyBecameActive.is`\n*   **summary**: A bounty proposal is funded and became active.\n\n### BountyCanceled(`u32`)[\u200b](#bountycanceledu32 \"Direct link to bountycanceledu32\")\n\n*   **interface**: `api.events.bounties.BountyCanceled.is`\n*   **summary**: A bounty is cancelled.\n\n### BountyClaimed(`u32`, `u128`, `AccountId32`)[\u200b](#bountyclaimedu32-u128-accountid32 \"Direct link to bountyclaimedu32-u128-accountid32\")\n\n*   **interface**: `api.events.bounties.BountyClaimed.is`\n*   **summary**: A bounty is claimed by beneficiary.\n\n### BountyExtended(`u32`)[\u200b](#bountyextendedu32 \"Direct link to bountyextendedu32\")\n\n*   **interface**: `api.events.bounties.BountyExtended.is`\n*   **summary**: A bounty expiry is extended.\n\n### BountyProposed(`u32`)[\u200b](#bountyproposedu32 \"Direct link to bountyproposedu32\")\n\n*   **interface**: `api.events.bounties.BountyProposed.is`\n*   **summary**: New bounty proposal.\n\n### BountyRejected(`u32`, `u128`)[\u200b](#bountyrejectedu32-u128 \"Direct link to bountyrejectedu32-u128\")\n\n*   **interface**: `api.events.bounties.BountyRejected.is`\n*   **summary**: A bounty proposal was rejected; funds were slashed.\n\n### CuratorAccepted(`u32`, `AccountId32`)[\u200b](#curatoracceptedu32-accountid32 \"Direct link to curatoracceptedu32-accountid32\")\n\n*   **interface**: `api.events.bounties.CuratorAccepted.is`\n*   **summary**: A bounty curator is accepted.\n\n### CuratorProposed(`u32`, `AccountId32`)[\u200b](#curatorproposedu32-accountid32 \"Direct link to curatorproposedu32-accountid32\")\n\n*   **interface**: `api.events.bounties.CuratorProposed.is`\n*   **summary**: A bounty curator is proposed.\n\n### CuratorUnassigned(`u32`)[\u200b](#curatorunassignedu32 \"Direct link to curatorunassignedu32\")\n\n*   **interface**: `api.events.bounties.CuratorUnassigned.is`\n*   **summary**: A bounty curator is unassigned.\n\n* * *\n\nbroker[\u200b](#broker \"Direct link to broker\")\n\n-------------------------------------------\n\n### AllowedRenewalDropped(`u32`, `u16`)[\u200b](#allowedrenewaldroppedu32-u16 \"Direct link to allowedrenewaldroppedu32-u16\")\n\n*   **interface**: `api.events.broker.AllowedRenewalDropped.is`\n*   **summary**: Some historical Instantaneous Core Pool payment record has been dropped.\n\n### Assigned(`PalletBrokerRegionId`, `u32`, `u32`)[\u200b](#assignedpalletbrokerregionid-u32-u32 \"Direct link to assignedpalletbrokerregionid-u32-u32\")\n\n*   **interface**: `api.events.broker.Assigned.is`\n*   **summary**: A Region has been assigned to a particular task.\n\n### ClaimsReady(`u32`, `u128`, `u128`)[\u200b](#claimsreadyu32-u128-u128 \"Direct link to claimsreadyu32-u128-u128\")\n\n*   **interface**: `api.events.broker.ClaimsReady.is`\n*   **summary**: Some historical Instantaneous Core Pool Revenue is ready for payout claims.\n\n### ContributionDropped(`PalletBrokerRegionId`)[\u200b](#contributiondroppedpalletbrokerregionid \"Direct link to contributiondroppedpalletbrokerregionid\")\n\n*   **interface**: `api.events.broker.ContributionDropped.is`\n*   **summary**: Some historical Instantaneous Core Pool contribution record has been dropped.\n\n### CoreAssigned(`u16`, `u32`, `Vec<(PalletBrokerCoretimeInterfaceCoreAssignment,u16)>`)[\u200b](#coreassignedu16-u32-vecpalletbrokercoretimeinterfacecoreassignmentu16 \"Direct link to coreassignedu16-u32-vecpalletbrokercoretimeinterfacecoreassignmentu16\")\n\n*   **interface**: `api.events.broker.CoreAssigned.is`\n*   **summary**: A Core has been assigned to one or more tasks and/or the Pool on the Relay-chain.\n\n### CoreCountChanged(`u16`)[\u200b](#corecountchangedu16 \"Direct link to corecountchangedu16\")\n\n*   **interface**: `api.events.broker.CoreCountChanged.is`\n*   **summary**: The number of cores available for scheduling has changed.\n\n### CoreCountRequested(`u16`)[\u200b](#corecountrequestedu16 \"Direct link to corecountrequestedu16\")\n\n*   **interface**: `api.events.broker.CoreCountRequested.is`\n*   **summary**: A new number of cores has been requested.\n\n### CreditPurchased(`AccountId32`, `AccountId32`, `u128`)[\u200b](#creditpurchasedaccountid32-accountid32-u128 \"Direct link to creditpurchasedaccountid32-accountid32-u128\")\n\n*   **interface**: `api.events.broker.CreditPurchased.is`\n*   **summary**: Some Instantaneous Coretime Pool credit has been purchased.\n\n### HistoryDropped(`u32`, `u128`)[\u200b](#historydroppedu32-u128 \"Direct link to historydroppedu32-u128\")\n\n*   **interface**: `api.events.broker.HistoryDropped.is`\n*   **summary**: Some historical Instantaneous Core Pool payment record has been dropped.\n\n### HistoryIgnored(`u32`, `u128`)[\u200b](#historyignoredu32-u128 \"Direct link to historyignoredu32-u128\")\n\n*   **interface**: `api.events.broker.HistoryIgnored.is`\n*   **summary**: Some historical Instantaneous Core Pool payment record has been ignored because the timeslice was already known. Governance may need to intervene.\n\n### HistoryInitialized(`u32`, `u32`, `u32`)[\u200b](#historyinitializedu32-u32-u32 \"Direct link to historyinitializedu32-u32-u32\")\n\n*   **interface**: `api.events.broker.HistoryInitialized.is`\n*   **summary**: Some historical Instantaneous Core Pool payment record has been initialized.\n\n### Interlaced(`PalletBrokerRegionId`, `(PalletBrokerRegionId,PalletBrokerRegionId)`)[\u200b](#interlacedpalletbrokerregionid-palletbrokerregionidpalletbrokerregionid \"Direct link to interlacedpalletbrokerregionid-palletbrokerregionidpalletbrokerregionid\")\n\n*   **interface**: `api.events.broker.Interlaced.is`\n*   **summary**: A Region has been converted into two overlapping Regions each of lesser regularity.\n\n### Leased(`u32`, `u32`)[\u200b](#leasedu32-u32 \"Direct link to leasedu32-u32\")\n\n*   **interface**: `api.events.broker.Leased.is`\n*   **summary**: A new lease has been created.\n\n### LeaseEnding(`u32`, `u32`)[\u200b](#leaseendingu32-u32 \"Direct link to leaseendingu32-u32\")\n\n*   **interface**: `api.events.broker.LeaseEnding.is`\n*   **summary**: A lease is about to end.\n\n### Partitioned(`PalletBrokerRegionId`, `(PalletBrokerRegionId,PalletBrokerRegionId)`)[\u200b](#partitionedpalletbrokerregionid-palletbrokerregionidpalletbrokerregionid \"Direct link to partitionedpalletbrokerregionid-palletbrokerregionidpalletbrokerregionid\")\n\n*   **interface**: `api.events.broker.Partitioned.is`\n*   **summary**: A Region has been split into two non-overlapping Regions.\n\n### Pooled(`PalletBrokerRegionId`, `u32`)[\u200b](#pooledpalletbrokerregionid-u32 \"Direct link to pooledpalletbrokerregionid-u32\")\n\n*   **interface**: `api.events.broker.Pooled.is`\n*   **summary**: A Region has been added to the Instantaneous Coretime Pool.\n\n### Purchased(`AccountId32`, `PalletBrokerRegionId`, `u128`, `u32`)[\u200b](#purchasedaccountid32-palletbrokerregionid-u128-u32 \"Direct link to purchasedaccountid32-palletbrokerregionid-u128-u32\")\n\n*   **interface**: `api.events.broker.Purchased.is`\n*   **summary**: A Region of Bulk Coretime has been purchased.\n\n### RegionDropped(`PalletBrokerRegionId`, `u32`)[\u200b](#regiondroppedpalletbrokerregionid-u32 \"Direct link to regiondroppedpalletbrokerregionid-u32\")\n\n*   **interface**: `api.events.broker.RegionDropped.is`\n*   **summary**: A Region has been dropped due to being out of date.\n\n### Renewable(`u16`, `u128`, `u32`, `Vec<PalletBrokerScheduleItem>`)[\u200b](#renewableu16-u128-u32-vecpalletbrokerscheduleitem \"Direct link to renewableu16-u128-u32-vecpalletbrokerscheduleitem\")\n\n*   **interface**: `api.events.broker.Renewable.is`\n*   **summary**: The workload of a core has become renewable.\n\n### Renewed(`AccountId32`, `u128`, `u16`, `u16`, `u32`, `u32`, `Vec<PalletBrokerScheduleItem>`)[\u200b](#renewedaccountid32-u128-u16-u16-u32-u32-vecpalletbrokerscheduleitem \"Direct link to renewedaccountid32-u128-u16-u16-u32-u32-vecpalletbrokerscheduleitem\")\n\n*   **interface**: `api.events.broker.Renewed.is`\n*   **summary**: A workload has been renewed.\n\n### ReservationCancelled(`u32`, `Vec<PalletBrokerScheduleItem>`)[\u200b](#reservationcancelledu32-vecpalletbrokerscheduleitem \"Direct link to reservationcancelledu32-vecpalletbrokerscheduleitem\")\n\n*   **interface**: `api.events.broker.ReservationCancelled.is`\n*   **summary**: A reservation for a workload has been cancelled.\n\n### ReservationMade(`u32`, `Vec<PalletBrokerScheduleItem>`)[\u200b](#reservationmadeu32-vecpalletbrokerscheduleitem \"Direct link to reservationmadeu32-vecpalletbrokerscheduleitem\")\n\n*   **interface**: `api.events.broker.ReservationMade.is`\n*   **summary**: There is a new reservation for a workload.\n\n### RevenueClaimBegun(`PalletBrokerRegionId`, `u32`)[\u200b](#revenueclaimbegunpalletbrokerregionid-u32 \"Direct link to revenueclaimbegunpalletbrokerregionid-u32\")\n\n*   **interface**: `api.events.broker.RevenueClaimBegun.is`\n*   **summary**: The act of claiming revenue has begun.\n\n### RevenueClaimItem(`u32`, `u128`)[\u200b](#revenueclaimitemu32-u128 \"Direct link to revenueclaimitemu32-u128\")\n\n*   **interface**: `api.events.broker.RevenueClaimItem.is`\n*   **summary**: A particular timeslice has a non-zero claim.\n\n### RevenueClaimPaid(`AccountId32`, `u128`, `Option<PalletBrokerRegionId>`)[\u200b](#revenueclaimpaidaccountid32-u128-optionpalletbrokerregionid \"Direct link to revenueclaimpaidaccountid32-u128-optionpalletbrokerregionid\")\n\n*   **interface**: `api.events.broker.RevenueClaimPaid.is`\n*   **summary**: A revenue claim has (possibly only in part) been paid.\n\n### SaleInitialized(`u32`, `u32`, `u128`, `u128`, `u32`, `u32`, `u16`, `u16`)[\u200b](#saleinitializedu32-u32-u128-u128-u32-u32-u16-u16 \"Direct link to saleinitializedu32-u32-u128-u128-u32-u32-u16-u16\")\n\n*   **interface**: `api.events.broker.SaleInitialized.is`\n*   **summary**: A new sale has been initialized.\n\n### SalesStarted(`u128`, `u16`)[\u200b](#salesstartedu128-u16 \"Direct link to salesstartedu128-u16\")\n\n*   **interface**: `api.events.broker.SalesStarted.is`\n*   **summary**: The sale rotation has been started and a new sale is imminent.\n\n### Transferred(`PalletBrokerRegionId`, `u32`, `AccountId32`, `AccountId32`)[\u200b](#transferredpalletbrokerregionid-u32-accountid32-accountid32 \"Direct link to transferredpalletbrokerregionid-u32-accountid32-accountid32\")\n\n*   **interface**: `api.events.broker.Transferred.is`\n*   **summary**: Ownership of a Region has been transferred.\n\n* * *\n\nchildBounties[\u200b](#childbounties \"Direct link to childBounties\")\n\n----------------------------------------------------------------\n\n### Added(`u32`, `u32`)[\u200b](#addedu32-u32 \"Direct link to addedu32-u32\")\n\n*   **interface**: `api.events.childBounties.Added.is`\n*   **summary**: A child-bounty is added.\n\n### Awarded(`u32`, `u32`, `AccountId32`)[\u200b](#awardedu32-u32-accountid32 \"Direct link to awardedu32-u32-accountid32\")\n\n*   **interface**: `api.events.childBounties.Awarded.is`\n*   **summary**: A child-bounty is awarded to a beneficiary.\n\n### Canceled(`u32`, `u32`)[\u200b](#canceledu32-u32 \"Direct link to canceledu32-u32\")\n\n*   **interface**: `api.events.childBounties.Canceled.is`\n*   **summary**: A child-bounty is cancelled.\n\n### Claimed(`u32`, `u32`, `u128`, `AccountId32`)[\u200b](#claimedu32-u32-u128-accountid32 \"Direct link to claimedu32-u32-u128-accountid32\")\n\n*   **interface**: `api.events.childBounties.Claimed.is`\n*   **summary**: A child-bounty is claimed by beneficiary.\n\n* * *\n\ncontracts[\u200b](#contracts \"Direct link to contracts\")\n\n----------------------------------------------------\n\n### Called(`PalletContractsOrigin`, `AccountId32`)[\u200b](#calledpalletcontractsorigin-accountid32 \"Direct link to calledpalletcontractsorigin-accountid32\")\n\n*   **interface**: `api.events.contracts.Called.is`\n    \n*   **summary**: A contract was called either by a plain account or another contract.\n    \n    #### Note[\u200b](#note \"Direct link to Note\")\n    \n    Please keep in mind that like all events this is only emitted for successful calls. This is because on failure all storage changes including events are rolled back.\n    \n\n### CodeRemoved(`H256`, `u128`, `AccountId32`)[\u200b](#coderemovedh256-u128-accountid32 \"Direct link to coderemovedh256-u128-accountid32\")\n\n*   **interface**: `api.events.contracts.CodeRemoved.is`\n*   **summary**: A code with the specified hash was removed.\n\n### CodeStored(`H256`, `u128`, `AccountId32`)[\u200b](#codestoredh256-u128-accountid32 \"Direct link to codestoredh256-u128-accountid32\")\n\n*   **interface**: `api.events.contracts.CodeStored.is`\n*   **summary**: Code with the specified hash has been stored.\n\n### ContractCodeUpdated(`AccountId32`, `H256`, `H256`)[\u200b](#contractcodeupdatedaccountid32-h256-h256 \"Direct link to contractcodeupdatedaccountid32-h256-h256\")\n\n*   **interface**: `api.events.contracts.ContractCodeUpdated.is`\n*   **summary**: A contract's code was updated.\n\n### ContractEmitted(`AccountId32`, `Bytes`)[\u200b](#contractemittedaccountid32-bytes \"Direct link to contractemittedaccountid32-bytes\")\n\n*   **interface**: `api.events.contracts.ContractEmitted.is`\n*   **summary**: A custom event emitted by the contract.\n\n### DelegateCalled(`AccountId32`, `H256`)[\u200b](#delegatecalledaccountid32-h256 \"Direct link to delegatecalledaccountid32-h256\")\n\n*   **interface**: `api.events.contracts.DelegateCalled.is`\n    \n*   **summary**: A contract delegate called a code hash.\n    \n    #### Note[\u200b](#note-1 \"Direct link to Note\")\n    \n    Please keep in mind that like all events this is only emitted for successful calls. This is because on failure all storage changes including events are rolled back.\n    \n\n### Instantiated(`AccountId32`, `AccountId32`)[\u200b](#instantiatedaccountid32-accountid32 \"Direct link to instantiatedaccountid32-accountid32\")\n\n*   **interface**: `api.events.contracts.Instantiated.is`\n*   **summary**: Contract deployed by address at the specified address.\n\n### StorageDepositTransferredAndHeld(`AccountId32`, `AccountId32`, `u128`)[\u200b](#storagedeposittransferredandheldaccountid32-accountid32-u128 \"Direct link to storagedeposittransferredandheldaccountid32-accountid32-u128\")\n\n*   **interface**: `api.events.contracts.StorageDepositTransferredAndHeld.is`\n*   **summary**: Some funds have been transferred and held as storage deposit.\n\n### StorageDepositTransferredAndReleased(`AccountId32`, `AccountId32`, `u128`)[\u200b](#storagedeposittransferredandreleasedaccountid32-accountid32-u128 \"Direct link to storagedeposittransferredandreleasedaccountid32-accountid32-u128\")\n\n*   **interface**: `api.events.contracts.StorageDepositTransferredAndReleased.is`\n*   **summary**: Some storage deposit funds have been transferred and released.\n\n### Terminated(`AccountId32`, `AccountId32`)[\u200b](#terminatedaccountid32-accountid32 \"Direct link to terminatedaccountid32-accountid32\")\n\n*   **interface**: `api.events.contracts.Terminated.is`\n    \n*   **summary**: Contract has been removed.\n    \n    #### Note[\u200b](#note-2 \"Direct link to Note\")\n    \n    The only way for a contract to be removed and emitting this event is by calling `seal_terminate`.\n    \n\n* * *\n\nconvictionVoting[\u200b](#convictionvoting \"Direct link to convictionVoting\")\n\n-------------------------------------------------------------------------\n\n### Delegated(`AccountId32`, `AccountId32`)[\u200b](#delegatedaccountid32-accountid32 \"Direct link to delegatedaccountid32-accountid32\")\n\n*   **interface**: `api.events.convictionVoting.Delegated.is`\n*   **summary**: An account has delegated their vote to another account. \\[who, target\\]\n\n### Undelegated(`AccountId32`)[\u200b](#undelegatedaccountid32 \"Direct link to undelegatedaccountid32\")\n\n*   **interface**: `api.events.convictionVoting.Undelegated.is`\n*   **summary**: An \\[account\\] has cancelled a previous delegation operation.\n\n* * *\n\ncoreFellowship[\u200b](#corefellowship \"Direct link to coreFellowship\")\n\n-------------------------------------------------------------------\n\n### ActiveChanged(`AccountId32`, `bool`)[\u200b](#activechangedaccountid32-bool \"Direct link to activechangedaccountid32-bool\")\n\n*   **interface**: `api.events.coreFellowship.ActiveChanged.is`\n*   **summary**: Member activity flag has been set.\n\n### Demoted(`AccountId32`, `u16`)[\u200b](#demotedaccountid32-u16 \"Direct link to demotedaccountid32-u16\")\n\n*   **interface**: `api.events.coreFellowship.Demoted.is`\n*   **summary**: Member has been demoted to the given (non-zero) rank.\n\n### EvidenceJudged(`AccountId32`, `PalletCoreFellowshipWish`, `Bytes`, `u16`, `Option<u16>`)[\u200b](#evidencejudgedaccountid32-palletcorefellowshipwish-bytes-u16-optionu16 \"Direct link to evidencejudgedaccountid32-palletcorefellowshipwish-bytes-u16-optionu16\")\n\n*   **interface**: `api.events.coreFellowship.EvidenceJudged.is`\n*   **summary**: Some submitted evidence was judged and removed. There may or may not have been a change to the rank, but in any case, `last_proof` is reset.\n\n### Imported(`AccountId32`, `u16`)[\u200b](#importedaccountid32-u16 \"Direct link to importedaccountid32-u16\")\n\n*   **interface**: `api.events.coreFellowship.Imported.is`\n*   **summary**: Pre-ranked account has been inducted at their current rank.\n\n### Inducted(`AccountId32`)[\u200b](#inductedaccountid32 \"Direct link to inductedaccountid32\")\n\n*   **interface**: `api.events.coreFellowship.Inducted.is`\n*   **summary**: Member has begun being tracked in this pallet.\n\n### Offboarded(`AccountId32`)[\u200b](#offboardedaccountid32 \"Direct link to offboardedaccountid32\")\n\n*   **interface**: `api.events.coreFellowship.Offboarded.is`\n*   **summary**: Member has been removed from being tracked in this pallet (i.e. because rank is now zero).\n\n### ParamsChanged(`PalletCoreFellowshipParamsType`)[\u200b](#paramschangedpalletcorefellowshipparamstype \"Direct link to paramschangedpalletcorefellowshipparamstype\")\n\n*   **interface**: `api.events.coreFellowship.ParamsChanged.is`\n*   **summary**: Parameters for the pallet have changed.\n\n### Promoted(`AccountId32`, `u16`)[\u200b](#promotedaccountid32-u16 \"Direct link to promotedaccountid32-u16\")\n\n*   **interface**: `api.events.coreFellowship.Promoted.is`\n*   **summary**: Member has been promoted to the given rank.\n\n### Proven(`AccountId32`, `u16`)[\u200b](#provenaccountid32-u16 \"Direct link to provenaccountid32-u16\")\n\n*   **interface**: `api.events.coreFellowship.Proven.is`\n*   **summary**: Member has been proven at their current rank, postponing auto-demotion.\n\n### Requested(`AccountId32`, `PalletCoreFellowshipWish`)[\u200b](#requestedaccountid32-palletcorefellowshipwish \"Direct link to requestedaccountid32-palletcorefellowshipwish\")\n\n*   **interface**: `api.events.coreFellowship.Requested.is`\n*   **summary**: Member has stated evidence of their efforts their request for rank.\n\n* * *\n\ncouncil[\u200b](#council \"Direct link to council\")\n\n----------------------------------------------\n\n### Approved(`H256`)[\u200b](#approvedh256-1 \"Direct link to approvedh256-1\")\n\n*   **interface**: `api.events.council.Approved.is`\n*   **summary**: A motion was approved by the required threshold.\n\n### Closed(`H256`, `u32`, `u32`)[\u200b](#closedh256-u32-u32-1 \"Direct link to closedh256-u32-u32-1\")\n\n*   **interface**: `api.events.council.Closed.is`\n*   **summary**: A proposal was closed because its threshold was reached or after its duration was up.\n\n### Disapproved(`H256`)[\u200b](#disapprovedh256-1 \"Direct link to disapprovedh256-1\")\n\n*   **interface**: `api.events.council.Disapproved.is`\n*   **summary**: A motion was not approved by the required threshold.\n\n### Executed(`H256`, `Result<Null, SpRuntimeDispatchError>`)[\u200b](#executedh256-resultnull-spruntimedispatcherror-1 \"Direct link to executedh256-resultnull-spruntimedispatcherror-1\")\n\n*   **interface**: `api.events.council.Executed.is`\n*   **summary**: A motion was executed; result will be `Ok` if it returned without error.\n\n### MemberExecuted(`H256`, `Result<Null, SpRuntimeDispatchError>`)[\u200b](#memberexecutedh256-resultnull-spruntimedispatcherror-1 \"Direct link to memberexecutedh256-resultnull-spruntimedispatcherror-1\")\n\n*   **interface**: `api.events.council.MemberExecuted.is`\n*   **summary**: A single member did some action; result will be `Ok` if it returned without error.\n\n### Proposed(`AccountId32`, `u32`, `H256`, `u32`)[\u200b](#proposedaccountid32-u32-h256-u32-1 \"Direct link to proposedaccountid32-u32-h256-u32-1\")\n\n*   **interface**: `api.events.council.Proposed.is`\n*   **summary**: A motion (given hash) has been proposed (by given account) with a threshold (given `MemberCount`).\n\n### Voted(`AccountId32`, `H256`, `bool`, `u32`, `u32`)[\u200b](#votedaccountid32-h256-bool-u32-u32-1 \"Direct link to votedaccountid32-h256-bool-u32-u32-1\")\n\n*   **interface**: `api.events.council.Voted.is`\n*   **summary**: A motion (given hash) has been voted on by given account, leaving a tally (yes votes and no votes given respectively as `MemberCount`).\n\n* * *\n\ndemocracy[\u200b](#democracy \"Direct link to democracy\")\n\n----------------------------------------------------\n\n### Blacklisted(`H256`)[\u200b](#blacklistedh256 \"Direct link to blacklistedh256\")\n\n*   **interface**: `api.events.democracy.Blacklisted.is`\n*   **summary**: A proposal\\_hash has been blacklisted permanently.\n\n### Cancelled(`u32`)[\u200b](#cancelledu32 \"Direct link to cancelledu32\")\n\n*   **interface**: `api.events.democracy.Cancelled.is`\n*   **summary**: A referendum has been cancelled.\n\n### Delegated(`AccountId32`, `AccountId32`)[\u200b](#delegatedaccountid32-accountid32-1 \"Direct link to delegatedaccountid32-accountid32-1\")\n\n*   **interface**: `api.events.democracy.Delegated.is`\n*   **summary**: An account has delegated their vote to another account.\n\n### ExternalTabled()[\u200b](#externaltabled \"Direct link to ExternalTabled()\")\n\n*   **interface**: `api.events.democracy.ExternalTabled.is`\n*   **summary**: An external proposal has been tabled.\n\n### MetadataCleared(`PalletDemocracyMetadataOwner`, `H256`)[\u200b](#metadataclearedpalletdemocracymetadataowner-h256 \"Direct link to metadataclearedpalletdemocracymetadataowner-h256\")\n\n*   **interface**: `api.events.democracy.MetadataCleared.is`\n*   **summary**: Metadata for a proposal or a referendum has been cleared.\n\n### MetadataSet(`PalletDemocracyMetadataOwner`, `H256`)[\u200b](#metadatasetpalletdemocracymetadataowner-h256 \"Direct link to metadatasetpalletdemocracymetadataowner-h256\")\n\n*   **interface**: `api.events.democracy.MetadataSet.is`\n*   **summary**: Metadata for a proposal or a referendum has been set.\n\n### MetadataTransferred(`PalletDemocracyMetadataOwner`, `PalletDemocracyMetadataOwner`, `H256`)[\u200b](#metadatatransferredpalletdemocracymetadataowner-palletdemocracymetadataowner-h256 \"Direct link to metadatatransferredpalletdemocracymetadataowner-palletdemocracymetadataowner-h256\")\n\n*   **interface**: `api.events.democracy.MetadataTransferred.is`\n*   **summary**: Metadata has been transferred to new owner.\n\n### NotPassed(`u32`)[\u200b](#notpassedu32 \"Direct link to notpassedu32\")\n\n*   **interface**: `api.events.democracy.NotPassed.is`\n*   **summary**: A proposal has been rejected by referendum.\n\n### Passed(`u32`)[\u200b](#passedu32 \"Direct link to passedu32\")\n\n*   **interface**: `api.events.democracy.Passed.is`\n*   **summary**: A proposal has been approved by referendum.\n\n### ProposalCanceled(`u32`)[\u200b](#proposalcanceledu32 \"Direct link to proposalcanceledu32\")\n\n*   **interface**: `api.events.democracy.ProposalCanceled.is`\n*   **summary**: A proposal got canceled.\n\n### Proposed(`u32`, `u128`)[\u200b](#proposedu32-u128 \"Direct link to proposedu32-u128\")\n\n*   **interface**: `api.events.democracy.Proposed.is`\n*   **summary**: A motion has been proposed by a public account.\n\n### Seconded(`AccountId32`, `u32`)[\u200b](#secondedaccountid32-u32 \"Direct link to secondedaccountid32-u32\")\n\n*   **interface**: `api.events.democracy.Seconded.is`\n*   **summary**: An account has secconded a proposal\n\n### Started(`u32`, `PalletDemocracyVoteThreshold`)[\u200b](#startedu32-palletdemocracyvotethreshold \"Direct link to startedu32-palletdemocracyvotethreshold\")\n\n*   **interface**: `api.events.democracy.Started.is`\n*   **summary**: A referendum has begun.\n\n### Tabled(`u32`, `u128`)[\u200b](#tabledu32-u128 \"Direct link to tabledu32-u128\")\n\n*   **interface**: `api.events.democracy.Tabled.is`\n*   **summary**: A public proposal has been tabled for referendum vote.\n\n### Undelegated(`AccountId32`)[\u200b](#undelegatedaccountid32-1 \"Direct link to undelegatedaccountid32-1\")\n\n*   **interface**: `api.events.democracy.Undelegated.is`\n*   **summary**: An account has cancelled a previous delegation operation.\n\n### Vetoed(`AccountId32`, `H256`, `u32`)[\u200b](#vetoedaccountid32-h256-u32 \"Direct link to vetoedaccountid32-h256-u32\")\n\n*   **interface**: `api.events.democracy.Vetoed.is`\n*   **summary**: An external proposal has been vetoed.\n\n### Voted(`AccountId32`, `u32`, `PalletDemocracyVoteAccountVote`)[\u200b](#votedaccountid32-u32-palletdemocracyvoteaccountvote \"Direct link to votedaccountid32-u32-palletdemocracyvoteaccountvote\")\n\n*   **interface**: `api.events.democracy.Voted.is`\n*   **summary**: An account has voted in a referendum\n\n* * *\n\nelectionProviderMultiPhase[\u200b](#electionprovidermultiphase \"Direct link to electionProviderMultiPhase\")\n\n-------------------------------------------------------------------------------------------------------\n\n### ElectionFailed()[\u200b](#electionfailed \"Direct link to ElectionFailed()\")\n\n*   **interface**: `api.events.electionProviderMultiPhase.ElectionFailed.is`\n    \n*   **summary**: An election failed.\n    \n    Not much can be said about which computes failed in the process.\n    \n\n### ElectionFinalized(`PalletElectionProviderMultiPhaseElectionCompute`, `SpNposElectionsElectionScore`)[\u200b](#electionfinalizedpalletelectionprovidermultiphaseelectioncompute-spnposelectionselectionscore \"Direct link to electionfinalizedpalletelectionprovidermultiphaseelectioncompute-spnposelectionselectionscore\")\n\n*   **interface**: `api.events.electionProviderMultiPhase.ElectionFinalized.is`\n*   **summary**: The election has been finalized, with the given computation and score.\n\n### PhaseTransitioned(`PalletElectionProviderMultiPhasePhase`, `PalletElectionProviderMultiPhasePhase`, `u32`)[\u200b](#phasetransitionedpalletelectionprovidermultiphasephase-palletelectionprovidermultiphasephase-u32 \"Direct link to phasetransitionedpalletelectionprovidermultiphasephase-palletelectionprovidermultiphasephase-u32\")\n\n*   **interface**: `api.events.electionProviderMultiPhase.PhaseTransitioned.is`\n*   **summary**: There was a phase transition in a given round.\n\n### Rewarded(`AccountId32`, `u128`)[\u200b](#rewardedaccountid32-u128 \"Direct link to rewardedaccountid32-u128\")\n\n*   **interface**: `api.events.electionProviderMultiPhase.Rewarded.is`\n*   **summary**: An account has been rewarded for their signed submission being finalized.\n\n### Slashed(`AccountId32`, `u128`)[\u200b](#slashedaccountid32-u128-1 \"Direct link to slashedaccountid32-u128-1\")\n\n*   **interface**: `api.events.electionProviderMultiPhase.Slashed.is`\n*   **summary**: An account has been slashed for submitting an invalid signed submission.\n\n### SolutionStored(`PalletElectionProviderMultiPhaseElectionCompute`, `Option<AccountId32>`, `bool`)[\u200b](#solutionstoredpalletelectionprovidermultiphaseelectioncompute-optionaccountid32-bool \"Direct link to solutionstoredpalletelectionprovidermultiphaseelectioncompute-optionaccountid32-bool\")\n\n*   **interface**: `api.events.electionProviderMultiPhase.SolutionStored.is`\n    \n*   **summary**: A solution was stored with the given compute.\n    \n    The `origin` indicates the origin of the solution. If `origin` is `Some(AccountId)`, the stored solution was submited in the signed phase by a miner with the `AccountId`. Otherwise, the solution was stored either during the unsigned phase or by `T::ForceOrigin`. The `bool` is `true` when a previous solution was ejected to make room for this one.\n    \n\n* * *\n\nelections[\u200b](#elections \"Direct link to elections\")\n\n----------------------------------------------------\n\n### CandidateSlashed(`AccountId32`, `u128`)[\u200b](#candidateslashedaccountid32-u128 \"Direct link to candidateslashedaccountid32-u128\")\n\n*   **interface**: `api.events.elections.CandidateSlashed.is`\n    \n*   **summary**: A candidate was slashed by amount due to failing to obtain a seat as member or runner-up.\n    \n    Note that old members and runners-up are also candidates.\n    \n\n### ElectionError()[\u200b](#electionerror \"Direct link to ElectionError()\")\n\n*   **interface**: `api.events.elections.ElectionError.is`\n*   **summary**: Internal error happened while trying to perform election.\n\n### EmptyTerm()[\u200b](#emptyterm \"Direct link to EmptyTerm()\")\n\n*   **interface**: `api.events.elections.EmptyTerm.is`\n*   **summary**: No (or not enough) candidates existed for this round. This is different from `NewTerm(\\[\\])`. See the description of `NewTerm`.\n\n### MemberKicked(`AccountId32`)[\u200b](#memberkickedaccountid32 \"Direct link to memberkickedaccountid32\")\n\n*   **interface**: `api.events.elections.MemberKicked.is`\n*   **summary**: A member has been removed. This should always be followed by either `NewTerm` or `EmptyTerm`.\n\n### NewTerm(`Vec<(AccountId32,u128)>`)[\u200b](#newtermvecaccountid32u128 \"Direct link to newtermvecaccountid32u128\")\n\n*   **interface**: `api.events.elections.NewTerm.is`\n*   **summary**: A new term with new\\_members. This indicates that enough candidates existed to run the election, not that enough have has been elected. The inner value must be examined for this purpose. A `NewTerm(\\[\\])` indicates that some candidates got their bond slashed and none were elected, whilst `EmptyTerm` means that no candidates existed to begin with.\n\n### Renounced(`AccountId32`)[\u200b](#renouncedaccountid32 \"Direct link to renouncedaccountid32\")\n\n*   **interface**: `api.events.elections.Renounced.is`\n*   **summary**: Someone has renounced their candidacy.\n\n### SeatHolderSlashed(`AccountId32`, `u128`)[\u200b](#seatholderslashedaccountid32-u128 \"Direct link to seatholderslashedaccountid32-u128\")\n\n*   **interface**: `api.events.elections.SeatHolderSlashed.is`\n*   **summary**: A seat holder was slashed by amount by being forcefully removed from the set.\n\n* * *\n\nfastUnstake[\u200b](#fastunstake \"Direct link to fastUnstake\")\n\n----------------------------------------------------------\n\n### BatchChecked(`Vec<u32>`)[\u200b](#batchcheckedvecu32 \"Direct link to batchcheckedvecu32\")\n\n*   **interface**: `api.events.fastUnstake.BatchChecked.is`\n*   **summary**: A batch was partially checked for the given eras, but the process did not finish.\n\n### BatchFinished(`u32`)[\u200b](#batchfinishedu32 \"Direct link to batchfinishedu32\")\n\n*   **interface**: `api.events.fastUnstake.BatchFinished.is`\n    \n*   **summary**: A batch of a given size was terminated.\n    \n    This is always follows by a number of `Unstaked` or `Slashed` events, marking the end of the batch. A new batch will be created upon next block.\n    \n\n### InternalError()[\u200b](#internalerror \"Direct link to InternalError()\")\n\n*   **interface**: `api.events.fastUnstake.InternalError.is`\n*   **summary**: An internal error happened. Operations will be paused now.\n\n### Slashed(`AccountId32`, `u128`)[\u200b](#slashedaccountid32-u128-2 \"Direct link to slashedaccountid32-u128-2\")\n\n*   **interface**: `api.events.fastUnstake.Slashed.is`\n*   **summary**: A staker was slashed for requesting fast-unstake whilst being exposed.\n\n### Unstaked(`AccountId32`, `Result<Null, SpRuntimeDispatchError>`)[\u200b](#unstakedaccountid32-resultnull-spruntimedispatcherror \"Direct link to unstakedaccountid32-resultnull-spruntimedispatcherror\")\n\n*   **interface**: `api.events.fastUnstake.Unstaked.is`\n*   **summary**: A staker was unstaked.\n\n* * *\n\nglutton[\u200b](#glutton \"Direct link to glutton\")\n\n----------------------------------------------\n\n### ComputationLimitSet(`u64`)[\u200b](#computationlimitsetu64 \"Direct link to computationlimitsetu64\")\n\n*   **interface**: `api.events.glutton.ComputationLimitSet.is`\n*   **summary**: The computation limit has been updated.\n\n### PalletInitialized(`bool`)[\u200b](#palletinitializedbool \"Direct link to palletinitializedbool\")\n\n*   **interface**: `api.events.glutton.PalletInitialized.is`\n*   **summary**: The pallet has been (re)initialized.\n\n### StorageLimitSet(`u64`)[\u200b](#storagelimitsetu64 \"Direct link to storagelimitsetu64\")\n\n*   **interface**: `api.events.glutton.StorageLimitSet.is`\n*   **summary**: The storage limit has been updated.\n\n* * *\n\ngrandpa[\u200b](#grandpa \"Direct link to grandpa\")\n\n----------------------------------------------\n\n### NewAuthorities(`Vec<(SpConsensusGrandpaAppPublic,u64)>`)[\u200b](#newauthoritiesvecspconsensusgrandpaapppublicu64 \"Direct link to newauthoritiesvecspconsensusgrandpaapppublicu64\")\n\n*   **interface**: `api.events.grandpa.NewAuthorities.is`\n*   **summary**: New authority set has been applied.\n\n### Paused()[\u200b](#paused \"Direct link to Paused()\")\n\n*   **interface**: `api.events.grandpa.Paused.is`\n*   **summary**: Current authority set has been paused.\n\n### Resumed()[\u200b](#resumed \"Direct link to Resumed()\")\n\n*   **interface**: `api.events.grandpa.Resumed.is`\n*   **summary**: Current authority set has been resumed.\n\n* * *\n\nidentity[\u200b](#identity \"Direct link to identity\")\n\n-------------------------------------------------\n\n### IdentityCleared(`AccountId32`, `u128`)[\u200b](#identityclearedaccountid32-u128 \"Direct link to identityclearedaccountid32-u128\")\n\n*   **interface**: `api.events.identity.IdentityCleared.is`\n*   **summary**: A name was cleared, and the given balance returned.\n\n### IdentityKilled(`AccountId32`, `u128`)[\u200b](#identitykilledaccountid32-u128 \"Direct link to identitykilledaccountid32-u128\")\n\n*   **interface**: `api.events.identity.IdentityKilled.is`\n*   **summary**: A name was removed and the given balance slashed.\n\n### IdentitySet(`AccountId32`)[\u200b](#identitysetaccountid32 \"Direct link to identitysetaccountid32\")\n\n*   **interface**: `api.events.identity.IdentitySet.is`\n*   **summary**: A name was set or reset (which will remove all judgements).\n\n### JudgementGiven(`AccountId32`, `u32`)[\u200b](#judgementgivenaccountid32-u32 \"Direct link to judgementgivenaccountid32-u32\")\n\n*   **interface**: `api.events.identity.JudgementGiven.is`\n*   **summary**: A judgement was given by a registrar.\n\n### JudgementRequested(`AccountId32`, `u32`)[\u200b](#judgementrequestedaccountid32-u32 \"Direct link to judgementrequestedaccountid32-u32\")\n\n*   **interface**: `api.events.identity.JudgementRequested.is`\n*   **summary**: A judgement was asked from a registrar.\n\n### JudgementUnrequested(`AccountId32`, `u32`)[\u200b](#judgementunrequestedaccountid32-u32 \"Direct link to judgementunrequestedaccountid32-u32\")\n\n*   **interface**: `api.events.identity.JudgementUnrequested.is`\n*   **summary**: A judgement request was retracted.\n\n### RegistrarAdded(`u32`)[\u200b](#registraraddedu32 \"Direct link to registraraddedu32\")\n\n*   **interface**: `api.events.identity.RegistrarAdded.is`\n*   **summary**: A registrar was added.\n\n### SubIdentityAdded(`AccountId32`, `AccountId32`, `u128`)[\u200b](#subidentityaddedaccountid32-accountid32-u128 \"Direct link to subidentityaddedaccountid32-accountid32-u128\")\n\n*   **interface**: `api.events.identity.SubIdentityAdded.is`\n*   **summary**: A sub-identity was added to an identity and the deposit paid.\n\n### SubIdentityRemoved(`AccountId32`, `AccountId32`, `u128`)[\u200b](#subidentityremovedaccountid32-accountid32-u128 \"Direct link to subidentityremovedaccountid32-accountid32-u128\")\n\n*   **interface**: `api.events.identity.SubIdentityRemoved.is`\n*   **summary**: A sub-identity was removed from an identity and the deposit freed.\n\n### SubIdentityRevoked(`AccountId32`, `AccountId32`, `u128`)[\u200b](#subidentityrevokedaccountid32-accountid32-u128 \"Direct link to subidentityrevokedaccountid32-accountid32-u128\")\n\n*   **interface**: `api.events.identity.SubIdentityRevoked.is`\n*   **summary**: A sub-identity was cleared, and the given deposit repatriated from the main identity account to the sub-identity account.\n\n* * *\n\nimOnline[\u200b](#imonline \"Direct link to imOnline\")\n\n-------------------------------------------------\n\n### AllGood()[\u200b](#allgood \"Direct link to AllGood()\")\n\n*   **interface**: `api.events.imOnline.AllGood.is`\n*   **summary**: At the end of the session, no offence was committed.\n\n### HeartbeatReceived(`PalletImOnlineSr25519AppSr25519Public`)[\u200b](#heartbeatreceivedpalletimonlinesr25519appsr25519public \"Direct link to heartbeatreceivedpalletimonlinesr25519appsr25519public\")\n\n*   **interface**: `api.events.imOnline.HeartbeatReceived.is`\n*   **summary**: A new heartbeat was received from `AuthorityId`.\n\n### SomeOffline(`Vec<(AccountId32,SpStakingExposure)>`)[\u200b](#someofflinevecaccountid32spstakingexposure \"Direct link to someofflinevecaccountid32spstakingexposure\")\n\n*   **interface**: `api.events.imOnline.SomeOffline.is`\n*   **summary**: At the end of the session, at least one validator was found to be offline.\n\n* * *\n\nindices[\u200b](#indices \"Direct link to indices\")\n\n----------------------------------------------\n\n### IndexAssigned(`AccountId32`, `u32`)[\u200b](#indexassignedaccountid32-u32 \"Direct link to indexassignedaccountid32-u32\")\n\n*   **interface**: `api.events.indices.IndexAssigned.is`\n*   **summary**: A account index was assigned.\n\n### IndexFreed(`u32`)[\u200b](#indexfreedu32 \"Direct link to indexfreedu32\")\n\n*   **interface**: `api.events.indices.IndexFreed.is`\n*   **summary**: A account index has been freed up (unassigned).\n\n### IndexFrozen(`u32`, `AccountId32`)[\u200b](#indexfrozenu32-accountid32 \"Direct link to indexfrozenu32-accountid32\")\n\n*   **interface**: `api.events.indices.IndexFrozen.is`\n*   **summary**: A account index has been frozen to its current account ID.\n\n* * *\n\nlottery[\u200b](#lottery \"Direct link to lottery\")\n\n----------------------------------------------\n\n### CallsUpdated()[\u200b](#callsupdated \"Direct link to CallsUpdated()\")\n\n*   **interface**: `api.events.lottery.CallsUpdated.is`\n*   **summary**: A new set of calls have been set!\n\n### LotteryStarted()[\u200b](#lotterystarted \"Direct link to LotteryStarted()\")\n\n*   **interface**: `api.events.lottery.LotteryStarted.is`\n*   **summary**: A lottery has been started!\n\n### TicketBought(`AccountId32`, `(u8,u8)`)[\u200b](#ticketboughtaccountid32-u8u8 \"Direct link to ticketboughtaccountid32-u8u8\")\n\n*   **interface**: `api.events.lottery.TicketBought.is`\n*   **summary**: A ticket has been bought!\n\n### Winner(`AccountId32`, `u128`)[\u200b](#winneraccountid32-u128 \"Direct link to winneraccountid32-u128\")\n\n*   **interface**: `api.events.lottery.Winner.is`\n*   **summary**: A winner has been chosen!\n\n* * *\n\nmessageQueue[\u200b](#messagequeue \"Direct link to messageQueue\")\n\n-------------------------------------------------------------\n\n### OverweightEnqueued(`[u8;32]`, `u32`, `u32`, `u32`)[\u200b](#overweightenqueuedu832-u32-u32-u32 \"Direct link to overweightenqueuedu832-u32-u32-u32\")\n\n*   **interface**: `api.events.messageQueue.OverweightEnqueued.is`\n*   **summary**: Message placed in overweight queue.\n\n### PageReaped(`u32`, `u32`)[\u200b](#pagereapedu32-u32 \"Direct link to pagereapedu32-u32\")\n\n*   **interface**: `api.events.messageQueue.PageReaped.is`\n*   **summary**: This page was reaped.\n\n### Processed(`H256`, `u32`, `SpWeightsWeightV2Weight`, `bool`)[\u200b](#processedh256-u32-spweightsweightv2weight-bool \"Direct link to processedh256-u32-spweightsweightv2weight-bool\")\n\n*   **interface**: `api.events.messageQueue.Processed.is`\n*   **summary**: Message is processed.\n\n### ProcessingFailed(`H256`, `u32`, `FrameSupportMessagesProcessMessageError`)[\u200b](#processingfailedh256-u32-framesupportmessagesprocessmessageerror \"Direct link to processingfailedh256-u32-framesupportmessagesprocessmessageerror\")\n\n*   **interface**: `api.events.messageQueue.ProcessingFailed.is`\n*   **summary**: Message discarded due to an error in the `MessageProcessor` (usually a format error).\n\n* * *\n\nmultisig[\u200b](#multisig \"Direct link to multisig\")\n\n-------------------------------------------------\n\n### MultisigApproval(`AccountId32`, `PalletMultisigTimepoint`, `AccountId32`, `[u8;32]`)[\u200b](#multisigapprovalaccountid32-palletmultisigtimepoint-accountid32-u832 \"Direct link to multisigapprovalaccountid32-palletmultisigtimepoint-accountid32-u832\")\n\n*   **interface**: `api.events.multisig.MultisigApproval.is`\n*   **summary**: A multisig operation has been approved by someone.\n\n### MultisigCancelled(`AccountId32`, `PalletMultisigTimepoint`, `AccountId32`, `[u8;32]`)[\u200b](#multisigcancelledaccountid32-palletmultisigtimepoint-accountid32-u832 \"Direct link to multisigcancelledaccountid32-palletmultisigtimepoint-accountid32-u832\")\n\n*   **interface**: `api.events.multisig.MultisigCancelled.is`\n*   **summary**: A multisig operation has been cancelled.\n\n### MultisigExecuted(`AccountId32`, `PalletMultisigTimepoint`, `AccountId32`, `[u8;32]`, `Result<Null, SpRuntimeDispatchError>`)[\u200b](#multisigexecutedaccountid32-palletmultisigtimepoint-accountid32-u832-resultnull-spruntimedispatcherror \"Direct link to multisigexecutedaccountid32-palletmultisigtimepoint-accountid32-u832-resultnull-spruntimedispatcherror\")\n\n*   **interface**: `api.events.multisig.MultisigExecuted.is`\n*   **summary**: A multisig operation has been executed.\n\n### NewMultisig(`AccountId32`, `AccountId32`, `[u8;32]`)[\u200b](#newmultisigaccountid32-accountid32-u832 \"Direct link to newmultisigaccountid32-accountid32-u832\")\n\n*   **interface**: `api.events.multisig.NewMultisig.is`\n*   **summary**: A new multisig operation has begun.\n\n* * *\n\nnftFractionalization[\u200b](#nftfractionalization \"Direct link to nftFractionalization\")\n\n-------------------------------------------------------------------------------------\n\n### NftFractionalized(`u32`, `u32`, `u128`, `u32`, `AccountId32`)[\u200b](#nftfractionalizedu32-u32-u128-u32-accountid32 \"Direct link to nftfractionalizedu32-u32-u128-u32-accountid32\")\n\n*   **interface**: `api.events.nftFractionalization.NftFractionalized.is`\n*   **summary**: An NFT was successfully fractionalized.\n\n### NftUnified(`u32`, `u32`, `u32`, `AccountId32`)[\u200b](#nftunifiedu32-u32-u32-accountid32 \"Direct link to nftunifiedu32-u32-u32-accountid32\")\n\n*   **interface**: `api.events.nftFractionalization.NftUnified.is`\n*   **summary**: An NFT was successfully returned back.\n\n* * *\n\nnfts[\u200b](#nfts \"Direct link to nfts\")\n\n-------------------------------------\n\n### AllApprovalsCancelled(`u32`, `u32`, `AccountId32`)[\u200b](#allapprovalscancelledu32-u32-accountid32 \"Direct link to allapprovalscancelledu32-u32-accountid32\")\n\n*   **interface**: `api.events.nfts.AllApprovalsCancelled.is`\n*   **summary**: All approvals of an item got cancelled.\n\n### ApprovalCancelled(`u32`, `u32`, `AccountId32`, `AccountId32`)[\u200b](#approvalcancelledu32-u32-accountid32-accountid32 \"Direct link to approvalcancelledu32-u32-accountid32-accountid32\")\n\n*   **interface**: `api.events.nfts.ApprovalCancelled.is`\n*   **summary**: An approval for a `delegate` account to transfer the `item` of an item `collection` was cancelled by its `owner`.\n\n### AttributeCleared(`u32`, `Option<u32>`, `Bytes`, `PalletNftsAttributeNamespace`)[\u200b](#attributeclearedu32-optionu32-bytes-palletnftsattributenamespace \"Direct link to attributeclearedu32-optionu32-bytes-palletnftsattributenamespace\")\n\n*   **interface**: `api.events.nfts.AttributeCleared.is`\n*   **summary**: Attribute metadata has been cleared for a `collection` or `item`.\n\n### AttributeSet(`u32`, `Option<u32>`, `Bytes`, `Bytes`, `PalletNftsAttributeNamespace`)[\u200b](#attributesetu32-optionu32-bytes-bytes-palletnftsattributenamespace \"Direct link to attributesetu32-optionu32-bytes-bytes-palletnftsattributenamespace\")\n\n*   **interface**: `api.events.nfts.AttributeSet.is`\n*   **summary**: New attribute metadata has been set for a `collection` or `item`.\n\n### Burned(`u32`, `u32`, `AccountId32`)[\u200b](#burnedu32-u32-accountid32 \"Direct link to burnedu32-u32-accountid32\")\n\n*   **interface**: `api.events.nfts.Burned.is`\n*   **summary**: An `item` was destroyed.\n\n### CollectionConfigChanged(`u32`)[\u200b](#collectionconfigchangedu32 \"Direct link to collectionconfigchangedu32\")\n\n*   **interface**: `api.events.nfts.CollectionConfigChanged.is`\n*   **summary**: A `collection` has had its config changed by the `Force` origin.\n\n### CollectionLocked(`u32`)[\u200b](#collectionlockedu32 \"Direct link to collectionlockedu32\")\n\n*   **interface**: `api.events.nfts.CollectionLocked.is`\n*   **summary**: Some `collection` was locked.\n\n### CollectionMaxSupplySet(`u32`, `u32`)[\u200b](#collectionmaxsupplysetu32-u32 \"Direct link to collectionmaxsupplysetu32-u32\")\n\n*   **interface**: `api.events.nfts.CollectionMaxSupplySet.is`\n*   **summary**: Max supply has been set for a collection.\n\n### CollectionMetadataCleared(`u32`)[\u200b](#collectionmetadataclearedu32 \"Direct link to collectionmetadataclearedu32\")\n\n*   **interface**: `api.events.nfts.CollectionMetadataCleared.is`\n*   **summary**: Metadata has been cleared for a `collection`.\n\n### CollectionMetadataSet(`u32`, `Bytes`)[\u200b](#collectionmetadatasetu32-bytes \"Direct link to collectionmetadatasetu32-bytes\")\n\n*   **interface**: `api.events.nfts.CollectionMetadataSet.is`\n*   **summary**: New metadata has been set for a `collection`.\n\n### CollectionMintSettingsUpdated(`u32`)[\u200b](#collectionmintsettingsupdatedu32 \"Direct link to collectionmintsettingsupdatedu32\")\n\n*   **interface**: `api.events.nfts.CollectionMintSettingsUpdated.is`\n*   **summary**: Mint settings for a collection had changed.\n\n### Created(`u32`, `AccountId32`, `AccountId32`)[\u200b](#createdu32-accountid32-accountid32-1 \"Direct link to createdu32-accountid32-accountid32-1\")\n\n*   **interface**: `api.events.nfts.Created.is`\n*   **summary**: A `collection` was created.\n\n### Destroyed(`u32`)[\u200b](#destroyedu32-1 \"Direct link to destroyedu32-1\")\n\n*   **interface**: `api.events.nfts.Destroyed.is`\n*   **summary**: A `collection` was destroyed.\n\n### ForceCreated(`u32`, `AccountId32`)[\u200b](#forcecreatedu32-accountid32-1 \"Direct link to forcecreatedu32-accountid32-1\")\n\n*   **interface**: `api.events.nfts.ForceCreated.is`\n*   **summary**: A `collection` was force-created.\n\n### Issued(`u32`, `u32`, `AccountId32`)[\u200b](#issuedu32-u32-accountid32 \"Direct link to issuedu32-u32-accountid32\")\n\n*   **interface**: `api.events.nfts.Issued.is`\n*   **summary**: An `item` was issued.\n\n### ItemAttributesApprovalAdded(`u32`, `u32`, `AccountId32`)[\u200b](#itemattributesapprovaladdedu32-u32-accountid32 \"Direct link to itemattributesapprovaladdedu32-u32-accountid32\")\n\n*   **interface**: `api.events.nfts.ItemAttributesApprovalAdded.is`\n*   **summary**: A new approval to modify item attributes was added.\n\n### ItemAttributesApprovalRemoved(`u32`, `u32`, `AccountId32`)[\u200b](#itemattributesapprovalremovedu32-u32-accountid32 \"Direct link to itemattributesapprovalremovedu32-u32-accountid32\")\n\n*   **interface**: `api.events.nfts.ItemAttributesApprovalRemoved.is`\n*   **summary**: A new approval to modify item attributes was removed.\n\n### ItemBought(`u32`, `u32`, `u128`, `AccountId32`, `AccountId32`)[\u200b](#itemboughtu32-u32-u128-accountid32-accountid32 \"Direct link to itemboughtu32-u32-u128-accountid32-accountid32\")\n\n*   **interface**: `api.events.nfts.ItemBought.is`\n*   **summary**: An item was bought.\n\n### ItemMetadataCleared(`u32`, `u32`)[\u200b](#itemmetadataclearedu32-u32 \"Direct link to itemmetadataclearedu32-u32\")\n\n*   **interface**: `api.events.nfts.ItemMetadataCleared.is`\n*   **summary**: Metadata has been cleared for an item.\n\n### ItemMetadataSet(`u32`, `u32`, `Bytes`)[\u200b](#itemmetadatasetu32-u32-bytes \"Direct link to itemmetadatasetu32-u32-bytes\")\n\n*   **interface**: `api.events.nfts.ItemMetadataSet.is`\n*   **summary**: New metadata has been set for an item.\n\n### ItemPriceRemoved(`u32`, `u32`)[\u200b](#itempriceremovedu32-u32 \"Direct link to itempriceremovedu32-u32\")\n\n*   **interface**: `api.events.nfts.ItemPriceRemoved.is`\n*   **summary**: The price for the item was removed.\n\n### ItemPriceSet(`u32`, `u32`, `u128`, `Option<AccountId32>`)[\u200b](#itempricesetu32-u32-u128-optionaccountid32 \"Direct link to itempricesetu32-u32-u128-optionaccountid32\")\n\n*   **interface**: `api.events.nfts.ItemPriceSet.is`\n*   **summary**: The price was set for the item.\n\n### ItemPropertiesLocked(`u32`, `u32`, `bool`, `bool`)[\u200b](#itempropertieslockedu32-u32-bool-bool \"Direct link to itempropertieslockedu32-u32-bool-bool\")\n\n*   **interface**: `api.events.nfts.ItemPropertiesLocked.is`\n*   **summary**: `item` metadata or attributes were locked.\n\n### ItemTransferLocked(`u32`, `u32`)[\u200b](#itemtransferlockedu32-u32 \"Direct link to itemtransferlockedu32-u32\")\n\n*   **interface**: `api.events.nfts.ItemTransferLocked.is`\n*   **summary**: An `item` became non-transferable.\n\n### ItemTransferUnlocked(`u32`, `u32`)[\u200b](#itemtransferunlockedu32-u32 \"Direct link to itemtransferunlockedu32-u32\")\n\n*   **interface**: `api.events.nfts.ItemTransferUnlocked.is`\n*   **summary**: An `item` became transferable.\n\n### NextCollectionIdIncremented(`Option<u32>`)[\u200b](#nextcollectionidincrementedoptionu32 \"Direct link to nextcollectionidincrementedoptionu32\")\n\n*   **interface**: `api.events.nfts.NextCollectionIdIncremented.is`\n*   **summary**: Event gets emitted when the `NextCollectionId` gets incremented.\n\n### OwnerChanged(`u32`, `AccountId32`)[\u200b](#ownerchangedu32-accountid32-1 \"Direct link to ownerchangedu32-accountid32-1\")\n\n*   **interface**: `api.events.nfts.OwnerChanged.is`\n*   **summary**: The owner changed.\n\n### OwnershipAcceptanceChanged(`AccountId32`, `Option<u32>`)[\u200b](#ownershipacceptancechangedaccountid32-optionu32 \"Direct link to ownershipacceptancechangedaccountid32-optionu32\")\n\n*   **interface**: `api.events.nfts.OwnershipAcceptanceChanged.is`\n*   **summary**: Ownership acceptance has changed for an account.\n\n### PalletAttributeSet(`u32`, `Option<u32>`, `PalletNftsPalletAttributes`, `Bytes`)[\u200b](#palletattributesetu32-optionu32-palletnftspalletattributes-bytes \"Direct link to palletattributesetu32-optionu32-palletnftspalletattributes-bytes\")\n\n*   **interface**: `api.events.nfts.PalletAttributeSet.is`\n*   **summary**: A new attribute in the `Pallet` namespace was set for the `collection` or an `item` within that `collection`.\n\n### PreSignedAttributesSet(`u32`, `u32`, `PalletNftsAttributeNamespace`)[\u200b](#presignedattributessetu32-u32-palletnftsattributenamespace \"Direct link to presignedattributessetu32-u32-palletnftsattributenamespace\")\n\n*   **interface**: `api.events.nfts.PreSignedAttributesSet.is`\n*   **summary**: New attributes have been set for an `item` of the `collection`.\n\n### Redeposited(`u32`, `Vec<u32>`)[\u200b](#redepositedu32-vecu32 \"Direct link to redepositedu32-vecu32\")\n\n*   **interface**: `api.events.nfts.Redeposited.is`\n*   **summary**: The deposit for a set of `item`s within a `collection` has been updated.\n\n### SwapCancelled(`u32`, `u32`, `u32`, `Option<u32>`, `Option<PalletNftsPriceWithDirection>`, `u32`)[\u200b](#swapcancelledu32-u32-u32-optionu32-optionpalletnftspricewithdirection-u32 \"Direct link to swapcancelledu32-u32-u32-optionu32-optionpalletnftspricewithdirection-u32\")\n\n*   **interface**: `api.events.nfts.SwapCancelled.is`\n*   **summary**: The swap was cancelled.\n\n### SwapClaimed(`u32`, `u32`, `AccountId32`, `u32`, `u32`, `AccountId32`, `Option<PalletNftsPriceWithDirection>`, `u32`)[\u200b](#swapclaimedu32-u32-accountid32-u32-u32-accountid32-optionpalletnftspricewithdirection-u32 \"Direct link to swapclaimedu32-u32-accountid32-u32-u32-accountid32-optionpalletnftspricewithdirection-u32\")\n\n*   **interface**: `api.events.nfts.SwapClaimed.is`\n*   **summary**: The swap has been claimed.\n\n### SwapCreated(`u32`, `u32`, `u32`, `Option<u32>`, `Option<PalletNftsPriceWithDirection>`, `u32`)[\u200b](#swapcreatedu32-u32-u32-optionu32-optionpalletnftspricewithdirection-u32 \"Direct link to swapcreatedu32-u32-u32-optionu32-optionpalletnftspricewithdirection-u32\")\n\n*   **interface**: `api.events.nfts.SwapCreated.is`\n*   **summary**: An `item` swap intent was created.\n\n### TeamChanged(`u32`, `Option<AccountId32>`, `Option<AccountId32>`, `Option<AccountId32>`)[\u200b](#teamchangedu32-optionaccountid32-optionaccountid32-optionaccountid32 \"Direct link to teamchangedu32-optionaccountid32-optionaccountid32-optionaccountid32\")\n\n*   **interface**: `api.events.nfts.TeamChanged.is`\n*   **summary**: The management team changed.\n\n### TipSent(`u32`, `u32`, `AccountId32`, `AccountId32`, `u128`)[\u200b](#tipsentu32-u32-accountid32-accountid32-u128 \"Direct link to tipsentu32-u32-accountid32-accountid32-u128\")\n\n*   **interface**: `api.events.nfts.TipSent.is`\n*   **summary**: A tip was sent.\n\n### TransferApproved(`u32`, `u32`, `AccountId32`, `AccountId32`, `Option<u32>`)[\u200b](#transferapprovedu32-u32-accountid32-accountid32-optionu32 \"Direct link to transferapprovedu32-u32-accountid32-accountid32-optionu32\")\n\n*   **interface**: `api.events.nfts.TransferApproved.is`\n*   **summary**: An `item` of a `collection` has been approved by the `owner` for transfer by a `delegate`.\n\n### Transferred(`u32`, `u32`, `AccountId32`, `AccountId32`)[\u200b](#transferredu32-u32-accountid32-accountid32 \"Direct link to transferredu32-u32-accountid32-accountid32\")\n\n*   **interface**: `api.events.nfts.Transferred.is`\n*   **summary**: An `item` was transferred.\n\n* * *\n\nnis[\u200b](#nis \"Direct link to nis\")\n\n----------------------------------\n\n### BidDropped(`AccountId32`, `u128`, `u32`)[\u200b](#biddroppedaccountid32-u128-u32 \"Direct link to biddroppedaccountid32-u128-u32\")\n\n*   **interface**: `api.events.nis.BidDropped.is`\n*   **summary**: A bid was dropped from a queue because of another, more substantial, bid was present.\n\n### BidPlaced(`AccountId32`, `u128`, `u32`)[\u200b](#bidplacedaccountid32-u128-u32 \"Direct link to bidplacedaccountid32-u128-u32\")\n\n*   **interface**: `api.events.nis.BidPlaced.is`\n*   **summary**: A bid was successfully placed.\n\n### BidRetracted(`AccountId32`, `u128`, `u32`)[\u200b](#bidretractedaccountid32-u128-u32 \"Direct link to bidretractedaccountid32-u128-u32\")\n\n*   **interface**: `api.events.nis.BidRetracted.is`\n*   **summary**: A bid was successfully removed (before being accepted).\n\n### Funded(`u128`)[\u200b](#fundedu128 \"Direct link to fundedu128\")\n\n*   **interface**: `api.events.nis.Funded.is`\n*   **summary**: An automatic funding of the deficit was made.\n\n### Issued(`u32`, `u32`, `AccountId32`, `Perquintill`, `u128`)[\u200b](#issuedu32-u32-accountid32-perquintill-u128 \"Direct link to issuedu32-u32-accountid32-perquintill-u128\")\n\n*   **interface**: `api.events.nis.Issued.is`\n*   **summary**: A bid was accepted. The balance may not be released until expiry.\n\n### Thawed(`u32`, `AccountId32`, `Perquintill`, `u128`, `bool`)[\u200b](#thawedu32-accountid32-perquintill-u128-bool \"Direct link to thawedu32-accountid32-perquintill-u128-bool\")\n\n*   **interface**: `api.events.nis.Thawed.is`\n*   **summary**: An receipt has been (at least partially) thawed.\n\n### Transferred(`AccountId32`, `AccountId32`, `u32`)[\u200b](#transferredaccountid32-accountid32-u32 \"Direct link to transferredaccountid32-accountid32-u32\")\n\n*   **interface**: `api.events.nis.Transferred.is`\n*   **summary**: A receipt was transfered.\n\n* * *\n\nnominationPools[\u200b](#nominationpools \"Direct link to nominationPools\")\n\n----------------------------------------------------------------------\n\n### Bonded(`AccountId32`, `u32`, `u128`, `bool`)[\u200b](#bondedaccountid32-u32-u128-bool \"Direct link to bondedaccountid32-u32-u128-bool\")\n\n*   **interface**: `api.events.nominationPools.Bonded.is`\n*   **summary**: A member has became bonded in a pool.\n\n### Created(`AccountId32`, `u32`)[\u200b](#createdaccountid32-u32 \"Direct link to createdaccountid32-u32\")\n\n*   **interface**: `api.events.nominationPools.Created.is`\n*   **summary**: A pool has been created.\n\n### Destroyed(`u32`)[\u200b](#destroyedu32-2 \"Direct link to destroyedu32-2\")\n\n*   **interface**: `api.events.nominationPools.Destroyed.is`\n*   **summary**: A pool has been destroyed.\n\n### MemberRemoved(`u32`, `AccountId32`)[\u200b](#memberremovedu32-accountid32 \"Direct link to memberremovedu32-accountid32\")\n\n*   **interface**: `api.events.nominationPools.MemberRemoved.is`\n    \n*   **summary**: A member has been removed from a pool.\n    \n    The removal can be voluntary (withdrawn all unbonded funds) or involuntary (kicked).\n    \n\n### MinBalanceDeficitAdjusted(`u32`, `u128`)[\u200b](#minbalancedeficitadjustedu32-u128 \"Direct link to minbalancedeficitadjustedu32-u128\")\n\n*   **interface**: `api.events.nominationPools.MinBalanceDeficitAdjusted.is`\n*   **summary**: Topped up deficit in frozen ED of the reward pool.\n\n### MinBalanceExcessAdjusted(`u32`, `u128`)[\u200b](#minbalanceexcessadjustedu32-u128 \"Direct link to minbalanceexcessadjustedu32-u128\")\n\n*   **interface**: `api.events.nominationPools.MinBalanceExcessAdjusted.is`\n*   **summary**: Claimed excess frozen ED of af the reward pool.\n\n### PaidOut(`AccountId32`, `u32`, `u128`)[\u200b](#paidoutaccountid32-u32-u128 \"Direct link to paidoutaccountid32-u32-u128\")\n\n*   **interface**: `api.events.nominationPools.PaidOut.is`\n*   **summary**: A payout has been made to a member.\n\n### PoolCommissionChangeRateUpdated(`u32`, `PalletNominationPoolsCommissionChangeRate`)[\u200b](#poolcommissionchangerateupdatedu32-palletnominationpoolscommissionchangerate \"Direct link to poolcommissionchangerateupdatedu32-palletnominationpoolscommissionchangerate\")\n\n*   **interface**: `api.events.nominationPools.PoolCommissionChangeRateUpdated.is`\n*   **summary**: A pool's commission `change_rate` has been changed.\n\n### PoolCommissionClaimed(`u32`, `u128`)[\u200b](#poolcommissionclaimedu32-u128 \"Direct link to poolcommissionclaimedu32-u128\")\n\n*   **interface**: `api.events.nominationPools.PoolCommissionClaimed.is`\n*   **summary**: Pool commission has been claimed.\n\n### PoolCommissionClaimPermissionUpdated(`u32`, `Option<PalletNominationPoolsCommissionClaimPermission>`)[\u200b](#poolcommissionclaimpermissionupdatedu32-optionpalletnominationpoolscommissionclaimpermission \"Direct link to poolcommissionclaimpermissionupdatedu32-optionpalletnominationpoolscommissionclaimpermission\")\n\n*   **interface**: `api.events.nominationPools.PoolCommissionClaimPermissionUpdated.is`\n*   **summary**: Pool commission claim permission has been updated.\n\n### PoolCommissionUpdated(`u32`, `Option<(Perbill,AccountId32)>`)[\u200b](#poolcommissionupdatedu32-optionperbillaccountid32 \"Direct link to poolcommissionupdatedu32-optionperbillaccountid32\")\n\n*   **interface**: `api.events.nominationPools.PoolCommissionUpdated.is`\n*   **summary**: A pool's commission setting has been changed.\n\n### PoolMaxCommissionUpdated(`u32`, `Perbill`)[\u200b](#poolmaxcommissionupdatedu32-perbill \"Direct link to poolmaxcommissionupdatedu32-perbill\")\n\n*   **interface**: `api.events.nominationPools.PoolMaxCommissionUpdated.is`\n*   **summary**: A pool's maximum commission setting has been changed.\n\n### PoolSlashed(`u32`, `u128`)[\u200b](#poolslashedu32-u128 \"Direct link to poolslashedu32-u128\")\n\n*   **interface**: `api.events.nominationPools.PoolSlashed.is`\n*   **summary**: The active balance of pool `pool_id` has been slashed to `balance`.\n\n### RolesUpdated(`Option<AccountId32>`, `Option<AccountId32>`, `Option<AccountId32>`)[\u200b](#rolesupdatedoptionaccountid32-optionaccountid32-optionaccountid32 \"Direct link to rolesupdatedoptionaccountid32-optionaccountid32-optionaccountid32\")\n\n*   **interface**: `api.events.nominationPools.RolesUpdated.is`\n*   **summary**: The roles of a pool have been updated to the given new roles. Note that the depositor can never change.\n\n### StateChanged(`u32`, `PalletNominationPoolsPoolState`)[\u200b](#statechangedu32-palletnominationpoolspoolstate \"Direct link to statechangedu32-palletnominationpoolspoolstate\")\n\n*   **interface**: `api.events.nominationPools.StateChanged.is`\n*   **summary**: The state of a pool has changed\n\n### Unbonded(`AccountId32`, `u32`, `u128`, `u128`, `u32`)[\u200b](#unbondedaccountid32-u32-u128-u128-u32 \"Direct link to unbondedaccountid32-u32-u128-u128-u32\")\n\n*   **interface**: `api.events.nominationPools.Unbonded.is`\n    \n*   **summary**: A member has unbonded from their pool.\n    \n    *   `balance` is the corresponding balance of the number of points that has been requested to be unbonded (the argument of the `unbond` transaction) from the bonded pool.\n        \n    *   `points` is the number of points that are issued as a result of `balance` being dissolved into the corresponding unbonding pool.\n        \n    *   `era` is the era in which the balance will be unbonded. In the absence of slashing, these values will match. In the presence of slashing, the number of points that are issued in the unbonding pool will be less than the amount requested to be unbonded.\n        \n\n### UnbondingPoolSlashed(`u32`, `u32`, `u128`)[\u200b](#unbondingpoolslashedu32-u32-u128 \"Direct link to unbondingpoolslashedu32-u32-u128\")\n\n*   **interface**: `api.events.nominationPools.UnbondingPoolSlashed.is`\n*   **summary**: The unbond pool at `era` of pool `pool_id` has been slashed to `balance`.\n\n### Withdrawn(`AccountId32`, `u32`, `u128`, `u128`)[\u200b](#withdrawnaccountid32-u32-u128-u128 \"Direct link to withdrawnaccountid32-u32-u128-u128\")\n\n*   **interface**: `api.events.nominationPools.Withdrawn.is`\n    \n*   **summary**: A member has withdrawn from their pool.\n    \n    The given number of `points` have been dissolved in return of `balance`.\n    \n    Similar to `Unbonded` event, in the absence of slashing, the ratio of point to balance will be 1.\n    \n\n* * *\n\noffences[\u200b](#offences \"Direct link to offences\")\n\n-------------------------------------------------\n\n### Offence(`[u8;16]`, `Bytes`)[\u200b](#offenceu816-bytes \"Direct link to offenceu816-bytes\")\n\n*   **interface**: `api.events.offences.Offence.is`\n*   **summary**: There is an offence reported of the given `kind` happened at the `session_index` and (kind-specific) time slot. This event is not deposited for duplicate slashes. \\[kind, timeslot\\].\n\n* * *\n\npoolAssets[\u200b](#poolassets \"Direct link to poolAssets\")\n\n-------------------------------------------------------\n\n### AccountsDestroyed(`u32`, `u32`, `u32`)[\u200b](#accountsdestroyedu32-u32-u32-1 \"Direct link to accountsdestroyedu32-u32-u32-1\")\n\n*   **interface**: `api.events.poolAssets.AccountsDestroyed.is`\n*   **summary**: Accounts were destroyed for given asset.\n\n### ApprovalCancelled(`u32`, `AccountId32`, `AccountId32`)[\u200b](#approvalcancelledu32-accountid32-accountid32-1 \"Direct link to approvalcancelledu32-accountid32-accountid32-1\")\n\n*   **interface**: `api.events.poolAssets.ApprovalCancelled.is`\n*   **summary**: An approval for account `delegate` was cancelled by `owner`.\n\n### ApprovalsDestroyed(`u32`, `u32`, `u32`)[\u200b](#approvalsdestroyedu32-u32-u32-1 \"Direct link to approvalsdestroyedu32-u32-u32-1\")\n\n*   **interface**: `api.events.poolAssets.ApprovalsDestroyed.is`\n*   **summary**: Approvals were destroyed for given asset.\n\n### ApprovedTransfer(`u32`, `AccountId32`, `AccountId32`, `u128`)[\u200b](#approvedtransferu32-accountid32-accountid32-u128-1 \"Direct link to approvedtransferu32-accountid32-accountid32-u128-1\")\n\n*   **interface**: `api.events.poolAssets.ApprovedTransfer.is`\n*   **summary**: (Additional) funds have been approved for transfer to a destination account.\n\n### AssetFrozen(`u32`)[\u200b](#assetfrozenu32-1 \"Direct link to assetfrozenu32-1\")\n\n*   **interface**: `api.events.poolAssets.AssetFrozen.is`\n*   **summary**: Some asset `asset_id` was frozen.\n\n### AssetMinBalanceChanged(`u32`, `u128`)[\u200b](#assetminbalancechangedu32-u128-1 \"Direct link to assetminbalancechangedu32-u128-1\")\n\n*   **interface**: `api.events.poolAssets.AssetMinBalanceChanged.is`\n*   **summary**: The min\\_balance of an asset has been updated by the asset owner.\n\n### AssetStatusChanged(`u32`)[\u200b](#assetstatuschangedu32-1 \"Direct link to assetstatuschangedu32-1\")\n\n*   **interface**: `api.events.poolAssets.AssetStatusChanged.is`\n*   **summary**: An asset has had its attributes changed by the `Force` origin.\n\n### AssetThawed(`u32`)[\u200b](#assetthawedu32-1 \"Direct link to assetthawedu32-1\")\n\n*   **interface**: `api.events.poolAssets.AssetThawed.is`\n*   **summary**: Some asset `asset_id` was thawed.\n\n### Blocked(`u32`, `AccountId32`)[\u200b](#blockedu32-accountid32-1 \"Direct link to blockedu32-accountid32-1\")\n\n*   **interface**: `api.events.poolAssets.Blocked.is`\n*   **summary**: Some account `who` was blocked.\n\n### Burned(`u32`, `AccountId32`, `u128`)[\u200b](#burnedu32-accountid32-u128-1 \"Direct link to burnedu32-accountid32-u128-1\")\n\n*   **interface**: `api.events.poolAssets.Burned.is`\n*   **summary**: Some assets were destroyed.\n\n### Created(`u32`, `AccountId32`, `AccountId32`)[\u200b](#createdu32-accountid32-accountid32-2 \"Direct link to createdu32-accountid32-accountid32-2\")\n\n*   **interface**: `api.events.poolAssets.Created.is`\n*   **summary**: Some asset class was created.\n\n### Destroyed(`u32`)[\u200b](#destroyedu32-3 \"Direct link to destroyedu32-3\")\n\n*   **interface**: `api.events.poolAssets.Destroyed.is`\n*   **summary**: An asset class was destroyed.\n\n### DestructionStarted(`u32`)[\u200b](#destructionstartedu32-1 \"Direct link to destructionstartedu32-1\")\n\n*   **interface**: `api.events.poolAssets.DestructionStarted.is`\n*   **summary**: An asset class is in the process of being destroyed.\n\n### ForceCreated(`u32`, `AccountId32`)[\u200b](#forcecreatedu32-accountid32-2 \"Direct link to forcecreatedu32-accountid32-2\")\n\n*   **interface**: `api.events.poolAssets.ForceCreated.is`\n*   **summary**: Some asset class was force-created.\n\n### Frozen(`u32`, `AccountId32`)[\u200b](#frozenu32-accountid32-1 \"Direct link to frozenu32-accountid32-1\")\n\n*   **interface**: `api.events.poolAssets.Frozen.is`\n*   **summary**: Some account `who` was frozen.\n\n### Issued(`u32`, `AccountId32`, `u128`)[\u200b](#issuedu32-accountid32-u128-1 \"Direct link to issuedu32-accountid32-u128-1\")\n\n*   **interface**: `api.events.poolAssets.Issued.is`\n*   **summary**: Some assets were issued.\n\n### MetadataCleared(`u32`)[\u200b](#metadataclearedu32-1 \"Direct link to metadataclearedu32-1\")\n\n*   **interface**: `api.events.poolAssets.MetadataCleared.is`\n*   **summary**: Metadata has been cleared for an asset.\n\n### MetadataSet(`u32`, `Bytes`, `Bytes`, `u8`, `bool`)[\u200b](#metadatasetu32-bytes-bytes-u8-bool-1 \"Direct link to metadatasetu32-bytes-bytes-u8-bool-1\")\n\n*   **interface**: `api.events.poolAssets.MetadataSet.is`\n*   **summary**: New metadata has been set for an asset.\n\n### OwnerChanged(`u32`, `AccountId32`)[\u200b](#ownerchangedu32-accountid32-2 \"Direct link to ownerchangedu32-accountid32-2\")\n\n*   **interface**: `api.events.poolAssets.OwnerChanged.is`\n*   **summary**: The owner changed.\n\n### TeamChanged(`u32`, `AccountId32`, `AccountId32`, `AccountId32`)[\u200b](#teamchangedu32-accountid32-accountid32-accountid32-1 \"Direct link to teamchangedu32-accountid32-accountid32-accountid32-1\")\n\n*   **interface**: `api.events.poolAssets.TeamChanged.is`\n*   **summary**: The management team changed.\n\n### Thawed(`u32`, `AccountId32`)[\u200b](#thawedu32-accountid32-1 \"Direct link to thawedu32-accountid32-1\")\n\n*   **interface**: `api.events.poolAssets.Thawed.is`\n*   **summary**: Some account `who` was thawed.\n\n### Touched(`u32`, `AccountId32`, `AccountId32`)[\u200b](#touchedu32-accountid32-accountid32-1 \"Direct link to touchedu32-accountid32-accountid32-1\")\n\n*   **interface**: `api.events.poolAssets.Touched.is`\n*   **summary**: Some account `who` was created with a deposit from `depositor`.\n\n### Transferred(`u32`, `AccountId32`, `AccountId32`, `u128`)[\u200b](#transferredu32-accountid32-accountid32-u128-1 \"Direct link to transferredu32-accountid32-accountid32-u128-1\")\n\n*   **interface**: `api.events.poolAssets.Transferred.is`\n*   **summary**: Some assets were transferred.\n\n### TransferredApproved(`u32`, `AccountId32`, `AccountId32`, `AccountId32`, `u128`)[\u200b](#transferredapprovedu32-accountid32-accountid32-accountid32-u128-1 \"Direct link to transferredapprovedu32-accountid32-accountid32-accountid32-u128-1\")\n\n*   **interface**: `api.events.poolAssets.TransferredApproved.is`\n*   **summary**: An `amount` was transferred in its entirety from `owner` to `destination` by the approved `delegate`.\n\n* * *\n\npov[\u200b](#pov \"Direct link to pov\")\n\n----------------------------------\n\n### TestEvent()[\u200b](#testevent \"Direct link to TestEvent()\")\n\n*   **interface**: `api.events.pov.TestEvent.is`\n\n* * *\n\npreimage[\u200b](#preimage \"Direct link to preimage\")\n\n-------------------------------------------------\n\n### Cleared(`H256`)[\u200b](#clearedh256 \"Direct link to clearedh256\")\n\n*   **interface**: `api.events.preimage.Cleared.is`\n*   **summary**: A preimage has ben cleared.\n\n### Noted(`H256`)[\u200b](#notedh256 \"Direct link to notedh256\")\n\n*   **interface**: `api.events.preimage.Noted.is`\n*   **summary**: A preimage has been noted.\n\n### Requested(`H256`)[\u200b](#requestedh256 \"Direct link to requestedh256\")\n\n*   **interface**: `api.events.preimage.Requested.is`\n*   **summary**: A preimage has been requested.\n\n* * *\n\nproxy[\u200b](#proxy \"Direct link to proxy\")\n\n----------------------------------------\n\n### Announced(`AccountId32`, `AccountId32`, `H256`)[\u200b](#announcedaccountid32-accountid32-h256 \"Direct link to announcedaccountid32-accountid32-h256\")\n\n*   **interface**: `api.events.proxy.Announced.is`\n*   **summary**: An announcement was placed to make a call in the future.\n\n### ProxyAdded(`AccountId32`, `AccountId32`, `KitchensinkRuntimeProxyType`, `u32`)[\u200b](#proxyaddedaccountid32-accountid32-kitchensinkruntimeproxytype-u32 \"Direct link to proxyaddedaccountid32-accountid32-kitchensinkruntimeproxytype-u32\")\n\n*   **interface**: `api.events.proxy.ProxyAdded.is`\n*   **summary**: A proxy was added.\n\n### ProxyExecuted(`Result<Null, SpRuntimeDispatchError>`)[\u200b](#proxyexecutedresultnull-spruntimedispatcherror \"Direct link to proxyexecutedresultnull-spruntimedispatcherror\")\n\n*   **interface**: `api.events.proxy.ProxyExecuted.is`\n*   **summary**: A proxy was executed correctly, with the given.\n\n### ProxyRemoved(`AccountId32`, `AccountId32`, `KitchensinkRuntimeProxyType`, `u32`)[\u200b](#proxyremovedaccountid32-accountid32-kitchensinkruntimeproxytype-u32 \"Direct link to proxyremovedaccountid32-accountid32-kitchensinkruntimeproxytype-u32\")\n\n*   **interface**: `api.events.proxy.ProxyRemoved.is`\n*   **summary**: A proxy was removed.\n\n### PureCreated(`AccountId32`, `AccountId32`, `KitchensinkRuntimeProxyType`, `u16`)[\u200b](#purecreatedaccountid32-accountid32-kitchensinkruntimeproxytype-u16 \"Direct link to purecreatedaccountid32-accountid32-kitchensinkruntimeproxytype-u16\")\n\n*   **interface**: `api.events.proxy.PureCreated.is`\n*   **summary**: A pure account has been created by new proxy with given disambiguation index and proxy type.\n\n* * *\n\nrankedCollective[\u200b](#rankedcollective \"Direct link to rankedCollective\")\n\n-------------------------------------------------------------------------\n\n### MemberAdded(`AccountId32`)[\u200b](#memberaddedaccountid32 \"Direct link to memberaddedaccountid32\")\n\n*   **interface**: `api.events.rankedCollective.MemberAdded.is`\n*   **summary**: A member `who` has been added.\n\n### MemberRemoved(`AccountId32`, `u16`)[\u200b](#memberremovedaccountid32-u16 \"Direct link to memberremovedaccountid32-u16\")\n\n*   **interface**: `api.events.rankedCollective.MemberRemoved.is`\n*   **summary**: The member `who` of given `rank` has been removed from the collective.\n\n### RankChanged(`AccountId32`, `u16`)[\u200b](#rankchangedaccountid32-u16 \"Direct link to rankchangedaccountid32-u16\")\n\n*   **interface**: `api.events.rankedCollective.RankChanged.is`\n*   **summary**: The member `who`se rank has been changed to the given `rank`.\n\n### Voted(`AccountId32`, `u32`, `PalletRankedCollectiveVoteRecord`, `PalletRankedCollectiveTally`)[\u200b](#votedaccountid32-u32-palletrankedcollectivevoterecord-palletrankedcollectivetally \"Direct link to votedaccountid32-u32-palletrankedcollectivevoterecord-palletrankedcollectivetally\")\n\n*   **interface**: `api.events.rankedCollective.Voted.is`\n*   **summary**: The member `who` has voted for the `poll` with the given `vote` leading to an updated `tally`.\n\n* * *\n\nrankedPolls[\u200b](#rankedpolls \"Direct link to rankedPolls\")\n\n----------------------------------------------------------\n\n### Approved(`u32`)[\u200b](#approvedu32 \"Direct link to approvedu32\")\n\n*   **interface**: `api.events.rankedPolls.Approved.is`\n*   **summary**: A referendum has been approved and its proposal has been scheduled.\n\n### Cancelled(`u32`, `PalletRankedCollectiveTally`)[\u200b](#cancelledu32-palletrankedcollectivetally \"Direct link to cancelledu32-palletrankedcollectivetally\")\n\n*   **interface**: `api.events.rankedPolls.Cancelled.is`\n*   **summary**: A referendum has been cancelled.\n\n### ConfirmAborted(`u32`)[\u200b](#confirmabortedu32 \"Direct link to confirmabortedu32\")\n\n*   **interface**: `api.events.rankedPolls.ConfirmAborted.is`\n\n### Confirmed(`u32`, `PalletRankedCollectiveTally`)[\u200b](#confirmedu32-palletrankedcollectivetally \"Direct link to confirmedu32-palletrankedcollectivetally\")\n\n*   **interface**: `api.events.rankedPolls.Confirmed.is`\n*   **summary**: A referendum has ended its confirmation phase and is ready for approval.\n\n### ConfirmStarted(`u32`)[\u200b](#confirmstartedu32 \"Direct link to confirmstartedu32\")\n\n*   **interface**: `api.events.rankedPolls.ConfirmStarted.is`\n\n### DecisionDepositPlaced(`u32`, `AccountId32`, `u128`)[\u200b](#decisiondepositplacedu32-accountid32-u128 \"Direct link to decisiondepositplacedu32-accountid32-u128\")\n\n*   **interface**: `api.events.rankedPolls.DecisionDepositPlaced.is`\n*   **summary**: The decision deposit has been placed.\n\n### DecisionDepositRefunded(`u32`, `AccountId32`, `u128`)[\u200b](#decisiondepositrefundedu32-accountid32-u128 \"Direct link to decisiondepositrefundedu32-accountid32-u128\")\n\n*   **interface**: `api.events.rankedPolls.DecisionDepositRefunded.is`\n*   **summary**: The decision deposit has been refunded.\n\n### DecisionStarted(`u32`, `u16`, `FrameSupportPreimagesBounded`, `PalletRankedCollectiveTally`)[\u200b](#decisionstartedu32-u16-framesupportpreimagesbounded-palletrankedcollectivetally \"Direct link to decisionstartedu32-u16-framesupportpreimagesbounded-palletrankedcollectivetally\")\n\n*   **interface**: `api.events.rankedPolls.DecisionStarted.is`\n*   **summary**: A referendum has moved into the deciding phase.\n\n### DepositSlashed(`AccountId32`, `u128`)[\u200b](#depositslashedaccountid32-u128 \"Direct link to depositslashedaccountid32-u128\")\n\n*   **interface**: `api.events.rankedPolls.DepositSlashed.is`\n*   **summary**: A deposit has been slashed.\n\n### Killed(`u32`, `PalletRankedCollectiveTally`)[\u200b](#killedu32-palletrankedcollectivetally \"Direct link to killedu32-palletrankedcollectivetally\")\n\n*   **interface**: `api.events.rankedPolls.Killed.is`\n*   **summary**: A referendum has been killed.\n\n### MetadataCleared(`u32`, `H256`)[\u200b](#metadataclearedu32-h256 \"Direct link to metadataclearedu32-h256\")\n\n*   **interface**: `api.events.rankedPolls.MetadataCleared.is`\n*   **summary**: Metadata for a referendum has been cleared.\n\n### MetadataSet(`u32`, `H256`)[\u200b](#metadatasetu32-h256 \"Direct link to metadatasetu32-h256\")\n\n*   **interface**: `api.events.rankedPolls.MetadataSet.is`\n*   **summary**: Metadata for a referendum has been set.\n\n### Rejected(`u32`, `PalletRankedCollectiveTally`)[\u200b](#rejectedu32-palletrankedcollectivetally \"Direct link to rejectedu32-palletrankedcollectivetally\")\n\n*   **interface**: `api.events.rankedPolls.Rejected.is`\n*   **summary**: A proposal has been rejected by referendum.\n\n### SubmissionDepositRefunded(`u32`, `AccountId32`, `u128`)[\u200b](#submissiondepositrefundedu32-accountid32-u128 \"Direct link to submissiondepositrefundedu32-accountid32-u128\")\n\n*   **interface**: `api.events.rankedPolls.SubmissionDepositRefunded.is`\n*   **summary**: The submission deposit has been refunded.\n\n### Submitted(`u32`, `u16`, `FrameSupportPreimagesBounded`)[\u200b](#submittedu32-u16-framesupportpreimagesbounded \"Direct link to submittedu32-u16-framesupportpreimagesbounded\")\n\n*   **interface**: `api.events.rankedPolls.Submitted.is`\n*   **summary**: A referendum has been submitted.\n\n### TimedOut(`u32`, `PalletRankedCollectiveTally`)[\u200b](#timedoutu32-palletrankedcollectivetally \"Direct link to timedoutu32-palletrankedcollectivetally\")\n\n*   **interface**: `api.events.rankedPolls.TimedOut.is`\n*   **summary**: A referendum has been timed out without being decided.\n\n* * *\n\nrecovery[\u200b](#recovery \"Direct link to recovery\")\n\n-------------------------------------------------\n\n### AccountRecovered(`AccountId32`, `AccountId32`)[\u200b](#accountrecoveredaccountid32-accountid32 \"Direct link to accountrecoveredaccountid32-accountid32\")\n\n*   **interface**: `api.events.recovery.AccountRecovered.is`\n*   **summary**: Lost account has been successfully recovered by rescuer account.\n\n### RecoveryClosed(`AccountId32`, `AccountId32`)[\u200b](#recoveryclosedaccountid32-accountid32 \"Direct link to recoveryclosedaccountid32-accountid32\")\n\n*   **interface**: `api.events.recovery.RecoveryClosed.is`\n*   **summary**: A recovery process for lost account by rescuer account has been closed.\n\n### RecoveryCreated(`AccountId32`)[\u200b](#recoverycreatedaccountid32 \"Direct link to recoverycreatedaccountid32\")\n\n*   **interface**: `api.events.recovery.RecoveryCreated.is`\n*   **summary**: A recovery process has been set up for an account.\n\n### RecoveryInitiated(`AccountId32`, `AccountId32`)[\u200b](#recoveryinitiatedaccountid32-accountid32 \"Direct link to recoveryinitiatedaccountid32-accountid32\")\n\n*   **interface**: `api.events.recovery.RecoveryInitiated.is`\n*   **summary**: A recovery process has been initiated for lost account by rescuer account.\n\n### RecoveryRemoved(`AccountId32`)[\u200b](#recoveryremovedaccountid32 \"Direct link to recoveryremovedaccountid32\")\n\n*   **interface**: `api.events.recovery.RecoveryRemoved.is`\n*   **summary**: A recovery process has been removed for an account.\n\n### RecoveryVouched(`AccountId32`, `AccountId32`, `AccountId32`)[\u200b](#recoveryvouchedaccountid32-accountid32-accountid32 \"Direct link to recoveryvouchedaccountid32-accountid32-accountid32\")\n\n*   **interface**: `api.events.recovery.RecoveryVouched.is`\n*   **summary**: A recovery process for lost account by rescuer account has been vouched for by sender.\n\n* * *\n\nreferenda[\u200b](#referenda \"Direct link to referenda\")\n\n----------------------------------------------------\n\n### Approved(`u32`)[\u200b](#approvedu32-1 \"Direct link to approvedu32-1\")\n\n*   **interface**: `api.events.referenda.Approved.is`\n*   **summary**: A referendum has been approved and its proposal has been scheduled.\n\n### Cancelled(`u32`, `PalletConvictionVotingTally`)[\u200b](#cancelledu32-palletconvictionvotingtally \"Direct link to cancelledu32-palletconvictionvotingtally\")\n\n*   **interface**: `api.events.referenda.Cancelled.is`\n*   **summary**: A referendum has been cancelled.\n\n### ConfirmAborted(`u32`)[\u200b](#confirmabortedu32-1 \"Direct link to confirmabortedu32-1\")\n\n*   **interface**: `api.events.referenda.ConfirmAborted.is`\n\n### Confirmed(`u32`, `PalletConvictionVotingTally`)[\u200b](#confirmedu32-palletconvictionvotingtally \"Direct link to confirmedu32-palletconvictionvotingtally\")\n\n*   **interface**: `api.events.referenda.Confirmed.is`\n*   **summary**: A referendum has ended its confirmation phase and is ready for approval.\n\n### ConfirmStarted(`u32`)[\u200b](#confirmstartedu32-1 \"Direct link to confirmstartedu32-1\")\n\n*   **interface**: `api.events.referenda.ConfirmStarted.is`\n\n### DecisionDepositPlaced(`u32`, `AccountId32`, `u128`)[\u200b](#decisiondepositplacedu32-accountid32-u128-1 \"Direct link to decisiondepositplacedu32-accountid32-u128-1\")\n\n*   **interface**: `api.events.referenda.DecisionDepositPlaced.is`\n*   **summary**: The decision deposit has been placed.\n\n### DecisionDepositRefunded(`u32`, `AccountId32`, `u128`)[\u200b](#decisiondepositrefundedu32-accountid32-u128-1 \"Direct link to decisiondepositrefundedu32-accountid32-u128-1\")\n\n*   **interface**: `api.events.referenda.DecisionDepositRefunded.is`\n*   **summary**: The decision deposit has been refunded.\n\n### DecisionStarted(`u32`, `u16`, `FrameSupportPreimagesBounded`, `PalletConvictionVotingTally`)[\u200b](#decisionstartedu32-u16-framesupportpreimagesbounded-palletconvictionvotingtally \"Direct link to decisionstartedu32-u16-framesupportpreimagesbounded-palletconvictionvotingtally\")\n\n*   **interface**: `api.events.referenda.DecisionStarted.is`\n*   **summary**: A referendum has moved into the deciding phase.\n\n### DepositSlashed(`AccountId32`, `u128`)[\u200b](#depositslashedaccountid32-u128-1 \"Direct link to depositslashedaccountid32-u128-1\")\n\n*   **interface**: `api.events.referenda.DepositSlashed.is`\n*   **summary**: A deposit has been slashed.\n\n### Killed(`u32`, `PalletConvictionVotingTally`)[\u200b](#killedu32-palletconvictionvotingtally \"Direct link to killedu32-palletconvictionvotingtally\")\n\n*   **interface**: `api.events.referenda.Killed.is`\n*   **summary**: A referendum has been killed.\n\n### MetadataCleared(`u32`, `H256`)[\u200b](#metadataclearedu32-h256-1 \"Direct link to metadataclearedu32-h256-1\")\n\n*   **interface**: `api.events.referenda.MetadataCleared.is`\n*   **summary**: Metadata for a referendum has been cleared.\n\n### MetadataSet(`u32`, `H256`)[\u200b](#metadatasetu32-h256-1 \"Direct link to metadatasetu32-h256-1\")\n\n*   **interface**: `api.events.referenda.MetadataSet.is`\n*   **summary**: Metadata for a referendum has been set.\n\n### Rejected(`u32`, `PalletConvictionVotingTally`)[\u200b](#rejectedu32-palletconvictionvotingtally \"Direct link to rejectedu32-palletconvictionvotingtally\")\n\n*   **interface**: `api.events.referenda.Rejected.is`\n*   **summary**: A proposal has been rejected by referendum.\n\n### SubmissionDepositRefunded(`u32`, `AccountId32`, `u128`)[\u200b](#submissiondepositrefundedu32-accountid32-u128-1 \"Direct link to submissiondepositrefundedu32-accountid32-u128-1\")\n\n*   **interface**: `api.events.referenda.SubmissionDepositRefunded.is`\n*   **summary**: The submission deposit has been refunded.\n\n### Submitted(`u32`, `u16`, `FrameSupportPreimagesBounded`)[\u200b](#submittedu32-u16-framesupportpreimagesbounded-1 \"Direct link to submittedu32-u16-framesupportpreimagesbounded-1\")\n\n*   **interface**: `api.events.referenda.Submitted.is`\n*   **summary**: A referendum has been submitted.\n\n### TimedOut(`u32`, `PalletConvictionVotingTally`)[\u200b](#timedoutu32-palletconvictionvotingtally \"Direct link to timedoutu32-palletconvictionvotingtally\")\n\n*   **interface**: `api.events.referenda.TimedOut.is`\n*   **summary**: A referendum has been timed out without being decided.\n\n* * *\n\nremark[\u200b](#remark \"Direct link to remark\")\n\n-------------------------------------------\n\n### Stored(`AccountId32`, `H256`)[\u200b](#storedaccountid32-h256 \"Direct link to storedaccountid32-h256\")\n\n*   **interface**: `api.events.remark.Stored.is`\n*   **summary**: Stored data off chain.\n\n* * *\n\nrootTesting[\u200b](#roottesting \"Direct link to rootTesting\")\n\n----------------------------------------------------------\n\n### DefensiveTestCall()[\u200b](#defensivetestcall \"Direct link to DefensiveTestCall()\")\n\n*   **interface**: `api.events.rootTesting.DefensiveTestCall.is`\n*   **summary**: Event dispatched when the trigger\\_defensive extrinsic is called.\n\n* * *\n\nsafeMode[\u200b](#safemode \"Direct link to safeMode\")\n\n-------------------------------------------------\n\n### CannotDeposit()[\u200b](#cannotdeposit \"Direct link to CannotDeposit()\")\n\n*   **interface**: `api.events.safeMode.CannotDeposit.is`\n    \n*   **summary**: Could not hold funds for entering or extending the safe-mode.\n    \n    This error comes from the underlying `Currency`.\n    \n\n### CannotRelease()[\u200b](#cannotrelease \"Direct link to CannotRelease()\")\n\n*   **interface**: `api.events.safeMode.CannotRelease.is`\n    \n*   **summary**: Could not release funds for entering or extending the safe-mode.\n    \n    This error comes from the underlying `Currency`.\n    \n\n### DepositPlaced(`AccountId32`, `u128`)[\u200b](#depositplacedaccountid32-u128 \"Direct link to depositplacedaccountid32-u128\")\n\n*   **interface**: `api.events.safeMode.DepositPlaced.is`\n*   **summary**: An account reserved funds for either entering or extending the safe-mode.\n\n### DepositReleased(`AccountId32`, `u128`)[\u200b](#depositreleasedaccountid32-u128 \"Direct link to depositreleasedaccountid32-u128\")\n\n*   **interface**: `api.events.safeMode.DepositReleased.is`\n*   **summary**: An account had a reserve released that was reserved.\n\n### DepositSlashed(`AccountId32`, `u128`)[\u200b](#depositslashedaccountid32-u128-2 \"Direct link to depositslashedaccountid32-u128-2\")\n\n*   **interface**: `api.events.safeMode.DepositSlashed.is`\n*   **summary**: An account had reserve slashed that was reserved.\n\n### Entered(`u32`)[\u200b](#enteredu32 \"Direct link to enteredu32\")\n\n*   **interface**: `api.events.safeMode.Entered.is`\n*   **summary**: The safe-mode was entered until inclusively this block.\n\n### Exited(`PalletSafeModeExitReason`)[\u200b](#exitedpalletsafemodeexitreason \"Direct link to exitedpalletsafemodeexitreason\")\n\n*   **interface**: `api.events.safeMode.Exited.is`\n*   **summary**: Exited the safe-mode for a specific reason.\n\n### Extended(`u32`)[\u200b](#extendedu32 \"Direct link to extendedu32\")\n\n*   **interface**: `api.events.safeMode.Extended.is`\n*   **summary**: The safe-mode was extended until inclusively this block.\n\n* * *\n\nsalary[\u200b](#salary \"Direct link to salary\")\n\n-------------------------------------------\n\n### CycleStarted(`u32`)[\u200b](#cyclestartedu32 \"Direct link to cyclestartedu32\")\n\n*   **interface**: `api.events.salary.CycleStarted.is`\n*   **summary**: The next cycle begins.\n\n### Inducted(`AccountId32`)[\u200b](#inductedaccountid32-1 \"Direct link to inductedaccountid32-1\")\n\n*   **interface**: `api.events.salary.Inducted.is`\n*   **summary**: A member is inducted into the payroll.\n\n### Paid(`AccountId32`, `AccountId32`, `u128`, `Null`)[\u200b](#paidaccountid32-accountid32-u128-null \"Direct link to paidaccountid32-accountid32-u128-null\")\n\n*   **interface**: `api.events.salary.Paid.is`\n*   **summary**: A payment happened.\n\n### Registered(`AccountId32`, `u128`)[\u200b](#registeredaccountid32-u128 \"Direct link to registeredaccountid32-u128\")\n\n*   **interface**: `api.events.salary.Registered.is`\n*   **summary**: A member registered for a payout.\n\n* * *\n\nscheduler[\u200b](#scheduler \"Direct link to scheduler\")\n\n----------------------------------------------------\n\n### CallUnavailable(`(u32,u32)`, `Option<[u8;32]>`)[\u200b](#callunavailableu32u32-optionu832 \"Direct link to callunavailableu32u32-optionu832\")\n\n*   **interface**: `api.events.scheduler.CallUnavailable.is`\n*   **summary**: The call for the provided hash was not found so the task has been aborted.\n\n### Canceled(`u32`, `u32`)[\u200b](#canceledu32-u32-1 \"Direct link to canceledu32-u32-1\")\n\n*   **interface**: `api.events.scheduler.Canceled.is`\n*   **summary**: Canceled some task.\n\n### Dispatched(`(u32,u32)`, `Option<[u8;32]>`, `Result<Null, SpRuntimeDispatchError>`)[\u200b](#dispatchedu32u32-optionu832-resultnull-spruntimedispatcherror \"Direct link to dispatchedu32u32-optionu832-resultnull-spruntimedispatcherror\")\n\n*   **interface**: `api.events.scheduler.Dispatched.is`\n*   **summary**: Dispatched some task.\n\n### PeriodicFailed(`(u32,u32)`, `Option<[u8;32]>`)[\u200b](#periodicfailedu32u32-optionu832 \"Direct link to periodicfailedu32u32-optionu832\")\n\n*   **interface**: `api.events.scheduler.PeriodicFailed.is`\n*   **summary**: The given task was unable to be renewed since the agenda is full at that block.\n\n### PermanentlyOverweight(`(u32,u32)`, `Option<[u8;32]>`)[\u200b](#permanentlyoverweightu32u32-optionu832 \"Direct link to permanentlyoverweightu32u32-optionu832\")\n\n*   **interface**: `api.events.scheduler.PermanentlyOverweight.is`\n*   **summary**: The given task can never be executed since it is overweight.\n\n### Scheduled(`u32`, `u32`)[\u200b](#scheduledu32-u32 \"Direct link to scheduledu32-u32\")\n\n*   **interface**: `api.events.scheduler.Scheduled.is`\n*   **summary**: Scheduled some task.\n\n* * *\n\nsession[\u200b](#session \"Direct link to session\")\n\n----------------------------------------------\n\n### NewSession(`u32`)[\u200b](#newsessionu32 \"Direct link to newsessionu32\")\n\n*   **interface**: `api.events.session.NewSession.is`\n*   **summary**: New session has happened. Note that the argument is the session index, not the block number as the type might suggest.\n\n* * *\n\nskipFeelessPayment[\u200b](#skipfeelesspayment \"Direct link to skipFeelessPayment\")\n\n-------------------------------------------------------------------------------\n\n### FeeSkipped(`AccountId32`)[\u200b](#feeskippedaccountid32 \"Direct link to feeskippedaccountid32\")\n\n*   **interface**: `api.events.skipFeelessPayment.FeeSkipped.is`\n*   **summary**: A transaction fee was skipped.\n\n* * *\n\nsociety[\u200b](#society \"Direct link to society\")\n\n----------------------------------------------\n\n### AutoUnbid(`AccountId32`)[\u200b](#autounbidaccountid32 \"Direct link to autounbidaccountid32\")\n\n*   **interface**: `api.events.society.AutoUnbid.is`\n*   **summary**: A candidate was dropped (due to an excess of bids in the system).\n\n### Bid(`AccountId32`, `u128`)[\u200b](#bidaccountid32-u128 \"Direct link to bidaccountid32-u128\")\n\n*   **interface**: `api.events.society.Bid.is`\n*   **summary**: A membership bid just happened. The given account is the candidate's ID and their offer is the second.\n\n### CandidateSuspended(`AccountId32`)[\u200b](#candidatesuspendedaccountid32 \"Direct link to candidatesuspendedaccountid32\")\n\n*   **interface**: `api.events.society.CandidateSuspended.is`\n*   **summary**: A candidate has been suspended\n\n### Challenged(`AccountId32`)[\u200b](#challengedaccountid32 \"Direct link to challengedaccountid32\")\n\n*   **interface**: `api.events.society.Challenged.is`\n*   **summary**: A member has been challenged\n\n### DefenderVote(`AccountId32`, `bool`)[\u200b](#defendervoteaccountid32-bool \"Direct link to defendervoteaccountid32-bool\")\n\n*   **interface**: `api.events.society.DefenderVote.is`\n*   **summary**: A vote has been placed for a defending member\n\n### Deposit(`u128`)[\u200b](#depositu128 \"Direct link to depositu128\")\n\n*   **interface**: `api.events.society.Deposit.is`\n*   **summary**: Some funds were deposited into the society account.\n\n### Elevated(`AccountId32`, `u32`)[\u200b](#elevatedaccountid32-u32 \"Direct link to elevatedaccountid32-u32\")\n\n*   **interface**: `api.events.society.Elevated.is`\n*   **summary**: A \\[member\\] got elevated to \\[rank\\].\n\n### Founded(`AccountId32`)[\u200b](#foundedaccountid32 \"Direct link to foundedaccountid32\")\n\n*   **interface**: `api.events.society.Founded.is`\n*   **summary**: The society is founded by the given identity.\n\n### Inducted(`AccountId32`, `Vec<AccountId32>`)[\u200b](#inductedaccountid32-vecaccountid32 \"Direct link to inductedaccountid32-vecaccountid32\")\n\n*   **interface**: `api.events.society.Inducted.is`\n*   **summary**: A group of candidates have been inducted. The batch's primary is the first value, the batch in full is the second.\n\n### MemberSuspended(`AccountId32`)[\u200b](#membersuspendedaccountid32 \"Direct link to membersuspendedaccountid32\")\n\n*   **interface**: `api.events.society.MemberSuspended.is`\n*   **summary**: A member has been suspended\n\n### NewParams(`PalletSocietyGroupParams`)[\u200b](#newparamspalletsocietygroupparams \"Direct link to newparamspalletsocietygroupparams\")\n\n*   **interface**: `api.events.society.NewParams.is`\n*   **summary**: A new set of \\[params\\] has been set for the group.\n\n### SuspendedMemberJudgement(`AccountId32`, `bool`)[\u200b](#suspendedmemberjudgementaccountid32-bool \"Direct link to suspendedmemberjudgementaccountid32-bool\")\n\n*   **interface**: `api.events.society.SuspendedMemberJudgement.is`\n*   **summary**: A suspended member has been judged.\n\n### Unbid(`AccountId32`)[\u200b](#unbidaccountid32 \"Direct link to unbidaccountid32\")\n\n*   **interface**: `api.events.society.Unbid.is`\n*   **summary**: A candidate was dropped (by their request).\n\n### Unfounded(`AccountId32`)[\u200b](#unfoundedaccountid32 \"Direct link to unfoundedaccountid32\")\n\n*   **interface**: `api.events.society.Unfounded.is`\n*   **summary**: Society is unfounded.\n\n### Unvouch(`AccountId32`)[\u200b](#unvouchaccountid32 \"Direct link to unvouchaccountid32\")\n\n*   **interface**: `api.events.society.Unvouch.is`\n*   **summary**: A candidate was dropped (by request of who vouched for them).\n\n### Vote(`AccountId32`, `AccountId32`, `bool`)[\u200b](#voteaccountid32-accountid32-bool \"Direct link to voteaccountid32-accountid32-bool\")\n\n*   **interface**: `api.events.society.Vote.is`\n*   **summary**: A vote has been placed\n\n### Vouch(`AccountId32`, `u128`, `AccountId32`)[\u200b](#vouchaccountid32-u128-accountid32 \"Direct link to vouchaccountid32-u128-accountid32\")\n\n*   **interface**: `api.events.society.Vouch.is`\n*   **summary**: A membership bid just happened by vouching. The given account is the candidate's ID and their offer is the second. The vouching party is the third.\n\n* * *\n\nstaking[\u200b](#staking \"Direct link to staking\")\n\n----------------------------------------------\n\n### Bonded(`AccountId32`, `u128`)[\u200b](#bondedaccountid32-u128 \"Direct link to bondedaccountid32-u128\")\n\n*   **interface**: `api.events.staking.Bonded.is`\n    \n*   **summary**: An account has bonded this amount. \\[stash, amount\\]\n    \n    NOTE: This event is only emitted when funds are bonded via a dispatchable. Notably, it will not be emitted for staking rewards when they are added to stake.\n    \n\n### Chilled(`AccountId32`)[\u200b](#chilledaccountid32 \"Direct link to chilledaccountid32\")\n\n*   **interface**: `api.events.staking.Chilled.is`\n*   **summary**: An account has stopped participating as either a validator or nominator.\n\n### EraPaid(`u32`, `u128`, `u128`)[\u200b](#erapaidu32-u128-u128 \"Direct link to erapaidu32-u128-u128\")\n\n*   **interface**: `api.events.staking.EraPaid.is`\n*   **summary**: The era payout has been set; the first balance is the validator-payout; the second is the remainder from the maximum amount of reward.\n\n### ForceEra(`PalletStakingForcing`)[\u200b](#forceerapalletstakingforcing \"Direct link to forceerapalletstakingforcing\")\n\n*   **interface**: `api.events.staking.ForceEra.is`\n*   **summary**: A new force era mode was set.\n\n### Kicked(`AccountId32`, `AccountId32`)[\u200b](#kickedaccountid32-accountid32 \"Direct link to kickedaccountid32-accountid32\")\n\n*   **interface**: `api.events.staking.Kicked.is`\n*   **summary**: A nominator has been kicked from a validator.\n\n### OldSlashingReportDiscarded(`u32`)[\u200b](#oldslashingreportdiscardedu32 \"Direct link to oldslashingreportdiscardedu32\")\n\n*   **interface**: `api.events.staking.OldSlashingReportDiscarded.is`\n*   **summary**: An old slashing report from a prior era was discarded because it could not be processed.\n\n### PayoutStarted(`u32`, `AccountId32`)[\u200b](#payoutstartedu32-accountid32 \"Direct link to payoutstartedu32-accountid32\")\n\n*   **interface**: `api.events.staking.PayoutStarted.is`\n*   **summary**: The stakers' rewards are getting paid.\n\n### Rewarded(`AccountId32`, `PalletStakingRewardDestination`, `u128`)[\u200b](#rewardedaccountid32-palletstakingrewarddestination-u128 \"Direct link to rewardedaccountid32-palletstakingrewarddestination-u128\")\n\n*   **interface**: `api.events.staking.Rewarded.is`\n*   **summary**: The nominator has been rewarded by this amount to this destination.\n\n### Slashed(`AccountId32`, `u128`)[\u200b](#slashedaccountid32-u128-3 \"Direct link to slashedaccountid32-u128-3\")\n\n*   **interface**: `api.events.staking.Slashed.is`\n*   **summary**: A staker (validator or nominator) has been slashed by the given amount.\n\n### SlashReported(`AccountId32`, `Perbill`, `u32`)[\u200b](#slashreportedaccountid32-perbill-u32 \"Direct link to slashreportedaccountid32-perbill-u32\")\n\n*   **interface**: `api.events.staking.SlashReported.is`\n*   **summary**: A slash for the given validator, for the given percentage of their stake, at the given era as been reported.\n\n### SnapshotTargetsSizeExceeded(`u32`)[\u200b](#snapshottargetssizeexceededu32 \"Direct link to snapshottargetssizeexceededu32\")\n\n*   **interface**: `api.events.staking.SnapshotTargetsSizeExceeded.is`\n*   **summary**: Targets size limit reached.\n\n### SnapshotVotersSizeExceeded(`u32`)[\u200b](#snapshotvoterssizeexceededu32 \"Direct link to snapshotvoterssizeexceededu32\")\n\n*   **interface**: `api.events.staking.SnapshotVotersSizeExceeded.is`\n*   **summary**: Voters size limit reached.\n\n### StakersElected()[\u200b](#stakerselected \"Direct link to StakersElected()\")\n\n*   **interface**: `api.events.staking.StakersElected.is`\n*   **summary**: A new set of stakers was elected.\n\n### StakingElectionFailed()[\u200b](#stakingelectionfailed \"Direct link to StakingElectionFailed()\")\n\n*   **interface**: `api.events.staking.StakingElectionFailed.is`\n*   **summary**: The election failed. No new era is planned.\n\n### Unbonded(`AccountId32`, `u128`)[\u200b](#unbondedaccountid32-u128 \"Direct link to unbondedaccountid32-u128\")\n\n*   **interface**: `api.events.staking.Unbonded.is`\n*   **summary**: An account has unbonded this amount.\n\n### ValidatorPrefsSet(`AccountId32`, `PalletStakingValidatorPrefs`)[\u200b](#validatorprefssetaccountid32-palletstakingvalidatorprefs \"Direct link to validatorprefssetaccountid32-palletstakingvalidatorprefs\")\n\n*   **interface**: `api.events.staking.ValidatorPrefsSet.is`\n*   **summary**: A validator has set their preferences.\n\n### Withdrawn(`AccountId32`, `u128`)[\u200b](#withdrawnaccountid32-u128 \"Direct link to withdrawnaccountid32-u128\")\n\n*   **interface**: `api.events.staking.Withdrawn.is`\n*   **summary**: An account has called `withdraw_unbonded` and removed unbonding chunks worth `Balance` from the unlocking queue.\n\n* * *\n\nstatement[\u200b](#statement \"Direct link to statement\")\n\n----------------------------------------------------\n\n### NewStatement(`AccountId32`, `SpStatementStoreStatement`)[\u200b](#newstatementaccountid32-spstatementstorestatement \"Direct link to newstatementaccountid32-spstatementstorestatement\")\n\n*   **interface**: `api.events.statement.NewStatement.is`\n*   **summary**: A new statement is submitted\n\n* * *\n\nstateTrieMigration[\u200b](#statetriemigration \"Direct link to stateTrieMigration\")\n\n-------------------------------------------------------------------------------\n\n### AutoMigrationFinished()[\u200b](#automigrationfinished \"Direct link to AutoMigrationFinished()\")\n\n*   **interface**: `api.events.stateTrieMigration.AutoMigrationFinished.is`\n*   **summary**: The auto migration task finished.\n\n### Halted(`PalletStateTrieMigrationError`)[\u200b](#haltedpalletstatetriemigrationerror \"Direct link to haltedpalletstatetriemigrationerror\")\n\n*   **interface**: `api.events.stateTrieMigration.Halted.is`\n*   **summary**: Migration got halted due to an error or miss-configuration.\n\n### Migrated(`u32`, `u32`, `PalletStateTrieMigrationMigrationCompute`)[\u200b](#migratedu32-u32-palletstatetriemigrationmigrationcompute \"Direct link to migratedu32-u32-palletstatetriemigrationmigrationcompute\")\n\n*   **interface**: `api.events.stateTrieMigration.Migrated.is`\n*   **summary**: Given number of `(top, child)` keys were migrated respectively, with the given `compute`.\n\n### Slashed(`AccountId32`, `u128`)[\u200b](#slashedaccountid32-u128-4 \"Direct link to slashedaccountid32-u128-4\")\n\n*   **interface**: `api.events.stateTrieMigration.Slashed.is`\n*   **summary**: Some account got slashed by the given amount.\n\n* * *\n\nsudo[\u200b](#sudo \"Direct link to sudo\")\n\n-------------------------------------\n\n### KeyChanged(`Option<AccountId32>`, `AccountId32`)[\u200b](#keychangedoptionaccountid32-accountid32 \"Direct link to keychangedoptionaccountid32-accountid32\")\n\n*   **interface**: `api.events.sudo.KeyChanged.is`\n*   **summary**: The sudo key has been updated.\n\n### KeyRemoved()[\u200b](#keyremoved \"Direct link to KeyRemoved()\")\n\n*   **interface**: `api.events.sudo.KeyRemoved.is`\n*   **summary**: The key was permanently removed.\n\n### Sudid(`Result<Null, SpRuntimeDispatchError>`)[\u200b](#sudidresultnull-spruntimedispatcherror \"Direct link to sudidresultnull-spruntimedispatcherror\")\n\n*   **interface**: `api.events.sudo.Sudid.is`\n*   **summary**: A sudo call just took place.\n\n### SudoAsDone(`Result<Null, SpRuntimeDispatchError>`)[\u200b](#sudoasdoneresultnull-spruntimedispatcherror \"Direct link to sudoasdoneresultnull-spruntimedispatcherror\")\n\n*   **interface**: `api.events.sudo.SudoAsDone.is`\n*   **summary**: A [sudo\\_as](Pallet::sudo_as)\n     call just took place.\n\n* * *\n\nsystem[\u200b](#system \"Direct link to system\")\n\n-------------------------------------------\n\n### CodeUpdated()[\u200b](#codeupdated \"Direct link to CodeUpdated()\")\n\n*   **interface**: `api.events.system.CodeUpdated.is`\n*   **summary**: `:code` was updated.\n\n### ExtrinsicFailed(`SpRuntimeDispatchError`, `FrameSupportDispatchDispatchInfo`)[\u200b](#extrinsicfailedspruntimedispatcherror-framesupportdispatchdispatchinfo \"Direct link to extrinsicfailedspruntimedispatcherror-framesupportdispatchdispatchinfo\")\n\n*   **interface**: `api.events.system.ExtrinsicFailed.is`\n*   **summary**: An extrinsic failed.\n\n### ExtrinsicSuccess(`FrameSupportDispatchDispatchInfo`)[\u200b](#extrinsicsuccessframesupportdispatchdispatchinfo \"Direct link to extrinsicsuccessframesupportdispatchdispatchinfo\")\n\n*   **interface**: `api.events.system.ExtrinsicSuccess.is`\n*   **summary**: An extrinsic completed successfully.\n\n### KilledAccount(`AccountId32`)[\u200b](#killedaccountaccountid32 \"Direct link to killedaccountaccountid32\")\n\n*   **interface**: `api.events.system.KilledAccount.is`\n*   **summary**: An account was reaped.\n\n### NewAccount(`AccountId32`)[\u200b](#newaccountaccountid32 \"Direct link to newaccountaccountid32\")\n\n*   **interface**: `api.events.system.NewAccount.is`\n*   **summary**: A new account was created.\n\n### Remarked(`AccountId32`, `H256`)[\u200b](#remarkedaccountid32-h256 \"Direct link to remarkedaccountid32-h256\")\n\n*   **interface**: `api.events.system.Remarked.is`\n*   **summary**: On on-chain remark happened.\n\n### TaskCompleted(`KitchensinkRuntimeRuntimeTask`)[\u200b](#taskcompletedkitchensinkruntimeruntimetask \"Direct link to taskcompletedkitchensinkruntimeruntimetask\")\n\n*   **interface**: `api.events.system.TaskCompleted.is`\n*   **summary**: A \\[`Task`\\] has finished executing.\n\n### TaskFailed(`KitchensinkRuntimeRuntimeTask`, `SpRuntimeDispatchError`)[\u200b](#taskfailedkitchensinkruntimeruntimetask-spruntimedispatcherror \"Direct link to taskfailedkitchensinkruntimeruntimetask-spruntimedispatcherror\")\n\n*   **interface**: `api.events.system.TaskFailed.is`\n*   **summary**: A \\[`Task`\\] failed during execution.\n\n### TaskStarted(`KitchensinkRuntimeRuntimeTask`)[\u200b](#taskstartedkitchensinkruntimeruntimetask \"Direct link to taskstartedkitchensinkruntimeruntimetask\")\n\n*   **interface**: `api.events.system.TaskStarted.is`\n*   **summary**: A \\[`Task`\\] has started executing\n\n* * *\n\ntechnicalCommittee[\u200b](#technicalcommittee \"Direct link to technicalCommittee\")\n\n-------------------------------------------------------------------------------\n\n### Approved(`H256`)[\u200b](#approvedh256-2 \"Direct link to approvedh256-2\")\n\n*   **interface**: `api.events.technicalCommittee.Approved.is`\n*   **summary**: A motion was approved by the required threshold.\n\n### Closed(`H256`, `u32`, `u32`)[\u200b](#closedh256-u32-u32-2 \"Direct link to closedh256-u32-u32-2\")\n\n*   **interface**: `api.events.technicalCommittee.Closed.is`\n*   **summary**: A proposal was closed because its threshold was reached or after its duration was up.\n\n### Disapproved(`H256`)[\u200b](#disapprovedh256-2 \"Direct link to disapprovedh256-2\")\n\n*   **interface**: `api.events.technicalCommittee.Disapproved.is`\n*   **summary**: A motion was not approved by the required threshold.\n\n### Executed(`H256`, `Result<Null, SpRuntimeDispatchError>`)[\u200b](#executedh256-resultnull-spruntimedispatcherror-2 \"Direct link to executedh256-resultnull-spruntimedispatcherror-2\")\n\n*   **interface**: `api.events.technicalCommittee.Executed.is`\n*   **summary**: A motion was executed; result will be `Ok` if it returned without error.\n\n### MemberExecuted(`H256`, `Result<Null, SpRuntimeDispatchError>`)[\u200b](#memberexecutedh256-resultnull-spruntimedispatcherror-2 \"Direct link to memberexecutedh256-resultnull-spruntimedispatcherror-2\")\n\n*   **interface**: `api.events.technicalCommittee.MemberExecuted.is`\n*   **summary**: A single member did some action; result will be `Ok` if it returned without error.\n\n### Proposed(`AccountId32`, `u32`, `H256`, `u32`)[\u200b](#proposedaccountid32-u32-h256-u32-2 \"Direct link to proposedaccountid32-u32-h256-u32-2\")\n\n*   **interface**: `api.events.technicalCommittee.Proposed.is`\n*   **summary**: A motion (given hash) has been proposed (by given account) with a threshold (given `MemberCount`).\n\n### Voted(`AccountId32`, `H256`, `bool`, `u32`, `u32`)[\u200b](#votedaccountid32-h256-bool-u32-u32-2 \"Direct link to votedaccountid32-h256-bool-u32-u32-2\")\n\n*   **interface**: `api.events.technicalCommittee.Voted.is`\n*   **summary**: A motion (given hash) has been voted on by given account, leaving a tally (yes votes and no votes given respectively as `MemberCount`).\n\n* * *\n\ntechnicalMembership[\u200b](#technicalmembership \"Direct link to technicalMembership\")\n\n----------------------------------------------------------------------------------\n\n### Dummy()[\u200b](#dummy \"Direct link to Dummy()\")\n\n*   **interface**: `api.events.technicalMembership.Dummy.is`\n*   **summary**: Phantom member, never used.\n\n### KeyChanged()[\u200b](#keychanged \"Direct link to KeyChanged()\")\n\n*   **interface**: `api.events.technicalMembership.KeyChanged.is`\n*   **summary**: One of the members' keys changed.\n\n### MemberAdded()[\u200b](#memberadded \"Direct link to MemberAdded()\")\n\n*   **interface**: `api.events.technicalMembership.MemberAdded.is`\n*   **summary**: The given member was added; see the transaction for who.\n\n### MemberRemoved()[\u200b](#memberremoved \"Direct link to MemberRemoved()\")\n\n*   **interface**: `api.events.technicalMembership.MemberRemoved.is`\n*   **summary**: The given member was removed; see the transaction for who.\n\n### MembersReset()[\u200b](#membersreset \"Direct link to MembersReset()\")\n\n*   **interface**: `api.events.technicalMembership.MembersReset.is`\n*   **summary**: The membership was reset; see the transaction for who the new set is.\n\n### MembersSwapped()[\u200b](#membersswapped \"Direct link to MembersSwapped()\")\n\n*   **interface**: `api.events.technicalMembership.MembersSwapped.is`\n*   **summary**: Two members were swapped; see the transaction for who.\n\n* * *\n\ntips[\u200b](#tips \"Direct link to tips\")\n\n-------------------------------------\n\n### NewTip(`H256`)[\u200b](#newtiph256 \"Direct link to newtiph256\")\n\n*   **interface**: `api.events.tips.NewTip.is`\n*   **summary**: A new tip suggestion has been opened.\n\n### TipClosed(`H256`, `AccountId32`, `u128`)[\u200b](#tipclosedh256-accountid32-u128 \"Direct link to tipclosedh256-accountid32-u128\")\n\n*   **interface**: `api.events.tips.TipClosed.is`\n*   **summary**: A tip suggestion has been closed.\n\n### TipClosing(`H256`)[\u200b](#tipclosingh256 \"Direct link to tipclosingh256\")\n\n*   **interface**: `api.events.tips.TipClosing.is`\n*   **summary**: A tip suggestion has reached threshold and is closing.\n\n### TipRetracted(`H256`)[\u200b](#tipretractedh256 \"Direct link to tipretractedh256\")\n\n*   **interface**: `api.events.tips.TipRetracted.is`\n*   **summary**: A tip suggestion has been retracted.\n\n### TipSlashed(`H256`, `AccountId32`, `u128`)[\u200b](#tipslashedh256-accountid32-u128 \"Direct link to tipslashedh256-accountid32-u128\")\n\n*   **interface**: `api.events.tips.TipSlashed.is`\n*   **summary**: A tip suggestion has been slashed.\n\n* * *\n\ntransactionPayment[\u200b](#transactionpayment \"Direct link to transactionPayment\")\n\n-------------------------------------------------------------------------------\n\n### TransactionFeePaid(`AccountId32`, `u128`, `u128`)[\u200b](#transactionfeepaidaccountid32-u128-u128 \"Direct link to transactionfeepaidaccountid32-u128-u128\")\n\n*   **interface**: `api.events.transactionPayment.TransactionFeePaid.is`\n*   **summary**: A transaction fee `actual_fee`, of which `tip` was added to the minimum inclusion fee, has been paid by `who`.\n\n* * *\n\ntransactionStorage[\u200b](#transactionstorage \"Direct link to transactionStorage\")\n\n-------------------------------------------------------------------------------\n\n### ProofChecked()[\u200b](#proofchecked \"Direct link to ProofChecked()\")\n\n*   **interface**: `api.events.transactionStorage.ProofChecked.is`\n*   **summary**: Storage proof was successfully checked.\n\n### Renewed(`u32`)[\u200b](#renewedu32 \"Direct link to renewedu32\")\n\n*   **interface**: `api.events.transactionStorage.Renewed.is`\n*   **summary**: Renewed data under specified index.\n\n### Stored(`u32`)[\u200b](#storedu32 \"Direct link to storedu32\")\n\n*   **interface**: `api.events.transactionStorage.Stored.is`\n*   **summary**: Stored data under specified index.\n\n* * *\n\ntreasury[\u200b](#treasury \"Direct link to treasury\")\n\n-------------------------------------------------\n\n### AssetSpendApproved(`u32`, `u32`, `u128`, `AccountId32`, `u32`, `u32`)[\u200b](#assetspendapprovedu32-u32-u128-accountid32-u32-u32 \"Direct link to assetspendapprovedu32-u32-u128-accountid32-u32-u32\")\n\n*   **interface**: `api.events.treasury.AssetSpendApproved.is`\n*   **summary**: A new asset spend proposal has been approved.\n\n### AssetSpendVoided(`u32`)[\u200b](#assetspendvoidedu32 \"Direct link to assetspendvoidedu32\")\n\n*   **interface**: `api.events.treasury.AssetSpendVoided.is`\n*   **summary**: An approved spend was voided.\n\n### Awarded(`u32`, `u128`, `AccountId32`)[\u200b](#awardedu32-u128-accountid32 \"Direct link to awardedu32-u128-accountid32\")\n\n*   **interface**: `api.events.treasury.Awarded.is`\n*   **summary**: Some funds have been allocated.\n\n### Burnt(`u128`)[\u200b](#burntu128 \"Direct link to burntu128\")\n\n*   **interface**: `api.events.treasury.Burnt.is`\n*   **summary**: Some of our funds have been burnt.\n\n### Deposit(`u128`)[\u200b](#depositu128-1 \"Direct link to depositu128-1\")\n\n*   **interface**: `api.events.treasury.Deposit.is`\n*   **summary**: Some funds have been deposited.\n\n### Paid(`u32`, `Null`)[\u200b](#paidu32-null \"Direct link to paidu32-null\")\n\n*   **interface**: `api.events.treasury.Paid.is`\n*   **summary**: A payment happened.\n\n### PaymentFailed(`u32`, `Null`)[\u200b](#paymentfailedu32-null \"Direct link to paymentfailedu32-null\")\n\n*   **interface**: `api.events.treasury.PaymentFailed.is`\n*   **summary**: A payment failed and can be retried.\n\n### Proposed(`u32`)[\u200b](#proposedu32 \"Direct link to proposedu32\")\n\n*   **interface**: `api.events.treasury.Proposed.is`\n*   **summary**: New proposal.\n\n### Rejected(`u32`, `u128`)[\u200b](#rejectedu32-u128 \"Direct link to rejectedu32-u128\")\n\n*   **interface**: `api.events.treasury.Rejected.is`\n*   **summary**: A proposal was rejected; funds were slashed.\n\n### Rollover(`u128`)[\u200b](#rolloveru128 \"Direct link to rolloveru128\")\n\n*   **interface**: `api.events.treasury.Rollover.is`\n*   **summary**: Spending has finished; this is the amount that rolls over until next spend.\n\n### SpendApproved(`u32`, `u128`, `AccountId32`)[\u200b](#spendapprovedu32-u128-accountid32 \"Direct link to spendapprovedu32-u128-accountid32\")\n\n*   **interface**: `api.events.treasury.SpendApproved.is`\n*   **summary**: A new spend proposal has been approved.\n\n### Spending(`u128`)[\u200b](#spendingu128 \"Direct link to spendingu128\")\n\n*   **interface**: `api.events.treasury.Spending.is`\n*   **summary**: We have ended a spend period and will now allocate funds.\n\n### SpendProcessed(`u32`)[\u200b](#spendprocessedu32 \"Direct link to spendprocessedu32\")\n\n*   **interface**: `api.events.treasury.SpendProcessed.is`\n*   **summary**: A spend was processed and removed from the storage. It might have been successfully paid or it may have expired.\n\n### UpdatedInactive(`u128`, `u128`)[\u200b](#updatedinactiveu128-u128 \"Direct link to updatedinactiveu128-u128\")\n\n*   **interface**: `api.events.treasury.UpdatedInactive.is`\n*   **summary**: The inactive funds of the pallet have been updated.\n\n* * *\n\ntxPause[\u200b](#txpause \"Direct link to txPause\")\n\n----------------------------------------------\n\n### CallPaused(`(Bytes,Bytes)`)[\u200b](#callpausedbytesbytes \"Direct link to callpausedbytesbytes\")\n\n*   **interface**: `api.events.txPause.CallPaused.is`\n*   **summary**: This pallet, or a specific call is now paused.\n\n### CallUnpaused(`(Bytes,Bytes)`)[\u200b](#callunpausedbytesbytes \"Direct link to callunpausedbytesbytes\")\n\n*   **interface**: `api.events.txPause.CallUnpaused.is`\n*   **summary**: This pallet, or a specific call is now unpaused.\n\n* * *\n\nuniques[\u200b](#uniques \"Direct link to uniques\")\n\n----------------------------------------------\n\n### ApprovalCancelled(`u32`, `u32`, `AccountId32`, `AccountId32`)[\u200b](#approvalcancelledu32-u32-accountid32-accountid32-1 \"Direct link to approvalcancelledu32-u32-accountid32-accountid32-1\")\n\n*   **interface**: `api.events.uniques.ApprovalCancelled.is`\n*   **summary**: An approval for a `delegate` account to transfer the `item` of an item `collection` was cancelled by its `owner`.\n\n### ApprovedTransfer(`u32`, `u32`, `AccountId32`, `AccountId32`)[\u200b](#approvedtransferu32-u32-accountid32-accountid32 \"Direct link to approvedtransferu32-u32-accountid32-accountid32\")\n\n*   **interface**: `api.events.uniques.ApprovedTransfer.is`\n*   **summary**: An `item` of a `collection` has been approved by the `owner` for transfer by a `delegate`.\n\n### AttributeCleared(`u32`, `Option<u32>`, `Bytes`)[\u200b](#attributeclearedu32-optionu32-bytes \"Direct link to attributeclearedu32-optionu32-bytes\")\n\n*   **interface**: `api.events.uniques.AttributeCleared.is`\n*   **summary**: Attribute metadata has been cleared for a `collection` or `item`.\n\n### AttributeSet(`u32`, `Option<u32>`, `Bytes`, `Bytes`)[\u200b](#attributesetu32-optionu32-bytes-bytes \"Direct link to attributesetu32-optionu32-bytes-bytes\")\n\n*   **interface**: `api.events.uniques.AttributeSet.is`\n*   **summary**: New attribute metadata has been set for a `collection` or `item`.\n\n### Burned(`u32`, `u32`, `AccountId32`)[\u200b](#burnedu32-u32-accountid32-1 \"Direct link to burnedu32-u32-accountid32-1\")\n\n*   **interface**: `api.events.uniques.Burned.is`\n*   **summary**: An `item` was destroyed.\n\n### CollectionFrozen(`u32`)[\u200b](#collectionfrozenu32 \"Direct link to collectionfrozenu32\")\n\n*   **interface**: `api.events.uniques.CollectionFrozen.is`\n*   **summary**: Some `collection` was frozen.\n\n### CollectionMaxSupplySet(`u32`, `u32`)[\u200b](#collectionmaxsupplysetu32-u32-1 \"Direct link to collectionmaxsupplysetu32-u32-1\")\n\n*   **interface**: `api.events.uniques.CollectionMaxSupplySet.is`\n*   **summary**: Max supply has been set for a collection.\n\n### CollectionMetadataCleared(`u32`)[\u200b](#collectionmetadataclearedu32-1 \"Direct link to collectionmetadataclearedu32-1\")\n\n*   **interface**: `api.events.uniques.CollectionMetadataCleared.is`\n*   **summary**: Metadata has been cleared for a `collection`.\n\n### CollectionMetadataSet(`u32`, `Bytes`, `bool`)[\u200b](#collectionmetadatasetu32-bytes-bool \"Direct link to collectionmetadatasetu32-bytes-bool\")\n\n*   **interface**: `api.events.uniques.CollectionMetadataSet.is`\n*   **summary**: New metadata has been set for a `collection`.\n\n### CollectionThawed(`u32`)[\u200b](#collectionthawedu32 \"Direct link to collectionthawedu32\")\n\n*   **interface**: `api.events.uniques.CollectionThawed.is`\n*   **summary**: Some `collection` was thawed.\n\n### Created(`u32`, `AccountId32`, `AccountId32`)[\u200b](#createdu32-accountid32-accountid32-3 \"Direct link to createdu32-accountid32-accountid32-3\")\n\n*   **interface**: `api.events.uniques.Created.is`\n*   **summary**: A `collection` was created.\n\n### Destroyed(`u32`)[\u200b](#destroyedu32-4 \"Direct link to destroyedu32-4\")\n\n*   **interface**: `api.events.uniques.Destroyed.is`\n*   **summary**: A `collection` was destroyed.\n\n### ForceCreated(`u32`, `AccountId32`)[\u200b](#forcecreatedu32-accountid32-3 \"Direct link to forcecreatedu32-accountid32-3\")\n\n*   **interface**: `api.events.uniques.ForceCreated.is`\n*   **summary**: A `collection` was force-created.\n\n### Frozen(`u32`, `u32`)[\u200b](#frozenu32-u32 \"Direct link to frozenu32-u32\")\n\n*   **interface**: `api.events.uniques.Frozen.is`\n*   **summary**: Some `item` was frozen.\n\n### Issued(`u32`, `u32`, `AccountId32`)[\u200b](#issuedu32-u32-accountid32-1 \"Direct link to issuedu32-u32-accountid32-1\")\n\n*   **interface**: `api.events.uniques.Issued.is`\n*   **summary**: An `item` was issued.\n\n### ItemBought(`u32`, `u32`, `u128`, `AccountId32`, `AccountId32`)[\u200b](#itemboughtu32-u32-u128-accountid32-accountid32-1 \"Direct link to itemboughtu32-u32-u128-accountid32-accountid32-1\")\n\n*   **interface**: `api.events.uniques.ItemBought.is`\n*   **summary**: An item was bought.\n\n### ItemPriceRemoved(`u32`, `u32`)[\u200b](#itempriceremovedu32-u32-1 \"Direct link to itempriceremovedu32-u32-1\")\n\n*   **interface**: `api.events.uniques.ItemPriceRemoved.is`\n*   **summary**: The price for the instance was removed.\n\n### ItemPriceSet(`u32`, `u32`, `u128`, `Option<AccountId32>`)[\u200b](#itempricesetu32-u32-u128-optionaccountid32-1 \"Direct link to itempricesetu32-u32-u128-optionaccountid32-1\")\n\n*   **interface**: `api.events.uniques.ItemPriceSet.is`\n*   **summary**: The price was set for the instance.\n\n### ItemStatusChanged(`u32`)[\u200b](#itemstatuschangedu32 \"Direct link to itemstatuschangedu32\")\n\n*   **interface**: `api.events.uniques.ItemStatusChanged.is`\n*   **summary**: A `collection` has had its attributes changed by the `Force` origin.\n\n### MetadataCleared(`u32`, `u32`)[\u200b](#metadataclearedu32-u32 \"Direct link to metadataclearedu32-u32\")\n\n*   **interface**: `api.events.uniques.MetadataCleared.is`\n*   **summary**: Metadata has been cleared for an item.\n\n### MetadataSet(`u32`, `u32`, `Bytes`, `bool`)[\u200b](#metadatasetu32-u32-bytes-bool \"Direct link to metadatasetu32-u32-bytes-bool\")\n\n*   **interface**: `api.events.uniques.MetadataSet.is`\n*   **summary**: New metadata has been set for an item.\n\n### OwnerChanged(`u32`, `AccountId32`)[\u200b](#ownerchangedu32-accountid32-3 \"Direct link to ownerchangedu32-accountid32-3\")\n\n*   **interface**: `api.events.uniques.OwnerChanged.is`\n*   **summary**: The owner changed.\n\n### OwnershipAcceptanceChanged(`AccountId32`, `Option<u32>`)[\u200b](#ownershipacceptancechangedaccountid32-optionu32-1 \"Direct link to ownershipacceptancechangedaccountid32-optionu32-1\")\n\n*   **interface**: `api.events.uniques.OwnershipAcceptanceChanged.is`\n*   **summary**: Ownership acceptance has changed for an account.\n\n### Redeposited(`u32`, `Vec<u32>`)[\u200b](#redepositedu32-vecu32-1 \"Direct link to redepositedu32-vecu32-1\")\n\n*   **interface**: `api.events.uniques.Redeposited.is`\n*   **summary**: Metadata has been cleared for an item.\n\n### TeamChanged(`u32`, `AccountId32`, `AccountId32`, `AccountId32`)[\u200b](#teamchangedu32-accountid32-accountid32-accountid32-2 \"Direct link to teamchangedu32-accountid32-accountid32-accountid32-2\")\n\n*   **interface**: `api.events.uniques.TeamChanged.is`\n*   **summary**: The management team changed.\n\n### Thawed(`u32`, `u32`)[\u200b](#thawedu32-u32 \"Direct link to thawedu32-u32\")\n\n*   **interface**: `api.events.uniques.Thawed.is`\n*   **summary**: Some `item` was thawed.\n\n### Transferred(`u32`, `u32`, `AccountId32`, `AccountId32`)[\u200b](#transferredu32-u32-accountid32-accountid32-1 \"Direct link to transferredu32-u32-accountid32-accountid32-1\")\n\n*   **interface**: `api.events.uniques.Transferred.is`\n*   **summary**: An `item` was transferred.\n\n* * *\n\nutility[\u200b](#utility \"Direct link to utility\")\n\n----------------------------------------------\n\n### BatchCompleted()[\u200b](#batchcompleted \"Direct link to BatchCompleted()\")\n\n*   **interface**: `api.events.utility.BatchCompleted.is`\n*   **summary**: Batch of dispatches completed fully with no error.\n\n### BatchCompletedWithErrors()[\u200b](#batchcompletedwitherrors \"Direct link to BatchCompletedWithErrors()\")\n\n*   **interface**: `api.events.utility.BatchCompletedWithErrors.is`\n*   **summary**: Batch of dispatches completed but has errors.\n\n### BatchInterrupted(`u32`, `SpRuntimeDispatchError`)[\u200b](#batchinterruptedu32-spruntimedispatcherror \"Direct link to batchinterruptedu32-spruntimedispatcherror\")\n\n*   **interface**: `api.events.utility.BatchInterrupted.is`\n*   **summary**: Batch of dispatches did not complete fully. Index of first failing dispatch given, as well as the error.\n\n### DispatchedAs(`Result<Null, SpRuntimeDispatchError>`)[\u200b](#dispatchedasresultnull-spruntimedispatcherror \"Direct link to dispatchedasresultnull-spruntimedispatcherror\")\n\n*   **interface**: `api.events.utility.DispatchedAs.is`\n*   **summary**: A call was dispatched.\n\n### ItemCompleted()[\u200b](#itemcompleted \"Direct link to ItemCompleted()\")\n\n*   **interface**: `api.events.utility.ItemCompleted.is`\n*   **summary**: A single item within a Batch of dispatches has completed with no error.\n\n### ItemFailed(`SpRuntimeDispatchError`)[\u200b](#itemfailedspruntimedispatcherror \"Direct link to itemfailedspruntimedispatcherror\")\n\n*   **interface**: `api.events.utility.ItemFailed.is`\n*   **summary**: A single item within a Batch of dispatches has completed with error.\n\n* * *\n\nvesting[\u200b](#vesting \"Direct link to vesting\")\n\n----------------------------------------------\n\n### VestingCompleted(`AccountId32`)[\u200b](#vestingcompletedaccountid32 \"Direct link to vestingcompletedaccountid32\")\n\n*   **interface**: `api.events.vesting.VestingCompleted.is`\n*   **summary**: An \\[account\\] has become fully vested.\n\n### VestingUpdated(`AccountId32`, `u128`)[\u200b](#vestingupdatedaccountid32-u128 \"Direct link to vestingupdatedaccountid32-u128\")\n\n*   **interface**: `api.events.vesting.VestingUpdated.is`\n*   **summary**: The amount vested has been updated. This could indicate a change in funds available. The balance given is the amount which is left unvested (and thus locked).\n\n* * *\n\nvoterList[\u200b](#voterlist \"Direct link to voterList\")\n\n----------------------------------------------------\n\n### Rebagged(`AccountId32`, `u64`, `u64`)[\u200b](#rebaggedaccountid32-u64-u64 \"Direct link to rebaggedaccountid32-u64-u64\")\n\n*   **interface**: `api.events.voterList.Rebagged.is`\n*   **summary**: Moved an account from one bag to another.\n\n### ScoreUpdated(`AccountId32`, `u64`)[\u200b](#scoreupdatedaccountid32-u64 \"Direct link to scoreupdatedaccountid32-u64\")\n\n*   **interface**: `api.events.voterList.ScoreUpdated.is`\n*   **summary**: Updated the score of some account to the given amount.\n\n* * *\n\nwhitelist[\u200b](#whitelist \"Direct link to whitelist\")\n\n----------------------------------------------------\n\n### CallWhitelisted(`H256`)[\u200b](#callwhitelistedh256 \"Direct link to callwhitelistedh256\")\n\n*   **interface**: `api.events.whitelist.CallWhitelisted.is`\n\n### WhitelistedCallDispatched(`H256`, `Result<FrameSupportDispatchPostDispatchInfo, SpRuntimeDispatchErrorWithPostInfo>`)[\u200b](#whitelistedcalldispatchedh256-resultframesupportdispatchpostdispatchinfo-spruntimedispatcherrorwithpostinfo \"Direct link to whitelistedcalldispatchedh256-resultframesupportdispatchpostdispatchinfo-spruntimedispatcherrorwithpostinfo\")\n\n*   **interface**: `api.events.whitelist.WhitelistedCallDispatched.is`\n\n### WhitelistedCallRemoved(`H256`)[\u200b](#whitelistedcallremovedh256 \"Direct link to whitelistedcallremovedh256\")\n\n*   **interface**: `api.events.whitelist.WhitelistedCallRemoved.is`\n\n[Edit this page](https://github.com/polkadot-js/docs/edit/master/docs/substrate/events.md)\n\n[Previous\\\n\\\nExtrinsics](/docs/substrate/extrinsics)\n[Next\\\n\\\nErrors](/docs/substrate/errors)\n\n*   [alliance](#alliance)\n    *   [AllianceDisbanded(`u32`, `u32`, `u32`)](#alliancedisbandedu32-u32-u32)\n        \n    *   [AllyElevated(`AccountId32`)](#allyelevatedaccountid32)\n        \n    *   [Announced(`PalletAllianceCid`)](#announcedpalletalliancecid)\n        \n    *   [AnnouncementRemoved(`PalletAllianceCid`)](#announcementremovedpalletalliancecid)\n        \n    *   [FellowAbdicated(`AccountId32`)](#fellowabdicatedaccountid32)\n        \n    *   [MemberKicked(`AccountId32`, `Option<u128>`)](#memberkickedaccountid32-optionu128)\n        \n    *   [MemberRetired(`AccountId32`, `Option<u128>`)](#memberretiredaccountid32-optionu128)\n        \n    *   [MemberRetirementPeriodStarted(`AccountId32`)](#memberretirementperiodstartedaccountid32)\n        \n    *   [MembersInitialized(`Vec<AccountId32>`, `Vec<AccountId32>`)](#membersinitializedvecaccountid32-vecaccountid32)\n        \n    *   [NewAllyJoined(`AccountId32`, `Option<AccountId32>`, `Option<u128>`)](#newallyjoinedaccountid32-optionaccountid32-optionu128)\n        \n    *   [NewRuleSet(`PalletAllianceCid`)](#newrulesetpalletalliancecid)\n        \n    *   [UnscrupulousItemAdded(`Vec<PalletAllianceUnscrupulousItem>`)](#unscrupulousitemaddedvecpalletallianceunscrupulousitem)\n        \n    *   [UnscrupulousItemRemoved(`Vec<PalletAllianceUnscrupulousItem>`)](#unscrupulousitemremovedvecpalletallianceunscrupulousitem)\n        \n*   [allianceMotion](#alliancemotion)\n    *   [Approved(`H256`)](#approvedh256)\n        \n    *   [Closed(`H256`, `u32`, `u32`)](#closedh256-u32-u32)\n        \n    *   [Disapproved(`H256`)](#disapprovedh256)\n        \n    *   [Executed(`H256`, `Result<Null, SpRuntimeDispatchError>`)](#executedh256-resultnull-spruntimedispatcherror)\n        \n    *   [MemberExecuted(`H256`, `Result<Null, SpRuntimeDispatchError>`)](#memberexecutedh256-resultnull-spruntimedispatcherror)\n        \n    *   [Proposed(`AccountId32`, `u32`, `H256`, `u32`)](#proposedaccountid32-u32-h256-u32)\n        \n    *   [Voted(`AccountId32`, `H256`, `bool`, `u32`, `u32`)](#votedaccountid32-h256-bool-u32-u32)\n        \n*   [assetConversion](#assetconversion)\n    *   [LiquidityAdded(`AccountId32`, `AccountId32`, `(PalletAssetConversionNativeOrAssetId,PalletAssetConversionNativeOrAssetId)`, `u128`, `u128`, `u32`, `u128`)](#liquidityaddedaccountid32-accountid32-palletassetconversionnativeorassetidpalletassetconversionnativeorassetid-u128-u128-u32-u128)\n        \n    *   [LiquidityRemoved(`AccountId32`, `AccountId32`, `(PalletAssetConversionNativeOrAssetId,PalletAssetConversionNativeOrAssetId)`, `u128`, `u128`, `u32`, `u128`, `Permill`)](#liquidityremovedaccountid32-accountid32-palletassetconversionnativeorassetidpalletassetconversionnativeorassetid-u128-u128-u32-u128-permill)\n        \n    *   [PoolCreated(`AccountId32`, `(PalletAssetConversionNativeOrAssetId,PalletAssetConversionNativeOrAssetId)`, `AccountId32`, `u32`)](#poolcreatedaccountid32-palletassetconversionnativeorassetidpalletassetconversionnativeorassetid-accountid32-u32)\n        \n    *   [SwapExecuted(`AccountId32`, `AccountId32`, `Vec<PalletAssetConversionNativeOrAssetId>`, `u128`, `u128`)](#swapexecutedaccountid32-accountid32-vecpalletassetconversionnativeorassetid-u128-u128)\n        \n    *   [Transfer(`AccountId32`, `AccountId32`, `PalletAssetConversionNativeOrAssetId`, `u128`)](#transferaccountid32-accountid32-palletassetconversionnativeorassetid-u128)\n        \n*   [assetConversionTxPayment](#assetconversiontxpayment)\n    *   [AssetRefundFailed(`u128`)](#assetrefundfailedu128)\n        \n    *   [AssetTxFeePaid(`AccountId32`, `u128`, `u128`, `u32`)](#assettxfeepaidaccountid32-u128-u128-u32)\n        \n*   [assetRate](#assetrate)\n    *   [AssetRateCreated(`u32`, `u128`)](#assetratecreatedu32-u128)\n        \n    *   [AssetRateRemoved(`u32`)](#assetrateremovedu32)\n        \n    *   [AssetRateUpdated(`u32`, `u128`, `u128`)](#assetrateupdatedu32-u128-u128)\n        \n*   [assets](#assets)\n    *   [AccountsDestroyed(`u32`, `u32`, `u32`)](#accountsdestroyedu32-u32-u32)\n        \n    *   [ApprovalCancelled(`u32`, `AccountId32`, `AccountId32`)](#approvalcancelledu32-accountid32-accountid32)\n        \n    *   [ApprovalsDestroyed(`u32`, `u32`, `u32`)](#approvalsdestroyedu32-u32-u32)\n        \n    *   [ApprovedTransfer(`u32`, `AccountId32`, `AccountId32`, `u128`)](#approvedtransferu32-accountid32-accountid32-u128)\n        \n    *   [AssetFrozen(`u32`)](#assetfrozenu32)\n        \n    *   [AssetMinBalanceChanged(`u32`, `u128`)](#assetminbalancechangedu32-u128)\n        \n    *   [AssetStatusChanged(`u32`)](#assetstatuschangedu32)\n        \n    *   [AssetThawed(`u32`)](#assetthawedu32)\n        \n    *   [Blocked(`u32`, `AccountId32`)](#blockedu32-accountid32)\n        \n    *   [Burned(`u32`, `AccountId32`, `u128`)](#burnedu32-accountid32-u128)\n        \n    *   [Created(`u32`, `AccountId32`, `AccountId32`)](#createdu32-accountid32-accountid32)\n        \n    *   [Destroyed(`u32`)](#destroyedu32)\n        \n    *   [DestructionStarted(`u32`)](#destructionstartedu32)\n        \n    *   [ForceCreated(`u32`, `AccountId32`)](#forcecreatedu32-accountid32)\n        \n    *   [Frozen(`u32`, `AccountId32`)](#frozenu32-accountid32)\n        \n    *   [Issued(`u32`, `AccountId32`, `u128`)](#issuedu32-accountid32-u128)\n        \n    *   [MetadataCleared(`u32`)](#metadataclearedu32)\n        \n    *   [MetadataSet(`u32`, `Bytes`, `Bytes`, `u8`, `bool`)](#metadatasetu32-bytes-bytes-u8-bool)\n        \n    *   [OwnerChanged(`u32`, `AccountId32`)](#ownerchangedu32-accountid32)\n        \n    *   [TeamChanged(`u32`, `AccountId32`, `AccountId32`, `AccountId32`)](#teamchangedu32-accountid32-accountid32-accountid32)\n        \n    *   [Thawed(`u32`, `AccountId32`)](#thawedu32-accountid32)\n        \n    *   [Touched(`u32`, `AccountId32`, `AccountId32`)](#touchedu32-accountid32-accountid32)\n        \n    *   [Transferred(`u32`, `AccountId32`, `AccountId32`, `u128`)](#transferredu32-accountid32-accountid32-u128)\n        \n    *   [TransferredApproved(`u32`, `AccountId32`, `AccountId32`, `AccountId32`, `u128`)](#transferredapprovedu32-accountid32-accountid32-accountid32-u128)\n        \n*   [assetTxPayment](#assettxpayment)\n    *   [AssetTxFeePaid(`AccountId32`, `u128`, `u128`, `Option<u32>`)](#assettxfeepaidaccountid32-u128-u128-optionu32)\n        \n*   [balances](#balances)\n    *   [BalanceSet(`AccountId32`, `u128`)](#balancesetaccountid32-u128)\n        \n    *   [Burned(`AccountId32`, `u128`)](#burnedaccountid32-u128)\n        \n    *   [Deposit(`AccountId32`, `u128`)](#depositaccountid32-u128)\n        \n    *   [DustLost(`AccountId32`, `u128`)](#dustlostaccountid32-u128)\n        \n    *   [Endowed(`AccountId32`, `u128`)](#endowedaccountid32-u128)\n        \n    *   [Frozen(`AccountId32`, `u128`)](#frozenaccountid32-u128)\n        \n    *   [Issued(`u128`)](#issuedu128)\n        \n    *   [Locked(`AccountId32`, `u128`)](#lockedaccountid32-u128)\n        \n    *   [Minted(`AccountId32`, `u128`)](#mintedaccountid32-u128)\n        \n    *   [Rescinded(`u128`)](#rescindedu128)\n        \n    *   [Reserved(`AccountId32`, `u128`)](#reservedaccountid32-u128)\n        \n    *   [ReserveRepatriated(`AccountId32`, `AccountId32`, `u128`, `FrameSupportTokensMiscBalanceStatus`)](#reserverepatriatedaccountid32-accountid32-u128-framesupporttokensmiscbalancestatus)\n        \n    *   [Restored(`AccountId32`, `u128`)](#restoredaccountid32-u128)\n        \n    *   [Slashed(`AccountId32`, `u128`)](#slashedaccountid32-u128)\n        \n    *   [Suspended(`AccountId32`, `u128`)](#suspendedaccountid32-u128)\n        \n    *   [Thawed(`AccountId32`, `u128`)](#thawedaccountid32-u128)\n        \n    *   [Transfer(`AccountId32`, `AccountId32`, `u128`)](#transferaccountid32-accountid32-u128)\n        \n    *   [Unlocked(`AccountId32`, `u128`)](#unlockedaccountid32-u128)\n        \n    *   [Unreserved(`AccountId32`, `u128`)](#unreservedaccountid32-u128)\n        \n    *   [Upgraded(`AccountId32`)](#upgradedaccountid32)\n        \n    *   [Withdraw(`AccountId32`, `u128`)](#withdrawaccountid32-u128)\n        \n*   [bounties](#bounties)\n    *   [BountyApproved(`u32`)](#bountyapprovedu32)\n        \n    *   [BountyAwarded(`u32`, `AccountId32`)](#bountyawardedu32-accountid32)\n        \n    *   [BountyBecameActive(`u32`)](#bountybecameactiveu32)\n        \n    *   [BountyCanceled(`u32`)](#bountycanceledu32)\n        \n    *   [BountyClaimed(`u32`, `u128`, `AccountId32`)](#bountyclaimedu32-u128-accountid32)\n        \n    *   [BountyExtended(`u32`)](#bountyextendedu32)\n        \n    *   [BountyProposed(`u32`)](#bountyproposedu32)\n        \n    *   [BountyRejected(`u32`, `u128`)](#bountyrejectedu32-u128)\n        \n    *   [CuratorAccepted(`u32`, `AccountId32`)](#curatoracceptedu32-accountid32)\n        \n    *   [CuratorProposed(`u32`, `AccountId32`)](#curatorproposedu32-accountid32)\n        \n    *   [CuratorUnassigned(`u32`)](#curatorunassignedu32)\n        \n*   [broker](#broker)\n    *   [AllowedRenewalDropped(`u32`, `u16`)](#allowedrenewaldroppedu32-u16)\n        \n    *   [Assigned(`PalletBrokerRegionId`, `u32`, `u32`)](#assignedpalletbrokerregionid-u32-u32)\n        \n    *   [ClaimsReady(`u32`, `u128`, `u128`)](#claimsreadyu32-u128-u128)\n        \n    *   [ContributionDropped(`PalletBrokerRegionId`)](#contributiondroppedpalletbrokerregionid)\n        \n    *   [CoreAssigned(`u16`, `u32`, `Vec<(PalletBrokerCoretimeInterfaceCoreAssignment,u16)>`)](#coreassignedu16-u32-vecpalletbrokercoretimeinterfacecoreassignmentu16)\n        \n    *   [CoreCountChanged(`u16`)](#corecountchangedu16)\n        \n    *   [CoreCountRequested(`u16`)](#corecountrequestedu16)\n        \n    *   [CreditPurchased(`AccountId32`, `AccountId32`, `u128`)](#creditpurchasedaccountid32-accountid32-u128)\n        \n    *   [HistoryDropped(`u32`, `u128`)](#historydroppedu32-u128)\n        \n    *   [HistoryIgnored(`u32`, `u128`)](#historyignoredu32-u128)\n        \n    *   [HistoryInitialized(`u32`, `u32`, `u32`)](#historyinitializedu32-u32-u32)\n        \n    *   [Interlaced(`PalletBrokerRegionId`, `(PalletBrokerRegionId,PalletBrokerRegionId)`)](#interlacedpalletbrokerregionid-palletbrokerregionidpalletbrokerregionid)\n        \n    *   [Leased(`u32`, `u32`)](#leasedu32-u32)\n        \n    *   [LeaseEnding(`u32`, `u32`)](#leaseendingu32-u32)\n        \n    *   [Partitioned(`PalletBrokerRegionId`, `(PalletBrokerRegionId,PalletBrokerRegionId)`)](#partitionedpalletbrokerregionid-palletbrokerregionidpalletbrokerregionid)\n        \n    *   [Pooled(`PalletBrokerRegionId`, `u32`)](#pooledpalletbrokerregionid-u32)\n        \n    *   [Purchased(`AccountId32`, `PalletBrokerRegionId`, `u128`, `u32`)](#purchasedaccountid32-palletbrokerregionid-u128-u32)\n        \n    *   [RegionDropped(`PalletBrokerRegionId`, `u32`)](#regiondroppedpalletbrokerregionid-u32)\n        \n    *   [Renewable(`u16`, `u128`, `u32`, `Vec<PalletBrokerScheduleItem>`)](#renewableu16-u128-u32-vecpalletbrokerscheduleitem)\n        \n    *   [Renewed(`AccountId32`, `u128`, `u16`, `u16`, `u32`, `u32`, `Vec<PalletBrokerScheduleItem>`)](#renewedaccountid32-u128-u16-u16-u32-u32-vecpalletbrokerscheduleitem)\n        \n    *   [ReservationCancelled(`u32`, `Vec<PalletBrokerScheduleItem>`)](#reservationcancelledu32-vecpalletbrokerscheduleitem)\n        \n    *   [ReservationMade(`u32`, `Vec<PalletBrokerScheduleItem>`)](#reservationmadeu32-vecpalletbrokerscheduleitem)\n        \n    *   [RevenueClaimBegun(`PalletBrokerRegionId`, `u32`)](#revenueclaimbegunpalletbrokerregionid-u32)\n        \n    *   [RevenueClaimItem(`u32`, `u128`)](#revenueclaimitemu32-u128)\n        \n    *   [RevenueClaimPaid(`AccountId32`, `u128`, `Option<PalletBrokerRegionId>`)](#revenueclaimpaidaccountid32-u128-optionpalletbrokerregionid)\n        \n    *   [SaleInitialized(`u32`, `u32`, `u128`, `u128`, `u32`, `u32`, `u16`, `u16`)](#saleinitializedu32-u32-u128-u128-u32-u32-u16-u16)\n        \n    *   [SalesStarted(`u128`, `u16`)](#salesstartedu128-u16)\n        \n    *   [Transferred(`PalletBrokerRegionId`, `u32`, `AccountId32`, `AccountId32`)](#transferredpalletbrokerregionid-u32-accountid32-accountid32)\n        \n*   [childBounties](#childbounties)\n    *   [Added(`u32`, `u32`)](#addedu32-u32)\n        \n    *   [Awarded(`u32`, `u32`, `AccountId32`)](#awardedu32-u32-accountid32)\n        \n    *   [Canceled(`u32`, `u32`)](#canceledu32-u32)\n        \n    *   [Claimed(`u32`, `u32`, `u128`, `AccountId32`)](#claimedu32-u32-u128-accountid32)\n        \n*   [contracts](#contracts)\n    *   [Called(`PalletContractsOrigin`, `AccountId32`)](#calledpalletcontractsorigin-accountid32)\n        \n    *   [CodeRemoved(`H256`, `u128`, `AccountId32`)](#coderemovedh256-u128-accountid32)\n        \n    *   [CodeStored(`H256`, `u128`, `AccountId32`)](#codestoredh256-u128-accountid32)\n        \n    *   [ContractCodeUpdated(`AccountId32`, `H256`, `H256`)](#contractcodeupdatedaccountid32-h256-h256)\n        \n    *   [ContractEmitted(`AccountId32`, `Bytes`)](#contractemittedaccountid32-bytes)\n        \n    *   [DelegateCalled(`AccountId32`, `H256`)](#delegatecalledaccountid32-h256)\n        \n    *   [Instantiated(`AccountId32`, `AccountId32`)](#instantiatedaccountid32-accountid32)\n        \n    *   [StorageDepositTransferredAndHeld(`AccountId32`, `AccountId32`, `u128`)](#storagedeposittransferredandheldaccountid32-accountid32-u128)\n        \n    *   [StorageDepositTransferredAndReleased(`AccountId32`, `AccountId32`, `u128`)](#storagedeposittransferredandreleasedaccountid32-accountid32-u128)\n        \n    *   [Terminated(`AccountId32`, `AccountId32`)](#terminatedaccountid32-accountid32)\n        \n*   [convictionVoting](#convictionvoting)\n    *   [Delegated(`AccountId32`, `AccountId32`)](#delegatedaccountid32-accountid32)\n        \n    *   [Undelegated(`AccountId32`)](#undelegatedaccountid32)\n        \n*   [coreFellowship](#corefellowship)\n    *   [ActiveChanged(`AccountId32`, `bool`)](#activechangedaccountid32-bool)\n        \n    *   [Demoted(`AccountId32`, `u16`)](#demotedaccountid32-u16)\n        \n    *   [EvidenceJudged(`AccountId32`, `PalletCoreFellowshipWish`, `Bytes`, `u16`, `Option<u16>`)](#evidencejudgedaccountid32-palletcorefellowshipwish-bytes-u16-optionu16)\n        \n    *   [Imported(`AccountId32`, `u16`)](#importedaccountid32-u16)\n        \n    *   [Inducted(`AccountId32`)](#inductedaccountid32)\n        \n    *   [Offboarded(`AccountId32`)](#offboardedaccountid32)\n        \n    *   [ParamsChanged(`PalletCoreFellowshipParamsType`)](#paramschangedpalletcorefellowshipparamstype)\n        \n    *   [Promoted(`AccountId32`, `u16`)](#promotedaccountid32-u16)\n        \n    *   [Proven(`AccountId32`, `u16`)](#provenaccountid32-u16)\n        \n    *   [Requested(`AccountId32`, `PalletCoreFellowshipWish`)](#requestedaccountid32-palletcorefellowshipwish)\n        \n*   [council](#council)\n    *   [Approved(`H256`)](#approvedh256-1)\n        \n    *   [Closed(`H256`, `u32`, `u32`)](#closedh256-u32-u32-1)\n        \n    *   [Disapproved(`H256`)](#disapprovedh256-1)\n        \n    *   [Executed(`H256`, `Result<Null, SpRuntimeDispatchError>`)](#executedh256-resultnull-spruntimedispatcherror-1)\n        \n    *   [MemberExecuted(`H256`, `Result<Null, SpRuntimeDispatchError>`)](#memberexecutedh256-resultnull-spruntimedispatcherror-1)\n        \n    *   [Proposed(`AccountId32`, `u32`, `H256`, `u32`)](#proposedaccountid32-u32-h256-u32-1)\n        \n    *   [Voted(`AccountId32`, `H256`, `bool`, `u32`, `u32`)](#votedaccountid32-h256-bool-u32-u32-1)\n        \n*   [democracy](#democracy)\n    *   [Blacklisted(`H256`)](#blacklistedh256)\n        \n    *   [Cancelled(`u32`)](#cancelledu32)\n        \n    *   [Delegated(`AccountId32`, `AccountId32`)](#delegatedaccountid32-accountid32-1)\n        \n    *   [ExternalTabled()](#externaltabled)\n        \n    *   [MetadataCleared(`PalletDemocracyMetadataOwner`, `H256`)](#metadataclearedpalletdemocracymetadataowner-h256)\n        \n    *   [MetadataSet(`PalletDemocracyMetadataOwner`, `H256`)](#metadatasetpalletdemocracymetadataowner-h256)\n        \n    *   [MetadataTransferred(`PalletDemocracyMetadataOwner`, `PalletDemocracyMetadataOwner`, `H256`)](#metadatatransferredpalletdemocracymetadataowner-palletdemocracymetadataowner-h256)\n        \n    *   [NotPassed(`u32`)](#notpassedu32)\n        \n    *   [Passed(`u32`)](#passedu32)\n        \n    *   [ProposalCanceled(`u32`)](#proposalcanceledu32)\n        \n    *   [Proposed(`u32`, `u128`)](#proposedu32-u128)\n        \n    *   [Seconded(`AccountId32`, `u32`)](#secondedaccountid32-u32)\n        \n    *   [Started(`u32`, `PalletDemocracyVoteThreshold`)](#startedu32-palletdemocracyvotethreshold)\n        \n    *   [Tabled(`u32`, `u128`)](#tabledu32-u128)\n        \n    *   [Undelegated(`AccountId32`)](#undelegatedaccountid32-1)\n        \n    *   [Vetoed(`AccountId32`, `H256`, `u32`)](#vetoedaccountid32-h256-u32)\n        \n    *   [Voted(`AccountId32`, `u32`, `PalletDemocracyVoteAccountVote`)](#votedaccountid32-u32-palletdemocracyvoteaccountvote)\n        \n*   [electionProviderMultiPhase](#electionprovidermultiphase)\n    *   [ElectionFailed()](#electionfailed)\n        \n    *   [ElectionFinalized(`PalletElectionProviderMultiPhaseElectionCompute`, `SpNposElectionsElectionScore`)](#electionfinalizedpalletelectionprovidermultiphaseelectioncompute-spnposelectionselectionscore)\n        \n    *   [PhaseTransitioned(`PalletElectionProviderMultiPhasePhase`, `PalletElectionProviderMultiPhasePhase`, `u32`)](#phasetransitionedpalletelectionprovidermultiphasephase-palletelectionprovidermultiphasephase-u32)\n        \n    *   [Rewarded(`AccountId32`, `u128`)](#rewardedaccountid32-u128)\n        \n    *   [Slashed(`AccountId32`, `u128`)](#slashedaccountid32-u128-1)\n        \n    *   [SolutionStored(`PalletElectionProviderMultiPhaseElectionCompute`, `Option<AccountId32>`, `bool`)](#solutionstoredpalletelectionprovidermultiphaseelectioncompute-optionaccountid32-bool)\n        \n*   [elections](#elections)\n    *   [CandidateSlashed(`AccountId32`, `u128`)](#candidateslashedaccountid32-u128)\n        \n    *   [ElectionError()](#electionerror)\n        \n    *   [EmptyTerm()](#emptyterm)\n        \n    *   [MemberKicked(`AccountId32`)](#memberkickedaccountid32)\n        \n    *   [NewTerm(`Vec<(AccountId32,u128)>`)](#newtermvecaccountid32u128)\n        \n    *   [Renounced(`AccountId32`)](#renouncedaccountid32)\n        \n    *   [SeatHolderSlashed(`AccountId32`, `u128`)](#seatholderslashedaccountid32-u128)\n        \n*   [fastUnstake](#fastunstake)\n    *   [BatchChecked(`Vec<u32>`)](#batchcheckedvecu32)\n        \n    *   [BatchFinished(`u32`)](#batchfinishedu32)\n        \n    *   [InternalError()](#internalerror)\n        \n    *   [Slashed(`AccountId32`, `u128`)](#slashedaccountid32-u128-2)\n        \n    *   [Unstaked(`AccountId32`, `Result<Null, SpRuntimeDispatchError>`)](#unstakedaccountid32-resultnull-spruntimedispatcherror)\n        \n*   [glutton](#glutton)\n    *   [ComputationLimitSet(`u64`)](#computationlimitsetu64)\n        \n    *   [PalletInitialized(`bool`)](#palletinitializedbool)\n        \n    *   [StorageLimitSet(`u64`)](#storagelimitsetu64)\n        \n*   [grandpa](#grandpa)\n    *   [NewAuthorities(`Vec<(SpConsensusGrandpaAppPublic,u64)>`)](#newauthoritiesvecspconsensusgrandpaapppublicu64)\n        \n    *   [Paused()](#paused)\n        \n    *   [Resumed()](#resumed)\n        \n*   [identity](#identity)\n    *   [IdentityCleared(`AccountId32`, `u128`)](#identityclearedaccountid32-u128)\n        \n    *   [IdentityKilled(`AccountId32`, `u128`)](#identitykilledaccountid32-u128)\n        \n    *   [IdentitySet(`AccountId32`)](#identitysetaccountid32)\n        \n    *   [JudgementGiven(`AccountId32`, `u32`)](#judgementgivenaccountid32-u32)\n        \n    *   [JudgementRequested(`AccountId32`, `u32`)](#judgementrequestedaccountid32-u32)\n        \n    *   [JudgementUnrequested(`AccountId32`, `u32`)](#judgementunrequestedaccountid32-u32)\n        \n    *   [RegistrarAdded(`u32`)](#registraraddedu32)\n        \n    *   [SubIdentityAdded(`AccountId32`, `AccountId32`, `u128`)](#subidentityaddedaccountid32-accountid32-u128)\n        \n    *   [SubIdentityRemoved(`AccountId32`, `AccountId32`, `u128`)](#subidentityremovedaccountid32-accountid32-u128)\n        \n    *   [SubIdentityRevoked(`AccountId32`, `AccountId32`, `u128`)](#subidentityrevokedaccountid32-accountid32-u128)\n        \n*   [imOnline](#imonline)\n    *   [AllGood()](#allgood)\n        \n    *   [HeartbeatReceived(`PalletImOnlineSr25519AppSr25519Public`)](#heartbeatreceivedpalletimonlinesr25519appsr25519public)\n        \n    *   [SomeOffline(`Vec<(AccountId32,SpStakingExposure)>`)](#someofflinevecaccountid32spstakingexposure)\n        \n*   [indices](#indices)\n    *   [IndexAssigned(`AccountId32`, `u32`)](#indexassignedaccountid32-u32)\n        \n    *   [IndexFreed(`u32`)](#indexfreedu32)\n        \n    *   [IndexFrozen(`u32`, `AccountId32`)](#indexfrozenu32-accountid32)\n        \n*   [lottery](#lottery)\n    *   [CallsUpdated()](#callsupdated)\n        \n    *   [LotteryStarted()](#lotterystarted)\n        \n    *   [TicketBought(`AccountId32`, `(u8,u8)`)](#ticketboughtaccountid32-u8u8)\n        \n    *   [Winner(`AccountId32`, `u128`)](#winneraccountid32-u128)\n        \n*   [messageQueue](#messagequeue)\n    *   [OverweightEnqueued(`[u8;32]`, `u32`, `u32`, `u32`)](#overweightenqueuedu832-u32-u32-u32)\n        \n    *   [PageReaped(`u32`, `u32`)](#pagereapedu32-u32)\n        \n    *   [Processed(`H256`, `u32`, `SpWeightsWeightV2Weight`, `bool`)](#processedh256-u32-spweightsweightv2weight-bool)\n        \n    *   [ProcessingFailed(`H256`, `u32`, `FrameSupportMessagesProcessMessageError`)](#processingfailedh256-u32-framesupportmessagesprocessmessageerror)\n        \n*   [multisig](#multisig)\n    *   [MultisigApproval(`AccountId32`, `PalletMultisigTimepoint`, `AccountId32`, `[u8;32]`)](#multisigapprovalaccountid32-palletmultisigtimepoint-accountid32-u832)\n        \n    *   [MultisigCancelled(`AccountId32`, `PalletMultisigTimepoint`, `AccountId32`, `[u8;32]`)](#multisigcancelledaccountid32-palletmultisigtimepoint-accountid32-u832)\n        \n    *   [MultisigExecuted(`AccountId32`, `PalletMultisigTimepoint`, `AccountId32`, `[u8;32]`, `Result<Null, SpRuntimeDispatchError>`)](#multisigexecutedaccountid32-palletmultisigtimepoint-accountid32-u832-resultnull-spruntimedispatcherror)\n        \n    *   [NewMultisig(`AccountId32`, `AccountId32`, `[u8;32]`)](#newmultisigaccountid32-accountid32-u832)\n        \n*   [nftFractionalization](#nftfractionalization)\n    *   [NftFractionalized(`u32`, `u32`, `u128`, `u32`, `AccountId32`)](#nftfractionalizedu32-u32-u128-u32-accountid32)\n        \n    *   [NftUnified(`u32`, `u32`, `u32`, `AccountId32`)](#nftunifiedu32-u32-u32-accountid32)\n        \n*   [nfts](#nfts)\n    *   [AllApprovalsCancelled(`u32`, `u32`, `AccountId32`)](#allapprovalscancelledu32-u32-accountid32)\n        \n    *   [ApprovalCancelled(`u32`, `u32`, `AccountId32`, `AccountId32`)](#approvalcancelledu32-u32-accountid32-accountid32)\n        \n    *   [AttributeCleared(`u32`, `Option<u32>`, `Bytes`, `PalletNftsAttributeNamespace`)](#attributeclearedu32-optionu32-bytes-palletnftsattributenamespace)\n        \n    *   [AttributeSet(`u32`, `Option<u32>`, `Bytes`, `Bytes`, `PalletNftsAttributeNamespace`)](#attributesetu32-optionu32-bytes-bytes-palletnftsattributenamespace)\n        \n    *   [Burned(`u32`, `u32`, `AccountId32`)](#burnedu32-u32-accountid32)\n        \n    *   [CollectionConfigChanged(`u32`)](#collectionconfigchangedu32)\n        \n    *   [CollectionLocked(`u32`)](#collectionlockedu32)\n        \n    *   [CollectionMaxSupplySet(`u32`, `u32`)](#collectionmaxsupplysetu32-u32)\n        \n    *   [CollectionMetadataCleared(`u32`)](#collectionmetadataclearedu32)\n        \n    *   [CollectionMetadataSet(`u32`, `Bytes`)](#collectionmetadatasetu32-bytes)\n        \n    *   [CollectionMintSettingsUpdated(`u32`)](#collectionmintsettingsupdatedu32)\n        \n    *   [Created(`u32`, `AccountId32`, `AccountId32`)](#createdu32-accountid32-accountid32-1)\n        \n    *   [Destroyed(`u32`)](#destroyedu32-1)\n        \n    *   [ForceCreated(`u32`, `AccountId32`)](#forcecreatedu32-accountid32-1)\n        \n    *   [Issued(`u32`, `u32`, `AccountId32`)](#issuedu32-u32-accountid32)\n        \n    *   [ItemAttributesApprovalAdded(`u32`, `u32`, `AccountId32`)](#itemattributesapprovaladdedu32-u32-accountid32)\n        \n    *   [ItemAttributesApprovalRemoved(`u32`, `u32`, `AccountId32`)](#itemattributesapprovalremovedu32-u32-accountid32)\n        \n    *   [ItemBought(`u32`, `u32`, `u128`, `AccountId32`, `AccountId32`)](#itemboughtu32-u32-u128-accountid32-accountid32)\n        \n    *   [ItemMetadataCleared(`u32`, `u32`)](#itemmetadataclearedu32-u32)\n        \n    *   [ItemMetadataSet(`u32`, `u32`, `Bytes`)](#itemmetadatasetu32-u32-bytes)\n        \n    *   [ItemPriceRemoved(`u32`, `u32`)](#itempriceremovedu32-u32)\n        \n    *   [ItemPriceSet(`u32`, `u32`, `u128`, `Option<AccountId32>`)](#itempricesetu32-u32-u128-optionaccountid32)\n        \n    *   [ItemPropertiesLocked(`u32`, `u32`, `bool`, `bool`)](#itempropertieslockedu32-u32-bool-bool)\n        \n    *   [ItemTransferLocked(`u32`, `u32`)](#itemtransferlockedu32-u32)\n        \n    *   [ItemTransferUnlocked(`u32`, `u32`)](#itemtransferunlockedu32-u32)\n        \n    *   [NextCollectionIdIncremented(`Option<u32>`)](#nextcollectionidincrementedoptionu32)\n        \n    *   [OwnerChanged(`u32`, `AccountId32`)](#ownerchangedu32-accountid32-1)\n        \n    *   [OwnershipAcceptanceChanged(`AccountId32`, `Option<u32>`)](#ownershipacceptancechangedaccountid32-optionu32)\n        \n    *   [PalletAttributeSet(`u32`, `Option<u32>`, `PalletNftsPalletAttributes`, `Bytes`)](#palletattributesetu32-optionu32-palletnftspalletattributes-bytes)\n        \n    *   [PreSignedAttributesSet(`u32`, `u32`, `PalletNftsAttributeNamespace`)](#presignedattributessetu32-u32-palletnftsattributenamespace)\n        \n    *   [Redeposited(`u32`, `Vec<u32>`)](#redepositedu32-vecu32)\n        \n    *   [SwapCancelled(`u32`, `u32`, `u32`, `Option<u32>`, `Option<PalletNftsPriceWithDirection>`, `u32`)](#swapcancelledu32-u32-u32-optionu32-optionpalletnftspricewithdirection-u32)\n        \n    *   [SwapClaimed(`u32`, `u32`, `AccountId32`, `u32`, `u32`, `AccountId32`, `Option<PalletNftsPriceWithDirection>`, `u32`)](#swapclaimedu32-u32-accountid32-u32-u32-accountid32-optionpalletnftspricewithdirection-u32)\n        \n    *   [SwapCreated(`u32`, `u32`, `u32`, `Option<u32>`, `Option<PalletNftsPriceWithDirection>`, `u32`)](#swapcreatedu32-u32-u32-optionu32-optionpalletnftspricewithdirection-u32)\n        \n    *   [TeamChanged(`u32`, `Option<AccountId32>`, `Option<AccountId32>`, `Option<AccountId32>`)](#teamchangedu32-optionaccountid32-optionaccountid32-optionaccountid32)\n        \n    *   [TipSent(`u32`, `u32`, `AccountId32`, `AccountId32`, `u128`)](#tipsentu32-u32-accountid32-accountid32-u128)\n        \n    *   [TransferApproved(`u32`, `u32`, `AccountId32`, `AccountId32`, `Option<u32>`)](#transferapprovedu32-u32-accountid32-accountid32-optionu32)\n        \n    *   [Transferred(`u32`, `u32`, `AccountId32`, `AccountId32`)](#transferredu32-u32-accountid32-accountid32)\n        \n*   [nis](#nis)\n    *   [BidDropped(`AccountId32`, `u128`, `u32`)](#biddroppedaccountid32-u128-u32)\n        \n    *   [BidPlaced(`AccountId32`, `u128`, `u32`)](#bidplacedaccountid32-u128-u32)\n        \n    *   [BidRetracted(`AccountId32`, `u128`, `u32`)](#bidretractedaccountid32-u128-u32)\n        \n    *   [Funded(`u128`)](#fundedu128)\n        \n    *   [Issued(`u32`, `u32`, `AccountId32`, `Perquintill`, `u128`)](#issuedu32-u32-accountid32-perquintill-u128)\n        \n    *   [Thawed(`u32`, `AccountId32`, `Perquintill`, `u128`, `bool`)](#thawedu32-accountid32-perquintill-u128-bool)\n        \n    *   [Transferred(`AccountId32`, `AccountId32`, `u32`)](#transferredaccountid32-accountid32-u32)\n        \n*   [nominationPools](#nominationpools)\n    *   [Bonded(`AccountId32`, `u32`, `u128`, `bool`)](#bondedaccountid32-u32-u128-bool)\n        \n    *   [Created(`AccountId32`, `u32`)](#createdaccountid32-u32)\n        \n    *   [Destroyed(`u32`)](#destroyedu32-2)\n        \n    *   [MemberRemoved(`u32`, `AccountId32`)](#memberremovedu32-accountid32)\n        \n    *   [MinBalanceDeficitAdjusted(`u32`, `u128`)](#minbalancedeficitadjustedu32-u128)\n        \n    *   [MinBalanceExcessAdjusted(`u32`, `u128`)](#minbalanceexcessadjustedu32-u128)\n        \n    *   [PaidOut(`AccountId32`, `u32`, `u128`)](#paidoutaccountid32-u32-u128)\n        \n    *   [PoolCommissionChangeRateUpdated(`u32`, `PalletNominationPoolsCommissionChangeRate`)](#poolcommissionchangerateupdatedu32-palletnominationpoolscommissionchangerate)\n        \n    *   [PoolCommissionClaimed(`u32`, `u128`)](#poolcommissionclaimedu32-u128)\n        \n    *   [PoolCommissionClaimPermissionUpdated(`u32`, `Option<PalletNominationPoolsCommissionClaimPermission>`)](#poolcommissionclaimpermissionupdatedu32-optionpalletnominationpoolscommissionclaimpermission)\n        \n    *   [PoolCommissionUpdated(`u32`, `Option<(Perbill,AccountId32)>`)](#poolcommissionupdatedu32-optionperbillaccountid32)\n        \n    *   [PoolMaxCommissionUpdated(`u32`, `Perbill`)](#poolmaxcommissionupdatedu32-perbill)\n        \n    *   [PoolSlashed(`u32`, `u128`)](#poolslashedu32-u128)\n        \n    *   [RolesUpdated(`Option<AccountId32>`, `Option<AccountId32>`, `Option<AccountId32>`)](#rolesupdatedoptionaccountid32-optionaccountid32-optionaccountid32)\n        \n    *   [StateChanged(`u32`, `PalletNominationPoolsPoolState`)](#statechangedu32-palletnominationpoolspoolstate)\n        \n    *   [Unbonded(`AccountId32`, `u32`, `u128`, `u128`, `u32`)](#unbondedaccountid32-u32-u128-u128-u32)\n        \n    *   [UnbondingPoolSlashed(`u32`, `u32`, `u128`)](#unbondingpoolslashedu32-u32-u128)\n        \n    *   [Withdrawn(`AccountId32`, `u32`, `u128`, `u128`)](#withdrawnaccountid32-u32-u128-u128)\n        \n*   [offences](#offences)\n    *   [Offence(`[u8;16]`, `Bytes`)](#offenceu816-bytes)\n        \n*   [poolAssets](#poolassets)\n    *   [AccountsDestroyed(`u32`, `u32`, `u32`)](#accountsdestroyedu32-u32-u32-1)\n        \n    *   [ApprovalCancelled(`u32`, `AccountId32`, `AccountId32`)](#approvalcancelledu32-accountid32-accountid32-1)\n        \n    *   [ApprovalsDestroyed(`u32`, `u32`, `u32`)](#approvalsdestroyedu32-u32-u32-1)\n        \n    *   [ApprovedTransfer(`u32`, `AccountId32`, `AccountId32`, `u128`)](#approvedtransferu32-accountid32-accountid32-u128-1)\n        \n    *   [AssetFrozen(`u32`)](#assetfrozenu32-1)\n        \n    *   [AssetMinBalanceChanged(`u32`, `u128`)](#assetminbalancechangedu32-u128-1)\n        \n    *   [AssetStatusChanged(`u32`)](#assetstatuschangedu32-1)\n        \n    *   [AssetThawed(`u32`)](#assetthawedu32-1)\n        \n    *   [Blocked(`u32`, `AccountId32`)](#blockedu32-accountid32-1)\n        \n    *   [Burned(`u32`, `AccountId32`, `u128`)](#burnedu32-accountid32-u128-1)\n        \n    *   [Created(`u32`, `AccountId32`, `AccountId32`)](#createdu32-accountid32-accountid32-2)\n        \n    *   [Destroyed(`u32`)](#destroyedu32-3)\n        \n    *   [DestructionStarted(`u32`)](#destructionstartedu32-1)\n        \n    *   [ForceCreated(`u32`, `AccountId32`)](#forcecreatedu32-accountid32-2)\n        \n    *   [Frozen(`u32`, `AccountId32`)](#frozenu32-accountid32-1)\n        \n    *   [Issued(`u32`, `AccountId32`, `u128`)](#issuedu32-accountid32-u128-1)\n        \n    *   [MetadataCleared(`u32`)](#metadataclearedu32-1)\n        \n    *   [MetadataSet(`u32`, `Bytes`, `Bytes`, `u8`, `bool`)](#metadatasetu32-bytes-bytes-u8-bool-1)\n        \n    *   [OwnerChanged(`u32`, `AccountId32`)](#ownerchangedu32-accountid32-2)\n        \n    *   [TeamChanged(`u32`, `AccountId32`, `AccountId32`, `AccountId32`)](#teamchangedu32-accountid32-accountid32-accountid32-1)\n        \n    *   [Thawed(`u32`, `AccountId32`)](#thawedu32-accountid32-1)\n        \n    *   [Touched(`u32`, `AccountId32`, `AccountId32`)](#touchedu32-accountid32-accountid32-1)\n        \n    *   [Transferred(`u32`, `AccountId32`, `AccountId32`, `u128`)](#transferredu32-accountid32-accountid32-u128-1)\n        \n    *   [TransferredApproved(`u32`, `AccountId32`, `AccountId32`, `AccountId32`, `u128`)](#transferredapprovedu32-accountid32-accountid32-accountid32-u128-1)\n        \n*   [pov](#pov)\n    *   [TestEvent()](#testevent)\n        \n*   [preimage](#preimage)\n    *   [Cleared(`H256`)](#clearedh256)\n        \n    *   [Noted(`H256`)](#notedh256)\n        \n    *   [Requested(`H256`)](#requestedh256)\n        \n*   [proxy](#proxy)\n    *   [Announced(`AccountId32`, `AccountId32`, `H256`)](#announcedaccountid32-accountid32-h256)\n        \n    *   [ProxyAdded(`AccountId32`, `AccountId32`, `KitchensinkRuntimeProxyType`, `u32`)](#proxyaddedaccountid32-accountid32-kitchensinkruntimeproxytype-u32)\n        \n    *   [ProxyExecuted(`Result<Null, SpRuntimeDispatchError>`)](#proxyexecutedresultnull-spruntimedispatcherror)\n        \n    *   [ProxyRemoved(`AccountId32`, `AccountId32`, `KitchensinkRuntimeProxyType`, `u32`)](#proxyremovedaccountid32-accountid32-kitchensinkruntimeproxytype-u32)\n        \n    *   [PureCreated(`AccountId32`, `AccountId32`, `KitchensinkRuntimeProxyType`, `u16`)](#purecreatedaccountid32-accountid32-kitchensinkruntimeproxytype-u16)\n        \n*   [rankedCollective](#rankedcollective)\n    *   [MemberAdded(`AccountId32`)](#memberaddedaccountid32)\n        \n    *   [MemberRemoved(`AccountId32`, `u16`)](#memberremovedaccountid32-u16)\n        \n    *   [RankChanged(`AccountId32`, `u16`)](#rankchangedaccountid32-u16)\n        \n    *   [Voted(`AccountId32`, `u32`, `PalletRankedCollectiveVoteRecord`, `PalletRankedCollectiveTally`)](#votedaccountid32-u32-palletrankedcollectivevoterecord-palletrankedcollectivetally)\n        \n*   [rankedPolls](#rankedpolls)\n    *   [Approved(`u32`)](#approvedu32)\n        \n    *   [Cancelled(`u32`, `PalletRankedCollectiveTally`)](#cancelledu32-palletrankedcollectivetally)\n        \n    *   [ConfirmAborted(`u32`)](#confirmabortedu32)\n        \n    *   [Confirmed(`u32`, `PalletRankedCollectiveTally`)](#confirmedu32-palletrankedcollectivetally)\n        \n    *   [ConfirmStarted(`u32`)](#confirmstartedu32)\n        \n    *   [DecisionDepositPlaced(`u32`, `AccountId32`, `u128`)](#decisiondepositplacedu32-accountid32-u128)\n        \n    *   [DecisionDepositRefunded(`u32`, `AccountId32`, `u128`)](#decisiondepositrefundedu32-accountid32-u128)\n        \n    *   [DecisionStarted(`u32`, `u16`, `FrameSupportPreimagesBounded`, `PalletRankedCollectiveTally`)](#decisionstartedu32-u16-framesupportpreimagesbounded-palletrankedcollectivetally)\n        \n    *   [DepositSlashed(`AccountId32`, `u128`)](#depositslashedaccountid32-u128)\n        \n    *   [Killed(`u32`, `PalletRankedCollectiveTally`)](#killedu32-palletrankedcollectivetally)\n        \n    *   [MetadataCleared(`u32`, `H256`)](#metadataclearedu32-h256)\n        \n    *   [MetadataSet(`u32`, `H256`)](#metadatasetu32-h256)\n        \n    *   [Rejected(`u32`, `PalletRankedCollectiveTally`)](#rejectedu32-palletrankedcollectivetally)\n        \n    *   [SubmissionDepositRefunded(`u32`, `AccountId32`, `u128`)](#submissiondepositrefundedu32-accountid32-u128)\n        \n    *   [Submitted(`u32`, `u16`, `FrameSupportPreimagesBounded`)](#submittedu32-u16-framesupportpreimagesbounded)\n        \n    *   [TimedOut(`u32`, `PalletRankedCollectiveTally`)](#timedoutu32-palletrankedcollectivetally)\n        \n*   [recovery](#recovery)\n    *   [AccountRecovered(`AccountId32`, `AccountId32`)](#accountrecoveredaccountid32-accountid32)\n        \n    *   [RecoveryClosed(`AccountId32`, `AccountId32`)](#recoveryclosedaccountid32-accountid32)\n        \n    *   [RecoveryCreated(`AccountId32`)](#recoverycreatedaccountid32)\n        \n    *   [RecoveryInitiated(`AccountId32`, `AccountId32`)](#recoveryinitiatedaccountid32-accountid32)\n        \n    *   [RecoveryRemoved(`AccountId32`)](#recoveryremovedaccountid32)\n        \n    *   [RecoveryVouched(`AccountId32`, `AccountId32`, `AccountId32`)](#recoveryvouchedaccountid32-accountid32-accountid32)\n        \n*   [referenda](#referenda)\n    *   [Approved(`u32`)](#approvedu32-1)\n        \n    *   [Cancelled(`u32`, `PalletConvictionVotingTally`)](#cancelledu32-palletconvictionvotingtally)\n        \n    *   [ConfirmAborted(`u32`)](#confirmabortedu32-1)\n        \n    *   [Confirmed(`u32`, `PalletConvictionVotingTally`)](#confirmedu32-palletconvictionvotingtally)\n        \n    *   [ConfirmStarted(`u32`)](#confirmstartedu32-1)\n        \n    *   [DecisionDepositPlaced(`u32`, `AccountId32`, `u128`)](#decisiondepositplacedu32-accountid32-u128-1)\n        \n    *   [DecisionDepositRefunded(`u32`, `AccountId32`, `u128`)](#decisiondepositrefundedu32-accountid32-u128-1)\n        \n    *   [DecisionStarted(`u32`, `u16`, `FrameSupportPreimagesBounded`, `PalletConvictionVotingTally`)](#decisionstartedu32-u16-framesupportpreimagesbounded-palletconvictionvotingtally)\n        \n    *   [DepositSlashed(`AccountId32`, `u128`)](#depositslashedaccountid32-u128-1)\n        \n    *   [Killed(`u32`, `PalletConvictionVotingTally`)](#killedu32-palletconvictionvotingtally)\n        \n    *   [MetadataCleared(`u32`, `H256`)](#metadataclearedu32-h256-1)\n        \n    *   [MetadataSet(`u32`, `H256`)](#metadatasetu32-h256-1)\n        \n    *   [Rejected(`u32`, `PalletConvictionVotingTally`)](#rejectedu32-palletconvictionvotingtally)\n        \n    *   [SubmissionDepositRefunded(`u32`, `AccountId32`, `u128`)](#submissiondepositrefundedu32-accountid32-u128-1)\n        \n    *   [Submitted(`u32`, `u16`, `FrameSupportPreimagesBounded`)](#submittedu32-u16-framesupportpreimagesbounded-1)\n        \n    *   [TimedOut(`u32`, `PalletConvictionVotingTally`)](#timedoutu32-palletconvictionvotingtally)\n        \n*   [remark](#remark)\n    *   [Stored(`AccountId32`, `H256`)](#storedaccountid32-h256)\n        \n*   [rootTesting](#roottesting)\n    *   [DefensiveTestCall()](#defensivetestcall)\n        \n*   [safeMode](#safemode)\n    *   [CannotDeposit()](#cannotdeposit)\n        \n    *   [CannotRelease()](#cannotrelease)\n        \n    *   [DepositPlaced(`AccountId32`, `u128`)](#depositplacedaccountid32-u128)\n        \n    *   [DepositReleased(`AccountId32`, `u128`)](#depositreleasedaccountid32-u128)\n        \n    *   [DepositSlashed(`AccountId32`, `u128`)](#depositslashedaccountid32-u128-2)\n        \n    *   [Entered(`u32`)](#enteredu32)\n        \n    *   [Exited(`PalletSafeModeExitReason`)](#exitedpalletsafemodeexitreason)\n        \n    *   [Extended(`u32`)](#extendedu32)\n        \n*   [salary](#salary)\n    *   [CycleStarted(`u32`)](#cyclestartedu32)\n        \n    *   [Inducted(`AccountId32`)](#inductedaccountid32-1)\n        \n    *   [Paid(`AccountId32`, `AccountId32`, `u128`, `Null`)](#paidaccountid32-accountid32-u128-null)\n        \n    *   [Registered(`AccountId32`, `u128`)](#registeredaccountid32-u128)\n        \n*   [scheduler](#scheduler)\n    *   [CallUnavailable(`(u32,u32)`, `Option<[u8;32]>`)](#callunavailableu32u32-optionu832)\n        \n    *   [Canceled(`u32`, `u32`)](#canceledu32-u32-1)\n        \n    *   [Dispatched(`(u32,u32)`, `Option<[u8;32]>`, `Result<Null, SpRuntimeDispatchError>`)](#dispatchedu32u32-optionu832-resultnull-spruntimedispatcherror)\n        \n    *   [PeriodicFailed(`(u32,u32)`, `Option<[u8;32]>`)](#periodicfailedu32u32-optionu832)\n        \n    *   [PermanentlyOverweight(`(u32,u32)`, `Option<[u8;32]>`)](#permanentlyoverweightu32u32-optionu832)\n        \n    *   [Scheduled(`u32`, `u32`)](#scheduledu32-u32)\n        \n*   [session](#session)\n    *   [NewSession(`u32`)](#newsessionu32)\n        \n*   [skipFeelessPayment](#skipfeelesspayment)\n    *   [FeeSkipped(`AccountId32`)](#feeskippedaccountid32)\n        \n*   [society](#society)\n    *   [AutoUnbid(`AccountId32`)](#autounbidaccountid32)\n        \n    *   [Bid(`AccountId32`, `u128`)](#bidaccountid32-u128)\n        \n    *   [CandidateSuspended(`AccountId32`)](#candidatesuspendedaccountid32)\n        \n    *   [Challenged(`AccountId32`)](#challengedaccountid32)\n        \n    *   [DefenderVote(`AccountId32`, `bool`)](#defendervoteaccountid32-bool)\n        \n    *   [Deposit(`u128`)](#depositu128)\n        \n    *   [Elevated(`AccountId32`, `u32`)](#elevatedaccountid32-u32)\n        \n    *   [Founded(`AccountId32`)](#foundedaccountid32)\n        \n    *   [Inducted(`AccountId32`, `Vec<AccountId32>`)](#inductedaccountid32-vecaccountid32)\n        \n    *   [MemberSuspended(`AccountId32`)](#membersuspendedaccountid32)\n        \n    *   [NewParams(`PalletSocietyGroupParams`)](#newparamspalletsocietygroupparams)\n        \n    *   [SuspendedMemberJudgement(`AccountId32`, `bool`)](#suspendedmemberjudgementaccountid32-bool)\n        \n    *   [Unbid(`AccountId32`)](#unbidaccountid32)\n        \n    *   [Unfounded(`AccountId32`)](#unfoundedaccountid32)\n        \n    *   [Unvouch(`AccountId32`)](#unvouchaccountid32)\n        \n    *   [Vote(`AccountId32`, `AccountId32`, `bool`)](#voteaccountid32-accountid32-bool)\n        \n    *   [Vouch(`AccountId32`, `u128`, `AccountId32`)](#vouchaccountid32-u128-accountid32)\n        \n*   [staking](#staking)\n    *   [Bonded(`AccountId32`, `u128`)](#bondedaccountid32-u128)\n        \n    *   [Chilled(`AccountId32`)](#chilledaccountid32)\n        \n    *   [EraPaid(`u32`, `u128`, `u128`)](#erapaidu32-u128-u128)\n        \n    *   [ForceEra(`PalletStakingForcing`)](#forceerapalletstakingforcing)\n        \n    *   [Kicked(`AccountId32`, `AccountId32`)](#kickedaccountid32-accountid32)\n        \n    *   [OldSlashingReportDiscarded(`u32`)](#oldslashingreportdiscardedu32)\n        \n    *   [PayoutStarted(`u32`, `AccountId32`)](#payoutstartedu32-accountid32)\n        \n    *   [Rewarded(`AccountId32`, `PalletStakingRewardDestination`, `u128`)](#rewardedaccountid32-palletstakingrewarddestination-u128)\n        \n    *   [Slashed(`AccountId32`, `u128`)](#slashedaccountid32-u128-3)\n        \n    *   [SlashReported(`AccountId32`, `Perbill`, `u32`)](#slashreportedaccountid32-perbill-u32)\n        \n    *   [SnapshotTargetsSizeExceeded(`u32`)](#snapshottargetssizeexceededu32)\n        \n    *   [SnapshotVotersSizeExceeded(`u32`)](#snapshotvoterssizeexceededu32)\n        \n    *   [StakersElected()](#stakerselected)\n        \n    *   [StakingElectionFailed()](#stakingelectionfailed)\n        \n    *   [Unbonded(`AccountId32`, `u128`)](#unbondedaccountid32-u128)\n        \n    *   [ValidatorPrefsSet(`AccountId32`, `PalletStakingValidatorPrefs`)](#validatorprefssetaccountid32-palletstakingvalidatorprefs)\n        \n    *   [Withdrawn(`AccountId32`, `u128`)](#withdrawnaccountid32-u128)\n        \n*   [statement](#statement)\n    *   [NewStatement(`AccountId32`, `SpStatementStoreStatement`)](#newstatementaccountid32-spstatementstorestatement)\n        \n*   [stateTrieMigration](#statetriemigration)\n    *   [AutoMigrationFinished()](#automigrationfinished)\n        \n    *   [Halted(`PalletStateTrieMigrationError`)](#haltedpalletstatetriemigrationerror)\n        \n    *   [Migrated(`u32`, `u32`, `PalletStateTrieMigrationMigrationCompute`)](#migratedu32-u32-palletstatetriemigrationmigrationcompute)\n        \n    *   [Slashed(`AccountId32`, `u128`)](#slashedaccountid32-u128-4)\n        \n*   [sudo](#sudo)\n    *   [KeyChanged(`Option<AccountId32>`, `AccountId32`)](#keychangedoptionaccountid32-accountid32)\n        \n    *   [KeyRemoved()](#keyremoved)\n        \n    *   [Sudid(`Result<Null, SpRuntimeDispatchError>`)](#sudidresultnull-spruntimedispatcherror)\n        \n    *   [SudoAsDone(`Result<Null, SpRuntimeDispatchError>`)](#sudoasdoneresultnull-spruntimedispatcherror)\n        \n*   [system](#system)\n    *   [CodeUpdated()](#codeupdated)\n        \n    *   [ExtrinsicFailed(`SpRuntimeDispatchError`, `FrameSupportDispatchDispatchInfo`)](#extrinsicfailedspruntimedispatcherror-framesupportdispatchdispatchinfo)\n        \n    *   [ExtrinsicSuccess(`FrameSupportDispatchDispatchInfo`)](#extrinsicsuccessframesupportdispatchdispatchinfo)\n        \n    *   [KilledAccount(`AccountId32`)](#killedaccountaccountid32)\n        \n    *   [NewAccount(`AccountId32`)](#newaccountaccountid32)\n        \n    *   [Remarked(`AccountId32`, `H256`)](#remarkedaccountid32-h256)\n        \n    *   [TaskCompleted(`KitchensinkRuntimeRuntimeTask`)](#taskcompletedkitchensinkruntimeruntimetask)\n        \n    *   [TaskFailed(`KitchensinkRuntimeRuntimeTask`, `SpRuntimeDispatchError`)](#taskfailedkitchensinkruntimeruntimetask-spruntimedispatcherror)\n        \n    *   [TaskStarted(`KitchensinkRuntimeRuntimeTask`)](#taskstartedkitchensinkruntimeruntimetask)\n        \n*   [technicalCommittee](#technicalcommittee)\n    *   [Approved(`H256`)](#approvedh256-2)\n        \n    *   [Closed(`H256`, `u32`, `u32`)](#closedh256-u32-u32-2)\n        \n    *   [Disapproved(`H256`)](#disapprovedh256-2)\n        \n    *   [Executed(`H256`, `Result<Null, SpRuntimeDispatchError>`)](#executedh256-resultnull-spruntimedispatcherror-2)\n        \n    *   [MemberExecuted(`H256`, `Result<Null, SpRuntimeDispatchError>`)](#memberexecutedh256-resultnull-spruntimedispatcherror-2)\n        \n    *   [Proposed(`AccountId32`, `u32`, `H256`, `u32`)](#proposedaccountid32-u32-h256-u32-2)\n        \n    *   [Voted(`AccountId32`, `H256`, `bool`, `u32`, `u32`)](#votedaccountid32-h256-bool-u32-u32-2)\n        \n*   [technicalMembership](#technicalmembership)\n    *   [Dummy()](#dummy)\n        \n    *   [KeyChanged()](#keychanged)\n        \n    *   [MemberAdded()](#memberadded)\n        \n    *   [MemberRemoved()](#memberremoved)\n        \n    *   [MembersReset()](#membersreset)\n        \n    *   [MembersSwapped()](#membersswapped)\n        \n*   [tips](#tips)\n    *   [NewTip(`H256`)](#newtiph256)\n        \n    *   [TipClosed(`H256`, `AccountId32`, `u128`)](#tipclosedh256-accountid32-u128)\n        \n    *   [TipClosing(`H256`)](#tipclosingh256)\n        \n    *   [TipRetracted(`H256`)](#tipretractedh256)\n        \n    *   [TipSlashed(`H256`, `AccountId32`, `u128`)](#tipslashedh256-accountid32-u128)\n        \n*   [transactionPayment](#transactionpayment)\n    *   [TransactionFeePaid(`AccountId32`, `u128`, `u128`)](#transactionfeepaidaccountid32-u128-u128)\n        \n*   [transactionStorage](#transactionstorage)\n    *   [ProofChecked()](#proofchecked)\n        \n    *   [Renewed(`u32`)](#renewedu32)\n        \n    *   [Stored(`u32`)](#storedu32)\n        \n*   [treasury](#treasury)\n    *   [AssetSpendApproved(`u32`, `u32`, `u128`, `AccountId32`, `u32`, `u32`)](#assetspendapprovedu32-u32-u128-accountid32-u32-u32)\n        \n    *   [AssetSpendVoided(`u32`)](#assetspendvoidedu32)\n        \n    *   [Awarded(`u32`, `u128`, `AccountId32`)](#awardedu32-u128-accountid32)\n        \n    *   [Burnt(`u128`)](#burntu128)\n        \n    *   [Deposit(`u128`)](#depositu128-1)\n        \n    *   [Paid(`u32`, `Null`)](#paidu32-null)\n        \n    *   [PaymentFailed(`u32`, `Null`)](#paymentfailedu32-null)\n        \n    *   [Proposed(`u32`)](#proposedu32)\n        \n    *   [Rejected(`u32`, `u128`)](#rejectedu32-u128)\n        \n    *   [Rollover(`u128`)](#rolloveru128)\n        \n    *   [SpendApproved(`u32`, `u128`, `AccountId32`)](#spendapprovedu32-u128-accountid32)\n        \n    *   [Spending(`u128`)](#spendingu128)\n        \n    *   [SpendProcessed(`u32`)](#spendprocessedu32)\n        \n    *   [UpdatedInactive(`u128`, `u128`)](#updatedinactiveu128-u128)\n        \n*   [txPause](#txpause)\n    *   [CallPaused(`(Bytes,Bytes)`)](#callpausedbytesbytes)\n        \n    *   [CallUnpaused(`(Bytes,Bytes)`)](#callunpausedbytesbytes)\n        \n*   [uniques](#uniques)\n    *   [ApprovalCancelled(`u32`, `u32`, `AccountId32`, `AccountId32`)](#approvalcancelledu32-u32-accountid32-accountid32-1)\n        \n    *   [ApprovedTransfer(`u32`, `u32`, `AccountId32`, `AccountId32`)](#approvedtransferu32-u32-accountid32-accountid32)\n        \n    *   [AttributeCleared(`u32`, `Option<u32>`, `Bytes`)](#attributeclearedu32-optionu32-bytes)\n        \n    *   [AttributeSet(`u32`, `Option<u32>`, `Bytes`, `Bytes`)](#attributesetu32-optionu32-bytes-bytes)\n        \n    *   [Burned(`u32`, `u32`, `AccountId32`)](#burnedu32-u32-accountid32-1)\n        \n    *   [CollectionFrozen(`u32`)](#collectionfrozenu32)\n        \n    *   [CollectionMaxSupplySet(`u32`, `u32`)](#collectionmaxsupplysetu32-u32-1)\n        \n    *   [CollectionMetadataCleared(`u32`)](#collectionmetadataclearedu32-1)\n        \n    *   [CollectionMetadataSet(`u32`, `Bytes`, `bool`)](#collectionmetadatasetu32-bytes-bool)\n        \n    *   [CollectionThawed(`u32`)](#collectionthawedu32)\n        \n    *   [Created(`u32`, `AccountId32`, `AccountId32`)](#createdu32-accountid32-accountid32-3)\n        \n    *   [Destroyed(`u32`)](#destroyedu32-4)\n        \n    *   [ForceCreated(`u32`, `AccountId32`)](#forcecreatedu32-accountid32-3)\n        \n    *   [Frozen(`u32`, `u32`)](#frozenu32-u32)\n        \n    *   [Issued(`u32`, `u32`, `AccountId32`)](#issuedu32-u32-accountid32-1)\n        \n    *   [ItemBought(`u32`, `u32`, `u128`, `AccountId32`, `AccountId32`)](#itemboughtu32-u32-u128-accountid32-accountid32-1)\n        \n    *   [ItemPriceRemoved(`u32`, `u32`)](#itempriceremovedu32-u32-1)\n        \n    *   [ItemPriceSet(`u32`, `u32`, `u128`, `Option<AccountId32>`)](#itempricesetu32-u32-u128-optionaccountid32-1)\n        \n    *   [ItemStatusChanged(`u32`)](#itemstatuschangedu32)\n        \n    *   [MetadataCleared(`u32`, `u32`)](#metadataclearedu32-u32)\n        \n    *   [MetadataSet(`u32`, `u32`, `Bytes`, `bool`)](#metadatasetu32-u32-bytes-bool)\n        \n    *   [OwnerChanged(`u32`, `AccountId32`)](#ownerchangedu32-accountid32-3)\n        \n    *   [OwnershipAcceptanceChanged(`AccountId32`, `Option<u32>`)](#ownershipacceptancechangedaccountid32-optionu32-1)\n        \n    *   [Redeposited(`u32`, `Vec<u32>`)](#redepositedu32-vecu32-1)\n        \n    *   [TeamChanged(`u32`, `AccountId32`, `AccountId32`, `AccountId32`)](#teamchangedu32-accountid32-accountid32-accountid32-2)\n        \n    *   [Thawed(`u32`, `u32`)](#thawedu32-u32)\n        \n    *   [Transferred(`u32`, `u32`, `AccountId32`, `AccountId32`)](#transferredu32-u32-accountid32-accountid32-1)\n        \n*   [utility](#utility)\n    *   [BatchCompleted()](#batchcompleted)\n        \n    *   [BatchCompletedWithErrors()](#batchcompletedwitherrors)\n        \n    *   [BatchInterrupted(`u32`, `SpRuntimeDispatchError`)](#batchinterruptedu32-spruntimedispatcherror)\n        \n    *   [DispatchedAs(`Result<Null, SpRuntimeDispatchError>`)](#dispatchedasresultnull-spruntimedispatcherror)\n        \n    *   [ItemCompleted()](#itemcompleted)\n        \n    *   [ItemFailed(`SpRuntimeDispatchError`)](#itemfailedspruntimedispatcherror)\n        \n*   [vesting](#vesting)\n    *   [VestingCompleted(`AccountId32`)](#vestingcompletedaccountid32)\n        \n    *   [VestingUpdated(`AccountId32`, `u128`)](#vestingupdatedaccountid32-u128)\n        \n*   [voterList](#voterlist)\n    *   [Rebagged(`AccountId32`, `u64`, `u64`)](#rebaggedaccountid32-u64-u64)\n        \n    *   [ScoreUpdated(`AccountId32`, `u64`)](#scoreupdatedaccountid32-u64)\n        \n*   [whitelist](#whitelist)\n    *   [CallWhitelisted(`H256`)](#callwhitelistedh256)\n        \n    *   [WhitelistedCallDispatched(`H256`, `Result<FrameSupportDispatchPostDispatchInfo, SpRuntimeDispatchErrorWithPostInfo>`)](#whitelistedcalldispatchedh256-resultframesupportdispatchpostdispatchinfo-spruntimedispatcherrorwithpostinfo)\n        \n    *   [WhitelistedCallRemoved(`H256`)](#whitelistedcallremovedh256)"}, {"title": null, "description": null, "source_url": "https://polkadot.js.org/docs/substrate/extrinsics", "markdown": "[Skip to main content](#__docusaurus_skipToContent_fallback)\n\n[![polkadot{.js}](https://polkadot.js.org/docs/img/logo.svg)\\\n\\\n**polkadot{.js}**](/docs/)\n\n[Apps UI (Wallet)](https://polkadot.js.org/apps/)\n[GitHub](https://github.com/polkadot-js/docs)\n\nSearch...\n\n*   [Introduction](#)\n    \n*   [API](#)\n    \n*   [Metadata](#)\n    \n    *   [Substrate](#)\n        \n        *   [Overview](/docs/substrate)\n            \n        *   [Runtime](/docs/substrate/runtime)\n            \n        *   [JSON-RPC](/docs/substrate/rpc)\n            \n        *   [Constants](/docs/substrate/constants)\n            \n        *   [Storage](/docs/substrate/storage)\n            \n        *   [Extrinsics](/docs/substrate/extrinsics)\n            \n        *   [Events](/docs/substrate/events)\n            \n        *   [Errors](/docs/substrate/errors)\n            \n    *   [Polkadot](#)\n        \n    *   [Kusama](#)\n        \n*   [Keyring](#)\n    \n*   [Crypto Utilities](#)\n    \n*   [Contracts (API)](#)\n    \n*   [Identicon (UI)](#)\n    \n*   [Keyring (UI)](#)\n    \n*   [Extension](#)\n    \n*   [Run, Bundle, Test](#)\n    \n\n*   [](/docs/)\n    \n*   Metadata\n*   Substrate\n*   Extrinsics\n\nOn this page\n\nExtrinsics\n==========\n\nThe following sections contain Extrinsics methods are part of the default Substrate runtime. On the api, these are exposed via `api.tx.<module>.<method>`.\n\n(NOTE: These were generated from a static/snapshot view of a recent default Substrate runtime. Some items may not be available in older nodes, or in any customized implementations.)\n\n*   **[alliance](#alliance)\n    **\n    \n*   **[allianceMotion](#alliancemotion)\n    **\n    \n*   **[assetConversion](#assetconversion)\n    **\n    \n*   **[assetRate](#assetrate)\n    **\n    \n*   **[assets](#assets)\n    **\n    \n*   **[babe](#babe)\n    **\n    \n*   **[balances](#balances)\n    **\n    \n*   **[bounties](#bounties)\n    **\n    \n*   **[broker](#broker)\n    **\n    \n*   **[childBounties](#childbounties)\n    **\n    \n*   **[contracts](#contracts)\n    **\n    \n*   **[convictionVoting](#convictionvoting)\n    **\n    \n*   **[coreFellowship](#corefellowship)\n    **\n    \n*   **[council](#council)\n    **\n    \n*   **[democracy](#democracy)\n    **\n    \n*   **[electionProviderMultiPhase](#electionprovidermultiphase)\n    **\n    \n*   **[elections](#elections)\n    **\n    \n*   **[fastUnstake](#fastunstake)\n    **\n    \n*   **[glutton](#glutton)\n    **\n    \n*   **[grandpa](#grandpa)\n    **\n    \n*   **[identity](#identity)\n    **\n    \n*   **[imOnline](#imonline)\n    **\n    \n*   **[indices](#indices)\n    **\n    \n*   **[lottery](#lottery)\n    **\n    \n*   **[messageQueue](#messagequeue)\n    **\n    \n*   **[mixnet](#mixnet)\n    **\n    \n*   **[multisig](#multisig)\n    **\n    \n*   **[nftFractionalization](#nftfractionalization)\n    **\n    \n*   **[nfts](#nfts)\n    **\n    \n*   **[nis](#nis)\n    **\n    \n*   **[nominationPools](#nominationpools)\n    **\n    \n*   **[poolAssets](#poolassets)\n    **\n    \n*   **[pov](#pov)\n    **\n    \n*   **[preimage](#preimage)\n    **\n    \n*   **[proxy](#proxy)\n    **\n    \n*   **[rankedCollective](#rankedcollective)\n    **\n    \n*   **[rankedPolls](#rankedpolls)\n    **\n    \n*   **[recovery](#recovery)\n    **\n    \n*   **[referenda](#referenda)\n    **\n    \n*   **[remark](#remark)\n    **\n    \n*   **[rootTesting](#roottesting)\n    **\n    \n*   **[safeMode](#safemode)\n    **\n    \n*   **[salary](#salary)\n    **\n    \n*   **[scheduler](#scheduler)\n    **\n    \n*   **[session](#session)\n    **\n    \n*   **[society](#society)\n    **\n    \n*   **[staking](#staking)\n    **\n    \n*   **[stateTrieMigration](#statetriemigration)\n    **\n    \n*   **[sudo](#sudo)\n    **\n    \n*   **[system](#system)\n    **\n    \n*   **[technicalCommittee](#technicalcommittee)\n    **\n    \n*   **[technicalMembership](#technicalmembership)\n    **\n    \n*   **[timestamp](#timestamp)\n    **\n    \n*   **[tips](#tips)\n    **\n    \n*   **[transactionStorage](#transactionstorage)\n    **\n    \n*   **[treasury](#treasury)\n    **\n    \n*   **[txPause](#txpause)\n    **\n    \n*   **[uniques](#uniques)\n    **\n    \n*   **[utility](#utility)\n    **\n    \n*   **[vesting](#vesting)\n    **\n    \n*   **[voterList](#voterlist)\n    **\n    \n*   **[whitelist](#whitelist)\n    **\n    \n\n* * *\n\nalliance[\u200b](#alliance \"Direct link to alliance\")\n\n-------------------------------------------------\n\n### abdicateFellowStatus()[\u200b](#abdicatefellowstatus \"Direct link to abdicateFellowStatus()\")\n\n*   **interface**: `api.tx.alliance.abdicateFellowStatus`\n*   **summary**: See \\[`Pallet::abdicate_fellow_status`\\].\n\n### addUnscrupulousItems(items: `Vec<PalletAllianceUnscrupulousItem>`)[\u200b](#addunscrupulousitemsitems-vecpalletallianceunscrupulousitem \"Direct link to addunscrupulousitemsitems-vecpalletallianceunscrupulousitem\")\n\n*   **interface**: `api.tx.alliance.addUnscrupulousItems`\n*   **summary**: See \\[`Pallet::add_unscrupulous_items`\\].\n\n### announce(announcement: `PalletAllianceCid`)[\u200b](#announceannouncement-palletalliancecid \"Direct link to announceannouncement-palletalliancecid\")\n\n*   **interface**: `api.tx.alliance.announce`\n*   **summary**: See \\[`Pallet::announce`\\].\n\n### close(proposal\\_hash: `H256`, index: `Compact<u32>`, proposal\\_weight\\_bound: `SpWeightsWeightV2Weight`, length\\_bound: `Compact<u32>`)[\u200b](#closeproposal_hash-h256-index-compactu32-proposal_weight_bound-spweightsweightv2weight-length_bound-compactu32 \"Direct link to closeproposal_hash-h256-index-compactu32-proposal_weight_bound-spweightsweightv2weight-length_bound-compactu32\")\n\n*   **interface**: `api.tx.alliance.close`\n*   **summary**: See \\[`Pallet::close`\\].\n\n### disband(witness: `PalletAllianceDisbandWitness`)[\u200b](#disbandwitness-palletalliancedisbandwitness \"Direct link to disbandwitness-palletalliancedisbandwitness\")\n\n*   **interface**: `api.tx.alliance.disband`\n*   **summary**: See \\[`Pallet::disband`\\].\n\n### elevateAlly(ally: `MultiAddress`)[\u200b](#elevateallyally-multiaddress \"Direct link to elevateallyally-multiaddress\")\n\n*   **interface**: `api.tx.alliance.elevateAlly`\n*   **summary**: See \\[`Pallet::elevate_ally`\\].\n\n### giveRetirementNotice()[\u200b](#giveretirementnotice \"Direct link to giveRetirementNotice()\")\n\n*   **interface**: `api.tx.alliance.giveRetirementNotice`\n*   **summary**: See \\[`Pallet::give_retirement_notice`\\].\n\n### initMembers(fellows: `Vec<AccountId32>`, allies: `Vec<AccountId32>`)[\u200b](#initmembersfellows-vecaccountid32-allies-vecaccountid32 \"Direct link to initmembersfellows-vecaccountid32-allies-vecaccountid32\")\n\n*   **interface**: `api.tx.alliance.initMembers`\n*   **summary**: See \\[`Pallet::init_members`\\].\n\n### joinAlliance()[\u200b](#joinalliance \"Direct link to joinAlliance()\")\n\n*   **interface**: `api.tx.alliance.joinAlliance`\n*   **summary**: See \\[`Pallet::join_alliance`\\].\n\n### kickMember(who: `MultiAddress`)[\u200b](#kickmemberwho-multiaddress \"Direct link to kickmemberwho-multiaddress\")\n\n*   **interface**: `api.tx.alliance.kickMember`\n*   **summary**: See \\[`Pallet::kick_member`\\].\n\n### nominateAlly(who: `MultiAddress`)[\u200b](#nominateallywho-multiaddress \"Direct link to nominateallywho-multiaddress\")\n\n*   **interface**: `api.tx.alliance.nominateAlly`\n*   **summary**: See \\[`Pallet::nominate_ally`\\].\n\n### propose(threshold: `Compact<u32>`, proposal: `Call`, length\\_bound: `Compact<u32>`)[\u200b](#proposethreshold-compactu32-proposal-call-length_bound-compactu32 \"Direct link to proposethreshold-compactu32-proposal-call-length_bound-compactu32\")\n\n*   **interface**: `api.tx.alliance.propose`\n*   **summary**: See \\[`Pallet::propose`\\].\n\n### removeAnnouncement(announcement: `PalletAllianceCid`)[\u200b](#removeannouncementannouncement-palletalliancecid \"Direct link to removeannouncementannouncement-palletalliancecid\")\n\n*   **interface**: `api.tx.alliance.removeAnnouncement`\n*   **summary**: See \\[`Pallet::remove_announcement`\\].\n\n### removeUnscrupulousItems(items: `Vec<PalletAllianceUnscrupulousItem>`)[\u200b](#removeunscrupulousitemsitems-vecpalletallianceunscrupulousitem \"Direct link to removeunscrupulousitemsitems-vecpalletallianceunscrupulousitem\")\n\n*   **interface**: `api.tx.alliance.removeUnscrupulousItems`\n*   **summary**: See \\[`Pallet::remove_unscrupulous_items`\\].\n\n### retire()[\u200b](#retire \"Direct link to retire()\")\n\n*   **interface**: `api.tx.alliance.retire`\n*   **summary**: See \\[`Pallet::retire`\\].\n\n### setRule(rule: `PalletAllianceCid`)[\u200b](#setrulerule-palletalliancecid \"Direct link to setrulerule-palletalliancecid\")\n\n*   **interface**: `api.tx.alliance.setRule`\n*   **summary**: See \\[`Pallet::set_rule`\\].\n\n### vote(proposal: `H256`, index: `Compact<u32>`, approve: `bool`)[\u200b](#voteproposal-h256-index-compactu32-approve-bool \"Direct link to voteproposal-h256-index-compactu32-approve-bool\")\n\n*   **interface**: `api.tx.alliance.vote`\n*   **summary**: See \\[`Pallet::vote`\\].\n\n* * *\n\nallianceMotion[\u200b](#alliancemotion \"Direct link to allianceMotion\")\n\n-------------------------------------------------------------------\n\n### close(proposal\\_hash: `H256`, index: `Compact<u32>`, proposal\\_weight\\_bound: `SpWeightsWeightV2Weight`, length\\_bound: `Compact<u32>`)[\u200b](#closeproposal_hash-h256-index-compactu32-proposal_weight_bound-spweightsweightv2weight-length_bound-compactu32-1 \"Direct link to closeproposal_hash-h256-index-compactu32-proposal_weight_bound-spweightsweightv2weight-length_bound-compactu32-1\")\n\n*   **interface**: `api.tx.allianceMotion.close`\n*   **summary**: See \\[`Pallet::close`\\].\n\n### disapproveProposal(proposal\\_hash: `H256`)[\u200b](#disapproveproposalproposal_hash-h256 \"Direct link to disapproveproposalproposal_hash-h256\")\n\n*   **interface**: `api.tx.allianceMotion.disapproveProposal`\n*   **summary**: See \\[`Pallet::disapprove_proposal`\\].\n\n### execute(proposal: `Call`, length\\_bound: `Compact<u32>`)[\u200b](#executeproposal-call-length_bound-compactu32 \"Direct link to executeproposal-call-length_bound-compactu32\")\n\n*   **interface**: `api.tx.allianceMotion.execute`\n*   **summary**: See \\[`Pallet::execute`\\].\n\n### propose(threshold: `Compact<u32>`, proposal: `Call`, length\\_bound: `Compact<u32>`)[\u200b](#proposethreshold-compactu32-proposal-call-length_bound-compactu32-1 \"Direct link to proposethreshold-compactu32-proposal-call-length_bound-compactu32-1\")\n\n*   **interface**: `api.tx.allianceMotion.propose`\n*   **summary**: See \\[`Pallet::propose`\\].\n\n### setMembers(new\\_members: `Vec<AccountId32>`, prime: `Option<AccountId32>`, old\\_count: `u32`)[\u200b](#setmembersnew_members-vecaccountid32-prime-optionaccountid32-old_count-u32 \"Direct link to setmembersnew_members-vecaccountid32-prime-optionaccountid32-old_count-u32\")\n\n*   **interface**: `api.tx.allianceMotion.setMembers`\n*   **summary**: See \\[`Pallet::set_members`\\].\n\n### vote(proposal: `H256`, index: `Compact<u32>`, approve: `bool`)[\u200b](#voteproposal-h256-index-compactu32-approve-bool-1 \"Direct link to voteproposal-h256-index-compactu32-approve-bool-1\")\n\n*   **interface**: `api.tx.allianceMotion.vote`\n*   **summary**: See \\[`Pallet::vote`\\].\n\n* * *\n\nassetConversion[\u200b](#assetconversion \"Direct link to assetConversion\")\n\n----------------------------------------------------------------------\n\n### addLiquidity(asset1: `PalletAssetConversionNativeOrAssetId`, asset2: `PalletAssetConversionNativeOrAssetId`, amount1\\_desired: `u128`, amount2\\_desired: `u128`, amount1\\_min: `u128`, amount2\\_min: `u128`, mint\\_to: `AccountId32`)[\u200b](#addliquidityasset1-palletassetconversionnativeorassetid-asset2-palletassetconversionnativeorassetid-amount1_desired-u128-amount2_desired-u128-amount1_min-u128-amount2_min-u128-mint_to-accountid32 \"Direct link to addliquidityasset1-palletassetconversionnativeorassetid-asset2-palletassetconversionnativeorassetid-amount1_desired-u128-amount2_desired-u128-amount1_min-u128-amount2_min-u128-mint_to-accountid32\")\n\n*   **interface**: `api.tx.assetConversion.addLiquidity`\n*   **summary**: See \\[`Pallet::add_liquidity`\\].\n\n### createPool(asset1: `PalletAssetConversionNativeOrAssetId`, asset2: `PalletAssetConversionNativeOrAssetId`)[\u200b](#createpoolasset1-palletassetconversionnativeorassetid-asset2-palletassetconversionnativeorassetid \"Direct link to createpoolasset1-palletassetconversionnativeorassetid-asset2-palletassetconversionnativeorassetid\")\n\n*   **interface**: `api.tx.assetConversion.createPool`\n*   **summary**: See \\[`Pallet::create_pool`\\].\n\n### removeLiquidity(asset1: `PalletAssetConversionNativeOrAssetId`, asset2: `PalletAssetConversionNativeOrAssetId`, lp\\_token\\_burn: `u128`, amount1\\_min\\_receive: `u128`, amount2\\_min\\_receive: `u128`, withdraw\\_to: `AccountId32`)[\u200b](#removeliquidityasset1-palletassetconversionnativeorassetid-asset2-palletassetconversionnativeorassetid-lp_token_burn-u128-amount1_min_receive-u128-amount2_min_receive-u128-withdraw_to-accountid32 \"Direct link to removeliquidityasset1-palletassetconversionnativeorassetid-asset2-palletassetconversionnativeorassetid-lp_token_burn-u128-amount1_min_receive-u128-amount2_min_receive-u128-withdraw_to-accountid32\")\n\n*   **interface**: `api.tx.assetConversion.removeLiquidity`\n*   **summary**: See \\[`Pallet::remove_liquidity`\\].\n\n### swapExactTokensForTokens(path: `Vec<PalletAssetConversionNativeOrAssetId>`, amount\\_in: `u128`, amount\\_out\\_min: `u128`, send\\_to: `AccountId32`, keep\\_alive: `bool`)[\u200b](#swapexacttokensfortokenspath-vecpalletassetconversionnativeorassetid-amount_in-u128-amount_out_min-u128-send_to-accountid32-keep_alive-bool \"Direct link to swapexacttokensfortokenspath-vecpalletassetconversionnativeorassetid-amount_in-u128-amount_out_min-u128-send_to-accountid32-keep_alive-bool\")\n\n*   **interface**: `api.tx.assetConversion.swapExactTokensForTokens`\n*   **summary**: See \\[`Pallet::swap_exact_tokens_for_tokens`\\].\n\n### swapTokensForExactTokens(path: `Vec<PalletAssetConversionNativeOrAssetId>`, amount\\_out: `u128`, amount\\_in\\_max: `u128`, send\\_to: `AccountId32`, keep\\_alive: `bool`)[\u200b](#swaptokensforexacttokenspath-vecpalletassetconversionnativeorassetid-amount_out-u128-amount_in_max-u128-send_to-accountid32-keep_alive-bool \"Direct link to swaptokensforexacttokenspath-vecpalletassetconversionnativeorassetid-amount_out-u128-amount_in_max-u128-send_to-accountid32-keep_alive-bool\")\n\n*   **interface**: `api.tx.assetConversion.swapTokensForExactTokens`\n*   **summary**: See \\[`Pallet::swap_tokens_for_exact_tokens`\\].\n\n* * *\n\nassetRate[\u200b](#assetrate \"Direct link to assetRate\")\n\n----------------------------------------------------\n\n### create(asset\\_kind: `u32`, rate: `u128`)[\u200b](#createasset_kind-u32-rate-u128 \"Direct link to createasset_kind-u32-rate-u128\")\n\n*   **interface**: `api.tx.assetRate.create`\n*   **summary**: See \\[`Pallet::create`\\].\n\n### remove(asset\\_kind: `u32`)[\u200b](#removeasset_kind-u32 \"Direct link to removeasset_kind-u32\")\n\n*   **interface**: `api.tx.assetRate.remove`\n*   **summary**: See \\[`Pallet::remove`\\].\n\n### update(asset\\_kind: `u32`, rate: `u128`)[\u200b](#updateasset_kind-u32-rate-u128 \"Direct link to updateasset_kind-u32-rate-u128\")\n\n*   **interface**: `api.tx.assetRate.update`\n*   **summary**: See \\[`Pallet::update`\\].\n\n* * *\n\nassets[\u200b](#assets \"Direct link to assets\")\n\n-------------------------------------------\n\n### approveTransfer(id: `Compact<u32>`, delegate: `MultiAddress`, amount: `Compact<u128>`)[\u200b](#approvetransferid-compactu32-delegate-multiaddress-amount-compactu128 \"Direct link to approvetransferid-compactu32-delegate-multiaddress-amount-compactu128\")\n\n*   **interface**: `api.tx.assets.approveTransfer`\n*   **summary**: See \\[`Pallet::approve_transfer`\\].\n\n### block(id: `Compact<u32>`, who: `MultiAddress`)[\u200b](#blockid-compactu32-who-multiaddress \"Direct link to blockid-compactu32-who-multiaddress\")\n\n*   **interface**: `api.tx.assets.block`\n*   **summary**: See \\[`Pallet::block`\\].\n\n### burn(id: `Compact<u32>`, who: `MultiAddress`, amount: `Compact<u128>`)[\u200b](#burnid-compactu32-who-multiaddress-amount-compactu128 \"Direct link to burnid-compactu32-who-multiaddress-amount-compactu128\")\n\n*   **interface**: `api.tx.assets.burn`\n*   **summary**: See \\[`Pallet::burn`\\].\n\n### cancelApproval(id: `Compact<u32>`, delegate: `MultiAddress`)[\u200b](#cancelapprovalid-compactu32-delegate-multiaddress \"Direct link to cancelapprovalid-compactu32-delegate-multiaddress\")\n\n*   **interface**: `api.tx.assets.cancelApproval`\n*   **summary**: See \\[`Pallet::cancel_approval`\\].\n\n### clearMetadata(id: `Compact<u32>`)[\u200b](#clearmetadataid-compactu32 \"Direct link to clearmetadataid-compactu32\")\n\n*   **interface**: `api.tx.assets.clearMetadata`\n*   **summary**: See \\[`Pallet::clear_metadata`\\].\n\n### create(id: `Compact<u32>`, admin: `MultiAddress`, min\\_balance: `u128`)[\u200b](#createid-compactu32-admin-multiaddress-min_balance-u128 \"Direct link to createid-compactu32-admin-multiaddress-min_balance-u128\")\n\n*   **interface**: `api.tx.assets.create`\n*   **summary**: See \\[`Pallet::create`\\].\n\n### destroyAccounts(id: `Compact<u32>`)[\u200b](#destroyaccountsid-compactu32 \"Direct link to destroyaccountsid-compactu32\")\n\n*   **interface**: `api.tx.assets.destroyAccounts`\n*   **summary**: See \\[`Pallet::destroy_accounts`\\].\n\n### destroyApprovals(id: `Compact<u32>`)[\u200b](#destroyapprovalsid-compactu32 \"Direct link to destroyapprovalsid-compactu32\")\n\n*   **interface**: `api.tx.assets.destroyApprovals`\n*   **summary**: See \\[`Pallet::destroy_approvals`\\].\n\n### finishDestroy(id: `Compact<u32>`)[\u200b](#finishdestroyid-compactu32 \"Direct link to finishdestroyid-compactu32\")\n\n*   **interface**: `api.tx.assets.finishDestroy`\n*   **summary**: See \\[`Pallet::finish_destroy`\\].\n\n### forceAssetStatus(id: `Compact<u32>`, owner: `MultiAddress`, issuer: `MultiAddress`, admin: `MultiAddress`, freezer: `MultiAddress`, min\\_balance: `Compact<u128>`, is\\_sufficient: `bool`, is\\_frozen: `bool`)[\u200b](#forceassetstatusid-compactu32-owner-multiaddress-issuer-multiaddress-admin-multiaddress-freezer-multiaddress-min_balance-compactu128-is_sufficient-bool-is_frozen-bool \"Direct link to forceassetstatusid-compactu32-owner-multiaddress-issuer-multiaddress-admin-multiaddress-freezer-multiaddress-min_balance-compactu128-is_sufficient-bool-is_frozen-bool\")\n\n*   **interface**: `api.tx.assets.forceAssetStatus`\n*   **summary**: See \\[`Pallet::force_asset_status`\\].\n\n### forceCancelApproval(id: `Compact<u32>`, owner: `MultiAddress`, delegate: `MultiAddress`)[\u200b](#forcecancelapprovalid-compactu32-owner-multiaddress-delegate-multiaddress \"Direct link to forcecancelapprovalid-compactu32-owner-multiaddress-delegate-multiaddress\")\n\n*   **interface**: `api.tx.assets.forceCancelApproval`\n*   **summary**: See \\[`Pallet::force_cancel_approval`\\].\n\n### forceClearMetadata(id: `Compact<u32>`)[\u200b](#forceclearmetadataid-compactu32 \"Direct link to forceclearmetadataid-compactu32\")\n\n*   **interface**: `api.tx.assets.forceClearMetadata`\n*   **summary**: See \\[`Pallet::force_clear_metadata`\\].\n\n### forceCreate(id: `Compact<u32>`, owner: `MultiAddress`, is\\_sufficient: `bool`, min\\_balance: `Compact<u128>`)[\u200b](#forcecreateid-compactu32-owner-multiaddress-is_sufficient-bool-min_balance-compactu128 \"Direct link to forcecreateid-compactu32-owner-multiaddress-is_sufficient-bool-min_balance-compactu128\")\n\n*   **interface**: `api.tx.assets.forceCreate`\n*   **summary**: See \\[`Pallet::force_create`\\].\n\n### forceSetMetadata(id: `Compact<u32>`, name: `Bytes`, symbol: `Bytes`, decimals: `u8`, is\\_frozen: `bool`)[\u200b](#forcesetmetadataid-compactu32-name-bytes-symbol-bytes-decimals-u8-is_frozen-bool \"Direct link to forcesetmetadataid-compactu32-name-bytes-symbol-bytes-decimals-u8-is_frozen-bool\")\n\n*   **interface**: `api.tx.assets.forceSetMetadata`\n*   **summary**: See \\[`Pallet::force_set_metadata`\\].\n\n### forceTransfer(id: `Compact<u32>`, source: `MultiAddress`, dest: `MultiAddress`, amount: `Compact<u128>`)[\u200b](#forcetransferid-compactu32-source-multiaddress-dest-multiaddress-amount-compactu128 \"Direct link to forcetransferid-compactu32-source-multiaddress-dest-multiaddress-amount-compactu128\")\n\n*   **interface**: `api.tx.assets.forceTransfer`\n*   **summary**: See \\[`Pallet::force_transfer`\\].\n\n### freeze(id: `Compact<u32>`, who: `MultiAddress`)[\u200b](#freezeid-compactu32-who-multiaddress \"Direct link to freezeid-compactu32-who-multiaddress\")\n\n*   **interface**: `api.tx.assets.freeze`\n*   **summary**: See \\[`Pallet::freeze`\\].\n\n### freezeAsset(id: `Compact<u32>`)[\u200b](#freezeassetid-compactu32 \"Direct link to freezeassetid-compactu32\")\n\n*   **interface**: `api.tx.assets.freezeAsset`\n*   **summary**: See \\[`Pallet::freeze_asset`\\].\n\n### mint(id: `Compact<u32>`, beneficiary: `MultiAddress`, amount: `Compact<u128>`)[\u200b](#mintid-compactu32-beneficiary-multiaddress-amount-compactu128 \"Direct link to mintid-compactu32-beneficiary-multiaddress-amount-compactu128\")\n\n*   **interface**: `api.tx.assets.mint`\n*   **summary**: See \\[`Pallet::mint`\\].\n\n### refund(id: `Compact<u32>`, allow\\_burn: `bool`)[\u200b](#refundid-compactu32-allow_burn-bool \"Direct link to refundid-compactu32-allow_burn-bool\")\n\n*   **interface**: `api.tx.assets.refund`\n*   **summary**: See \\[`Pallet::refund`\\].\n\n### refundOther(id: `Compact<u32>`, who: `MultiAddress`)[\u200b](#refundotherid-compactu32-who-multiaddress \"Direct link to refundotherid-compactu32-who-multiaddress\")\n\n*   **interface**: `api.tx.assets.refundOther`\n*   **summary**: See \\[`Pallet::refund_other`\\].\n\n### setMetadata(id: `Compact<u32>`, name: `Bytes`, symbol: `Bytes`, decimals: `u8`)[\u200b](#setmetadataid-compactu32-name-bytes-symbol-bytes-decimals-u8 \"Direct link to setmetadataid-compactu32-name-bytes-symbol-bytes-decimals-u8\")\n\n*   **interface**: `api.tx.assets.setMetadata`\n*   **summary**: See \\[`Pallet::set_metadata`\\].\n\n### setMinBalance(id: `Compact<u32>`, min\\_balance: `u128`)[\u200b](#setminbalanceid-compactu32-min_balance-u128 \"Direct link to setminbalanceid-compactu32-min_balance-u128\")\n\n*   **interface**: `api.tx.assets.setMinBalance`\n*   **summary**: See \\[`Pallet::set_min_balance`\\].\n\n### setTeam(id: `Compact<u32>`, issuer: `MultiAddress`, admin: `MultiAddress`, freezer: `MultiAddress`)[\u200b](#setteamid-compactu32-issuer-multiaddress-admin-multiaddress-freezer-multiaddress \"Direct link to setteamid-compactu32-issuer-multiaddress-admin-multiaddress-freezer-multiaddress\")\n\n*   **interface**: `api.tx.assets.setTeam`\n*   **summary**: See \\[`Pallet::set_team`\\].\n\n### startDestroy(id: `Compact<u32>`)[\u200b](#startdestroyid-compactu32 \"Direct link to startdestroyid-compactu32\")\n\n*   **interface**: `api.tx.assets.startDestroy`\n*   **summary**: See \\[`Pallet::start_destroy`\\].\n\n### thaw(id: `Compact<u32>`, who: `MultiAddress`)[\u200b](#thawid-compactu32-who-multiaddress \"Direct link to thawid-compactu32-who-multiaddress\")\n\n*   **interface**: `api.tx.assets.thaw`\n*   **summary**: See \\[`Pallet::thaw`\\].\n\n### thawAsset(id: `Compact<u32>`)[\u200b](#thawassetid-compactu32 \"Direct link to thawassetid-compactu32\")\n\n*   **interface**: `api.tx.assets.thawAsset`\n*   **summary**: See \\[`Pallet::thaw_asset`\\].\n\n### touch(id: `Compact<u32>`)[\u200b](#touchid-compactu32 \"Direct link to touchid-compactu32\")\n\n*   **interface**: `api.tx.assets.touch`\n*   **summary**: See \\[`Pallet::touch`\\].\n\n### touchOther(id: `Compact<u32>`, who: `MultiAddress`)[\u200b](#touchotherid-compactu32-who-multiaddress \"Direct link to touchotherid-compactu32-who-multiaddress\")\n\n*   **interface**: `api.tx.assets.touchOther`\n*   **summary**: See \\[`Pallet::touch_other`\\].\n\n### transfer(id: `Compact<u32>`, target: `MultiAddress`, amount: `Compact<u128>`)[\u200b](#transferid-compactu32-target-multiaddress-amount-compactu128 \"Direct link to transferid-compactu32-target-multiaddress-amount-compactu128\")\n\n*   **interface**: `api.tx.assets.transfer`\n*   **summary**: See \\[`Pallet::transfer`\\].\n\n### transferApproved(id: `Compact<u32>`, owner: `MultiAddress`, destination: `MultiAddress`, amount: `Compact<u128>`)[\u200b](#transferapprovedid-compactu32-owner-multiaddress-destination-multiaddress-amount-compactu128 \"Direct link to transferapprovedid-compactu32-owner-multiaddress-destination-multiaddress-amount-compactu128\")\n\n*   **interface**: `api.tx.assets.transferApproved`\n*   **summary**: See \\[`Pallet::transfer_approved`\\].\n\n### transferKeepAlive(id: `Compact<u32>`, target: `MultiAddress`, amount: `Compact<u128>`)[\u200b](#transferkeepaliveid-compactu32-target-multiaddress-amount-compactu128 \"Direct link to transferkeepaliveid-compactu32-target-multiaddress-amount-compactu128\")\n\n*   **interface**: `api.tx.assets.transferKeepAlive`\n*   **summary**: See \\[`Pallet::transfer_keep_alive`\\].\n\n### transferOwnership(id: `Compact<u32>`, owner: `MultiAddress`)[\u200b](#transferownershipid-compactu32-owner-multiaddress \"Direct link to transferownershipid-compactu32-owner-multiaddress\")\n\n*   **interface**: `api.tx.assets.transferOwnership`\n*   **summary**: See \\[`Pallet::transfer_ownership`\\].\n\n* * *\n\nbabe[\u200b](#babe \"Direct link to babe\")\n\n-------------------------------------\n\n### planConfigChange(config: `SpConsensusBabeDigestsNextConfigDescriptor`)[\u200b](#planconfigchangeconfig-spconsensusbabedigestsnextconfigdescriptor \"Direct link to planconfigchangeconfig-spconsensusbabedigestsnextconfigdescriptor\")\n\n*   **interface**: `api.tx.babe.planConfigChange`\n*   **summary**: See \\[`Pallet::plan_config_change`\\].\n\n### reportEquivocation(equivocation\\_proof: `SpConsensusSlotsEquivocationProof`, key\\_owner\\_proof: `SpSessionMembershipProof`)[\u200b](#reportequivocationequivocation_proof-spconsensusslotsequivocationproof-key_owner_proof-spsessionmembershipproof \"Direct link to reportequivocationequivocation_proof-spconsensusslotsequivocationproof-key_owner_proof-spsessionmembershipproof\")\n\n*   **interface**: `api.tx.babe.reportEquivocation`\n*   **summary**: See \\[`Pallet::report_equivocation`\\].\n\n### reportEquivocationUnsigned(equivocation\\_proof: `SpConsensusSlotsEquivocationProof`, key\\_owner\\_proof: `SpSessionMembershipProof`)[\u200b](#reportequivocationunsignedequivocation_proof-spconsensusslotsequivocationproof-key_owner_proof-spsessionmembershipproof \"Direct link to reportequivocationunsignedequivocation_proof-spconsensusslotsequivocationproof-key_owner_proof-spsessionmembershipproof\")\n\n*   **interface**: `api.tx.babe.reportEquivocationUnsigned`\n*   **summary**: See \\[`Pallet::report_equivocation_unsigned`\\].\n\n* * *\n\nbalances[\u200b](#balances \"Direct link to balances\")\n\n-------------------------------------------------\n\n### forceSetBalance(who: `MultiAddress`, new\\_free: `Compact<u128>`)[\u200b](#forcesetbalancewho-multiaddress-new_free-compactu128 \"Direct link to forcesetbalancewho-multiaddress-new_free-compactu128\")\n\n*   **interface**: `api.tx.balances.forceSetBalance`\n*   **summary**: See \\[`Pallet::force_set_balance`\\].\n\n### forceTransfer(source: `MultiAddress`, dest: `MultiAddress`, value: `Compact<u128>`)[\u200b](#forcetransfersource-multiaddress-dest-multiaddress-value-compactu128 \"Direct link to forcetransfersource-multiaddress-dest-multiaddress-value-compactu128\")\n\n*   **interface**: `api.tx.balances.forceTransfer`\n*   **summary**: See \\[`Pallet::force_transfer`\\].\n\n### forceUnreserve(who: `MultiAddress`, amount: `u128`)[\u200b](#forceunreservewho-multiaddress-amount-u128 \"Direct link to forceunreservewho-multiaddress-amount-u128\")\n\n*   **interface**: `api.tx.balances.forceUnreserve`\n*   **summary**: See \\[`Pallet::force_unreserve`\\].\n\n### transferAll(dest: `MultiAddress`, keep\\_alive: `bool`)[\u200b](#transferalldest-multiaddress-keep_alive-bool \"Direct link to transferalldest-multiaddress-keep_alive-bool\")\n\n*   **interface**: `api.tx.balances.transferAll`\n*   **summary**: See \\[`Pallet::transfer_all`\\].\n\n### transferAllowDeath(dest: `MultiAddress`, value: `Compact<u128>`)[\u200b](#transferallowdeathdest-multiaddress-value-compactu128 \"Direct link to transferallowdeathdest-multiaddress-value-compactu128\")\n\n*   **interface**: `api.tx.balances.transferAllowDeath`\n*   **summary**: See \\[`Pallet::transfer_allow_death`\\].\n\n### transferKeepAlive(dest: `MultiAddress`, value: `Compact<u128>`)[\u200b](#transferkeepalivedest-multiaddress-value-compactu128 \"Direct link to transferkeepalivedest-multiaddress-value-compactu128\")\n\n*   **interface**: `api.tx.balances.transferKeepAlive`\n*   **summary**: See \\[`Pallet::transfer_keep_alive`\\].\n\n### upgradeAccounts(who: `Vec<AccountId32>`)[\u200b](#upgradeaccountswho-vecaccountid32 \"Direct link to upgradeaccountswho-vecaccountid32\")\n\n*   **interface**: `api.tx.balances.upgradeAccounts`\n*   **summary**: See \\[`Pallet::upgrade_accounts`\\].\n\n* * *\n\nbounties[\u200b](#bounties \"Direct link to bounties\")\n\n-------------------------------------------------\n\n### acceptCurator(bounty\\_id: `Compact<u32>`)[\u200b](#acceptcuratorbounty_id-compactu32 \"Direct link to acceptcuratorbounty_id-compactu32\")\n\n*   **interface**: `api.tx.bounties.acceptCurator`\n*   **summary**: See \\[`Pallet::accept_curator`\\].\n\n### approveBounty(bounty\\_id: `Compact<u32>`)[\u200b](#approvebountybounty_id-compactu32 \"Direct link to approvebountybounty_id-compactu32\")\n\n*   **interface**: `api.tx.bounties.approveBounty`\n*   **summary**: See \\[`Pallet::approve_bounty`\\].\n\n### awardBounty(bounty\\_id: `Compact<u32>`, beneficiary: `MultiAddress`)[\u200b](#awardbountybounty_id-compactu32-beneficiary-multiaddress \"Direct link to awardbountybounty_id-compactu32-beneficiary-multiaddress\")\n\n*   **interface**: `api.tx.bounties.awardBounty`\n*   **summary**: See \\[`Pallet::award_bounty`\\].\n\n### claimBounty(bounty\\_id: `Compact<u32>`)[\u200b](#claimbountybounty_id-compactu32 \"Direct link to claimbountybounty_id-compactu32\")\n\n*   **interface**: `api.tx.bounties.claimBounty`\n*   **summary**: See \\[`Pallet::claim_bounty`\\].\n\n### closeBounty(bounty\\_id: `Compact<u32>`)[\u200b](#closebountybounty_id-compactu32 \"Direct link to closebountybounty_id-compactu32\")\n\n*   **interface**: `api.tx.bounties.closeBounty`\n*   **summary**: See \\[`Pallet::close_bounty`\\].\n\n### extendBountyExpiry(bounty\\_id: `Compact<u32>`, remark: `Bytes`)[\u200b](#extendbountyexpirybounty_id-compactu32-remark-bytes \"Direct link to extendbountyexpirybounty_id-compactu32-remark-bytes\")\n\n*   **interface**: `api.tx.bounties.extendBountyExpiry`\n*   **summary**: See \\[`Pallet::extend_bounty_expiry`\\].\n\n### proposeBounty(value: `Compact<u128>`, description: `Bytes`)[\u200b](#proposebountyvalue-compactu128-description-bytes \"Direct link to proposebountyvalue-compactu128-description-bytes\")\n\n*   **interface**: `api.tx.bounties.proposeBounty`\n*   **summary**: See \\[`Pallet::propose_bounty`\\].\n\n### proposeCurator(bounty\\_id: `Compact<u32>`, curator: `MultiAddress`, fee: `Compact<u128>`)[\u200b](#proposecuratorbounty_id-compactu32-curator-multiaddress-fee-compactu128 \"Direct link to proposecuratorbounty_id-compactu32-curator-multiaddress-fee-compactu128\")\n\n*   **interface**: `api.tx.bounties.proposeCurator`\n*   **summary**: See \\[`Pallet::propose_curator`\\].\n\n### unassignCurator(bounty\\_id: `Compact<u32>`)[\u200b](#unassigncuratorbounty_id-compactu32 \"Direct link to unassigncuratorbounty_id-compactu32\")\n\n*   **interface**: `api.tx.bounties.unassignCurator`\n*   **summary**: See \\[`Pallet::unassign_curator`\\].\n\n* * *\n\nbroker[\u200b](#broker \"Direct link to broker\")\n\n-------------------------------------------\n\n### assign(region\\_id: `PalletBrokerRegionId`, task: `u32`, finality: `PalletBrokerFinality`)[\u200b](#assignregion_id-palletbrokerregionid-task-u32-finality-palletbrokerfinality \"Direct link to assignregion_id-palletbrokerregionid-task-u32-finality-palletbrokerfinality\")\n\n*   **interface**: `api.tx.broker.assign`\n*   **summary**: See \\[`Pallet::assign`\\].\n\n### claimRevenue(region\\_id: `PalletBrokerRegionId`, max\\_timeslices: `u32`)[\u200b](#claimrevenueregion_id-palletbrokerregionid-max_timeslices-u32 \"Direct link to claimrevenueregion_id-palletbrokerregionid-max_timeslices-u32\")\n\n*   **interface**: `api.tx.broker.claimRevenue`\n*   **summary**: See \\[`Pallet::claim_revenue`\\].\n\n### configure(config: `PalletBrokerConfigRecord`)[\u200b](#configureconfig-palletbrokerconfigrecord \"Direct link to configureconfig-palletbrokerconfigrecord\")\n\n*   **interface**: `api.tx.broker.configure`\n*   **summary**: See \\[`Pallet::configure`\\].\n\n### dropContribution(region\\_id: `PalletBrokerRegionId`)[\u200b](#dropcontributionregion_id-palletbrokerregionid \"Direct link to dropcontributionregion_id-palletbrokerregionid\")\n\n*   **interface**: `api.tx.broker.dropContribution`\n*   **summary**: See \\[`Pallet::drop_contribution`\\].\n\n### dropHistory(when: `u32`)[\u200b](#drophistorywhen-u32 \"Direct link to drophistorywhen-u32\")\n\n*   **interface**: `api.tx.broker.dropHistory`\n*   **summary**: See \\[`Pallet::drop_history`\\].\n\n### dropRegion(region\\_id: `PalletBrokerRegionId`)[\u200b](#dropregionregion_id-palletbrokerregionid \"Direct link to dropregionregion_id-palletbrokerregionid\")\n\n*   **interface**: `api.tx.broker.dropRegion`\n*   **summary**: See \\[`Pallet::drop_region`\\].\n\n### dropRenewal(core: `u16`, when: `u32`)[\u200b](#droprenewalcore-u16-when-u32 \"Direct link to droprenewalcore-u16-when-u32\")\n\n*   **interface**: `api.tx.broker.dropRenewal`\n*   **summary**: See \\[`Pallet::drop_renewal`\\].\n\n### interlace(region\\_id: `PalletBrokerRegionId`, pivot: `PalletBrokerCoreMask`)[\u200b](#interlaceregion_id-palletbrokerregionid-pivot-palletbrokercoremask \"Direct link to interlaceregion_id-palletbrokerregionid-pivot-palletbrokercoremask\")\n\n*   **interface**: `api.tx.broker.interlace`\n*   **summary**: See \\[`Pallet::interlace`\\].\n\n### partition(region\\_id: `PalletBrokerRegionId`, pivot: `u32`)[\u200b](#partitionregion_id-palletbrokerregionid-pivot-u32 \"Direct link to partitionregion_id-palletbrokerregionid-pivot-u32\")\n\n*   **interface**: `api.tx.broker.partition`\n*   **summary**: See \\[`Pallet::partition`\\].\n\n### pool(region\\_id: `PalletBrokerRegionId`, payee: `AccountId32`, finality: `PalletBrokerFinality`)[\u200b](#poolregion_id-palletbrokerregionid-payee-accountid32-finality-palletbrokerfinality \"Direct link to poolregion_id-palletbrokerregionid-payee-accountid32-finality-palletbrokerfinality\")\n\n*   **interface**: `api.tx.broker.pool`\n*   **summary**: See \\[`Pallet::pool`\\].\n\n### purchase(price\\_limit: `u128`)[\u200b](#purchaseprice_limit-u128 \"Direct link to purchaseprice_limit-u128\")\n\n*   **interface**: `api.tx.broker.purchase`\n*   **summary**: See \\[`Pallet::purchase`\\].\n\n### purchaseCredit(amount: `u128`, beneficiary: `AccountId32`)[\u200b](#purchasecreditamount-u128-beneficiary-accountid32 \"Direct link to purchasecreditamount-u128-beneficiary-accountid32\")\n\n*   **interface**: `api.tx.broker.purchaseCredit`\n*   **summary**: See \\[`Pallet::purchase_credit`\\].\n\n### renew(core: `u16`)[\u200b](#renewcore-u16 \"Direct link to renewcore-u16\")\n\n*   **interface**: `api.tx.broker.renew`\n*   **summary**: See \\[`Pallet::renew`\\].\n\n### requestCoreCount(core\\_count: `u16`)[\u200b](#requestcorecountcore_count-u16 \"Direct link to requestcorecountcore_count-u16\")\n\n*   **interface**: `api.tx.broker.requestCoreCount`\n*   **summary**: See \\[`Pallet::request_core_count`\\].\n\n### reserve(workload: `Vec<PalletBrokerScheduleItem>`)[\u200b](#reserveworkload-vecpalletbrokerscheduleitem \"Direct link to reserveworkload-vecpalletbrokerscheduleitem\")\n\n*   **interface**: `api.tx.broker.reserve`\n*   **summary**: See \\[`Pallet::reserve`\\].\n\n### setLease(task: `u32`, until: `u32`)[\u200b](#setleasetask-u32-until-u32 \"Direct link to setleasetask-u32-until-u32\")\n\n*   **interface**: `api.tx.broker.setLease`\n*   **summary**: See \\[`Pallet::set_lease`\\].\n\n### startSales(initial\\_price: `u128`, core\\_count: `u16`)[\u200b](#startsalesinitial_price-u128-core_count-u16 \"Direct link to startsalesinitial_price-u128-core_count-u16\")\n\n*   **interface**: `api.tx.broker.startSales`\n*   **summary**: See \\[`Pallet::start_sales`\\].\n\n### transfer(region\\_id: `PalletBrokerRegionId`, new\\_owner: `AccountId32`)[\u200b](#transferregion_id-palletbrokerregionid-new_owner-accountid32 \"Direct link to transferregion_id-palletbrokerregionid-new_owner-accountid32\")\n\n*   **interface**: `api.tx.broker.transfer`\n*   **summary**: See \\[`Pallet::transfer`\\].\n\n### unreserve(item\\_index: `u32`)[\u200b](#unreserveitem_index-u32 \"Direct link to unreserveitem_index-u32\")\n\n*   **interface**: `api.tx.broker.unreserve`\n*   **summary**: See \\[`Pallet::unreserve`\\].\n\n* * *\n\nchildBounties[\u200b](#childbounties \"Direct link to childBounties\")\n\n----------------------------------------------------------------\n\n### acceptCurator(parent\\_bounty\\_id: `Compact<u32>`, child\\_bounty\\_id: `Compact<u32>`)[\u200b](#acceptcuratorparent_bounty_id-compactu32-child_bounty_id-compactu32 \"Direct link to acceptcuratorparent_bounty_id-compactu32-child_bounty_id-compactu32\")\n\n*   **interface**: `api.tx.childBounties.acceptCurator`\n*   **summary**: See \\[`Pallet::accept_curator`\\].\n\n### addChildBounty(parent\\_bounty\\_id: `Compact<u32>`, value: `Compact<u128>`, description: `Bytes`)[\u200b](#addchildbountyparent_bounty_id-compactu32-value-compactu128-description-bytes \"Direct link to addchildbountyparent_bounty_id-compactu32-value-compactu128-description-bytes\")\n\n*   **interface**: `api.tx.childBounties.addChildBounty`\n*   **summary**: See \\[`Pallet::add_child_bounty`\\].\n\n### awardChildBounty(parent\\_bounty\\_id: `Compact<u32>`, child\\_bounty\\_id: `Compact<u32>`, beneficiary: `MultiAddress`)[\u200b](#awardchildbountyparent_bounty_id-compactu32-child_bounty_id-compactu32-beneficiary-multiaddress \"Direct link to awardchildbountyparent_bounty_id-compactu32-child_bounty_id-compactu32-beneficiary-multiaddress\")\n\n*   **interface**: `api.tx.childBounties.awardChildBounty`\n*   **summary**: See \\[`Pallet::award_child_bounty`\\].\n\n### claimChildBounty(parent\\_bounty\\_id: `Compact<u32>`, child\\_bounty\\_id: `Compact<u32>`)[\u200b](#claimchildbountyparent_bounty_id-compactu32-child_bounty_id-compactu32 \"Direct link to claimchildbountyparent_bounty_id-compactu32-child_bounty_id-compactu32\")\n\n*   **interface**: `api.tx.childBounties.claimChildBounty`\n*   **summary**: See \\[`Pallet::claim_child_bounty`\\].\n\n### closeChildBounty(parent\\_bounty\\_id: `Compact<u32>`, child\\_bounty\\_id: `Compact<u32>`)[\u200b](#closechildbountyparent_bounty_id-compactu32-child_bounty_id-compactu32 \"Direct link to closechildbountyparent_bounty_id-compactu32-child_bounty_id-compactu32\")\n\n*   **interface**: `api.tx.childBounties.closeChildBounty`\n*   **summary**: See \\[`Pallet::close_child_bounty`\\].\n\n### proposeCurator(parent\\_bounty\\_id: `Compact<u32>`, child\\_bounty\\_id: `Compact<u32>`, curator: `MultiAddress`, fee: `Compact<u128>`)[\u200b](#proposecuratorparent_bounty_id-compactu32-child_bounty_id-compactu32-curator-multiaddress-fee-compactu128 \"Direct link to proposecuratorparent_bounty_id-compactu32-child_bounty_id-compactu32-curator-multiaddress-fee-compactu128\")\n\n*   **interface**: `api.tx.childBounties.proposeCurator`\n*   **summary**: See \\[`Pallet::propose_curator`\\].\n\n### unassignCurator(parent\\_bounty\\_id: `Compact<u32>`, child\\_bounty\\_id: `Compact<u32>`)[\u200b](#unassigncuratorparent_bounty_id-compactu32-child_bounty_id-compactu32 \"Direct link to unassigncuratorparent_bounty_id-compactu32-child_bounty_id-compactu32\")\n\n*   **interface**: `api.tx.childBounties.unassignCurator`\n*   **summary**: See \\[`Pallet::unassign_curator`\\].\n\n* * *\n\ncontracts[\u200b](#contracts \"Direct link to contracts\")\n\n----------------------------------------------------\n\n### call(dest: `MultiAddress`, value: `Compact<u128>`, gas\\_limit: `SpWeightsWeightV2Weight`, storage\\_deposit\\_limit: `Option<Compact<u128>>`, data: `Bytes`)[\u200b](#calldest-multiaddress-value-compactu128-gas_limit-spweightsweightv2weight-storage_deposit_limit-optioncompactu128-data-bytes \"Direct link to calldest-multiaddress-value-compactu128-gas_limit-spweightsweightv2weight-storage_deposit_limit-optioncompactu128-data-bytes\")\n\n*   **interface**: `api.tx.contracts.call`\n*   **summary**: See \\[`Pallet::call`\\].\n\n### callOldWeight(dest: `MultiAddress`, value: `Compact<u128>`, gas\\_limit: `Compact<u64>`, storage\\_deposit\\_limit: `Option<Compact<u128>>`, data: `Bytes`)[\u200b](#calloldweightdest-multiaddress-value-compactu128-gas_limit-compactu64-storage_deposit_limit-optioncompactu128-data-bytes \"Direct link to calloldweightdest-multiaddress-value-compactu128-gas_limit-compactu64-storage_deposit_limit-optioncompactu128-data-bytes\")\n\n*   **interface**: `api.tx.contracts.callOldWeight`\n*   **summary**: See \\[`Pallet::call_old_weight`\\].\n\n### instantiate(value: `Compact<u128>`, gas\\_limit: `SpWeightsWeightV2Weight`, storage\\_deposit\\_limit: `Option<Compact<u128>>`, code\\_hash: `H256`, data: `Bytes`, salt: `Bytes`)[\u200b](#instantiatevalue-compactu128-gas_limit-spweightsweightv2weight-storage_deposit_limit-optioncompactu128-code_hash-h256-data-bytes-salt-bytes \"Direct link to instantiatevalue-compactu128-gas_limit-spweightsweightv2weight-storage_deposit_limit-optioncompactu128-code_hash-h256-data-bytes-salt-bytes\")\n\n*   **interface**: `api.tx.contracts.instantiate`\n*   **summary**: See \\[`Pallet::instantiate`\\].\n\n### instantiateOldWeight(value: `Compact<u128>`, gas\\_limit: `Compact<u64>`, storage\\_deposit\\_limit: `Option<Compact<u128>>`, code\\_hash: `H256`, data: `Bytes`, salt: `Bytes`)[\u200b](#instantiateoldweightvalue-compactu128-gas_limit-compactu64-storage_deposit_limit-optioncompactu128-code_hash-h256-data-bytes-salt-bytes \"Direct link to instantiateoldweightvalue-compactu128-gas_limit-compactu64-storage_deposit_limit-optioncompactu128-code_hash-h256-data-bytes-salt-bytes\")\n\n*   **interface**: `api.tx.contracts.instantiateOldWeight`\n*   **summary**: See \\[`Pallet::instantiate_old_weight`\\].\n\n### instantiateWithCode(value: `Compact<u128>`, gas\\_limit: `SpWeightsWeightV2Weight`, storage\\_deposit\\_limit: `Option<Compact<u128>>`, code: `Bytes`, data: `Bytes`, salt: `Bytes`)[\u200b](#instantiatewithcodevalue-compactu128-gas_limit-spweightsweightv2weight-storage_deposit_limit-optioncompactu128-code-bytes-data-bytes-salt-bytes \"Direct link to instantiatewithcodevalue-compactu128-gas_limit-spweightsweightv2weight-storage_deposit_limit-optioncompactu128-code-bytes-data-bytes-salt-bytes\")\n\n*   **interface**: `api.tx.contracts.instantiateWithCode`\n*   **summary**: See \\[`Pallet::instantiate_with_code`\\].\n\n### instantiateWithCodeOldWeight(value: `Compact<u128>`, gas\\_limit: `Compact<u64>`, storage\\_deposit\\_limit: `Option<Compact<u128>>`, code: `Bytes`, data: `Bytes`, salt: `Bytes`)[\u200b](#instantiatewithcodeoldweightvalue-compactu128-gas_limit-compactu64-storage_deposit_limit-optioncompactu128-code-bytes-data-bytes-salt-bytes \"Direct link to instantiatewithcodeoldweightvalue-compactu128-gas_limit-compactu64-storage_deposit_limit-optioncompactu128-code-bytes-data-bytes-salt-bytes\")\n\n*   **interface**: `api.tx.contracts.instantiateWithCodeOldWeight`\n*   **summary**: See \\[`Pallet::instantiate_with_code_old_weight`\\].\n\n### migrate(weight\\_limit: `SpWeightsWeightV2Weight`)[\u200b](#migrateweight_limit-spweightsweightv2weight \"Direct link to migrateweight_limit-spweightsweightv2weight\")\n\n*   **interface**: `api.tx.contracts.migrate`\n*   **summary**: See \\[`Pallet::migrate`\\].\n\n### removeCode(code\\_hash: `H256`)[\u200b](#removecodecode_hash-h256 \"Direct link to removecodecode_hash-h256\")\n\n*   **interface**: `api.tx.contracts.removeCode`\n*   **summary**: See \\[`Pallet::remove_code`\\].\n\n### setCode(dest: `MultiAddress`, code\\_hash: `H256`)[\u200b](#setcodedest-multiaddress-code_hash-h256 \"Direct link to setcodedest-multiaddress-code_hash-h256\")\n\n*   **interface**: `api.tx.contracts.setCode`\n*   **summary**: See \\[`Pallet::set_code`\\].\n\n### uploadCode(code: `Bytes`, storage\\_deposit\\_limit: `Option<Compact<u128>>`, determinism: `PalletContractsWasmDeterminism`)[\u200b](#uploadcodecode-bytes-storage_deposit_limit-optioncompactu128-determinism-palletcontractswasmdeterminism \"Direct link to uploadcodecode-bytes-storage_deposit_limit-optioncompactu128-determinism-palletcontractswasmdeterminism\")\n\n*   **interface**: `api.tx.contracts.uploadCode`\n*   **summary**: See \\[`Pallet::upload_code`\\].\n\n* * *\n\nconvictionVoting[\u200b](#convictionvoting \"Direct link to convictionVoting\")\n\n-------------------------------------------------------------------------\n\n### delegate(class: `u16`, to: `MultiAddress`, conviction: `PalletConvictionVotingConviction`, balance: `u128`)[\u200b](#delegateclass-u16-to-multiaddress-conviction-palletconvictionvotingconviction-balance-u128 \"Direct link to delegateclass-u16-to-multiaddress-conviction-palletconvictionvotingconviction-balance-u128\")\n\n*   **interface**: `api.tx.convictionVoting.delegate`\n*   **summary**: See \\[`Pallet::delegate`\\].\n\n### removeOtherVote(target: `MultiAddress`, class: `u16`, index: `u32`)[\u200b](#removeothervotetarget-multiaddress-class-u16-index-u32 \"Direct link to removeothervotetarget-multiaddress-class-u16-index-u32\")\n\n*   **interface**: `api.tx.convictionVoting.removeOtherVote`\n*   **summary**: See \\[`Pallet::remove_other_vote`\\].\n\n### removeVote(class: `Option<u16>`, index: `u32`)[\u200b](#removevoteclass-optionu16-index-u32 \"Direct link to removevoteclass-optionu16-index-u32\")\n\n*   **interface**: `api.tx.convictionVoting.removeVote`\n*   **summary**: See \\[`Pallet::remove_vote`\\].\n\n### undelegate(class: `u16`)[\u200b](#undelegateclass-u16 \"Direct link to undelegateclass-u16\")\n\n*   **interface**: `api.tx.convictionVoting.undelegate`\n*   **summary**: See \\[`Pallet::undelegate`\\].\n\n### unlock(class: `u16`, target: `MultiAddress`)[\u200b](#unlockclass-u16-target-multiaddress \"Direct link to unlockclass-u16-target-multiaddress\")\n\n*   **interface**: `api.tx.convictionVoting.unlock`\n*   **summary**: See \\[`Pallet::unlock`\\].\n\n### vote(poll\\_index: `Compact<u32>`, vote: `PalletConvictionVotingVoteAccountVote`)[\u200b](#votepoll_index-compactu32-vote-palletconvictionvotingvoteaccountvote \"Direct link to votepoll_index-compactu32-vote-palletconvictionvotingvoteaccountvote\")\n\n*   **interface**: `api.tx.convictionVoting.vote`\n*   **summary**: See \\[`Pallet::vote`\\].\n\n* * *\n\ncoreFellowship[\u200b](#corefellowship \"Direct link to coreFellowship\")\n\n-------------------------------------------------------------------\n\n### approve(who: `AccountId32`, at\\_rank: `u16`)[\u200b](#approvewho-accountid32-at_rank-u16 \"Direct link to approvewho-accountid32-at_rank-u16\")\n\n*   **interface**: `api.tx.coreFellowship.approve`\n*   **summary**: See \\[`Pallet::approve`\\].\n\n### bump(who: `AccountId32`)[\u200b](#bumpwho-accountid32 \"Direct link to bumpwho-accountid32\")\n\n*   **interface**: `api.tx.coreFellowship.bump`\n*   **summary**: See \\[`Pallet::bump`\\].\n\n### import()[\u200b](#import \"Direct link to import()\")\n\n*   **interface**: `api.tx.coreFellowship.import`\n*   **summary**: See \\[`Pallet::import`\\].\n\n### induct(who: `AccountId32`)[\u200b](#inductwho-accountid32 \"Direct link to inductwho-accountid32\")\n\n*   **interface**: `api.tx.coreFellowship.induct`\n*   **summary**: See \\[`Pallet::induct`\\].\n\n### offboard(who: `AccountId32`)[\u200b](#offboardwho-accountid32 \"Direct link to offboardwho-accountid32\")\n\n*   **interface**: `api.tx.coreFellowship.offboard`\n*   **summary**: See \\[`Pallet::offboard`\\].\n\n### promote(who: `AccountId32`, to\\_rank: `u16`)[\u200b](#promotewho-accountid32-to_rank-u16 \"Direct link to promotewho-accountid32-to_rank-u16\")\n\n*   **interface**: `api.tx.coreFellowship.promote`\n*   **summary**: See \\[`Pallet::promote`\\].\n\n### setActive(is\\_active: `bool`)[\u200b](#setactiveis_active-bool \"Direct link to setactiveis_active-bool\")\n\n*   **interface**: `api.tx.coreFellowship.setActive`\n*   **summary**: See \\[`Pallet::set_active`\\].\n\n### setParams(params: `PalletCoreFellowshipParamsType`)[\u200b](#setparamsparams-palletcorefellowshipparamstype \"Direct link to setparamsparams-palletcorefellowshipparamstype\")\n\n*   **interface**: `api.tx.coreFellowship.setParams`\n*   **summary**: See \\[`Pallet::set_params`\\].\n\n### submitEvidence(wish: `PalletCoreFellowshipWish`, evidence: `Bytes`)[\u200b](#submitevidencewish-palletcorefellowshipwish-evidence-bytes \"Direct link to submitevidencewish-palletcorefellowshipwish-evidence-bytes\")\n\n*   **interface**: `api.tx.coreFellowship.submitEvidence`\n*   **summary**: See \\[`Pallet::submit_evidence`\\].\n\n* * *\n\ncouncil[\u200b](#council \"Direct link to council\")\n\n----------------------------------------------\n\n### close(proposal\\_hash: `H256`, index: `Compact<u32>`, proposal\\_weight\\_bound: `SpWeightsWeightV2Weight`, length\\_bound: `Compact<u32>`)[\u200b](#closeproposal_hash-h256-index-compactu32-proposal_weight_bound-spweightsweightv2weight-length_bound-compactu32-2 \"Direct link to closeproposal_hash-h256-index-compactu32-proposal_weight_bound-spweightsweightv2weight-length_bound-compactu32-2\")\n\n*   **interface**: `api.tx.council.close`\n*   **summary**: See \\[`Pallet::close`\\].\n\n### disapproveProposal(proposal\\_hash: `H256`)[\u200b](#disapproveproposalproposal_hash-h256-1 \"Direct link to disapproveproposalproposal_hash-h256-1\")\n\n*   **interface**: `api.tx.council.disapproveProposal`\n*   **summary**: See \\[`Pallet::disapprove_proposal`\\].\n\n### execute(proposal: `Call`, length\\_bound: `Compact<u32>`)[\u200b](#executeproposal-call-length_bound-compactu32-1 \"Direct link to executeproposal-call-length_bound-compactu32-1\")\n\n*   **interface**: `api.tx.council.execute`\n*   **summary**: See \\[`Pallet::execute`\\].\n\n### propose(threshold: `Compact<u32>`, proposal: `Call`, length\\_bound: `Compact<u32>`)[\u200b](#proposethreshold-compactu32-proposal-call-length_bound-compactu32-2 \"Direct link to proposethreshold-compactu32-proposal-call-length_bound-compactu32-2\")\n\n*   **interface**: `api.tx.council.propose`\n*   **summary**: See \\[`Pallet::propose`\\].\n\n### setMembers(new\\_members: `Vec<AccountId32>`, prime: `Option<AccountId32>`, old\\_count: `u32`)[\u200b](#setmembersnew_members-vecaccountid32-prime-optionaccountid32-old_count-u32-1 \"Direct link to setmembersnew_members-vecaccountid32-prime-optionaccountid32-old_count-u32-1\")\n\n*   **interface**: `api.tx.council.setMembers`\n*   **summary**: See \\[`Pallet::set_members`\\].\n\n### vote(proposal: `H256`, index: `Compact<u32>`, approve: `bool`)[\u200b](#voteproposal-h256-index-compactu32-approve-bool-2 \"Direct link to voteproposal-h256-index-compactu32-approve-bool-2\")\n\n*   **interface**: `api.tx.council.vote`\n*   **summary**: See \\[`Pallet::vote`\\].\n\n* * *\n\ndemocracy[\u200b](#democracy \"Direct link to democracy\")\n\n----------------------------------------------------\n\n### blacklist(proposal\\_hash: `H256`, maybe\\_ref\\_index: `Option<u32>`)[\u200b](#blacklistproposal_hash-h256-maybe_ref_index-optionu32 \"Direct link to blacklistproposal_hash-h256-maybe_ref_index-optionu32\")\n\n*   **interface**: `api.tx.democracy.blacklist`\n*   **summary**: See \\[`Pallet::blacklist`\\].\n\n### cancelProposal(prop\\_index: `Compact<u32>`)[\u200b](#cancelproposalprop_index-compactu32 \"Direct link to cancelproposalprop_index-compactu32\")\n\n*   **interface**: `api.tx.democracy.cancelProposal`\n*   **summary**: See \\[`Pallet::cancel_proposal`\\].\n\n### cancelReferendum(ref\\_index: `Compact<u32>`)[\u200b](#cancelreferendumref_index-compactu32 \"Direct link to cancelreferendumref_index-compactu32\")\n\n*   **interface**: `api.tx.democracy.cancelReferendum`\n*   **summary**: See \\[`Pallet::cancel_referendum`\\].\n\n### clearPublicProposals()[\u200b](#clearpublicproposals \"Direct link to clearPublicProposals()\")\n\n*   **interface**: `api.tx.democracy.clearPublicProposals`\n*   **summary**: See \\[`Pallet::clear_public_proposals`\\].\n\n### delegate(to: `MultiAddress`, conviction: `PalletDemocracyConviction`, balance: `u128`)[\u200b](#delegateto-multiaddress-conviction-palletdemocracyconviction-balance-u128 \"Direct link to delegateto-multiaddress-conviction-palletdemocracyconviction-balance-u128\")\n\n*   **interface**: `api.tx.democracy.delegate`\n*   **summary**: See \\[`Pallet::delegate`\\].\n\n### emergencyCancel(ref\\_index: `u32`)[\u200b](#emergencycancelref_index-u32 \"Direct link to emergencycancelref_index-u32\")\n\n*   **interface**: `api.tx.democracy.emergencyCancel`\n*   **summary**: See \\[`Pallet::emergency_cancel`\\].\n\n### externalPropose(proposal: `FrameSupportPreimagesBounded`)[\u200b](#externalproposeproposal-framesupportpreimagesbounded \"Direct link to externalproposeproposal-framesupportpreimagesbounded\")\n\n*   **interface**: `api.tx.democracy.externalPropose`\n*   **summary**: See \\[`Pallet::external_propose`\\].\n\n### externalProposeDefault(proposal: `FrameSupportPreimagesBounded`)[\u200b](#externalproposedefaultproposal-framesupportpreimagesbounded \"Direct link to externalproposedefaultproposal-framesupportpreimagesbounded\")\n\n*   **interface**: `api.tx.democracy.externalProposeDefault`\n*   **summary**: See \\[`Pallet::external_propose_default`\\].\n\n### externalProposeMajority(proposal: `FrameSupportPreimagesBounded`)[\u200b](#externalproposemajorityproposal-framesupportpreimagesbounded \"Direct link to externalproposemajorityproposal-framesupportpreimagesbounded\")\n\n*   **interface**: `api.tx.democracy.externalProposeMajority`\n*   **summary**: See \\[`Pallet::external_propose_majority`\\].\n\n### fastTrack(proposal\\_hash: `H256`, voting\\_period: `u32`, delay: `u32`)[\u200b](#fasttrackproposal_hash-h256-voting_period-u32-delay-u32 \"Direct link to fasttrackproposal_hash-h256-voting_period-u32-delay-u32\")\n\n*   **interface**: `api.tx.democracy.fastTrack`\n*   **summary**: See \\[`Pallet::fast_track`\\].\n\n### propose(proposal: `FrameSupportPreimagesBounded`, value: `Compact<u128>`)[\u200b](#proposeproposal-framesupportpreimagesbounded-value-compactu128 \"Direct link to proposeproposal-framesupportpreimagesbounded-value-compactu128\")\n\n*   **interface**: `api.tx.democracy.propose`\n*   **summary**: See \\[`Pallet::propose`\\].\n\n### removeOtherVote(target: `MultiAddress`, index: `u32`)[\u200b](#removeothervotetarget-multiaddress-index-u32 \"Direct link to removeothervotetarget-multiaddress-index-u32\")\n\n*   **interface**: `api.tx.democracy.removeOtherVote`\n*   **summary**: See \\[`Pallet::remove_other_vote`\\].\n\n### removeVote(index: `u32`)[\u200b](#removevoteindex-u32 \"Direct link to removevoteindex-u32\")\n\n*   **interface**: `api.tx.democracy.removeVote`\n*   **summary**: See \\[`Pallet::remove_vote`\\].\n\n### second(proposal: `Compact<u32>`)[\u200b](#secondproposal-compactu32 \"Direct link to secondproposal-compactu32\")\n\n*   **interface**: `api.tx.democracy.second`\n*   **summary**: See \\[`Pallet::second`\\].\n\n### setMetadata(owner: `PalletDemocracyMetadataOwner`, maybe\\_hash: `Option<H256>`)[\u200b](#setmetadataowner-palletdemocracymetadataowner-maybe_hash-optionh256 \"Direct link to setmetadataowner-palletdemocracymetadataowner-maybe_hash-optionh256\")\n\n*   **interface**: `api.tx.democracy.setMetadata`\n*   **summary**: See \\[`Pallet::set_metadata`\\].\n\n### undelegate()[\u200b](#undelegate \"Direct link to undelegate()\")\n\n*   **interface**: `api.tx.democracy.undelegate`\n*   **summary**: See \\[`Pallet::undelegate`\\].\n\n### unlock(target: `MultiAddress`)[\u200b](#unlocktarget-multiaddress \"Direct link to unlocktarget-multiaddress\")\n\n*   **interface**: `api.tx.democracy.unlock`\n*   **summary**: See \\[`Pallet::unlock`\\].\n\n### vetoExternal(proposal\\_hash: `H256`)[\u200b](#vetoexternalproposal_hash-h256 \"Direct link to vetoexternalproposal_hash-h256\")\n\n*   **interface**: `api.tx.democracy.vetoExternal`\n*   **summary**: See \\[`Pallet::veto_external`\\].\n\n### vote(ref\\_index: `Compact<u32>`, vote: `PalletDemocracyVoteAccountVote`)[\u200b](#voteref_index-compactu32-vote-palletdemocracyvoteaccountvote \"Direct link to voteref_index-compactu32-vote-palletdemocracyvoteaccountvote\")\n\n*   **interface**: `api.tx.democracy.vote`\n*   **summary**: See \\[`Pallet::vote`\\].\n\n* * *\n\nelectionProviderMultiPhase[\u200b](#electionprovidermultiphase \"Direct link to electionProviderMultiPhase\")\n\n-------------------------------------------------------------------------------------------------------\n\n### governanceFallback(maybe\\_max\\_voters: `Option<u32>`, maybe\\_max\\_targets: `Option<u32>`)[\u200b](#governancefallbackmaybe_max_voters-optionu32-maybe_max_targets-optionu32 \"Direct link to governancefallbackmaybe_max_voters-optionu32-maybe_max_targets-optionu32\")\n\n*   **interface**: `api.tx.electionProviderMultiPhase.governanceFallback`\n*   **summary**: See \\[`Pallet::governance_fallback`\\].\n\n### setEmergencyElectionResult(supports: `Vec<(AccountId32,SpNposElectionsSupport)>`)[\u200b](#setemergencyelectionresultsupports-vecaccountid32spnposelectionssupport \"Direct link to setemergencyelectionresultsupports-vecaccountid32spnposelectionssupport\")\n\n*   **interface**: `api.tx.electionProviderMultiPhase.setEmergencyElectionResult`\n*   **summary**: See \\[`Pallet::set_emergency_election_result`\\].\n\n### setMinimumUntrustedScore(maybe\\_next\\_score: `Option<SpNposElectionsElectionScore>`)[\u200b](#setminimumuntrustedscoremaybe_next_score-optionspnposelectionselectionscore \"Direct link to setminimumuntrustedscoremaybe_next_score-optionspnposelectionselectionscore\")\n\n*   **interface**: `api.tx.electionProviderMultiPhase.setMinimumUntrustedScore`\n*   **summary**: See \\[`Pallet::set_minimum_untrusted_score`\\].\n\n### submit(raw\\_solution: `PalletElectionProviderMultiPhaseRawSolution`)[\u200b](#submitraw_solution-palletelectionprovidermultiphaserawsolution \"Direct link to submitraw_solution-palletelectionprovidermultiphaserawsolution\")\n\n*   **interface**: `api.tx.electionProviderMultiPhase.submit`\n*   **summary**: See \\[`Pallet::submit`\\].\n\n### submitUnsigned(raw\\_solution: `PalletElectionProviderMultiPhaseRawSolution`, witness: `PalletElectionProviderMultiPhaseSolutionOrSnapshotSize`)[\u200b](#submitunsignedraw_solution-palletelectionprovidermultiphaserawsolution-witness-palletelectionprovidermultiphasesolutionorsnapshotsize \"Direct link to submitunsignedraw_solution-palletelectionprovidermultiphaserawsolution-witness-palletelectionprovidermultiphasesolutionorsnapshotsize\")\n\n*   **interface**: `api.tx.electionProviderMultiPhase.submitUnsigned`\n*   **summary**: See \\[`Pallet::submit_unsigned`\\].\n\n* * *\n\nelections[\u200b](#elections \"Direct link to elections\")\n\n----------------------------------------------------\n\n### cleanDefunctVoters(num\\_voters: `u32`, num\\_defunct: `u32`)[\u200b](#cleandefunctvotersnum_voters-u32-num_defunct-u32 \"Direct link to cleandefunctvotersnum_voters-u32-num_defunct-u32\")\n\n*   **interface**: `api.tx.elections.cleanDefunctVoters`\n*   **summary**: See \\[`Pallet::clean_defunct_voters`\\].\n\n### removeMember(who: `MultiAddress`, slash\\_bond: `bool`, rerun\\_election: `bool`)[\u200b](#removememberwho-multiaddress-slash_bond-bool-rerun_election-bool \"Direct link to removememberwho-multiaddress-slash_bond-bool-rerun_election-bool\")\n\n*   **interface**: `api.tx.elections.removeMember`\n*   **summary**: See \\[`Pallet::remove_member`\\].\n\n### removeVoter()[\u200b](#removevoter \"Direct link to removeVoter()\")\n\n*   **interface**: `api.tx.elections.removeVoter`\n*   **summary**: See \\[`Pallet::remove_voter`\\].\n\n### renounceCandidacy(renouncing: `PalletElectionsPhragmenRenouncing`)[\u200b](#renouncecandidacyrenouncing-palletelectionsphragmenrenouncing \"Direct link to renouncecandidacyrenouncing-palletelectionsphragmenrenouncing\")\n\n*   **interface**: `api.tx.elections.renounceCandidacy`\n*   **summary**: See \\[`Pallet::renounce_candidacy`\\].\n\n### submitCandidacy(candidate\\_count: `Compact<u32>`)[\u200b](#submitcandidacycandidate_count-compactu32 \"Direct link to submitcandidacycandidate_count-compactu32\")\n\n*   **interface**: `api.tx.elections.submitCandidacy`\n*   **summary**: See \\[`Pallet::submit_candidacy`\\].\n\n### vote(votes: `Vec<AccountId32>`, value: `Compact<u128>`)[\u200b](#votevotes-vecaccountid32-value-compactu128 \"Direct link to votevotes-vecaccountid32-value-compactu128\")\n\n*   **interface**: `api.tx.elections.vote`\n*   **summary**: See \\[`Pallet::vote`\\].\n\n* * *\n\nfastUnstake[\u200b](#fastunstake \"Direct link to fastUnstake\")\n\n----------------------------------------------------------\n\n### control(eras\\_to\\_check: `u32`)[\u200b](#controleras_to_check-u32 \"Direct link to controleras_to_check-u32\")\n\n*   **interface**: `api.tx.fastUnstake.control`\n*   **summary**: See \\[`Pallet::control`\\].\n\n### deregister()[\u200b](#deregister \"Direct link to deregister()\")\n\n*   **interface**: `api.tx.fastUnstake.deregister`\n*   **summary**: See \\[`Pallet::deregister`\\].\n\n### registerFastUnstake()[\u200b](#registerfastunstake \"Direct link to registerFastUnstake()\")\n\n*   **interface**: `api.tx.fastUnstake.registerFastUnstake`\n*   **summary**: See \\[`Pallet::register_fast_unstake`\\].\n\n* * *\n\nglutton[\u200b](#glutton \"Direct link to glutton\")\n\n----------------------------------------------\n\n### initializePallet(new\\_count: `u32`, witness\\_count: `Option<u32>`)[\u200b](#initializepalletnew_count-u32-witness_count-optionu32 \"Direct link to initializepalletnew_count-u32-witness_count-optionu32\")\n\n*   **interface**: `api.tx.glutton.initializePallet`\n*   **summary**: See \\[`Pallet::initialize_pallet`\\].\n\n### setCompute(compute: `u64`)[\u200b](#setcomputecompute-u64 \"Direct link to setcomputecompute-u64\")\n\n*   **interface**: `api.tx.glutton.setCompute`\n*   **summary**: See \\[`Pallet::set_compute`\\].\n\n### setStorage(storage: `u64`)[\u200b](#setstoragestorage-u64 \"Direct link to setstoragestorage-u64\")\n\n*   **interface**: `api.tx.glutton.setStorage`\n*   **summary**: See \\[`Pallet::set_storage`\\].\n\n* * *\n\ngrandpa[\u200b](#grandpa \"Direct link to grandpa\")\n\n----------------------------------------------\n\n### noteStalled(delay: `u32`, best\\_finalized\\_block\\_number: `u32`)[\u200b](#notestalleddelay-u32-best_finalized_block_number-u32 \"Direct link to notestalleddelay-u32-best_finalized_block_number-u32\")\n\n*   **interface**: `api.tx.grandpa.noteStalled`\n*   **summary**: See \\[`Pallet::note_stalled`\\].\n\n### reportEquivocation(equivocation\\_proof: `SpConsensusGrandpaEquivocationProof`, key\\_owner\\_proof: `SpSessionMembershipProof`)[\u200b](#reportequivocationequivocation_proof-spconsensusgrandpaequivocationproof-key_owner_proof-spsessionmembershipproof \"Direct link to reportequivocationequivocation_proof-spconsensusgrandpaequivocationproof-key_owner_proof-spsessionmembershipproof\")\n\n*   **interface**: `api.tx.grandpa.reportEquivocation`\n*   **summary**: See \\[`Pallet::report_equivocation`\\].\n\n### reportEquivocationUnsigned(equivocation\\_proof: `SpConsensusGrandpaEquivocationProof`, key\\_owner\\_proof: `SpSessionMembershipProof`)[\u200b](#reportequivocationunsignedequivocation_proof-spconsensusgrandpaequivocationproof-key_owner_proof-spsessionmembershipproof \"Direct link to reportequivocationunsignedequivocation_proof-spconsensusgrandpaequivocationproof-key_owner_proof-spsessionmembershipproof\")\n\n*   **interface**: `api.tx.grandpa.reportEquivocationUnsigned`\n*   **summary**: See \\[`Pallet::report_equivocation_unsigned`\\].\n\n* * *\n\nidentity[\u200b](#identity \"Direct link to identity\")\n\n-------------------------------------------------\n\n### addRegistrar(account: `MultiAddress`)[\u200b](#addregistraraccount-multiaddress \"Direct link to addregistraraccount-multiaddress\")\n\n*   **interface**: `api.tx.identity.addRegistrar`\n*   **summary**: See \\[`Pallet::add_registrar`\\].\n\n### addSub(sub: `MultiAddress`, data: `Data`)[\u200b](#addsubsub-multiaddress-data-data \"Direct link to addsubsub-multiaddress-data-data\")\n\n*   **interface**: `api.tx.identity.addSub`\n*   **summary**: See \\[`Pallet::add_sub`\\].\n\n### cancelRequest(reg\\_index: `u32`)[\u200b](#cancelrequestreg_index-u32 \"Direct link to cancelrequestreg_index-u32\")\n\n*   **interface**: `api.tx.identity.cancelRequest`\n*   **summary**: See \\[`Pallet::cancel_request`\\].\n\n### clearIdentity()[\u200b](#clearidentity \"Direct link to clearIdentity()\")\n\n*   **interface**: `api.tx.identity.clearIdentity`\n*   **summary**: See \\[`Pallet::clear_identity`\\].\n\n### killIdentity(target: `MultiAddress`)[\u200b](#killidentitytarget-multiaddress \"Direct link to killidentitytarget-multiaddress\")\n\n*   **interface**: `api.tx.identity.killIdentity`\n*   **summary**: See \\[`Pallet::kill_identity`\\].\n\n### provideJudgement(reg\\_index: `Compact<u32>`, target: `MultiAddress`, judgement: `PalletIdentityJudgement`, identity: `H256`)[\u200b](#providejudgementreg_index-compactu32-target-multiaddress-judgement-palletidentityjudgement-identity-h256 \"Direct link to providejudgementreg_index-compactu32-target-multiaddress-judgement-palletidentityjudgement-identity-h256\")\n\n*   **interface**: `api.tx.identity.provideJudgement`\n*   **summary**: See \\[`Pallet::provide_judgement`\\].\n\n### quitSub()[\u200b](#quitsub \"Direct link to quitSub()\")\n\n*   **interface**: `api.tx.identity.quitSub`\n*   **summary**: See \\[`Pallet::quit_sub`\\].\n\n### removeSub(sub: `MultiAddress`)[\u200b](#removesubsub-multiaddress \"Direct link to removesubsub-multiaddress\")\n\n*   **interface**: `api.tx.identity.removeSub`\n*   **summary**: See \\[`Pallet::remove_sub`\\].\n\n### renameSub(sub: `MultiAddress`, data: `Data`)[\u200b](#renamesubsub-multiaddress-data-data \"Direct link to renamesubsub-multiaddress-data-data\")\n\n*   **interface**: `api.tx.identity.renameSub`\n*   **summary**: See \\[`Pallet::rename_sub`\\].\n\n### requestJudgement(reg\\_index: `Compact<u32>`, max\\_fee: `Compact<u128>`)[\u200b](#requestjudgementreg_index-compactu32-max_fee-compactu128 \"Direct link to requestjudgementreg_index-compactu32-max_fee-compactu128\")\n\n*   **interface**: `api.tx.identity.requestJudgement`\n*   **summary**: See \\[`Pallet::request_judgement`\\].\n\n### setAccountId(index: `Compact<u32>`, new: `MultiAddress`)[\u200b](#setaccountidindex-compactu32-new-multiaddress \"Direct link to setaccountidindex-compactu32-new-multiaddress\")\n\n*   **interface**: `api.tx.identity.setAccountId`\n*   **summary**: See \\[`Pallet::set_account_id`\\].\n\n### setFee(index: `Compact<u32>`, fee: `Compact<u128>`)[\u200b](#setfeeindex-compactu32-fee-compactu128 \"Direct link to setfeeindex-compactu32-fee-compactu128\")\n\n*   **interface**: `api.tx.identity.setFee`\n*   **summary**: See \\[`Pallet::set_fee`\\].\n\n### setFields(index: `Compact<u32>`, fields: `u64`)[\u200b](#setfieldsindex-compactu32-fields-u64 \"Direct link to setfieldsindex-compactu32-fields-u64\")\n\n*   **interface**: `api.tx.identity.setFields`\n*   **summary**: See \\[`Pallet::set_fields`\\].\n\n### setIdentity(info: `PalletIdentityLegacyIdentityInfo`)[\u200b](#setidentityinfo-palletidentitylegacyidentityinfo \"Direct link to setidentityinfo-palletidentitylegacyidentityinfo\")\n\n*   **interface**: `api.tx.identity.setIdentity`\n*   **summary**: See \\[`Pallet::set_identity`\\].\n\n### setSubs(subs: `Vec<(AccountId32,Data)>`)[\u200b](#setsubssubs-vecaccountid32data \"Direct link to setsubssubs-vecaccountid32data\")\n\n*   **interface**: `api.tx.identity.setSubs`\n*   **summary**: See \\[`Pallet::set_subs`\\].\n\n* * *\n\nimOnline[\u200b](#imonline \"Direct link to imOnline\")\n\n-------------------------------------------------\n\n### heartbeat(heartbeat: `PalletImOnlineHeartbeat`, signature: `PalletImOnlineSr25519AppSr25519Signature`)[\u200b](#heartbeatheartbeat-palletimonlineheartbeat-signature-palletimonlinesr25519appsr25519signature \"Direct link to heartbeatheartbeat-palletimonlineheartbeat-signature-palletimonlinesr25519appsr25519signature\")\n\n*   **interface**: `api.tx.imOnline.heartbeat`\n*   **summary**: See \\[`Pallet::heartbeat`\\].\n\n* * *\n\nindices[\u200b](#indices \"Direct link to indices\")\n\n----------------------------------------------\n\n### claim(index: `u32`)[\u200b](#claimindex-u32 \"Direct link to claimindex-u32\")\n\n*   **interface**: `api.tx.indices.claim`\n*   **summary**: See \\[`Pallet::claim`\\].\n\n### forceTransfer(new: `MultiAddress`, index: `u32`, freeze: `bool`)[\u200b](#forcetransfernew-multiaddress-index-u32-freeze-bool \"Direct link to forcetransfernew-multiaddress-index-u32-freeze-bool\")\n\n*   **interface**: `api.tx.indices.forceTransfer`\n*   **summary**: See \\[`Pallet::force_transfer`\\].\n\n### free(index: `u32`)[\u200b](#freeindex-u32 \"Direct link to freeindex-u32\")\n\n*   **interface**: `api.tx.indices.free`\n*   **summary**: See \\[`Pallet::free`\\].\n\n### freeze(index: `u32`)[\u200b](#freezeindex-u32 \"Direct link to freezeindex-u32\")\n\n*   **interface**: `api.tx.indices.freeze`\n*   **summary**: See \\[`Pallet::freeze`\\].\n\n### transfer(new: `MultiAddress`, index: `u32`)[\u200b](#transfernew-multiaddress-index-u32 \"Direct link to transfernew-multiaddress-index-u32\")\n\n*   **interface**: `api.tx.indices.transfer`\n*   **summary**: See \\[`Pallet::transfer`\\].\n\n* * *\n\nlottery[\u200b](#lottery \"Direct link to lottery\")\n\n----------------------------------------------\n\n### buyTicket(call: `Call`)[\u200b](#buyticketcall-call \"Direct link to buyticketcall-call\")\n\n*   **interface**: `api.tx.lottery.buyTicket`\n*   **summary**: See \\[`Pallet::buy_ticket`\\].\n\n### setCalls(calls: `Vec<Call>`)[\u200b](#setcallscalls-veccall \"Direct link to setcallscalls-veccall\")\n\n*   **interface**: `api.tx.lottery.setCalls`\n*   **summary**: See \\[`Pallet::set_calls`\\].\n\n### startLottery(price: `u128`, length: `u32`, delay: `u32`, repeat: `bool`)[\u200b](#startlotteryprice-u128-length-u32-delay-u32-repeat-bool \"Direct link to startlotteryprice-u128-length-u32-delay-u32-repeat-bool\")\n\n*   **interface**: `api.tx.lottery.startLottery`\n*   **summary**: See \\[`Pallet::start_lottery`\\].\n\n### stopRepeat()[\u200b](#stoprepeat \"Direct link to stopRepeat()\")\n\n*   **interface**: `api.tx.lottery.stopRepeat`\n*   **summary**: See \\[`Pallet::stop_repeat`\\].\n\n* * *\n\nmessageQueue[\u200b](#messagequeue \"Direct link to messageQueue\")\n\n-------------------------------------------------------------\n\n### executeOverweight(message\\_origin: `u32`, page: `u32`, index: `u32`, weight\\_limit: `SpWeightsWeightV2Weight`)[\u200b](#executeoverweightmessage_origin-u32-page-u32-index-u32-weight_limit-spweightsweightv2weight \"Direct link to executeoverweightmessage_origin-u32-page-u32-index-u32-weight_limit-spweightsweightv2weight\")\n\n*   **interface**: `api.tx.messageQueue.executeOverweight`\n*   **summary**: See \\[`Pallet::execute_overweight`\\].\n\n### reapPage(message\\_origin: `u32`, page\\_index: `u32`)[\u200b](#reappagemessage_origin-u32-page_index-u32 \"Direct link to reappagemessage_origin-u32-page_index-u32\")\n\n*   **interface**: `api.tx.messageQueue.reapPage`\n*   **summary**: See \\[`Pallet::reap_page`\\].\n\n* * *\n\nmixnet[\u200b](#mixnet \"Direct link to mixnet\")\n\n-------------------------------------------\n\n### register(registration: `PalletMixnetRegistration`, signature: `SpMixnetAppSignature`)[\u200b](#registerregistration-palletmixnetregistration-signature-spmixnetappsignature \"Direct link to registerregistration-palletmixnetregistration-signature-spmixnetappsignature\")\n\n*   **interface**: `api.tx.mixnet.register`\n*   **summary**: See `Pallet::register`.\n\n* * *\n\nmultisig[\u200b](#multisig \"Direct link to multisig\")\n\n-------------------------------------------------\n\n### approveAsMulti(threshold: `u16`, other\\_signatories: `Vec<AccountId32>`, maybe\\_timepoint: `Option<PalletMultisigTimepoint>`, call\\_hash: `[u8;32]`, max\\_weight: `SpWeightsWeightV2Weight`)[\u200b](#approveasmultithreshold-u16-other_signatories-vecaccountid32-maybe_timepoint-optionpalletmultisigtimepoint-call_hash-u832-max_weight-spweightsweightv2weight \"Direct link to approveasmultithreshold-u16-other_signatories-vecaccountid32-maybe_timepoint-optionpalletmultisigtimepoint-call_hash-u832-max_weight-spweightsweightv2weight\")\n\n*   **interface**: `api.tx.multisig.approveAsMulti`\n*   **summary**: See \\[`Pallet::approve_as_multi`\\].\n\n### asMulti(threshold: `u16`, other\\_signatories: `Vec<AccountId32>`, maybe\\_timepoint: `Option<PalletMultisigTimepoint>`, call: `Call`, max\\_weight: `SpWeightsWeightV2Weight`)[\u200b](#asmultithreshold-u16-other_signatories-vecaccountid32-maybe_timepoint-optionpalletmultisigtimepoint-call-call-max_weight-spweightsweightv2weight \"Direct link to asmultithreshold-u16-other_signatories-vecaccountid32-maybe_timepoint-optionpalletmultisigtimepoint-call-call-max_weight-spweightsweightv2weight\")\n\n*   **interface**: `api.tx.multisig.asMulti`\n*   **summary**: See \\[`Pallet::as_multi`\\].\n\n### asMultiThreshold1(other\\_signatories: `Vec<AccountId32>`, call: `Call`)[\u200b](#asmultithreshold1other_signatories-vecaccountid32-call-call \"Direct link to asmultithreshold1other_signatories-vecaccountid32-call-call\")\n\n*   **interface**: `api.tx.multisig.asMultiThreshold1`\n*   **summary**: See \\[`Pallet::as_multi_threshold_1`\\].\n\n### cancelAsMulti(threshold: `u16`, other\\_signatories: `Vec<AccountId32>`, timepoint: `PalletMultisigTimepoint`, call\\_hash: `[u8;32]`)[\u200b](#cancelasmultithreshold-u16-other_signatories-vecaccountid32-timepoint-palletmultisigtimepoint-call_hash-u832 \"Direct link to cancelasmultithreshold-u16-other_signatories-vecaccountid32-timepoint-palletmultisigtimepoint-call_hash-u832\")\n\n*   **interface**: `api.tx.multisig.cancelAsMulti`\n*   **summary**: See \\[`Pallet::cancel_as_multi`\\].\n\n* * *\n\nnftFractionalization[\u200b](#nftfractionalization \"Direct link to nftFractionalization\")\n\n-------------------------------------------------------------------------------------\n\n### fractionalize(nft\\_collection\\_id: `u32`, nft\\_id: `u32`, asset\\_id: `u32`, beneficiary: `MultiAddress`, fractions: `u128`)[\u200b](#fractionalizenft_collection_id-u32-nft_id-u32-asset_id-u32-beneficiary-multiaddress-fractions-u128 \"Direct link to fractionalizenft_collection_id-u32-nft_id-u32-asset_id-u32-beneficiary-multiaddress-fractions-u128\")\n\n*   **interface**: `api.tx.nftFractionalization.fractionalize`\n*   **summary**: See \\[`Pallet::fractionalize`\\].\n\n### unify(nft\\_collection\\_id: `u32`, nft\\_id: `u32`, asset\\_id: `u32`, beneficiary: `MultiAddress`)[\u200b](#unifynft_collection_id-u32-nft_id-u32-asset_id-u32-beneficiary-multiaddress \"Direct link to unifynft_collection_id-u32-nft_id-u32-asset_id-u32-beneficiary-multiaddress\")\n\n*   **interface**: `api.tx.nftFractionalization.unify`\n*   **summary**: See \\[`Pallet::unify`\\].\n\n* * *\n\nnfts[\u200b](#nfts \"Direct link to nfts\")\n\n-------------------------------------\n\n### approveItemAttributes(collection: `u32`, item: `u32`, delegate: `MultiAddress`)[\u200b](#approveitemattributescollection-u32-item-u32-delegate-multiaddress \"Direct link to approveitemattributescollection-u32-item-u32-delegate-multiaddress\")\n\n*   **interface**: `api.tx.nfts.approveItemAttributes`\n*   **summary**: See \\[`Pallet::approve_item_attributes`\\].\n\n### approveTransfer(collection: `u32`, item: `u32`, delegate: `MultiAddress`, maybe\\_deadline: `Option<u32>`)[\u200b](#approvetransfercollection-u32-item-u32-delegate-multiaddress-maybe_deadline-optionu32 \"Direct link to approvetransfercollection-u32-item-u32-delegate-multiaddress-maybe_deadline-optionu32\")\n\n*   **interface**: `api.tx.nfts.approveTransfer`\n*   **summary**: See \\[`Pallet::approve_transfer`\\].\n\n### burn(collection: `u32`, item: `u32`)[\u200b](#burncollection-u32-item-u32 \"Direct link to burncollection-u32-item-u32\")\n\n*   **interface**: `api.tx.nfts.burn`\n*   **summary**: See \\[`Pallet::burn`\\].\n\n### buyItem(collection: `u32`, item: `u32`, bid\\_price: `u128`)[\u200b](#buyitemcollection-u32-item-u32-bid_price-u128 \"Direct link to buyitemcollection-u32-item-u32-bid_price-u128\")\n\n*   **interface**: `api.tx.nfts.buyItem`\n*   **summary**: See \\[`Pallet::buy_item`\\].\n\n### cancelApproval(collection: `u32`, item: `u32`, delegate: `MultiAddress`)[\u200b](#cancelapprovalcollection-u32-item-u32-delegate-multiaddress \"Direct link to cancelapprovalcollection-u32-item-u32-delegate-multiaddress\")\n\n*   **interface**: `api.tx.nfts.cancelApproval`\n*   **summary**: See \\[`Pallet::cancel_approval`\\].\n\n### cancelItemAttributesApproval(collection: `u32`, item: `u32`, delegate: `MultiAddress`, witness: `PalletNftsCancelAttributesApprovalWitness`)[\u200b](#cancelitemattributesapprovalcollection-u32-item-u32-delegate-multiaddress-witness-palletnftscancelattributesapprovalwitness \"Direct link to cancelitemattributesapprovalcollection-u32-item-u32-delegate-multiaddress-witness-palletnftscancelattributesapprovalwitness\")\n\n*   **interface**: `api.tx.nfts.cancelItemAttributesApproval`\n*   **summary**: See \\[`Pallet::cancel_item_attributes_approval`\\].\n\n### cancelSwap(offered\\_collection: `u32`, offered\\_item: `u32`)[\u200b](#cancelswapoffered_collection-u32-offered_item-u32 \"Direct link to cancelswapoffered_collection-u32-offered_item-u32\")\n\n*   **interface**: `api.tx.nfts.cancelSwap`\n*   **summary**: See \\[`Pallet::cancel_swap`\\].\n\n### claimSwap(send\\_collection: `u32`, send\\_item: `u32`, receive\\_collection: `u32`, receive\\_item: `u32`, witness\\_price: `Option<PalletNftsPriceWithDirection>`)[\u200b](#claimswapsend_collection-u32-send_item-u32-receive_collection-u32-receive_item-u32-witness_price-optionpalletnftspricewithdirection \"Direct link to claimswapsend_collection-u32-send_item-u32-receive_collection-u32-receive_item-u32-witness_price-optionpalletnftspricewithdirection\")\n\n*   **interface**: `api.tx.nfts.claimSwap`\n*   **summary**: See \\[`Pallet::claim_swap`\\].\n\n### clearAllTransferApprovals(collection: `u32`, item: `u32`)[\u200b](#clearalltransferapprovalscollection-u32-item-u32 \"Direct link to clearalltransferapprovalscollection-u32-item-u32\")\n\n*   **interface**: `api.tx.nfts.clearAllTransferApprovals`\n*   **summary**: See \\[`Pallet::clear_all_transfer_approvals`\\].\n\n### clearAttribute(collection: `u32`, maybe\\_item: `Option<u32>`, namespace: `PalletNftsAttributeNamespace`, key: `Bytes`)[\u200b](#clearattributecollection-u32-maybe_item-optionu32-namespace-palletnftsattributenamespace-key-bytes \"Direct link to clearattributecollection-u32-maybe_item-optionu32-namespace-palletnftsattributenamespace-key-bytes\")\n\n*   **interface**: `api.tx.nfts.clearAttribute`\n*   **summary**: See \\[`Pallet::clear_attribute`\\].\n\n### clearCollectionMetadata(collection: `u32`)[\u200b](#clearcollectionmetadatacollection-u32 \"Direct link to clearcollectionmetadatacollection-u32\")\n\n*   **interface**: `api.tx.nfts.clearCollectionMetadata`\n*   **summary**: See \\[`Pallet::clear_collection_metadata`\\].\n\n### clearMetadata(collection: `u32`, item: `u32`)[\u200b](#clearmetadatacollection-u32-item-u32 \"Direct link to clearmetadatacollection-u32-item-u32\")\n\n*   **interface**: `api.tx.nfts.clearMetadata`\n*   **summary**: See \\[`Pallet::clear_metadata`\\].\n\n### create(admin: `MultiAddress`, config: `PalletNftsCollectionConfig`)[\u200b](#createadmin-multiaddress-config-palletnftscollectionconfig \"Direct link to createadmin-multiaddress-config-palletnftscollectionconfig\")\n\n*   **interface**: `api.tx.nfts.create`\n*   **summary**: See \\[`Pallet::create`\\].\n\n### createSwap(offered\\_collection: `u32`, offered\\_item: `u32`, desired\\_collection: `u32`, maybe\\_desired\\_item: `Option<u32>`, maybe\\_price: `Option<PalletNftsPriceWithDirection>`, duration: `u32`)[\u200b](#createswapoffered_collection-u32-offered_item-u32-desired_collection-u32-maybe_desired_item-optionu32-maybe_price-optionpalletnftspricewithdirection-duration-u32 \"Direct link to createswapoffered_collection-u32-offered_item-u32-desired_collection-u32-maybe_desired_item-optionu32-maybe_price-optionpalletnftspricewithdirection-duration-u32\")\n\n*   **interface**: `api.tx.nfts.createSwap`\n*   **summary**: See \\[`Pallet::create_swap`\\].\n\n### destroy(collection: `u32`, witness: `PalletNftsDestroyWitness`)[\u200b](#destroycollection-u32-witness-palletnftsdestroywitness \"Direct link to destroycollection-u32-witness-palletnftsdestroywitness\")\n\n*   **interface**: `api.tx.nfts.destroy`\n*   **summary**: See \\[`Pallet::destroy`\\].\n\n### forceCollectionConfig(collection: `u32`, config: `PalletNftsCollectionConfig`)[\u200b](#forcecollectionconfigcollection-u32-config-palletnftscollectionconfig \"Direct link to forcecollectionconfigcollection-u32-config-palletnftscollectionconfig\")\n\n*   **interface**: `api.tx.nfts.forceCollectionConfig`\n*   **summary**: See \\[`Pallet::force_collection_config`\\].\n\n### forceCollectionOwner(collection: `u32`, owner: `MultiAddress`)[\u200b](#forcecollectionownercollection-u32-owner-multiaddress \"Direct link to forcecollectionownercollection-u32-owner-multiaddress\")\n\n*   **interface**: `api.tx.nfts.forceCollectionOwner`\n*   **summary**: See \\[`Pallet::force_collection_owner`\\].\n\n### forceCreate(owner: `MultiAddress`, config: `PalletNftsCollectionConfig`)[\u200b](#forcecreateowner-multiaddress-config-palletnftscollectionconfig \"Direct link to forcecreateowner-multiaddress-config-palletnftscollectionconfig\")\n\n*   **interface**: `api.tx.nfts.forceCreate`\n*   **summary**: See \\[`Pallet::force_create`\\].\n\n### forceMint(collection: `u32`, item: `u32`, mint\\_to: `MultiAddress`, item\\_config: `PalletNftsItemConfig`)[\u200b](#forcemintcollection-u32-item-u32-mint_to-multiaddress-item_config-palletnftsitemconfig \"Direct link to forcemintcollection-u32-item-u32-mint_to-multiaddress-item_config-palletnftsitemconfig\")\n\n*   **interface**: `api.tx.nfts.forceMint`\n*   **summary**: See \\[`Pallet::force_mint`\\].\n\n### forceSetAttribute(set\\_as: `Option<AccountId32>`, collection: `u32`, maybe\\_item: `Option<u32>`, namespace: `PalletNftsAttributeNamespace`, key: `Bytes`, value: `Bytes`)[\u200b](#forcesetattributeset_as-optionaccountid32-collection-u32-maybe_item-optionu32-namespace-palletnftsattributenamespace-key-bytes-value-bytes \"Direct link to forcesetattributeset_as-optionaccountid32-collection-u32-maybe_item-optionu32-namespace-palletnftsattributenamespace-key-bytes-value-bytes\")\n\n*   **interface**: `api.tx.nfts.forceSetAttribute`\n*   **summary**: See \\[`Pallet::force_set_attribute`\\].\n\n### lockCollection(collection: `u32`, lock\\_settings: `u64`)[\u200b](#lockcollectioncollection-u32-lock_settings-u64 \"Direct link to lockcollectioncollection-u32-lock_settings-u64\")\n\n*   **interface**: `api.tx.nfts.lockCollection`\n*   **summary**: See \\[`Pallet::lock_collection`\\].\n\n### lockItemProperties(collection: `u32`, item: `u32`, lock\\_metadata: `bool`, lock\\_attributes: `bool`)[\u200b](#lockitempropertiescollection-u32-item-u32-lock_metadata-bool-lock_attributes-bool \"Direct link to lockitempropertiescollection-u32-item-u32-lock_metadata-bool-lock_attributes-bool\")\n\n*   **interface**: `api.tx.nfts.lockItemProperties`\n*   **summary**: See \\[`Pallet::lock_item_properties`\\].\n\n### lockItemTransfer(collection: `u32`, item: `u32`)[\u200b](#lockitemtransfercollection-u32-item-u32 \"Direct link to lockitemtransfercollection-u32-item-u32\")\n\n*   **interface**: `api.tx.nfts.lockItemTransfer`\n*   **summary**: See \\[`Pallet::lock_item_transfer`\\].\n\n### mint(collection: `u32`, item: `u32`, mint\\_to: `MultiAddress`, witness\\_data: `Option<PalletNftsMintWitness>`)[\u200b](#mintcollection-u32-item-u32-mint_to-multiaddress-witness_data-optionpalletnftsmintwitness \"Direct link to mintcollection-u32-item-u32-mint_to-multiaddress-witness_data-optionpalletnftsmintwitness\")\n\n*   **interface**: `api.tx.nfts.mint`\n*   **summary**: See \\[`Pallet::mint`\\].\n\n### mintPreSigned(mint\\_data: `PalletNftsPreSignedMint`, signature: `SpRuntimeMultiSignature`, signer: `AccountId32`)[\u200b](#mintpresignedmint_data-palletnftspresignedmint-signature-spruntimemultisignature-signer-accountid32 \"Direct link to mintpresignedmint_data-palletnftspresignedmint-signature-spruntimemultisignature-signer-accountid32\")\n\n*   **interface**: `api.tx.nfts.mintPreSigned`\n*   **summary**: See \\[`Pallet::mint_pre_signed`\\].\n\n### payTips(tips: `Vec<PalletNftsItemTip>`)[\u200b](#paytipstips-vecpalletnftsitemtip \"Direct link to paytipstips-vecpalletnftsitemtip\")\n\n*   **interface**: `api.tx.nfts.payTips`\n*   **summary**: See \\[`Pallet::pay_tips`\\].\n\n### redeposit(collection: `u32`, items: `Vec<u32>`)[\u200b](#redepositcollection-u32-items-vecu32 \"Direct link to redepositcollection-u32-items-vecu32\")\n\n*   **interface**: `api.tx.nfts.redeposit`\n*   **summary**: See \\[`Pallet::redeposit`\\].\n\n### setAcceptOwnership(maybe\\_collection: `Option<u32>`)[\u200b](#setacceptownershipmaybe_collection-optionu32 \"Direct link to setacceptownershipmaybe_collection-optionu32\")\n\n*   **interface**: `api.tx.nfts.setAcceptOwnership`\n*   **summary**: See \\[`Pallet::set_accept_ownership`\\].\n\n### setAttribute(collection: `u32`, maybe\\_item: `Option<u32>`, namespace: `PalletNftsAttributeNamespace`, key: `Bytes`, value: `Bytes`)[\u200b](#setattributecollection-u32-maybe_item-optionu32-namespace-palletnftsattributenamespace-key-bytes-value-bytes \"Direct link to setattributecollection-u32-maybe_item-optionu32-namespace-palletnftsattributenamespace-key-bytes-value-bytes\")\n\n*   **interface**: `api.tx.nfts.setAttribute`\n*   **summary**: See \\[`Pallet::set_attribute`\\].\n\n### setAttributesPreSigned(data: `PalletNftsPreSignedAttributes`, signature: `SpRuntimeMultiSignature`, signer: `AccountId32`)[\u200b](#setattributespresigneddata-palletnftspresignedattributes-signature-spruntimemultisignature-signer-accountid32 \"Direct link to setattributespresigneddata-palletnftspresignedattributes-signature-spruntimemultisignature-signer-accountid32\")\n\n*   **interface**: `api.tx.nfts.setAttributesPreSigned`\n*   **summary**: See \\[`Pallet::set_attributes_pre_signed`\\].\n\n### setCollectionMaxSupply(collection: `u32`, max\\_supply: `u32`)[\u200b](#setcollectionmaxsupplycollection-u32-max_supply-u32 \"Direct link to setcollectionmaxsupplycollection-u32-max_supply-u32\")\n\n*   **interface**: `api.tx.nfts.setCollectionMaxSupply`\n*   **summary**: See \\[`Pallet::set_collection_max_supply`\\].\n\n### setCollectionMetadata(collection: `u32`, data: `Bytes`)[\u200b](#setcollectionmetadatacollection-u32-data-bytes \"Direct link to setcollectionmetadatacollection-u32-data-bytes\")\n\n*   **interface**: `api.tx.nfts.setCollectionMetadata`\n*   **summary**: See \\[`Pallet::set_collection_metadata`\\].\n\n### setMetadata(collection: `u32`, item: `u32`, data: `Bytes`)[\u200b](#setmetadatacollection-u32-item-u32-data-bytes \"Direct link to setmetadatacollection-u32-item-u32-data-bytes\")\n\n*   **interface**: `api.tx.nfts.setMetadata`\n*   **summary**: See \\[`Pallet::set_metadata`\\].\n\n### setPrice(collection: `u32`, item: `u32`, price: `Option<u128>`, whitelisted\\_buyer: `Option<MultiAddress>`)[\u200b](#setpricecollection-u32-item-u32-price-optionu128-whitelisted_buyer-optionmultiaddress \"Direct link to setpricecollection-u32-item-u32-price-optionu128-whitelisted_buyer-optionmultiaddress\")\n\n*   **interface**: `api.tx.nfts.setPrice`\n*   **summary**: See \\[`Pallet::set_price`\\].\n\n### setTeam(collection: `u32`, issuer: `Option<MultiAddress>`, admin: `Option<MultiAddress>`, freezer: `Option<MultiAddress>`)[\u200b](#setteamcollection-u32-issuer-optionmultiaddress-admin-optionmultiaddress-freezer-optionmultiaddress \"Direct link to setteamcollection-u32-issuer-optionmultiaddress-admin-optionmultiaddress-freezer-optionmultiaddress\")\n\n*   **interface**: `api.tx.nfts.setTeam`\n*   **summary**: See \\[`Pallet::set_team`\\].\n\n### transfer(collection: `u32`, item: `u32`, dest: `MultiAddress`)[\u200b](#transfercollection-u32-item-u32-dest-multiaddress \"Direct link to transfercollection-u32-item-u32-dest-multiaddress\")\n\n*   **interface**: `api.tx.nfts.transfer`\n*   **summary**: See \\[`Pallet::transfer`\\].\n\n### transferOwnership(collection: `u32`, owner: `MultiAddress`)[\u200b](#transferownershipcollection-u32-owner-multiaddress \"Direct link to transferownershipcollection-u32-owner-multiaddress\")\n\n*   **interface**: `api.tx.nfts.transferOwnership`\n*   **summary**: See \\[`Pallet::transfer_ownership`\\].\n\n### unlockItemTransfer(collection: `u32`, item: `u32`)[\u200b](#unlockitemtransfercollection-u32-item-u32 \"Direct link to unlockitemtransfercollection-u32-item-u32\")\n\n*   **interface**: `api.tx.nfts.unlockItemTransfer`\n*   **summary**: See \\[`Pallet::unlock_item_transfer`\\].\n\n### updateMintSettings(collection: `u32`, mint\\_settings: `PalletNftsMintSettings`)[\u200b](#updatemintsettingscollection-u32-mint_settings-palletnftsmintsettings \"Direct link to updatemintsettingscollection-u32-mint_settings-palletnftsmintsettings\")\n\n*   **interface**: `api.tx.nfts.updateMintSettings`\n*   **summary**: See \\[`Pallet::update_mint_settings`\\].\n\n* * *\n\nnis[\u200b](#nis \"Direct link to nis\")\n\n----------------------------------\n\n### communify(index: `Compact<u32>`)[\u200b](#communifyindex-compactu32 \"Direct link to communifyindex-compactu32\")\n\n*   **interface**: `api.tx.nis.communify`\n*   **summary**: See \\[`Pallet::communify`\\].\n\n### fundDeficit()[\u200b](#funddeficit \"Direct link to fundDeficit()\")\n\n*   **interface**: `api.tx.nis.fundDeficit`\n*   **summary**: See \\[`Pallet::fund_deficit`\\].\n\n### placeBid(amount: `Compact<u128>`, duration: `u32`)[\u200b](#placebidamount-compactu128-duration-u32 \"Direct link to placebidamount-compactu128-duration-u32\")\n\n*   **interface**: `api.tx.nis.placeBid`\n*   **summary**: See \\[`Pallet::place_bid`\\].\n\n### privatize(index: `Compact<u32>`)[\u200b](#privatizeindex-compactu32 \"Direct link to privatizeindex-compactu32\")\n\n*   **interface**: `api.tx.nis.privatize`\n*   **summary**: See \\[`Pallet::privatize`\\].\n\n### retractBid(amount: `Compact<u128>`, duration: `u32`)[\u200b](#retractbidamount-compactu128-duration-u32 \"Direct link to retractbidamount-compactu128-duration-u32\")\n\n*   **interface**: `api.tx.nis.retractBid`\n*   **summary**: See \\[`Pallet::retract_bid`\\].\n\n### thawCommunal(index: `Compact<u32>`)[\u200b](#thawcommunalindex-compactu32 \"Direct link to thawcommunalindex-compactu32\")\n\n*   **interface**: `api.tx.nis.thawCommunal`\n*   **summary**: See \\[`Pallet::thaw_communal`\\].\n\n### thawPrivate(index: `Compact<u32>`, maybe\\_proportion: `Option<Perquintill>`)[\u200b](#thawprivateindex-compactu32-maybe_proportion-optionperquintill \"Direct link to thawprivateindex-compactu32-maybe_proportion-optionperquintill\")\n\n*   **interface**: `api.tx.nis.thawPrivate`\n*   **summary**: See \\[`Pallet::thaw_private`\\].\n\n* * *\n\nnominationPools[\u200b](#nominationpools \"Direct link to nominationPools\")\n\n----------------------------------------------------------------------\n\n### adjustPoolDeposit(pool\\_id: `u32`)[\u200b](#adjustpooldepositpool_id-u32 \"Direct link to adjustpooldepositpool_id-u32\")\n\n*   **interface**: `api.tx.nominationPools.adjustPoolDeposit`\n*   **summary**: See \\[`Pallet::adjust_pool_deposit`\\].\n\n### bondExtra(extra: `PalletNominationPoolsBondExtra`)[\u200b](#bondextraextra-palletnominationpoolsbondextra \"Direct link to bondextraextra-palletnominationpoolsbondextra\")\n\n*   **interface**: `api.tx.nominationPools.bondExtra`\n*   **summary**: See \\[`Pallet::bond_extra`\\].\n\n### bondExtraOther(member: `MultiAddress`, extra: `PalletNominationPoolsBondExtra`)[\u200b](#bondextraothermember-multiaddress-extra-palletnominationpoolsbondextra \"Direct link to bondextraothermember-multiaddress-extra-palletnominationpoolsbondextra\")\n\n*   **interface**: `api.tx.nominationPools.bondExtraOther`\n*   **summary**: See \\[`Pallet::bond_extra_other`\\].\n\n### chill(pool\\_id: `u32`)[\u200b](#chillpool_id-u32 \"Direct link to chillpool_id-u32\")\n\n*   **interface**: `api.tx.nominationPools.chill`\n*   **summary**: See \\[`Pallet::chill`\\].\n\n### claimCommission(pool\\_id: `u32`)[\u200b](#claimcommissionpool_id-u32 \"Direct link to claimcommissionpool_id-u32\")\n\n*   **interface**: `api.tx.nominationPools.claimCommission`\n*   **summary**: See \\[`Pallet::claim_commission`\\].\n\n### claimPayout()[\u200b](#claimpayout \"Direct link to claimPayout()\")\n\n*   **interface**: `api.tx.nominationPools.claimPayout`\n*   **summary**: See \\[`Pallet::claim_payout`\\].\n\n### claimPayoutOther(other: `AccountId32`)[\u200b](#claimpayoutotherother-accountid32 \"Direct link to claimpayoutotherother-accountid32\")\n\n*   **interface**: `api.tx.nominationPools.claimPayoutOther`\n*   **summary**: See \\[`Pallet::claim_payout_other`\\].\n\n### create(amount: `Compact<u128>`, root: `MultiAddress`, nominator: `MultiAddress`, bouncer: `MultiAddress`)[\u200b](#createamount-compactu128-root-multiaddress-nominator-multiaddress-bouncer-multiaddress \"Direct link to createamount-compactu128-root-multiaddress-nominator-multiaddress-bouncer-multiaddress\")\n\n*   **interface**: `api.tx.nominationPools.create`\n*   **summary**: See \\[`Pallet::create`\\].\n\n### createWithPoolId(amount: `Compact<u128>`, root: `MultiAddress`, nominator: `MultiAddress`, bouncer: `MultiAddress`, pool\\_id: `u32`)[\u200b](#createwithpoolidamount-compactu128-root-multiaddress-nominator-multiaddress-bouncer-multiaddress-pool_id-u32 \"Direct link to createwithpoolidamount-compactu128-root-multiaddress-nominator-multiaddress-bouncer-multiaddress-pool_id-u32\")\n\n*   **interface**: `api.tx.nominationPools.createWithPoolId`\n*   **summary**: See \\[`Pallet::create_with_pool_id`\\].\n\n### join(amount: `Compact<u128>`, pool\\_id: `u32`)[\u200b](#joinamount-compactu128-pool_id-u32 \"Direct link to joinamount-compactu128-pool_id-u32\")\n\n*   **interface**: `api.tx.nominationPools.join`\n*   **summary**: See \\[`Pallet::join`\\].\n\n### nominate(pool\\_id: `u32`, validators: `Vec<AccountId32>`)[\u200b](#nominatepool_id-u32-validators-vecaccountid32 \"Direct link to nominatepool_id-u32-validators-vecaccountid32\")\n\n*   **interface**: `api.tx.nominationPools.nominate`\n*   **summary**: See \\[`Pallet::nominate`\\].\n\n### poolWithdrawUnbonded(pool\\_id: `u32`, num\\_slashing\\_spans: `u32`)[\u200b](#poolwithdrawunbondedpool_id-u32-num_slashing_spans-u32 \"Direct link to poolwithdrawunbondedpool_id-u32-num_slashing_spans-u32\")\n\n*   **interface**: `api.tx.nominationPools.poolWithdrawUnbonded`\n*   **summary**: See \\[`Pallet::pool_withdraw_unbonded`\\].\n\n### setClaimPermission(permission: `PalletNominationPoolsClaimPermission`)[\u200b](#setclaimpermissionpermission-palletnominationpoolsclaimpermission \"Direct link to setclaimpermissionpermission-palletnominationpoolsclaimpermission\")\n\n*   **interface**: `api.tx.nominationPools.setClaimPermission`\n*   **summary**: See \\[`Pallet::set_claim_permission`\\].\n\n### setCommission(pool\\_id: `u32`, new\\_commission: `Option<(Perbill,AccountId32)>`)[\u200b](#setcommissionpool_id-u32-new_commission-optionperbillaccountid32 \"Direct link to setcommissionpool_id-u32-new_commission-optionperbillaccountid32\")\n\n*   **interface**: `api.tx.nominationPools.setCommission`\n*   **summary**: See \\[`Pallet::set_commission`\\].\n\n### setCommissionChangeRate(pool\\_id: `u32`, change\\_rate: `PalletNominationPoolsCommissionChangeRate`)[\u200b](#setcommissionchangeratepool_id-u32-change_rate-palletnominationpoolscommissionchangerate \"Direct link to setcommissionchangeratepool_id-u32-change_rate-palletnominationpoolscommissionchangerate\")\n\n*   **interface**: `api.tx.nominationPools.setCommissionChangeRate`\n*   **summary**: See \\[`Pallet::set_commission_change_rate`\\].\n\n### setCommissionClaimPermission(pool\\_id: `u32`, permission: `Option<PalletNominationPoolsCommissionClaimPermission>`)[\u200b](#setcommissionclaimpermissionpool_id-u32-permission-optionpalletnominationpoolscommissionclaimpermission \"Direct link to setcommissionclaimpermissionpool_id-u32-permission-optionpalletnominationpoolscommissionclaimpermission\")\n\n*   **interface**: `api.tx.nominationPools.setCommissionClaimPermission`\n*   **summary**: See \\[`Pallet::set_commission_claim_permission`\\].\n\n### setCommissionMax(pool\\_id: `u32`, max\\_commission: `Perbill`)[\u200b](#setcommissionmaxpool_id-u32-max_commission-perbill \"Direct link to setcommissionmaxpool_id-u32-max_commission-perbill\")\n\n*   **interface**: `api.tx.nominationPools.setCommissionMax`\n*   **summary**: See \\[`Pallet::set_commission_max`\\].\n\n### setConfigs(min\\_join\\_bond: `PalletNominationPoolsConfigOpU128`, min\\_create\\_bond: `PalletNominationPoolsConfigOpU128`, max\\_pools: `PalletNominationPoolsConfigOpU32`, max\\_members: `PalletNominationPoolsConfigOpU32`, max\\_members\\_per\\_pool: `PalletNominationPoolsConfigOpU32`, global\\_max\\_commission: `PalletNominationPoolsConfigOpPerbill`)[\u200b](#setconfigsmin_join_bond-palletnominationpoolsconfigopu128-min_create_bond-palletnominationpoolsconfigopu128-max_pools-palletnominationpoolsconfigopu32-max_members-palletnominationpoolsconfigopu32-max_members_per_pool-palletnominationpoolsconfigopu32-global_max_commission-palletnominationpoolsconfigopperbill \"Direct link to setconfigsmin_join_bond-palletnominationpoolsconfigopu128-min_create_bond-palletnominationpoolsconfigopu128-max_pools-palletnominationpoolsconfigopu32-max_members-palletnominationpoolsconfigopu32-max_members_per_pool-palletnominationpoolsconfigopu32-global_max_commission-palletnominationpoolsconfigopperbill\")\n\n*   **interface**: `api.tx.nominationPools.setConfigs`\n*   **summary**: See \\[`Pallet::set_configs`\\].\n\n### setMetadata(pool\\_id: `u32`, metadata: `Bytes`)[\u200b](#setmetadatapool_id-u32-metadata-bytes \"Direct link to setmetadatapool_id-u32-metadata-bytes\")\n\n*   **interface**: `api.tx.nominationPools.setMetadata`\n*   **summary**: See \\[`Pallet::set_metadata`\\].\n\n### setState(pool\\_id: `u32`, state: `PalletNominationPoolsPoolState`)[\u200b](#setstatepool_id-u32-state-palletnominationpoolspoolstate \"Direct link to setstatepool_id-u32-state-palletnominationpoolspoolstate\")\n\n*   **interface**: `api.tx.nominationPools.setState`\n*   **summary**: See \\[`Pallet::set_state`\\].\n\n### unbond(member\\_account: `MultiAddress`, unbonding\\_points: `Compact<u128>`)[\u200b](#unbondmember_account-multiaddress-unbonding_points-compactu128 \"Direct link to unbondmember_account-multiaddress-unbonding_points-compactu128\")\n\n*   **interface**: `api.tx.nominationPools.unbond`\n*   **summary**: See \\[`Pallet::unbond`\\].\n\n### updateRoles(pool\\_id: `u32`, new\\_root: `PalletNominationPoolsConfigOpAccountId32`, new\\_nominator: `PalletNominationPoolsConfigOpAccountId32`, new\\_bouncer: `PalletNominationPoolsConfigOpAccountId32`)[\u200b](#updaterolespool_id-u32-new_root-palletnominationpoolsconfigopaccountid32-new_nominator-palletnominationpoolsconfigopaccountid32-new_bouncer-palletnominationpoolsconfigopaccountid32 \"Direct link to updaterolespool_id-u32-new_root-palletnominationpoolsconfigopaccountid32-new_nominator-palletnominationpoolsconfigopaccountid32-new_bouncer-palletnominationpoolsconfigopaccountid32\")\n\n*   **interface**: `api.tx.nominationPools.updateRoles`\n*   **summary**: See \\[`Pallet::update_roles`\\].\n\n### withdrawUnbonded(member\\_account: `MultiAddress`, num\\_slashing\\_spans: `u32`)[\u200b](#withdrawunbondedmember_account-multiaddress-num_slashing_spans-u32 \"Direct link to withdrawunbondedmember_account-multiaddress-num_slashing_spans-u32\")\n\n*   **interface**: `api.tx.nominationPools.withdrawUnbonded`\n*   **summary**: See \\[`Pallet::withdraw_unbonded`\\].\n\n* * *\n\npoolAssets[\u200b](#poolassets \"Direct link to poolAssets\")\n\n-------------------------------------------------------\n\n### approveTransfer(id: `Compact<u32>`, delegate: `MultiAddress`, amount: `Compact<u128>`)[\u200b](#approvetransferid-compactu32-delegate-multiaddress-amount-compactu128-1 \"Direct link to approvetransferid-compactu32-delegate-multiaddress-amount-compactu128-1\")\n\n*   **interface**: `api.tx.poolAssets.approveTransfer`\n*   **summary**: See \\[`Pallet::approve_transfer`\\].\n\n### block(id: `Compact<u32>`, who: `MultiAddress`)[\u200b](#blockid-compactu32-who-multiaddress-1 \"Direct link to blockid-compactu32-who-multiaddress-1\")\n\n*   **interface**: `api.tx.poolAssets.block`\n*   **summary**: See \\[`Pallet::block`\\].\n\n### burn(id: `Compact<u32>`, who: `MultiAddress`, amount: `Compact<u128>`)[\u200b](#burnid-compactu32-who-multiaddress-amount-compactu128-1 \"Direct link to burnid-compactu32-who-multiaddress-amount-compactu128-1\")\n\n*   **interface**: `api.tx.poolAssets.burn`\n*   **summary**: See \\[`Pallet::burn`\\].\n\n### cancelApproval(id: `Compact<u32>`, delegate: `MultiAddress`)[\u200b](#cancelapprovalid-compactu32-delegate-multiaddress-1 \"Direct link to cancelapprovalid-compactu32-delegate-multiaddress-1\")\n\n*   **interface**: `api.tx.poolAssets.cancelApproval`\n*   **summary**: See \\[`Pallet::cancel_approval`\\].\n\n### clearMetadata(id: `Compact<u32>`)[\u200b](#clearmetadataid-compactu32-1 \"Direct link to clearmetadataid-compactu32-1\")\n\n*   **interface**: `api.tx.poolAssets.clearMetadata`\n*   **summary**: See \\[`Pallet::clear_metadata`\\].\n\n### create(id: `Compact<u32>`, admin: `MultiAddress`, min\\_balance: `u128`)[\u200b](#createid-compactu32-admin-multiaddress-min_balance-u128-1 \"Direct link to createid-compactu32-admin-multiaddress-min_balance-u128-1\")\n\n*   **interface**: `api.tx.poolAssets.create`\n*   **summary**: See \\[`Pallet::create`\\].\n\n### destroyAccounts(id: `Compact<u32>`)[\u200b](#destroyaccountsid-compactu32-1 \"Direct link to destroyaccountsid-compactu32-1\")\n\n*   **interface**: `api.tx.poolAssets.destroyAccounts`\n*   **summary**: See \\[`Pallet::destroy_accounts`\\].\n\n### destroyApprovals(id: `Compact<u32>`)[\u200b](#destroyapprovalsid-compactu32-1 \"Direct link to destroyapprovalsid-compactu32-1\")\n\n*   **interface**: `api.tx.poolAssets.destroyApprovals`\n*   **summary**: See \\[`Pallet::destroy_approvals`\\].\n\n### finishDestroy(id: `Compact<u32>`)[\u200b](#finishdestroyid-compactu32-1 \"Direct link to finishdestroyid-compactu32-1\")\n\n*   **interface**: `api.tx.poolAssets.finishDestroy`\n*   **summary**: See \\[`Pallet::finish_destroy`\\].\n\n### forceAssetStatus(id: `Compact<u32>`, owner: `MultiAddress`, issuer: `MultiAddress`, admin: `MultiAddress`, freezer: `MultiAddress`, min\\_balance: `Compact<u128>`, is\\_sufficient: `bool`, is\\_frozen: `bool`)[\u200b](#forceassetstatusid-compactu32-owner-multiaddress-issuer-multiaddress-admin-multiaddress-freezer-multiaddress-min_balance-compactu128-is_sufficient-bool-is_frozen-bool-1 \"Direct link to forceassetstatusid-compactu32-owner-multiaddress-issuer-multiaddress-admin-multiaddress-freezer-multiaddress-min_balance-compactu128-is_sufficient-bool-is_frozen-bool-1\")\n\n*   **interface**: `api.tx.poolAssets.forceAssetStatus`\n*   **summary**: See \\[`Pallet::force_asset_status`\\].\n\n### forceCancelApproval(id: `Compact<u32>`, owner: `MultiAddress`, delegate: `MultiAddress`)[\u200b](#forcecancelapprovalid-compactu32-owner-multiaddress-delegate-multiaddress-1 \"Direct link to forcecancelapprovalid-compactu32-owner-multiaddress-delegate-multiaddress-1\")\n\n*   **interface**: `api.tx.poolAssets.forceCancelApproval`\n*   **summary**: See \\[`Pallet::force_cancel_approval`\\].\n\n### forceClearMetadata(id: `Compact<u32>`)[\u200b](#forceclearmetadataid-compactu32-1 \"Direct link to forceclearmetadataid-compactu32-1\")\n\n*   **interface**: `api.tx.poolAssets.forceClearMetadata`\n*   **summary**: See \\[`Pallet::force_clear_metadata`\\].\n\n### forceCreate(id: `Compact<u32>`, owner: `MultiAddress`, is\\_sufficient: `bool`, min\\_balance: `Compact<u128>`)[\u200b](#forcecreateid-compactu32-owner-multiaddress-is_sufficient-bool-min_balance-compactu128-1 \"Direct link to forcecreateid-compactu32-owner-multiaddress-is_sufficient-bool-min_balance-compactu128-1\")\n\n*   **interface**: `api.tx.poolAssets.forceCreate`\n*   **summary**: See \\[`Pallet::force_create`\\].\n\n### forceSetMetadata(id: `Compact<u32>`, name: `Bytes`, symbol: `Bytes`, decimals: `u8`, is\\_frozen: `bool`)[\u200b](#forcesetmetadataid-compactu32-name-bytes-symbol-bytes-decimals-u8-is_frozen-bool-1 \"Direct link to forcesetmetadataid-compactu32-name-bytes-symbol-bytes-decimals-u8-is_frozen-bool-1\")\n\n*   **interface**: `api.tx.poolAssets.forceSetMetadata`\n*   **summary**: See \\[`Pallet::force_set_metadata`\\].\n\n### forceTransfer(id: `Compact<u32>`, source: `MultiAddress`, dest: `MultiAddress`, amount: `Compact<u128>`)[\u200b](#forcetransferid-compactu32-source-multiaddress-dest-multiaddress-amount-compactu128-1 \"Direct link to forcetransferid-compactu32-source-multiaddress-dest-multiaddress-amount-compactu128-1\")\n\n*   **interface**: `api.tx.poolAssets.forceTransfer`\n*   **summary**: See \\[`Pallet::force_transfer`\\].\n\n### freeze(id: `Compact<u32>`, who: `MultiAddress`)[\u200b](#freezeid-compactu32-who-multiaddress-1 \"Direct link to freezeid-compactu32-who-multiaddress-1\")\n\n*   **interface**: `api.tx.poolAssets.freeze`\n*   **summary**: See \\[`Pallet::freeze`\\].\n\n### freezeAsset(id: `Compact<u32>`)[\u200b](#freezeassetid-compactu32-1 \"Direct link to freezeassetid-compactu32-1\")\n\n*   **interface**: `api.tx.poolAssets.freezeAsset`\n*   **summary**: See \\[`Pallet::freeze_asset`\\].\n\n### mint(id: `Compact<u32>`, beneficiary: `MultiAddress`, amount: `Compact<u128>`)[\u200b](#mintid-compactu32-beneficiary-multiaddress-amount-compactu128-1 \"Direct link to mintid-compactu32-beneficiary-multiaddress-amount-compactu128-1\")\n\n*   **interface**: `api.tx.poolAssets.mint`\n*   **summary**: See \\[`Pallet::mint`\\].\n\n### refund(id: `Compact<u32>`, allow\\_burn: `bool`)[\u200b](#refundid-compactu32-allow_burn-bool-1 \"Direct link to refundid-compactu32-allow_burn-bool-1\")\n\n*   **interface**: `api.tx.poolAssets.refund`\n*   **summary**: See \\[`Pallet::refund`\\].\n\n### refundOther(id: `Compact<u32>`, who: `MultiAddress`)[\u200b](#refundotherid-compactu32-who-multiaddress-1 \"Direct link to refundotherid-compactu32-who-multiaddress-1\")\n\n*   **interface**: `api.tx.poolAssets.refundOther`\n*   **summary**: See \\[`Pallet::refund_other`\\].\n\n### setMetadata(id: `Compact<u32>`, name: `Bytes`, symbol: `Bytes`, decimals: `u8`)[\u200b](#setmetadataid-compactu32-name-bytes-symbol-bytes-decimals-u8-1 \"Direct link to setmetadataid-compactu32-name-bytes-symbol-bytes-decimals-u8-1\")\n\n*   **interface**: `api.tx.poolAssets.setMetadata`\n*   **summary**: See \\[`Pallet::set_metadata`\\].\n\n### setMinBalance(id: `Compact<u32>`, min\\_balance: `u128`)[\u200b](#setminbalanceid-compactu32-min_balance-u128-1 \"Direct link to setminbalanceid-compactu32-min_balance-u128-1\")\n\n*   **interface**: `api.tx.poolAssets.setMinBalance`\n*   **summary**: See \\[`Pallet::set_min_balance`\\].\n\n### setTeam(id: `Compact<u32>`, issuer: `MultiAddress`, admin: `MultiAddress`, freezer: `MultiAddress`)[\u200b](#setteamid-compactu32-issuer-multiaddress-admin-multiaddress-freezer-multiaddress-1 \"Direct link to setteamid-compactu32-issuer-multiaddress-admin-multiaddress-freezer-multiaddress-1\")\n\n*   **interface**: `api.tx.poolAssets.setTeam`\n*   **summary**: See \\[`Pallet::set_team`\\].\n\n### startDestroy(id: `Compact<u32>`)[\u200b](#startdestroyid-compactu32-1 \"Direct link to startdestroyid-compactu32-1\")\n\n*   **interface**: `api.tx.poolAssets.startDestroy`\n*   **summary**: See \\[`Pallet::start_destroy`\\].\n\n### thaw(id: `Compact<u32>`, who: `MultiAddress`)[\u200b](#thawid-compactu32-who-multiaddress-1 \"Direct link to thawid-compactu32-who-multiaddress-1\")\n\n*   **interface**: `api.tx.poolAssets.thaw`\n*   **summary**: See \\[`Pallet::thaw`\\].\n\n### thawAsset(id: `Compact<u32>`)[\u200b](#thawassetid-compactu32-1 \"Direct link to thawassetid-compactu32-1\")\n\n*   **interface**: `api.tx.poolAssets.thawAsset`\n*   **summary**: See \\[`Pallet::thaw_asset`\\].\n\n### touch(id: `Compact<u32>`)[\u200b](#touchid-compactu32-1 \"Direct link to touchid-compactu32-1\")\n\n*   **interface**: `api.tx.poolAssets.touch`\n*   **summary**: See \\[`Pallet::touch`\\].\n\n### touchOther(id: `Compact<u32>`, who: `MultiAddress`)[\u200b](#touchotherid-compactu32-who-multiaddress-1 \"Direct link to touchotherid-compactu32-who-multiaddress-1\")\n\n*   **interface**: `api.tx.poolAssets.touchOther`\n*   **summary**: See \\[`Pallet::touch_other`\\].\n\n### transfer(id: `Compact<u32>`, target: `MultiAddress`, amount: `Compact<u128>`)[\u200b](#transferid-compactu32-target-multiaddress-amount-compactu128-1 \"Direct link to transferid-compactu32-target-multiaddress-amount-compactu128-1\")\n\n*   **interface**: `api.tx.poolAssets.transfer`\n*   **summary**: See \\[`Pallet::transfer`\\].\n\n### transferApproved(id: `Compact<u32>`, owner: `MultiAddress`, destination: `MultiAddress`, amount: `Compact<u128>`)[\u200b](#transferapprovedid-compactu32-owner-multiaddress-destination-multiaddress-amount-compactu128-1 \"Direct link to transferapprovedid-compactu32-owner-multiaddress-destination-multiaddress-amount-compactu128-1\")\n\n*   **interface**: `api.tx.poolAssets.transferApproved`\n*   **summary**: See \\[`Pallet::transfer_approved`\\].\n\n### transferKeepAlive(id: `Compact<u32>`, target: `MultiAddress`, amount: `Compact<u128>`)[\u200b](#transferkeepaliveid-compactu32-target-multiaddress-amount-compactu128-1 \"Direct link to transferkeepaliveid-compactu32-target-multiaddress-amount-compactu128-1\")\n\n*   **interface**: `api.tx.poolAssets.transferKeepAlive`\n*   **summary**: See \\[`Pallet::transfer_keep_alive`\\].\n\n### transferOwnership(id: `Compact<u32>`, owner: `MultiAddress`)[\u200b](#transferownershipid-compactu32-owner-multiaddress-1 \"Direct link to transferownershipid-compactu32-owner-multiaddress-1\")\n\n*   **interface**: `api.tx.poolAssets.transferOwnership`\n*   **summary**: See \\[`Pallet::transfer_ownership`\\].\n\n* * *\n\npov[\u200b](#pov \"Direct link to pov\")\n\n----------------------------------\n\n### emitEvent()[\u200b](#emitevent \"Direct link to emitEvent()\")\n\n*   **interface**: `api.tx.pov.emitEvent`\n*   **summary**: See \\[`Pallet::emit_event`\\].\n\n### noop()[\u200b](#noop \"Direct link to noop()\")\n\n*   **interface**: `api.tx.pov.noop`\n*   **summary**: See \\[`Pallet::noop`\\].\n\n* * *\n\npreimage[\u200b](#preimage \"Direct link to preimage\")\n\n-------------------------------------------------\n\n### ensureUpdated(hashes: `Vec<H256>`)[\u200b](#ensureupdatedhashes-vech256 \"Direct link to ensureupdatedhashes-vech256\")\n\n*   **interface**: `api.tx.preimage.ensureUpdated`\n*   **summary**: See \\[`Pallet::ensure_updated`\\].\n\n### notePreimage(bytes: `Bytes`)[\u200b](#notepreimagebytes-bytes \"Direct link to notepreimagebytes-bytes\")\n\n*   **interface**: `api.tx.preimage.notePreimage`\n*   **summary**: See \\[`Pallet::note_preimage`\\].\n\n### requestPreimage(hash: `H256`)[\u200b](#requestpreimagehash-h256 \"Direct link to requestpreimagehash-h256\")\n\n*   **interface**: `api.tx.preimage.requestPreimage`\n*   **summary**: See \\[`Pallet::request_preimage`\\].\n\n### unnotePreimage(hash: `H256`)[\u200b](#unnotepreimagehash-h256 \"Direct link to unnotepreimagehash-h256\")\n\n*   **interface**: `api.tx.preimage.unnotePreimage`\n*   **summary**: See \\[`Pallet::unnote_preimage`\\].\n\n### unrequestPreimage(hash: `H256`)[\u200b](#unrequestpreimagehash-h256 \"Direct link to unrequestpreimagehash-h256\")\n\n*   **interface**: `api.tx.preimage.unrequestPreimage`\n*   **summary**: See \\[`Pallet::unrequest_preimage`\\].\n\n* * *\n\nproxy[\u200b](#proxy \"Direct link to proxy\")\n\n----------------------------------------\n\n### addProxy(delegate: `MultiAddress`, proxy\\_type: `KitchensinkRuntimeProxyType`, delay: `u32`)[\u200b](#addproxydelegate-multiaddress-proxy_type-kitchensinkruntimeproxytype-delay-u32 \"Direct link to addproxydelegate-multiaddress-proxy_type-kitchensinkruntimeproxytype-delay-u32\")\n\n*   **interface**: `api.tx.proxy.addProxy`\n*   **summary**: See \\[`Pallet::add_proxy`\\].\n\n### announce(real: `MultiAddress`, call\\_hash: `H256`)[\u200b](#announcereal-multiaddress-call_hash-h256 \"Direct link to announcereal-multiaddress-call_hash-h256\")\n\n*   **interface**: `api.tx.proxy.announce`\n*   **summary**: See \\[`Pallet::announce`\\].\n\n### createPure(proxy\\_type: `KitchensinkRuntimeProxyType`, delay: `u32`, index: `u16`)[\u200b](#createpureproxy_type-kitchensinkruntimeproxytype-delay-u32-index-u16 \"Direct link to createpureproxy_type-kitchensinkruntimeproxytype-delay-u32-index-u16\")\n\n*   **interface**: `api.tx.proxy.createPure`\n*   **summary**: See \\[`Pallet::create_pure`\\].\n\n### killPure(spawner: `MultiAddress`, proxy\\_type: `KitchensinkRuntimeProxyType`, index: `u16`, height: `Compact<u32>`, ext\\_index: `Compact<u32>`)[\u200b](#killpurespawner-multiaddress-proxy_type-kitchensinkruntimeproxytype-index-u16-height-compactu32-ext_index-compactu32 \"Direct link to killpurespawner-multiaddress-proxy_type-kitchensinkruntimeproxytype-index-u16-height-compactu32-ext_index-compactu32\")\n\n*   **interface**: `api.tx.proxy.killPure`\n*   **summary**: See \\[`Pallet::kill_pure`\\].\n\n### proxy(real: `MultiAddress`, force\\_proxy\\_type: `Option<KitchensinkRuntimeProxyType>`, call: `Call`)[\u200b](#proxyreal-multiaddress-force_proxy_type-optionkitchensinkruntimeproxytype-call-call \"Direct link to proxyreal-multiaddress-force_proxy_type-optionkitchensinkruntimeproxytype-call-call\")\n\n*   **interface**: `api.tx.proxy.proxy`\n*   **summary**: See \\[`Pallet::proxy`\\].\n\n### proxyAnnounced(delegate: `MultiAddress`, real: `MultiAddress`, force\\_proxy\\_type: `Option<KitchensinkRuntimeProxyType>`, call: `Call`)[\u200b](#proxyannounceddelegate-multiaddress-real-multiaddress-force_proxy_type-optionkitchensinkruntimeproxytype-call-call \"Direct link to proxyannounceddelegate-multiaddress-real-multiaddress-force_proxy_type-optionkitchensinkruntimeproxytype-call-call\")\n\n*   **interface**: `api.tx.proxy.proxyAnnounced`\n*   **summary**: See \\[`Pallet::proxy_announced`\\].\n\n### rejectAnnouncement(delegate: `MultiAddress`, call\\_hash: `H256`)[\u200b](#rejectannouncementdelegate-multiaddress-call_hash-h256 \"Direct link to rejectannouncementdelegate-multiaddress-call_hash-h256\")\n\n*   **interface**: `api.tx.proxy.rejectAnnouncement`\n*   **summary**: See \\[`Pallet::reject_announcement`\\].\n\n### removeAnnouncement(real: `MultiAddress`, call\\_hash: `H256`)[\u200b](#removeannouncementreal-multiaddress-call_hash-h256 \"Direct link to removeannouncementreal-multiaddress-call_hash-h256\")\n\n*   **interface**: `api.tx.proxy.removeAnnouncement`\n*   **summary**: See \\[`Pallet::remove_announcement`\\].\n\n### removeProxies()[\u200b](#removeproxies \"Direct link to removeProxies()\")\n\n*   **interface**: `api.tx.proxy.removeProxies`\n*   **summary**: See \\[`Pallet::remove_proxies`\\].\n\n### removeProxy(delegate: `MultiAddress`, proxy\\_type: `KitchensinkRuntimeProxyType`, delay: `u32`)[\u200b](#removeproxydelegate-multiaddress-proxy_type-kitchensinkruntimeproxytype-delay-u32 \"Direct link to removeproxydelegate-multiaddress-proxy_type-kitchensinkruntimeproxytype-delay-u32\")\n\n*   **interface**: `api.tx.proxy.removeProxy`\n*   **summary**: See \\[`Pallet::remove_proxy`\\].\n\n* * *\n\nrankedCollective[\u200b](#rankedcollective \"Direct link to rankedCollective\")\n\n-------------------------------------------------------------------------\n\n### addMember(who: `MultiAddress`)[\u200b](#addmemberwho-multiaddress \"Direct link to addmemberwho-multiaddress\")\n\n*   **interface**: `api.tx.rankedCollective.addMember`\n*   **summary**: See \\[`Pallet::add_member`\\].\n\n### cleanupPoll(poll\\_index: `u32`, max: `u32`)[\u200b](#cleanuppollpoll_index-u32-max-u32 \"Direct link to cleanuppollpoll_index-u32-max-u32\")\n\n*   **interface**: `api.tx.rankedCollective.cleanupPoll`\n*   **summary**: See \\[`Pallet::cleanup_poll`\\].\n\n### demoteMember(who: `MultiAddress`)[\u200b](#demotememberwho-multiaddress \"Direct link to demotememberwho-multiaddress\")\n\n*   **interface**: `api.tx.rankedCollective.demoteMember`\n*   **summary**: See \\[`Pallet::demote_member`\\].\n\n### promoteMember(who: `MultiAddress`)[\u200b](#promotememberwho-multiaddress \"Direct link to promotememberwho-multiaddress\")\n\n*   **interface**: `api.tx.rankedCollective.promoteMember`\n*   **summary**: See \\[`Pallet::promote_member`\\].\n\n### removeMember(who: `MultiAddress`, min\\_rank: `u16`)[\u200b](#removememberwho-multiaddress-min_rank-u16 \"Direct link to removememberwho-multiaddress-min_rank-u16\")\n\n*   **interface**: `api.tx.rankedCollective.removeMember`\n*   **summary**: See \\[`Pallet::remove_member`\\].\n\n### vote(poll: `u32`, aye: `bool`)[\u200b](#votepoll-u32-aye-bool \"Direct link to votepoll-u32-aye-bool\")\n\n*   **interface**: `api.tx.rankedCollective.vote`\n*   **summary**: See \\[`Pallet::vote`\\].\n\n* * *\n\nrankedPolls[\u200b](#rankedpolls \"Direct link to rankedPolls\")\n\n----------------------------------------------------------\n\n### cancel(index: `u32`)[\u200b](#cancelindex-u32 \"Direct link to cancelindex-u32\")\n\n*   **interface**: `api.tx.rankedPolls.cancel`\n*   **summary**: See \\[`Pallet::cancel`\\].\n\n### kill(index: `u32`)[\u200b](#killindex-u32 \"Direct link to killindex-u32\")\n\n*   **interface**: `api.tx.rankedPolls.kill`\n*   **summary**: See \\[`Pallet::kill`\\].\n\n### nudgeReferendum(index: `u32`)[\u200b](#nudgereferendumindex-u32 \"Direct link to nudgereferendumindex-u32\")\n\n*   **interface**: `api.tx.rankedPolls.nudgeReferendum`\n*   **summary**: See \\[`Pallet::nudge_referendum`\\].\n\n### oneFewerDeciding(track: `u16`)[\u200b](#onefewerdecidingtrack-u16 \"Direct link to onefewerdecidingtrack-u16\")\n\n*   **interface**: `api.tx.rankedPolls.oneFewerDeciding`\n*   **summary**: See \\[`Pallet::one_fewer_deciding`\\].\n\n### placeDecisionDeposit(index: `u32`)[\u200b](#placedecisiondepositindex-u32 \"Direct link to placedecisiondepositindex-u32\")\n\n*   **interface**: `api.tx.rankedPolls.placeDecisionDeposit`\n*   **summary**: See \\[`Pallet::place_decision_deposit`\\].\n\n### refundDecisionDeposit(index: `u32`)[\u200b](#refunddecisiondepositindex-u32 \"Direct link to refunddecisiondepositindex-u32\")\n\n*   **interface**: `api.tx.rankedPolls.refundDecisionDeposit`\n*   **summary**: See \\[`Pallet::refund_decision_deposit`\\].\n\n### refundSubmissionDeposit(index: `u32`)[\u200b](#refundsubmissiondepositindex-u32 \"Direct link to refundsubmissiondepositindex-u32\")\n\n*   **interface**: `api.tx.rankedPolls.refundSubmissionDeposit`\n*   **summary**: See \\[`Pallet::refund_submission_deposit`\\].\n\n### setMetadata(index: `u32`, maybe\\_hash: `Option<H256>`)[\u200b](#setmetadataindex-u32-maybe_hash-optionh256 \"Direct link to setmetadataindex-u32-maybe_hash-optionh256\")\n\n*   **interface**: `api.tx.rankedPolls.setMetadata`\n*   **summary**: See \\[`Pallet::set_metadata`\\].\n\n### submit(proposal\\_origin: `KitchensinkRuntimeOriginCaller`, proposal: `FrameSupportPreimagesBounded`, enactment\\_moment: `FrameSupportScheduleDispatchTime`)[\u200b](#submitproposal_origin-kitchensinkruntimeorigincaller-proposal-framesupportpreimagesbounded-enactment_moment-framesupportscheduledispatchtime \"Direct link to submitproposal_origin-kitchensinkruntimeorigincaller-proposal-framesupportpreimagesbounded-enactment_moment-framesupportscheduledispatchtime\")\n\n*   **interface**: `api.tx.rankedPolls.submit`\n*   **summary**: See \\[`Pallet::submit`\\].\n\n* * *\n\nrecovery[\u200b](#recovery \"Direct link to recovery\")\n\n-------------------------------------------------\n\n### asRecovered(account: `MultiAddress`, call: `Call`)[\u200b](#asrecoveredaccount-multiaddress-call-call \"Direct link to asrecoveredaccount-multiaddress-call-call\")\n\n*   **interface**: `api.tx.recovery.asRecovered`\n*   **summary**: See \\[`Pallet::as_recovered`\\].\n\n### cancelRecovered(account: `MultiAddress`)[\u200b](#cancelrecoveredaccount-multiaddress \"Direct link to cancelrecoveredaccount-multiaddress\")\n\n*   **interface**: `api.tx.recovery.cancelRecovered`\n*   **summary**: See \\[`Pallet::cancel_recovered`\\].\n\n### claimRecovery(account: `MultiAddress`)[\u200b](#claimrecoveryaccount-multiaddress \"Direct link to claimrecoveryaccount-multiaddress\")\n\n*   **interface**: `api.tx.recovery.claimRecovery`\n*   **summary**: See \\[`Pallet::claim_recovery`\\].\n\n### closeRecovery(rescuer: `MultiAddress`)[\u200b](#closerecoveryrescuer-multiaddress \"Direct link to closerecoveryrescuer-multiaddress\")\n\n*   **interface**: `api.tx.recovery.closeRecovery`\n*   **summary**: See \\[`Pallet::close_recovery`\\].\n\n### createRecovery(friends: `Vec<AccountId32>`, threshold: `u16`, delay\\_period: `u32`)[\u200b](#createrecoveryfriends-vecaccountid32-threshold-u16-delay_period-u32 \"Direct link to createrecoveryfriends-vecaccountid32-threshold-u16-delay_period-u32\")\n\n*   **interface**: `api.tx.recovery.createRecovery`\n*   **summary**: See \\[`Pallet::create_recovery`\\].\n\n### initiateRecovery(account: `MultiAddress`)[\u200b](#initiaterecoveryaccount-multiaddress \"Direct link to initiaterecoveryaccount-multiaddress\")\n\n*   **interface**: `api.tx.recovery.initiateRecovery`\n*   **summary**: See \\[`Pallet::initiate_recovery`\\].\n\n### removeRecovery()[\u200b](#removerecovery \"Direct link to removeRecovery()\")\n\n*   **interface**: `api.tx.recovery.removeRecovery`\n*   **summary**: See \\[`Pallet::remove_recovery`\\].\n\n### setRecovered(lost: `MultiAddress`, rescuer: `MultiAddress`)[\u200b](#setrecoveredlost-multiaddress-rescuer-multiaddress \"Direct link to setrecoveredlost-multiaddress-rescuer-multiaddress\")\n\n*   **interface**: `api.tx.recovery.setRecovered`\n*   **summary**: See \\[`Pallet::set_recovered`\\].\n\n### vouchRecovery(lost: `MultiAddress`, rescuer: `MultiAddress`)[\u200b](#vouchrecoverylost-multiaddress-rescuer-multiaddress \"Direct link to vouchrecoverylost-multiaddress-rescuer-multiaddress\")\n\n*   **interface**: `api.tx.recovery.vouchRecovery`\n*   **summary**: See \\[`Pallet::vouch_recovery`\\].\n\n* * *\n\nreferenda[\u200b](#referenda \"Direct link to referenda\")\n\n----------------------------------------------------\n\n### cancel(index: `u32`)[\u200b](#cancelindex-u32-1 \"Direct link to cancelindex-u32-1\")\n\n*   **interface**: `api.tx.referenda.cancel`\n*   **summary**: See \\[`Pallet::cancel`\\].\n\n### kill(index: `u32`)[\u200b](#killindex-u32-1 \"Direct link to killindex-u32-1\")\n\n*   **interface**: `api.tx.referenda.kill`\n*   **summary**: See \\[`Pallet::kill`\\].\n\n### nudgeReferendum(index: `u32`)[\u200b](#nudgereferendumindex-u32-1 \"Direct link to nudgereferendumindex-u32-1\")\n\n*   **interface**: `api.tx.referenda.nudgeReferendum`\n*   **summary**: See \\[`Pallet::nudge_referendum`\\].\n\n### oneFewerDeciding(track: `u16`)[\u200b](#onefewerdecidingtrack-u16-1 \"Direct link to onefewerdecidingtrack-u16-1\")\n\n*   **interface**: `api.tx.referenda.oneFewerDeciding`\n*   **summary**: See \\[`Pallet::one_fewer_deciding`\\].\n\n### placeDecisionDeposit(index: `u32`)[\u200b](#placedecisiondepositindex-u32-1 \"Direct link to placedecisiondepositindex-u32-1\")\n\n*   **interface**: `api.tx.referenda.placeDecisionDeposit`\n*   **summary**: See \\[`Pallet::place_decision_deposit`\\].\n\n### refundDecisionDeposit(index: `u32`)[\u200b](#refunddecisiondepositindex-u32-1 \"Direct link to refunddecisiondepositindex-u32-1\")\n\n*   **interface**: `api.tx.referenda.refundDecisionDeposit`\n*   **summary**: See \\[`Pallet::refund_decision_deposit`\\].\n\n### refundSubmissionDeposit(index: `u32`)[\u200b](#refundsubmissiondepositindex-u32-1 \"Direct link to refundsubmissiondepositindex-u32-1\")\n\n*   **interface**: `api.tx.referenda.refundSubmissionDeposit`\n*   **summary**: See \\[`Pallet::refund_submission_deposit`\\].\n\n### setMetadata(index: `u32`, maybe\\_hash: `Option<H256>`)[\u200b](#setmetadataindex-u32-maybe_hash-optionh256-1 \"Direct link to setmetadataindex-u32-maybe_hash-optionh256-1\")\n\n*   **interface**: `api.tx.referenda.setMetadata`\n*   **summary**: See \\[`Pallet::set_metadata`\\].\n\n### submit(proposal\\_origin: `KitchensinkRuntimeOriginCaller`, proposal: `FrameSupportPreimagesBounded`, enactment\\_moment: `FrameSupportScheduleDispatchTime`)[\u200b](#submitproposal_origin-kitchensinkruntimeorigincaller-proposal-framesupportpreimagesbounded-enactment_moment-framesupportscheduledispatchtime-1 \"Direct link to submitproposal_origin-kitchensinkruntimeorigincaller-proposal-framesupportpreimagesbounded-enactment_moment-framesupportscheduledispatchtime-1\")\n\n*   **interface**: `api.tx.referenda.submit`\n*   **summary**: See \\[`Pallet::submit`\\].\n\n* * *\n\nremark[\u200b](#remark \"Direct link to remark\")\n\n-------------------------------------------\n\n### store(remark: `Bytes`)[\u200b](#storeremark-bytes \"Direct link to storeremark-bytes\")\n\n*   **interface**: `api.tx.remark.store`\n*   **summary**: See \\[`Pallet::store`\\].\n\n* * *\n\nrootTesting[\u200b](#roottesting \"Direct link to rootTesting\")\n\n----------------------------------------------------------\n\n### fillBlock(ratio: `Perbill`)[\u200b](#fillblockratio-perbill \"Direct link to fillblockratio-perbill\")\n\n*   **interface**: `api.tx.rootTesting.fillBlock`\n*   **summary**: See `Pallet::fill_block`.\n\n### triggerDefensive()[\u200b](#triggerdefensive \"Direct link to triggerDefensive()\")\n\n*   **interface**: `api.tx.rootTesting.triggerDefensive`\n*   **summary**: See `Pallet::trigger_defensive`.\n\n* * *\n\nsafeMode[\u200b](#safemode \"Direct link to safeMode\")\n\n-------------------------------------------------\n\n### enter()[\u200b](#enter \"Direct link to enter()\")\n\n*   **interface**: `api.tx.safeMode.enter`\n*   **summary**: See \\[`Pallet::enter`\\].\n\n### extend()[\u200b](#extend \"Direct link to extend()\")\n\n*   **interface**: `api.tx.safeMode.extend`\n*   **summary**: See \\[`Pallet::extend`\\].\n\n### forceEnter()[\u200b](#forceenter \"Direct link to forceEnter()\")\n\n*   **interface**: `api.tx.safeMode.forceEnter`\n*   **summary**: See \\[`Pallet::force_enter`\\].\n\n### forceExit()[\u200b](#forceexit \"Direct link to forceExit()\")\n\n*   **interface**: `api.tx.safeMode.forceExit`\n*   **summary**: See \\[`Pallet::force_exit`\\].\n\n### forceExtend()[\u200b](#forceextend \"Direct link to forceExtend()\")\n\n*   **interface**: `api.tx.safeMode.forceExtend`\n*   **summary**: See \\[`Pallet::force_extend`\\].\n\n### forceReleaseDeposit(account: `AccountId32`, block: `u32`)[\u200b](#forcereleasedepositaccount-accountid32-block-u32 \"Direct link to forcereleasedepositaccount-accountid32-block-u32\")\n\n*   **interface**: `api.tx.safeMode.forceReleaseDeposit`\n*   **summary**: See \\[`Pallet::force_release_deposit`\\].\n\n### forceSlashDeposit(account: `AccountId32`, block: `u32`)[\u200b](#forceslashdepositaccount-accountid32-block-u32 \"Direct link to forceslashdepositaccount-accountid32-block-u32\")\n\n*   **interface**: `api.tx.safeMode.forceSlashDeposit`\n*   **summary**: See \\[`Pallet::force_slash_deposit`\\].\n\n### releaseDeposit(account: `AccountId32`, block: `u32`)[\u200b](#releasedepositaccount-accountid32-block-u32 \"Direct link to releasedepositaccount-accountid32-block-u32\")\n\n*   **interface**: `api.tx.safeMode.releaseDeposit`\n*   **summary**: See \\[`Pallet::release_deposit`\\].\n\n* * *\n\nsalary[\u200b](#salary \"Direct link to salary\")\n\n-------------------------------------------\n\n### bump()[\u200b](#bump \"Direct link to bump()\")\n\n*   **interface**: `api.tx.salary.bump`\n*   **summary**: See \\[`Pallet::bump`\\].\n\n### checkPayment()[\u200b](#checkpayment \"Direct link to checkPayment()\")\n\n*   **interface**: `api.tx.salary.checkPayment`\n*   **summary**: See \\[`Pallet::check_payment`\\].\n\n### induct()[\u200b](#induct \"Direct link to induct()\")\n\n*   **interface**: `api.tx.salary.induct`\n*   **summary**: See \\[`Pallet::induct`\\].\n\n### init()[\u200b](#init \"Direct link to init()\")\n\n*   **interface**: `api.tx.salary.init`\n*   **summary**: See \\[`Pallet::init`\\].\n\n### payout()[\u200b](#payout \"Direct link to payout()\")\n\n*   **interface**: `api.tx.salary.payout`\n*   **summary**: See \\[`Pallet::payout`\\].\n\n### payoutOther(beneficiary: `AccountId32`)[\u200b](#payoutotherbeneficiary-accountid32 \"Direct link to payoutotherbeneficiary-accountid32\")\n\n*   **interface**: `api.tx.salary.payoutOther`\n*   **summary**: See \\[`Pallet::payout_other`\\].\n\n### register()[\u200b](#register \"Direct link to register()\")\n\n*   **interface**: `api.tx.salary.register`\n*   **summary**: See \\[`Pallet::register`\\].\n\n* * *\n\nscheduler[\u200b](#scheduler \"Direct link to scheduler\")\n\n----------------------------------------------------\n\n### cancel(when: `u32`, index: `u32`)[\u200b](#cancelwhen-u32-index-u32 \"Direct link to cancelwhen-u32-index-u32\")\n\n*   **interface**: `api.tx.scheduler.cancel`\n*   **summary**: See \\[`Pallet::cancel`\\].\n\n### cancelNamed(id: `[u8;32]`)[\u200b](#cancelnamedid-u832 \"Direct link to cancelnamedid-u832\")\n\n*   **interface**: `api.tx.scheduler.cancelNamed`\n*   **summary**: See \\[`Pallet::cancel_named`\\].\n\n### schedule(when: `u32`, maybe\\_periodic: `Option<(u32,u32)>`, priority: `u8`, call: `Call`)[\u200b](#schedulewhen-u32-maybe_periodic-optionu32u32-priority-u8-call-call \"Direct link to schedulewhen-u32-maybe_periodic-optionu32u32-priority-u8-call-call\")\n\n*   **interface**: `api.tx.scheduler.schedule`\n*   **summary**: See \\[`Pallet::schedule`\\].\n\n### scheduleAfter(after: `u32`, maybe\\_periodic: `Option<(u32,u32)>`, priority: `u8`, call: `Call`)[\u200b](#scheduleafterafter-u32-maybe_periodic-optionu32u32-priority-u8-call-call \"Direct link to scheduleafterafter-u32-maybe_periodic-optionu32u32-priority-u8-call-call\")\n\n*   **interface**: `api.tx.scheduler.scheduleAfter`\n*   **summary**: See \\[`Pallet::schedule_after`\\].\n\n### scheduleNamed(id: `[u8;32]`, when: `u32`, maybe\\_periodic: `Option<(u32,u32)>`, priority: `u8`, call: `Call`)[\u200b](#schedulenamedid-u832-when-u32-maybe_periodic-optionu32u32-priority-u8-call-call \"Direct link to schedulenamedid-u832-when-u32-maybe_periodic-optionu32u32-priority-u8-call-call\")\n\n*   **interface**: `api.tx.scheduler.scheduleNamed`\n*   **summary**: See \\[`Pallet::schedule_named`\\].\n\n### scheduleNamedAfter(id: `[u8;32]`, after: `u32`, maybe\\_periodic: `Option<(u32,u32)>`, priority: `u8`, call: `Call`)[\u200b](#schedulenamedafterid-u832-after-u32-maybe_periodic-optionu32u32-priority-u8-call-call \"Direct link to schedulenamedafterid-u832-after-u32-maybe_periodic-optionu32u32-priority-u8-call-call\")\n\n*   **interface**: `api.tx.scheduler.scheduleNamedAfter`\n*   **summary**: See \\[`Pallet::schedule_named_after`\\].\n\n* * *\n\nsession[\u200b](#session \"Direct link to session\")\n\n----------------------------------------------\n\n### purgeKeys()[\u200b](#purgekeys \"Direct link to purgeKeys()\")\n\n*   **interface**: `api.tx.session.purgeKeys`\n*   **summary**: See \\[`Pallet::purge_keys`\\].\n\n### setKeys(keys: `KitchensinkRuntimeSessionKeys`, proof: `Bytes`)[\u200b](#setkeyskeys-kitchensinkruntimesessionkeys-proof-bytes \"Direct link to setkeyskeys-kitchensinkruntimesessionkeys-proof-bytes\")\n\n*   **interface**: `api.tx.session.setKeys`\n*   **summary**: See \\[`Pallet::set_keys`\\].\n\n* * *\n\nsociety[\u200b](#society \"Direct link to society\")\n\n----------------------------------------------\n\n### bestowMembership(candidate: `AccountId32`)[\u200b](#bestowmembershipcandidate-accountid32 \"Direct link to bestowmembershipcandidate-accountid32\")\n\n*   **interface**: `api.tx.society.bestowMembership`\n*   **summary**: See \\[`Pallet::bestow_membership`\\].\n\n### bid(value: `u128`)[\u200b](#bidvalue-u128 \"Direct link to bidvalue-u128\")\n\n*   **interface**: `api.tx.society.bid`\n*   **summary**: See \\[`Pallet::bid`\\].\n\n### claimMembership()[\u200b](#claimmembership \"Direct link to claimMembership()\")\n\n*   **interface**: `api.tx.society.claimMembership`\n*   **summary**: See \\[`Pallet::claim_membership`\\].\n\n### cleanupCandidacy(candidate: `AccountId32`, max: `u32`)[\u200b](#cleanupcandidacycandidate-accountid32-max-u32 \"Direct link to cleanupcandidacycandidate-accountid32-max-u32\")\n\n*   **interface**: `api.tx.society.cleanupCandidacy`\n*   **summary**: See \\[`Pallet::cleanup_candidacy`\\].\n\n### cleanupChallenge(challenge\\_round: `u32`, max: `u32`)[\u200b](#cleanupchallengechallenge_round-u32-max-u32 \"Direct link to cleanupchallengechallenge_round-u32-max-u32\")\n\n*   **interface**: `api.tx.society.cleanupChallenge`\n*   **summary**: See \\[`Pallet::cleanup_challenge`\\].\n\n### defenderVote(approve: `bool`)[\u200b](#defendervoteapprove-bool \"Direct link to defendervoteapprove-bool\")\n\n*   **interface**: `api.tx.society.defenderVote`\n*   **summary**: See \\[`Pallet::defender_vote`\\].\n\n### dissolve()[\u200b](#dissolve \"Direct link to dissolve()\")\n\n*   **interface**: `api.tx.society.dissolve`\n*   **summary**: See \\[`Pallet::dissolve`\\].\n\n### dropCandidate(candidate: `AccountId32`)[\u200b](#dropcandidatecandidate-accountid32 \"Direct link to dropcandidatecandidate-accountid32\")\n\n*   **interface**: `api.tx.society.dropCandidate`\n*   **summary**: See \\[`Pallet::drop_candidate`\\].\n\n### foundSociety(founder: `MultiAddress`, max\\_members: `u32`, max\\_intake: `u32`, max\\_strikes: `u32`, candidate\\_deposit: `u128`, rules: `Bytes`)[\u200b](#foundsocietyfounder-multiaddress-max_members-u32-max_intake-u32-max_strikes-u32-candidate_deposit-u128-rules-bytes \"Direct link to foundsocietyfounder-multiaddress-max_members-u32-max_intake-u32-max_strikes-u32-candidate_deposit-u128-rules-bytes\")\n\n*   **interface**: `api.tx.society.foundSociety`\n*   **summary**: See \\[`Pallet::found_society`\\].\n\n### judgeSuspendedMember(who: `MultiAddress`, forgive: `bool`)[\u200b](#judgesuspendedmemberwho-multiaddress-forgive-bool \"Direct link to judgesuspendedmemberwho-multiaddress-forgive-bool\")\n\n*   **interface**: `api.tx.society.judgeSuspendedMember`\n*   **summary**: See \\[`Pallet::judge_suspended_member`\\].\n\n### kickCandidate(candidate: `AccountId32`)[\u200b](#kickcandidatecandidate-accountid32 \"Direct link to kickcandidatecandidate-accountid32\")\n\n*   **interface**: `api.tx.society.kickCandidate`\n*   **summary**: See \\[`Pallet::kick_candidate`\\].\n\n### payout()[\u200b](#payout-1 \"Direct link to payout()\")\n\n*   **interface**: `api.tx.society.payout`\n*   **summary**: See \\[`Pallet::payout`\\].\n\n### punishSkeptic()[\u200b](#punishskeptic \"Direct link to punishSkeptic()\")\n\n*   **interface**: `api.tx.society.punishSkeptic`\n*   **summary**: See \\[`Pallet::punish_skeptic`\\].\n\n### resignCandidacy()[\u200b](#resigncandidacy \"Direct link to resignCandidacy()\")\n\n*   **interface**: `api.tx.society.resignCandidacy`\n*   **summary**: See \\[`Pallet::resign_candidacy`\\].\n\n### setParameters(max\\_members: `u32`, max\\_intake: `u32`, max\\_strikes: `u32`, candidate\\_deposit: `u128`)[\u200b](#setparametersmax_members-u32-max_intake-u32-max_strikes-u32-candidate_deposit-u128 \"Direct link to setparametersmax_members-u32-max_intake-u32-max_strikes-u32-candidate_deposit-u128\")\n\n*   **interface**: `api.tx.society.setParameters`\n*   **summary**: See \\[`Pallet::set_parameters`\\].\n\n### unbid()[\u200b](#unbid \"Direct link to unbid()\")\n\n*   **interface**: `api.tx.society.unbid`\n*   **summary**: See \\[`Pallet::unbid`\\].\n\n### unvouch()[\u200b](#unvouch \"Direct link to unvouch()\")\n\n*   **interface**: `api.tx.society.unvouch`\n*   **summary**: See \\[`Pallet::unvouch`\\].\n\n### vote(candidate: `MultiAddress`, approve: `bool`)[\u200b](#votecandidate-multiaddress-approve-bool \"Direct link to votecandidate-multiaddress-approve-bool\")\n\n*   **interface**: `api.tx.society.vote`\n*   **summary**: See \\[`Pallet::vote`\\].\n\n### vouch(who: `MultiAddress`, value: `u128`, tip: `u128`)[\u200b](#vouchwho-multiaddress-value-u128-tip-u128 \"Direct link to vouchwho-multiaddress-value-u128-tip-u128\")\n\n*   **interface**: `api.tx.society.vouch`\n*   **summary**: See \\[`Pallet::vouch`\\].\n\n### waiveRepay(amount: `u128`)[\u200b](#waiverepayamount-u128 \"Direct link to waiverepayamount-u128\")\n\n*   **interface**: `api.tx.society.waiveRepay`\n*   **summary**: See \\[`Pallet::waive_repay`\\].\n\n* * *\n\nstaking[\u200b](#staking \"Direct link to staking\")\n\n----------------------------------------------\n\n### bond(value: `Compact<u128>`, payee: `PalletStakingRewardDestination`)[\u200b](#bondvalue-compactu128-payee-palletstakingrewarddestination \"Direct link to bondvalue-compactu128-payee-palletstakingrewarddestination\")\n\n*   **interface**: `api.tx.staking.bond`\n*   **summary**: See \\[`Pallet::bond`\\].\n\n### bondExtra(max\\_additional: `Compact<u128>`)[\u200b](#bondextramax_additional-compactu128 \"Direct link to bondextramax_additional-compactu128\")\n\n*   **interface**: `api.tx.staking.bondExtra`\n*   **summary**: See \\[`Pallet::bond_extra`\\].\n\n### cancelDeferredSlash(era: `u32`, slash\\_indices: `Vec<u32>`)[\u200b](#canceldeferredslashera-u32-slash_indices-vecu32 \"Direct link to canceldeferredslashera-u32-slash_indices-vecu32\")\n\n*   **interface**: `api.tx.staking.cancelDeferredSlash`\n*   **summary**: See \\[`Pallet::cancel_deferred_slash`\\].\n\n### chill()[\u200b](#chill \"Direct link to chill()\")\n\n*   **interface**: `api.tx.staking.chill`\n*   **summary**: See \\[`Pallet::chill`\\].\n\n### chillOther(stash: `AccountId32`)[\u200b](#chillotherstash-accountid32 \"Direct link to chillotherstash-accountid32\")\n\n*   **interface**: `api.tx.staking.chillOther`\n*   **summary**: See \\[`Pallet::chill_other`\\].\n\n### forceApplyMinCommission(validator\\_stash: `AccountId32`)[\u200b](#forceapplymincommissionvalidator_stash-accountid32 \"Direct link to forceapplymincommissionvalidator_stash-accountid32\")\n\n*   **interface**: `api.tx.staking.forceApplyMinCommission`\n*   **summary**: See \\[`Pallet::force_apply_min_commission`\\].\n\n### forceNewEra()[\u200b](#forcenewera \"Direct link to forceNewEra()\")\n\n*   **interface**: `api.tx.staking.forceNewEra`\n*   **summary**: See \\[`Pallet::force_new_era`\\].\n\n### forceNewEraAlways()[\u200b](#forceneweraalways \"Direct link to forceNewEraAlways()\")\n\n*   **interface**: `api.tx.staking.forceNewEraAlways`\n*   **summary**: See \\[`Pallet::force_new_era_always`\\].\n\n### forceNoEras()[\u200b](#forcenoeras \"Direct link to forceNoEras()\")\n\n*   **interface**: `api.tx.staking.forceNoEras`\n*   **summary**: See \\[`Pallet::force_no_eras`\\].\n\n### forceUnstake(stash: `AccountId32`, num\\_slashing\\_spans: `u32`)[\u200b](#forceunstakestash-accountid32-num_slashing_spans-u32 \"Direct link to forceunstakestash-accountid32-num_slashing_spans-u32\")\n\n*   **interface**: `api.tx.staking.forceUnstake`\n*   **summary**: See \\[`Pallet::force_unstake`\\].\n\n### increaseValidatorCount(additional: `Compact<u32>`)[\u200b](#increasevalidatorcountadditional-compactu32 \"Direct link to increasevalidatorcountadditional-compactu32\")\n\n*   **interface**: `api.tx.staking.increaseValidatorCount`\n*   **summary**: See \\[`Pallet::increase_validator_count`\\].\n\n### kick(who: `Vec<MultiAddress>`)[\u200b](#kickwho-vecmultiaddress \"Direct link to kickwho-vecmultiaddress\")\n\n*   **interface**: `api.tx.staking.kick`\n*   **summary**: See \\[`Pallet::kick`\\].\n\n### nominate(targets: `Vec<MultiAddress>`)[\u200b](#nominatetargets-vecmultiaddress \"Direct link to nominatetargets-vecmultiaddress\")\n\n*   **interface**: `api.tx.staking.nominate`\n*   **summary**: See \\[`Pallet::nominate`\\].\n\n### payoutStakers(validator\\_stash: `AccountId32`, era: `u32`)[\u200b](#payoutstakersvalidator_stash-accountid32-era-u32 \"Direct link to payoutstakersvalidator_stash-accountid32-era-u32\")\n\n*   **interface**: `api.tx.staking.payoutStakers`\n*   **summary**: See \\[`Pallet::payout_stakers`\\].\n\n### payoutStakersByPage(validator\\_stash: `AccountId32`, era: `u32`, page: `u32`)[\u200b](#payoutstakersbypagevalidator_stash-accountid32-era-u32-page-u32 \"Direct link to payoutstakersbypagevalidator_stash-accountid32-era-u32-page-u32\")\n\n*   **interface**: `api.tx.staking.payoutStakersByPage`\n*   **summary**: See \\[`Pallet::payout_stakers_by_page`\\].\n\n### reapStash(stash: `AccountId32`, num\\_slashing\\_spans: `u32`)[\u200b](#reapstashstash-accountid32-num_slashing_spans-u32 \"Direct link to reapstashstash-accountid32-num_slashing_spans-u32\")\n\n*   **interface**: `api.tx.staking.reapStash`\n*   **summary**: See \\[`Pallet::reap_stash`\\].\n\n### rebond(value: `Compact<u128>`)[\u200b](#rebondvalue-compactu128 \"Direct link to rebondvalue-compactu128\")\n\n*   **interface**: `api.tx.staking.rebond`\n*   **summary**: See \\[`Pallet::rebond`\\].\n\n### scaleValidatorCount(factor: `Percent`)[\u200b](#scalevalidatorcountfactor-percent \"Direct link to scalevalidatorcountfactor-percent\")\n\n*   **interface**: `api.tx.staking.scaleValidatorCount`\n*   **summary**: See \\[`Pallet::scale_validator_count`\\].\n\n### setController()[\u200b](#setcontroller \"Direct link to setController()\")\n\n*   **interface**: `api.tx.staking.setController`\n*   **summary**: See \\[`Pallet::set_controller`\\].\n\n### setInvulnerables(invulnerables: `Vec<AccountId32>`)[\u200b](#setinvulnerablesinvulnerables-vecaccountid32 \"Direct link to setinvulnerablesinvulnerables-vecaccountid32\")\n\n*   **interface**: `api.tx.staking.setInvulnerables`\n*   **summary**: See \\[`Pallet::set_invulnerables`\\].\n\n### setMinCommission(new: `Perbill`)[\u200b](#setmincommissionnew-perbill \"Direct link to setmincommissionnew-perbill\")\n\n*   **interface**: `api.tx.staking.setMinCommission`\n*   **summary**: See \\[`Pallet::set_min_commission`\\].\n\n### setPayee(payee: `PalletStakingRewardDestination`)[\u200b](#setpayeepayee-palletstakingrewarddestination \"Direct link to setpayeepayee-palletstakingrewarddestination\")\n\n*   **interface**: `api.tx.staking.setPayee`\n*   **summary**: See \\[`Pallet::set_payee`\\].\n\n### setStakingConfigs(min\\_nominator\\_bond: `PalletStakingPalletConfigOpU128`, min\\_validator\\_bond: `PalletStakingPalletConfigOpU128`, max\\_nominator\\_count: `PalletStakingPalletConfigOpU32`, max\\_validator\\_count: `PalletStakingPalletConfigOpU32`, chill\\_threshold: `PalletStakingPalletConfigOpPercent`, min\\_commission: `PalletStakingPalletConfigOpPerbill`)[\u200b](#setstakingconfigsmin_nominator_bond-palletstakingpalletconfigopu128-min_validator_bond-palletstakingpalletconfigopu128-max_nominator_count-palletstakingpalletconfigopu32-max_validator_count-palletstakingpalletconfigopu32-chill_threshold-palletstakingpalletconfigoppercent-min_commission-palletstakingpalletconfigopperbill \"Direct link to setstakingconfigsmin_nominator_bond-palletstakingpalletconfigopu128-min_validator_bond-palletstakingpalletconfigopu128-max_nominator_count-palletstakingpalletconfigopu32-max_validator_count-palletstakingpalletconfigopu32-chill_threshold-palletstakingpalletconfigoppercent-min_commission-palletstakingpalletconfigopperbill\")\n\n*   **interface**: `api.tx.staking.setStakingConfigs`\n*   **summary**: See \\[`Pallet::set_staking_configs`\\].\n\n### setValidatorCount(new: `Compact<u32>`)[\u200b](#setvalidatorcountnew-compactu32 \"Direct link to setvalidatorcountnew-compactu32\")\n\n*   **interface**: `api.tx.staking.setValidatorCount`\n*   **summary**: See \\[`Pallet::set_validator_count`\\].\n\n### unbond(value: `Compact<u128>`)[\u200b](#unbondvalue-compactu128 \"Direct link to unbondvalue-compactu128\")\n\n*   **interface**: `api.tx.staking.unbond`\n*   **summary**: See \\[`Pallet::unbond`\\].\n\n### updatePayee(controller: `AccountId32`)[\u200b](#updatepayeecontroller-accountid32 \"Direct link to updatepayeecontroller-accountid32\")\n\n*   **interface**: `api.tx.staking.updatePayee`\n*   **summary**: See \\[`Pallet::update_payee`\\].\n\n### validate(prefs: `PalletStakingValidatorPrefs`)[\u200b](#validateprefs-palletstakingvalidatorprefs \"Direct link to validateprefs-palletstakingvalidatorprefs\")\n\n*   **interface**: `api.tx.staking.validate`\n*   **summary**: See \\[`Pallet::validate`\\].\n\n### withdrawUnbonded(num\\_slashing\\_spans: `u32`)[\u200b](#withdrawunbondednum_slashing_spans-u32 \"Direct link to withdrawunbondednum_slashing_spans-u32\")\n\n*   **interface**: `api.tx.staking.withdrawUnbonded`\n*   **summary**: See \\[`Pallet::withdraw_unbonded`\\].\n\n* * *\n\nstateTrieMigration[\u200b](#statetriemigration \"Direct link to stateTrieMigration\")\n\n-------------------------------------------------------------------------------\n\n### continueMigrate(limits: `PalletStateTrieMigrationMigrationLimits`, real\\_size\\_upper: `u32`, witness\\_task: `PalletStateTrieMigrationMigrationTask`)[\u200b](#continuemigratelimits-palletstatetriemigrationmigrationlimits-real_size_upper-u32-witness_task-palletstatetriemigrationmigrationtask \"Direct link to continuemigratelimits-palletstatetriemigrationmigrationlimits-real_size_upper-u32-witness_task-palletstatetriemigrationmigrationtask\")\n\n*   **interface**: `api.tx.stateTrieMigration.continueMigrate`\n*   **summary**: See \\[`Pallet::continue_migrate`\\].\n\n### controlAutoMigration(maybe\\_config: `Option<PalletStateTrieMigrationMigrationLimits>`)[\u200b](#controlautomigrationmaybe_config-optionpalletstatetriemigrationmigrationlimits \"Direct link to controlautomigrationmaybe_config-optionpalletstatetriemigrationmigrationlimits\")\n\n*   **interface**: `api.tx.stateTrieMigration.controlAutoMigration`\n*   **summary**: See \\[`Pallet::control_auto_migration`\\].\n\n### forceSetProgress(progress\\_top: `PalletStateTrieMigrationProgress`, progress\\_child: `PalletStateTrieMigrationProgress`)[\u200b](#forcesetprogressprogress_top-palletstatetriemigrationprogress-progress_child-palletstatetriemigrationprogress \"Direct link to forcesetprogressprogress_top-palletstatetriemigrationprogress-progress_child-palletstatetriemigrationprogress\")\n\n*   **interface**: `api.tx.stateTrieMigration.forceSetProgress`\n*   **summary**: See \\[`Pallet::force_set_progress`\\].\n\n### migrateCustomChild(root: `Bytes`, child\\_keys: `Vec<Bytes>`, total\\_size: `u32`)[\u200b](#migratecustomchildroot-bytes-child_keys-vecbytes-total_size-u32 \"Direct link to migratecustomchildroot-bytes-child_keys-vecbytes-total_size-u32\")\n\n*   **interface**: `api.tx.stateTrieMigration.migrateCustomChild`\n*   **summary**: See \\[`Pallet::migrate_custom_child`\\].\n\n### migrateCustomTop(keys: `Vec<Bytes>`, witness\\_size: `u32`)[\u200b](#migratecustomtopkeys-vecbytes-witness_size-u32 \"Direct link to migratecustomtopkeys-vecbytes-witness_size-u32\")\n\n*   **interface**: `api.tx.stateTrieMigration.migrateCustomTop`\n*   **summary**: See \\[`Pallet::migrate_custom_top`\\].\n\n### setSignedMaxLimits(limits: `PalletStateTrieMigrationMigrationLimits`)[\u200b](#setsignedmaxlimitslimits-palletstatetriemigrationmigrationlimits \"Direct link to setsignedmaxlimitslimits-palletstatetriemigrationmigrationlimits\")\n\n*   **interface**: `api.tx.stateTrieMigration.setSignedMaxLimits`\n*   **summary**: See \\[`Pallet::set_signed_max_limits`\\].\n\n* * *\n\nsudo[\u200b](#sudo \"Direct link to sudo\")\n\n-------------------------------------\n\n### removeKey()[\u200b](#removekey \"Direct link to removeKey()\")\n\n*   **interface**: `api.tx.sudo.removeKey`\n*   **summary**: See \\[`Pallet::remove_key`\\].\n\n### setKey(new: `MultiAddress`)[\u200b](#setkeynew-multiaddress \"Direct link to setkeynew-multiaddress\")\n\n*   **interface**: `api.tx.sudo.setKey`\n*   **summary**: See \\[`Pallet::set_key`\\].\n\n### sudo(call: `Call`)[\u200b](#sudocall-call \"Direct link to sudocall-call\")\n\n*   **interface**: `api.tx.sudo.sudo`\n*   **summary**: See \\[`Pallet::sudo`\\].\n\n### sudoAs(who: `MultiAddress`, call: `Call`)[\u200b](#sudoaswho-multiaddress-call-call \"Direct link to sudoaswho-multiaddress-call-call\")\n\n*   **interface**: `api.tx.sudo.sudoAs`\n*   **summary**: See \\[`Pallet::sudo_as`\\].\n\n### sudoUncheckedWeight(call: `Call`, weight: `SpWeightsWeightV2Weight`)[\u200b](#sudouncheckedweightcall-call-weight-spweightsweightv2weight \"Direct link to sudouncheckedweightcall-call-weight-spweightsweightv2weight\")\n\n*   **interface**: `api.tx.sudo.sudoUncheckedWeight`\n*   **summary**: See \\[`Pallet::sudo_unchecked_weight`\\].\n\n* * *\n\nsystem[\u200b](#system \"Direct link to system\")\n\n-------------------------------------------\n\n### doTask(task: `KitchensinkRuntimeRuntimeTask`)[\u200b](#dotasktask-kitchensinkruntimeruntimetask \"Direct link to dotasktask-kitchensinkruntimeruntimetask\")\n\n*   **interface**: `api.tx.system.doTask`\n*   **summary**: See \\[`Pallet::do_task`\\].\n\n### killPrefix(prefix: `Bytes`, subkeys: `u32`)[\u200b](#killprefixprefix-bytes-subkeys-u32 \"Direct link to killprefixprefix-bytes-subkeys-u32\")\n\n*   **interface**: `api.tx.system.killPrefix`\n*   **summary**: See \\[`Pallet::kill_prefix`\\].\n\n### killStorage(keys: `Vec<Bytes>`)[\u200b](#killstoragekeys-vecbytes \"Direct link to killstoragekeys-vecbytes\")\n\n*   **interface**: `api.tx.system.killStorage`\n*   **summary**: See \\[`Pallet::kill_storage`\\].\n\n### remark(remark: `Bytes`)[\u200b](#remarkremark-bytes \"Direct link to remarkremark-bytes\")\n\n*   **interface**: `api.tx.system.remark`\n*   **summary**: See \\[`Pallet::remark`\\].\n\n### remarkWithEvent(remark: `Bytes`)[\u200b](#remarkwitheventremark-bytes \"Direct link to remarkwitheventremark-bytes\")\n\n*   **interface**: `api.tx.system.remarkWithEvent`\n*   **summary**: See \\[`Pallet::remark_with_event`\\].\n\n### setCode(code: `Bytes`)[\u200b](#setcodecode-bytes \"Direct link to setcodecode-bytes\")\n\n*   **interface**: `api.tx.system.setCode`\n*   **summary**: See \\[`Pallet::set_code`\\].\n\n### setCodeWithoutChecks(code: `Bytes`)[\u200b](#setcodewithoutcheckscode-bytes \"Direct link to setcodewithoutcheckscode-bytes\")\n\n*   **interface**: `api.tx.system.setCodeWithoutChecks`\n*   **summary**: See \\[`Pallet::set_code_without_checks`\\].\n\n### setHeapPages(pages: `u64`)[\u200b](#setheappagespages-u64 \"Direct link to setheappagespages-u64\")\n\n*   **interface**: `api.tx.system.setHeapPages`\n*   **summary**: See \\[`Pallet::set_heap_pages`\\].\n\n### setStorage(items: `Vec<(Bytes,Bytes)>`)[\u200b](#setstorageitems-vecbytesbytes \"Direct link to setstorageitems-vecbytesbytes\")\n\n*   **interface**: `api.tx.system.setStorage`\n*   **summary**: See \\[`Pallet::set_storage`\\].\n\n* * *\n\ntechnicalCommittee[\u200b](#technicalcommittee \"Direct link to technicalCommittee\")\n\n-------------------------------------------------------------------------------\n\n### close(proposal\\_hash: `H256`, index: `Compact<u32>`, proposal\\_weight\\_bound: `SpWeightsWeightV2Weight`, length\\_bound: `Compact<u32>`)[\u200b](#closeproposal_hash-h256-index-compactu32-proposal_weight_bound-spweightsweightv2weight-length_bound-compactu32-3 \"Direct link to closeproposal_hash-h256-index-compactu32-proposal_weight_bound-spweightsweightv2weight-length_bound-compactu32-3\")\n\n*   **interface**: `api.tx.technicalCommittee.close`\n*   **summary**: See \\[`Pallet::close`\\].\n\n### disapproveProposal(proposal\\_hash: `H256`)[\u200b](#disapproveproposalproposal_hash-h256-2 \"Direct link to disapproveproposalproposal_hash-h256-2\")\n\n*   **interface**: `api.tx.technicalCommittee.disapproveProposal`\n*   **summary**: See \\[`Pallet::disapprove_proposal`\\].\n\n### execute(proposal: `Call`, length\\_bound: `Compact<u32>`)[\u200b](#executeproposal-call-length_bound-compactu32-2 \"Direct link to executeproposal-call-length_bound-compactu32-2\")\n\n*   **interface**: `api.tx.technicalCommittee.execute`\n*   **summary**: See \\[`Pallet::execute`\\].\n\n### propose(threshold: `Compact<u32>`, proposal: `Call`, length\\_bound: `Compact<u32>`)[\u200b](#proposethreshold-compactu32-proposal-call-length_bound-compactu32-3 \"Direct link to proposethreshold-compactu32-proposal-call-length_bound-compactu32-3\")\n\n*   **interface**: `api.tx.technicalCommittee.propose`\n*   **summary**: See \\[`Pallet::propose`\\].\n\n### setMembers(new\\_members: `Vec<AccountId32>`, prime: `Option<AccountId32>`, old\\_count: `u32`)[\u200b](#setmembersnew_members-vecaccountid32-prime-optionaccountid32-old_count-u32-2 \"Direct link to setmembersnew_members-vecaccountid32-prime-optionaccountid32-old_count-u32-2\")\n\n*   **interface**: `api.tx.technicalCommittee.setMembers`\n*   **summary**: See \\[`Pallet::set_members`\\].\n\n### vote(proposal: `H256`, index: `Compact<u32>`, approve: `bool`)[\u200b](#voteproposal-h256-index-compactu32-approve-bool-3 \"Direct link to voteproposal-h256-index-compactu32-approve-bool-3\")\n\n*   **interface**: `api.tx.technicalCommittee.vote`\n*   **summary**: See \\[`Pallet::vote`\\].\n\n* * *\n\ntechnicalMembership[\u200b](#technicalmembership \"Direct link to technicalMembership\")\n\n----------------------------------------------------------------------------------\n\n### addMember(who: `MultiAddress`)[\u200b](#addmemberwho-multiaddress-1 \"Direct link to addmemberwho-multiaddress-1\")\n\n*   **interface**: `api.tx.technicalMembership.addMember`\n*   **summary**: See \\[`Pallet::add_member`\\].\n\n### changeKey(new: `MultiAddress`)[\u200b](#changekeynew-multiaddress \"Direct link to changekeynew-multiaddress\")\n\n*   **interface**: `api.tx.technicalMembership.changeKey`\n*   **summary**: See \\[`Pallet::change_key`\\].\n\n### clearPrime()[\u200b](#clearprime \"Direct link to clearPrime()\")\n\n*   **interface**: `api.tx.technicalMembership.clearPrime`\n*   **summary**: See \\[`Pallet::clear_prime`\\].\n\n### removeMember(who: `MultiAddress`)[\u200b](#removememberwho-multiaddress \"Direct link to removememberwho-multiaddress\")\n\n*   **interface**: `api.tx.technicalMembership.removeMember`\n*   **summary**: See \\[`Pallet::remove_member`\\].\n\n### resetMembers(members: `Vec<AccountId32>`)[\u200b](#resetmembersmembers-vecaccountid32 \"Direct link to resetmembersmembers-vecaccountid32\")\n\n*   **interface**: `api.tx.technicalMembership.resetMembers`\n*   **summary**: See \\[`Pallet::reset_members`\\].\n\n### setPrime(who: `MultiAddress`)[\u200b](#setprimewho-multiaddress \"Direct link to setprimewho-multiaddress\")\n\n*   **interface**: `api.tx.technicalMembership.setPrime`\n*   **summary**: See \\[`Pallet::set_prime`\\].\n\n### swapMember(remove: `MultiAddress`, add: `MultiAddress`)[\u200b](#swapmemberremove-multiaddress-add-multiaddress \"Direct link to swapmemberremove-multiaddress-add-multiaddress\")\n\n*   **interface**: `api.tx.technicalMembership.swapMember`\n*   **summary**: See \\[`Pallet::swap_member`\\].\n\n* * *\n\ntimestamp[\u200b](#timestamp \"Direct link to timestamp\")\n\n----------------------------------------------------\n\n### set(now: `Compact<u64>`)[\u200b](#setnow-compactu64 \"Direct link to setnow-compactu64\")\n\n*   **interface**: `api.tx.timestamp.set`\n*   **summary**: See \\[`Pallet::set`\\].\n\n* * *\n\ntips[\u200b](#tips \"Direct link to tips\")\n\n-------------------------------------\n\n### closeTip(hash: `H256`)[\u200b](#closetiphash-h256 \"Direct link to closetiphash-h256\")\n\n*   **interface**: `api.tx.tips.closeTip`\n*   **summary**: See \\[`Pallet::close_tip`\\].\n\n### reportAwesome(reason: `Bytes`, who: `MultiAddress`)[\u200b](#reportawesomereason-bytes-who-multiaddress \"Direct link to reportawesomereason-bytes-who-multiaddress\")\n\n*   **interface**: `api.tx.tips.reportAwesome`\n*   **summary**: See \\[`Pallet::report_awesome`\\].\n\n### retractTip(hash: `H256`)[\u200b](#retracttiphash-h256 \"Direct link to retracttiphash-h256\")\n\n*   **interface**: `api.tx.tips.retractTip`\n*   **summary**: See \\[`Pallet::retract_tip`\\].\n\n### slashTip(hash: `H256`)[\u200b](#slashtiphash-h256 \"Direct link to slashtiphash-h256\")\n\n*   **interface**: `api.tx.tips.slashTip`\n*   **summary**: See \\[`Pallet::slash_tip`\\].\n\n### tip(hash: `H256`, tip\\_value: `Compact<u128>`)[\u200b](#tiphash-h256-tip_value-compactu128 \"Direct link to tiphash-h256-tip_value-compactu128\")\n\n*   **interface**: `api.tx.tips.tip`\n*   **summary**: See \\[`Pallet::tip`\\].\n\n### tipNew(reason: `Bytes`, who: `MultiAddress`, tip\\_value: `Compact<u128>`)[\u200b](#tipnewreason-bytes-who-multiaddress-tip_value-compactu128 \"Direct link to tipnewreason-bytes-who-multiaddress-tip_value-compactu128\")\n\n*   **interface**: `api.tx.tips.tipNew`\n*   **summary**: See \\[`Pallet::tip_new`\\].\n\n* * *\n\ntransactionStorage[\u200b](#transactionstorage \"Direct link to transactionStorage\")\n\n-------------------------------------------------------------------------------\n\n### checkProof(proof: `SpTransactionStorageProofTransactionStorageProof`)[\u200b](#checkproofproof-sptransactionstorageprooftransactionstorageproof \"Direct link to checkproofproof-sptransactionstorageprooftransactionstorageproof\")\n\n*   **interface**: `api.tx.transactionStorage.checkProof`\n*   **summary**: See \\[`Pallet::check_proof`\\].\n\n### renew(block: `u32`, index: `u32`)[\u200b](#renewblock-u32-index-u32 \"Direct link to renewblock-u32-index-u32\")\n\n*   **interface**: `api.tx.transactionStorage.renew`\n*   **summary**: See \\[`Pallet::renew`\\].\n\n### store(data: `Bytes`)[\u200b](#storedata-bytes \"Direct link to storedata-bytes\")\n\n*   **interface**: `api.tx.transactionStorage.store`\n*   **summary**: See \\[`Pallet::store`\\].\n\n* * *\n\ntreasury[\u200b](#treasury \"Direct link to treasury\")\n\n-------------------------------------------------\n\n### approveProposal(proposal\\_id: `Compact<u32>`)[\u200b](#approveproposalproposal_id-compactu32 \"Direct link to approveproposalproposal_id-compactu32\")\n\n*   **interface**: `api.tx.treasury.approveProposal`\n*   **summary**: See \\[`Pallet::approve_proposal`\\].\n\n### checkStatus(index: `u32`)[\u200b](#checkstatusindex-u32 \"Direct link to checkstatusindex-u32\")\n\n*   **interface**: `api.tx.treasury.checkStatus`\n*   **summary**: See \\[`Pallet::check_status`\\].\n\n### payout(index: `u32`)[\u200b](#payoutindex-u32 \"Direct link to payoutindex-u32\")\n\n*   **interface**: `api.tx.treasury.payout`\n*   **summary**: See \\[`Pallet::payout`\\].\n\n### proposeSpend(value: `Compact<u128>`, beneficiary: `MultiAddress`)[\u200b](#proposespendvalue-compactu128-beneficiary-multiaddress \"Direct link to proposespendvalue-compactu128-beneficiary-multiaddress\")\n\n*   **interface**: `api.tx.treasury.proposeSpend`\n*   **summary**: See \\[`Pallet::propose_spend`\\].\n\n### rejectProposal(proposal\\_id: `Compact<u32>`)[\u200b](#rejectproposalproposal_id-compactu32 \"Direct link to rejectproposalproposal_id-compactu32\")\n\n*   **interface**: `api.tx.treasury.rejectProposal`\n*   **summary**: See \\[`Pallet::reject_proposal`\\].\n\n### removeApproval(proposal\\_id: `Compact<u32>`)[\u200b](#removeapprovalproposal_id-compactu32 \"Direct link to removeapprovalproposal_id-compactu32\")\n\n*   **interface**: `api.tx.treasury.removeApproval`\n*   **summary**: See \\[`Pallet::remove_approval`\\].\n\n### spend(asset\\_kind: `u32`, amount: `Compact<u128>`, beneficiary: `MultiAddress`, valid\\_from: `Option<u32>`)[\u200b](#spendasset_kind-u32-amount-compactu128-beneficiary-multiaddress-valid_from-optionu32 \"Direct link to spendasset_kind-u32-amount-compactu128-beneficiary-multiaddress-valid_from-optionu32\")\n\n*   **interface**: `api.tx.treasury.spend`\n*   **summary**: See \\[`Pallet::spend`\\].\n\n### spendLocal(amount: `Compact<u128>`, beneficiary: `MultiAddress`)[\u200b](#spendlocalamount-compactu128-beneficiary-multiaddress \"Direct link to spendlocalamount-compactu128-beneficiary-multiaddress\")\n\n*   **interface**: `api.tx.treasury.spendLocal`\n*   **summary**: See \\[`Pallet::spend_local`\\].\n\n### voidSpend(index: `u32`)[\u200b](#voidspendindex-u32 \"Direct link to voidspendindex-u32\")\n\n*   **interface**: `api.tx.treasury.voidSpend`\n*   **summary**: See \\[`Pallet::void_spend`\\].\n\n* * *\n\ntxPause[\u200b](#txpause \"Direct link to txPause\")\n\n----------------------------------------------\n\n### pause(full\\_name: `(Bytes,Bytes)`)[\u200b](#pausefull_name-bytesbytes \"Direct link to pausefull_name-bytesbytes\")\n\n*   **interface**: `api.tx.txPause.pause`\n*   **summary**: See \\[`Pallet::pause`\\].\n\n### unpause(ident: `(Bytes,Bytes)`)[\u200b](#unpauseident-bytesbytes \"Direct link to unpauseident-bytesbytes\")\n\n*   **interface**: `api.tx.txPause.unpause`\n*   **summary**: See \\[`Pallet::unpause`\\].\n\n* * *\n\nuniques[\u200b](#uniques \"Direct link to uniques\")\n\n----------------------------------------------\n\n### approveTransfer(collection: `u32`, item: `u32`, delegate: `MultiAddress`)[\u200b](#approvetransfercollection-u32-item-u32-delegate-multiaddress \"Direct link to approvetransfercollection-u32-item-u32-delegate-multiaddress\")\n\n*   **interface**: `api.tx.uniques.approveTransfer`\n*   **summary**: See \\[`Pallet::approve_transfer`\\].\n\n### burn(collection: `u32`, item: `u32`, check\\_owner: `Option<MultiAddress>`)[\u200b](#burncollection-u32-item-u32-check_owner-optionmultiaddress \"Direct link to burncollection-u32-item-u32-check_owner-optionmultiaddress\")\n\n*   **interface**: `api.tx.uniques.burn`\n*   **summary**: See \\[`Pallet::burn`\\].\n\n### buyItem(collection: `u32`, item: `u32`, bid\\_price: `u128`)[\u200b](#buyitemcollection-u32-item-u32-bid_price-u128-1 \"Direct link to buyitemcollection-u32-item-u32-bid_price-u128-1\")\n\n*   **interface**: `api.tx.uniques.buyItem`\n*   **summary**: See \\[`Pallet::buy_item`\\].\n\n### cancelApproval(collection: `u32`, item: `u32`, maybe\\_check\\_delegate: `Option<MultiAddress>`)[\u200b](#cancelapprovalcollection-u32-item-u32-maybe_check_delegate-optionmultiaddress \"Direct link to cancelapprovalcollection-u32-item-u32-maybe_check_delegate-optionmultiaddress\")\n\n*   **interface**: `api.tx.uniques.cancelApproval`\n*   **summary**: See \\[`Pallet::cancel_approval`\\].\n\n### clearAttribute(collection: `u32`, maybe\\_item: `Option<u32>`, key: `Bytes`)[\u200b](#clearattributecollection-u32-maybe_item-optionu32-key-bytes \"Direct link to clearattributecollection-u32-maybe_item-optionu32-key-bytes\")\n\n*   **interface**: `api.tx.uniques.clearAttribute`\n*   **summary**: See \\[`Pallet::clear_attribute`\\].\n\n### clearCollectionMetadata(collection: `u32`)[\u200b](#clearcollectionmetadatacollection-u32-1 \"Direct link to clearcollectionmetadatacollection-u32-1\")\n\n*   **interface**: `api.tx.uniques.clearCollectionMetadata`\n*   **summary**: See \\[`Pallet::clear_collection_metadata`\\].\n\n### clearMetadata(collection: `u32`, item: `u32`)[\u200b](#clearmetadatacollection-u32-item-u32-1 \"Direct link to clearmetadatacollection-u32-item-u32-1\")\n\n*   **interface**: `api.tx.uniques.clearMetadata`\n*   **summary**: See \\[`Pallet::clear_metadata`\\].\n\n### create(collection: `u32`, admin: `MultiAddress`)[\u200b](#createcollection-u32-admin-multiaddress \"Direct link to createcollection-u32-admin-multiaddress\")\n\n*   **interface**: `api.tx.uniques.create`\n*   **summary**: See \\[`Pallet::create`\\].\n\n### destroy(collection: `u32`, witness: `PalletUniquesDestroyWitness`)[\u200b](#destroycollection-u32-witness-palletuniquesdestroywitness \"Direct link to destroycollection-u32-witness-palletuniquesdestroywitness\")\n\n*   **interface**: `api.tx.uniques.destroy`\n*   **summary**: See \\[`Pallet::destroy`\\].\n\n### forceCreate(collection: `u32`, owner: `MultiAddress`, free\\_holding: `bool`)[\u200b](#forcecreatecollection-u32-owner-multiaddress-free_holding-bool \"Direct link to forcecreatecollection-u32-owner-multiaddress-free_holding-bool\")\n\n*   **interface**: `api.tx.uniques.forceCreate`\n*   **summary**: See \\[`Pallet::force_create`\\].\n\n### forceItemStatus(collection: `u32`, owner: `MultiAddress`, issuer: `MultiAddress`, admin: `MultiAddress`, freezer: `MultiAddress`, free\\_holding: `bool`, is\\_frozen: `bool`)[\u200b](#forceitemstatuscollection-u32-owner-multiaddress-issuer-multiaddress-admin-multiaddress-freezer-multiaddress-free_holding-bool-is_frozen-bool \"Direct link to forceitemstatuscollection-u32-owner-multiaddress-issuer-multiaddress-admin-multiaddress-freezer-multiaddress-free_holding-bool-is_frozen-bool\")\n\n*   **interface**: `api.tx.uniques.forceItemStatus`\n*   **summary**: See \\[`Pallet::force_item_status`\\].\n\n### freeze(collection: `u32`, item: `u32`)[\u200b](#freezecollection-u32-item-u32 \"Direct link to freezecollection-u32-item-u32\")\n\n*   **interface**: `api.tx.uniques.freeze`\n*   **summary**: See \\[`Pallet::freeze`\\].\n\n### freezeCollection(collection: `u32`)[\u200b](#freezecollectioncollection-u32 \"Direct link to freezecollectioncollection-u32\")\n\n*   **interface**: `api.tx.uniques.freezeCollection`\n*   **summary**: See \\[`Pallet::freeze_collection`\\].\n\n### mint(collection: `u32`, item: `u32`, owner: `MultiAddress`)[\u200b](#mintcollection-u32-item-u32-owner-multiaddress \"Direct link to mintcollection-u32-item-u32-owner-multiaddress\")\n\n*   **interface**: `api.tx.uniques.mint`\n*   **summary**: See \\[`Pallet::mint`\\].\n\n### redeposit(collection: `u32`, items: `Vec<u32>`)[\u200b](#redepositcollection-u32-items-vecu32-1 \"Direct link to redepositcollection-u32-items-vecu32-1\")\n\n*   **interface**: `api.tx.uniques.redeposit`\n*   **summary**: See \\[`Pallet::redeposit`\\].\n\n### setAcceptOwnership(maybe\\_collection: `Option<u32>`)[\u200b](#setacceptownershipmaybe_collection-optionu32-1 \"Direct link to setacceptownershipmaybe_collection-optionu32-1\")\n\n*   **interface**: `api.tx.uniques.setAcceptOwnership`\n*   **summary**: See \\[`Pallet::set_accept_ownership`\\].\n\n### setAttribute(collection: `u32`, maybe\\_item: `Option<u32>`, key: `Bytes`, value: `Bytes`)[\u200b](#setattributecollection-u32-maybe_item-optionu32-key-bytes-value-bytes \"Direct link to setattributecollection-u32-maybe_item-optionu32-key-bytes-value-bytes\")\n\n*   **interface**: `api.tx.uniques.setAttribute`\n*   **summary**: See \\[`Pallet::set_attribute`\\].\n\n### setCollectionMaxSupply(collection: `u32`, max\\_supply: `u32`)[\u200b](#setcollectionmaxsupplycollection-u32-max_supply-u32-1 \"Direct link to setcollectionmaxsupplycollection-u32-max_supply-u32-1\")\n\n*   **interface**: `api.tx.uniques.setCollectionMaxSupply`\n*   **summary**: See \\[`Pallet::set_collection_max_supply`\\].\n\n### setCollectionMetadata(collection: `u32`, data: `Bytes`, is\\_frozen: `bool`)[\u200b](#setcollectionmetadatacollection-u32-data-bytes-is_frozen-bool \"Direct link to setcollectionmetadatacollection-u32-data-bytes-is_frozen-bool\")\n\n*   **interface**: `api.tx.uniques.setCollectionMetadata`\n*   **summary**: See \\[`Pallet::set_collection_metadata`\\].\n\n### setMetadata(collection: `u32`, item: `u32`, data: `Bytes`, is\\_frozen: `bool`)[\u200b](#setmetadatacollection-u32-item-u32-data-bytes-is_frozen-bool \"Direct link to setmetadatacollection-u32-item-u32-data-bytes-is_frozen-bool\")\n\n*   **interface**: `api.tx.uniques.setMetadata`\n*   **summary**: See \\[`Pallet::set_metadata`\\].\n\n### setPrice(collection: `u32`, item: `u32`, price: `Option<u128>`, whitelisted\\_buyer: `Option<MultiAddress>`)[\u200b](#setpricecollection-u32-item-u32-price-optionu128-whitelisted_buyer-optionmultiaddress-1 \"Direct link to setpricecollection-u32-item-u32-price-optionu128-whitelisted_buyer-optionmultiaddress-1\")\n\n*   **interface**: `api.tx.uniques.setPrice`\n*   **summary**: See \\[`Pallet::set_price`\\].\n\n### setTeam(collection: `u32`, issuer: `MultiAddress`, admin: `MultiAddress`, freezer: `MultiAddress`)[\u200b](#setteamcollection-u32-issuer-multiaddress-admin-multiaddress-freezer-multiaddress \"Direct link to setteamcollection-u32-issuer-multiaddress-admin-multiaddress-freezer-multiaddress\")\n\n*   **interface**: `api.tx.uniques.setTeam`\n*   **summary**: See \\[`Pallet::set_team`\\].\n\n### thaw(collection: `u32`, item: `u32`)[\u200b](#thawcollection-u32-item-u32 \"Direct link to thawcollection-u32-item-u32\")\n\n*   **interface**: `api.tx.uniques.thaw`\n*   **summary**: See \\[`Pallet::thaw`\\].\n\n### thawCollection(collection: `u32`)[\u200b](#thawcollectioncollection-u32 \"Direct link to thawcollectioncollection-u32\")\n\n*   **interface**: `api.tx.uniques.thawCollection`\n*   **summary**: See \\[`Pallet::thaw_collection`\\].\n\n### transfer(collection: `u32`, item: `u32`, dest: `MultiAddress`)[\u200b](#transfercollection-u32-item-u32-dest-multiaddress-1 \"Direct link to transfercollection-u32-item-u32-dest-multiaddress-1\")\n\n*   **interface**: `api.tx.uniques.transfer`\n*   **summary**: See \\[`Pallet::transfer`\\].\n\n### transferOwnership(collection: `u32`, owner: `MultiAddress`)[\u200b](#transferownershipcollection-u32-owner-multiaddress-1 \"Direct link to transferownershipcollection-u32-owner-multiaddress-1\")\n\n*   **interface**: `api.tx.uniques.transferOwnership`\n*   **summary**: See \\[`Pallet::transfer_ownership`\\].\n\n* * *\n\nutility[\u200b](#utility \"Direct link to utility\")\n\n----------------------------------------------\n\n### asDerivative(index: `u16`, call: `Call`)[\u200b](#asderivativeindex-u16-call-call \"Direct link to asderivativeindex-u16-call-call\")\n\n*   **interface**: `api.tx.utility.asDerivative`\n*   **summary**: See \\[`Pallet::as_derivative`\\].\n\n### batch(calls: `Vec<Call>`)[\u200b](#batchcalls-veccall \"Direct link to batchcalls-veccall\")\n\n*   **interface**: `api.tx.utility.batch`\n*   **summary**: See \\[`Pallet::batch`\\].\n\n### batchAll(calls: `Vec<Call>`)[\u200b](#batchallcalls-veccall \"Direct link to batchallcalls-veccall\")\n\n*   **interface**: `api.tx.utility.batchAll`\n*   **summary**: See \\[`Pallet::batch_all`\\].\n\n### dispatchAs(as\\_origin: `KitchensinkRuntimeOriginCaller`, call: `Call`)[\u200b](#dispatchasas_origin-kitchensinkruntimeorigincaller-call-call \"Direct link to dispatchasas_origin-kitchensinkruntimeorigincaller-call-call\")\n\n*   **interface**: `api.tx.utility.dispatchAs`\n*   **summary**: See \\[`Pallet::dispatch_as`\\].\n\n### forceBatch(calls: `Vec<Call>`)[\u200b](#forcebatchcalls-veccall \"Direct link to forcebatchcalls-veccall\")\n\n*   **interface**: `api.tx.utility.forceBatch`\n*   **summary**: See \\[`Pallet::force_batch`\\].\n\n### withWeight(call: `Call`, weight: `SpWeightsWeightV2Weight`)[\u200b](#withweightcall-call-weight-spweightsweightv2weight \"Direct link to withweightcall-call-weight-spweightsweightv2weight\")\n\n*   **interface**: `api.tx.utility.withWeight`\n*   **summary**: See \\[`Pallet::with_weight`\\].\n\n* * *\n\nvesting[\u200b](#vesting \"Direct link to vesting\")\n\n----------------------------------------------\n\n### forceRemoveVestingSchedule(target: `MultiAddress`, schedule\\_index: `u32`)[\u200b](#forceremovevestingscheduletarget-multiaddress-schedule_index-u32 \"Direct link to forceremovevestingscheduletarget-multiaddress-schedule_index-u32\")\n\n*   **interface**: `api.tx.vesting.forceRemoveVestingSchedule`\n*   **summary**: See \\[`Pallet::force_remove_vesting_schedule`\\].\n\n### forceVestedTransfer(source: `MultiAddress`, target: `MultiAddress`, schedule: `PalletVestingVestingInfo`)[\u200b](#forcevestedtransfersource-multiaddress-target-multiaddress-schedule-palletvestingvestinginfo \"Direct link to forcevestedtransfersource-multiaddress-target-multiaddress-schedule-palletvestingvestinginfo\")\n\n*   **interface**: `api.tx.vesting.forceVestedTransfer`\n*   **summary**: See \\[`Pallet::force_vested_transfer`\\].\n\n### mergeSchedules(schedule1\\_index: `u32`, schedule2\\_index: `u32`)[\u200b](#mergeschedulesschedule1_index-u32-schedule2_index-u32 \"Direct link to mergeschedulesschedule1_index-u32-schedule2_index-u32\")\n\n*   **interface**: `api.tx.vesting.mergeSchedules`\n*   **summary**: See \\[`Pallet::merge_schedules`\\].\n\n### vest()[\u200b](#vest \"Direct link to vest()\")\n\n*   **interface**: `api.tx.vesting.vest`\n*   **summary**: See \\[`Pallet::vest`\\].\n\n### vestOther(target: `MultiAddress`)[\u200b](#vestothertarget-multiaddress \"Direct link to vestothertarget-multiaddress\")\n\n*   **interface**: `api.tx.vesting.vestOther`\n*   **summary**: See \\[`Pallet::vest_other`\\].\n\n### vestedTransfer(target: `MultiAddress`, schedule: `PalletVestingVestingInfo`)[\u200b](#vestedtransfertarget-multiaddress-schedule-palletvestingvestinginfo \"Direct link to vestedtransfertarget-multiaddress-schedule-palletvestingvestinginfo\")\n\n*   **interface**: `api.tx.vesting.vestedTransfer`\n*   **summary**: See \\[`Pallet::vested_transfer`\\].\n\n* * *\n\nvoterList[\u200b](#voterlist \"Direct link to voterList\")\n\n----------------------------------------------------\n\n### putInFrontOf(lighter: `MultiAddress`)[\u200b](#putinfrontoflighter-multiaddress \"Direct link to putinfrontoflighter-multiaddress\")\n\n*   **interface**: `api.tx.voterList.putInFrontOf`\n*   **summary**: See \\[`Pallet::put_in_front_of`\\].\n\n### putInFrontOfOther(heavier: `MultiAddress`, lighter: `MultiAddress`)[\u200b](#putinfrontofotherheavier-multiaddress-lighter-multiaddress \"Direct link to putinfrontofotherheavier-multiaddress-lighter-multiaddress\")\n\n*   **interface**: `api.tx.voterList.putInFrontOfOther`\n*   **summary**: See \\[`Pallet::put_in_front_of_other`\\].\n\n### rebag(dislocated: `MultiAddress`)[\u200b](#rebagdislocated-multiaddress \"Direct link to rebagdislocated-multiaddress\")\n\n*   **interface**: `api.tx.voterList.rebag`\n*   **summary**: See \\[`Pallet::rebag`\\].\n\n* * *\n\nwhitelist[\u200b](#whitelist \"Direct link to whitelist\")\n\n----------------------------------------------------\n\n### dispatchWhitelistedCall(call\\_hash: `H256`, call\\_encoded\\_len: `u32`, call\\_weight\\_witness: `SpWeightsWeightV2Weight`)[\u200b](#dispatchwhitelistedcallcall_hash-h256-call_encoded_len-u32-call_weight_witness-spweightsweightv2weight \"Direct link to dispatchwhitelistedcallcall_hash-h256-call_encoded_len-u32-call_weight_witness-spweightsweightv2weight\")\n\n*   **interface**: `api.tx.whitelist.dispatchWhitelistedCall`\n*   **summary**: See \\[`Pallet::dispatch_whitelisted_call`\\].\n\n### dispatchWhitelistedCallWithPreimage(call: `Call`)[\u200b](#dispatchwhitelistedcallwithpreimagecall-call \"Direct link to dispatchwhitelistedcallwithpreimagecall-call\")\n\n*   **interface**: `api.tx.whitelist.dispatchWhitelistedCallWithPreimage`\n*   **summary**: See \\[`Pallet::dispatch_whitelisted_call_with_preimage`\\].\n\n### removeWhitelistedCall(call\\_hash: `H256`)[\u200b](#removewhitelistedcallcall_hash-h256 \"Direct link to removewhitelistedcallcall_hash-h256\")\n\n*   **interface**: `api.tx.whitelist.removeWhitelistedCall`\n*   **summary**: See \\[`Pallet::remove_whitelisted_call`\\].\n\n### whitelistCall(call\\_hash: `H256`)[\u200b](#whitelistcallcall_hash-h256 \"Direct link to whitelistcallcall_hash-h256\")\n\n*   **interface**: `api.tx.whitelist.whitelistCall`\n*   **summary**: See \\[`Pallet::whitelist_call`\\].\n\n[Edit this page](https://github.com/polkadot-js/docs/edit/master/docs/substrate/extrinsics.md)\n\n[Previous\\\n\\\nStorage](/docs/substrate/storage)\n[Next\\\n\\\nEvents](/docs/substrate/events)\n\n*   [alliance](#alliance)\n    *   [abdicateFellowStatus()](#abdicatefellowstatus)\n        \n    *   [addUnscrupulousItems(items: `Vec<PalletAllianceUnscrupulousItem>`)](#addunscrupulousitemsitems-vecpalletallianceunscrupulousitem)\n        \n    *   [announce(announcement: `PalletAllianceCid`)](#announceannouncement-palletalliancecid)\n        \n    *   [close(proposal\\_hash: `H256`, index: `Compact<u32>`, proposal\\_weight\\_bound: `SpWeightsWeightV2Weight`, length\\_bound: `Compact<u32>`)](#closeproposal_hash-h256-index-compactu32-proposal_weight_bound-spweightsweightv2weight-length_bound-compactu32)\n        \n    *   [disband(witness: `PalletAllianceDisbandWitness`)](#disbandwitness-palletalliancedisbandwitness)\n        \n    *   [elevateAlly(ally: `MultiAddress`)](#elevateallyally-multiaddress)\n        \n    *   [giveRetirementNotice()](#giveretirementnotice)\n        \n    *   [initMembers(fellows: `Vec<AccountId32>`, allies: `Vec<AccountId32>`)](#initmembersfellows-vecaccountid32-allies-vecaccountid32)\n        \n    *   [joinAlliance()](#joinalliance)\n        \n    *   [kickMember(who: `MultiAddress`)](#kickmemberwho-multiaddress)\n        \n    *   [nominateAlly(who: `MultiAddress`)](#nominateallywho-multiaddress)\n        \n    *   [propose(threshold: `Compact<u32>`, proposal: `Call`, length\\_bound: `Compact<u32>`)](#proposethreshold-compactu32-proposal-call-length_bound-compactu32)\n        \n    *   [removeAnnouncement(announcement: `PalletAllianceCid`)](#removeannouncementannouncement-palletalliancecid)\n        \n    *   [removeUnscrupulousItems(items: `Vec<PalletAllianceUnscrupulousItem>`)](#removeunscrupulousitemsitems-vecpalletallianceunscrupulousitem)\n        \n    *   [retire()](#retire)\n        \n    *   [setRule(rule: `PalletAllianceCid`)](#setrulerule-palletalliancecid)\n        \n    *   [vote(proposal: `H256`, index: `Compact<u32>`, approve: `bool`)](#voteproposal-h256-index-compactu32-approve-bool)\n        \n*   [allianceMotion](#alliancemotion)\n    *   [close(proposal\\_hash: `H256`, index: `Compact<u32>`, proposal\\_weight\\_bound: `SpWeightsWeightV2Weight`, length\\_bound: `Compact<u32>`)](#closeproposal_hash-h256-index-compactu32-proposal_weight_bound-spweightsweightv2weight-length_bound-compactu32-1)\n        \n    *   [disapproveProposal(proposal\\_hash: `H256`)](#disapproveproposalproposal_hash-h256)\n        \n    *   [execute(proposal: `Call`, length\\_bound: `Compact<u32>`)](#executeproposal-call-length_bound-compactu32)\n        \n    *   [propose(threshold: `Compact<u32>`, proposal: `Call`, length\\_bound: `Compact<u32>`)](#proposethreshold-compactu32-proposal-call-length_bound-compactu32-1)\n        \n    *   [setMembers(new\\_members: `Vec<AccountId32>`, prime: `Option<AccountId32>`, old\\_count: `u32`)](#setmembersnew_members-vecaccountid32-prime-optionaccountid32-old_count-u32)\n        \n    *   [vote(proposal: `H256`, index: `Compact<u32>`, approve: `bool`)](#voteproposal-h256-index-compactu32-approve-bool-1)\n        \n*   [assetConversion](#assetconversion)\n    *   [addLiquidity(asset1: `PalletAssetConversionNativeOrAssetId`, asset2: `PalletAssetConversionNativeOrAssetId`, amount1\\_desired: `u128`, amount2\\_desired: `u128`, amount1\\_min: `u128`, amount2\\_min: `u128`, mint\\_to: `AccountId32`)](#addliquidityasset1-palletassetconversionnativeorassetid-asset2-palletassetconversionnativeorassetid-amount1_desired-u128-amount2_desired-u128-amount1_min-u128-amount2_min-u128-mint_to-accountid32)\n        \n    *   [createPool(asset1: `PalletAssetConversionNativeOrAssetId`, asset2: `PalletAssetConversionNativeOrAssetId`)](#createpoolasset1-palletassetconversionnativeorassetid-asset2-palletassetconversionnativeorassetid)\n        \n    *   [removeLiquidity(asset1: `PalletAssetConversionNativeOrAssetId`, asset2: `PalletAssetConversionNativeOrAssetId`, lp\\_token\\_burn: `u128`, amount1\\_min\\_receive: `u128`, amount2\\_min\\_receive: `u128`, withdraw\\_to: `AccountId32`)](#removeliquidityasset1-palletassetconversionnativeorassetid-asset2-palletassetconversionnativeorassetid-lp_token_burn-u128-amount1_min_receive-u128-amount2_min_receive-u128-withdraw_to-accountid32)\n        \n    *   [swapExactTokensForTokens(path: `Vec<PalletAssetConversionNativeOrAssetId>`, amount\\_in: `u128`, amount\\_out\\_min: `u128`, send\\_to: `AccountId32`, keep\\_alive: `bool`)](#swapexacttokensfortokenspath-vecpalletassetconversionnativeorassetid-amount_in-u128-amount_out_min-u128-send_to-accountid32-keep_alive-bool)\n        \n    *   [swapTokensForExactTokens(path: `Vec<PalletAssetConversionNativeOrAssetId>`, amount\\_out: `u128`, amount\\_in\\_max: `u128`, send\\_to: `AccountId32`, keep\\_alive: `bool`)](#swaptokensforexacttokenspath-vecpalletassetconversionnativeorassetid-amount_out-u128-amount_in_max-u128-send_to-accountid32-keep_alive-bool)\n        \n*   [assetRate](#assetrate)\n    *   [create(asset\\_kind: `u32`, rate: `u128`)](#createasset_kind-u32-rate-u128)\n        \n    *   [remove(asset\\_kind: `u32`)](#removeasset_kind-u32)\n        \n    *   [update(asset\\_kind: `u32`, rate: `u128`)](#updateasset_kind-u32-rate-u128)\n        \n*   [assets](#assets)\n    *   [approveTransfer(id: `Compact<u32>`, delegate: `MultiAddress`, amount: `Compact<u128>`)](#approvetransferid-compactu32-delegate-multiaddress-amount-compactu128)\n        \n    *   [block(id: `Compact<u32>`, who: `MultiAddress`)](#blockid-compactu32-who-multiaddress)\n        \n    *   [burn(id: `Compact<u32>`, who: `MultiAddress`, amount: `Compact<u128>`)](#burnid-compactu32-who-multiaddress-amount-compactu128)\n        \n    *   [cancelApproval(id: `Compact<u32>`, delegate: `MultiAddress`)](#cancelapprovalid-compactu32-delegate-multiaddress)\n        \n    *   [clearMetadata(id: `Compact<u32>`)](#clearmetadataid-compactu32)\n        \n    *   [create(id: `Compact<u32>`, admin: `MultiAddress`, min\\_balance: `u128`)](#createid-compactu32-admin-multiaddress-min_balance-u128)\n        \n    *   [destroyAccounts(id: `Compact<u32>`)](#destroyaccountsid-compactu32)\n        \n    *   [destroyApprovals(id: `Compact<u32>`)](#destroyapprovalsid-compactu32)\n        \n    *   [finishDestroy(id: `Compact<u32>`)](#finishdestroyid-compactu32)\n        \n    *   [forceAssetStatus(id: `Compact<u32>`, owner: `MultiAddress`, issuer: `MultiAddress`, admin: `MultiAddress`, freezer: `MultiAddress`, min\\_balance: `Compact<u128>`, is\\_sufficient: `bool`, is\\_frozen: `bool`)](#forceassetstatusid-compactu32-owner-multiaddress-issuer-multiaddress-admin-multiaddress-freezer-multiaddress-min_balance-compactu128-is_sufficient-bool-is_frozen-bool)\n        \n    *   [forceCancelApproval(id: `Compact<u32>`, owner: `MultiAddress`, delegate: `MultiAddress`)](#forcecancelapprovalid-compactu32-owner-multiaddress-delegate-multiaddress)\n        \n    *   [forceClearMetadata(id: `Compact<u32>`)](#forceclearmetadataid-compactu32)\n        \n    *   [forceCreate(id: `Compact<u32>`, owner: `MultiAddress`, is\\_sufficient: `bool`, min\\_balance: `Compact<u128>`)](#forcecreateid-compactu32-owner-multiaddress-is_sufficient-bool-min_balance-compactu128)\n        \n    *   [forceSetMetadata(id: `Compact<u32>`, name: `Bytes`, symbol: `Bytes`, decimals: `u8`, is\\_frozen: `bool`)](#forcesetmetadataid-compactu32-name-bytes-symbol-bytes-decimals-u8-is_frozen-bool)\n        \n    *   [forceTransfer(id: `Compact<u32>`, source: `MultiAddress`, dest: `MultiAddress`, amount: `Compact<u128>`)](#forcetransferid-compactu32-source-multiaddress-dest-multiaddress-amount-compactu128)\n        \n    *   [freeze(id: `Compact<u32>`, who: `MultiAddress`)](#freezeid-compactu32-who-multiaddress)\n        \n    *   [freezeAsset(id: `Compact<u32>`)](#freezeassetid-compactu32)\n        \n    *   [mint(id: `Compact<u32>`, beneficiary: `MultiAddress`, amount: `Compact<u128>`)](#mintid-compactu32-beneficiary-multiaddress-amount-compactu128)\n        \n    *   [refund(id: `Compact<u32>`, allow\\_burn: `bool`)](#refundid-compactu32-allow_burn-bool)\n        \n    *   [refundOther(id: `Compact<u32>`, who: `MultiAddress`)](#refundotherid-compactu32-who-multiaddress)\n        \n    *   [setMetadata(id: `Compact<u32>`, name: `Bytes`, symbol: `Bytes`, decimals: `u8`)](#setmetadataid-compactu32-name-bytes-symbol-bytes-decimals-u8)\n        \n    *   [setMinBalance(id: `Compact<u32>`, min\\_balance: `u128`)](#setminbalanceid-compactu32-min_balance-u128)\n        \n    *   [setTeam(id: `Compact<u32>`, issuer: `MultiAddress`, admin: `MultiAddress`, freezer: `MultiAddress`)](#setteamid-compactu32-issuer-multiaddress-admin-multiaddress-freezer-multiaddress)\n        \n    *   [startDestroy(id: `Compact<u32>`)](#startdestroyid-compactu32)\n        \n    *   [thaw(id: `Compact<u32>`, who: `MultiAddress`)](#thawid-compactu32-who-multiaddress)\n        \n    *   [thawAsset(id: `Compact<u32>`)](#thawassetid-compactu32)\n        \n    *   [touch(id: `Compact<u32>`)](#touchid-compactu32)\n        \n    *   [touchOther(id: `Compact<u32>`, who: `MultiAddress`)](#touchotherid-compactu32-who-multiaddress)\n        \n    *   [transfer(id: `Compact<u32>`, target: `MultiAddress`, amount: `Compact<u128>`)](#transferid-compactu32-target-multiaddress-amount-compactu128)\n        \n    *   [transferApproved(id: `Compact<u32>`, owner: `MultiAddress`, destination: `MultiAddress`, amount: `Compact<u128>`)](#transferapprovedid-compactu32-owner-multiaddress-destination-multiaddress-amount-compactu128)\n        \n    *   [transferKeepAlive(id: `Compact<u32>`, target: `MultiAddress`, amount: `Compact<u128>`)](#transferkeepaliveid-compactu32-target-multiaddress-amount-compactu128)\n        \n    *   [transferOwnership(id: `Compact<u32>`, owner: `MultiAddress`)](#transferownershipid-compactu32-owner-multiaddress)\n        \n*   [babe](#babe)\n    *   [planConfigChange(config: `SpConsensusBabeDigestsNextConfigDescriptor`)](#planconfigchangeconfig-spconsensusbabedigestsnextconfigdescriptor)\n        \n    *   [reportEquivocation(equivocation\\_proof: `SpConsensusSlotsEquivocationProof`, key\\_owner\\_proof: `SpSessionMembershipProof`)](#reportequivocationequivocation_proof-spconsensusslotsequivocationproof-key_owner_proof-spsessionmembershipproof)\n        \n    *   [reportEquivocationUnsigned(equivocation\\_proof: `SpConsensusSlotsEquivocationProof`, key\\_owner\\_proof: `SpSessionMembershipProof`)](#reportequivocationunsignedequivocation_proof-spconsensusslotsequivocationproof-key_owner_proof-spsessionmembershipproof)\n        \n*   [balances](#balances)\n    *   [forceSetBalance(who: `MultiAddress`, new\\_free: `Compact<u128>`)](#forcesetbalancewho-multiaddress-new_free-compactu128)\n        \n    *   [forceTransfer(source: `MultiAddress`, dest: `MultiAddress`, value: `Compact<u128>`)](#forcetransfersource-multiaddress-dest-multiaddress-value-compactu128)\n        \n    *   [forceUnreserve(who: `MultiAddress`, amount: `u128`)](#forceunreservewho-multiaddress-amount-u128)\n        \n    *   [transferAll(dest: `MultiAddress`, keep\\_alive: `bool`)](#transferalldest-multiaddress-keep_alive-bool)\n        \n    *   [transferAllowDeath(dest: `MultiAddress`, value: `Compact<u128>`)](#transferallowdeathdest-multiaddress-value-compactu128)\n        \n    *   [transferKeepAlive(dest: `MultiAddress`, value: `Compact<u128>`)](#transferkeepalivedest-multiaddress-value-compactu128)\n        \n    *   [upgradeAccounts(who: `Vec<AccountId32>`)](#upgradeaccountswho-vecaccountid32)\n        \n*   [bounties](#bounties)\n    *   [acceptCurator(bounty\\_id: `Compact<u32>`)](#acceptcuratorbounty_id-compactu32)\n        \n    *   [approveBounty(bounty\\_id: `Compact<u32>`)](#approvebountybounty_id-compactu32)\n        \n    *   [awardBounty(bounty\\_id: `Compact<u32>`, beneficiary: `MultiAddress`)](#awardbountybounty_id-compactu32-beneficiary-multiaddress)\n        \n    *   [claimBounty(bounty\\_id: `Compact<u32>`)](#claimbountybounty_id-compactu32)\n        \n    *   [closeBounty(bounty\\_id: `Compact<u32>`)](#closebountybounty_id-compactu32)\n        \n    *   [extendBountyExpiry(bounty\\_id: `Compact<u32>`, remark: `Bytes`)](#extendbountyexpirybounty_id-compactu32-remark-bytes)\n        \n    *   [proposeBounty(value: `Compact<u128>`, description: `Bytes`)](#proposebountyvalue-compactu128-description-bytes)\n        \n    *   [proposeCurator(bounty\\_id: `Compact<u32>`, curator: `MultiAddress`, fee: `Compact<u128>`)](#proposecuratorbounty_id-compactu32-curator-multiaddress-fee-compactu128)\n        \n    *   [unassignCurator(bounty\\_id: `Compact<u32>`)](#unassigncuratorbounty_id-compactu32)\n        \n*   [broker](#broker)\n    *   [assign(region\\_id: `PalletBrokerRegionId`, task: `u32`, finality: `PalletBrokerFinality`)](#assignregion_id-palletbrokerregionid-task-u32-finality-palletbrokerfinality)\n        \n    *   [claimRevenue(region\\_id: `PalletBrokerRegionId`, max\\_timeslices: `u32`)](#claimrevenueregion_id-palletbrokerregionid-max_timeslices-u32)\n        \n    *   [configure(config: `PalletBrokerConfigRecord`)](#configureconfig-palletbrokerconfigrecord)\n        \n    *   [dropContribution(region\\_id: `PalletBrokerRegionId`)](#dropcontributionregion_id-palletbrokerregionid)\n        \n    *   [dropHistory(when: `u32`)](#drophistorywhen-u32)\n        \n    *   [dropRegion(region\\_id: `PalletBrokerRegionId`)](#dropregionregion_id-palletbrokerregionid)\n        \n    *   [dropRenewal(core: `u16`, when: `u32`)](#droprenewalcore-u16-when-u32)\n        \n    *   [interlace(region\\_id: `PalletBrokerRegionId`, pivot: `PalletBrokerCoreMask`)](#interlaceregion_id-palletbrokerregionid-pivot-palletbrokercoremask)\n        \n    *   [partition(region\\_id: `PalletBrokerRegionId`, pivot: `u32`)](#partitionregion_id-palletbrokerregionid-pivot-u32)\n        \n    *   [pool(region\\_id: `PalletBrokerRegionId`, payee: `AccountId32`, finality: `PalletBrokerFinality`)](#poolregion_id-palletbrokerregionid-payee-accountid32-finality-palletbrokerfinality)\n        \n    *   [purchase(price\\_limit: `u128`)](#purchaseprice_limit-u128)\n        \n    *   [purchaseCredit(amount: `u128`, beneficiary: `AccountId32`)](#purchasecreditamount-u128-beneficiary-accountid32)\n        \n    *   [renew(core: `u16`)](#renewcore-u16)\n        \n    *   [requestCoreCount(core\\_count: `u16`)](#requestcorecountcore_count-u16)\n        \n    *   [reserve(workload: `Vec<PalletBrokerScheduleItem>`)](#reserveworkload-vecpalletbrokerscheduleitem)\n        \n    *   [setLease(task: `u32`, until: `u32`)](#setleasetask-u32-until-u32)\n        \n    *   [startSales(initial\\_price: `u128`, core\\_count: `u16`)](#startsalesinitial_price-u128-core_count-u16)\n        \n    *   [transfer(region\\_id: `PalletBrokerRegionId`, new\\_owner: `AccountId32`)](#transferregion_id-palletbrokerregionid-new_owner-accountid32)\n        \n    *   [unreserve(item\\_index: `u32`)](#unreserveitem_index-u32)\n        \n*   [childBounties](#childbounties)\n    *   [acceptCurator(parent\\_bounty\\_id: `Compact<u32>`, child\\_bounty\\_id: `Compact<u32>`)](#acceptcuratorparent_bounty_id-compactu32-child_bounty_id-compactu32)\n        \n    *   [addChildBounty(parent\\_bounty\\_id: `Compact<u32>`, value: `Compact<u128>`, description: `Bytes`)](#addchildbountyparent_bounty_id-compactu32-value-compactu128-description-bytes)\n        \n    *   [awardChildBounty(parent\\_bounty\\_id: `Compact<u32>`, child\\_bounty\\_id: `Compact<u32>`, beneficiary: `MultiAddress`)](#awardchildbountyparent_bounty_id-compactu32-child_bounty_id-compactu32-beneficiary-multiaddress)\n        \n    *   [claimChildBounty(parent\\_bounty\\_id: `Compact<u32>`, child\\_bounty\\_id: `Compact<u32>`)](#claimchildbountyparent_bounty_id-compactu32-child_bounty_id-compactu32)\n        \n    *   [closeChildBounty(parent\\_bounty\\_id: `Compact<u32>`, child\\_bounty\\_id: `Compact<u32>`)](#closechildbountyparent_bounty_id-compactu32-child_bounty_id-compactu32)\n        \n    *   [proposeCurator(parent\\_bounty\\_id: `Compact<u32>`, child\\_bounty\\_id: `Compact<u32>`, curator: `MultiAddress`, fee: `Compact<u128>`)](#proposecuratorparent_bounty_id-compactu32-child_bounty_id-compactu32-curator-multiaddress-fee-compactu128)\n        \n    *   [unassignCurator(parent\\_bounty\\_id: `Compact<u32>`, child\\_bounty\\_id: `Compact<u32>`)](#unassigncuratorparent_bounty_id-compactu32-child_bounty_id-compactu32)\n        \n*   [contracts](#contracts)\n    *   [call(dest: `MultiAddress`, value: `Compact<u128>`, gas\\_limit: `SpWeightsWeightV2Weight`, storage\\_deposit\\_limit: `Option<Compact<u128>>`, data: `Bytes`)](#calldest-multiaddress-value-compactu128-gas_limit-spweightsweightv2weight-storage_deposit_limit-optioncompactu128-data-bytes)\n        \n    *   [callOldWeight(dest: `MultiAddress`, value: `Compact<u128>`, gas\\_limit: `Compact<u64>`, storage\\_deposit\\_limit: `Option<Compact<u128>>`, data: `Bytes`)](#calloldweightdest-multiaddress-value-compactu128-gas_limit-compactu64-storage_deposit_limit-optioncompactu128-data-bytes)\n        \n    *   [instantiate(value: `Compact<u128>`, gas\\_limit: `SpWeightsWeightV2Weight`, storage\\_deposit\\_limit: `Option<Compact<u128>>`, code\\_hash: `H256`, data: `Bytes`, salt: `Bytes`)](#instantiatevalue-compactu128-gas_limit-spweightsweightv2weight-storage_deposit_limit-optioncompactu128-code_hash-h256-data-bytes-salt-bytes)\n        \n    *   [instantiateOldWeight(value: `Compact<u128>`, gas\\_limit: `Compact<u64>`, storage\\_deposit\\_limit: `Option<Compact<u128>>`, code\\_hash: `H256`, data: `Bytes`, salt: `Bytes`)](#instantiateoldweightvalue-compactu128-gas_limit-compactu64-storage_deposit_limit-optioncompactu128-code_hash-h256-data-bytes-salt-bytes)\n        \n    *   [instantiateWithCode(value: `Compact<u128>`, gas\\_limit: `SpWeightsWeightV2Weight`, storage\\_deposit\\_limit: `Option<Compact<u128>>`, code: `Bytes`, data: `Bytes`, salt: `Bytes`)](#instantiatewithcodevalue-compactu128-gas_limit-spweightsweightv2weight-storage_deposit_limit-optioncompactu128-code-bytes-data-bytes-salt-bytes)\n        \n    *   [instantiateWithCodeOldWeight(value: `Compact<u128>`, gas\\_limit: `Compact<u64>`, storage\\_deposit\\_limit: `Option<Compact<u128>>`, code: `Bytes`, data: `Bytes`, salt: `Bytes`)](#instantiatewithcodeoldweightvalue-compactu128-gas_limit-compactu64-storage_deposit_limit-optioncompactu128-code-bytes-data-bytes-salt-bytes)\n        \n    *   [migrate(weight\\_limit: `SpWeightsWeightV2Weight`)](#migrateweight_limit-spweightsweightv2weight)\n        \n    *   [removeCode(code\\_hash: `H256`)](#removecodecode_hash-h256)\n        \n    *   [setCode(dest: `MultiAddress`, code\\_hash: `H256`)](#setcodedest-multiaddress-code_hash-h256)\n        \n    *   [uploadCode(code: `Bytes`, storage\\_deposit\\_limit: `Option<Compact<u128>>`, determinism: `PalletContractsWasmDeterminism`)](#uploadcodecode-bytes-storage_deposit_limit-optioncompactu128-determinism-palletcontractswasmdeterminism)\n        \n*   [convictionVoting](#convictionvoting)\n    *   [delegate(class: `u16`, to: `MultiAddress`, conviction: `PalletConvictionVotingConviction`, balance: `u128`)](#delegateclass-u16-to-multiaddress-conviction-palletconvictionvotingconviction-balance-u128)\n        \n    *   [removeOtherVote(target: `MultiAddress`, class: `u16`, index: `u32`)](#removeothervotetarget-multiaddress-class-u16-index-u32)\n        \n    *   [removeVote(class: `Option<u16>`, index: `u32`)](#removevoteclass-optionu16-index-u32)\n        \n    *   [undelegate(class: `u16`)](#undelegateclass-u16)\n        \n    *   [unlock(class: `u16`, target: `MultiAddress`)](#unlockclass-u16-target-multiaddress)\n        \n    *   [vote(poll\\_index: `Compact<u32>`, vote: `PalletConvictionVotingVoteAccountVote`)](#votepoll_index-compactu32-vote-palletconvictionvotingvoteaccountvote)\n        \n*   [coreFellowship](#corefellowship)\n    *   [approve(who: `AccountId32`, at\\_rank: `u16`)](#approvewho-accountid32-at_rank-u16)\n        \n    *   [bump(who: `AccountId32`)](#bumpwho-accountid32)\n        \n    *   [import()](#import)\n        \n    *   [induct(who: `AccountId32`)](#inductwho-accountid32)\n        \n    *   [offboard(who: `AccountId32`)](#offboardwho-accountid32)\n        \n    *   [promote(who: `AccountId32`, to\\_rank: `u16`)](#promotewho-accountid32-to_rank-u16)\n        \n    *   [setActive(is\\_active: `bool`)](#setactiveis_active-bool)\n        \n    *   [setParams(params: `PalletCoreFellowshipParamsType`)](#setparamsparams-palletcorefellowshipparamstype)\n        \n    *   [submitEvidence(wish: `PalletCoreFellowshipWish`, evidence: `Bytes`)](#submitevidencewish-palletcorefellowshipwish-evidence-bytes)\n        \n*   [council](#council)\n    *   [close(proposal\\_hash: `H256`, index: `Compact<u32>`, proposal\\_weight\\_bound: `SpWeightsWeightV2Weight`, length\\_bound: `Compact<u32>`)](#closeproposal_hash-h256-index-compactu32-proposal_weight_bound-spweightsweightv2weight-length_bound-compactu32-2)\n        \n    *   [disapproveProposal(proposal\\_hash: `H256`)](#disapproveproposalproposal_hash-h256-1)\n        \n    *   [execute(proposal: `Call`, length\\_bound: `Compact<u32>`)](#executeproposal-call-length_bound-compactu32-1)\n        \n    *   [propose(threshold: `Compact<u32>`, proposal: `Call`, length\\_bound: `Compact<u32>`)](#proposethreshold-compactu32-proposal-call-length_bound-compactu32-2)\n        \n    *   [setMembers(new\\_members: `Vec<AccountId32>`, prime: `Option<AccountId32>`, old\\_count: `u32`)](#setmembersnew_members-vecaccountid32-prime-optionaccountid32-old_count-u32-1)\n        \n    *   [vote(proposal: `H256`, index: `Compact<u32>`, approve: `bool`)](#voteproposal-h256-index-compactu32-approve-bool-2)\n        \n*   [democracy](#democracy)\n    *   [blacklist(proposal\\_hash: `H256`, maybe\\_ref\\_index: `Option<u32>`)](#blacklistproposal_hash-h256-maybe_ref_index-optionu32)\n        \n    *   [cancelProposal(prop\\_index: `Compact<u32>`)](#cancelproposalprop_index-compactu32)\n        \n    *   [cancelReferendum(ref\\_index: `Compact<u32>`)](#cancelreferendumref_index-compactu32)\n        \n    *   [clearPublicProposals()](#clearpublicproposals)\n        \n    *   [delegate(to: `MultiAddress`, conviction: `PalletDemocracyConviction`, balance: `u128`)](#delegateto-multiaddress-conviction-palletdemocracyconviction-balance-u128)\n        \n    *   [emergencyCancel(ref\\_index: `u32`)](#emergencycancelref_index-u32)\n        \n    *   [externalPropose(proposal: `FrameSupportPreimagesBounded`)](#externalproposeproposal-framesupportpreimagesbounded)\n        \n    *   [externalProposeDefault(proposal: `FrameSupportPreimagesBounded`)](#externalproposedefaultproposal-framesupportpreimagesbounded)\n        \n    *   [externalProposeMajority(proposal: `FrameSupportPreimagesBounded`)](#externalproposemajorityproposal-framesupportpreimagesbounded)\n        \n    *   [fastTrack(proposal\\_hash: `H256`, voting\\_period: `u32`, delay: `u32`)](#fasttrackproposal_hash-h256-voting_period-u32-delay-u32)\n        \n    *   [propose(proposal: `FrameSupportPreimagesBounded`, value: `Compact<u128>`)](#proposeproposal-framesupportpreimagesbounded-value-compactu128)\n        \n    *   [removeOtherVote(target: `MultiAddress`, index: `u32`)](#removeothervotetarget-multiaddress-index-u32)\n        \n    *   [removeVote(index: `u32`)](#removevoteindex-u32)\n        \n    *   [second(proposal: `Compact<u32>`)](#secondproposal-compactu32)\n        \n    *   [setMetadata(owner: `PalletDemocracyMetadataOwner`, maybe\\_hash: `Option<H256>`)](#setmetadataowner-palletdemocracymetadataowner-maybe_hash-optionh256)\n        \n    *   [undelegate()](#undelegate)\n        \n    *   [unlock(target: `MultiAddress`)](#unlocktarget-multiaddress)\n        \n    *   [vetoExternal(proposal\\_hash: `H256`)](#vetoexternalproposal_hash-h256)\n        \n    *   [vote(ref\\_index: `Compact<u32>`, vote: `PalletDemocracyVoteAccountVote`)](#voteref_index-compactu32-vote-palletdemocracyvoteaccountvote)\n        \n*   [electionProviderMultiPhase](#electionprovidermultiphase)\n    *   [governanceFallback(maybe\\_max\\_voters: `Option<u32>`, maybe\\_max\\_targets: `Option<u32>`)](#governancefallbackmaybe_max_voters-optionu32-maybe_max_targets-optionu32)\n        \n    *   [setEmergencyElectionResult(supports: `Vec<(AccountId32,SpNposElectionsSupport)>`)](#setemergencyelectionresultsupports-vecaccountid32spnposelectionssupport)\n        \n    *   [setMinimumUntrustedScore(maybe\\_next\\_score: `Option<SpNposElectionsElectionScore>`)](#setminimumuntrustedscoremaybe_next_score-optionspnposelectionselectionscore)\n        \n    *   [submit(raw\\_solution: `PalletElectionProviderMultiPhaseRawSolution`)](#submitraw_solution-palletelectionprovidermultiphaserawsolution)\n        \n    *   [submitUnsigned(raw\\_solution: `PalletElectionProviderMultiPhaseRawSolution`, witness: `PalletElectionProviderMultiPhaseSolutionOrSnapshotSize`)](#submitunsignedraw_solution-palletelectionprovidermultiphaserawsolution-witness-palletelectionprovidermultiphasesolutionorsnapshotsize)\n        \n*   [elections](#elections)\n    *   [cleanDefunctVoters(num\\_voters: `u32`, num\\_defunct: `u32`)](#cleandefunctvotersnum_voters-u32-num_defunct-u32)\n        \n    *   [removeMember(who: `MultiAddress`, slash\\_bond: `bool`, rerun\\_election: `bool`)](#removememberwho-multiaddress-slash_bond-bool-rerun_election-bool)\n        \n    *   [removeVoter()](#removevoter)\n        \n    *   [renounceCandidacy(renouncing: `PalletElectionsPhragmenRenouncing`)](#renouncecandidacyrenouncing-palletelectionsphragmenrenouncing)\n        \n    *   [submitCandidacy(candidate\\_count: `Compact<u32>`)](#submitcandidacycandidate_count-compactu32)\n        \n    *   [vote(votes: `Vec<AccountId32>`, value: `Compact<u128>`)](#votevotes-vecaccountid32-value-compactu128)\n        \n*   [fastUnstake](#fastunstake)\n    *   [control(eras\\_to\\_check: `u32`)](#controleras_to_check-u32)\n        \n    *   [deregister()](#deregister)\n        \n    *   [registerFastUnstake()](#registerfastunstake)\n        \n*   [glutton](#glutton)\n    *   [initializePallet(new\\_count: `u32`, witness\\_count: `Option<u32>`)](#initializepalletnew_count-u32-witness_count-optionu32)\n        \n    *   [setCompute(compute: `u64`)](#setcomputecompute-u64)\n        \n    *   [setStorage(storage: `u64`)](#setstoragestorage-u64)\n        \n*   [grandpa](#grandpa)\n    *   [noteStalled(delay: `u32`, best\\_finalized\\_block\\_number: `u32`)](#notestalleddelay-u32-best_finalized_block_number-u32)\n        \n    *   [reportEquivocation(equivocation\\_proof: `SpConsensusGrandpaEquivocationProof`, key\\_owner\\_proof: `SpSessionMembershipProof`)](#reportequivocationequivocation_proof-spconsensusgrandpaequivocationproof-key_owner_proof-spsessionmembershipproof)\n        \n    *   [reportEquivocationUnsigned(equivocation\\_proof: `SpConsensusGrandpaEquivocationProof`, key\\_owner\\_proof: `SpSessionMembershipProof`)](#reportequivocationunsignedequivocation_proof-spconsensusgrandpaequivocationproof-key_owner_proof-spsessionmembershipproof)\n        \n*   [identity](#identity)\n    *   [addRegistrar(account: `MultiAddress`)](#addregistraraccount-multiaddress)\n        \n    *   [addSub(sub: `MultiAddress`, data: `Data`)](#addsubsub-multiaddress-data-data)\n        \n    *   [cancelRequest(reg\\_index: `u32`)](#cancelrequestreg_index-u32)\n        \n    *   [clearIdentity()](#clearidentity)\n        \n    *   [killIdentity(target: `MultiAddress`)](#killidentitytarget-multiaddress)\n        \n    *   [provideJudgement(reg\\_index: `Compact<u32>`, target: `MultiAddress`, judgement: `PalletIdentityJudgement`, identity: `H256`)](#providejudgementreg_index-compactu32-target-multiaddress-judgement-palletidentityjudgement-identity-h256)\n        \n    *   [quitSub()](#quitsub)\n        \n    *   [removeSub(sub: `MultiAddress`)](#removesubsub-multiaddress)\n        \n    *   [renameSub(sub: `MultiAddress`, data: `Data`)](#renamesubsub-multiaddress-data-data)\n        \n    *   [requestJudgement(reg\\_index: `Compact<u32>`, max\\_fee: `Compact<u128>`)](#requestjudgementreg_index-compactu32-max_fee-compactu128)\n        \n    *   [setAccountId(index: `Compact<u32>`, new: `MultiAddress`)](#setaccountidindex-compactu32-new-multiaddress)\n        \n    *   [setFee(index: `Compact<u32>`, fee: `Compact<u128>`)](#setfeeindex-compactu32-fee-compactu128)\n        \n    *   [setFields(index: `Compact<u32>`, fields: `u64`)](#setfieldsindex-compactu32-fields-u64)\n        \n    *   [setIdentity(info: `PalletIdentityLegacyIdentityInfo`)](#setidentityinfo-palletidentitylegacyidentityinfo)\n        \n    *   [setSubs(subs: `Vec<(AccountId32,Data)>`)](#setsubssubs-vecaccountid32data)\n        \n*   [imOnline](#imonline)\n    *   [heartbeat(heartbeat: `PalletImOnlineHeartbeat`, signature: `PalletImOnlineSr25519AppSr25519Signature`)](#heartbeatheartbeat-palletimonlineheartbeat-signature-palletimonlinesr25519appsr25519signature)\n        \n*   [indices](#indices)\n    *   [claim(index: `u32`)](#claimindex-u32)\n        \n    *   [forceTransfer(new: `MultiAddress`, index: `u32`, freeze: `bool`)](#forcetransfernew-multiaddress-index-u32-freeze-bool)\n        \n    *   [free(index: `u32`)](#freeindex-u32)\n        \n    *   [freeze(index: `u32`)](#freezeindex-u32)\n        \n    *   [transfer(new: `MultiAddress`, index: `u32`)](#transfernew-multiaddress-index-u32)\n        \n*   [lottery](#lottery)\n    *   [buyTicket(call: `Call`)](#buyticketcall-call)\n        \n    *   [setCalls(calls: `Vec<Call>`)](#setcallscalls-veccall)\n        \n    *   [startLottery(price: `u128`, length: `u32`, delay: `u32`, repeat: `bool`)](#startlotteryprice-u128-length-u32-delay-u32-repeat-bool)\n        \n    *   [stopRepeat()](#stoprepeat)\n        \n*   [messageQueue](#messagequeue)\n    *   [executeOverweight(message\\_origin: `u32`, page: `u32`, index: `u32`, weight\\_limit: `SpWeightsWeightV2Weight`)](#executeoverweightmessage_origin-u32-page-u32-index-u32-weight_limit-spweightsweightv2weight)\n        \n    *   [reapPage(message\\_origin: `u32`, page\\_index: `u32`)](#reappagemessage_origin-u32-page_index-u32)\n        \n*   [mixnet](#mixnet)\n    *   [register(registration: `PalletMixnetRegistration`, signature: `SpMixnetAppSignature`)](#registerregistration-palletmixnetregistration-signature-spmixnetappsignature)\n        \n*   [multisig](#multisig)\n    *   [approveAsMulti(threshold: `u16`, other\\_signatories: `Vec<AccountId32>`, maybe\\_timepoint: `Option<PalletMultisigTimepoint>`, call\\_hash: `[u8;32]`, max\\_weight: `SpWeightsWeightV2Weight`)](#approveasmultithreshold-u16-other_signatories-vecaccountid32-maybe_timepoint-optionpalletmultisigtimepoint-call_hash-u832-max_weight-spweightsweightv2weight)\n        \n    *   [asMulti(threshold: `u16`, other\\_signatories: `Vec<AccountId32>`, maybe\\_timepoint: `Option<PalletMultisigTimepoint>`, call: `Call`, max\\_weight: `SpWeightsWeightV2Weight`)](#asmultithreshold-u16-other_signatories-vecaccountid32-maybe_timepoint-optionpalletmultisigtimepoint-call-call-max_weight-spweightsweightv2weight)\n        \n    *   [asMultiThreshold1(other\\_signatories: `Vec<AccountId32>`, call: `Call`)](#asmultithreshold1other_signatories-vecaccountid32-call-call)\n        \n    *   [cancelAsMulti(threshold: `u16`, other\\_signatories: `Vec<AccountId32>`, timepoint: `PalletMultisigTimepoint`, call\\_hash: `[u8;32]`)](#cancelasmultithreshold-u16-other_signatories-vecaccountid32-timepoint-palletmultisigtimepoint-call_hash-u832)\n        \n*   [nftFractionalization](#nftfractionalization)\n    *   [fractionalize(nft\\_collection\\_id: `u32`, nft\\_id: `u32`, asset\\_id: `u32`, beneficiary: `MultiAddress`, fractions: `u128`)](#fractionalizenft_collection_id-u32-nft_id-u32-asset_id-u32-beneficiary-multiaddress-fractions-u128)\n        \n    *   [unify(nft\\_collection\\_id: `u32`, nft\\_id: `u32`, asset\\_id: `u32`, beneficiary: `MultiAddress`)](#unifynft_collection_id-u32-nft_id-u32-asset_id-u32-beneficiary-multiaddress)\n        \n*   [nfts](#nfts)\n    *   [approveItemAttributes(collection: `u32`, item: `u32`, delegate: `MultiAddress`)](#approveitemattributescollection-u32-item-u32-delegate-multiaddress)\n        \n    *   [approveTransfer(collection: `u32`, item: `u32`, delegate: `MultiAddress`, maybe\\_deadline: `Option<u32>`)](#approvetransfercollection-u32-item-u32-delegate-multiaddress-maybe_deadline-optionu32)\n        \n    *   [burn(collection: `u32`, item: `u32`)](#burncollection-u32-item-u32)\n        \n    *   [buyItem(collection: `u32`, item: `u32`, bid\\_price: `u128`)](#buyitemcollection-u32-item-u32-bid_price-u128)\n        \n    *   [cancelApproval(collection: `u32`, item: `u32`, delegate: `MultiAddress`)](#cancelapprovalcollection-u32-item-u32-delegate-multiaddress)\n        \n    *   [cancelItemAttributesApproval(collection: `u32`, item: `u32`, delegate: `MultiAddress`, witness: `PalletNftsCancelAttributesApprovalWitness`)](#cancelitemattributesapprovalcollection-u32-item-u32-delegate-multiaddress-witness-palletnftscancelattributesapprovalwitness)\n        \n    *   [cancelSwap(offered\\_collection: `u32`, offered\\_item: `u32`)](#cancelswapoffered_collection-u32-offered_item-u32)\n        \n    *   [claimSwap(send\\_collection: `u32`, send\\_item: `u32`, receive\\_collection: `u32`, receive\\_item: `u32`, witness\\_price: `Option<PalletNftsPriceWithDirection>`)](#claimswapsend_collection-u32-send_item-u32-receive_collection-u32-receive_item-u32-witness_price-optionpalletnftspricewithdirection)\n        \n    *   [clearAllTransferApprovals(collection: `u32`, item: `u32`)](#clearalltransferapprovalscollection-u32-item-u32)\n        \n    *   [clearAttribute(collection: `u32`, maybe\\_item: `Option<u32>`, namespace: `PalletNftsAttributeNamespace`, key: `Bytes`)](#clearattributecollection-u32-maybe_item-optionu32-namespace-palletnftsattributenamespace-key-bytes)\n        \n    *   [clearCollectionMetadata(collection: `u32`)](#clearcollectionmetadatacollection-u32)\n        \n    *   [clearMetadata(collection: `u32`, item: `u32`)](#clearmetadatacollection-u32-item-u32)\n        \n    *   [create(admin: `MultiAddress`, config: `PalletNftsCollectionConfig`)](#createadmin-multiaddress-config-palletnftscollectionconfig)\n        \n    *   [createSwap(offered\\_collection: `u32`, offered\\_item: `u32`, desired\\_collection: `u32`, maybe\\_desired\\_item: `Option<u32>`, maybe\\_price: `Option<PalletNftsPriceWithDirection>`, duration: `u32`)](#createswapoffered_collection-u32-offered_item-u32-desired_collection-u32-maybe_desired_item-optionu32-maybe_price-optionpalletnftspricewithdirection-duration-u32)\n        \n    *   [destroy(collection: `u32`, witness: `PalletNftsDestroyWitness`)](#destroycollection-u32-witness-palletnftsdestroywitness)\n        \n    *   [forceCollectionConfig(collection: `u32`, config: `PalletNftsCollectionConfig`)](#forcecollectionconfigcollection-u32-config-palletnftscollectionconfig)\n        \n    *   [forceCollectionOwner(collection: `u32`, owner: `MultiAddress`)](#forcecollectionownercollection-u32-owner-multiaddress)\n        \n    *   [forceCreate(owner: `MultiAddress`, config: `PalletNftsCollectionConfig`)](#forcecreateowner-multiaddress-config-palletnftscollectionconfig)\n        \n    *   [forceMint(collection: `u32`, item: `u32`, mint\\_to: `MultiAddress`, item\\_config: `PalletNftsItemConfig`)](#forcemintcollection-u32-item-u32-mint_to-multiaddress-item_config-palletnftsitemconfig)\n        \n    *   [forceSetAttribute(set\\_as: `Option<AccountId32>`, collection: `u32`, maybe\\_item: `Option<u32>`, namespace: `PalletNftsAttributeNamespace`, key: `Bytes`, value: `Bytes`)](#forcesetattributeset_as-optionaccountid32-collection-u32-maybe_item-optionu32-namespace-palletnftsattributenamespace-key-bytes-value-bytes)\n        \n    *   [lockCollection(collection: `u32`, lock\\_settings: `u64`)](#lockcollectioncollection-u32-lock_settings-u64)\n        \n    *   [lockItemProperties(collection: `u32`, item: `u32`, lock\\_metadata: `bool`, lock\\_attributes: `bool`)](#lockitempropertiescollection-u32-item-u32-lock_metadata-bool-lock_attributes-bool)\n        \n    *   [lockItemTransfer(collection: `u32`, item: `u32`)](#lockitemtransfercollection-u32-item-u32)\n        \n    *   [mint(collection: `u32`, item: `u32`, mint\\_to: `MultiAddress`, witness\\_data: `Option<PalletNftsMintWitness>`)](#mintcollection-u32-item-u32-mint_to-multiaddress-witness_data-optionpalletnftsmintwitness)\n        \n    *   [mintPreSigned(mint\\_data: `PalletNftsPreSignedMint`, signature: `SpRuntimeMultiSignature`, signer: `AccountId32`)](#mintpresignedmint_data-palletnftspresignedmint-signature-spruntimemultisignature-signer-accountid32)\n        \n    *   [payTips(tips: `Vec<PalletNftsItemTip>`)](#paytipstips-vecpalletnftsitemtip)\n        \n    *   [redeposit(collection: `u32`, items: `Vec<u32>`)](#redepositcollection-u32-items-vecu32)\n        \n    *   [setAcceptOwnership(maybe\\_collection: `Option<u32>`)](#setacceptownershipmaybe_collection-optionu32)\n        \n    *   [setAttribute(collection: `u32`, maybe\\_item: `Option<u32>`, namespace: `PalletNftsAttributeNamespace`, key: `Bytes`, value: `Bytes`)](#setattributecollection-u32-maybe_item-optionu32-namespace-palletnftsattributenamespace-key-bytes-value-bytes)\n        \n    *   [setAttributesPreSigned(data: `PalletNftsPreSignedAttributes`, signature: `SpRuntimeMultiSignature`, signer: `AccountId32`)](#setattributespresigneddata-palletnftspresignedattributes-signature-spruntimemultisignature-signer-accountid32)\n        \n    *   [setCollectionMaxSupply(collection: `u32`, max\\_supply: `u32`)](#setcollectionmaxsupplycollection-u32-max_supply-u32)\n        \n    *   [setCollectionMetadata(collection: `u32`, data: `Bytes`)](#setcollectionmetadatacollection-u32-data-bytes)\n        \n    *   [setMetadata(collection: `u32`, item: `u32`, data: `Bytes`)](#setmetadatacollection-u32-item-u32-data-bytes)\n        \n    *   [setPrice(collection: `u32`, item: `u32`, price: `Option<u128>`, whitelisted\\_buyer: `Option<MultiAddress>`)](#setpricecollection-u32-item-u32-price-optionu128-whitelisted_buyer-optionmultiaddress)\n        \n    *   [setTeam(collection: `u32`, issuer: `Option<MultiAddress>`, admin: `Option<MultiAddress>`, freezer: `Option<MultiAddress>`)](#setteamcollection-u32-issuer-optionmultiaddress-admin-optionmultiaddress-freezer-optionmultiaddress)\n        \n    *   [transfer(collection: `u32`, item: `u32`, dest: `MultiAddress`)](#transfercollection-u32-item-u32-dest-multiaddress)\n        \n    *   [transferOwnership(collection: `u32`, owner: `MultiAddress`)](#transferownershipcollection-u32-owner-multiaddress)\n        \n    *   [unlockItemTransfer(collection: `u32`, item: `u32`)](#unlockitemtransfercollection-u32-item-u32)\n        \n    *   [updateMintSettings(collection: `u32`, mint\\_settings: `PalletNftsMintSettings`)](#updatemintsettingscollection-u32-mint_settings-palletnftsmintsettings)\n        \n*   [nis](#nis)\n    *   [communify(index: `Compact<u32>`)](#communifyindex-compactu32)\n        \n    *   [fundDeficit()](#funddeficit)\n        \n    *   [placeBid(amount: `Compact<u128>`, duration: `u32`)](#placebidamount-compactu128-duration-u32)\n        \n    *   [privatize(index: `Compact<u32>`)](#privatizeindex-compactu32)\n        \n    *   [retractBid(amount: `Compact<u128>`, duration: `u32`)](#retractbidamount-compactu128-duration-u32)\n        \n    *   [thawCommunal(index: `Compact<u32>`)](#thawcommunalindex-compactu32)\n        \n    *   [thawPrivate(index: `Compact<u32>`, maybe\\_proportion: `Option<Perquintill>`)](#thawprivateindex-compactu32-maybe_proportion-optionperquintill)\n        \n*   [nominationPools](#nominationpools)\n    *   [adjustPoolDeposit(pool\\_id: `u32`)](#adjustpooldepositpool_id-u32)\n        \n    *   [bondExtra(extra: `PalletNominationPoolsBondExtra`)](#bondextraextra-palletnominationpoolsbondextra)\n        \n    *   [bondExtraOther(member: `MultiAddress`, extra: `PalletNominationPoolsBondExtra`)](#bondextraothermember-multiaddress-extra-palletnominationpoolsbondextra)\n        \n    *   [chill(pool\\_id: `u32`)](#chillpool_id-u32)\n        \n    *   [claimCommission(pool\\_id: `u32`)](#claimcommissionpool_id-u32)\n        \n    *   [claimPayout()](#claimpayout)\n        \n    *   [claimPayoutOther(other: `AccountId32`)](#claimpayoutotherother-accountid32)\n        \n    *   [create(amount: `Compact<u128>`, root: `MultiAddress`, nominator: `MultiAddress`, bouncer: `MultiAddress`)](#createamount-compactu128-root-multiaddress-nominator-multiaddress-bouncer-multiaddress)\n        \n    *   [createWithPoolId(amount: `Compact<u128>`, root: `MultiAddress`, nominator: `MultiAddress`, bouncer: `MultiAddress`, pool\\_id: `u32`)](#createwithpoolidamount-compactu128-root-multiaddress-nominator-multiaddress-bouncer-multiaddress-pool_id-u32)\n        \n    *   [join(amount: `Compact<u128>`, pool\\_id: `u32`)](#joinamount-compactu128-pool_id-u32)\n        \n    *   [nominate(pool\\_id: `u32`, validators: `Vec<AccountId32>`)](#nominatepool_id-u32-validators-vecaccountid32)\n        \n    *   [poolWithdrawUnbonded(pool\\_id: `u32`, num\\_slashing\\_spans: `u32`)](#poolwithdrawunbondedpool_id-u32-num_slashing_spans-u32)\n        \n    *   [setClaimPermission(permission: `PalletNominationPoolsClaimPermission`)](#setclaimpermissionpermission-palletnominationpoolsclaimpermission)\n        \n    *   [setCommission(pool\\_id: `u32`, new\\_commission: `Option<(Perbill,AccountId32)>`)](#setcommissionpool_id-u32-new_commission-optionperbillaccountid32)\n        \n    *   [setCommissionChangeRate(pool\\_id: `u32`, change\\_rate: `PalletNominationPoolsCommissionChangeRate`)](#setcommissionchangeratepool_id-u32-change_rate-palletnominationpoolscommissionchangerate)\n        \n    *   [setCommissionClaimPermission(pool\\_id: `u32`, permission: `Option<PalletNominationPoolsCommissionClaimPermission>`)](#setcommissionclaimpermissionpool_id-u32-permission-optionpalletnominationpoolscommissionclaimpermission)\n        \n    *   [setCommissionMax(pool\\_id: `u32`, max\\_commission: `Perbill`)](#setcommissionmaxpool_id-u32-max_commission-perbill)\n        \n    *   [setConfigs(min\\_join\\_bond: `PalletNominationPoolsConfigOpU128`, min\\_create\\_bond: `PalletNominationPoolsConfigOpU128`, max\\_pools: `PalletNominationPoolsConfigOpU32`, max\\_members: `PalletNominationPoolsConfigOpU32`, max\\_members\\_per\\_pool: `PalletNominationPoolsConfigOpU32`, global\\_max\\_commission: `PalletNominationPoolsConfigOpPerbill`)](#setconfigsmin_join_bond-palletnominationpoolsconfigopu128-min_create_bond-palletnominationpoolsconfigopu128-max_pools-palletnominationpoolsconfigopu32-max_members-palletnominationpoolsconfigopu32-max_members_per_pool-palletnominationpoolsconfigopu32-global_max_commission-palletnominationpoolsconfigopperbill)\n        \n    *   [setMetadata(pool\\_id: `u32`, metadata: `Bytes`)](#setmetadatapool_id-u32-metadata-bytes)\n        \n    *   [setState(pool\\_id: `u32`, state: `PalletNominationPoolsPoolState`)](#setstatepool_id-u32-state-palletnominationpoolspoolstate)\n        \n    *   [unbond(member\\_account: `MultiAddress`, unbonding\\_points: `Compact<u128>`)](#unbondmember_account-multiaddress-unbonding_points-compactu128)\n        \n    *   [updateRoles(pool\\_id: `u32`, new\\_root: `PalletNominationPoolsConfigOpAccountId32`, new\\_nominator: `PalletNominationPoolsConfigOpAccountId32`, new\\_bouncer: `PalletNominationPoolsConfigOpAccountId32`)](#updaterolespool_id-u32-new_root-palletnominationpoolsconfigopaccountid32-new_nominator-palletnominationpoolsconfigopaccountid32-new_bouncer-palletnominationpoolsconfigopaccountid32)\n        \n    *   [withdrawUnbonded(member\\_account: `MultiAddress`, num\\_slashing\\_spans: `u32`)](#withdrawunbondedmember_account-multiaddress-num_slashing_spans-u32)\n        \n*   [poolAssets](#poolassets)\n    *   [approveTransfer(id: `Compact<u32>`, delegate: `MultiAddress`, amount: `Compact<u128>`)](#approvetransferid-compactu32-delegate-multiaddress-amount-compactu128-1)\n        \n    *   [block(id: `Compact<u32>`, who: `MultiAddress`)](#blockid-compactu32-who-multiaddress-1)\n        \n    *   [burn(id: `Compact<u32>`, who: `MultiAddress`, amount: `Compact<u128>`)](#burnid-compactu32-who-multiaddress-amount-compactu128-1)\n        \n    *   [cancelApproval(id: `Compact<u32>`, delegate: `MultiAddress`)](#cancelapprovalid-compactu32-delegate-multiaddress-1)\n        \n    *   [clearMetadata(id: `Compact<u32>`)](#clearmetadataid-compactu32-1)\n        \n    *   [create(id: `Compact<u32>`, admin: `MultiAddress`, min\\_balance: `u128`)](#createid-compactu32-admin-multiaddress-min_balance-u128-1)\n        \n    *   [destroyAccounts(id: `Compact<u32>`)](#destroyaccountsid-compactu32-1)\n        \n    *   [destroyApprovals(id: `Compact<u32>`)](#destroyapprovalsid-compactu32-1)\n        \n    *   [finishDestroy(id: `Compact<u32>`)](#finishdestroyid-compactu32-1)\n        \n    *   [forceAssetStatus(id: `Compact<u32>`, owner: `MultiAddress`, issuer: `MultiAddress`, admin: `MultiAddress`, freezer: `MultiAddress`, min\\_balance: `Compact<u128>`, is\\_sufficient: `bool`, is\\_frozen: `bool`)](#forceassetstatusid-compactu32-owner-multiaddress-issuer-multiaddress-admin-multiaddress-freezer-multiaddress-min_balance-compactu128-is_sufficient-bool-is_frozen-bool-1)\n        \n    *   [forceCancelApproval(id: `Compact<u32>`, owner: `MultiAddress`, delegate: `MultiAddress`)](#forcecancelapprovalid-compactu32-owner-multiaddress-delegate-multiaddress-1)\n        \n    *   [forceClearMetadata(id: `Compact<u32>`)](#forceclearmetadataid-compactu32-1)\n        \n    *   [forceCreate(id: `Compact<u32>`, owner: `MultiAddress`, is\\_sufficient: `bool`, min\\_balance: `Compact<u128>`)](#forcecreateid-compactu32-owner-multiaddress-is_sufficient-bool-min_balance-compactu128-1)\n        \n    *   [forceSetMetadata(id: `Compact<u32>`, name: `Bytes`, symbol: `Bytes`, decimals: `u8`, is\\_frozen: `bool`)](#forcesetmetadataid-compactu32-name-bytes-symbol-bytes-decimals-u8-is_frozen-bool-1)\n        \n    *   [forceTransfer(id: `Compact<u32>`, source: `MultiAddress`, dest: `MultiAddress`, amount: `Compact<u128>`)](#forcetransferid-compactu32-source-multiaddress-dest-multiaddress-amount-compactu128-1)\n        \n    *   [freeze(id: `Compact<u32>`, who: `MultiAddress`)](#freezeid-compactu32-who-multiaddress-1)\n        \n    *   [freezeAsset(id: `Compact<u32>`)](#freezeassetid-compactu32-1)\n        \n    *   [mint(id: `Compact<u32>`, beneficiary: `MultiAddress`, amount: `Compact<u128>`)](#mintid-compactu32-beneficiary-multiaddress-amount-compactu128-1)\n        \n    *   [refund(id: `Compact<u32>`, allow\\_burn: `bool`)](#refundid-compactu32-allow_burn-bool-1)\n        \n    *   [refundOther(id: `Compact<u32>`, who: `MultiAddress`)](#refundotherid-compactu32-who-multiaddress-1)\n        \n    *   [setMetadata(id: `Compact<u32>`, name: `Bytes`, symbol: `Bytes`, decimals: `u8`)](#setmetadataid-compactu32-name-bytes-symbol-bytes-decimals-u8-1)\n        \n    *   [setMinBalance(id: `Compact<u32>`, min\\_balance: `u128`)](#setminbalanceid-compactu32-min_balance-u128-1)\n        \n    *   [setTeam(id: `Compact<u32>`, issuer: `MultiAddress`, admin: `MultiAddress`, freezer: `MultiAddress`)](#setteamid-compactu32-issuer-multiaddress-admin-multiaddress-freezer-multiaddress-1)\n        \n    *   [startDestroy(id: `Compact<u32>`)](#startdestroyid-compactu32-1)\n        \n    *   [thaw(id: `Compact<u32>`, who: `MultiAddress`)](#thawid-compactu32-who-multiaddress-1)\n        \n    *   [thawAsset(id: `Compact<u32>`)](#thawassetid-compactu32-1)\n        \n    *   [touch(id: `Compact<u32>`)](#touchid-compactu32-1)\n        \n    *   [touchOther(id: `Compact<u32>`, who: `MultiAddress`)](#touchotherid-compactu32-who-multiaddress-1)\n        \n    *   [transfer(id: `Compact<u32>`, target: `MultiAddress`, amount: `Compact<u128>`)](#transferid-compactu32-target-multiaddress-amount-compactu128-1)\n        \n    *   [transferApproved(id: `Compact<u32>`, owner: `MultiAddress`, destination: `MultiAddress`, amount: `Compact<u128>`)](#transferapprovedid-compactu32-owner-multiaddress-destination-multiaddress-amount-compactu128-1)\n        \n    *   [transferKeepAlive(id: `Compact<u32>`, target: `MultiAddress`, amount: `Compact<u128>`)](#transferkeepaliveid-compactu32-target-multiaddress-amount-compactu128-1)\n        \n    *   [transferOwnership(id: `Compact<u32>`, owner: `MultiAddress`)](#transferownershipid-compactu32-owner-multiaddress-1)\n        \n*   [pov](#pov)\n    *   [emitEvent()](#emitevent)\n        \n    *   [noop()](#noop)\n        \n*   [preimage](#preimage)\n    *   [ensureUpdated(hashes: `Vec<H256>`)](#ensureupdatedhashes-vech256)\n        \n    *   [notePreimage(bytes: `Bytes`)](#notepreimagebytes-bytes)\n        \n    *   [requestPreimage(hash: `H256`)](#requestpreimagehash-h256)\n        \n    *   [unnotePreimage(hash: `H256`)](#unnotepreimagehash-h256)\n        \n    *   [unrequestPreimage(hash: `H256`)](#unrequestpreimagehash-h256)\n        \n*   [proxy](#proxy)\n    *   [addProxy(delegate: `MultiAddress`, proxy\\_type: `KitchensinkRuntimeProxyType`, delay: `u32`)](#addproxydelegate-multiaddress-proxy_type-kitchensinkruntimeproxytype-delay-u32)\n        \n    *   [announce(real: `MultiAddress`, call\\_hash: `H256`)](#announcereal-multiaddress-call_hash-h256)\n        \n    *   [createPure(proxy\\_type: `KitchensinkRuntimeProxyType`, delay: `u32`, index: `u16`)](#createpureproxy_type-kitchensinkruntimeproxytype-delay-u32-index-u16)\n        \n    *   [killPure(spawner: `MultiAddress`, proxy\\_type: `KitchensinkRuntimeProxyType`, index: `u16`, height: `Compact<u32>`, ext\\_index: `Compact<u32>`)](#killpurespawner-multiaddress-proxy_type-kitchensinkruntimeproxytype-index-u16-height-compactu32-ext_index-compactu32)\n        \n    *   [proxy(real: `MultiAddress`, force\\_proxy\\_type: `Option<KitchensinkRuntimeProxyType>`, call: `Call`)](#proxyreal-multiaddress-force_proxy_type-optionkitchensinkruntimeproxytype-call-call)\n        \n    *   [proxyAnnounced(delegate: `MultiAddress`, real: `MultiAddress`, force\\_proxy\\_type: `Option<KitchensinkRuntimeProxyType>`, call: `Call`)](#proxyannounceddelegate-multiaddress-real-multiaddress-force_proxy_type-optionkitchensinkruntimeproxytype-call-call)\n        \n    *   [rejectAnnouncement(delegate: `MultiAddress`, call\\_hash: `H256`)](#rejectannouncementdelegate-multiaddress-call_hash-h256)\n        \n    *   [removeAnnouncement(real: `MultiAddress`, call\\_hash: `H256`)](#removeannouncementreal-multiaddress-call_hash-h256)\n        \n    *   [removeProxies()](#removeproxies)\n        \n    *   [removeProxy(delegate: `MultiAddress`, proxy\\_type: `KitchensinkRuntimeProxyType`, delay: `u32`)](#removeproxydelegate-multiaddress-proxy_type-kitchensinkruntimeproxytype-delay-u32)\n        \n*   [rankedCollective](#rankedcollective)\n    *   [addMember(who: `MultiAddress`)](#addmemberwho-multiaddress)\n        \n    *   [cleanupPoll(poll\\_index: `u32`, max: `u32`)](#cleanuppollpoll_index-u32-max-u32)\n        \n    *   [demoteMember(who: `MultiAddress`)](#demotememberwho-multiaddress)\n        \n    *   [promoteMember(who: `MultiAddress`)](#promotememberwho-multiaddress)\n        \n    *   [removeMember(who: `MultiAddress`, min\\_rank: `u16`)](#removememberwho-multiaddress-min_rank-u16)\n        \n    *   [vote(poll: `u32`, aye: `bool`)](#votepoll-u32-aye-bool)\n        \n*   [rankedPolls](#rankedpolls)\n    *   [cancel(index: `u32`)](#cancelindex-u32)\n        \n    *   [kill(index: `u32`)](#killindex-u32)\n        \n    *   [nudgeReferendum(index: `u32`)](#nudgereferendumindex-u32)\n        \n    *   [oneFewerDeciding(track: `u16`)](#onefewerdecidingtrack-u16)\n        \n    *   [placeDecisionDeposit(index: `u32`)](#placedecisiondepositindex-u32)\n        \n    *   [refundDecisionDeposit(index: `u32`)](#refunddecisiondepositindex-u32)\n        \n    *   [refundSubmissionDeposit(index: `u32`)](#refundsubmissiondepositindex-u32)\n        \n    *   [setMetadata(index: `u32`, maybe\\_hash: `Option<H256>`)](#setmetadataindex-u32-maybe_hash-optionh256)\n        \n    *   [submit(proposal\\_origin: `KitchensinkRuntimeOriginCaller`, proposal: `FrameSupportPreimagesBounded`, enactment\\_moment: `FrameSupportScheduleDispatchTime`)](#submitproposal_origin-kitchensinkruntimeorigincaller-proposal-framesupportpreimagesbounded-enactment_moment-framesupportscheduledispatchtime)\n        \n*   [recovery](#recovery)\n    *   [asRecovered(account: `MultiAddress`, call: `Call`)](#asrecoveredaccount-multiaddress-call-call)\n        \n    *   [cancelRecovered(account: `MultiAddress`)](#cancelrecoveredaccount-multiaddress)\n        \n    *   [claimRecovery(account: `MultiAddress`)](#claimrecoveryaccount-multiaddress)\n        \n    *   [closeRecovery(rescuer: `MultiAddress`)](#closerecoveryrescuer-multiaddress)\n        \n    *   [createRecovery(friends: `Vec<AccountId32>`, threshold: `u16`, delay\\_period: `u32`)](#createrecoveryfriends-vecaccountid32-threshold-u16-delay_period-u32)\n        \n    *   [initiateRecovery(account: `MultiAddress`)](#initiaterecoveryaccount-multiaddress)\n        \n    *   [removeRecovery()](#removerecovery)\n        \n    *   [setRecovered(lost: `MultiAddress`, rescuer: `MultiAddress`)](#setrecoveredlost-multiaddress-rescuer-multiaddress)\n        \n    *   [vouchRecovery(lost: `MultiAddress`, rescuer: `MultiAddress`)](#vouchrecoverylost-multiaddress-rescuer-multiaddress)\n        \n*   [referenda](#referenda)\n    *   [cancel(index: `u32`)](#cancelindex-u32-1)\n        \n    *   [kill(index: `u32`)](#killindex-u32-1)\n        \n    *   [nudgeReferendum(index: `u32`)](#nudgereferendumindex-u32-1)\n        \n    *   [oneFewerDeciding(track: `u16`)](#onefewerdecidingtrack-u16-1)\n        \n    *   [placeDecisionDeposit(index: `u32`)](#placedecisiondepositindex-u32-1)\n        \n    *   [refundDecisionDeposit(index: `u32`)](#refunddecisiondepositindex-u32-1)\n        \n    *   [refundSubmissionDeposit(index: `u32`)](#refundsubmissiondepositindex-u32-1)\n        \n    *   [setMetadata(index: `u32`, maybe\\_hash: `Option<H256>`)](#setmetadataindex-u32-maybe_hash-optionh256-1)\n        \n    *   [submit(proposal\\_origin: `KitchensinkRuntimeOriginCaller`, proposal: `FrameSupportPreimagesBounded`, enactment\\_moment: `FrameSupportScheduleDispatchTime`)](#submitproposal_origin-kitchensinkruntimeorigincaller-proposal-framesupportpreimagesbounded-enactment_moment-framesupportscheduledispatchtime-1)\n        \n*   [remark](#remark)\n    *   [store(remark: `Bytes`)](#storeremark-bytes)\n        \n*   [rootTesting](#roottesting)\n    *   [fillBlock(ratio: `Perbill`)](#fillblockratio-perbill)\n        \n    *   [triggerDefensive()](#triggerdefensive)\n        \n*   [safeMode](#safemode)\n    *   [enter()](#enter)\n        \n    *   [extend()](#extend)\n        \n    *   [forceEnter()](#forceenter)\n        \n    *   [forceExit()](#forceexit)\n        \n    *   [forceExtend()](#forceextend)\n        \n    *   [forceReleaseDeposit(account: `AccountId32`, block: `u32`)](#forcereleasedepositaccount-accountid32-block-u32)\n        \n    *   [forceSlashDeposit(account: `AccountId32`, block: `u32`)](#forceslashdepositaccount-accountid32-block-u32)\n        \n    *   [releaseDeposit(account: `AccountId32`, block: `u32`)](#releasedepositaccount-accountid32-block-u32)\n        \n*   [salary](#salary)\n    *   [bump()](#bump)\n        \n    *   [checkPayment()](#checkpayment)\n        \n    *   [induct()](#induct)\n        \n    *   [init()](#init)\n        \n    *   [payout()](#payout)\n        \n    *   [payoutOther(beneficiary: `AccountId32`)](#payoutotherbeneficiary-accountid32)\n        \n    *   [register()](#register)\n        \n*   [scheduler](#scheduler)\n    *   [cancel(when: `u32`, index: `u32`)](#cancelwhen-u32-index-u32)\n        \n    *   [cancelNamed(id: `[u8;32]`)](#cancelnamedid-u832)\n        \n    *   [schedule(when: `u32`, maybe\\_periodic: `Option<(u32,u32)>`, priority: `u8`, call: `Call`)](#schedulewhen-u32-maybe_periodic-optionu32u32-priority-u8-call-call)\n        \n    *   [scheduleAfter(after: `u32`, maybe\\_periodic: `Option<(u32,u32)>`, priority: `u8`, call: `Call`)](#scheduleafterafter-u32-maybe_periodic-optionu32u32-priority-u8-call-call)\n        \n    *   [scheduleNamed(id: `[u8;32]`, when: `u32`, maybe\\_periodic: `Option<(u32,u32)>`, priority: `u8`, call: `Call`)](#schedulenamedid-u832-when-u32-maybe_periodic-optionu32u32-priority-u8-call-call)\n        \n    *   [scheduleNamedAfter(id: `[u8;32]`, after: `u32`, maybe\\_periodic: `Option<(u32,u32)>`, priority: `u8`, call: `Call`)](#schedulenamedafterid-u832-after-u32-maybe_periodic-optionu32u32-priority-u8-call-call)\n        \n*   [session](#session)\n    *   [purgeKeys()](#purgekeys)\n        \n    *   [setKeys(keys: `KitchensinkRuntimeSessionKeys`, proof: `Bytes`)](#setkeyskeys-kitchensinkruntimesessionkeys-proof-bytes)\n        \n*   [society](#society)\n    *   [bestowMembership(candidate: `AccountId32`)](#bestowmembershipcandidate-accountid32)\n        \n    *   [bid(value: `u128`)](#bidvalue-u128)\n        \n    *   [claimMembership()](#claimmembership)\n        \n    *   [cleanupCandidacy(candidate: `AccountId32`, max: `u32`)](#cleanupcandidacycandidate-accountid32-max-u32)\n        \n    *   [cleanupChallenge(challenge\\_round: `u32`, max: `u32`)](#cleanupchallengechallenge_round-u32-max-u32)\n        \n    *   [defenderVote(approve: `bool`)](#defendervoteapprove-bool)\n        \n    *   [dissolve()](#dissolve)\n        \n    *   [dropCandidate(candidate: `AccountId32`)](#dropcandidatecandidate-accountid32)\n        \n    *   [foundSociety(founder: `MultiAddress`, max\\_members: `u32`, max\\_intake: `u32`, max\\_strikes: `u32`, candidate\\_deposit: `u128`, rules: `Bytes`)](#foundsocietyfounder-multiaddress-max_members-u32-max_intake-u32-max_strikes-u32-candidate_deposit-u128-rules-bytes)\n        \n    *   [judgeSuspendedMember(who: `MultiAddress`, forgive: `bool`)](#judgesuspendedmemberwho-multiaddress-forgive-bool)\n        \n    *   [kickCandidate(candidate: `AccountId32`)](#kickcandidatecandidate-accountid32)\n        \n    *   [payout()](#payout-1)\n        \n    *   [punishSkeptic()](#punishskeptic)\n        \n    *   [resignCandidacy()](#resigncandidacy)\n        \n    *   [setParameters(max\\_members: `u32`, max\\_intake: `u32`, max\\_strikes: `u32`, candidate\\_deposit: `u128`)](#setparametersmax_members-u32-max_intake-u32-max_strikes-u32-candidate_deposit-u128)\n        \n    *   [unbid()](#unbid)\n        \n    *   [unvouch()](#unvouch)\n        \n    *   [vote(candidate: `MultiAddress`, approve: `bool`)](#votecandidate-multiaddress-approve-bool)\n        \n    *   [vouch(who: `MultiAddress`, value: `u128`, tip: `u128`)](#vouchwho-multiaddress-value-u128-tip-u128)\n        \n    *   [waiveRepay(amount: `u128`)](#waiverepayamount-u128)\n        \n*   [staking](#staking)\n    *   [bond(value: `Compact<u128>`, payee: `PalletStakingRewardDestination`)](#bondvalue-compactu128-payee-palletstakingrewarddestination)\n        \n    *   [bondExtra(max\\_additional: `Compact<u128>`)](#bondextramax_additional-compactu128)\n        \n    *   [cancelDeferredSlash(era: `u32`, slash\\_indices: `Vec<u32>`)](#canceldeferredslashera-u32-slash_indices-vecu32)\n        \n    *   [chill()](#chill)\n        \n    *   [chillOther(stash: `AccountId32`)](#chillotherstash-accountid32)\n        \n    *   [forceApplyMinCommission(validator\\_stash: `AccountId32`)](#forceapplymincommissionvalidator_stash-accountid32)\n        \n    *   [forceNewEra()](#forcenewera)\n        \n    *   [forceNewEraAlways()](#forceneweraalways)\n        \n    *   [forceNoEras()](#forcenoeras)\n        \n    *   [forceUnstake(stash: `AccountId32`, num\\_slashing\\_spans: `u32`)](#forceunstakestash-accountid32-num_slashing_spans-u32)\n        \n    *   [increaseValidatorCount(additional: `Compact<u32>`)](#increasevalidatorcountadditional-compactu32)\n        \n    *   [kick(who: `Vec<MultiAddress>`)](#kickwho-vecmultiaddress)\n        \n    *   [nominate(targets: `Vec<MultiAddress>`)](#nominatetargets-vecmultiaddress)\n        \n    *   [payoutStakers(validator\\_stash: `AccountId32`, era: `u32`)](#payoutstakersvalidator_stash-accountid32-era-u32)\n        \n    *   [payoutStakersByPage(validator\\_stash: `AccountId32`, era: `u32`, page: `u32`)](#payoutstakersbypagevalidator_stash-accountid32-era-u32-page-u32)\n        \n    *   [reapStash(stash: `AccountId32`, num\\_slashing\\_spans: `u32`)](#reapstashstash-accountid32-num_slashing_spans-u32)\n        \n    *   [rebond(value: `Compact<u128>`)](#rebondvalue-compactu128)\n        \n    *   [scaleValidatorCount(factor: `Percent`)](#scalevalidatorcountfactor-percent)\n        \n    *   [setController()](#setcontroller)\n        \n    *   [setInvulnerables(invulnerables: `Vec<AccountId32>`)](#setinvulnerablesinvulnerables-vecaccountid32)\n        \n    *   [setMinCommission(new: `Perbill`)](#setmincommissionnew-perbill)\n        \n    *   [setPayee(payee: `PalletStakingRewardDestination`)](#setpayeepayee-palletstakingrewarddestination)\n        \n    *   [setStakingConfigs(min\\_nominator\\_bond: `PalletStakingPalletConfigOpU128`, min\\_validator\\_bond: `PalletStakingPalletConfigOpU128`, max\\_nominator\\_count: `PalletStakingPalletConfigOpU32`, max\\_validator\\_count: `PalletStakingPalletConfigOpU32`, chill\\_threshold: `PalletStakingPalletConfigOpPercent`, min\\_commission: `PalletStakingPalletConfigOpPerbill`)](#setstakingconfigsmin_nominator_bond-palletstakingpalletconfigopu128-min_validator_bond-palletstakingpalletconfigopu128-max_nominator_count-palletstakingpalletconfigopu32-max_validator_count-palletstakingpalletconfigopu32-chill_threshold-palletstakingpalletconfigoppercent-min_commission-palletstakingpalletconfigopperbill)\n        \n    *   [setValidatorCount(new: `Compact<u32>`)](#setvalidatorcountnew-compactu32)\n        \n    *   [unbond(value: `Compact<u128>`)](#unbondvalue-compactu128)\n        \n    *   [updatePayee(controller: `AccountId32`)](#updatepayeecontroller-accountid32)\n        \n    *   [validate(prefs: `PalletStakingValidatorPrefs`)](#validateprefs-palletstakingvalidatorprefs)\n        \n    *   [withdrawUnbonded(num\\_slashing\\_spans: `u32`)](#withdrawunbondednum_slashing_spans-u32)\n        \n*   [stateTrieMigration](#statetriemigration)\n    *   [continueMigrate(limits: `PalletStateTrieMigrationMigrationLimits`, real\\_size\\_upper: `u32`, witness\\_task: `PalletStateTrieMigrationMigrationTask`)](#continuemigratelimits-palletstatetriemigrationmigrationlimits-real_size_upper-u32-witness_task-palletstatetriemigrationmigrationtask)\n        \n    *   [controlAutoMigration(maybe\\_config: `Option<PalletStateTrieMigrationMigrationLimits>`)](#controlautomigrationmaybe_config-optionpalletstatetriemigrationmigrationlimits)\n        \n    *   [forceSetProgress(progress\\_top: `PalletStateTrieMigrationProgress`, progress\\_child: `PalletStateTrieMigrationProgress`)](#forcesetprogressprogress_top-palletstatetriemigrationprogress-progress_child-palletstatetriemigrationprogress)\n        \n    *   [migrateCustomChild(root: `Bytes`, child\\_keys: `Vec<Bytes>`, total\\_size: `u32`)](#migratecustomchildroot-bytes-child_keys-vecbytes-total_size-u32)\n        \n    *   [migrateCustomTop(keys: `Vec<Bytes>`, witness\\_size: `u32`)](#migratecustomtopkeys-vecbytes-witness_size-u32)\n        \n    *   [setSignedMaxLimits(limits: `PalletStateTrieMigrationMigrationLimits`)](#setsignedmaxlimitslimits-palletstatetriemigrationmigrationlimits)\n        \n*   [sudo](#sudo)\n    *   [removeKey()](#removekey)\n        \n    *   [setKey(new: `MultiAddress`)](#setkeynew-multiaddress)\n        \n    *   [sudo(call: `Call`)](#sudocall-call)\n        \n    *   [sudoAs(who: `MultiAddress`, call: `Call`)](#sudoaswho-multiaddress-call-call)\n        \n    *   [sudoUncheckedWeight(call: `Call`, weight: `SpWeightsWeightV2Weight`)](#sudouncheckedweightcall-call-weight-spweightsweightv2weight)\n        \n*   [system](#system)\n    *   [doTask(task: `KitchensinkRuntimeRuntimeTask`)](#dotasktask-kitchensinkruntimeruntimetask)\n        \n    *   [killPrefix(prefix: `Bytes`, subkeys: `u32`)](#killprefixprefix-bytes-subkeys-u32)\n        \n    *   [killStorage(keys: `Vec<Bytes>`)](#killstoragekeys-vecbytes)\n        \n    *   [remark(remark: `Bytes`)](#remarkremark-bytes)\n        \n    *   [remarkWithEvent(remark: `Bytes`)](#remarkwitheventremark-bytes)\n        \n    *   [setCode(code: `Bytes`)](#setcodecode-bytes)\n        \n    *   [setCodeWithoutChecks(code: `Bytes`)](#setcodewithoutcheckscode-bytes)\n        \n    *   [setHeapPages(pages: `u64`)](#setheappagespages-u64)\n        \n    *   [setStorage(items: `Vec<(Bytes,Bytes)>`)](#setstorageitems-vecbytesbytes)\n        \n*   [technicalCommittee](#technicalcommittee)\n    *   [close(proposal\\_hash: `H256`, index: `Compact<u32>`, proposal\\_weight\\_bound: `SpWeightsWeightV2Weight`, length\\_bound: `Compact<u32>`)](#closeproposal_hash-h256-index-compactu32-proposal_weight_bound-spweightsweightv2weight-length_bound-compactu32-3)\n        \n    *   [disapproveProposal(proposal\\_hash: `H256`)](#disapproveproposalproposal_hash-h256-2)\n        \n    *   [execute(proposal: `Call`, length\\_bound: `Compact<u32>`)](#executeproposal-call-length_bound-compactu32-2)\n        \n    *   [propose(threshold: `Compact<u32>`, proposal: `Call`, length\\_bound: `Compact<u32>`)](#proposethreshold-compactu32-proposal-call-length_bound-compactu32-3)\n        \n    *   [setMembers(new\\_members: `Vec<AccountId32>`, prime: `Option<AccountId32>`, old\\_count: `u32`)](#setmembersnew_members-vecaccountid32-prime-optionaccountid32-old_count-u32-2)\n        \n    *   [vote(proposal: `H256`, index: `Compact<u32>`, approve: `bool`)](#voteproposal-h256-index-compactu32-approve-bool-3)\n        \n*   [technicalMembership](#technicalmembership)\n    *   [addMember(who: `MultiAddress`)](#addmemberwho-multiaddress-1)\n        \n    *   [changeKey(new: `MultiAddress`)](#changekeynew-multiaddress)\n        \n    *   [clearPrime()](#clearprime)\n        \n    *   [removeMember(who: `MultiAddress`)](#removememberwho-multiaddress)\n        \n    *   [resetMembers(members: `Vec<AccountId32>`)](#resetmembersmembers-vecaccountid32)\n        \n    *   [setPrime(who: `MultiAddress`)](#setprimewho-multiaddress)\n        \n    *   [swapMember(remove: `MultiAddress`, add: `MultiAddress`)](#swapmemberremove-multiaddress-add-multiaddress)\n        \n*   [timestamp](#timestamp)\n    *   [set(now: `Compact<u64>`)](#setnow-compactu64)\n        \n*   [tips](#tips)\n    *   [closeTip(hash: `H256`)](#closetiphash-h256)\n        \n    *   [reportAwesome(reason: `Bytes`, who: `MultiAddress`)](#reportawesomereason-bytes-who-multiaddress)\n        \n    *   [retractTip(hash: `H256`)](#retracttiphash-h256)\n        \n    *   [slashTip(hash: `H256`)](#slashtiphash-h256)\n        \n    *   [tip(hash: `H256`, tip\\_value: `Compact<u128>`)](#tiphash-h256-tip_value-compactu128)\n        \n    *   [tipNew(reason: `Bytes`, who: `MultiAddress`, tip\\_value: `Compact<u128>`)](#tipnewreason-bytes-who-multiaddress-tip_value-compactu128)\n        \n*   [transactionStorage](#transactionstorage)\n    *   [checkProof(proof: `SpTransactionStorageProofTransactionStorageProof`)](#checkproofproof-sptransactionstorageprooftransactionstorageproof)\n        \n    *   [renew(block: `u32`, index: `u32`)](#renewblock-u32-index-u32)\n        \n    *   [store(data: `Bytes`)](#storedata-bytes)\n        \n*   [treasury](#treasury)\n    *   [approveProposal(proposal\\_id: `Compact<u32>`)](#approveproposalproposal_id-compactu32)\n        \n    *   [checkStatus(index: `u32`)](#checkstatusindex-u32)\n        \n    *   [payout(index: `u32`)](#payoutindex-u32)\n        \n    *   [proposeSpend(value: `Compact<u128>`, beneficiary: `MultiAddress`)](#proposespendvalue-compactu128-beneficiary-multiaddress)\n        \n    *   [rejectProposal(proposal\\_id: `Compact<u32>`)](#rejectproposalproposal_id-compactu32)\n        \n    *   [removeApproval(proposal\\_id: `Compact<u32>`)](#removeapprovalproposal_id-compactu32)\n        \n    *   [spend(asset\\_kind: `u32`, amount: `Compact<u128>`, beneficiary: `MultiAddress`, valid\\_from: `Option<u32>`)](#spendasset_kind-u32-amount-compactu128-beneficiary-multiaddress-valid_from-optionu32)\n        \n    *   [spendLocal(amount: `Compact<u128>`, beneficiary: `MultiAddress`)](#spendlocalamount-compactu128-beneficiary-multiaddress)\n        \n    *   [voidSpend(index: `u32`)](#voidspendindex-u32)\n        \n*   [txPause](#txpause)\n    *   [pause(full\\_name: `(Bytes,Bytes)`)](#pausefull_name-bytesbytes)\n        \n    *   [unpause(ident: `(Bytes,Bytes)`)](#unpauseident-bytesbytes)\n        \n*   [uniques](#uniques)\n    *   [approveTransfer(collection: `u32`, item: `u32`, delegate: `MultiAddress`)](#approvetransfercollection-u32-item-u32-delegate-multiaddress)\n        \n    *   [burn(collection: `u32`, item: `u32`, check\\_owner: `Option<MultiAddress>`)](#burncollection-u32-item-u32-check_owner-optionmultiaddress)\n        \n    *   [buyItem(collection: `u32`, item: `u32`, bid\\_price: `u128`)](#buyitemcollection-u32-item-u32-bid_price-u128-1)\n        \n    *   [cancelApproval(collection: `u32`, item: `u32`, maybe\\_check\\_delegate: `Option<MultiAddress>`)](#cancelapprovalcollection-u32-item-u32-maybe_check_delegate-optionmultiaddress)\n        \n    *   [clearAttribute(collection: `u32`, maybe\\_item: `Option<u32>`, key: `Bytes`)](#clearattributecollection-u32-maybe_item-optionu32-key-bytes)\n        \n    *   [clearCollectionMetadata(collection: `u32`)](#clearcollectionmetadatacollection-u32-1)\n        \n    *   [clearMetadata(collection: `u32`, item: `u32`)](#clearmetadatacollection-u32-item-u32-1)\n        \n    *   [create(collection: `u32`, admin: `MultiAddress`)](#createcollection-u32-admin-multiaddress)\n        \n    *   [destroy(collection: `u32`, witness: `PalletUniquesDestroyWitness`)](#destroycollection-u32-witness-palletuniquesdestroywitness)\n        \n    *   [forceCreate(collection: `u32`, owner: `MultiAddress`, free\\_holding: `bool`)](#forcecreatecollection-u32-owner-multiaddress-free_holding-bool)\n        \n    *   [forceItemStatus(collection: `u32`, owner: `MultiAddress`, issuer: `MultiAddress`, admin: `MultiAddress`, freezer: `MultiAddress`, free\\_holding: `bool`, is\\_frozen: `bool`)](#forceitemstatuscollection-u32-owner-multiaddress-issuer-multiaddress-admin-multiaddress-freezer-multiaddress-free_holding-bool-is_frozen-bool)\n        \n    *   [freeze(collection: `u32`, item: `u32`)](#freezecollection-u32-item-u32)\n        \n    *   [freezeCollection(collection: `u32`)](#freezecollectioncollection-u32)\n        \n    *   [mint(collection: `u32`, item: `u32`, owner: `MultiAddress`)](#mintcollection-u32-item-u32-owner-multiaddress)\n        \n    *   [redeposit(collection: `u32`, items: `Vec<u32>`)](#redepositcollection-u32-items-vecu32-1)\n        \n    *   [setAcceptOwnership(maybe\\_collection: `Option<u32>`)](#setacceptownershipmaybe_collection-optionu32-1)\n        \n    *   [setAttribute(collection: `u32`, maybe\\_item: `Option<u32>`, key: `Bytes`, value: `Bytes`)](#setattributecollection-u32-maybe_item-optionu32-key-bytes-value-bytes)\n        \n    *   [setCollectionMaxSupply(collection: `u32`, max\\_supply: `u32`)](#setcollectionmaxsupplycollection-u32-max_supply-u32-1)\n        \n    *   [setCollectionMetadata(collection: `u32`, data: `Bytes`, is\\_frozen: `bool`)](#setcollectionmetadatacollection-u32-data-bytes-is_frozen-bool)\n        \n    *   [setMetadata(collection: `u32`, item: `u32`, data: `Bytes`, is\\_frozen: `bool`)](#setmetadatacollection-u32-item-u32-data-bytes-is_frozen-bool)\n        \n    *   [setPrice(collection: `u32`, item: `u32`, price: `Option<u128>`, whitelisted\\_buyer: `Option<MultiAddress>`)](#setpricecollection-u32-item-u32-price-optionu128-whitelisted_buyer-optionmultiaddress-1)\n        \n    *   [setTeam(collection: `u32`, issuer: `MultiAddress`, admin: `MultiAddress`, freezer: `MultiAddress`)](#setteamcollection-u32-issuer-multiaddress-admin-multiaddress-freezer-multiaddress)\n        \n    *   [thaw(collection: `u32`, item: `u32`)](#thawcollection-u32-item-u32)\n        \n    *   [thawCollection(collection: `u32`)](#thawcollectioncollection-u32)\n        \n    *   [transfer(collection: `u32`, item: `u32`, dest: `MultiAddress`)](#transfercollection-u32-item-u32-dest-multiaddress-1)\n        \n    *   [transferOwnership(collection: `u32`, owner: `MultiAddress`)](#transferownershipcollection-u32-owner-multiaddress-1)\n        \n*   [utility](#utility)\n    *   [asDerivative(index: `u16`, call: `Call`)](#asderivativeindex-u16-call-call)\n        \n    *   [batch(calls: `Vec<Call>`)](#batchcalls-veccall)\n        \n    *   [batchAll(calls: `Vec<Call>`)](#batchallcalls-veccall)\n        \n    *   [dispatchAs(as\\_origin: `KitchensinkRuntimeOriginCaller`, call: `Call`)](#dispatchasas_origin-kitchensinkruntimeorigincaller-call-call)\n        \n    *   [forceBatch(calls: `Vec<Call>`)](#forcebatchcalls-veccall)\n        \n    *   [withWeight(call: `Call`, weight: `SpWeightsWeightV2Weight`)](#withweightcall-call-weight-spweightsweightv2weight)\n        \n*   [vesting](#vesting)\n    *   [forceRemoveVestingSchedule(target: `MultiAddress`, schedule\\_index: `u32`)](#forceremovevestingscheduletarget-multiaddress-schedule_index-u32)\n        \n    *   [forceVestedTransfer(source: `MultiAddress`, target: `MultiAddress`, schedule: `PalletVestingVestingInfo`)](#forcevestedtransfersource-multiaddress-target-multiaddress-schedule-palletvestingvestinginfo)\n        \n    *   [mergeSchedules(schedule1\\_index: `u32`, schedule2\\_index: `u32`)](#mergeschedulesschedule1_index-u32-schedule2_index-u32)\n        \n    *   [vest()](#vest)\n        \n    *   [vestOther(target: `MultiAddress`)](#vestothertarget-multiaddress)\n        \n    *   [vestedTransfer(target: `MultiAddress`, schedule: `PalletVestingVestingInfo`)](#vestedtransfertarget-multiaddress-schedule-palletvestingvestinginfo)\n        \n*   [voterList](#voterlist)\n    *   [putInFrontOf(lighter: `MultiAddress`)](#putinfrontoflighter-multiaddress)\n        \n    *   [putInFrontOfOther(heavier: `MultiAddress`, lighter: `MultiAddress`)](#putinfrontofotherheavier-multiaddress-lighter-multiaddress)\n        \n    *   [rebag(dislocated: `MultiAddress`)](#rebagdislocated-multiaddress)\n        \n*   [whitelist](#whitelist)\n    *   [dispatchWhitelistedCall(call\\_hash: `H256`, call\\_encoded\\_len: `u32`, call\\_weight\\_witness: `SpWeightsWeightV2Weight`)](#dispatchwhitelistedcallcall_hash-h256-call_encoded_len-u32-call_weight_witness-spweightsweightv2weight)\n        \n    *   [dispatchWhitelistedCallWithPreimage(call: `Call`)](#dispatchwhitelistedcallwithpreimagecall-call)\n        \n    *   [removeWhitelistedCall(call\\_hash: `H256`)](#removewhitelistedcallcall_hash-h256)\n        \n    *   [whitelistCall(call\\_hash: `H256`)](#whitelistcallcall_hash-h256)"}, {"title": null, "description": null, "source_url": "https://polkadot.js.org/docs/substrate/rpc", "markdown": "[Skip to main content](#__docusaurus_skipToContent_fallback)\n\n[![polkadot{.js}](https://polkadot.js.org/docs/img/logo.svg)\\\n\\\n**polkadot{.js}**](/docs/)\n\n[Apps UI (Wallet)](https://polkadot.js.org/apps/)\n[GitHub](https://github.com/polkadot-js/docs)\n\nSearch...\n\n*   [Introduction](#)\n    \n*   [API](#)\n    \n*   [Metadata](#)\n    \n    *   [Substrate](#)\n        \n        *   [Overview](/docs/substrate)\n            \n        *   [Runtime](/docs/substrate/runtime)\n            \n        *   [JSON-RPC](/docs/substrate/rpc)\n            \n        *   [Constants](/docs/substrate/constants)\n            \n        *   [Storage](/docs/substrate/storage)\n            \n        *   [Extrinsics](/docs/substrate/extrinsics)\n            \n        *   [Events](/docs/substrate/events)\n            \n        *   [Errors](/docs/substrate/errors)\n            \n    *   [Polkadot](#)\n        \n    *   [Kusama](#)\n        \n*   [Keyring](#)\n    \n*   [Crypto Utilities](#)\n    \n*   [Contracts (API)](#)\n    \n*   [Identicon (UI)](#)\n    \n*   [Keyring (UI)](#)\n    \n*   [Extension](#)\n    \n*   [Run, Bundle, Test](#)\n    \n\n*   [](/docs/)\n    \n*   Metadata\n*   Substrate\n*   JSON-RPC\n\nOn this page\n\nJSON-RPC\n========\n\nThe following sections contain known RPC methods that may be available on specific nodes (depending on configuration and available pallets) and allow you to interact with the actual node, query, and submit.\n\n*   **[author](#author)\n    **\n    \n*   **[babe](#babe)\n    **\n    \n*   **[beefy](#beefy)\n    **\n    \n*   **[chain](#chain)\n    **\n    \n*   **[childstate](#childstate)\n    **\n    \n*   **[contracts](#contracts)\n    **\n    \n*   **[dev](#dev)\n    **\n    \n*   **[engine](#engine)\n    **\n    \n*   **[eth](#eth)\n    **\n    \n*   **[eth/net](#eth/net)\n    **\n    \n*   **[eth/web3](#eth/web3)\n    **\n    \n*   **[grandpa](#grandpa)\n    **\n    \n*   **[mmr](#mmr)\n    **\n    \n*   **[offchain](#offchain)\n    **\n    \n*   **[payment](#payment)\n    **\n    \n*   **[rpc](#rpc)\n    **\n    \n*   **[state](#state)\n    **\n    \n*   **[syncstate](#syncstate)\n    **\n    \n*   **[system](#system)\n    **\n    \n\n* * *\n\nauthor[\u200b](#author \"Direct link to author\")\n\n-------------------------------------------\n\n### hasKey(publicKey: `Bytes`, keyType: `Text`): `bool`[\u200b](#haskeypublickey-bytes-keytype-text-bool \"Direct link to haskeypublickey-bytes-keytype-text-bool\")\n\n*   **interface**: `api.rpc.author.hasKey`\n*   **jsonrpc**: `author_hasKey`\n*   **summary**: Returns true if the keystore has private keys for the given public key and key type.\n*   **unsafe**: This method is only active with appropriate flags\n\n### hasSessionKeys(sessionKeys: `Bytes`): `bool`[\u200b](#hassessionkeyssessionkeys-bytes-bool \"Direct link to hassessionkeyssessionkeys-bytes-bool\")\n\n*   **interface**: `api.rpc.author.hasSessionKeys`\n*   **jsonrpc**: `author_hasSessionKeys`\n*   **summary**: Returns true if the keystore has private keys for the given session public keys.\n*   **unsafe**: This method is only active with appropriate flags\n\n### insertKey(keyType: `Text`, suri: `Text`, publicKey: `Bytes`): `Bytes`[\u200b](#insertkeykeytype-text-suri-text-publickey-bytes-bytes \"Direct link to insertkeykeytype-text-suri-text-publickey-bytes-bytes\")\n\n*   **interface**: `api.rpc.author.insertKey`\n*   **jsonrpc**: `author_insertKey`\n*   **summary**: Insert a key into the keystore.\n*   **unsafe**: This method is only active with appropriate flags\n\n### pendingExtrinsics(): `Vec<Extrinsic>`[\u200b](#pendingextrinsics-vecextrinsic \"Direct link to pendingextrinsics-vecextrinsic\")\n\n*   **interface**: `api.rpc.author.pendingExtrinsics`\n*   **jsonrpc**: `author_pendingExtrinsics`\n*   **summary**: Returns all pending extrinsics, potentially grouped by sender\n\n### removeExtrinsic(bytesOrHash: `Vec<ExtrinsicOrHash>`): `Vec<Hash>`[\u200b](#removeextrinsicbytesorhash-vecextrinsicorhash-vechash \"Direct link to removeextrinsicbytesorhash-vecextrinsicorhash-vechash\")\n\n*   **interface**: `api.rpc.author.removeExtrinsic`\n*   **jsonrpc**: `author_removeExtrinsic`\n*   **summary**: Remove given extrinsic from the pool and temporarily ban it to prevent reimporting\n*   **unsafe**: This method is only active with appropriate flags\n\n### rotateKeys(): `Bytes`[\u200b](#rotatekeys-bytes \"Direct link to rotatekeys-bytes\")\n\n*   **interface**: `api.rpc.author.rotateKeys`\n*   **jsonrpc**: `author_rotateKeys`\n*   **summary**: Generate new session keys and returns the corresponding public keys\n*   **unsafe**: This method is only active with appropriate flags\n\n### submitAndWatchExtrinsic(extrinsic: `Extrinsic`): `ExtrinsicStatus`[\u200b](#submitandwatchextrinsicextrinsic-extrinsic-extrinsicstatus \"Direct link to submitandwatchextrinsicextrinsic-extrinsic-extrinsicstatus\")\n\n*   **interface**: `api.rpc.author.submitAndWatchExtrinsic`\n*   **jsonrpc**: `author_submitAndWatchExtrinsic`\n*   **summary**: Submit and subscribe to watch an extrinsic until unsubscribed\n\n### submitExtrinsic(extrinsic: `Extrinsic`): `Hash`[\u200b](#submitextrinsicextrinsic-extrinsic-hash \"Direct link to submitextrinsicextrinsic-extrinsic-hash\")\n\n*   **interface**: `api.rpc.author.submitExtrinsic`\n*   **jsonrpc**: `author_submitExtrinsic`\n*   **summary**: Submit a fully formatted extrinsic for block inclusion\n\n* * *\n\nbabe[\u200b](#babe \"Direct link to babe\")\n\n-------------------------------------\n\n### epochAuthorship(): `HashMap<AuthorityId, EpochAuthorship>`[\u200b](#epochauthorship-hashmapauthorityid-epochauthorship \"Direct link to epochauthorship-hashmapauthorityid-epochauthorship\")\n\n*   **interface**: `api.rpc.babe.epochAuthorship`\n*   **jsonrpc**: `babe_epochAuthorship`\n*   **summary**: Returns data about which slots (primary or secondary) can be claimed in the current epoch with the keys in the keystore\n*   **unsafe**: This method is only active with appropriate flags\n\n* * *\n\nbeefy[\u200b](#beefy \"Direct link to beefy\")\n\n----------------------------------------\n\n### getFinalizedHead(): `H256`[\u200b](#getfinalizedhead-h256 \"Direct link to getfinalizedhead-h256\")\n\n*   **interface**: `api.rpc.beefy.getFinalizedHead`\n*   **jsonrpc**: `beefy_getFinalizedHead`\n*   **summary**: Returns hash of the latest BEEFY finalized block as seen by this client.\n\n### subscribeJustifications(): `BeefyVersionedFinalityProof`[\u200b](#subscribejustifications-beefyversionedfinalityproof \"Direct link to subscribejustifications-beefyversionedfinalityproof\")\n\n*   **interface**: `api.rpc.beefy.subscribeJustifications`\n*   **jsonrpc**: `beefy_subscribeJustifications`\n*   **summary**: Returns the block most recently finalized by BEEFY, alongside its justification.\n\n* * *\n\nchain[\u200b](#chain \"Direct link to chain\")\n\n----------------------------------------\n\n### getBlock(hash?: `BlockHash`): `SignedBlock`[\u200b](#getblockhash-blockhash-signedblock \"Direct link to getblockhash-blockhash-signedblock\")\n\n*   **interface**: `api.rpc.chain.getBlock`\n*   **jsonrpc**: `chain_getBlock`\n*   **summary**: Get header and body of a relay chain block\n\n### getBlockHash(blockNumber?: `BlockNumber`): `BlockHash`[\u200b](#getblockhashblocknumber-blocknumber-blockhash \"Direct link to getblockhashblocknumber-blocknumber-blockhash\")\n\n*   **interface**: `api.rpc.chain.getBlockHash`\n*   **jsonrpc**: `chain_getBlockHash`\n*   **summary**: Get the block hash for a specific block\n\n### getFinalizedHead(): `BlockHash`[\u200b](#getfinalizedhead-blockhash \"Direct link to getfinalizedhead-blockhash\")\n\n*   **interface**: `api.rpc.chain.getFinalizedHead`\n*   **jsonrpc**: `chain_getFinalizedHead`\n*   **summary**: Get hash of the last finalized block in the canon chain\n\n### getHeader(hash?: `BlockHash`): `Header`[\u200b](#getheaderhash-blockhash-header \"Direct link to getheaderhash-blockhash-header\")\n\n*   **interface**: `api.rpc.chain.getHeader`\n*   **jsonrpc**: `chain_getHeader`\n*   **summary**: Retrieves the header for a specific block\n\n### subscribeAllHeads(): `Header`[\u200b](#subscribeallheads-header \"Direct link to subscribeallheads-header\")\n\n*   **interface**: `api.rpc.chain.subscribeAllHeads`\n*   **jsonrpc**: `chain_subscribeAllHeads`\n*   **summary**: Retrieves the newest header via subscription\n\n### subscribeFinalizedHeads(): `Header`[\u200b](#subscribefinalizedheads-header \"Direct link to subscribefinalizedheads-header\")\n\n*   **interface**: `api.rpc.chain.subscribeFinalizedHeads`\n*   **jsonrpc**: `chain_subscribeFinalizedHeads`\n*   **summary**: Retrieves the best finalized header via subscription\n\n### subscribeNewHeads(): `Header`[\u200b](#subscribenewheads-header \"Direct link to subscribenewheads-header\")\n\n*   **interface**: `api.rpc.chain.subscribeNewHeads`\n*   **jsonrpc**: `chain_subscribeNewHeads`\n*   **summary**: Retrieves the best header via subscription\n\n* * *\n\nchildstate[\u200b](#childstate \"Direct link to childstate\")\n\n-------------------------------------------------------\n\n### getKeys(childKey: `PrefixedStorageKey`, prefix: `StorageKey`, at?: `Hash`): `Vec<StorageKey>`[\u200b](#getkeyschildkey-prefixedstoragekey-prefix-storagekey-at-hash-vecstoragekey \"Direct link to getkeyschildkey-prefixedstoragekey-prefix-storagekey-at-hash-vecstoragekey\")\n\n*   **interface**: `api.rpc.childstate.getKeys`\n*   **jsonrpc**: `childstate_getKeys`\n*   **summary**: Returns the keys with prefix from a child storage, leave empty to get all the keys\n\n### getKeysPaged(childKey: `PrefixedStorageKey`, prefix: `StorageKey`, count: `u32`, startKey?: `StorageKey`, at?: `Hash`): `Vec<StorageKey>`[\u200b](#getkeyspagedchildkey-prefixedstoragekey-prefix-storagekey-count-u32-startkey-storagekey-at-hash-vecstoragekey \"Direct link to getkeyspagedchildkey-prefixedstoragekey-prefix-storagekey-count-u32-startkey-storagekey-at-hash-vecstoragekey\")\n\n*   **interface**: `api.rpc.childstate.getKeysPaged`\n*   **jsonrpc**: `childstate_getKeysPaged`\n*   **summary**: Returns the keys with prefix from a child storage with pagination support\n\n### getStorage(childKey: `PrefixedStorageKey`, key: `StorageKey`, at?: `Hash`): `Option<StorageData>`[\u200b](#getstoragechildkey-prefixedstoragekey-key-storagekey-at-hash-optionstoragedata \"Direct link to getstoragechildkey-prefixedstoragekey-key-storagekey-at-hash-optionstoragedata\")\n\n*   **interface**: `api.rpc.childstate.getStorage`\n*   **jsonrpc**: `childstate_getStorage`\n*   **summary**: Returns a child storage entry at a specific block state\n\n### getStorageEntries(childKey: `PrefixedStorageKey`, keys: `Vec<StorageKey>`, at?: `Hash`): `Vec<Option<StorageData>>`[\u200b](#getstorageentrieschildkey-prefixedstoragekey-keys-vecstoragekey-at-hash-vecoptionstoragedata \"Direct link to getstorageentrieschildkey-prefixedstoragekey-keys-vecstoragekey-at-hash-vecoptionstoragedata\")\n\n*   **interface**: `api.rpc.childstate.getStorageEntries`\n*   **jsonrpc**: `childstate_getStorageEntries`\n*   **summary**: Returns child storage entries for multiple keys at a specific block state\n\n### getStorageHash(childKey: `PrefixedStorageKey`, key: `StorageKey`, at?: `Hash`): `Option<Hash>`[\u200b](#getstoragehashchildkey-prefixedstoragekey-key-storagekey-at-hash-optionhash \"Direct link to getstoragehashchildkey-prefixedstoragekey-key-storagekey-at-hash-optionhash\")\n\n*   **interface**: `api.rpc.childstate.getStorageHash`\n*   **jsonrpc**: `childstate_getStorageHash`\n*   **summary**: Returns the hash of a child storage entry at a block state\n\n### getStorageSize(childKey: `PrefixedStorageKey`, key: `StorageKey`, at?: `Hash`): `Option<u64>`[\u200b](#getstoragesizechildkey-prefixedstoragekey-key-storagekey-at-hash-optionu64 \"Direct link to getstoragesizechildkey-prefixedstoragekey-key-storagekey-at-hash-optionu64\")\n\n*   **interface**: `api.rpc.childstate.getStorageSize`\n*   **jsonrpc**: `childstate_getStorageSize`\n*   **summary**: Returns the size of a child storage entry at a block state\n\n* * *\n\ncontracts[\u200b](#contracts \"Direct link to contracts\")\n\n----------------------------------------------------\n\n### call(callRequest: `ContractCallRequest`, at?: `BlockHash`): `ContractExecResult`[\u200b](#callcallrequest-contractcallrequest-at-blockhash-contractexecresult \"Direct link to callcallrequest-contractcallrequest-at-blockhash-contractexecresult\")\n\n*   **interface**: `api.rpc.contracts.call`\n*   **jsonrpc**: `contracts_call`\n*   **summary**: Executes a call to a contract\n*   **deprecated**: Use the runtime interface `api.call.contractsApi.call` instead\n\n### getStorage(address: `AccountId`, key: `H256`, at?: `BlockHash`): `Option<Bytes>`[\u200b](#getstorageaddress-accountid-key-h256-at-blockhash-optionbytes \"Direct link to getstorageaddress-accountid-key-h256-at-blockhash-optionbytes\")\n\n*   **interface**: `api.rpc.contracts.getStorage`\n*   **jsonrpc**: `contracts_getStorage`\n*   **summary**: Returns the value under a specified storage key in a contract\n*   **deprecated**: Use the runtime interface `api.call.contractsApi.getStorage` instead\n\n### instantiate(request: `InstantiateRequestV1`, at?: `BlockHash`): `ContractInstantiateResult`[\u200b](#instantiaterequest-instantiaterequestv1-at-blockhash-contractinstantiateresult \"Direct link to instantiaterequest-instantiaterequestv1-at-blockhash-contractinstantiateresult\")\n\n*   **interface**: `api.rpc.contracts.instantiate`\n*   **jsonrpc**: `contracts_instantiate`\n*   **summary**: Instantiate a new contract\n*   **deprecated**: Use the runtime interface `api.call.contractsApi.instantiate` instead\n\n### rentProjection(address: `AccountId`, at?: `BlockHash`): `Option<BlockNumber>`[\u200b](#rentprojectionaddress-accountid-at-blockhash-optionblocknumber \"Direct link to rentprojectionaddress-accountid-at-blockhash-optionblocknumber\")\n\n*   **interface**: `api.rpc.contracts.rentProjection`\n*   **jsonrpc**: `contracts_rentProjection`\n*   **summary**: Returns the projected time a given contract will be able to sustain paying its rent\n*   **deprecated**: Not available in newer versions of the contracts interfaces\n\n### uploadCode(uploadRequest: `CodeUploadRequest`, at?: `BlockHash`): `CodeUploadResult`[\u200b](#uploadcodeuploadrequest-codeuploadrequest-at-blockhash-codeuploadresult \"Direct link to uploadcodeuploadrequest-codeuploadrequest-at-blockhash-codeuploadresult\")\n\n*   **interface**: `api.rpc.contracts.uploadCode`\n*   **jsonrpc**: `contracts_upload_code`\n*   **summary**: Upload new code without instantiating a contract from it\n*   **deprecated**: Use the runtime interface `api.call.contractsApi.uploadCode` instead\n\n* * *\n\ndev[\u200b](#dev \"Direct link to dev\")\n\n----------------------------------\n\n### getBlockStats(at: `Hash`): `Option<BlockStats>`[\u200b](#getblockstatsat-hash-optionblockstats \"Direct link to getblockstatsat-hash-optionblockstats\")\n\n*   **interface**: `api.rpc.dev.getBlockStats`\n*   **jsonrpc**: `dev_getBlockStats`\n*   **summary**: Reexecute the specified `block_hash` and gather statistics while doing so\n*   **unsafe**: This method is only active with appropriate flags\n\n* * *\n\nengine[\u200b](#engine \"Direct link to engine\")\n\n-------------------------------------------\n\n### createBlock(createEmpty: `bool`, finalize: `bool`, parentHash?: `BlockHash`): `CreatedBlock`[\u200b](#createblockcreateempty-bool-finalize-bool-parenthash-blockhash-createdblock \"Direct link to createblockcreateempty-bool-finalize-bool-parenthash-blockhash-createdblock\")\n\n*   **interface**: `api.rpc.engine.createBlock`\n*   **jsonrpc**: `engine_createBlock`\n*   **summary**: Instructs the manual-seal authorship task to create a new block\n\n### finalizeBlock(hash: `BlockHash`, justification?: `Justification`): `bool`[\u200b](#finalizeblockhash-blockhash-justification-justification-bool \"Direct link to finalizeblockhash-blockhash-justification-justification-bool\")\n\n*   **interface**: `api.rpc.engine.finalizeBlock`\n*   **jsonrpc**: `engine_finalizeBlock`\n*   **summary**: Instructs the manual-seal authorship task to finalize a block\n\n* * *\n\neth[\u200b](#eth \"Direct link to eth\")\n\n----------------------------------\n\n### accounts(): `Vec<H160>`[\u200b](#accounts-vech160 \"Direct link to accounts-vech160\")\n\n*   **interface**: `api.rpc.eth.accounts`\n*   **jsonrpc**: `eth_accounts`\n*   **summary**: Returns accounts list.\n\n### blockNumber(): `U256`[\u200b](#blocknumber-u256 \"Direct link to blocknumber-u256\")\n\n*   **interface**: `api.rpc.eth.blockNumber`\n*   **jsonrpc**: `eth_blockNumber`\n*   **summary**: Returns the blockNumber\n\n### call(request: `EthCallRequest`, number?: `BlockNumber`): `Bytes`[\u200b](#callrequest-ethcallrequest-number-blocknumber-bytes \"Direct link to callrequest-ethcallrequest-number-blocknumber-bytes\")\n\n*   **interface**: `api.rpc.eth.call`\n*   **jsonrpc**: `eth_call`\n*   **summary**: Call contract, returning the output data.\n\n### chainId(): `U64`[\u200b](#chainid-u64 \"Direct link to chainid-u64\")\n\n*   **interface**: `api.rpc.eth.chainId`\n*   **jsonrpc**: `eth_chainId`\n*   **summary**: Returns the chain ID used for transaction signing at the current best block. None is returned if not available.\n\n### coinbase(): `H160`[\u200b](#coinbase-h160 \"Direct link to coinbase-h160\")\n\n*   **interface**: `api.rpc.eth.coinbase`\n*   **jsonrpc**: `eth_coinbase`\n*   **summary**: Returns block author.\n\n### estimateGas(request: `EthCallRequest`, number?: `BlockNumber`): `U256`[\u200b](#estimategasrequest-ethcallrequest-number-blocknumber-u256 \"Direct link to estimategasrequest-ethcallrequest-number-blocknumber-u256\")\n\n*   **interface**: `api.rpc.eth.estimateGas`\n*   **jsonrpc**: `eth_estimateGas`\n*   **summary**: Estimate gas needed for execution of given contract.\n\n### feeHistory(blockCount: `U256`, newestBlock: `BlockNumber`, rewardPercentiles: `Option<Vec<f64>>`): `EthFeeHistory`[\u200b](#feehistoryblockcount-u256-newestblock-blocknumber-rewardpercentiles-optionvecf64-ethfeehistory \"Direct link to feehistoryblockcount-u256-newestblock-blocknumber-rewardpercentiles-optionvecf64-ethfeehistory\")\n\n*   **interface**: `api.rpc.eth.feeHistory`\n*   **jsonrpc**: `eth_feeHistory`\n*   **summary**: Returns fee history for given block count & reward percentiles\n\n### gasPrice(): `U256`[\u200b](#gasprice-u256 \"Direct link to gasprice-u256\")\n\n*   **interface**: `api.rpc.eth.gasPrice`\n*   **jsonrpc**: `eth_gasPrice`\n*   **summary**: Returns current gas price.\n\n### getBalance(address: `H160`, number?: `BlockNumber`): `U256`[\u200b](#getbalanceaddress-h160-number-blocknumber-u256 \"Direct link to getbalanceaddress-h160-number-blocknumber-u256\")\n\n*   **interface**: `api.rpc.eth.getBalance`\n*   **jsonrpc**: `eth_getBalance`\n*   **summary**: Returns balance of the given account.\n\n### getBlockByHash(hash: `H256`, full: `bool`): `Option<EthRichBlock>`[\u200b](#getblockbyhashhash-h256-full-bool-optionethrichblock \"Direct link to getblockbyhashhash-h256-full-bool-optionethrichblock\")\n\n*   **interface**: `api.rpc.eth.getBlockByHash`\n*   **jsonrpc**: `eth_getBlockByHash`\n*   **summary**: Returns block with given hash.\n\n### getBlockByNumber(block: `BlockNumber`, full: `bool`): `Option<EthRichBlock>`[\u200b](#getblockbynumberblock-blocknumber-full-bool-optionethrichblock \"Direct link to getblockbynumberblock-blocknumber-full-bool-optionethrichblock\")\n\n*   **interface**: `api.rpc.eth.getBlockByNumber`\n*   **jsonrpc**: `eth_getBlockByNumber`\n*   **summary**: Returns block with given number.\n\n### getBlockTransactionCountByHash(hash: `H256`): `U256`[\u200b](#getblocktransactioncountbyhashhash-h256-u256 \"Direct link to getblocktransactioncountbyhashhash-h256-u256\")\n\n*   **interface**: `api.rpc.eth.getBlockTransactionCountByHash`\n*   **jsonrpc**: `eth_getBlockTransactionCountByHash`\n*   **summary**: Returns the number of transactions in a block with given hash.\n\n### getBlockTransactionCountByNumber(block: `BlockNumber`): `U256`[\u200b](#getblocktransactioncountbynumberblock-blocknumber-u256 \"Direct link to getblocktransactioncountbynumberblock-blocknumber-u256\")\n\n*   **interface**: `api.rpc.eth.getBlockTransactionCountByNumber`\n*   **jsonrpc**: `eth_getBlockTransactionCountByNumber`\n*   **summary**: Returns the number of transactions in a block with given block number.\n\n### getCode(address: `H160`, number?: `BlockNumber`): `Bytes`[\u200b](#getcodeaddress-h160-number-blocknumber-bytes \"Direct link to getcodeaddress-h160-number-blocknumber-bytes\")\n\n*   **interface**: `api.rpc.eth.getCode`\n*   **jsonrpc**: `eth_getCode`\n*   **summary**: Returns the code at given address at given time (block number).\n\n### getFilterChanges(index: `U256`): `EthFilterChanges`[\u200b](#getfilterchangesindex-u256-ethfilterchanges \"Direct link to getfilterchangesindex-u256-ethfilterchanges\")\n\n*   **interface**: `api.rpc.eth.getFilterChanges`\n*   **jsonrpc**: `eth_getFilterChanges`\n*   **summary**: Returns filter changes since last poll.\n\n### getFilterLogs(index: `U256`): `Vec<EthLog>`[\u200b](#getfilterlogsindex-u256-vecethlog \"Direct link to getfilterlogsindex-u256-vecethlog\")\n\n*   **interface**: `api.rpc.eth.getFilterLogs`\n*   **jsonrpc**: `eth_getFilterLogs`\n*   **summary**: Returns all logs matching given filter (in a range 'from' - 'to').\n\n### getLogs(filter: `EthFilter`): `Vec<EthLog>`[\u200b](#getlogsfilter-ethfilter-vecethlog \"Direct link to getlogsfilter-ethfilter-vecethlog\")\n\n*   **interface**: `api.rpc.eth.getLogs`\n*   **jsonrpc**: `eth_getLogs`\n*   **summary**: Returns logs matching given filter object.\n\n### getProof(address: `H160`, storageKeys: `Vec<H256>`, number: `BlockNumber`): `EthAccount`[\u200b](#getproofaddress-h160-storagekeys-vech256-number-blocknumber-ethaccount \"Direct link to getproofaddress-h160-storagekeys-vech256-number-blocknumber-ethaccount\")\n\n*   **interface**: `api.rpc.eth.getProof`\n*   **jsonrpc**: `eth_getProof`\n*   **summary**: Returns proof for account and storage.\n\n### getStorageAt(address: `H160`, index: `U256`, number?: `BlockNumber`): `H256`[\u200b](#getstorageataddress-h160-index-u256-number-blocknumber-h256 \"Direct link to getstorageataddress-h160-index-u256-number-blocknumber-h256\")\n\n*   **interface**: `api.rpc.eth.getStorageAt`\n*   **jsonrpc**: `eth_getStorageAt`\n*   **summary**: Returns content of the storage at given address.\n\n### getTransactionByBlockHashAndIndex(hash: `H256`, index: `U256`): `EthTransaction`[\u200b](#gettransactionbyblockhashandindexhash-h256-index-u256-ethtransaction \"Direct link to gettransactionbyblockhashandindexhash-h256-index-u256-ethtransaction\")\n\n*   **interface**: `api.rpc.eth.getTransactionByBlockHashAndIndex`\n*   **jsonrpc**: `eth_getTransactionByBlockHashAndIndex`\n*   **summary**: Returns transaction at given block hash and index.\n\n### getTransactionByBlockNumberAndIndex(number: `BlockNumber`, index: `U256`): `EthTransaction`[\u200b](#gettransactionbyblocknumberandindexnumber-blocknumber-index-u256-ethtransaction \"Direct link to gettransactionbyblocknumberandindexnumber-blocknumber-index-u256-ethtransaction\")\n\n*   **interface**: `api.rpc.eth.getTransactionByBlockNumberAndIndex`\n*   **jsonrpc**: `eth_getTransactionByBlockNumberAndIndex`\n*   **summary**: Returns transaction by given block number and index.\n\n### getTransactionByHash(hash: `H256`): `EthTransaction`[\u200b](#gettransactionbyhashhash-h256-ethtransaction \"Direct link to gettransactionbyhashhash-h256-ethtransaction\")\n\n*   **interface**: `api.rpc.eth.getTransactionByHash`\n*   **jsonrpc**: `eth_getTransactionByHash`\n*   **summary**: Get transaction by its hash.\n\n### getTransactionCount(address: `H160`, number?: `BlockNumber`): `U256`[\u200b](#gettransactioncountaddress-h160-number-blocknumber-u256 \"Direct link to gettransactioncountaddress-h160-number-blocknumber-u256\")\n\n*   **interface**: `api.rpc.eth.getTransactionCount`\n*   **jsonrpc**: `eth_getTransactionCount`\n*   **summary**: Returns the number of transactions sent from given address at given time (block number).\n\n### getTransactionReceipt(hash: `H256`): `EthReceipt`[\u200b](#gettransactionreceipthash-h256-ethreceipt \"Direct link to gettransactionreceipthash-h256-ethreceipt\")\n\n*   **interface**: `api.rpc.eth.getTransactionReceipt`\n*   **jsonrpc**: `eth_getTransactionReceipt`\n*   **summary**: Returns transaction receipt by transaction hash.\n\n### getUncleByBlockHashAndIndex(hash: `H256`, index: `U256`): `EthRichBlock`[\u200b](#getunclebyblockhashandindexhash-h256-index-u256-ethrichblock \"Direct link to getunclebyblockhashandindexhash-h256-index-u256-ethrichblock\")\n\n*   **interface**: `api.rpc.eth.getUncleByBlockHashAndIndex`\n*   **jsonrpc**: `eth_getUncleByBlockHashAndIndex`\n*   **summary**: Returns an uncles at given block and index.\n\n### getUncleByBlockNumberAndIndex(number: `BlockNumber`, index: `U256`): `EthRichBlock`[\u200b](#getunclebyblocknumberandindexnumber-blocknumber-index-u256-ethrichblock \"Direct link to getunclebyblocknumberandindexnumber-blocknumber-index-u256-ethrichblock\")\n\n*   **interface**: `api.rpc.eth.getUncleByBlockNumberAndIndex`\n*   **jsonrpc**: `eth_getUncleByBlockNumberAndIndex`\n*   **summary**: Returns an uncles at given block and index.\n\n### getUncleCountByBlockHash(hash: `H256`): `U256`[\u200b](#getunclecountbyblockhashhash-h256-u256 \"Direct link to getunclecountbyblockhashhash-h256-u256\")\n\n*   **interface**: `api.rpc.eth.getUncleCountByBlockHash`\n*   **jsonrpc**: `eth_getUncleCountByBlockHash`\n*   **summary**: Returns the number of uncles in a block with given hash.\n\n### getUncleCountByBlockNumber(number: `BlockNumber`): `U256`[\u200b](#getunclecountbyblocknumbernumber-blocknumber-u256 \"Direct link to getunclecountbyblocknumbernumber-blocknumber-u256\")\n\n*   **interface**: `api.rpc.eth.getUncleCountByBlockNumber`\n*   **jsonrpc**: `eth_getUncleCountByBlockNumber`\n*   **summary**: Returns the number of uncles in a block with given block number.\n\n### getWork(): `EthWork`[\u200b](#getwork-ethwork \"Direct link to getwork-ethwork\")\n\n*   **interface**: `api.rpc.eth.getWork`\n*   **jsonrpc**: `eth_getWork`\n*   **summary**: Returns the hash of the current block, the seedHash, and the boundary condition to be met.\n\n### hashrate(): `U256`[\u200b](#hashrate-u256 \"Direct link to hashrate-u256\")\n\n*   **interface**: `api.rpc.eth.hashrate`\n*   **jsonrpc**: `eth_hashrate`\n*   **summary**: Returns the number of hashes per second that the node is mining with.\n\n### maxPriorityFeePerGas(): `U256`[\u200b](#maxpriorityfeepergas-u256 \"Direct link to maxpriorityfeepergas-u256\")\n\n*   **interface**: `api.rpc.eth.maxPriorityFeePerGas`\n*   **jsonrpc**: `eth_maxPriorityFeePerGas`\n*   **summary**: Returns max priority fee per gas\n\n### mining(): `bool`[\u200b](#mining-bool \"Direct link to mining-bool\")\n\n*   **interface**: `api.rpc.eth.mining`\n*   **jsonrpc**: `eth_mining`\n*   **summary**: Returns true if client is actively mining new blocks.\n\n### newBlockFilter(): `U256`[\u200b](#newblockfilter-u256 \"Direct link to newblockfilter-u256\")\n\n*   **interface**: `api.rpc.eth.newBlockFilter`\n*   **jsonrpc**: `eth_newBlockFilter`\n*   **summary**: Returns id of new block filter.\n\n### newFilter(filter: `EthFilter`): `U256`[\u200b](#newfilterfilter-ethfilter-u256 \"Direct link to newfilterfilter-ethfilter-u256\")\n\n*   **interface**: `api.rpc.eth.newFilter`\n*   **jsonrpc**: `eth_newFilter`\n*   **summary**: Returns id of new filter.\n\n### newPendingTransactionFilter(): `U256`[\u200b](#newpendingtransactionfilter-u256 \"Direct link to newpendingtransactionfilter-u256\")\n\n*   **interface**: `api.rpc.eth.newPendingTransactionFilter`\n*   **jsonrpc**: `eth_newPendingTransactionFilter`\n*   **summary**: Returns id of new block filter.\n\n### protocolVersion(): `u64`[\u200b](#protocolversion-u64 \"Direct link to protocolversion-u64\")\n\n*   **interface**: `api.rpc.eth.protocolVersion`\n*   **jsonrpc**: `eth_protocolVersion`\n*   **summary**: Returns protocol version encoded as a string (quotes are necessary).\n\n### sendRawTransaction(bytes: `Bytes`): `H256`[\u200b](#sendrawtransactionbytes-bytes-h256 \"Direct link to sendrawtransactionbytes-bytes-h256\")\n\n*   **interface**: `api.rpc.eth.sendRawTransaction`\n*   **jsonrpc**: `eth_sendRawTransaction`\n*   **summary**: Sends signed transaction, returning its hash.\n\n### sendTransaction(tx: `EthTransactionRequest`): `H256`[\u200b](#sendtransactiontx-ethtransactionrequest-h256 \"Direct link to sendtransactiontx-ethtransactionrequest-h256\")\n\n*   **interface**: `api.rpc.eth.sendTransaction`\n*   **jsonrpc**: `eth_sendTransaction`\n*   **summary**: Sends transaction; will block waiting for signer to return the transaction hash\n\n### submitHashrate(index: `U256`, hash: `H256`): `bool`[\u200b](#submithashrateindex-u256-hash-h256-bool \"Direct link to submithashrateindex-u256-hash-h256-bool\")\n\n*   **interface**: `api.rpc.eth.submitHashrate`\n*   **jsonrpc**: `eth_submitHashrate`\n*   **summary**: Used for submitting mining hashrate.\n\n### submitWork(nonce: `H64`, headerHash: `H256`, mixDigest: `H256`): `bool`[\u200b](#submitworknonce-h64-headerhash-h256-mixdigest-h256-bool \"Direct link to submitworknonce-h64-headerhash-h256-mixdigest-h256-bool\")\n\n*   **interface**: `api.rpc.eth.submitWork`\n*   **jsonrpc**: `eth_submitWork`\n*   **summary**: Used for submitting a proof-of-work solution.\n\n### subscribe(kind: `EthSubKind`, params?: `EthSubParams`): `Null`[\u200b](#subscribekind-ethsubkind-params-ethsubparams-null \"Direct link to subscribekind-ethsubkind-params-ethsubparams-null\")\n\n*   **interface**: `api.rpc.eth.subscribe`\n*   **jsonrpc**: `eth_subscribe`\n*   **summary**: Subscribe to Eth subscription.\n\n### syncing(): `EthSyncStatus`[\u200b](#syncing-ethsyncstatus \"Direct link to syncing-ethsyncstatus\")\n\n*   **interface**: `api.rpc.eth.syncing`\n*   **jsonrpc**: `eth_syncing`\n*   **summary**: Returns an object with data about the sync status or false.\n\n### uninstallFilter(index: `U256`): `bool`[\u200b](#uninstallfilterindex-u256-bool \"Direct link to uninstallfilterindex-u256-bool\")\n\n*   **interface**: `api.rpc.eth.uninstallFilter`\n*   **jsonrpc**: `eth_uninstallFilter`\n*   **summary**: Uninstalls filter.\n\n* * *\n\neth/net[\u200b](#ethnet \"Direct link to eth/net\")\n\n---------------------------------------------\n\n### listening(): `bool`[\u200b](#listening-bool \"Direct link to listening-bool\")\n\n*   **interface**: `api.rpc.net.listening`\n*   **jsonrpc**: `net_listening`\n*   **summary**: Returns true if client is actively listening for network connections. Otherwise false.\n\n### peerCount(): `Text`[\u200b](#peercount-text \"Direct link to peercount-text\")\n\n*   **interface**: `api.rpc.net.peerCount`\n*   **jsonrpc**: `net_peerCount`\n*   **summary**: Returns number of peers connected to node.\n\n### version(): `Text`[\u200b](#version-text \"Direct link to version-text\")\n\n*   **interface**: `api.rpc.net.version`\n*   **jsonrpc**: `net_version`\n*   **summary**: Returns protocol version.\n\n* * *\n\neth/web3[\u200b](#ethweb3 \"Direct link to eth/web3\")\n\n------------------------------------------------\n\n### clientVersion(): `Text`[\u200b](#clientversion-text \"Direct link to clientversion-text\")\n\n*   **interface**: `api.rpc.web3.clientVersion`\n*   **jsonrpc**: `web3_clientVersion`\n*   **summary**: Returns current client version.\n\n### sha3(data: `Bytes`): `H256`[\u200b](#sha3data-bytes-h256 \"Direct link to sha3data-bytes-h256\")\n\n*   **interface**: `api.rpc.web3.sha3`\n*   **jsonrpc**: `web3_sha3`\n*   **summary**: Returns sha3 of the given data\n\n* * *\n\ngrandpa[\u200b](#grandpa \"Direct link to grandpa\")\n\n----------------------------------------------\n\n### proveFinality(blockNumber: `BlockNumber`): `Option<EncodedFinalityProofs>`[\u200b](#provefinalityblocknumber-blocknumber-optionencodedfinalityproofs \"Direct link to provefinalityblocknumber-blocknumber-optionencodedfinalityproofs\")\n\n*   **interface**: `api.rpc.grandpa.proveFinality`\n*   **jsonrpc**: `grandpa_proveFinality`\n*   **summary**: Prove finality for the given block number, returning the Justification for the last block in the set.\n\n### roundState(): `ReportedRoundStates`[\u200b](#roundstate-reportedroundstates \"Direct link to roundstate-reportedroundstates\")\n\n*   **interface**: `api.rpc.grandpa.roundState`\n*   **jsonrpc**: `grandpa_roundState`\n*   **summary**: Returns the state of the current best round state as well as the ongoing background rounds\n\n### subscribeJustifications(): `JustificationNotification`[\u200b](#subscribejustifications-justificationnotification \"Direct link to subscribejustifications-justificationnotification\")\n\n*   **interface**: `api.rpc.grandpa.subscribeJustifications`\n*   **jsonrpc**: `grandpa_subscribeJustifications`\n*   **summary**: Subscribes to grandpa justifications\n\n* * *\n\nmmr[\u200b](#mmr \"Direct link to mmr\")\n\n----------------------------------\n\n### generateProof(blockNumbers: `Vec<u64>`, bestKnownBlockNumber?: `u64`, at?: `BlockHash`): `MmrLeafBatchProof`[\u200b](#generateproofblocknumbers-vecu64-bestknownblocknumber-u64-at-blockhash-mmrleafbatchproof \"Direct link to generateproofblocknumbers-vecu64-bestknownblocknumber-u64-at-blockhash-mmrleafbatchproof\")\n\n*   **interface**: `api.rpc.mmr.generateProof`\n*   **jsonrpc**: `mmr_generateProof`\n*   **summary**: Generate MMR proof for the given block numbers.\n\n### root(at?: `BlockHash`): `MmrHash`[\u200b](#rootat-blockhash-mmrhash \"Direct link to rootat-blockhash-mmrhash\")\n\n*   **interface**: `api.rpc.mmr.root`\n*   **jsonrpc**: `mmr_root`\n*   **summary**: Get the MMR root hash for the current best block.\n\n### verifyProof(proof: `MmrLeafBatchProof`): `bool`[\u200b](#verifyproofproof-mmrleafbatchproof-bool \"Direct link to verifyproofproof-mmrleafbatchproof-bool\")\n\n*   **interface**: `api.rpc.mmr.verifyProof`\n*   **jsonrpc**: `mmr_verifyProof`\n*   **summary**: Verify an MMR proof\n\n### verifyProofStateless(root: `MmrHash`, proof: `MmrLeafBatchProof`): `bool`[\u200b](#verifyproofstatelessroot-mmrhash-proof-mmrleafbatchproof-bool \"Direct link to verifyproofstatelessroot-mmrhash-proof-mmrleafbatchproof-bool\")\n\n*   **interface**: `api.rpc.mmr.verifyProofStateless`\n*   **jsonrpc**: `mmr_verifyProofStateless`\n*   **summary**: Verify an MMR proof statelessly given an mmr\\_root\n\n* * *\n\noffchain[\u200b](#offchain \"Direct link to offchain\")\n\n-------------------------------------------------\n\n### localStorageGet(kind: `StorageKind`, key: `Bytes`): `Option<Bytes>`[\u200b](#localstoragegetkind-storagekind-key-bytes-optionbytes \"Direct link to localstoragegetkind-storagekind-key-bytes-optionbytes\")\n\n*   **interface**: `api.rpc.offchain.localStorageGet`\n*   **jsonrpc**: `offchain_localStorageGet`\n*   **summary**: Get offchain local storage under given key and prefix\n*   **unsafe**: This method is only active with appropriate flags\n\n### localStorageSet(kind: `StorageKind`, key: `Bytes`, value: `Bytes`): `Null`[\u200b](#localstoragesetkind-storagekind-key-bytes-value-bytes-null \"Direct link to localstoragesetkind-storagekind-key-bytes-value-bytes-null\")\n\n*   **interface**: `api.rpc.offchain.localStorageSet`\n*   **jsonrpc**: `offchain_localStorageSet`\n*   **summary**: Set offchain local storage under given key and prefix\n*   **unsafe**: This method is only active with appropriate flags\n\n* * *\n\npayment[\u200b](#payment \"Direct link to payment\")\n\n----------------------------------------------\n\n### queryFeeDetails(extrinsic: `Bytes`, at?: `BlockHash`): `FeeDetails`[\u200b](#queryfeedetailsextrinsic-bytes-at-blockhash-feedetails \"Direct link to queryfeedetailsextrinsic-bytes-at-blockhash-feedetails\")\n\n*   **interface**: `api.rpc.payment.queryFeeDetails`\n*   **jsonrpc**: `payment_queryFeeDetails`\n*   **summary**: Query the detailed fee of a given encoded extrinsic\n*   **deprecated**: Use `api.call.transactionPaymentApi.queryFeeDetails` instead\n\n### queryInfo(extrinsic: `Bytes`, at?: `BlockHash`): `RuntimeDispatchInfoV1`[\u200b](#queryinfoextrinsic-bytes-at-blockhash-runtimedispatchinfov1 \"Direct link to queryinfoextrinsic-bytes-at-blockhash-runtimedispatchinfov1\")\n\n*   **interface**: `api.rpc.payment.queryInfo`\n*   **jsonrpc**: `payment_queryInfo`\n*   **summary**: Retrieves the fee information for an encoded extrinsic\n*   **deprecated**: Use `api.call.transactionPaymentApi.queryInfo` instead\n\n* * *\n\nrpc[\u200b](#rpc \"Direct link to rpc\")\n\n----------------------------------\n\n### methods(): `RpcMethods`[\u200b](#methods-rpcmethods \"Direct link to methods-rpcmethods\")\n\n*   **interface**: `api.rpc.rpc.methods`\n*   **jsonrpc**: `rpc_methods`\n*   **summary**: Retrieves the list of RPC methods that are exposed by the node\n\n* * *\n\nstate[\u200b](#state \"Direct link to state\")\n\n----------------------------------------\n\n### call(method: `Text`, data: `Bytes`, at?: `BlockHash`): `Bytes`[\u200b](#callmethod-text-data-bytes-at-blockhash-bytes \"Direct link to callmethod-text-data-bytes-at-blockhash-bytes\")\n\n*   **interface**: `api.rpc.state.call`\n*   **jsonrpc**: `state_call`\n*   **summary**: Perform a call to a builtin on the chain\n\n### getChildKeys(childStorageKey: `StorageKey`, childDefinition: `StorageKey`, childType: `u32`, key: `StorageKey`, at?: `BlockHash`): `Vec<StorageKey>`[\u200b](#getchildkeyschildstoragekey-storagekey-childdefinition-storagekey-childtype-u32-key-storagekey-at-blockhash-vecstoragekey \"Direct link to getchildkeyschildstoragekey-storagekey-childdefinition-storagekey-childtype-u32-key-storagekey-at-blockhash-vecstoragekey\")\n\n*   **interface**: `api.rpc.state.getChildKeys`\n*   **jsonrpc**: `state_getChildKeys`\n*   **summary**: Retrieves the keys with prefix of a specific child storage\n\n### getChildReadProof(childStorageKey: `PrefixedStorageKey`, keys: `Vec<StorageKey>`, at?: `BlockHash`): `ReadProof`[\u200b](#getchildreadproofchildstoragekey-prefixedstoragekey-keys-vecstoragekey-at-blockhash-readproof \"Direct link to getchildreadproofchildstoragekey-prefixedstoragekey-keys-vecstoragekey-at-blockhash-readproof\")\n\n*   **interface**: `api.rpc.state.getChildReadProof`\n*   **jsonrpc**: `state_getChildReadProof`\n*   **summary**: Returns proof of storage for child key entries at a specific block state.\n\n### getChildStorage(childStorageKey: `StorageKey`, childDefinition: `StorageKey`, childType: `u32`, key: `StorageKey`, at?: `BlockHash`): `StorageData`[\u200b](#getchildstoragechildstoragekey-storagekey-childdefinition-storagekey-childtype-u32-key-storagekey-at-blockhash-storagedata \"Direct link to getchildstoragechildstoragekey-storagekey-childdefinition-storagekey-childtype-u32-key-storagekey-at-blockhash-storagedata\")\n\n*   **interface**: `api.rpc.state.getChildStorage`\n*   **jsonrpc**: `state_getChildStorage`\n*   **summary**: Retrieves the child storage for a key\n\n### getChildStorageHash(childStorageKey: `StorageKey`, childDefinition: `StorageKey`, childType: `u32`, key: `StorageKey`, at?: `BlockHash`): `Hash`[\u200b](#getchildstoragehashchildstoragekey-storagekey-childdefinition-storagekey-childtype-u32-key-storagekey-at-blockhash-hash \"Direct link to getchildstoragehashchildstoragekey-storagekey-childdefinition-storagekey-childtype-u32-key-storagekey-at-blockhash-hash\")\n\n*   **interface**: `api.rpc.state.getChildStorageHash`\n*   **jsonrpc**: `state_getChildStorageHash`\n*   **summary**: Retrieves the child storage hash\n\n### getChildStorageSize(childStorageKey: `StorageKey`, childDefinition: `StorageKey`, childType: `u32`, key: `StorageKey`, at?: `BlockHash`): `u64`[\u200b](#getchildstoragesizechildstoragekey-storagekey-childdefinition-storagekey-childtype-u32-key-storagekey-at-blockhash-u64 \"Direct link to getchildstoragesizechildstoragekey-storagekey-childdefinition-storagekey-childtype-u32-key-storagekey-at-blockhash-u64\")\n\n*   **interface**: `api.rpc.state.getChildStorageSize`\n*   **jsonrpc**: `state_getChildStorageSize`\n*   **summary**: Retrieves the child storage size\n\n### getKeys(key: `StorageKey`, at?: `BlockHash`): `Vec<StorageKey>`[\u200b](#getkeyskey-storagekey-at-blockhash-vecstoragekey \"Direct link to getkeyskey-storagekey-at-blockhash-vecstoragekey\")\n\n*   **interface**: `api.rpc.state.getKeys`\n*   **jsonrpc**: `state_getKeys`\n*   **summary**: Retrieves the keys with a certain prefix\n*   **deprecated**: Use `api.rpc.state.getKeysPaged` to retrieve keys\n\n### getKeysPaged(key: `StorageKey`, count: `u32`, startKey?: `StorageKey`, at?: `BlockHash`): `Vec<StorageKey>`[\u200b](#getkeyspagedkey-storagekey-count-u32-startkey-storagekey-at-blockhash-vecstoragekey \"Direct link to getkeyspagedkey-storagekey-count-u32-startkey-storagekey-at-blockhash-vecstoragekey\")\n\n*   **interface**: `api.rpc.state.getKeysPaged`\n*   **jsonrpc**: `state_getKeysPaged`\n*   **summary**: Returns the keys with prefix with pagination support.\n\n### getMetadata(at?: `BlockHash`): `Metadata`[\u200b](#getmetadataat-blockhash-metadata \"Direct link to getmetadataat-blockhash-metadata\")\n\n*   **interface**: `api.rpc.state.getMetadata`\n*   **jsonrpc**: `state_getMetadata`\n*   **summary**: Returns the runtime metadata\n\n### getPairs(prefix: `StorageKey`, at?: `BlockHash`): `Vec<KeyValue>`[\u200b](#getpairsprefix-storagekey-at-blockhash-veckeyvalue \"Direct link to getpairsprefix-storagekey-at-blockhash-veckeyvalue\")\n\n*   **interface**: `api.rpc.state.getPairs`\n*   **jsonrpc**: `state_getPairs`\n*   **summary**: Returns the keys with prefix, leave empty to get all the keys (deprecated: Use getKeysPaged)\n*   **deprecated**: Use `api.rpc.state.getKeysPaged` to retrieve keys\n*   **unsafe**: This method is only active with appropriate flags\n\n### getReadProof(keys: `Vec<StorageKey>`, at?: `BlockHash`): `ReadProof`[\u200b](#getreadproofkeys-vecstoragekey-at-blockhash-readproof \"Direct link to getreadproofkeys-vecstoragekey-at-blockhash-readproof\")\n\n*   **interface**: `api.rpc.state.getReadProof`\n*   **jsonrpc**: `state_getReadProof`\n*   **summary**: Returns proof of storage entries at a specific block state\n\n### getRuntimeVersion(at?: `BlockHash`): `RuntimeVersion`[\u200b](#getruntimeversionat-blockhash-runtimeversion \"Direct link to getruntimeversionat-blockhash-runtimeversion\")\n\n*   **interface**: `api.rpc.state.getRuntimeVersion`\n*   **jsonrpc**: `state_getRuntimeVersion`\n*   **summary**: Get the runtime version\n\n### getStorage(key: `StorageKey`, at?: `BlockHash`): `StorageData`[\u200b](#getstoragekey-storagekey-at-blockhash-storagedata \"Direct link to getstoragekey-storagekey-at-blockhash-storagedata\")\n\n*   **interface**: `api.rpc.state.getStorage`\n*   **jsonrpc**: `state_getStorage`\n*   **summary**: Retrieves the storage for a key\n\n### getStorageHash(key: `StorageKey`, at?: `BlockHash`): `Hash`[\u200b](#getstoragehashkey-storagekey-at-blockhash-hash \"Direct link to getstoragehashkey-storagekey-at-blockhash-hash\")\n\n*   **interface**: `api.rpc.state.getStorageHash`\n*   **jsonrpc**: `state_getStorageHash`\n*   **summary**: Retrieves the storage hash\n\n### getStorageSize(key: `StorageKey`, at?: `BlockHash`): `u64`[\u200b](#getstoragesizekey-storagekey-at-blockhash-u64 \"Direct link to getstoragesizekey-storagekey-at-blockhash-u64\")\n\n*   **interface**: `api.rpc.state.getStorageSize`\n*   **jsonrpc**: `state_getStorageSize`\n*   **summary**: Retrieves the storage size\n\n### queryStorage(keys: `Vec<StorageKey>`, fromBlock: `Hash`, toBlock?: `BlockHash`): `Vec<StorageChangeSet>`[\u200b](#querystoragekeys-vecstoragekey-fromblock-hash-toblock-blockhash-vecstoragechangeset \"Direct link to querystoragekeys-vecstoragekey-fromblock-hash-toblock-blockhash-vecstoragechangeset\")\n\n*   **interface**: `api.rpc.state.queryStorage`\n*   **jsonrpc**: `state_queryStorage`\n*   **summary**: Query historical storage entries (by key) starting from a start block\n*   **unsafe**: This method is only active with appropriate flags\n\n### queryStorageAt(keys: `Vec<StorageKey>`, at?: `BlockHash`): `Vec<StorageChangeSet>`[\u200b](#querystorageatkeys-vecstoragekey-at-blockhash-vecstoragechangeset \"Direct link to querystorageatkeys-vecstoragekey-at-blockhash-vecstoragechangeset\")\n\n*   **interface**: `api.rpc.state.queryStorageAt`\n*   **jsonrpc**: `state_queryStorageAt`\n*   **summary**: Query storage entries (by key) starting at block hash given as the second parameter\n\n### subscribeRuntimeVersion(): `RuntimeVersion`[\u200b](#subscriberuntimeversion-runtimeversion \"Direct link to subscriberuntimeversion-runtimeversion\")\n\n*   **interface**: `api.rpc.state.subscribeRuntimeVersion`\n*   **jsonrpc**: `state_subscribeRuntimeVersion`\n*   **summary**: Retrieves the runtime version via subscription\n\n### subscribeStorage(keys?: `Vec<StorageKey>`): `StorageChangeSet`[\u200b](#subscribestoragekeys-vecstoragekey-storagechangeset \"Direct link to subscribestoragekeys-vecstoragekey-storagechangeset\")\n\n*   **interface**: `api.rpc.state.subscribeStorage`\n*   **jsonrpc**: `state_subscribeStorage`\n*   **summary**: Subscribes to storage changes for the provided keys\n\n### traceBlock(block: `Hash`, targets: `Option<Text>`, storageKeys: `Option<Text>`, methods: `Option<Text>`): `TraceBlockResponse`[\u200b](#traceblockblock-hash-targets-optiontext-storagekeys-optiontext-methods-optiontext-traceblockresponse \"Direct link to traceblockblock-hash-targets-optiontext-storagekeys-optiontext-methods-optiontext-traceblockresponse\")\n\n*   **interface**: `api.rpc.state.traceBlock`\n*   **jsonrpc**: `state_traceBlock`\n*   **summary**: Provides a way to trace the re-execution of a single block\n*   **unsafe**: This method is only active with appropriate flags\n\n### trieMigrationStatus(at?: `BlockHash`): `MigrationStatusResult`[\u200b](#triemigrationstatusat-blockhash-migrationstatusresult \"Direct link to triemigrationstatusat-blockhash-migrationstatusresult\")\n\n*   **interface**: `api.rpc.state.trieMigrationStatus`\n*   **jsonrpc**: `state_trieMigrationStatus`\n*   **summary**: Check current migration state\n*   **unsafe**: This method is only active with appropriate flags\n\n* * *\n\nsyncstate[\u200b](#syncstate \"Direct link to syncstate\")\n\n----------------------------------------------------\n\n### genSyncSpec(raw: `bool`): `Json`[\u200b](#gensyncspecraw-bool-json \"Direct link to gensyncspecraw-bool-json\")\n\n*   **interface**: `api.rpc.syncstate.genSyncSpec`\n*   **jsonrpc**: `sync_state_genSyncSpec`\n*   **summary**: Returns the json-serialized chainspec running the node, with a sync state.\n\n* * *\n\nsystem[\u200b](#system \"Direct link to system\")\n\n-------------------------------------------\n\n### accountNextIndex(accountId: `AccountId`): `Index`[\u200b](#accountnextindexaccountid-accountid-index \"Direct link to accountnextindexaccountid-accountid-index\")\n\n*   **interface**: `api.rpc.system.accountNextIndex`\n*   **jsonrpc**: `system_accountNextIndex`\n*   **summary**: Retrieves the next accountIndex as available on the node\n\n### addLogFilter(directives: `Text`): `Null`[\u200b](#addlogfilterdirectives-text-null \"Direct link to addlogfilterdirectives-text-null\")\n\n*   **interface**: `api.rpc.system.addLogFilter`\n*   **jsonrpc**: `system_addLogFilter`\n*   **summary**: Adds the supplied directives to the current log filter\n*   **unsafe**: This method is only active with appropriate flags\n\n### addReservedPeer(peer: `Text`): `Text`[\u200b](#addreservedpeerpeer-text-text \"Direct link to addreservedpeerpeer-text-text\")\n\n*   **interface**: `api.rpc.system.addReservedPeer`\n*   **jsonrpc**: `system_addReservedPeer`\n*   **summary**: Adds a reserved peer\n*   **unsafe**: This method is only active with appropriate flags\n\n### chain(): `Text`[\u200b](#chain-text \"Direct link to chain-text\")\n\n*   **interface**: `api.rpc.system.chain`\n*   **jsonrpc**: `system_chain`\n*   **summary**: Retrieves the chain\n\n### chainType(): `ChainType`[\u200b](#chaintype-chaintype \"Direct link to chaintype-chaintype\")\n\n*   **interface**: `api.rpc.system.chainType`\n*   **jsonrpc**: `system_chainType`\n*   **summary**: Retrieves the chain type\n\n### dryRun(extrinsic: `Bytes`, at?: `BlockHash`): `ApplyExtrinsicResult`[\u200b](#dryrunextrinsic-bytes-at-blockhash-applyextrinsicresult \"Direct link to dryrunextrinsic-bytes-at-blockhash-applyextrinsicresult\")\n\n*   **interface**: `api.rpc.system.dryRun`\n*   **jsonrpc**: `system_dryRun`\n*   **summary**: Dry run an extrinsic at a given block\n*   **unsafe**: This method is only active with appropriate flags\n\n### health(): `Health`[\u200b](#health-health \"Direct link to health-health\")\n\n*   **interface**: `api.rpc.system.health`\n*   **jsonrpc**: `system_health`\n*   **summary**: Return health status of the node\n\n### localListenAddresses(): `Vec<Text>`[\u200b](#locallistenaddresses-vectext \"Direct link to locallistenaddresses-vectext\")\n\n*   **interface**: `api.rpc.system.localListenAddresses`\n*   **jsonrpc**: `system_localListenAddresses`\n*   **summary**: The addresses include a trailing /p2p/ with the local PeerId, and are thus suitable to be passed to addReservedPeer or as a bootnode address for example\n\n### localPeerId(): `Text`[\u200b](#localpeerid-text \"Direct link to localpeerid-text\")\n\n*   **interface**: `api.rpc.system.localPeerId`\n*   **jsonrpc**: `system_localPeerId`\n*   **summary**: Returns the base58-encoded PeerId of the node\n\n### name(): `Text`[\u200b](#name-text \"Direct link to name-text\")\n\n*   **interface**: `api.rpc.system.name`\n*   **jsonrpc**: `system_name`\n*   **summary**: Retrieves the node name\n\n### networkState(): `NetworkState`[\u200b](#networkstate-networkstate \"Direct link to networkstate-networkstate\")\n\n*   **interface**: `api.rpc.system.networkState`\n*   **jsonrpc**: `system_networkState`\n*   **summary**: Returns current state of the network\n*   **unsafe**: This method is only active with appropriate flags\n\n### nodeRoles(): `Vec<NodeRole>`[\u200b](#noderoles-vecnoderole \"Direct link to noderoles-vecnoderole\")\n\n*   **interface**: `api.rpc.system.nodeRoles`\n*   **jsonrpc**: `system_nodeRoles`\n*   **summary**: Returns the roles the node is running as\n\n### peers(): `Vec<PeerInfo>`[\u200b](#peers-vecpeerinfo \"Direct link to peers-vecpeerinfo\")\n\n*   **interface**: `api.rpc.system.peers`\n*   **jsonrpc**: `system_peers`\n*   **summary**: Returns the currently connected peers\n*   **unsafe**: This method is only active with appropriate flags\n\n### properties(): `ChainProperties`[\u200b](#properties-chainproperties \"Direct link to properties-chainproperties\")\n\n*   **interface**: `api.rpc.system.properties`\n*   **jsonrpc**: `system_properties`\n*   **summary**: Get a custom set of properties as a JSON object, defined in the chain spec\n\n### removeReservedPeer(peerId: `Text`): `Text`[\u200b](#removereservedpeerpeerid-text-text \"Direct link to removereservedpeerpeerid-text-text\")\n\n*   **interface**: `api.rpc.system.removeReservedPeer`\n*   **jsonrpc**: `system_removeReservedPeer`\n*   **summary**: Remove a reserved peer\n*   **unsafe**: This method is only active with appropriate flags\n\n### reservedPeers(): `Vec<Text>`[\u200b](#reservedpeers-vectext \"Direct link to reservedpeers-vectext\")\n\n*   **interface**: `api.rpc.system.reservedPeers`\n*   **jsonrpc**: `system_reservedPeers`\n*   **summary**: Returns the list of reserved peers\n\n### resetLogFilter(): `Null`[\u200b](#resetlogfilter-null \"Direct link to resetlogfilter-null\")\n\n*   **interface**: `api.rpc.system.resetLogFilter`\n*   **jsonrpc**: `system_resetLogFilter`\n*   **summary**: Resets the log filter to Substrate defaults\n*   **unsafe**: This method is only active with appropriate flags\n\n### syncState(): `SyncState`[\u200b](#syncstate-syncstate \"Direct link to syncstate-syncstate\")\n\n*   **interface**: `api.rpc.system.syncState`\n*   **jsonrpc**: `system_syncState`\n*   **summary**: Returns the state of the syncing of the node\n\n### version(): `Text`[\u200b](#version-text-1 \"Direct link to version-text-1\")\n\n*   **interface**: `api.rpc.system.version`\n*   **jsonrpc**: `system_version`\n*   **summary**: Retrieves the version of the node\n\n[Edit this page](https://github.com/polkadot-js/docs/edit/master/docs/substrate/rpc.md)\n\n[Previous\\\n\\\nRuntime](/docs/substrate/runtime)\n[Next\\\n\\\nConstants](/docs/substrate/constants)\n\n*   [author](#author)\n    *   [hasKey(publicKey: `Bytes`, keyType: `Text`): `bool`](#haskeypublickey-bytes-keytype-text-bool)\n        \n    *   [hasSessionKeys(sessionKeys: `Bytes`): `bool`](#hassessionkeyssessionkeys-bytes-bool)\n        \n    *   [insertKey(keyType: `Text`, suri: `Text`, publicKey: `Bytes`): `Bytes`](#insertkeykeytype-text-suri-text-publickey-bytes-bytes)\n        \n    *   [pendingExtrinsics(): `Vec<Extrinsic>`](#pendingextrinsics-vecextrinsic)\n        \n    *   [removeExtrinsic(bytesOrHash: `Vec<ExtrinsicOrHash>`): `Vec<Hash>`](#removeextrinsicbytesorhash-vecextrinsicorhash-vechash)\n        \n    *   [rotateKeys(): `Bytes`](#rotatekeys-bytes)\n        \n    *   [submitAndWatchExtrinsic(extrinsic: `Extrinsic`): `ExtrinsicStatus`](#submitandwatchextrinsicextrinsic-extrinsic-extrinsicstatus)\n        \n    *   [submitExtrinsic(extrinsic: `Extrinsic`): `Hash`](#submitextrinsicextrinsic-extrinsic-hash)\n        \n*   [babe](#babe)\n    *   [epochAuthorship(): `HashMap<AuthorityId, EpochAuthorship>`](#epochauthorship-hashmapauthorityid-epochauthorship)\n        \n*   [beefy](#beefy)\n    *   [getFinalizedHead(): `H256`](#getfinalizedhead-h256)\n        \n    *   [subscribeJustifications(): `BeefyVersionedFinalityProof`](#subscribejustifications-beefyversionedfinalityproof)\n        \n*   [chain](#chain)\n    *   [getBlock(hash?: `BlockHash`): `SignedBlock`](#getblockhash-blockhash-signedblock)\n        \n    *   [getBlockHash(blockNumber?: `BlockNumber`): `BlockHash`](#getblockhashblocknumber-blocknumber-blockhash)\n        \n    *   [getFinalizedHead(): `BlockHash`](#getfinalizedhead-blockhash)\n        \n    *   [getHeader(hash?: `BlockHash`): `Header`](#getheaderhash-blockhash-header)\n        \n    *   [subscribeAllHeads(): `Header`](#subscribeallheads-header)\n        \n    *   [subscribeFinalizedHeads(): `Header`](#subscribefinalizedheads-header)\n        \n    *   [subscribeNewHeads(): `Header`](#subscribenewheads-header)\n        \n*   [childstate](#childstate)\n    *   [getKeys(childKey: `PrefixedStorageKey`, prefix: `StorageKey`, at?: `Hash`): `Vec<StorageKey>`](#getkeyschildkey-prefixedstoragekey-prefix-storagekey-at-hash-vecstoragekey)\n        \n    *   [getKeysPaged(childKey: `PrefixedStorageKey`, prefix: `StorageKey`, count: `u32`, startKey?: `StorageKey`, at?: `Hash`): `Vec<StorageKey>`](#getkeyspagedchildkey-prefixedstoragekey-prefix-storagekey-count-u32-startkey-storagekey-at-hash-vecstoragekey)\n        \n    *   [getStorage(childKey: `PrefixedStorageKey`, key: `StorageKey`, at?: `Hash`): `Option<StorageData>`](#getstoragechildkey-prefixedstoragekey-key-storagekey-at-hash-optionstoragedata)\n        \n    *   [getStorageEntries(childKey: `PrefixedStorageKey`, keys: `Vec<StorageKey>`, at?: `Hash`): `Vec<Option<StorageData>>`](#getstorageentrieschildkey-prefixedstoragekey-keys-vecstoragekey-at-hash-vecoptionstoragedata)\n        \n    *   [getStorageHash(childKey: `PrefixedStorageKey`, key: `StorageKey`, at?: `Hash`): `Option<Hash>`](#getstoragehashchildkey-prefixedstoragekey-key-storagekey-at-hash-optionhash)\n        \n    *   [getStorageSize(childKey: `PrefixedStorageKey`, key: `StorageKey`, at?: `Hash`): `Option<u64>`](#getstoragesizechildkey-prefixedstoragekey-key-storagekey-at-hash-optionu64)\n        \n*   [contracts](#contracts)\n    *   [call(callRequest: `ContractCallRequest`, at?: `BlockHash`): `ContractExecResult`](#callcallrequest-contractcallrequest-at-blockhash-contractexecresult)\n        \n    *   [getStorage(address: `AccountId`, key: `H256`, at?: `BlockHash`): `Option<Bytes>`](#getstorageaddress-accountid-key-h256-at-blockhash-optionbytes)\n        \n    *   [instantiate(request: `InstantiateRequestV1`, at?: `BlockHash`): `ContractInstantiateResult`](#instantiaterequest-instantiaterequestv1-at-blockhash-contractinstantiateresult)\n        \n    *   [rentProjection(address: `AccountId`, at?: `BlockHash`): `Option<BlockNumber>`](#rentprojectionaddress-accountid-at-blockhash-optionblocknumber)\n        \n    *   [uploadCode(uploadRequest: `CodeUploadRequest`, at?: `BlockHash`): `CodeUploadResult`](#uploadcodeuploadrequest-codeuploadrequest-at-blockhash-codeuploadresult)\n        \n*   [dev](#dev)\n    *   [getBlockStats(at: `Hash`): `Option<BlockStats>`](#getblockstatsat-hash-optionblockstats)\n        \n*   [engine](#engine)\n    *   [createBlock(createEmpty: `bool`, finalize: `bool`, parentHash?: `BlockHash`): `CreatedBlock`](#createblockcreateempty-bool-finalize-bool-parenthash-blockhash-createdblock)\n        \n    *   [finalizeBlock(hash: `BlockHash`, justification?: `Justification`): `bool`](#finalizeblockhash-blockhash-justification-justification-bool)\n        \n*   [eth](#eth)\n    *   [accounts(): `Vec<H160>`](#accounts-vech160)\n        \n    *   [blockNumber(): `U256`](#blocknumber-u256)\n        \n    *   [call(request: `EthCallRequest`, number?: `BlockNumber`): `Bytes`](#callrequest-ethcallrequest-number-blocknumber-bytes)\n        \n    *   [chainId(): `U64`](#chainid-u64)\n        \n    *   [coinbase(): `H160`](#coinbase-h160)\n        \n    *   [estimateGas(request: `EthCallRequest`, number?: `BlockNumber`): `U256`](#estimategasrequest-ethcallrequest-number-blocknumber-u256)\n        \n    *   [feeHistory(blockCount: `U256`, newestBlock: `BlockNumber`, rewardPercentiles: `Option<Vec<f64>>`): `EthFeeHistory`](#feehistoryblockcount-u256-newestblock-blocknumber-rewardpercentiles-optionvecf64-ethfeehistory)\n        \n    *   [gasPrice(): `U256`](#gasprice-u256)\n        \n    *   [getBalance(address: `H160`, number?: `BlockNumber`): `U256`](#getbalanceaddress-h160-number-blocknumber-u256)\n        \n    *   [getBlockByHash(hash: `H256`, full: `bool`): `Option<EthRichBlock>`](#getblockbyhashhash-h256-full-bool-optionethrichblock)\n        \n    *   [getBlockByNumber(block: `BlockNumber`, full: `bool`): `Option<EthRichBlock>`](#getblockbynumberblock-blocknumber-full-bool-optionethrichblock)\n        \n    *   [getBlockTransactionCountByHash(hash: `H256`): `U256`](#getblocktransactioncountbyhashhash-h256-u256)\n        \n    *   [getBlockTransactionCountByNumber(block: `BlockNumber`): `U256`](#getblocktransactioncountbynumberblock-blocknumber-u256)\n        \n    *   [getCode(address: `H160`, number?: `BlockNumber`): `Bytes`](#getcodeaddress-h160-number-blocknumber-bytes)\n        \n    *   [getFilterChanges(index: `U256`): `EthFilterChanges`](#getfilterchangesindex-u256-ethfilterchanges)\n        \n    *   [getFilterLogs(index: `U256`): `Vec<EthLog>`](#getfilterlogsindex-u256-vecethlog)\n        \n    *   [getLogs(filter: `EthFilter`): `Vec<EthLog>`](#getlogsfilter-ethfilter-vecethlog)\n        \n    *   [getProof(address: `H160`, storageKeys: `Vec<H256>`, number: `BlockNumber`): `EthAccount`](#getproofaddress-h160-storagekeys-vech256-number-blocknumber-ethaccount)\n        \n    *   [getStorageAt(address: `H160`, index: `U256`, number?: `BlockNumber`): `H256`](#getstorageataddress-h160-index-u256-number-blocknumber-h256)\n        \n    *   [getTransactionByBlockHashAndIndex(hash: `H256`, index: `U256`): `EthTransaction`](#gettransactionbyblockhashandindexhash-h256-index-u256-ethtransaction)\n        \n    *   [getTransactionByBlockNumberAndIndex(number: `BlockNumber`, index: `U256`): `EthTransaction`](#gettransactionbyblocknumberandindexnumber-blocknumber-index-u256-ethtransaction)\n        \n    *   [getTransactionByHash(hash: `H256`): `EthTransaction`](#gettransactionbyhashhash-h256-ethtransaction)\n        \n    *   [getTransactionCount(address: `H160`, number?: `BlockNumber`): `U256`](#gettransactioncountaddress-h160-number-blocknumber-u256)\n        \n    *   [getTransactionReceipt(hash: `H256`): `EthReceipt`](#gettransactionreceipthash-h256-ethreceipt)\n        \n    *   [getUncleByBlockHashAndIndex(hash: `H256`, index: `U256`): `EthRichBlock`](#getunclebyblockhashandindexhash-h256-index-u256-ethrichblock)\n        \n    *   [getUncleByBlockNumberAndIndex(number: `BlockNumber`, index: `U256`): `EthRichBlock`](#getunclebyblocknumberandindexnumber-blocknumber-index-u256-ethrichblock)\n        \n    *   [getUncleCountByBlockHash(hash: `H256`): `U256`](#getunclecountbyblockhashhash-h256-u256)\n        \n    *   [getUncleCountByBlockNumber(number: `BlockNumber`): `U256`](#getunclecountbyblocknumbernumber-blocknumber-u256)\n        \n    *   [getWork(): `EthWork`](#getwork-ethwork)\n        \n    *   [hashrate(): `U256`](#hashrate-u256)\n        \n    *   [maxPriorityFeePerGas(): `U256`](#maxpriorityfeepergas-u256)\n        \n    *   [mining(): `bool`](#mining-bool)\n        \n    *   [newBlockFilter(): `U256`](#newblockfilter-u256)\n        \n    *   [newFilter(filter: `EthFilter`): `U256`](#newfilterfilter-ethfilter-u256)\n        \n    *   [newPendingTransactionFilter(): `U256`](#newpendingtransactionfilter-u256)\n        \n    *   [protocolVersion(): `u64`](#protocolversion-u64)\n        \n    *   [sendRawTransaction(bytes: `Bytes`): `H256`](#sendrawtransactionbytes-bytes-h256)\n        \n    *   [sendTransaction(tx: `EthTransactionRequest`): `H256`](#sendtransactiontx-ethtransactionrequest-h256)\n        \n    *   [submitHashrate(index: `U256`, hash: `H256`): `bool`](#submithashrateindex-u256-hash-h256-bool)\n        \n    *   [submitWork(nonce: `H64`, headerHash: `H256`, mixDigest: `H256`): `bool`](#submitworknonce-h64-headerhash-h256-mixdigest-h256-bool)\n        \n    *   [subscribe(kind: `EthSubKind`, params?: `EthSubParams`): `Null`](#subscribekind-ethsubkind-params-ethsubparams-null)\n        \n    *   [syncing(): `EthSyncStatus`](#syncing-ethsyncstatus)\n        \n    *   [uninstallFilter(index: `U256`): `bool`](#uninstallfilterindex-u256-bool)\n        \n*   [eth/net](#ethnet)\n    *   [listening(): `bool`](#listening-bool)\n        \n    *   [peerCount(): `Text`](#peercount-text)\n        \n    *   [version(): `Text`](#version-text)\n        \n*   [eth/web3](#ethweb3)\n    *   [clientVersion(): `Text`](#clientversion-text)\n        \n    *   [sha3(data: `Bytes`): `H256`](#sha3data-bytes-h256)\n        \n*   [grandpa](#grandpa)\n    *   [proveFinality(blockNumber: `BlockNumber`): `Option<EncodedFinalityProofs>`](#provefinalityblocknumber-blocknumber-optionencodedfinalityproofs)\n        \n    *   [roundState(): `ReportedRoundStates`](#roundstate-reportedroundstates)\n        \n    *   [subscribeJustifications(): `JustificationNotification`](#subscribejustifications-justificationnotification)\n        \n*   [mmr](#mmr)\n    *   [generateProof(blockNumbers: `Vec<u64>`, bestKnownBlockNumber?: `u64`, at?: `BlockHash`): `MmrLeafBatchProof`](#generateproofblocknumbers-vecu64-bestknownblocknumber-u64-at-blockhash-mmrleafbatchproof)\n        \n    *   [root(at?: `BlockHash`): `MmrHash`](#rootat-blockhash-mmrhash)\n        \n    *   [verifyProof(proof: `MmrLeafBatchProof`): `bool`](#verifyproofproof-mmrleafbatchproof-bool)\n        \n    *   [verifyProofStateless(root: `MmrHash`, proof: `MmrLeafBatchProof`): `bool`](#verifyproofstatelessroot-mmrhash-proof-mmrleafbatchproof-bool)\n        \n*   [offchain](#offchain)\n    *   [localStorageGet(kind: `StorageKind`, key: `Bytes`): `Option<Bytes>`](#localstoragegetkind-storagekind-key-bytes-optionbytes)\n        \n    *   [localStorageSet(kind: `StorageKind`, key: `Bytes`, value: `Bytes`): `Null`](#localstoragesetkind-storagekind-key-bytes-value-bytes-null)\n        \n*   [payment](#payment)\n    *   [queryFeeDetails(extrinsic: `Bytes`, at?: `BlockHash`): `FeeDetails`](#queryfeedetailsextrinsic-bytes-at-blockhash-feedetails)\n        \n    *   [queryInfo(extrinsic: `Bytes`, at?: `BlockHash`): `RuntimeDispatchInfoV1`](#queryinfoextrinsic-bytes-at-blockhash-runtimedispatchinfov1)\n        \n*   [rpc](#rpc)\n    *   [methods(): `RpcMethods`](#methods-rpcmethods)\n        \n*   [state](#state)\n    *   [call(method: `Text`, data: `Bytes`, at?: `BlockHash`): `Bytes`](#callmethod-text-data-bytes-at-blockhash-bytes)\n        \n    *   [getChildKeys(childStorageKey: `StorageKey`, childDefinition: `StorageKey`, childType: `u32`, key: `StorageKey`, at?: `BlockHash`): `Vec<StorageKey>`](#getchildkeyschildstoragekey-storagekey-childdefinition-storagekey-childtype-u32-key-storagekey-at-blockhash-vecstoragekey)\n        \n    *   [getChildReadProof(childStorageKey: `PrefixedStorageKey`, keys: `Vec<StorageKey>`, at?: `BlockHash`): `ReadProof`](#getchildreadproofchildstoragekey-prefixedstoragekey-keys-vecstoragekey-at-blockhash-readproof)\n        \n    *   [getChildStorage(childStorageKey: `StorageKey`, childDefinition: `StorageKey`, childType: `u32`, key: `StorageKey`, at?: `BlockHash`): `StorageData`](#getchildstoragechildstoragekey-storagekey-childdefinition-storagekey-childtype-u32-key-storagekey-at-blockhash-storagedata)\n        \n    *   [getChildStorageHash(childStorageKey: `StorageKey`, childDefinition: `StorageKey`, childType: `u32`, key: `StorageKey`, at?: `BlockHash`): `Hash`](#getchildstoragehashchildstoragekey-storagekey-childdefinition-storagekey-childtype-u32-key-storagekey-at-blockhash-hash)\n        \n    *   [getChildStorageSize(childStorageKey: `StorageKey`, childDefinition: `StorageKey`, childType: `u32`, key: `StorageKey`, at?: `BlockHash`): `u64`](#getchildstoragesizechildstoragekey-storagekey-childdefinition-storagekey-childtype-u32-key-storagekey-at-blockhash-u64)\n        \n    *   [getKeys(key: `StorageKey`, at?: `BlockHash`): `Vec<StorageKey>`](#getkeyskey-storagekey-at-blockhash-vecstoragekey)\n        \n    *   [getKeysPaged(key: `StorageKey`, count: `u32`, startKey?: `StorageKey`, at?: `BlockHash`): `Vec<StorageKey>`](#getkeyspagedkey-storagekey-count-u32-startkey-storagekey-at-blockhash-vecstoragekey)\n        \n    *   [getMetadata(at?: `BlockHash`): `Metadata`](#getmetadataat-blockhash-metadata)\n        \n    *   [getPairs(prefix: `StorageKey`, at?: `BlockHash`): `Vec<KeyValue>`](#getpairsprefix-storagekey-at-blockhash-veckeyvalue)\n        \n    *   [getReadProof(keys: `Vec<StorageKey>`, at?: `BlockHash`): `ReadProof`](#getreadproofkeys-vecstoragekey-at-blockhash-readproof)\n        \n    *   [getRuntimeVersion(at?: `BlockHash`): `RuntimeVersion`](#getruntimeversionat-blockhash-runtimeversion)\n        \n    *   [getStorage(key: `StorageKey`, at?: `BlockHash`): `StorageData`](#getstoragekey-storagekey-at-blockhash-storagedata)\n        \n    *   [getStorageHash(key: `StorageKey`, at?: `BlockHash`): `Hash`](#getstoragehashkey-storagekey-at-blockhash-hash)\n        \n    *   [getStorageSize(key: `StorageKey`, at?: `BlockHash`): `u64`](#getstoragesizekey-storagekey-at-blockhash-u64)\n        \n    *   [queryStorage(keys: `Vec<StorageKey>`, fromBlock: `Hash`, toBlock?: `BlockHash`): `Vec<StorageChangeSet>`](#querystoragekeys-vecstoragekey-fromblock-hash-toblock-blockhash-vecstoragechangeset)\n        \n    *   [queryStorageAt(keys: `Vec<StorageKey>`, at?: `BlockHash`): `Vec<StorageChangeSet>`](#querystorageatkeys-vecstoragekey-at-blockhash-vecstoragechangeset)\n        \n    *   [subscribeRuntimeVersion(): `RuntimeVersion`](#subscriberuntimeversion-runtimeversion)\n        \n    *   [subscribeStorage(keys?: `Vec<StorageKey>`): `StorageChangeSet`](#subscribestoragekeys-vecstoragekey-storagechangeset)\n        \n    *   [traceBlock(block: `Hash`, targets: `Option<Text>`, storageKeys: `Option<Text>`, methods: `Option<Text>`): `TraceBlockResponse`](#traceblockblock-hash-targets-optiontext-storagekeys-optiontext-methods-optiontext-traceblockresponse)\n        \n    *   [trieMigrationStatus(at?: `BlockHash`): `MigrationStatusResult`](#triemigrationstatusat-blockhash-migrationstatusresult)\n        \n*   [syncstate](#syncstate)\n    *   [genSyncSpec(raw: `bool`): `Json`](#gensyncspecraw-bool-json)\n        \n*   [system](#system)\n    *   [accountNextIndex(accountId: `AccountId`): `Index`](#accountnextindexaccountid-accountid-index)\n        \n    *   [addLogFilter(directives: `Text`): `Null`](#addlogfilterdirectives-text-null)\n        \n    *   [addReservedPeer(peer: `Text`): `Text`](#addreservedpeerpeer-text-text)\n        \n    *   [chain(): `Text`](#chain-text)\n        \n    *   [chainType(): `ChainType`](#chaintype-chaintype)\n        \n    *   [dryRun(extrinsic: `Bytes`, at?: `BlockHash`): `ApplyExtrinsicResult`](#dryrunextrinsic-bytes-at-blockhash-applyextrinsicresult)\n        \n    *   [health(): `Health`](#health-health)\n        \n    *   [localListenAddresses(): `Vec<Text>`](#locallistenaddresses-vectext)\n        \n    *   [localPeerId(): `Text`](#localpeerid-text)\n        \n    *   [name(): `Text`](#name-text)\n        \n    *   [networkState(): `NetworkState`](#networkstate-networkstate)\n        \n    *   [nodeRoles(): `Vec<NodeRole>`](#noderoles-vecnoderole)\n        \n    *   [peers(): `Vec<PeerInfo>`](#peers-vecpeerinfo)\n        \n    *   [properties(): `ChainProperties`](#properties-chainproperties)\n        \n    *   [removeReservedPeer(peerId: `Text`): `Text`](#removereservedpeerpeerid-text-text)\n        \n    *   [reservedPeers(): `Vec<Text>`](#reservedpeers-vectext)\n        \n    *   [resetLogFilter(): `Null`](#resetlogfilter-null)\n        \n    *   [syncState(): `SyncState`](#syncstate-syncstate)\n        \n    *   [version(): `Text`](#version-text-1)"}, {"title": null, "description": null, "source_url": "https://polkadot.js.org/docs/substrate/runtime", "markdown": "[Skip to main content](#__docusaurus_skipToContent_fallback)\n\n[![polkadot{.js}](https://polkadot.js.org/docs/img/logo.svg)\\\n\\\n**polkadot{.js}**](/docs/)\n\n[Apps UI (Wallet)](https://polkadot.js.org/apps/)\n[GitHub](https://github.com/polkadot-js/docs)\n\nSearch...\n\n*   [Introduction](#)\n    \n*   [API](#)\n    \n*   [Metadata](#)\n    \n    *   [Substrate](#)\n        \n        *   [Overview](/docs/substrate)\n            \n        *   [Runtime](/docs/substrate/runtime)\n            \n        *   [JSON-RPC](/docs/substrate/rpc)\n            \n        *   [Constants](/docs/substrate/constants)\n            \n        *   [Storage](/docs/substrate/storage)\n            \n        *   [Extrinsics](/docs/substrate/extrinsics)\n            \n        *   [Events](/docs/substrate/events)\n            \n        *   [Errors](/docs/substrate/errors)\n            \n    *   [Polkadot](#)\n        \n    *   [Kusama](#)\n        \n*   [Keyring](#)\n    \n*   [Crypto Utilities](#)\n    \n*   [Contracts (API)](#)\n    \n*   [Identicon (UI)](#)\n    \n*   [Keyring (UI)](#)\n    \n*   [Extension](#)\n    \n*   [Run, Bundle, Test](#)\n    \n\n*   [](/docs/)\n    \n*   Metadata\n*   Substrate\n*   Runtime\n\nOn this page\n\nRuntime\n=======\n\nThe following section contains known runtime calls that may be available on specific runtimes (depending on configuration and available pallets). These call directly into the WASM runtime for queries and operations.\n\n*   **[accountNonceApi](#accountnonceapi)\n    **\n    \n*   **[assetConversionApi](#assetconversionapi)\n    **\n    \n*   **[assetsApi](#assetsapi)\n    **\n    \n*   **[auraApi](#auraapi)\n    **\n    \n*   **[authorFilterAPI](#authorfilterapi)\n    **\n    \n*   **[authorityDiscoveryApi](#authoritydiscoveryapi)\n    **\n    \n*   **[babeApi](#babeapi)\n    **\n    \n*   **[beefyApi](#beefyapi)\n    **\n    \n*   **[beefyMmrApi](#beefymmrapi)\n    **\n    \n*   **[benchmark](#benchmark)\n    **\n    \n*   **[blockBuilder](#blockbuilder)\n    **\n    \n*   **[collectCollationInfo](#collectcollationinfo)\n    **\n    \n*   **[contractsApi](#contractsapi)\n    **\n    \n*   **[convertTransactionRuntimeApi](#converttransactionruntimeapi)\n    **\n    \n*   **[core](#core)\n    **\n    \n*   **[debugRuntimeApi](#debugruntimeapi)\n    **\n    \n*   **[difficultyApi](#difficultyapi)\n    **\n    \n*   **[ethereumRuntimeRPCApi](#ethereumruntimerpcapi)\n    **\n    \n*   **[fungiblesApi](#fungiblesapi)\n    **\n    \n*   **[grandpaApi](#grandpaapi)\n    **\n    \n*   **[kusamaFinalityApi](#kusamafinalityapi)\n    **\n    \n*   **[metadata](#metadata)\n    **\n    \n*   **[mmrApi](#mmrapi)\n    **\n    \n*   **[nftsApi](#nftsapi)\n    **\n    \n*   **[nimbusApi](#nimbusapi)\n    **\n    \n*   **[nominationPoolsApi](#nominationpoolsapi)\n    **\n    \n*   **[offchainWorkerApi](#offchainworkerapi)\n    **\n    \n*   **[oracleApi](#oracleapi)\n    **\n    \n*   **[parachainHost](#parachainhost)\n    **\n    \n*   **[polkadotFinalityApi](#polkadotfinalityapi)\n    **\n    \n*   **[rococoFinalityApi](#rococofinalityapi)\n    **\n    \n*   **[sessionKeys](#sessionkeys)\n    **\n    \n*   **[stakingApi](#stakingapi)\n    **\n    \n*   **[taggedTransactionQueue](#taggedtransactionqueue)\n    **\n    \n*   **[timestampApi](#timestampapi)\n    **\n    \n*   **[tokensApi](#tokensapi)\n    **\n    \n*   **[transactionPaymentApi](#transactionpaymentapi)\n    **\n    \n*   **[transactionPaymentCallApi](#transactionpaymentcallapi)\n    **\n    \n*   **[westendFinalityApi](#westendfinalityapi)\n    **\n    \n\n* * *\n\nAccountNonceApi[\u200b](#accountnonceapi \"Direct link to AccountNonceApi\")\n\n----------------------------------------------------------------------\n\n### accountNonce(accountId: `AccountId`): `Index`[\u200b](#accountnonceaccountid-accountid-index \"Direct link to accountnonceaccountid-accountid-index\")\n\n*   **interface**: `api.call.accountNonceApi.accountNonce`\n*   **runtime**: `AccountNonceApi_account_nonce`\n*   **summary**: The API to query account nonce (aka transaction index)\n\n* * *\n\nAssetConversionApi[\u200b](#assetconversionapi \"Direct link to AssetConversionApi\")\n\n-------------------------------------------------------------------------------\n\n### getReserves(asset1: `XcmV3MultiLocation`, asset2: `XcmV3MultiLocation`): `Option<(Balance,Balance)>`[\u200b](#getreservesasset1-xcmv3multilocation-asset2-xcmv3multilocation-optionbalancebalance \"Direct link to getreservesasset1-xcmv3multilocation-asset2-xcmv3multilocation-optionbalancebalance\")\n\n*   **interface**: `api.call.assetConversionApi.getReserves`\n*   **runtime**: `AssetConversionApi_get_reserves`\n*   **summary**: Get pool reserves\n\n### quotePriceExactTokensForTokens(asset1: `XcmV3MultiLocation`, asset2: `XcmV3MultiLocation`, amount: `u128`, include\\_fee: `bool`): `Option<(Balance)>`[\u200b](#quotepriceexacttokensfortokensasset1-xcmv3multilocation-asset2-xcmv3multilocation-amount-u128-include_fee-bool-optionbalance \"Direct link to quotepriceexacttokensfortokensasset1-xcmv3multilocation-asset2-xcmv3multilocation-amount-u128-include_fee-bool-optionbalance\")\n\n*   **interface**: `api.call.assetConversionApi.quotePriceExactTokensForTokens`\n*   **runtime**: `AssetConversionApi_quote_price_exact_tokens_for_tokens`\n*   **summary**: Quote price: exact tokens for tokens\n\n### quotePriceTokensForExactTokens(asset1: `XcmV3MultiLocation`, asset2: `XcmV3MultiLocation`, amount: `u128`, include\\_fee: `bool`): `Option<(Balance)>`[\u200b](#quotepricetokensforexacttokensasset1-xcmv3multilocation-asset2-xcmv3multilocation-amount-u128-include_fee-bool-optionbalance \"Direct link to quotepricetokensforexacttokensasset1-xcmv3multilocation-asset2-xcmv3multilocation-amount-u128-include_fee-bool-optionbalance\")\n\n*   **interface**: `api.call.assetConversionApi.quotePriceTokensForExactTokens`\n*   **runtime**: `AssetConversionApi_quote_price_tokens_for_exact_tokens`\n*   **summary**: Quote price: tokens for exact tokens\n\n* * *\n\nAssetsApi[\u200b](#assetsapi \"Direct link to AssetsApi\")\n\n----------------------------------------------------\n\n### accountBalances(account: `AccountId`): `Vec<(u32, TAssetBalance)>`[\u200b](#accountbalancesaccount-accountid-vecu32-tassetbalance \"Direct link to accountbalancesaccount-accountid-vecu32-tassetbalance\")\n\n*   **interface**: `api.call.assetsApi.accountBalances`\n*   **runtime**: `AssetsApi_account_balances`\n*   **summary**: Return the current set of authorities.\n\n* * *\n\nAuraApi[\u200b](#auraapi \"Direct link to AuraApi\")\n\n----------------------------------------------\n\n### authorities(): `Vec<AuthorityId>`[\u200b](#authorities-vecauthorityid \"Direct link to authorities-vecauthorityid\")\n\n*   **interface**: `api.call.auraApi.authorities`\n*   **runtime**: `AuraApi_authorities`\n*   **summary**: Return the current set of authorities.\n\n### slotDuration(): `SlotDuration`[\u200b](#slotduration-slotduration \"Direct link to slotduration-slotduration\")\n\n*   **interface**: `api.call.auraApi.slotDuration`\n*   **runtime**: `AuraApi_slot_duration`\n*   **summary**: Returns the slot duration for Aura.\n\n* * *\n\nAuthorFilterAPI[\u200b](#authorfilterapi \"Direct link to AuthorFilterAPI\")\n\n----------------------------------------------------------------------\n\n### canAuthor(author: `AccountId`, relayParent: `u32`, parentHeader: `Header`): `bool`[\u200b](#canauthorauthor-accountid-relayparent-u32-parentheader-header-bool \"Direct link to canauthorauthor-accountid-relayparent-u32-parentheader-header-bool\")\n\n*   **interface**: `api.call.authorFilterAPI.canAuthor`\n*   **runtime**: `AuthorFilterAPI_can_author`\n*   **summary**: The runtime api used to predict whether an author will be eligible in the given slot\n\n* * *\n\nAuthorityDiscoveryApi[\u200b](#authoritydiscoveryapi \"Direct link to AuthorityDiscoveryApi\")\n\n----------------------------------------------------------------------------------------\n\n### authorities(): `Vec<AuthorityId>`[\u200b](#authorities-vecauthorityid-1 \"Direct link to authorities-vecauthorityid-1\")\n\n*   **interface**: `api.call.authorityDiscoveryApi.authorities`\n*   **runtime**: `AuthorityDiscoveryApi_authorities`\n*   **summary**: Retrieve authority identifiers of the current and next authority set.\n\n* * *\n\nBabeApi[\u200b](#babeapi \"Direct link to BabeApi\")\n\n----------------------------------------------\n\n### configuration(): `BabeGenesisConfiguration`[\u200b](#configuration-babegenesisconfiguration \"Direct link to configuration-babegenesisconfiguration\")\n\n*   **interface**: `api.call.babeApi.configuration`\n*   **runtime**: `BabeApi_configuration`\n*   **summary**: Return the genesis configuration for BABE. The configuration is only read on genesis.\n\n### currentEpoch(): `Epoch`[\u200b](#currentepoch-epoch \"Direct link to currentepoch-epoch\")\n\n*   **interface**: `api.call.babeApi.currentEpoch`\n*   **runtime**: `BabeApi_current_epoch`\n*   **summary**: Returns information regarding the current epoch.\n\n### currentEpochStart(): `Slot`[\u200b](#currentepochstart-slot \"Direct link to currentepochstart-slot\")\n\n*   **interface**: `api.call.babeApi.currentEpochStart`\n*   **runtime**: `BabeApi_current_epoch_start`\n*   **summary**: Returns the slot that started the current epoch.\n\n### generateKeyOwnershipProof(slot: `Slot`, authorityId: `AuthorityId`): `Option<OpaqueKeyOwnershipProof>`[\u200b](#generatekeyownershipproofslot-slot-authorityid-authorityid-optionopaquekeyownershipproof \"Direct link to generatekeyownershipproofslot-slot-authorityid-authorityid-optionopaquekeyownershipproof\")\n\n*   **interface**: `api.call.babeApi.generateKeyOwnershipProof`\n*   **runtime**: `BabeApi_generate_key_ownership_proof`\n*   **summary**: Generates a proof of key ownership for the given authority in the current epoch.\n\n### nextEpoch(): `Epoch`[\u200b](#nextepoch-epoch \"Direct link to nextepoch-epoch\")\n\n*   **interface**: `api.call.babeApi.nextEpoch`\n*   **runtime**: `BabeApi_next_epoch`\n*   **summary**: Returns information regarding the next epoch (which was already previously announced).\n\n### submitReportEquivocationUnsignedExtrinsic(equivocationProof: `BabeEquivocationProof`, keyOwnerProof: `OpaqueKeyOwnershipProof`): `Option<Null>`[\u200b](#submitreportequivocationunsignedextrinsicequivocationproof-babeequivocationproof-keyownerproof-opaquekeyownershipproof-optionnull \"Direct link to submitreportequivocationunsignedextrinsicequivocationproof-babeequivocationproof-keyownerproof-opaquekeyownershipproof-optionnull\")\n\n*   **interface**: `api.call.babeApi.submitReportEquivocationUnsignedExtrinsic`\n*   **runtime**: `BabeApi_submit_report_equivocation_unsigned_extrinsic`\n*   **summary**: Submits an unsigned extrinsic to report an equivocation.\n\n* * *\n\nBeefyApi[\u200b](#beefyapi \"Direct link to BeefyApi\")\n\n-------------------------------------------------\n\n### beefyGenesis(): `Option<BlockNumber>`[\u200b](#beefygenesis-optionblocknumber \"Direct link to beefygenesis-optionblocknumber\")\n\n*   **interface**: `api.call.beefyApi.beefyGenesis`\n*   **runtime**: `BeefyApi_beefy_genesis`\n*   **summary**: Return the block number where BEEFY consensus is enabled/started\n\n### generateKeyOwnershipProof(setId: `ValidatorSetId`, authorityId: `AuthorityId`): `Option<OpaqueKeyOwnershipProof>`[\u200b](#generatekeyownershipproofsetid-validatorsetid-authorityid-authorityid-optionopaquekeyownershipproof \"Direct link to generatekeyownershipproofsetid-validatorsetid-authorityid-authorityid-optionopaquekeyownershipproof\")\n\n*   **interface**: `api.call.beefyApi.generateKeyOwnershipProof`\n*   **runtime**: `BeefyApi_generate_key_ownership_proof`\n*   **summary**: Generates a proof of key ownership for the given authority in the given set.\n\n### submitReportEquivocationUnsignedExtrinsic(equivocationProof: `BeefyEquivocationProof`, keyOwnerProof: `OpaqueKeyOwnershipProof`): `Option<Null>`[\u200b](#submitreportequivocationunsignedextrinsicequivocationproof-beefyequivocationproof-keyownerproof-opaquekeyownershipproof-optionnull \"Direct link to submitreportequivocationunsignedextrinsicequivocationproof-beefyequivocationproof-keyownerproof-opaquekeyownershipproof-optionnull\")\n\n*   **interface**: `api.call.beefyApi.submitReportEquivocationUnsignedExtrinsic`\n*   **runtime**: `BeefyApi_submit_report_equivocation_unsigned_extrinsic`\n*   **summary**: Submits an unsigned extrinsic to report an equivocation.\n\n### validatorSet(): `Option<ValidatorSet>`[\u200b](#validatorset-optionvalidatorset \"Direct link to validatorset-optionvalidatorset\")\n\n*   **interface**: `api.call.beefyApi.validatorSet`\n*   **runtime**: `BeefyApi_validator_set`\n*   **summary**: Return the current active BEEFY validator set\n\n* * *\n\nBeefyMmrApi[\u200b](#beefymmrapi \"Direct link to BeefyMmrApi\")\n\n----------------------------------------------------------\n\n### authoritySetProof(): `BeefyAuthoritySet`[\u200b](#authoritysetproof-beefyauthorityset \"Direct link to authoritysetproof-beefyauthorityset\")\n\n*   **interface**: `api.call.beefyMmrApi.authoritySetProof`\n*   **runtime**: `BeefyMmrApi_authority_set_proof`\n*   **summary**: Return the currently active BEEFY authority set proof.\n\n### nextAuthoritySetProof(): `BeefyNextAuthoritySet`[\u200b](#nextauthoritysetproof-beefynextauthorityset \"Direct link to nextauthoritysetproof-beefynextauthorityset\")\n\n*   **interface**: `api.call.beefyMmrApi.nextAuthoritySetProof`\n*   **runtime**: `BeefyMmrApi_next_authority_set_proof`\n*   **summary**: Return the next/queued BEEFY authority set proof.\n\n* * *\n\nBenchmark[\u200b](#benchmark \"Direct link to Benchmark\")\n\n----------------------------------------------------\n\n### benchmarkMetadata(extra: `bool`): `(Vec<BenchmarkList>, Vec<StorageInfo>)`[\u200b](#benchmarkmetadataextra-bool-vecbenchmarklist-vecstorageinfo \"Direct link to benchmarkmetadataextra-bool-vecbenchmarklist-vecstorageinfo\")\n\n*   **interface**: `api.call.benchmark.benchmarkMetadata`\n*   **runtime**: `Benchmark_benchmark_metadata`\n*   **summary**: Get the benchmark metadata available for this runtime.\n\n### dispatchBenchmark(config: `BenchmarkConfig`): `Result<Vec<BenchmarkBatch>, Text>`[\u200b](#dispatchbenchmarkconfig-benchmarkconfig-resultvecbenchmarkbatch-text \"Direct link to dispatchbenchmarkconfig-benchmarkconfig-resultvecbenchmarkbatch-text\")\n\n*   **interface**: `api.call.benchmark.dispatchBenchmark`\n*   **runtime**: `Benchmark_dispatch_benchmark`\n*   **summary**: Dispatch the given benchmark.\n\n* * *\n\nBlockBuilder[\u200b](#blockbuilder \"Direct link to BlockBuilder\")\n\n-------------------------------------------------------------\n\n### applyExtrinsic(extrinsic: `Extrinsic`): `ApplyExtrinsicResult`[\u200b](#applyextrinsicextrinsic-extrinsic-applyextrinsicresult \"Direct link to applyextrinsicextrinsic-extrinsic-applyextrinsicresult\")\n\n*   **interface**: `api.call.blockBuilder.applyExtrinsic`\n*   **runtime**: `BlockBuilder_apply_extrinsic`\n*   **summary**: Apply the given extrinsic.\n\n### checkInherents(block: `Block`, data: `InherentData`): `CheckInherentsResult`[\u200b](#checkinherentsblock-block-data-inherentdata-checkinherentsresult \"Direct link to checkinherentsblock-block-data-inherentdata-checkinherentsresult\")\n\n*   **interface**: `api.call.blockBuilder.checkInherents`\n*   **runtime**: `BlockBuilder_check_inherents`\n*   **summary**: Check that the inherents are valid.\n\n### finalizeBlock(): `Header`[\u200b](#finalizeblock-header \"Direct link to finalizeblock-header\")\n\n*   **interface**: `api.call.blockBuilder.finalizeBlock`\n*   **runtime**: `BlockBuilder_finalize_block`\n*   **summary**: Finish the current block.\n\n### inherentExtrinsics(inherent: `InherentData`): `Vec<Extrinsic>`[\u200b](#inherentextrinsicsinherent-inherentdata-vecextrinsic \"Direct link to inherentextrinsicsinherent-inherentdata-vecextrinsic\")\n\n*   **interface**: `api.call.blockBuilder.inherentExtrinsics`\n*   **runtime**: `BlockBuilder_inherent_extrinsics`\n*   **summary**: Generate inherent extrinsics.\n\n* * *\n\nCollectCollationInfo[\u200b](#collectcollationinfo \"Direct link to CollectCollationInfo\")\n\n-------------------------------------------------------------------------------------\n\n### collectCollationInfo(header: `Header`): `CollationInfo`[\u200b](#collectcollationinfoheader-header-collationinfo \"Direct link to collectcollationinfoheader-header-collationinfo\")\n\n*   **interface**: `api.call.collectCollationInfo.collectCollationInfo`\n*   **runtime**: `CollectCollationInfo_collect_collation_info`\n*   **summary**: Collect information about a collation.\n\n* * *\n\nContractsApi[\u200b](#contractsapi \"Direct link to ContractsApi\")\n\n-------------------------------------------------------------\n\n### call(origin: `AccountId`, dest: `AccountId`, value: `Balance`, gasLimit: `Option<WeightV2>`, storageDepositLimit: `Option<Balance>`, inputData: `Vec<u8>`): `ContractExecResult`[\u200b](#callorigin-accountid-dest-accountid-value-balance-gaslimit-optionweightv2-storagedepositlimit-optionbalance-inputdata-vecu8-contractexecresult \"Direct link to callorigin-accountid-dest-accountid-value-balance-gaslimit-optionweightv2-storagedepositlimit-optionbalance-inputdata-vecu8-contractexecresult\")\n\n*   **interface**: `api.call.contractsApi.call`\n*   **runtime**: `ContractsApi_call`\n*   **summary**: Perform a call from a specified account to a given contract.\n\n### getStorage(address: `AccountId`, key: `Bytes`): `Option<Bytes>`[\u200b](#getstorageaddress-accountid-key-bytes-optionbytes \"Direct link to getstorageaddress-accountid-key-bytes-optionbytes\")\n\n*   **interface**: `api.call.contractsApi.getStorage`\n*   **runtime**: `ContractsApi_get_storage`\n*   **summary**: Query a given storage key in a given contract.\n\n### instantiate(origin: `AccountId`, value: `Balance`, gasLimit: `Option<WeightV2>`, storageDepositLimit: `Option<Balance>`, code: `CodeSource`, data: `Bytes`, salt: `Bytes`): `ContractInstantiateResult`[\u200b](#instantiateorigin-accountid-value-balance-gaslimit-optionweightv2-storagedepositlimit-optionbalance-code-codesource-data-bytes-salt-bytes-contractinstantiateresult \"Direct link to instantiateorigin-accountid-value-balance-gaslimit-optionweightv2-storagedepositlimit-optionbalance-code-codesource-data-bytes-salt-bytes-contractinstantiateresult\")\n\n*   **interface**: `api.call.contractsApi.instantiate`\n*   **runtime**: `ContractsApi_instantiate`\n*   **summary**: Instantiate a new contract.\n\n### uploadCode(origin: `AccountId`, code: `Bytes`, storageDepositLimit: `Option<Balance>`): `CodeUploadResult`[\u200b](#uploadcodeorigin-accountid-code-bytes-storagedepositlimit-optionbalance-codeuploadresult \"Direct link to uploadcodeorigin-accountid-code-bytes-storagedepositlimit-optionbalance-codeuploadresult\")\n\n*   **interface**: `api.call.contractsApi.uploadCode`\n*   **runtime**: `ContractsApi_upload_code`\n*   **summary**: Upload new code without instantiating a contract from it.\n\n* * *\n\nConvertTransactionRuntimeApi[\u200b](#converttransactionruntimeapi \"Direct link to ConvertTransactionRuntimeApi\")\n\n-------------------------------------------------------------------------------------------------------------\n\n### convertTransaction(transaction: `TransactionV2`): `Extrinsic`[\u200b](#converttransactiontransaction-transactionv2-extrinsic \"Direct link to converttransactiontransaction-transactionv2-extrinsic\")\n\n*   **interface**: `api.call.convertTransactionRuntimeApi.convertTransaction`\n*   **runtime**: `ConvertTransactionRuntimeApi_convert_transaction`\n*   **summary**: Converts an Ethereum-style transaction to Extrinsic\n\n* * *\n\nCore[\u200b](#core \"Direct link to Core\")\n\n-------------------------------------\n\n### executeBlock(block: `Block`): `Null`[\u200b](#executeblockblock-block-null \"Direct link to executeblockblock-block-null\")\n\n*   **interface**: `api.call.core.executeBlock`\n*   **runtime**: `Core_execute_block`\n*   **summary**: Execute the given block.\n\n### initializeBlock(header: `Header`): `Null`[\u200b](#initializeblockheader-header-null \"Direct link to initializeblockheader-header-null\")\n\n*   **interface**: `api.call.core.initializeBlock`\n*   **runtime**: `Core_initialize_block`\n*   **summary**: Initialize a block with the given header.\n\n### version(): `RuntimeVersion`[\u200b](#version-runtimeversion \"Direct link to version-runtimeversion\")\n\n*   **interface**: `api.call.core.version`\n*   **runtime**: `Core_version`\n*   **summary**: Returns the version of the runtime.\n\n* * *\n\nDebugRuntimeApi[\u200b](#debugruntimeapi \"Direct link to DebugRuntimeApi\")\n\n----------------------------------------------------------------------\n\n### traceBlock(extrinsics: `Vec<Extrinsic>`, knownTransactions: `Vec<H256>`): `Result<(), DispatchError>`[\u200b](#traceblockextrinsics-vecextrinsic-knowntransactions-vech256-result-dispatcherror \"Direct link to traceblockextrinsics-vecextrinsic-knowntransactions-vech256-result-dispatcherror\")\n\n*   **interface**: `api.call.debugRuntimeApi.traceBlock`\n*   **runtime**: `DebugRuntimeApi_trace_block`\n*   **summary**: Trace all block extrinsics\n\n### traceTransaction(extrinsics: `Vec<Extrinsic>`, transaction: `EthTransaction`): `Result<(), DispatchError>`[\u200b](#tracetransactionextrinsics-vecextrinsic-transaction-ethtransaction-result-dispatcherror \"Direct link to tracetransactionextrinsics-vecextrinsic-transaction-ethtransaction-result-dispatcherror\")\n\n*   **interface**: `api.call.debugRuntimeApi.traceTransaction`\n*   **runtime**: `DebugRuntimeApi_trace_transaction`\n*   **summary**: Trace transaction extrinsics\n\n* * *\n\nDifficultyApi[\u200b](#difficultyapi \"Direct link to DifficultyApi\")\n\n----------------------------------------------------------------\n\n### difficulty(): `Raw`[\u200b](#difficulty-raw \"Direct link to difficulty-raw\")\n\n*   **interface**: `api.call.difficultyApi.difficulty`\n*   **runtime**: `DifficultyApi_difficulty`\n*   **summary**: Return the target difficulty of the next block.\n\n* * *\n\nEthereumRuntimeRPCApi[\u200b](#ethereumruntimerpcapi \"Direct link to EthereumRuntimeRPCApi\")\n\n----------------------------------------------------------------------------------------\n\n### accountBasic(address: `H160`): `EvmAccount`[\u200b](#accountbasicaddress-h160-evmaccount \"Direct link to accountbasicaddress-h160-evmaccount\")\n\n*   **interface**: `api.call.ethereumRuntimeRPCApi.accountBasic`\n*   **runtime**: `EthereumRuntimeRPCApi_account_basic`\n*   **summary**: Returns pallet\\_evm::Accounts by address.\n\n### accountCodeAt(address: `H160`): `Bytes`[\u200b](#accountcodeataddress-h160-bytes \"Direct link to accountcodeataddress-h160-bytes\")\n\n*   **interface**: `api.call.ethereumRuntimeRPCApi.accountCodeAt`\n*   **runtime**: `EthereumRuntimeRPCApi_account_code_at`\n*   **summary**: For a given account address, returns pallet\\_evm::AccountCodes.\n\n### author(): `H160`[\u200b](#author-h160 \"Direct link to author-h160\")\n\n*   **interface**: `api.call.ethereumRuntimeRPCApi.author`\n*   **runtime**: `EthereumRuntimeRPCApi_author`\n*   **summary**: Returns the converted FindAuthor::find\\_author authority id.\n\n### call(from: `H160`, to: `H160`, data: `Vec<u8>`, value: `U256`, gasLimit: `U256`, maxFeePerGas: `Option<U256>`, maxPriorityFeePerGas: `Option<U256>`, nonce: `Option<U256>`, estimate: `bool`, accessList: `Option<Vec<(H160, Vec<H256>)>>`): `Result<EvmCallInfoV2, DispatchError>`[\u200b](#callfrom-h160-to-h160-data-vecu8-value-u256-gaslimit-u256-maxfeepergas-optionu256-maxpriorityfeepergas-optionu256-nonce-optionu256-estimate-bool-accesslist-optionvech160-vech256-resultevmcallinfov2-dispatcherror \"Direct link to callfrom-h160-to-h160-data-vecu8-value-u256-gaslimit-u256-maxfeepergas-optionu256-maxpriorityfeepergas-optionu256-nonce-optionu256-estimate-bool-accesslist-optionvech160-vech256-resultevmcallinfov2-dispatcherror\")\n\n*   **interface**: `api.call.ethereumRuntimeRPCApi.call`\n*   **runtime**: `EthereumRuntimeRPCApi_call`\n*   **summary**: Returns a frame\\_ethereum::call response. If `estimate` is true,\n\n### chainId(): `u64`[\u200b](#chainid-u64 \"Direct link to chainid-u64\")\n\n*   **interface**: `api.call.ethereumRuntimeRPCApi.chainId`\n*   **runtime**: `EthereumRuntimeRPCApi_chain_id`\n*   **summary**: Returns runtime defined pallet\\_evm::ChainId.\n\n### create(from: `H160`, data: `Vec<u8>`, value: `U256`, gasLimit: `U256`, maxFeePerGas: `Option<U256>`, maxPriorityFeePerGas: `Option<U256>`, nonce: `Option<U256>`, estimate: `bool`, accessList: `Option<Vec<(H160, Vec<H256>)>>`): `Result<EvmCreateInfoV2, DispatchError>`[\u200b](#createfrom-h160-data-vecu8-value-u256-gaslimit-u256-maxfeepergas-optionu256-maxpriorityfeepergas-optionu256-nonce-optionu256-estimate-bool-accesslist-optionvech160-vech256-resultevmcreateinfov2-dispatcherror \"Direct link to createfrom-h160-data-vecu8-value-u256-gaslimit-u256-maxfeepergas-optionu256-maxpriorityfeepergas-optionu256-nonce-optionu256-estimate-bool-accesslist-optionvech160-vech256-resultevmcreateinfov2-dispatcherror\")\n\n*   **interface**: `api.call.ethereumRuntimeRPCApi.create`\n*   **runtime**: `EthereumRuntimeRPCApi_create`\n*   **summary**: Returns a frame\\_ethereum::call response. If `estimate` is true,\n\n### currentAll(): `(Option<BlockV2>, Option<Vec<EthReceiptV3>>, Option<Vec<EthTransactionStatus>>)`[\u200b](#currentall-optionblockv2-optionvecethreceiptv3-optionvecethtransactionstatus \"Direct link to currentall-optionblockv2-optionvecethreceiptv3-optionvecethtransactionstatus\")\n\n*   **interface**: `api.call.ethereumRuntimeRPCApi.currentAll`\n*   **runtime**: `EthereumRuntimeRPCApi_current_all`\n*   **summary**: Return all the current data for a block in a single runtime call.\n\n### currentBlock(): `BlockV2`[\u200b](#currentblock-blockv2 \"Direct link to currentblock-blockv2\")\n\n*   **interface**: `api.call.ethereumRuntimeRPCApi.currentBlock`\n*   **runtime**: `EthereumRuntimeRPCApi_current_block`\n*   **summary**: Return the current block.\n\n### currentReceipts(): `Option<Vec<EthReceiptV3>>`[\u200b](#currentreceipts-optionvecethreceiptv3 \"Direct link to currentreceipts-optionvecethreceiptv3\")\n\n*   **interface**: `api.call.ethereumRuntimeRPCApi.currentReceipts`\n*   **runtime**: `EthereumRuntimeRPCApi_current_receipts`\n*   **summary**: Return the current receipt.\n\n### currentTransactionStatuses(): `Option<Vec<EthTransactionStatus>>`[\u200b](#currenttransactionstatuses-optionvecethtransactionstatus \"Direct link to currenttransactionstatuses-optionvecethtransactionstatus\")\n\n*   **interface**: `api.call.ethereumRuntimeRPCApi.currentTransactionStatuses`\n*   **runtime**: `EthereumRuntimeRPCApi_current_transaction_statuses`\n*   **summary**: Return the current transaction status.\n\n### elasticity(): `Option<Permill>`[\u200b](#elasticity-optionpermill \"Direct link to elasticity-optionpermill\")\n\n*   **interface**: `api.call.ethereumRuntimeRPCApi.elasticity`\n*   **runtime**: `EthereumRuntimeRPCApi_elasticity`\n*   **summary**: Return the elasticity multiplier.\n\n### extrinsicFilter(xts: `Vec<Extrinsic>`): `Vec<TransactionV2>`[\u200b](#extrinsicfilterxts-vecextrinsic-vectransactionv2 \"Direct link to extrinsicfilterxts-vecextrinsic-vectransactionv2\")\n\n*   **interface**: `api.call.ethereumRuntimeRPCApi.extrinsicFilter`\n*   **runtime**: `EthereumRuntimeRPCApi_extrinsic_filter`\n*   **summary**: Receives a `Vec<OpaqueExtrinsic>` and filters all the ethereum transactions.\n\n### gasPrice(): `u256`[\u200b](#gasprice-u256 \"Direct link to gasprice-u256\")\n\n*   **interface**: `api.call.ethereumRuntimeRPCApi.gasPrice`\n*   **runtime**: `EthereumRuntimeRPCApi_gas_price`\n*   **summary**: Returns FixedGasPrice::min\\_gas\\_price\n\n### storageAt(address: `H160`, index: `u256`): `H256`[\u200b](#storageataddress-h160-index-u256-h256 \"Direct link to storageataddress-h160-index-u256-h256\")\n\n*   **interface**: `api.call.ethereumRuntimeRPCApi.storageAt`\n*   **runtime**: `EthereumRuntimeRPCApi_storage_at`\n*   **summary**: For a given account address and index, returns pallet\\_evm::AccountStorages.\n\n* * *\n\nFungiblesApi[\u200b](#fungiblesapi \"Direct link to FungiblesApi\")\n\n-------------------------------------------------------------\n\n### queryAccountBalances(account: `AccountId`): `Result<XcmVersionedMultiAssets, FungiblesAccessError>`[\u200b](#queryaccountbalancesaccount-accountid-resultxcmversionedmultiassets-fungiblesaccesserror \"Direct link to queryaccountbalancesaccount-accountid-resultxcmversionedmultiassets-fungiblesaccesserror\")\n\n*   **interface**: `api.call.fungiblesApi.queryAccountBalances`\n*   **runtime**: `FungiblesApi_query_account_balances`\n*   **summary**: Returns the list of all `MultiAsset` that an `AccountId` has\n\n* * *\n\nGrandpaApi[\u200b](#grandpaapi \"Direct link to GrandpaApi\")\n\n-------------------------------------------------------\n\n### currentSetId(): `SetId`[\u200b](#currentsetid-setid \"Direct link to currentsetid-setid\")\n\n*   **interface**: `api.call.grandpaApi.currentSetId`\n*   **runtime**: `GrandpaApi_current_set_id`\n*   **summary**: Get current GRANDPA authority set id.\n\n### generateKeyOwnershipProof(setId: `SetId`, authorityId: `AuthorityId`): `Option<OpaqueKeyOwnershipProof>`[\u200b](#generatekeyownershipproofsetid-setid-authorityid-authorityid-optionopaquekeyownershipproof \"Direct link to generatekeyownershipproofsetid-setid-authorityid-authorityid-optionopaquekeyownershipproof\")\n\n*   **interface**: `api.call.grandpaApi.generateKeyOwnershipProof`\n*   **runtime**: `GrandpaApi_generate_key_ownership_proof`\n*   **summary**: Generates a proof of key ownership for the given authority in the given set.\n\n### grandpaAuthorities(): `AuthorityList`[\u200b](#grandpaauthorities-authoritylist \"Direct link to grandpaauthorities-authoritylist\")\n\n*   **interface**: `api.call.grandpaApi.grandpaAuthorities`\n*   **runtime**: `GrandpaApi_grandpa_authorities`\n*   **summary**: Get the current GRANDPA authorities and weights. This should not change except for when changes are scheduled and the corresponding delay has passed.\n\n### submitReportEquivocationUnsignedExtrinsic(equivocationProof: `GrandpaEquivocationProof`, keyOwnerProof: `OpaqueKeyOwnershipProof`): `Option<Null>`[\u200b](#submitreportequivocationunsignedextrinsicequivocationproof-grandpaequivocationproof-keyownerproof-opaquekeyownershipproof-optionnull \"Direct link to submitreportequivocationunsignedextrinsicequivocationproof-grandpaequivocationproof-keyownerproof-opaquekeyownershipproof-optionnull\")\n\n*   **interface**: `api.call.grandpaApi.submitReportEquivocationUnsignedExtrinsic`\n*   **runtime**: `GrandpaApi_submit_report_equivocation_unsigned_extrinsic`\n*   **summary**: Submits an unsigned extrinsic to report an equivocation.\n\n* * *\n\nKusamaFinalityApi[\u200b](#kusamafinalityapi \"Direct link to KusamaFinalityApi\")\n\n----------------------------------------------------------------------------\n\n### bestFinalized(): `(BlockNumber, Hash)`[\u200b](#bestfinalized-blocknumber-hash \"Direct link to bestfinalized-blocknumber-hash\")\n\n*   **interface**: `api.call.kusamaFinalityApi.bestFinalized`\n*   **runtime**: `KusamaFinalityApi_best_finalized`\n*   **summary**: Returns number and hash of the best finalized header known to the bridge module.\n\n* * *\n\nMetadata[\u200b](#metadata \"Direct link to Metadata\")\n\n-------------------------------------------------\n\n### metadata(): `OpaqueMetadata`[\u200b](#metadata-opaquemetadata \"Direct link to metadata-opaquemetadata\")\n\n*   **interface**: `api.call.metadata.metadata`\n*   **runtime**: `Metadata_metadata`\n*   **summary**: Returns the metadata of a runtime\n\n### metadataAtVersion(version: `u32`): `Option<OpaqueMetadata>`[\u200b](#metadataatversionversion-u32-optionopaquemetadata \"Direct link to metadataatversionversion-u32-optionopaquemetadata\")\n\n*   **interface**: `api.call.metadata.metadataAtVersion`\n*   **runtime**: `Metadata_metadata_at_version`\n*   **summary**: Returns the metadata at a given version.\n\n### metadataVersions(): `Vec<u32>`[\u200b](#metadataversions-vecu32 \"Direct link to metadataversions-vecu32\")\n\n*   **interface**: `api.call.metadata.metadataVersions`\n*   **runtime**: `Metadata_metadata_versions`\n*   **summary**: Returns the supported metadata versions.\n\n* * *\n\nMmrApi[\u200b](#mmrapi \"Direct link to MmrApi\")\n\n-------------------------------------------\n\n### generateProof(blockNumbers: `Vec<BlockNumber>`, bestKnownBlockNumber: `Option<BlockNumber>`): `Result<(Vec<MmrEncodableOpaqueLeaf>, MmrBatchProof), MmrError>`[\u200b](#generateproofblocknumbers-vecblocknumber-bestknownblocknumber-optionblocknumber-resultvecmmrencodableopaqueleaf-mmrbatchproof-mmrerror \"Direct link to generateproofblocknumbers-vecblocknumber-bestknownblocknumber-optionblocknumber-resultvecmmrencodableopaqueleaf-mmrbatchproof-mmrerror\")\n\n*   **interface**: `api.call.mmrApi.generateProof`\n*   **runtime**: `MmrApi_generate_proof`\n*   **summary**: Generate MMR proof for the given block numbers.\n\n### root(): `Result<Hash, MmrError>`[\u200b](#root-resulthash-mmrerror \"Direct link to root-resulthash-mmrerror\")\n\n*   **interface**: `api.call.mmrApi.root`\n*   **runtime**: `MmrApi_root`\n*   **summary**: Return the on-chain MMR root hash.\n\n### verifyProof(leaves: `Vec<MmrEncodableOpaqueLeaf>`, proof: `MmrBatchProof`): `Result<(), MmrError>`[\u200b](#verifyproofleaves-vecmmrencodableopaqueleaf-proof-mmrbatchproof-result-mmrerror \"Direct link to verifyproofleaves-vecmmrencodableopaqueleaf-proof-mmrbatchproof-result-mmrerror\")\n\n*   **interface**: `api.call.mmrApi.verifyProof`\n*   **runtime**: `MmrApi_verify_proof`\n*   **summary**: Verify MMR proof against on-chain MMR.\n\n### verifyProofStateless(root: `Hash`, leaves: `Vec<MmrEncodableOpaqueLeaf>`, proof: `MmrBatchProof`): `Result<(), MmrError>`[\u200b](#verifyproofstatelessroot-hash-leaves-vecmmrencodableopaqueleaf-proof-mmrbatchproof-result-mmrerror \"Direct link to verifyproofstatelessroot-hash-leaves-vecmmrencodableopaqueleaf-proof-mmrbatchproof-result-mmrerror\")\n\n*   **interface**: `api.call.mmrApi.verifyProofStateless`\n*   **runtime**: `MmrApi_verify_proof_stateless`\n*   **summary**: Verify MMR proof against given root hash.\n\n* * *\n\nNftsApi[\u200b](#nftsapi \"Direct link to NftsApi\")\n\n----------------------------------------------\n\n### attribute(collection: `NftCollectionId`, item: `NftItemId`, key: `Bytes`): `Option<Bytes>`[\u200b](#attributecollection-nftcollectionid-item-nftitemid-key-bytes-optionbytes \"Direct link to attributecollection-nftcollectionid-item-nftitemid-key-bytes-optionbytes\")\n\n*   **interface**: `api.call.nftsApi.attribute`\n*   **runtime**: `NftsApi_attribute`\n*   **summary**: An attribute\n\n### collectionAttribute(collection: `NftCollectionId`, key: `Bytes`): `Option<Bytes>`[\u200b](#collectionattributecollection-nftcollectionid-key-bytes-optionbytes \"Direct link to collectionattributecollection-nftcollectionid-key-bytes-optionbytes\")\n\n*   **interface**: `api.call.nftsApi.collectionAttribute`\n*   **runtime**: `NftsApi_collection_attribute`\n*   **summary**: A collection attribute\n\n### collectionOwner(collection: `NftCollectionId`): `Option<AccountId>`[\u200b](#collectionownercollection-nftcollectionid-optionaccountid \"Direct link to collectionownercollection-nftcollectionid-optionaccountid\")\n\n*   **interface**: `api.call.nftsApi.collectionOwner`\n*   **runtime**: `NftsApi_collection_owner`\n*   **summary**: A collection owner\n\n### customAttribute(account: `AccountId`, collection: `NftCollectionId`, item: `NftItemId`, key: `Bytes`): `Option<Bytes>`[\u200b](#customattributeaccount-accountid-collection-nftcollectionid-item-nftitemid-key-bytes-optionbytes \"Direct link to customattributeaccount-accountid-collection-nftcollectionid-item-nftitemid-key-bytes-optionbytes\")\n\n*   **interface**: `api.call.nftsApi.customAttribute`\n*   **runtime**: `NftsApi_custom_attribute`\n*   **summary**: A custom attribute\n\n### owner(collection: `NftCollectionId`, item: `NftItemId`): `Option<AccountId>`[\u200b](#ownercollection-nftcollectionid-item-nftitemid-optionaccountid \"Direct link to ownercollection-nftcollectionid-item-nftitemid-optionaccountid\")\n\n*   **interface**: `api.call.nftsApi.owner`\n*   **runtime**: `NftsApi_owner`\n*   **summary**: Collection owner\n\n### systemAttribute(collection: `NftCollectionId`, item: `NftItemId`, key: `Bytes`): `Option<Bytes>`[\u200b](#systemattributecollection-nftcollectionid-item-nftitemid-key-bytes-optionbytes \"Direct link to systemattributecollection-nftcollectionid-item-nftitemid-key-bytes-optionbytes\")\n\n*   **interface**: `api.call.nftsApi.systemAttribute`\n*   **runtime**: `NftsApi_system_attribute`\n*   **summary**: System attribute\n\n* * *\n\nNimbusApi[\u200b](#nimbusapi \"Direct link to NimbusApi\")\n\n----------------------------------------------------\n\n### canAuthor(author: `AccountId`, relayParent: `u32`, parentHeader: `Header`): `bool`[\u200b](#canauthorauthor-accountid-relayparent-u32-parentheader-header-bool-1 \"Direct link to canauthorauthor-accountid-relayparent-u32-parentheader-header-bool-1\")\n\n*   **interface**: `api.call.nimbusApi.canAuthor`\n*   **runtime**: `NimbusApi_can_author`\n*   **summary**: The runtime api used to predict whether a Nimbus author will be eligible in the given slot\n\n* * *\n\nNominationPoolsApi[\u200b](#nominationpoolsapi \"Direct link to NominationPoolsApi\")\n\n-------------------------------------------------------------------------------\n\n### balanceToPoints(poolId: `NpPoolId`, newFunds: `Balance`): `Balance`[\u200b](#balancetopointspoolid-nppoolid-newfunds-balance-balance \"Direct link to balancetopointspoolid-nppoolid-newfunds-balance-balance\")\n\n*   **interface**: `api.call.nominationPoolsApi.balanceToPoints`\n*   **runtime**: `NominationPoolsApi_balance_to_points`\n*   **summary**: Returns the equivalent points of `new_funds` for a given pool.\n\n### pendingRewards(member: `AccountId`): `Balance`[\u200b](#pendingrewardsmember-accountid-balance \"Direct link to pendingrewardsmember-accountid-balance\")\n\n*   **interface**: `api.call.nominationPoolsApi.pendingRewards`\n*   **runtime**: `NominationPoolsApi_pending_rewards`\n*   **summary**: Returns the pending rewards for the given member.\n\n### pointsToBalance(poolId: `NpPoolId`, points: `Balance`): `Balance`[\u200b](#pointstobalancepoolid-nppoolid-points-balance-balance \"Direct link to pointstobalancepoolid-nppoolid-points-balance-balance\")\n\n*   **interface**: `api.call.nominationPoolsApi.pointsToBalance`\n*   **runtime**: `NominationPoolsApi_points_to_balance`\n*   **summary**: Returns the equivalent balance of `points` for a given pool.\n\n* * *\n\nOffchainWorkerApi[\u200b](#offchainworkerapi \"Direct link to OffchainWorkerApi\")\n\n----------------------------------------------------------------------------\n\n### offchainWorker(header: `Header`): `Null`[\u200b](#offchainworkerheader-header-null \"Direct link to offchainworkerheader-header-null\")\n\n*   **interface**: `api.call.offchainWorkerApi.offchainWorker`\n*   **runtime**: `OffchainWorkerApi_offchain_worker`\n*   **summary**: Starts the off-chain task for given block header.\n\n* * *\n\nOracleApi[\u200b](#oracleapi \"Direct link to OracleApi\")\n\n----------------------------------------------------\n\n### getAllValues(providerId: `Raw`): `Raw`[\u200b](#getallvaluesproviderid-raw-raw \"Direct link to getallvaluesproviderid-raw-raw\")\n\n*   **interface**: `api.call.oracleApi.getAllValues`\n*   **runtime**: `OracleApi_get_all_values`\n*   **summary**: Retrieves all values\n\n### getValue(providerId: `Raw`, key: `Raw`): `Option<Raw>`[\u200b](#getvalueproviderid-raw-key-raw-optionraw \"Direct link to getvalueproviderid-raw-key-raw-optionraw\")\n\n*   **interface**: `api.call.oracleApi.getValue`\n*   **runtime**: `OracleApi_get_value`\n*   **summary**: Retrieves a single value\n\n* * *\n\nParachainHost[\u200b](#parachainhost \"Direct link to ParachainHost\")\n\n----------------------------------------------------------------\n\n### assumedValidationData(paraId: `ParaId`, hash: `Hash`): `Option<(PersistedValidationData, ValidationCodeHash)>`[\u200b](#assumedvalidationdataparaid-paraid-hash-hash-optionpersistedvalidationdata-validationcodehash \"Direct link to assumedvalidationdataparaid-paraid-hash-hash-optionpersistedvalidationdata-validationcodehash\")\n\n*   **interface**: `api.call.parachainHost.assumedValidationData`\n*   **runtime**: `ParachainHost_assumed_validation_data`\n*   **summary**: Returns the persisted validation data for the given `ParaId` along with the corresponding validation code hash.\n\n### availabilityCores(): `Vec<CoreState>`[\u200b](#availabilitycores-veccorestate \"Direct link to availabilitycores-veccorestate\")\n\n*   **interface**: `api.call.parachainHost.availabilityCores`\n*   **runtime**: `ParachainHost_availability_cores`\n*   **summary**: Yields information on all availability cores as relevant to the child block.\n\n### candidateEvents(): `Vec<CandidateEvent>`[\u200b](#candidateevents-veccandidateevent \"Direct link to candidateevents-veccandidateevent\")\n\n*   **interface**: `api.call.parachainHost.candidateEvents`\n*   **runtime**: `ParachainHost_candidate_events`\n*   **summary**: Get a vector of events concerning candidates that occurred within a block.\n\n### candidatePendingAvailability(paraId: `ParaId`): `Option<CommittedCandidateReceipt>`[\u200b](#candidatependingavailabilityparaid-paraid-optioncommittedcandidatereceipt \"Direct link to candidatependingavailabilityparaid-paraid-optioncommittedcandidatereceipt\")\n\n*   **interface**: `api.call.parachainHost.candidatePendingAvailability`\n*   **runtime**: `ParachainHost_candidate_pending_availability`\n*   **summary**: Get the receipt of a candidate pending availability.\n\n### checkValidationOutputs(paraId: `ParaId`, outputs: `CandidateCommitments`): `bool`[\u200b](#checkvalidationoutputsparaid-paraid-outputs-candidatecommitments-bool \"Direct link to checkvalidationoutputsparaid-paraid-outputs-candidatecommitments-bool\")\n\n*   **interface**: `api.call.parachainHost.checkValidationOutputs`\n*   **runtime**: `ParachainHost_check_validation_outputs`\n*   **summary**: Checks if the given validation outputs pass the acceptance criteria.\n\n### disputes(): `Vec<(SessionIndex, CandidateHash, DisputeState)>`[\u200b](#disputes-vecsessionindex-candidatehash-disputestate \"Direct link to disputes-vecsessionindex-candidatehash-disputestate\")\n\n*   **interface**: `api.call.parachainHost.disputes`\n*   **runtime**: `ParachainHost_disputes`\n*   **summary**: Returns all onchain disputes.\n\n### dmqContents(paraId: `ParaId`): `Vec<InboundDownwardMessage>`[\u200b](#dmqcontentsparaid-paraid-vecinbounddownwardmessage \"Direct link to dmqcontentsparaid-paraid-vecinbounddownwardmessage\")\n\n*   **interface**: `api.call.parachainHost.dmqContents`\n*   **runtime**: `ParachainHost_dmq_contents`\n*   **summary**: Get all the pending inbound messages in the downward message queue for a para.\n\n### inboundHrmpChannelsContents(paraId: `ParaId`): `Vec<InboundHrmpMessage>`[\u200b](#inboundhrmpchannelscontentsparaid-paraid-vecinboundhrmpmessage \"Direct link to inboundhrmpchannelscontentsparaid-paraid-vecinboundhrmpmessage\")\n\n*   **interface**: `api.call.parachainHost.inboundHrmpChannelsContents`\n*   **runtime**: `ParachainHost_inbound_hrmp_channels_contents`\n*   **summary**: Get the contents of all channels addressed to the given recipient.\n\n### keyOwnershipProof(validatorId: `ValidatorId`): `Option<OpaqueKeyOwnershipProof>`[\u200b](#keyownershipproofvalidatorid-validatorid-optionopaquekeyownershipproof \"Direct link to keyownershipproofvalidatorid-validatorid-optionopaquekeyownershipproof\")\n\n*   **interface**: `api.call.parachainHost.keyOwnershipProof`\n*   **runtime**: `ParachainHost_key_ownership_proof`\n*   **summary**: Returns a merkle proof of a validator session key\n\n### onChainVotes(): `Option<ScrapedOnChainVotes>`[\u200b](#onchainvotes-optionscrapedonchainvotes \"Direct link to onchainvotes-optionscrapedonchainvotes\")\n\n*   **interface**: `api.call.parachainHost.onChainVotes`\n*   **runtime**: `ParachainHost_on_chain_votes`\n*   **summary**: Scrape dispute relevant from on-chain, backing votes and resolved disputes.\n\n### persistedValidationData(paraId: `ParaId`, assumption: `OccupiedCoreAssumption`): `Option<PersistedValidationData>`[\u200b](#persistedvalidationdataparaid-paraid-assumption-occupiedcoreassumption-optionpersistedvalidationdata \"Direct link to persistedvalidationdataparaid-paraid-assumption-occupiedcoreassumption-optionpersistedvalidationdata\")\n\n*   **interface**: `api.call.parachainHost.persistedValidationData`\n*   **runtime**: `ParachainHost_persisted_validation_data`\n*   **summary**: Yields the persisted validation data for the given `ParaId` along with an assumption that should be used if the para currently occupies a core.\n\n### pvfsRequirePrecheck(): `Vec<ValidationCodeHash>`[\u200b](#pvfsrequireprecheck-vecvalidationcodehash \"Direct link to pvfsrequireprecheck-vecvalidationcodehash\")\n\n*   **interface**: `api.call.parachainHost.pvfsRequirePrecheck`\n*   **runtime**: `ParachainHost_pvfs_require_precheck`\n*   **summary**: Returns code hashes of PVFs that require pre-checking by validators in the active set.\n\n### sessionExecutorParams(sessionIndex: `SessionIndex`): `Option<ExecutorParams>`[\u200b](#sessionexecutorparamssessionindex-sessionindex-optionexecutorparams \"Direct link to sessionexecutorparamssessionindex-sessionindex-optionexecutorparams\")\n\n*   **interface**: `api.call.parachainHost.sessionExecutorParams`\n*   **runtime**: `ParachainHost_session_executor_params`\n*   **summary**: Returns execution parameters for the session.\n\n### sessionIndexForChild(): `SessionIndex`[\u200b](#sessionindexforchild-sessionindex \"Direct link to sessionindexforchild-sessionindex\")\n\n*   **interface**: `api.call.parachainHost.sessionIndexForChild`\n*   **runtime**: `ParachainHost_session_index_for_child`\n*   **summary**: Returns the session index expected at a child of the block.\n\n### sessionInfo(index: `SessionIndex`): `Option<SessionInfo>`[\u200b](#sessioninfoindex-sessionindex-optionsessioninfo \"Direct link to sessioninfoindex-sessionindex-optionsessioninfo\")\n\n*   **interface**: `api.call.parachainHost.sessionInfo`\n*   **runtime**: `ParachainHost_session_info`\n*   **summary**: Get the session info for the given session, if stored.\n\n### submitPvfCheckStatement(stmt: `PvfCheckStatement`, signature: `ValidatorSignature`): `Null`[\u200b](#submitpvfcheckstatementstmt-pvfcheckstatement-signature-validatorsignature-null \"Direct link to submitpvfcheckstatementstmt-pvfcheckstatement-signature-validatorsignature-null\")\n\n*   **interface**: `api.call.parachainHost.submitPvfCheckStatement`\n*   **runtime**: `ParachainHost_submit_pvf_check_statement`\n*   **summary**: Submits a PVF pre-checking statement into the transaction pool.\n\n### submitReportDisputeLost(disputeProof: `DisputeProof`, keyOwnershipProof: `OpaqueKeyOwnershipProof`): `Option<Null>`[\u200b](#submitreportdisputelostdisputeproof-disputeproof-keyownershipproof-opaquekeyownershipproof-optionnull \"Direct link to submitreportdisputelostdisputeproof-disputeproof-keyownershipproof-opaquekeyownershipproof-optionnull\")\n\n*   **interface**: `api.call.parachainHost.submitReportDisputeLost`\n*   **runtime**: `ParachainHost_submit_report_dispute_lost`\n*   **summary**: Submit an unsigned extrinsic to slash validators who lost a dispute about a candidate of a past session\n\n### unappliedSlashes(): `Vec<(SessionIndex, CandidateHash, PendingSlashes)>`[\u200b](#unappliedslashes-vecsessionindex-candidatehash-pendingslashes \"Direct link to unappliedslashes-vecsessionindex-candidatehash-pendingslashes\")\n\n*   **interface**: `api.call.parachainHost.unappliedSlashes`\n*   **runtime**: `ParachainHost_unapplied_slashes`\n*   **summary**: Returns a list of validators that lost a past session dispute and need to be slashed\n\n### validationCode(paraId: `ParaId`, assumption: `OccupiedCoreAssumption`): `ValidationCode`[\u200b](#validationcodeparaid-paraid-assumption-occupiedcoreassumption-validationcode \"Direct link to validationcodeparaid-paraid-assumption-occupiedcoreassumption-validationcode\")\n\n*   **interface**: `api.call.parachainHost.validationCode`\n*   **runtime**: `ParachainHost_validation_code`\n*   **summary**: Fetch the validation code used by a para, making the given `OccupiedCoreAssumption`.\n\n### validationCodeByHash(hash: `ValidationCodeHash`): `Option<ValidationCode>`[\u200b](#validationcodebyhashhash-validationcodehash-optionvalidationcode \"Direct link to validationcodebyhashhash-validationcodehash-optionvalidationcode\")\n\n*   **interface**: `api.call.parachainHost.validationCodeByHash`\n*   **runtime**: `ParachainHost_validation_code_by_hash`\n*   **summary**: Get the validation code from its hash.\n\n### validationCodeHash(paraId: `ParaId`, assumption: `OccupiedCoreAssumption`): `Option<ValidationCodeHash>`[\u200b](#validationcodehashparaid-paraid-assumption-occupiedcoreassumption-optionvalidationcodehash \"Direct link to validationcodehashparaid-paraid-assumption-occupiedcoreassumption-optionvalidationcodehash\")\n\n*   **interface**: `api.call.parachainHost.validationCodeHash`\n*   **runtime**: `ParachainHost_validation_code_hash`\n*   **summary**: Fetch the hash of the validation code used by a para, making the given `OccupiedCoreAssumption`.\n\n### validatorGroups(): `(Vec<Vec<ParaValidatorIndex>>, GroupRotationInfo)`[\u200b](#validatorgroups-vecvecparavalidatorindex-grouprotationinfo \"Direct link to validatorgroups-vecvecparavalidatorindex-grouprotationinfo\")\n\n*   **interface**: `api.call.parachainHost.validatorGroups`\n*   **runtime**: `ParachainHost_validator_groups`\n*   **summary**: Returns the validator groups and rotation info localized based on the hypothetical child of a block whose state this is invoked on\n\n### validators(): `Vec<ValidatorId>`[\u200b](#validators-vecvalidatorid \"Direct link to validators-vecvalidatorid\")\n\n*   **interface**: `api.call.parachainHost.validators`\n*   **runtime**: `ParachainHost_validators`\n*   **summary**: Get the current validators.\n\n* * *\n\nPolkadotFinalityApi[\u200b](#polkadotfinalityapi \"Direct link to PolkadotFinalityApi\")\n\n----------------------------------------------------------------------------------\n\n### bestFinalized(): `(BlockNumber, Hash)`[\u200b](#bestfinalized-blocknumber-hash-1 \"Direct link to bestfinalized-blocknumber-hash-1\")\n\n*   **interface**: `api.call.polkadotFinalityApi.bestFinalized`\n*   **runtime**: `PolkadotFinalityApi_best_finalized`\n*   **summary**: Returns number and hash of the best finalized header known to the bridge module.\n\n* * *\n\nRococoFinalityApi[\u200b](#rococofinalityapi \"Direct link to RococoFinalityApi\")\n\n----------------------------------------------------------------------------\n\n### bestFinalized(): `(BlockNumber, Hash)`[\u200b](#bestfinalized-blocknumber-hash-2 \"Direct link to bestfinalized-blocknumber-hash-2\")\n\n*   **interface**: `api.call.rococoFinalityApi.bestFinalized`\n*   **runtime**: `RococoFinalityApi_best_finalized`\n*   **summary**: Returns number and hash of the best finalized header known to the bridge module.\n\n* * *\n\nSessionKeys[\u200b](#sessionkeys \"Direct link to SessionKeys\")\n\n----------------------------------------------------------\n\n### decodeSessionKeys(encoded: `Bytes`): `Option<Vec<(Bytes, KeyTypeId)>>`[\u200b](#decodesessionkeysencoded-bytes-optionvecbytes-keytypeid \"Direct link to decodesessionkeysencoded-bytes-optionvecbytes-keytypeid\")\n\n*   **interface**: `api.call.sessionKeys.decodeSessionKeys`\n*   **runtime**: `SessionKeys_decode_session_keys`\n*   **summary**: Decode the given public session keys.\n\n### generateSessionKeys(seed: `Option<Bytes>`): `Bytes`[\u200b](#generatesessionkeysseed-optionbytes-bytes \"Direct link to generatesessionkeysseed-optionbytes-bytes\")\n\n*   **interface**: `api.call.sessionKeys.generateSessionKeys`\n*   **runtime**: `SessionKeys_generate_session_keys`\n*   **summary**: Generate a set of session keys with optionally using the given seed.\n\n* * *\n\nStakingApi[\u200b](#stakingapi \"Direct link to StakingApi\")\n\n-------------------------------------------------------\n\n### nominationsQuota(balance: `Balance`): `u32`[\u200b](#nominationsquotabalance-balance-u32 \"Direct link to nominationsquotabalance-balance-u32\")\n\n*   **interface**: `api.call.stakingApi.nominationsQuota`\n*   **runtime**: `StakingApi_nominations_quota`\n*   **summary**: Returns the nominations quota for a nominator with a given balance.\n\n* * *\n\nTaggedTransactionQueue[\u200b](#taggedtransactionqueue \"Direct link to TaggedTransactionQueue\")\n\n-------------------------------------------------------------------------------------------\n\n### validateTransaction(source: `TransactionSource`, tx: `Extrinsic`, blockHash: `BlockHash`): `TransactionValidity`[\u200b](#validatetransactionsource-transactionsource-tx-extrinsic-blockhash-blockhash-transactionvalidity \"Direct link to validatetransactionsource-transactionsource-tx-extrinsic-blockhash-blockhash-transactionvalidity\")\n\n*   **interface**: `api.call.taggedTransactionQueue.validateTransaction`\n*   **runtime**: `TaggedTransactionQueue_validate_transaction`\n*   **summary**: Validate the transaction.\n\n* * *\n\nTimestampApi[\u200b](#timestampapi \"Direct link to TimestampApi\")\n\n-------------------------------------------------------------\n\n### timestamp(): `Moment`[\u200b](#timestamp-moment \"Direct link to timestamp-moment\")\n\n*   **interface**: `api.call.timestampApi.timestamp`\n*   **runtime**: `TimestampApi_timestamp`\n*   **summary**: API necessary for timestamp-based difficulty adjustment algorithms.\n\n* * *\n\nTokensApi[\u200b](#tokensapi \"Direct link to TokensApi\")\n\n----------------------------------------------------\n\n### queryExistentialDeposit(currencyId: `Raw`): `u128`[\u200b](#queryexistentialdepositcurrencyid-raw-u128 \"Direct link to queryexistentialdepositcurrencyid-raw-u128\")\n\n*   **interface**: `api.call.tokensApi.queryExistentialDeposit`\n*   **runtime**: `TokensApi_query_existential_deposit`\n*   **summary**: Query the existential amount for a specific currency\n\n* * *\n\nTransactionPaymentApi[\u200b](#transactionpaymentapi \"Direct link to TransactionPaymentApi\")\n\n----------------------------------------------------------------------------------------\n\n### queryFeeDetails(uxt: `Extrinsic`, len: `u32`): `FeeDetails`[\u200b](#queryfeedetailsuxt-extrinsic-len-u32-feedetails \"Direct link to queryfeedetailsuxt-extrinsic-len-u32-feedetails\")\n\n*   **interface**: `api.call.transactionPaymentApi.queryFeeDetails`\n*   **runtime**: `TransactionPaymentApi_query_fee_details`\n*   **summary**: The transaction fee details\n\n### queryInfo(uxt: `Extrinsic`, len: `u32`): `RuntimeDispatchInfo`[\u200b](#queryinfouxt-extrinsic-len-u32-runtimedispatchinfo \"Direct link to queryinfouxt-extrinsic-len-u32-runtimedispatchinfo\")\n\n*   **interface**: `api.call.transactionPaymentApi.queryInfo`\n*   **runtime**: `TransactionPaymentApi_query_info`\n*   **summary**: The transaction info\n\n### queryLengthToFee(length: `u32`): `Balance`[\u200b](#querylengthtofeelength-u32-balance \"Direct link to querylengthtofeelength-u32-balance\")\n\n*   **interface**: `api.call.transactionPaymentApi.queryLengthToFee`\n*   **runtime**: `TransactionPaymentApi_query_length_to_fee`\n*   **summary**: Query the output of the current LengthToFee given some input\n\n### queryWeightToFee(weight: `Weight`): `Balance`[\u200b](#queryweighttofeeweight-weight-balance \"Direct link to queryweighttofeeweight-weight-balance\")\n\n*   **interface**: `api.call.transactionPaymentApi.queryWeightToFee`\n*   **runtime**: `TransactionPaymentApi_query_weight_to_fee`\n*   **summary**: Query the output of the current WeightToFee given some input\n\n* * *\n\nTransactionPaymentCallApi[\u200b](#transactionpaymentcallapi \"Direct link to TransactionPaymentCallApi\")\n\n----------------------------------------------------------------------------------------------------\n\n### queryCallFeeDetails(call: `Call`, len: `u32`): `FeeDetails`[\u200b](#querycallfeedetailscall-call-len-u32-feedetails \"Direct link to querycallfeedetailscall-call-len-u32-feedetails\")\n\n*   **interface**: `api.call.transactionPaymentCallApi.queryCallFeeDetails`\n*   **runtime**: `TransactionPaymentCallApi_query_call_fee_details`\n*   **summary**: The call fee details\n\n### queryCallInfo(call: `Call`, len: `u32`): `RuntimeDispatchInfo`[\u200b](#querycallinfocall-call-len-u32-runtimedispatchinfo \"Direct link to querycallinfocall-call-len-u32-runtimedispatchinfo\")\n\n*   **interface**: `api.call.transactionPaymentCallApi.queryCallInfo`\n*   **runtime**: `TransactionPaymentCallApi_query_call_info`\n*   **summary**: The call info\n\n### queryLengthToFee(length: `u32`): `Balance`[\u200b](#querylengthtofeelength-u32-balance-1 \"Direct link to querylengthtofeelength-u32-balance-1\")\n\n*   **interface**: `api.call.transactionPaymentCallApi.queryLengthToFee`\n*   **runtime**: `TransactionPaymentCallApi_query_length_to_fee`\n*   **summary**: Query the output of the current LengthToFee given some input\n\n### queryWeightToFee(weight: `Weight`): `Balance`[\u200b](#queryweighttofeeweight-weight-balance-1 \"Direct link to queryweighttofeeweight-weight-balance-1\")\n\n*   **interface**: `api.call.transactionPaymentCallApi.queryWeightToFee`\n*   **runtime**: `TransactionPaymentCallApi_query_weight_to_fee`\n*   **summary**: Query the output of the current WeightToFee given some input\n\n* * *\n\nWestendFinalityApi[\u200b](#westendfinalityapi \"Direct link to WestendFinalityApi\")\n\n-------------------------------------------------------------------------------\n\n### bestFinalized(): `(BlockNumber, Hash)`[\u200b](#bestfinalized-blocknumber-hash-3 \"Direct link to bestfinalized-blocknumber-hash-3\")\n\n*   **interface**: `api.call.westendFinalityApi.bestFinalized`\n*   **runtime**: `WestendFinalityApi_best_finalized`\n*   **summary**: Returns number and hash of the best finalized header known to the bridge module.\n\n[Edit this page](https://github.com/polkadot-js/docs/edit/master/docs/substrate/runtime.md)\n\n[Previous\\\n\\\nOverview](/docs/substrate)\n[Next\\\n\\\nJSON-RPC](/docs/substrate/rpc)\n\n*   [AccountNonceApi](#accountnonceapi)\n    *   [accountNonce(accountId: `AccountId`): `Index`](#accountnonceaccountid-accountid-index)\n        \n*   [AssetConversionApi](#assetconversionapi)\n    *   [getReserves(asset1: `XcmV3MultiLocation`, asset2: `XcmV3MultiLocation`): `Option<(Balance,Balance)>`](#getreservesasset1-xcmv3multilocation-asset2-xcmv3multilocation-optionbalancebalance)\n        \n    *   [quotePriceExactTokensForTokens(asset1: `XcmV3MultiLocation`, asset2: `XcmV3MultiLocation`, amount: `u128`, include\\_fee: `bool`): `Option<(Balance)>`](#quotepriceexacttokensfortokensasset1-xcmv3multilocation-asset2-xcmv3multilocation-amount-u128-include_fee-bool-optionbalance)\n        \n    *   [quotePriceTokensForExactTokens(asset1: `XcmV3MultiLocation`, asset2: `XcmV3MultiLocation`, amount: `u128`, include\\_fee: `bool`): `Option<(Balance)>`](#quotepricetokensforexacttokensasset1-xcmv3multilocation-asset2-xcmv3multilocation-amount-u128-include_fee-bool-optionbalance)\n        \n*   [AssetsApi](#assetsapi)\n    *   [accountBalances(account: `AccountId`): `Vec<(u32, TAssetBalance)>`](#accountbalancesaccount-accountid-vecu32-tassetbalance)\n        \n*   [AuraApi](#auraapi)\n    *   [authorities(): `Vec<AuthorityId>`](#authorities-vecauthorityid)\n        \n    *   [slotDuration(): `SlotDuration`](#slotduration-slotduration)\n        \n*   [AuthorFilterAPI](#authorfilterapi)\n    *   [canAuthor(author: `AccountId`, relayParent: `u32`, parentHeader: `Header`): `bool`](#canauthorauthor-accountid-relayparent-u32-parentheader-header-bool)\n        \n*   [AuthorityDiscoveryApi](#authoritydiscoveryapi)\n    *   [authorities(): `Vec<AuthorityId>`](#authorities-vecauthorityid-1)\n        \n*   [BabeApi](#babeapi)\n    *   [configuration(): `BabeGenesisConfiguration`](#configuration-babegenesisconfiguration)\n        \n    *   [currentEpoch(): `Epoch`](#currentepoch-epoch)\n        \n    *   [currentEpochStart(): `Slot`](#currentepochstart-slot)\n        \n    *   [generateKeyOwnershipProof(slot: `Slot`, authorityId: `AuthorityId`): `Option<OpaqueKeyOwnershipProof>`](#generatekeyownershipproofslot-slot-authorityid-authorityid-optionopaquekeyownershipproof)\n        \n    *   [nextEpoch(): `Epoch`](#nextepoch-epoch)\n        \n    *   [submitReportEquivocationUnsignedExtrinsic(equivocationProof: `BabeEquivocationProof`, keyOwnerProof: `OpaqueKeyOwnershipProof`): `Option<Null>`](#submitreportequivocationunsignedextrinsicequivocationproof-babeequivocationproof-keyownerproof-opaquekeyownershipproof-optionnull)\n        \n*   [BeefyApi](#beefyapi)\n    *   [beefyGenesis(): `Option<BlockNumber>`](#beefygenesis-optionblocknumber)\n        \n    *   [generateKeyOwnershipProof(setId: `ValidatorSetId`, authorityId: `AuthorityId`): `Option<OpaqueKeyOwnershipProof>`](#generatekeyownershipproofsetid-validatorsetid-authorityid-authorityid-optionopaquekeyownershipproof)\n        \n    *   [submitReportEquivocationUnsignedExtrinsic(equivocationProof: `BeefyEquivocationProof`, keyOwnerProof: `OpaqueKeyOwnershipProof`): `Option<Null>`](#submitreportequivocationunsignedextrinsicequivocationproof-beefyequivocationproof-keyownerproof-opaquekeyownershipproof-optionnull)\n        \n    *   [validatorSet(): `Option<ValidatorSet>`](#validatorset-optionvalidatorset)\n        \n*   [BeefyMmrApi](#beefymmrapi)\n    *   [authoritySetProof(): `BeefyAuthoritySet`](#authoritysetproof-beefyauthorityset)\n        \n    *   [nextAuthoritySetProof(): `BeefyNextAuthoritySet`](#nextauthoritysetproof-beefynextauthorityset)\n        \n*   [Benchmark](#benchmark)\n    *   [benchmarkMetadata(extra: `bool`): `(Vec<BenchmarkList>, Vec<StorageInfo>)`](#benchmarkmetadataextra-bool-vecbenchmarklist-vecstorageinfo)\n        \n    *   [dispatchBenchmark(config: `BenchmarkConfig`): `Result<Vec<BenchmarkBatch>, Text>`](#dispatchbenchmarkconfig-benchmarkconfig-resultvecbenchmarkbatch-text)\n        \n*   [BlockBuilder](#blockbuilder)\n    *   [applyExtrinsic(extrinsic: `Extrinsic`): `ApplyExtrinsicResult`](#applyextrinsicextrinsic-extrinsic-applyextrinsicresult)\n        \n    *   [checkInherents(block: `Block`, data: `InherentData`): `CheckInherentsResult`](#checkinherentsblock-block-data-inherentdata-checkinherentsresult)\n        \n    *   [finalizeBlock(): `Header`](#finalizeblock-header)\n        \n    *   [inherentExtrinsics(inherent: `InherentData`): `Vec<Extrinsic>`](#inherentextrinsicsinherent-inherentdata-vecextrinsic)\n        \n*   [CollectCollationInfo](#collectcollationinfo)\n    *   [collectCollationInfo(header: `Header`): `CollationInfo`](#collectcollationinfoheader-header-collationinfo)\n        \n*   [ContractsApi](#contractsapi)\n    *   [call(origin: `AccountId`, dest: `AccountId`, value: `Balance`, gasLimit: `Option<WeightV2>`, storageDepositLimit: `Option<Balance>`, inputData: `Vec<u8>`): `ContractExecResult`](#callorigin-accountid-dest-accountid-value-balance-gaslimit-optionweightv2-storagedepositlimit-optionbalance-inputdata-vecu8-contractexecresult)\n        \n    *   [getStorage(address: `AccountId`, key: `Bytes`): `Option<Bytes>`](#getstorageaddress-accountid-key-bytes-optionbytes)\n        \n    *   [instantiate(origin: `AccountId`, value: `Balance`, gasLimit: `Option<WeightV2>`, storageDepositLimit: `Option<Balance>`, code: `CodeSource`, data: `Bytes`, salt: `Bytes`): `ContractInstantiateResult`](#instantiateorigin-accountid-value-balance-gaslimit-optionweightv2-storagedepositlimit-optionbalance-code-codesource-data-bytes-salt-bytes-contractinstantiateresult)\n        \n    *   [uploadCode(origin: `AccountId`, code: `Bytes`, storageDepositLimit: `Option<Balance>`): `CodeUploadResult`](#uploadcodeorigin-accountid-code-bytes-storagedepositlimit-optionbalance-codeuploadresult)\n        \n*   [ConvertTransactionRuntimeApi](#converttransactionruntimeapi)\n    *   [convertTransaction(transaction: `TransactionV2`): `Extrinsic`](#converttransactiontransaction-transactionv2-extrinsic)\n        \n*   [Core](#core)\n    *   [executeBlock(block: `Block`): `Null`](#executeblockblock-block-null)\n        \n    *   [initializeBlock(header: `Header`): `Null`](#initializeblockheader-header-null)\n        \n    *   [version(): `RuntimeVersion`](#version-runtimeversion)\n        \n*   [DebugRuntimeApi](#debugruntimeapi)\n    *   [traceBlock(extrinsics: `Vec<Extrinsic>`, knownTransactions: `Vec<H256>`): `Result<(), DispatchError>`](#traceblockextrinsics-vecextrinsic-knowntransactions-vech256-result-dispatcherror)\n        \n    *   [traceTransaction(extrinsics: `Vec<Extrinsic>`, transaction: `EthTransaction`): `Result<(), DispatchError>`](#tracetransactionextrinsics-vecextrinsic-transaction-ethtransaction-result-dispatcherror)\n        \n*   [DifficultyApi](#difficultyapi)\n    *   [difficulty(): `Raw`](#difficulty-raw)\n        \n*   [EthereumRuntimeRPCApi](#ethereumruntimerpcapi)\n    *   [accountBasic(address: `H160`): `EvmAccount`](#accountbasicaddress-h160-evmaccount)\n        \n    *   [accountCodeAt(address: `H160`): `Bytes`](#accountcodeataddress-h160-bytes)\n        \n    *   [author(): `H160`](#author-h160)\n        \n    *   [call(from: `H160`, to: `H160`, data: `Vec<u8>`, value: `U256`, gasLimit: `U256`, maxFeePerGas: `Option<U256>`, maxPriorityFeePerGas: `Option<U256>`, nonce: `Option<U256>`, estimate: `bool`, accessList: `Option<Vec<(H160, Vec<H256>)>>`): `Result<EvmCallInfoV2, DispatchError>`](#callfrom-h160-to-h160-data-vecu8-value-u256-gaslimit-u256-maxfeepergas-optionu256-maxpriorityfeepergas-optionu256-nonce-optionu256-estimate-bool-accesslist-optionvech160-vech256-resultevmcallinfov2-dispatcherror)\n        \n    *   [chainId(): `u64`](#chainid-u64)\n        \n    *   [create(from: `H160`, data: `Vec<u8>`, value: `U256`, gasLimit: `U256`, maxFeePerGas: `Option<U256>`, maxPriorityFeePerGas: `Option<U256>`, nonce: `Option<U256>`, estimate: `bool`, accessList: `Option<Vec<(H160, Vec<H256>)>>`): `Result<EvmCreateInfoV2, DispatchError>`](#createfrom-h160-data-vecu8-value-u256-gaslimit-u256-maxfeepergas-optionu256-maxpriorityfeepergas-optionu256-nonce-optionu256-estimate-bool-accesslist-optionvech160-vech256-resultevmcreateinfov2-dispatcherror)\n        \n    *   [currentAll(): `(Option<BlockV2>, Option<Vec<EthReceiptV3>>, Option<Vec<EthTransactionStatus>>)`](#currentall-optionblockv2-optionvecethreceiptv3-optionvecethtransactionstatus)\n        \n    *   [currentBlock(): `BlockV2`](#currentblock-blockv2)\n        \n    *   [currentReceipts(): `Option<Vec<EthReceiptV3>>`](#currentreceipts-optionvecethreceiptv3)\n        \n    *   [currentTransactionStatuses(): `Option<Vec<EthTransactionStatus>>`](#currenttransactionstatuses-optionvecethtransactionstatus)\n        \n    *   [elasticity(): `Option<Permill>`](#elasticity-optionpermill)\n        \n    *   [extrinsicFilter(xts: `Vec<Extrinsic>`): `Vec<TransactionV2>`](#extrinsicfilterxts-vecextrinsic-vectransactionv2)\n        \n    *   [gasPrice(): `u256`](#gasprice-u256)\n        \n    *   [storageAt(address: `H160`, index: `u256`): `H256`](#storageataddress-h160-index-u256-h256)\n        \n*   [FungiblesApi](#fungiblesapi)\n    *   [queryAccountBalances(account: `AccountId`): `Result<XcmVersionedMultiAssets, FungiblesAccessError>`](#queryaccountbalancesaccount-accountid-resultxcmversionedmultiassets-fungiblesaccesserror)\n        \n*   [GrandpaApi](#grandpaapi)\n    *   [currentSetId(): `SetId`](#currentsetid-setid)\n        \n    *   [generateKeyOwnershipProof(setId: `SetId`, authorityId: `AuthorityId`): `Option<OpaqueKeyOwnershipProof>`](#generatekeyownershipproofsetid-setid-authorityid-authorityid-optionopaquekeyownershipproof)\n        \n    *   [grandpaAuthorities(): `AuthorityList`](#grandpaauthorities-authoritylist)\n        \n    *   [submitReportEquivocationUnsignedExtrinsic(equivocationProof: `GrandpaEquivocationProof`, keyOwnerProof: `OpaqueKeyOwnershipProof`): `Option<Null>`](#submitreportequivocationunsignedextrinsicequivocationproof-grandpaequivocationproof-keyownerproof-opaquekeyownershipproof-optionnull)\n        \n*   [KusamaFinalityApi](#kusamafinalityapi)\n    *   [bestFinalized(): `(BlockNumber, Hash)`](#bestfinalized-blocknumber-hash)\n        \n*   [Metadata](#metadata)\n    *   [metadata(): `OpaqueMetadata`](#metadata-opaquemetadata)\n        \n    *   [metadataAtVersion(version: `u32`): `Option<OpaqueMetadata>`](#metadataatversionversion-u32-optionopaquemetadata)\n        \n    *   [metadataVersions(): `Vec<u32>`](#metadataversions-vecu32)\n        \n*   [MmrApi](#mmrapi)\n    *   [generateProof(blockNumbers: `Vec<BlockNumber>`, bestKnownBlockNumber: `Option<BlockNumber>`): `Result<(Vec<MmrEncodableOpaqueLeaf>, MmrBatchProof), MmrError>`](#generateproofblocknumbers-vecblocknumber-bestknownblocknumber-optionblocknumber-resultvecmmrencodableopaqueleaf-mmrbatchproof-mmrerror)\n        \n    *   [root(): `Result<Hash, MmrError>`](#root-resulthash-mmrerror)\n        \n    *   [verifyProof(leaves: `Vec<MmrEncodableOpaqueLeaf>`, proof: `MmrBatchProof`): `Result<(), MmrError>`](#verifyproofleaves-vecmmrencodableopaqueleaf-proof-mmrbatchproof-result-mmrerror)\n        \n    *   [verifyProofStateless(root: `Hash`, leaves: `Vec<MmrEncodableOpaqueLeaf>`, proof: `MmrBatchProof`): `Result<(), MmrError>`](#verifyproofstatelessroot-hash-leaves-vecmmrencodableopaqueleaf-proof-mmrbatchproof-result-mmrerror)\n        \n*   [NftsApi](#nftsapi)\n    *   [attribute(collection: `NftCollectionId`, item: `NftItemId`, key: `Bytes`): `Option<Bytes>`](#attributecollection-nftcollectionid-item-nftitemid-key-bytes-optionbytes)\n        \n    *   [collectionAttribute(collection: `NftCollectionId`, key: `Bytes`): `Option<Bytes>`](#collectionattributecollection-nftcollectionid-key-bytes-optionbytes)\n        \n    *   [collectionOwner(collection: `NftCollectionId`): `Option<AccountId>`](#collectionownercollection-nftcollectionid-optionaccountid)\n        \n    *   [customAttribute(account: `AccountId`, collection: `NftCollectionId`, item: `NftItemId`, key: `Bytes`): `Option<Bytes>`](#customattributeaccount-accountid-collection-nftcollectionid-item-nftitemid-key-bytes-optionbytes)\n        \n    *   [owner(collection: `NftCollectionId`, item: `NftItemId`): `Option<AccountId>`](#ownercollection-nftcollectionid-item-nftitemid-optionaccountid)\n        \n    *   [systemAttribute(collection: `NftCollectionId`, item: `NftItemId`, key: `Bytes`): `Option<Bytes>`](#systemattributecollection-nftcollectionid-item-nftitemid-key-bytes-optionbytes)\n        \n*   [NimbusApi](#nimbusapi)\n    *   [canAuthor(author: `AccountId`, relayParent: `u32`, parentHeader: `Header`): `bool`](#canauthorauthor-accountid-relayparent-u32-parentheader-header-bool-1)\n        \n*   [NominationPoolsApi](#nominationpoolsapi)\n    *   [balanceToPoints(poolId: `NpPoolId`, newFunds: `Balance`): `Balance`](#balancetopointspoolid-nppoolid-newfunds-balance-balance)\n        \n    *   [pendingRewards(member: `AccountId`): `Balance`](#pendingrewardsmember-accountid-balance)\n        \n    *   [pointsToBalance(poolId: `NpPoolId`, points: `Balance`): `Balance`](#pointstobalancepoolid-nppoolid-points-balance-balance)\n        \n*   [OffchainWorkerApi](#offchainworkerapi)\n    *   [offchainWorker(header: `Header`): `Null`](#offchainworkerheader-header-null)\n        \n*   [OracleApi](#oracleapi)\n    *   [getAllValues(providerId: `Raw`): `Raw`](#getallvaluesproviderid-raw-raw)\n        \n    *   [getValue(providerId: `Raw`, key: `Raw`): `Option<Raw>`](#getvalueproviderid-raw-key-raw-optionraw)\n        \n*   [ParachainHost](#parachainhost)\n    *   [assumedValidationData(paraId: `ParaId`, hash: `Hash`): `Option<(PersistedValidationData, ValidationCodeHash)>`](#assumedvalidationdataparaid-paraid-hash-hash-optionpersistedvalidationdata-validationcodehash)\n        \n    *   [availabilityCores(): `Vec<CoreState>`](#availabilitycores-veccorestate)\n        \n    *   [candidateEvents(): `Vec<CandidateEvent>`](#candidateevents-veccandidateevent)\n        \n    *   [candidatePendingAvailability(paraId: `ParaId`): `Option<CommittedCandidateReceipt>`](#candidatependingavailabilityparaid-paraid-optioncommittedcandidatereceipt)\n        \n    *   [checkValidationOutputs(paraId: `ParaId`, outputs: `CandidateCommitments`): `bool`](#checkvalidationoutputsparaid-paraid-outputs-candidatecommitments-bool)\n        \n    *   [disputes(): `Vec<(SessionIndex, CandidateHash, DisputeState)>`](#disputes-vecsessionindex-candidatehash-disputestate)\n        \n    *   [dmqContents(paraId: `ParaId`): `Vec<InboundDownwardMessage>`](#dmqcontentsparaid-paraid-vecinbounddownwardmessage)\n        \n    *   [inboundHrmpChannelsContents(paraId: `ParaId`): `Vec<InboundHrmpMessage>`](#inboundhrmpchannelscontentsparaid-paraid-vecinboundhrmpmessage)\n        \n    *   [keyOwnershipProof(validatorId: `ValidatorId`): `Option<OpaqueKeyOwnershipProof>`](#keyownershipproofvalidatorid-validatorid-optionopaquekeyownershipproof)\n        \n    *   [onChainVotes(): `Option<ScrapedOnChainVotes>`](#onchainvotes-optionscrapedonchainvotes)\n        \n    *   [persistedValidationData(paraId: `ParaId`, assumption: `OccupiedCoreAssumption`): `Option<PersistedValidationData>`](#persistedvalidationdataparaid-paraid-assumption-occupiedcoreassumption-optionpersistedvalidationdata)\n        \n    *   [pvfsRequirePrecheck(): `Vec<ValidationCodeHash>`](#pvfsrequireprecheck-vecvalidationcodehash)\n        \n    *   [sessionExecutorParams(sessionIndex: `SessionIndex`): `Option<ExecutorParams>`](#sessionexecutorparamssessionindex-sessionindex-optionexecutorparams)\n        \n    *   [sessionIndexForChild(): `SessionIndex`](#sessionindexforchild-sessionindex)\n        \n    *   [sessionInfo(index: `SessionIndex`): `Option<SessionInfo>`](#sessioninfoindex-sessionindex-optionsessioninfo)\n        \n    *   [submitPvfCheckStatement(stmt: `PvfCheckStatement`, signature: `ValidatorSignature`): `Null`](#submitpvfcheckstatementstmt-pvfcheckstatement-signature-validatorsignature-null)\n        \n    *   [submitReportDisputeLost(disputeProof: `DisputeProof`, keyOwnershipProof: `OpaqueKeyOwnershipProof`): `Option<Null>`](#submitreportdisputelostdisputeproof-disputeproof-keyownershipproof-opaquekeyownershipproof-optionnull)\n        \n    *   [unappliedSlashes(): `Vec<(SessionIndex, CandidateHash, PendingSlashes)>`](#unappliedslashes-vecsessionindex-candidatehash-pendingslashes)\n        \n    *   [validationCode(paraId: `ParaId`, assumption: `OccupiedCoreAssumption`): `ValidationCode`](#validationcodeparaid-paraid-assumption-occupiedcoreassumption-validationcode)\n        \n    *   [validationCodeByHash(hash: `ValidationCodeHash`): `Option<ValidationCode>`](#validationcodebyhashhash-validationcodehash-optionvalidationcode)\n        \n    *   [validationCodeHash(paraId: `ParaId`, assumption: `OccupiedCoreAssumption`): `Option<ValidationCodeHash>`](#validationcodehashparaid-paraid-assumption-occupiedcoreassumption-optionvalidationcodehash)\n        \n    *   [validatorGroups(): `(Vec<Vec<ParaValidatorIndex>>, GroupRotationInfo)`](#validatorgroups-vecvecparavalidatorindex-grouprotationinfo)\n        \n    *   [validators(): `Vec<ValidatorId>`](#validators-vecvalidatorid)\n        \n*   [PolkadotFinalityApi](#polkadotfinalityapi)\n    *   [bestFinalized(): `(BlockNumber, Hash)`](#bestfinalized-blocknumber-hash-1)\n        \n*   [RococoFinalityApi](#rococofinalityapi)\n    *   [bestFinalized(): `(BlockNumber, Hash)`](#bestfinalized-blocknumber-hash-2)\n        \n*   [SessionKeys](#sessionkeys)\n    *   [decodeSessionKeys(encoded: `Bytes`): `Option<Vec<(Bytes, KeyTypeId)>>`](#decodesessionkeysencoded-bytes-optionvecbytes-keytypeid)\n        \n    *   [generateSessionKeys(seed: `Option<Bytes>`): `Bytes`](#generatesessionkeysseed-optionbytes-bytes)\n        \n*   [StakingApi](#stakingapi)\n    *   [nominationsQuota(balance: `Balance`): `u32`](#nominationsquotabalance-balance-u32)\n        \n*   [TaggedTransactionQueue](#taggedtransactionqueue)\n    *   [validateTransaction(source: `TransactionSource`, tx: `Extrinsic`, blockHash: `BlockHash`): `TransactionValidity`](#validatetransactionsource-transactionsource-tx-extrinsic-blockhash-blockhash-transactionvalidity)\n        \n*   [TimestampApi](#timestampapi)\n    *   [timestamp(): `Moment`](#timestamp-moment)\n        \n*   [TokensApi](#tokensapi)\n    *   [queryExistentialDeposit(currencyId: `Raw`): `u128`](#queryexistentialdepositcurrencyid-raw-u128)\n        \n*   [TransactionPaymentApi](#transactionpaymentapi)\n    *   [queryFeeDetails(uxt: `Extrinsic`, len: `u32`): `FeeDetails`](#queryfeedetailsuxt-extrinsic-len-u32-feedetails)\n        \n    *   [queryInfo(uxt: `Extrinsic`, len: `u32`): `RuntimeDispatchInfo`](#queryinfouxt-extrinsic-len-u32-runtimedispatchinfo)\n        \n    *   [queryLengthToFee(length: `u32`): `Balance`](#querylengthtofeelength-u32-balance)\n        \n    *   [queryWeightToFee(weight: `Weight`): `Balance`](#queryweighttofeeweight-weight-balance)\n        \n*   [TransactionPaymentCallApi](#transactionpaymentcallapi)\n    *   [queryCallFeeDetails(call: `Call`, len: `u32`): `FeeDetails`](#querycallfeedetailscall-call-len-u32-feedetails)\n        \n    *   [queryCallInfo(call: `Call`, len: `u32`): `RuntimeDispatchInfo`](#querycallinfocall-call-len-u32-runtimedispatchinfo)\n        \n    *   [queryLengthToFee(length: `u32`): `Balance`](#querylengthtofeelength-u32-balance-1)\n        \n    *   [queryWeightToFee(weight: `Weight`): `Balance`](#queryweighttofeeweight-weight-balance-1)\n        \n*   [WestendFinalityApi](#westendfinalityapi)\n    *   [bestFinalized(): `(BlockNumber, Hash)`](#bestfinalized-blocknumber-hash-3)"}, {"title": null, "description": null, "source_url": "https://polkadot.js.org/docs/substrate/storage", "markdown": "[Skip to main content](#__docusaurus_skipToContent_fallback)\n\n[![polkadot{.js}](https://polkadot.js.org/docs/img/logo.svg)\\\n\\\n**polkadot{.js}**](/docs/)\n\n[Apps UI (Wallet)](https://polkadot.js.org/apps/)\n[GitHub](https://github.com/polkadot-js/docs)\n\nSearch...\n\n*   [Introduction](#)\n    \n*   [API](#)\n    \n*   [Metadata](#)\n    \n    *   [Substrate](#)\n        \n        *   [Overview](/docs/substrate)\n            \n        *   [Runtime](/docs/substrate/runtime)\n            \n        *   [JSON-RPC](/docs/substrate/rpc)\n            \n        *   [Constants](/docs/substrate/constants)\n            \n        *   [Storage](/docs/substrate/storage)\n            \n        *   [Extrinsics](/docs/substrate/extrinsics)\n            \n        *   [Events](/docs/substrate/events)\n            \n        *   [Errors](/docs/substrate/errors)\n            \n    *   [Polkadot](#)\n        \n    *   [Kusama](#)\n        \n*   [Keyring](#)\n    \n*   [Crypto Utilities](#)\n    \n*   [Contracts (API)](#)\n    \n*   [Identicon (UI)](#)\n    \n*   [Keyring (UI)](#)\n    \n*   [Extension](#)\n    \n*   [Run, Bundle, Test](#)\n    \n\n*   [](/docs/)\n    \n*   Metadata\n*   Substrate\n*   Storage\n\nOn this page\n\nStorage\n=======\n\nThe following sections contain Storage methods are part of the default Substrate runtime. On the api, these are exposed via `api.query.<module>.<method>`.\n\n(NOTE: These were generated from a static/snapshot view of a recent default Substrate runtime. Some items may not be available in older nodes, or in any customized implementations.)\n\n*   **[alliance](#alliance)\n    **\n    \n*   **[allianceMotion](#alliancemotion)\n    **\n    \n*   **[assetConversion](#assetconversion)\n    **\n    \n*   **[assetRate](#assetrate)\n    **\n    \n*   **[assets](#assets)\n    **\n    \n*   **[authorityDiscovery](#authoritydiscovery)\n    **\n    \n*   **[authorship](#authorship)\n    **\n    \n*   **[babe](#babe)\n    **\n    \n*   **[balances](#balances)\n    **\n    \n*   **[bounties](#bounties)\n    **\n    \n*   **[broker](#broker)\n    **\n    \n*   **[childBounties](#childbounties)\n    **\n    \n*   **[contracts](#contracts)\n    **\n    \n*   **[convictionVoting](#convictionvoting)\n    **\n    \n*   **[coreFellowship](#corefellowship)\n    **\n    \n*   **[council](#council)\n    **\n    \n*   **[democracy](#democracy)\n    **\n    \n*   **[electionProviderMultiPhase](#electionprovidermultiphase)\n    **\n    \n*   **[elections](#elections)\n    **\n    \n*   **[fastUnstake](#fastunstake)\n    **\n    \n*   **[glutton](#glutton)\n    **\n    \n*   **[grandpa](#grandpa)\n    **\n    \n*   **[identity](#identity)\n    **\n    \n*   **[imOnline](#imonline)\n    **\n    \n*   **[indices](#indices)\n    **\n    \n*   **[lottery](#lottery)\n    **\n    \n*   **[messageQueue](#messagequeue)\n    **\n    \n*   **[mixnet](#mixnet)\n    **\n    \n*   **[mmr](#mmr)\n    **\n    \n*   **[multisig](#multisig)\n    **\n    \n*   **[nftFractionalization](#nftfractionalization)\n    **\n    \n*   **[nfts](#nfts)\n    **\n    \n*   **[nis](#nis)\n    **\n    \n*   **[nominationPools](#nominationpools)\n    **\n    \n*   **[offences](#offences)\n    **\n    \n*   **[poolAssets](#poolassets)\n    **\n    \n*   **[pov](#pov)\n    **\n    \n*   **[preimage](#preimage)\n    **\n    \n*   **[proxy](#proxy)\n    **\n    \n*   **[randomnessCollectiveFlip](#randomnesscollectiveflip)\n    **\n    \n*   **[rankedCollective](#rankedcollective)\n    **\n    \n*   **[rankedPolls](#rankedpolls)\n    **\n    \n*   **[recovery](#recovery)\n    **\n    \n*   **[referenda](#referenda)\n    **\n    \n*   **[safeMode](#safemode)\n    **\n    \n*   **[salary](#salary)\n    **\n    \n*   **[scheduler](#scheduler)\n    **\n    \n*   **[session](#session)\n    **\n    \n*   **[society](#society)\n    **\n    \n*   **[staking](#staking)\n    **\n    \n*   **[stateTrieMigration](#statetriemigration)\n    **\n    \n*   **[substrate](#substrate)\n    **\n    \n*   **[sudo](#sudo)\n    **\n    \n*   **[system](#system)\n    **\n    \n*   **[tasksExample](#tasksexample)\n    **\n    \n*   **[technicalCommittee](#technicalcommittee)\n    **\n    \n*   **[technicalMembership](#technicalmembership)\n    **\n    \n*   **[timestamp](#timestamp)\n    **\n    \n*   **[tips](#tips)\n    **\n    \n*   **[transactionPayment](#transactionpayment)\n    **\n    \n*   **[transactionStorage](#transactionstorage)\n    **\n    \n*   **[treasury](#treasury)\n    **\n    \n*   **[txPause](#txpause)\n    **\n    \n*   **[uniques](#uniques)\n    **\n    \n*   **[vesting](#vesting)\n    **\n    \n*   **[voterList](#voterlist)\n    **\n    \n*   **[whitelist](#whitelist)\n    **\n    \n\n* * *\n\nalliance[\u200b](#alliance \"Direct link to alliance\")\n\n-------------------------------------------------\n\n### announcements(): `Vec<PalletAllianceCid>`[\u200b](#announcements-vecpalletalliancecid \"Direct link to announcements-vecpalletalliancecid\")\n\n*   **interface**: `api.query.alliance.announcements`\n*   **summary**: The current IPFS CIDs of any announcements.\n\n### depositOf(`AccountId32`): `Option<u128>`[\u200b](#depositofaccountid32-optionu128 \"Direct link to depositofaccountid32-optionu128\")\n\n*   **interface**: `api.query.alliance.depositOf`\n*   **summary**: Maps members to their candidacy deposit.\n\n### members(`PalletAllianceMemberRole`): `Vec<AccountId32>`[\u200b](#memberspalletalliancememberrole-vecaccountid32 \"Direct link to memberspalletalliancememberrole-vecaccountid32\")\n\n*   **interface**: `api.query.alliance.members`\n*   **summary**: Maps member type to members of each type.\n\n### retiringMembers(`AccountId32`): `Option<u32>`[\u200b](#retiringmembersaccountid32-optionu32 \"Direct link to retiringmembersaccountid32-optionu32\")\n\n*   **interface**: `api.query.alliance.retiringMembers`\n*   **summary**: A set of members who gave a retirement notice. They can retire after the end of retirement period stored as a future block number.\n\n### rule(): `Option<PalletAllianceCid>`[\u200b](#rule-optionpalletalliancecid \"Direct link to rule-optionpalletalliancecid\")\n\n*   **interface**: `api.query.alliance.rule`\n*   **summary**: The IPFS CID of the alliance rule. Fellows can propose a new rule with a super-majority.\n\n### unscrupulousAccounts(): `Vec<AccountId32>`[\u200b](#unscrupulousaccounts-vecaccountid32 \"Direct link to unscrupulousaccounts-vecaccountid32\")\n\n*   **interface**: `api.query.alliance.unscrupulousAccounts`\n*   **summary**: The current list of accounts deemed unscrupulous. These accounts non grata cannot submit candidacy.\n\n### unscrupulousWebsites(): `Vec<Bytes>`[\u200b](#unscrupulouswebsites-vecbytes \"Direct link to unscrupulouswebsites-vecbytes\")\n\n*   **interface**: `api.query.alliance.unscrupulousWebsites`\n*   **summary**: The current list of websites deemed unscrupulous.\n\n* * *\n\nallianceMotion[\u200b](#alliancemotion \"Direct link to allianceMotion\")\n\n-------------------------------------------------------------------\n\n### members(): `Vec<AccountId32>`[\u200b](#members-vecaccountid32 \"Direct link to members-vecaccountid32\")\n\n*   **interface**: `api.query.allianceMotion.members`\n*   **summary**: The current members of the collective. This is stored sorted (just by value).\n\n### prime(): `Option<AccountId32>`[\u200b](#prime-optionaccountid32 \"Direct link to prime-optionaccountid32\")\n\n*   **interface**: `api.query.allianceMotion.prime`\n*   **summary**: The prime member that helps determine the default vote behavior in case of absentations.\n\n### proposalCount(): `u32`[\u200b](#proposalcount-u32 \"Direct link to proposalcount-u32\")\n\n*   **interface**: `api.query.allianceMotion.proposalCount`\n*   **summary**: Proposals so far.\n\n### proposalOf(`H256`): `Option<Call>`[\u200b](#proposalofh256-optioncall \"Direct link to proposalofh256-optioncall\")\n\n*   **interface**: `api.query.allianceMotion.proposalOf`\n*   **summary**: Actual proposal for a given hash, if it's current.\n\n### proposals(): `Vec<H256>`[\u200b](#proposals-vech256 \"Direct link to proposals-vech256\")\n\n*   **interface**: `api.query.allianceMotion.proposals`\n*   **summary**: The hashes of the active proposals.\n\n### voting(`H256`): `Option<PalletCollectiveVotes>`[\u200b](#votingh256-optionpalletcollectivevotes \"Direct link to votingh256-optionpalletcollectivevotes\")\n\n*   **interface**: `api.query.allianceMotion.voting`\n*   **summary**: Votes on a given proposal, if it is ongoing.\n\n* * *\n\nassetConversion[\u200b](#assetconversion \"Direct link to assetConversion\")\n\n----------------------------------------------------------------------\n\n### nextPoolAssetId(): `Option<u32>`[\u200b](#nextpoolassetid-optionu32 \"Direct link to nextpoolassetid-optionu32\")\n\n*   **interface**: `api.query.assetConversion.nextPoolAssetId`\n*   **summary**: Stores the `PoolAssetId` that is going to be used for the next lp token. This gets incremented whenever a new lp pool is created.\n\n### pools(`(PalletAssetConversionNativeOrAssetId,PalletAssetConversionNativeOrAssetId)`): `Option<PalletAssetConversionPoolInfo>`[\u200b](#poolspalletassetconversionnativeorassetidpalletassetconversionnativeorassetid-optionpalletassetconversionpoolinfo \"Direct link to poolspalletassetconversionnativeorassetidpalletassetconversionnativeorassetid-optionpalletassetconversionpoolinfo\")\n\n*   **interface**: `api.query.assetConversion.pools`\n*   **summary**: Map from `PoolAssetId` to `PoolInfo`. This establishes whether a pool has been officially created rather than people sending tokens directly to a pool's public account.\n\n* * *\n\nassetRate[\u200b](#assetrate \"Direct link to assetRate\")\n\n----------------------------------------------------\n\n### conversionRateToNative(`u32`): `Option<u128>`[\u200b](#conversionratetonativeu32-optionu128 \"Direct link to conversionratetonativeu32-optionu128\")\n\n*   **interface**: `api.query.assetRate.conversionRateToNative`\n    \n*   **summary**: Maps an asset to its fixed point representation in the native balance.\n    \n    E.g. `native_amount = asset_amount * ConversionRateToNative::<T>::get(asset_kind)`\n    \n\n* * *\n\nassets[\u200b](#assets \"Direct link to assets\")\n\n-------------------------------------------\n\n### account(`u32, AccountId32`): `Option<PalletAssetsAssetAccount>`[\u200b](#accountu32-accountid32-optionpalletassetsassetaccount \"Direct link to accountu32-accountid32-optionpalletassetsassetaccount\")\n\n*   **interface**: `api.query.assets.account`\n*   **summary**: The holdings of a specific account for a specific asset.\n\n### approvals(`u32, AccountId32, AccountId32`): `Option<PalletAssetsApproval>`[\u200b](#approvalsu32-accountid32-accountid32-optionpalletassetsapproval \"Direct link to approvalsu32-accountid32-accountid32-optionpalletassetsapproval\")\n\n*   **interface**: `api.query.assets.approvals`\n*   **summary**: Approved balance transfers. First balance is the amount approved for transfer. Second is the amount of `T::Currency` reserved for storing this. First key is the asset ID, second key is the owner and third key is the delegate.\n\n### asset(`u32`): `Option<PalletAssetsAssetDetails>`[\u200b](#assetu32-optionpalletassetsassetdetails \"Direct link to assetu32-optionpalletassetsassetdetails\")\n\n*   **interface**: `api.query.assets.asset`\n*   **summary**: Details of an asset.\n\n### metadata(`u32`): `PalletAssetsAssetMetadata`[\u200b](#metadatau32-palletassetsassetmetadata \"Direct link to metadatau32-palletassetsassetmetadata\")\n\n*   **interface**: `api.query.assets.metadata`\n*   **summary**: Metadata of an asset.\n\n* * *\n\nauthorityDiscovery[\u200b](#authoritydiscovery \"Direct link to authorityDiscovery\")\n\n-------------------------------------------------------------------------------\n\n### keys(): `Vec<SpAuthorityDiscoveryAppPublic>`[\u200b](#keys-vecspauthoritydiscoveryapppublic \"Direct link to keys-vecspauthoritydiscoveryapppublic\")\n\n*   **interface**: `api.query.authorityDiscovery.keys`\n*   **summary**: Keys of the current authority set.\n\n### nextKeys(): `Vec<SpAuthorityDiscoveryAppPublic>`[\u200b](#nextkeys-vecspauthoritydiscoveryapppublic \"Direct link to nextkeys-vecspauthoritydiscoveryapppublic\")\n\n*   **interface**: `api.query.authorityDiscovery.nextKeys`\n*   **summary**: Keys of the next authority set.\n\n* * *\n\nauthorship[\u200b](#authorship \"Direct link to authorship\")\n\n-------------------------------------------------------\n\n### author(): `Option<AccountId32>`[\u200b](#author-optionaccountid32 \"Direct link to author-optionaccountid32\")\n\n*   **interface**: `api.query.authorship.author`\n*   **summary**: Author of current block.\n\n* * *\n\nbabe[\u200b](#babe \"Direct link to babe\")\n\n-------------------------------------\n\n### authorities(): `Vec<(SpConsensusBabeAppPublic,u64)>`[\u200b](#authorities-vecspconsensusbabeapppublicu64 \"Direct link to authorities-vecspconsensusbabeapppublicu64\")\n\n*   **interface**: `api.query.babe.authorities`\n*   **summary**: Current epoch authorities.\n\n### authorVrfRandomness(): `Option<[u8;32]>`[\u200b](#authorvrfrandomness-optionu832 \"Direct link to authorvrfrandomness-optionu832\")\n\n*   **interface**: `api.query.babe.authorVrfRandomness`\n    \n*   **summary**: This field should always be populated during block processing unless secondary plain slots are enabled (which don't contain a VRF output).\n    \n    It is set in `on_finalize`, before it will contain the value from the last block.\n    \n\n### currentSlot(): `u64`[\u200b](#currentslot-u64 \"Direct link to currentslot-u64\")\n\n*   **interface**: `api.query.babe.currentSlot`\n*   **summary**: Current slot number.\n\n### epochConfig(): `Option<SpConsensusBabeBabeEpochConfiguration>`[\u200b](#epochconfig-optionspconsensusbabebabeepochconfiguration \"Direct link to epochconfig-optionspconsensusbabebabeepochconfiguration\")\n\n*   **interface**: `api.query.babe.epochConfig`\n*   **summary**: The configuration for the current epoch. Should never be `None` as it is initialized in genesis.\n\n### epochIndex(): `u64`[\u200b](#epochindex-u64 \"Direct link to epochindex-u64\")\n\n*   **interface**: `api.query.babe.epochIndex`\n*   **summary**: Current epoch index.\n\n### epochStart(): `(u32,u32)`[\u200b](#epochstart-u32u32 \"Direct link to epochstart-u32u32\")\n\n*   **interface**: `api.query.babe.epochStart`\n*   **summary**: The block numbers when the last and current epoch have started, respectively `N-1` and `N`. NOTE: We track this is in order to annotate the block number when a given pool of entropy was fixed (i.e. it was known to chain observers). Since epochs are defined in slots, which may be skipped, the block numbers may not line up with the slot numbers.\n\n### genesisSlot(): `u64`[\u200b](#genesisslot-u64 \"Direct link to genesisslot-u64\")\n\n*   **interface**: `api.query.babe.genesisSlot`\n*   **summary**: The slot at which the first epoch actually started. This is 0 until the first block of the chain.\n\n### initialized(): `Option<Option<SpConsensusBabeDigestsPreDigest>>`[\u200b](#initialized-optionoptionspconsensusbabedigestspredigest \"Direct link to initialized-optionoptionspconsensusbabedigestspredigest\")\n\n*   **interface**: `api.query.babe.initialized`\n*   **summary**: Temporary value (cleared at block finalization) which is `Some` if per-block initialization has already been called for current block.\n\n### lateness(): `u32`[\u200b](#lateness-u32 \"Direct link to lateness-u32\")\n\n*   **interface**: `api.query.babe.lateness`\n    \n*   **summary**: How late the current block is compared to its parent.\n    \n    This entry is populated as part of block execution and is cleaned up on block finalization. Querying this storage entry outside of block execution context should always yield zero.\n    \n\n### nextAuthorities(): `Vec<(SpConsensusBabeAppPublic,u64)>`[\u200b](#nextauthorities-vecspconsensusbabeapppublicu64 \"Direct link to nextauthorities-vecspconsensusbabeapppublicu64\")\n\n*   **interface**: `api.query.babe.nextAuthorities`\n*   **summary**: Next epoch authorities.\n\n### nextEpochConfig(): `Option<SpConsensusBabeBabeEpochConfiguration>`[\u200b](#nextepochconfig-optionspconsensusbabebabeepochconfiguration \"Direct link to nextepochconfig-optionspconsensusbabebabeepochconfiguration\")\n\n*   **interface**: `api.query.babe.nextEpochConfig`\n*   **summary**: The configuration for the next epoch, `None` if the config will not change (you can fallback to `EpochConfig` instead in that case).\n\n### nextRandomness(): `[u8;32]`[\u200b](#nextrandomness-u832 \"Direct link to nextrandomness-u832\")\n\n*   **interface**: `api.query.babe.nextRandomness`\n*   **summary**: Next epoch randomness.\n\n### pendingEpochConfigChange(): `Option<SpConsensusBabeDigestsNextConfigDescriptor>`[\u200b](#pendingepochconfigchange-optionspconsensusbabedigestsnextconfigdescriptor \"Direct link to pendingepochconfigchange-optionspconsensusbabedigestsnextconfigdescriptor\")\n\n*   **interface**: `api.query.babe.pendingEpochConfigChange`\n*   **summary**: Pending epoch configuration change that will be applied when the next epoch is enacted.\n\n### randomness(): `[u8;32]`[\u200b](#randomness-u832 \"Direct link to randomness-u832\")\n\n*   **interface**: `api.query.babe.randomness`\n    \n*   **summary**: The epoch randomness for the _current_ epoch.\n    \n    #### Security[\u200b](#security \"Direct link to Security\")\n    \n    This MUST NOT be used for gambling, as it can be influenced by a malicious validator in the short term. It MAY be used in many cryptographic protocols, however, so long as one remembers that this (like everything else on-chain) it is public. For example, it can be used where a number is needed that cannot have been chosen by an adversary, for purposes such as public-coin zero-knowledge proofs.\n    \n\n### segmentIndex(): `u32`[\u200b](#segmentindex-u32 \"Direct link to segmentindex-u32\")\n\n*   **interface**: `api.query.babe.segmentIndex`\n    \n*   **summary**: Randomness under construction.\n    \n    We make a trade-off between storage accesses and list length. We store the under-construction randomness in segments of up to `UNDER_CONSTRUCTION_SEGMENT_LENGTH`.\n    \n    Once a segment reaches this length, we begin the next one. We reset all segments and return to `0` at the beginning of every epoch.\n    \n\n### skippedEpochs(): `Vec<(u64,u32)>`[\u200b](#skippedepochs-vecu64u32 \"Direct link to skippedepochs-vecu64u32\")\n\n*   **interface**: `api.query.babe.skippedEpochs`\n    \n*   **summary**: A list of the last 100 skipped epochs and the corresponding session index when the epoch was skipped.\n    \n    This is only used for validating equivocation proofs. An equivocation proof must contains a key-ownership proof for a given session, therefore we need a way to tie together sessions and epoch indices, i.e. we need to validate that a validator was the owner of a given key on a given session, and what the active epoch index was during that session.\n    \n\n### underConstruction(`u32`): `Vec<[u8;32]>`[\u200b](#underconstructionu32-vecu832 \"Direct link to underconstructionu32-vecu832\")\n\n*   **interface**: `api.query.babe.underConstruction`\n*   **summary**: TWOX-NOTE: `SegmentIndex` is an increasing integer, so this is okay.\n\n* * *\n\nbalances[\u200b](#balances \"Direct link to balances\")\n\n-------------------------------------------------\n\n### account(`AccountId32`): `PalletBalancesAccountData`[\u200b](#accountaccountid32-palletbalancesaccountdata \"Direct link to accountaccountid32-palletbalancesaccountdata\")\n\n*   **interface**: `api.query.balances.account`\n    \n*   **summary**: The Balances pallet example of storing the balance of an account.\n    \n    #### Example[\u200b](#example \"Direct link to Example\")\n    \n    `nocompile impl pallet_balances::Config for Runtime { type AccountStore = StorageMapShim<Self::Account<Runtime>, frame_system::Provider<Runtime>, AccountId, Self::AccountData<Balance>> }`\n    \n    You can also store the balance of an account in the `System` pallet.\n    \n    #### Example[\u200b](#example-1 \"Direct link to Example\")\n    \n    `nocompile impl pallet_balances::Config for Runtime { type AccountStore = System }`\n    \n    But this comes with tradeoffs, storing account balances in the system pallet stores `frame_system` data alongside the account data contrary to storing account balances in the `Balances` pallet, which uses a `StorageMap` to store balances data only. NOTE: This is only used in the case that this pallet is used to store balances.\n    \n\n### freezes(`AccountId32`): `Vec<PalletBalancesIdAmountRuntimeFreezeReason>`[\u200b](#freezesaccountid32-vecpalletbalancesidamountruntimefreezereason \"Direct link to freezesaccountid32-vecpalletbalancesidamountruntimefreezereason\")\n\n*   **interface**: `api.query.balances.freezes`\n*   **summary**: Freeze locks on account balances.\n\n### holds(`AccountId32`): `Vec<PalletBalancesIdAmountRuntimeHoldReason>`[\u200b](#holdsaccountid32-vecpalletbalancesidamountruntimeholdreason \"Direct link to holdsaccountid32-vecpalletbalancesidamountruntimeholdreason\")\n\n*   **interface**: `api.query.balances.holds`\n*   **summary**: Holds on account balances.\n\n### inactiveIssuance(): `u128`[\u200b](#inactiveissuance-u128 \"Direct link to inactiveissuance-u128\")\n\n*   **interface**: `api.query.balances.inactiveIssuance`\n*   **summary**: The total units of outstanding deactivated balance in the system.\n\n### locks(`AccountId32`): `Vec<PalletBalancesBalanceLock>`[\u200b](#locksaccountid32-vecpalletbalancesbalancelock \"Direct link to locksaccountid32-vecpalletbalancesbalancelock\")\n\n*   **interface**: `api.query.balances.locks`\n*   **summary**: Any liquidity locks on some account balances. NOTE: Should only be accessed when setting, changing and freeing a lock.\n\n### reserves(`AccountId32`): `Vec<PalletBalancesReserveData>`[\u200b](#reservesaccountid32-vecpalletbalancesreservedata \"Direct link to reservesaccountid32-vecpalletbalancesreservedata\")\n\n*   **interface**: `api.query.balances.reserves`\n*   **summary**: Named reserves on some account balances.\n\n### totalIssuance(): `u128`[\u200b](#totalissuance-u128 \"Direct link to totalissuance-u128\")\n\n*   **interface**: `api.query.balances.totalIssuance`\n*   **summary**: The total units issued in the system.\n\n* * *\n\nbounties[\u200b](#bounties \"Direct link to bounties\")\n\n-------------------------------------------------\n\n### bounties(`u32`): `Option<PalletBountiesBounty>`[\u200b](#bountiesu32-optionpalletbountiesbounty \"Direct link to bountiesu32-optionpalletbountiesbounty\")\n\n*   **interface**: `api.query.bounties.bounties`\n*   **summary**: Bounties that have been made.\n\n### bountyApprovals(): `Vec<u32>`[\u200b](#bountyapprovals-vecu32 \"Direct link to bountyapprovals-vecu32\")\n\n*   **interface**: `api.query.bounties.bountyApprovals`\n*   **summary**: Bounty indices that have been approved but not yet funded.\n\n### bountyCount(): `u32`[\u200b](#bountycount-u32 \"Direct link to bountycount-u32\")\n\n*   **interface**: `api.query.bounties.bountyCount`\n*   **summary**: Number of bounty proposals that have been made.\n\n### bountyDescriptions(`u32`): `Option<Bytes>`[\u200b](#bountydescriptionsu32-optionbytes \"Direct link to bountydescriptionsu32-optionbytes\")\n\n*   **interface**: `api.query.bounties.bountyDescriptions`\n*   **summary**: The description of each bounty.\n\n* * *\n\nbroker[\u200b](#broker \"Direct link to broker\")\n\n-------------------------------------------\n\n### allowedRenewals(`PalletBrokerAllowedRenewalId`): `Option<PalletBrokerAllowedRenewalRecord>`[\u200b](#allowedrenewalspalletbrokerallowedrenewalid-optionpalletbrokerallowedrenewalrecord \"Direct link to allowedrenewalspalletbrokerallowedrenewalid-optionpalletbrokerallowedrenewalrecord\")\n\n*   **interface**: `api.query.broker.allowedRenewals`\n*   **summary**: Records of allowed renewals.\n\n### configuration(): `Option<PalletBrokerConfigRecord>`[\u200b](#configuration-optionpalletbrokerconfigrecord \"Direct link to configuration-optionpalletbrokerconfigrecord\")\n\n*   **interface**: `api.query.broker.configuration`\n*   **summary**: The current configuration of this pallet.\n\n### instaPoolContribution(`PalletBrokerRegionId`): `Option<PalletBrokerContributionRecord>`[\u200b](#instapoolcontributionpalletbrokerregionid-optionpalletbrokercontributionrecord \"Direct link to instapoolcontributionpalletbrokerregionid-optionpalletbrokercontributionrecord\")\n\n*   **interface**: `api.query.broker.instaPoolContribution`\n*   **summary**: Record of a single contribution to the Instantaneous Coretime Pool.\n\n### instaPoolHistory(`u32`): `Option<PalletBrokerInstaPoolHistoryRecord>`[\u200b](#instapoolhistoryu32-optionpalletbrokerinstapoolhistoryrecord \"Direct link to instapoolhistoryu32-optionpalletbrokerinstapoolhistoryrecord\")\n\n*   **interface**: `api.query.broker.instaPoolHistory`\n*   **summary**: Total InstaPool rewards for each Timeslice and the number of core parts which contributed.\n\n### instaPoolIo(`u32`): `PalletBrokerPoolIoRecord`[\u200b](#instapooliou32-palletbrokerpooliorecord \"Direct link to instapooliou32-palletbrokerpooliorecord\")\n\n*   **interface**: `api.query.broker.instaPoolIo`\n*   **summary**: Record of Coretime entering or leaving the Instantaneous Coretime Pool.\n\n### leases(): `Vec<PalletBrokerLeaseRecordItem>`[\u200b](#leases-vecpalletbrokerleaserecorditem \"Direct link to leases-vecpalletbrokerleaserecorditem\")\n\n*   **interface**: `api.query.broker.leases`\n*   **summary**: The Polkadot Core legacy leases.\n\n### regions(`PalletBrokerRegionId`): `Option<PalletBrokerRegionRecord>`[\u200b](#regionspalletbrokerregionid-optionpalletbrokerregionrecord \"Direct link to regionspalletbrokerregionid-optionpalletbrokerregionrecord\")\n\n*   **interface**: `api.query.broker.regions`\n*   **summary**: The current (unassigned) Regions.\n\n### reservations(): `Vec<Vec<PalletBrokerScheduleItem>>`[\u200b](#reservations-vecvecpalletbrokerscheduleitem \"Direct link to reservations-vecvecpalletbrokerscheduleitem\")\n\n*   **interface**: `api.query.broker.reservations`\n*   **summary**: The Polkadot Core reservations (generally tasked with the maintenance of System Chains).\n\n### saleInfo(): `Option<PalletBrokerSaleInfoRecord>`[\u200b](#saleinfo-optionpalletbrokersaleinforecord \"Direct link to saleinfo-optionpalletbrokersaleinforecord\")\n\n*   **interface**: `api.query.broker.saleInfo`\n*   **summary**: The details of the current sale, including its properties and status.\n\n### status(): `Option<PalletBrokerStatusRecord>`[\u200b](#status-optionpalletbrokerstatusrecord \"Direct link to status-optionpalletbrokerstatusrecord\")\n\n*   **interface**: `api.query.broker.status`\n*   **summary**: The current status of miscellaneous subsystems of this pallet.\n\n### workload(`u16`): `Vec<PalletBrokerScheduleItem>`[\u200b](#workloadu16-vecpalletbrokerscheduleitem \"Direct link to workloadu16-vecpalletbrokerscheduleitem\")\n\n*   **interface**: `api.query.broker.workload`\n*   **summary**: The current workload of each core. This gets updated with workplan as timeslices pass.\n\n### workplan(`(u32,u16)`): `Option<Vec<PalletBrokerScheduleItem>>`[\u200b](#workplanu32u16-optionvecpalletbrokerscheduleitem \"Direct link to workplanu32u16-optionvecpalletbrokerscheduleitem\")\n\n*   **interface**: `api.query.broker.workplan`\n*   **summary**: The work we plan on having each core do at a particular time in the future.\n\n* * *\n\nchildBounties[\u200b](#childbounties \"Direct link to childBounties\")\n\n----------------------------------------------------------------\n\n### childBounties(`u32, u32`): `Option<PalletChildBountiesChildBounty>`[\u200b](#childbountiesu32-u32-optionpalletchildbountieschildbounty \"Direct link to childbountiesu32-u32-optionpalletchildbountieschildbounty\")\n\n*   **interface**: `api.query.childBounties.childBounties`\n*   **summary**: Child bounties that have been added.\n\n### childBountyCount(): `u32`[\u200b](#childbountycount-u32 \"Direct link to childbountycount-u32\")\n\n*   **interface**: `api.query.childBounties.childBountyCount`\n*   **summary**: Number of total child bounties.\n\n### childBountyDescriptions(`u32`): `Option<Bytes>`[\u200b](#childbountydescriptionsu32-optionbytes \"Direct link to childbountydescriptionsu32-optionbytes\")\n\n*   **interface**: `api.query.childBounties.childBountyDescriptions`\n*   **summary**: The description of each child-bounty.\n\n### childrenCuratorFees(`u32`): `u128`[\u200b](#childrencuratorfeesu32-u128 \"Direct link to childrencuratorfeesu32-u128\")\n\n*   **interface**: `api.query.childBounties.childrenCuratorFees`\n*   **summary**: The cumulative child-bounty curator fee for each parent bounty.\n\n### parentChildBounties(`u32`): `u32`[\u200b](#parentchildbountiesu32-u32 \"Direct link to parentchildbountiesu32-u32\")\n\n*   **interface**: `api.query.childBounties.parentChildBounties`\n*   **summary**: Number of child bounties per parent bounty. Map of parent bounty index to number of child bounties.\n\n* * *\n\ncontracts[\u200b](#contracts \"Direct link to contracts\")\n\n----------------------------------------------------\n\n### codeInfoOf(`H256`): `Option<PalletContractsWasmCodeInfo>`[\u200b](#codeinfoofh256-optionpalletcontractswasmcodeinfo \"Direct link to codeinfoofh256-optionpalletcontractswasmcodeinfo\")\n\n*   **interface**: `api.query.contracts.codeInfoOf`\n*   **summary**: A mapping from a contract's code hash to its code info.\n\n### contractInfoOf(`AccountId32`): `Option<PalletContractsStorageContractInfo>`[\u200b](#contractinfoofaccountid32-optionpalletcontractsstoragecontractinfo \"Direct link to contractinfoofaccountid32-optionpalletcontractsstoragecontractinfo\")\n\n*   **interface**: `api.query.contracts.contractInfoOf`\n    \n*   **summary**: The code associated with a given account.\n    \n    TWOX-NOTE: SAFE since `AccountId` is a secure hash.\n    \n\n### deletionQueue(`u32`): `Option<Bytes>`[\u200b](#deletionqueueu32-optionbytes \"Direct link to deletionqueueu32-optionbytes\")\n\n*   **interface**: `api.query.contracts.deletionQueue`\n    \n*   **summary**: Evicted contracts that await child trie deletion.\n    \n    Child trie deletion is a heavy operation depending on the amount of storage items stored in said trie. Therefore this operation is performed lazily in `on_idle`.\n    \n\n### deletionQueueCounter(): `PalletContractsStorageDeletionQueueManager`[\u200b](#deletionqueuecounter-palletcontractsstoragedeletionqueuemanager \"Direct link to deletionqueuecounter-palletcontractsstoragedeletionqueuemanager\")\n\n*   **interface**: `api.query.contracts.deletionQueueCounter`\n*   **summary**: A pair of monotonic counters used to track the latest contract marked for deletion and the latest deleted contract in queue.\n\n### migrationInProgress(): `Option<Bytes>`[\u200b](#migrationinprogress-optionbytes \"Direct link to migrationinprogress-optionbytes\")\n\n*   **interface**: `api.query.contracts.migrationInProgress`\n*   **summary**: A migration can span across multiple blocks. This storage defines a cursor to track the progress of the migration, enabling us to resume from the last completed position.\n\n### nonce(): `u64`[\u200b](#nonce-u64 \"Direct link to nonce-u64\")\n\n*   **interface**: `api.query.contracts.nonce`\n    \n*   **summary**: This is a **monotonic** counter incremented on contract instantiation.\n    \n    This is used in order to generate unique trie ids for contracts. The trie id of a new contract is calculated from hash(account\\_id, nonce). The nonce is required because otherwise the following sequence would lead to a possible collision of storage:\n    \n    1.  Create a new contract. 2. Terminate the contract. 3. Immediately recreate the contract with the same account\\_id.\n        \n        This is bad because the contents of a trie are deleted lazily and there might be storage of the old instantiation still in it when the new contract is created. Please note that we can't replace the counter by the block number because the sequence above can happen in the same block. We also can't keep the account counter in memory only because storage is the only way to communicate across different extrinsics in the same block.\n        \n        #### Note[\u200b](#note \"Direct link to Note\")\n        \n        Do not use it to determine the number of contracts. It won't be decremented if a contract is destroyed.\n        \n\n### pristineCode(`H256`): `Option<Bytes>`[\u200b](#pristinecodeh256-optionbytes \"Direct link to pristinecodeh256-optionbytes\")\n\n*   **interface**: `api.query.contracts.pristineCode`\n*   **summary**: A mapping from a contract's code hash to its code.\n\n* * *\n\nconvictionVoting[\u200b](#convictionvoting \"Direct link to convictionVoting\")\n\n-------------------------------------------------------------------------\n\n### classLocksFor(`AccountId32`): `Vec<(u16,u128)>`[\u200b](#classlocksforaccountid32-vecu16u128 \"Direct link to classlocksforaccountid32-vecu16u128\")\n\n*   **interface**: `api.query.convictionVoting.classLocksFor`\n*   **summary**: The voting classes which have a non-zero lock requirement and the lock amounts which they require. The actual amount locked on behalf of this pallet should always be the maximum of this list.\n\n### votingFor(`AccountId32, u16`): `PalletConvictionVotingVoteVoting`[\u200b](#votingforaccountid32-u16-palletconvictionvotingvotevoting \"Direct link to votingforaccountid32-u16-palletconvictionvotingvotevoting\")\n\n*   **interface**: `api.query.convictionVoting.votingFor`\n*   **summary**: All voting for a particular voter in a particular voting class. We store the balance for the number of votes that we have recorded.\n\n* * *\n\ncoreFellowship[\u200b](#corefellowship \"Direct link to coreFellowship\")\n\n-------------------------------------------------------------------\n\n### member(`AccountId32`): `Option<PalletCoreFellowshipMemberStatus>`[\u200b](#memberaccountid32-optionpalletcorefellowshipmemberstatus \"Direct link to memberaccountid32-optionpalletcorefellowshipmemberstatus\")\n\n*   **interface**: `api.query.coreFellowship.member`\n*   **summary**: The status of a claimant.\n\n### memberEvidence(`AccountId32`): `Option<(PalletCoreFellowshipWish,Bytes)>`[\u200b](#memberevidenceaccountid32-optionpalletcorefellowshipwishbytes \"Direct link to memberevidenceaccountid32-optionpalletcorefellowshipwishbytes\")\n\n*   **interface**: `api.query.coreFellowship.memberEvidence`\n*   **summary**: Some evidence together with the desired outcome for which it was presented.\n\n### params(): `PalletCoreFellowshipParamsType`[\u200b](#params-palletcorefellowshipparamstype \"Direct link to params-palletcorefellowshipparamstype\")\n\n*   **interface**: `api.query.coreFellowship.params`\n*   **summary**: The overall status of the system.\n\n* * *\n\ncouncil[\u200b](#council \"Direct link to council\")\n\n----------------------------------------------\n\n### members(): `Vec<AccountId32>`[\u200b](#members-vecaccountid32-1 \"Direct link to members-vecaccountid32-1\")\n\n*   **interface**: `api.query.council.members`\n*   **summary**: The current members of the collective. This is stored sorted (just by value).\n\n### prime(): `Option<AccountId32>`[\u200b](#prime-optionaccountid32-1 \"Direct link to prime-optionaccountid32-1\")\n\n*   **interface**: `api.query.council.prime`\n*   **summary**: The prime member that helps determine the default vote behavior in case of absentations.\n\n### proposalCount(): `u32`[\u200b](#proposalcount-u32-1 \"Direct link to proposalcount-u32-1\")\n\n*   **interface**: `api.query.council.proposalCount`\n*   **summary**: Proposals so far.\n\n### proposalOf(`H256`): `Option<Call>`[\u200b](#proposalofh256-optioncall-1 \"Direct link to proposalofh256-optioncall-1\")\n\n*   **interface**: `api.query.council.proposalOf`\n*   **summary**: Actual proposal for a given hash, if it's current.\n\n### proposals(): `Vec<H256>`[\u200b](#proposals-vech256-1 \"Direct link to proposals-vech256-1\")\n\n*   **interface**: `api.query.council.proposals`\n*   **summary**: The hashes of the active proposals.\n\n### voting(`H256`): `Option<PalletCollectiveVotes>`[\u200b](#votingh256-optionpalletcollectivevotes-1 \"Direct link to votingh256-optionpalletcollectivevotes-1\")\n\n*   **interface**: `api.query.council.voting`\n*   **summary**: Votes on a given proposal, if it is ongoing.\n\n* * *\n\ndemocracy[\u200b](#democracy \"Direct link to democracy\")\n\n----------------------------------------------------\n\n### blacklist(`H256`): `Option<(u32,Vec<AccountId32>)>`[\u200b](#blacklisth256-optionu32vecaccountid32 \"Direct link to blacklisth256-optionu32vecaccountid32\")\n\n*   **interface**: `api.query.democracy.blacklist`\n*   **summary**: A record of who vetoed what. Maps proposal hash to a possible existent block number (until when it may not be resubmitted) and who vetoed it.\n\n### cancellations(`H256`): `bool`[\u200b](#cancellationsh256-bool \"Direct link to cancellationsh256-bool\")\n\n*   **interface**: `api.query.democracy.cancellations`\n*   **summary**: Record of all proposals that have been subject to emergency cancellation.\n\n### depositOf(`u32`): `Option<(Vec<AccountId32>,u128)>`[\u200b](#depositofu32-optionvecaccountid32u128 \"Direct link to depositofu32-optionvecaccountid32u128\")\n\n*   **interface**: `api.query.democracy.depositOf`\n    \n*   **summary**: Those who have locked a deposit.\n    \n    TWOX-NOTE: Safe, as increasing integer keys are safe.\n    \n\n### lastTabledWasExternal(): `bool`[\u200b](#lasttabledwasexternal-bool \"Direct link to lasttabledwasexternal-bool\")\n\n*   **interface**: `api.query.democracy.lastTabledWasExternal`\n*   **summary**: True if the last referendum tabled was submitted externally. False if it was a public proposal.\n\n### lowestUnbaked(): `u32`[\u200b](#lowestunbaked-u32 \"Direct link to lowestunbaked-u32\")\n\n*   **interface**: `api.query.democracy.lowestUnbaked`\n*   **summary**: The lowest referendum index representing an unbaked referendum. Equal to `ReferendumCount` if there isn't a unbaked referendum.\n\n### metadataOf(`PalletDemocracyMetadataOwner`): `Option<H256>`[\u200b](#metadataofpalletdemocracymetadataowner-optionh256 \"Direct link to metadataofpalletdemocracymetadataowner-optionh256\")\n\n*   **interface**: `api.query.democracy.metadataOf`\n    \n*   **summary**: General information concerning any proposal or referendum. The `Hash` refers to the preimage of the `Preimages` provider which can be a JSON dump or IPFS hash of a JSON file.\n    \n    Consider a garbage collection for a metadata of finished referendums to `unrequest` (remove) large preimages.\n    \n\n### nextExternal(): `Option<(FrameSupportPreimagesBounded,PalletDemocracyVoteThreshold)>`[\u200b](#nextexternal-optionframesupportpreimagesboundedpalletdemocracyvotethreshold \"Direct link to nextexternal-optionframesupportpreimagesboundedpalletdemocracyvotethreshold\")\n\n*   **interface**: `api.query.democracy.nextExternal`\n    \n*   **summary**: The referendum to be tabled whenever it would be valid to table an external proposal. This happens when a referendum needs to be tabled and one of two conditions are met:\n    \n    *   `LastTabledWasExternal` is `false`; or\n        \n    *   `PublicProps` is empty.\n        \n\n### publicPropCount(): `u32`[\u200b](#publicpropcount-u32 \"Direct link to publicpropcount-u32\")\n\n*   **interface**: `api.query.democracy.publicPropCount`\n*   **summary**: The number of (public) proposals that have been made so far.\n\n### publicProps(): `Vec<(u32,FrameSupportPreimagesBounded,AccountId32)>`[\u200b](#publicprops-vecu32framesupportpreimagesboundedaccountid32 \"Direct link to publicprops-vecu32framesupportpreimagesboundedaccountid32\")\n\n*   **interface**: `api.query.democracy.publicProps`\n*   **summary**: The public proposals. Unsorted. The second item is the proposal.\n\n### referendumCount(): `u32`[\u200b](#referendumcount-u32 \"Direct link to referendumcount-u32\")\n\n*   **interface**: `api.query.democracy.referendumCount`\n*   **summary**: The next free referendum index, aka the number of referenda started so far.\n\n### referendumInfoOf(`u32`): `Option<PalletDemocracyReferendumInfo>`[\u200b](#referenduminfoofu32-optionpalletdemocracyreferenduminfo \"Direct link to referenduminfoofu32-optionpalletdemocracyreferenduminfo\")\n\n*   **interface**: `api.query.democracy.referendumInfoOf`\n    \n*   **summary**: Information concerning any given referendum.\n    \n    TWOX-NOTE: SAFE as indexes are not under an attacker\u2019s control.\n    \n\n### votingOf(`AccountId32`): `PalletDemocracyVoteVoting`[\u200b](#votingofaccountid32-palletdemocracyvotevoting \"Direct link to votingofaccountid32-palletdemocracyvotevoting\")\n\n*   **interface**: `api.query.democracy.votingOf`\n    \n*   **summary**: All votes for a particular voter. We store the balance for the number of votes that we have recorded. The second item is the total amount of delegations, that will be added.\n    \n    TWOX-NOTE: SAFE as `AccountId`s are crypto hashes anyway.\n    \n\n* * *\n\nelectionProviderMultiPhase[\u200b](#electionprovidermultiphase \"Direct link to electionProviderMultiPhase\")\n\n-------------------------------------------------------------------------------------------------------\n\n### currentPhase(): `PalletElectionProviderMultiPhasePhase`[\u200b](#currentphase-palletelectionprovidermultiphasephase \"Direct link to currentphase-palletelectionprovidermultiphasephase\")\n\n*   **interface**: `api.query.electionProviderMultiPhase.currentPhase`\n*   **summary**: Current phase.\n\n### desiredTargets(): `Option<u32>`[\u200b](#desiredtargets-optionu32 \"Direct link to desiredtargets-optionu32\")\n\n*   **interface**: `api.query.electionProviderMultiPhase.desiredTargets`\n    \n*   **summary**: Desired number of targets to elect for this round.\n    \n    Only exists when \\[`Snapshot`\\] is present.\n    \n\n### minimumUntrustedScore(): `Option<SpNposElectionsElectionScore>`[\u200b](#minimumuntrustedscore-optionspnposelectionselectionscore \"Direct link to minimumuntrustedscore-optionspnposelectionselectionscore\")\n\n*   **interface**: `api.query.electionProviderMultiPhase.minimumUntrustedScore`\n    \n*   **summary**: The minimum score that each 'untrusted' solution must attain in order to be considered feasible.\n    \n    Can be set via `set_minimum_untrusted_score`.\n    \n\n### queuedSolution(): `Option<PalletElectionProviderMultiPhaseReadySolution>`[\u200b](#queuedsolution-optionpalletelectionprovidermultiphasereadysolution \"Direct link to queuedsolution-optionpalletelectionprovidermultiphasereadysolution\")\n\n*   **interface**: `api.query.electionProviderMultiPhase.queuedSolution`\n    \n*   **summary**: Current best solution, signed or unsigned, queued to be returned upon `elect`.\n    \n    Always sorted by score.\n    \n\n### round(): `u32`[\u200b](#round-u32 \"Direct link to round-u32\")\n\n*   **interface**: `api.query.electionProviderMultiPhase.round`\n    \n*   **summary**: Internal counter for the number of rounds.\n    \n    This is useful for de-duplication of transactions submitted to the pool, and general diagnostics of the pallet.\n    \n    This is merely incremented once per every time that an upstream `elect` is called.\n    \n\n### signedSubmissionIndices(): `Vec<(SpNposElectionsElectionScore,u32,u32)>`[\u200b](#signedsubmissionindices-vecspnposelectionselectionscoreu32u32 \"Direct link to signedsubmissionindices-vecspnposelectionselectionscoreu32u32\")\n\n*   **interface**: `api.query.electionProviderMultiPhase.signedSubmissionIndices`\n    \n*   **summary**: A sorted, bounded vector of `(score, block_number, index)`, where each `index` points to a value in `SignedSubmissions`.\n    \n    We never need to process more than a single signed submission at a time. Signed submissions can be quite large, so we're willing to pay the cost of multiple database accesses to access them one at a time instead of reading and decoding all of them at once.\n    \n\n### signedSubmissionNextIndex(): `u32`[\u200b](#signedsubmissionnextindex-u32 \"Direct link to signedsubmissionnextindex-u32\")\n\n*   **interface**: `api.query.electionProviderMultiPhase.signedSubmissionNextIndex`\n    \n*   **summary**: The next index to be assigned to an incoming signed submission.\n    \n    Every accepted submission is assigned a unique index; that index is bound to that particular submission for the duration of the election. On election finalization, the next index is reset to 0.\n    \n    We can't just use `SignedSubmissionIndices.len()`, because that's a bounded set; past its capacity, it will simply saturate. We can't just iterate over `SignedSubmissionsMap`, because iteration is slow. Instead, we store the value here.\n    \n\n### signedSubmissionsMap(`u32`): `Option<PalletElectionProviderMultiPhaseSignedSignedSubmission>`[\u200b](#signedsubmissionsmapu32-optionpalletelectionprovidermultiphasesignedsignedsubmission \"Direct link to signedsubmissionsmapu32-optionpalletelectionprovidermultiphasesignedsignedsubmission\")\n\n*   **interface**: `api.query.electionProviderMultiPhase.signedSubmissionsMap`\n    \n*   **summary**: Unchecked, signed solutions.\n    \n    Together with `SubmissionIndices`, this stores a bounded set of `SignedSubmissions` while allowing us to keep only a single one in memory at a time.\n    \n    Twox note: the key of the map is an auto-incrementing index which users cannot inspect or affect; we shouldn't need a cryptographically secure hasher.\n    \n\n### snapshot(): `Option<PalletElectionProviderMultiPhaseRoundSnapshot>`[\u200b](#snapshot-optionpalletelectionprovidermultiphaseroundsnapshot \"Direct link to snapshot-optionpalletelectionprovidermultiphaseroundsnapshot\")\n\n*   **interface**: `api.query.electionProviderMultiPhase.snapshot`\n    \n*   **summary**: Snapshot data of the round.\n    \n    This is created at the beginning of the signed phase and cleared upon calling `elect`.\n    \n\n### snapshotMetadata(): `Option<PalletElectionProviderMultiPhaseSolutionOrSnapshotSize>`[\u200b](#snapshotmetadata-optionpalletelectionprovidermultiphasesolutionorsnapshotsize \"Direct link to snapshotmetadata-optionpalletelectionprovidermultiphasesolutionorsnapshotsize\")\n\n*   **interface**: `api.query.electionProviderMultiPhase.snapshotMetadata`\n    \n*   **summary**: The metadata of the \\[`RoundSnapshot`\\]\n    \n    Only exists when \\[`Snapshot`\\] is present.\n    \n\n* * *\n\nelections[\u200b](#elections \"Direct link to elections\")\n\n----------------------------------------------------\n\n### candidates(): `Vec<(AccountId32,u128)>`[\u200b](#candidates-vecaccountid32u128 \"Direct link to candidates-vecaccountid32u128\")\n\n*   **interface**: `api.query.elections.candidates`\n    \n*   **summary**: The present candidate list. A current member or runner-up can never enter this vector and is always implicitly assumed to be a candidate.\n    \n    Second element is the deposit.\n    \n    Invariant: Always sorted based on account id.\n    \n\n### electionRounds(): `u32`[\u200b](#electionrounds-u32 \"Direct link to electionrounds-u32\")\n\n*   **interface**: `api.query.elections.electionRounds`\n*   **summary**: The total number of vote rounds that have happened, excluding the upcoming one.\n\n### members(): `Vec<PalletElectionsPhragmenSeatHolder>`[\u200b](#members-vecpalletelectionsphragmenseatholder \"Direct link to members-vecpalletelectionsphragmenseatholder\")\n\n*   **interface**: `api.query.elections.members`\n    \n*   **summary**: The current elected members.\n    \n    Invariant: Always sorted based on account id.\n    \n\n### runnersUp(): `Vec<PalletElectionsPhragmenSeatHolder>`[\u200b](#runnersup-vecpalletelectionsphragmenseatholder \"Direct link to runnersup-vecpalletelectionsphragmenseatholder\")\n\n*   **interface**: `api.query.elections.runnersUp`\n    \n*   **summary**: The current reserved runners-up.\n    \n    Invariant: Always sorted based on rank (worse to best). Upon removal of a member, the last (i.e. _best_) runner-up will be replaced.\n    \n\n### voting(`AccountId32`): `PalletElectionsPhragmenVoter`[\u200b](#votingaccountid32-palletelectionsphragmenvoter \"Direct link to votingaccountid32-palletelectionsphragmenvoter\")\n\n*   **interface**: `api.query.elections.voting`\n    \n*   **summary**: Votes and locked stake of a particular voter.\n    \n    TWOX-NOTE: SAFE as `AccountId` is a crypto hash.\n    \n\n* * *\n\nfastUnstake[\u200b](#fastunstake \"Direct link to fastUnstake\")\n\n----------------------------------------------------------\n\n### counterForQueue(): `u32`[\u200b](#counterforqueue-u32 \"Direct link to counterforqueue-u32\")\n\n*   **interface**: `api.query.fastUnstake.counterForQueue`\n*   **summary**: Counter for the related counted storage map\n\n### erasToCheckPerBlock(): `u32`[\u200b](#erastocheckperblock-u32 \"Direct link to erastocheckperblock-u32\")\n\n*   **interface**: `api.query.fastUnstake.erasToCheckPerBlock`\n    \n*   **summary**: Number of eras to check per block.\n    \n    If set to 0, this pallet does absolutely nothing. Cannot be set to more than \\[`Config::MaxErasToCheckPerBlock`\\].\n    \n    Based on the amount of weight available at \\[`Pallet::on_idle`\\], up to this many eras are checked. The checking is represented by updating \\[`UnstakeRequest::checked`\\], which is stored in \\[`Head`\\].\n    \n\n### head(): `Option<PalletFastUnstakeUnstakeRequest>`[\u200b](#head-optionpalletfastunstakeunstakerequest \"Direct link to head-optionpalletfastunstakeunstakerequest\")\n\n*   **interface**: `api.query.fastUnstake.head`\n    \n*   **summary**: The current \"head of the queue\" being unstaked.\n    \n    The head in itself can be a batch of up to \\[`Config::BatchSize`\\] stakers.\n    \n\n### queue(`AccountId32`): `Option<u128>`[\u200b](#queueaccountid32-optionu128 \"Direct link to queueaccountid32-optionu128\")\n\n*   **interface**: `api.query.fastUnstake.queue`\n    \n*   **summary**: The map of all accounts wishing to be unstaked.\n    \n    Keeps track of `AccountId` wishing to unstake and it's corresponding deposit.\n    \n\n* * *\n\nglutton[\u200b](#glutton \"Direct link to glutton\")\n\n----------------------------------------------\n\n### compute(): `u64`[\u200b](#compute-u64 \"Direct link to compute-u64\")\n\n*   **interface**: `api.query.glutton.compute`\n    \n*   **summary**: The proportion of the remaining `ref_time` to consume during `on_idle`.\n    \n    `1.0` is mapped to `100%`. Must be at most \\[`crate::RESOURCE_HARD_LIMIT`\\]. Setting this to over `1.0` could stall the chain.\n    \n\n### storage(): `u64`[\u200b](#storage-u64 \"Direct link to storage-u64\")\n\n*   **interface**: `api.query.glutton.storage`\n    \n*   **summary**: The proportion of the remaining `proof_size` to consume during `on_idle`.\n    \n    `1.0` is mapped to `100%`. Must be at most \\[`crate::RESOURCE_HARD_LIMIT`\\]. Setting this to over `1.0` could stall the chain.\n    \n\n### trashData(`u32`): `Option<[u8;1024]>`[\u200b](#trashdatau32-optionu81024 \"Direct link to trashdatau32-optionu81024\")\n\n*   **interface**: `api.query.glutton.trashData`\n    \n*   **summary**: Storage map used for wasting proof size.\n    \n    It contains no meaningful data - hence the name \"Trash\". The maximal number of entries is set to 65k, which is just below the next jump at 16^4. This is important to reduce the proof size benchmarking overestimate. The assumption here is that we won't have more than 65k \\* 1KiB = 65MiB of proof size wasting in practice. However, this limit is not enforced, so the pallet would also work out of the box with more entries, but its benchmarked proof weight would possibly be underestimated in that case.\n    \n\n### trashDataCount(): `u32`[\u200b](#trashdatacount-u32 \"Direct link to trashdatacount-u32\")\n\n*   **interface**: `api.query.glutton.trashDataCount`\n*   **summary**: The current number of entries in `TrashData`.\n\n* * *\n\ngrandpa[\u200b](#grandpa \"Direct link to grandpa\")\n\n----------------------------------------------\n\n### authorities(): `Vec<(SpConsensusGrandpaAppPublic,u64)>`[\u200b](#authorities-vecspconsensusgrandpaapppublicu64 \"Direct link to authorities-vecspconsensusgrandpaapppublicu64\")\n\n*   **interface**: `api.query.grandpa.authorities`\n*   **summary**: The current list of authorities.\n\n### currentSetId(): `u64`[\u200b](#currentsetid-u64 \"Direct link to currentsetid-u64\")\n\n*   **interface**: `api.query.grandpa.currentSetId`\n*   **summary**: The number of changes (both in terms of keys and underlying economic responsibilities) in the \"set\" of Grandpa validators from genesis.\n\n### nextForced(): `Option<u32>`[\u200b](#nextforced-optionu32 \"Direct link to nextforced-optionu32\")\n\n*   **interface**: `api.query.grandpa.nextForced`\n*   **summary**: next block number where we can force a change.\n\n### pendingChange(): `Option<PalletGrandpaStoredPendingChange>`[\u200b](#pendingchange-optionpalletgrandpastoredpendingchange \"Direct link to pendingchange-optionpalletgrandpastoredpendingchange\")\n\n*   **interface**: `api.query.grandpa.pendingChange`\n*   **summary**: Pending change: (signaled at, scheduled change).\n\n### setIdSession(`u64`): `Option<u32>`[\u200b](#setidsessionu64-optionu32 \"Direct link to setidsessionu64-optionu32\")\n\n*   **interface**: `api.query.grandpa.setIdSession`\n    \n*   **summary**: A mapping from grandpa set ID to the index of the _most recent_ session for which its members were responsible.\n    \n    This is only used for validating equivocation proofs. An equivocation proof must contains a key-ownership proof for a given session, therefore we need a way to tie together sessions and GRANDPA set ids, i.e. we need to validate that a validator was the owner of a given key on a given session, and what the active set ID was during that session.\n    \n    TWOX-NOTE: `SetId` is not under user control.\n    \n\n### stalled(): `Option<(u32,u32)>`[\u200b](#stalled-optionu32u32 \"Direct link to stalled-optionu32u32\")\n\n*   **interface**: `api.query.grandpa.stalled`\n*   **summary**: `true` if we are currently stalled.\n\n### state(): `PalletGrandpaStoredState`[\u200b](#state-palletgrandpastoredstate \"Direct link to state-palletgrandpastoredstate\")\n\n*   **interface**: `api.query.grandpa.state`\n*   **summary**: State of the current authority set.\n\n* * *\n\nidentity[\u200b](#identity \"Direct link to identity\")\n\n-------------------------------------------------\n\n### identityOf(`AccountId32`): `Option<PalletIdentityRegistration>`[\u200b](#identityofaccountid32-optionpalletidentityregistration \"Direct link to identityofaccountid32-optionpalletidentityregistration\")\n\n*   **interface**: `api.query.identity.identityOf`\n    \n*   **summary**: Information that is pertinent to identify the entity behind an account.\n    \n    TWOX-NOTE: OK \u2015 `AccountId` is a secure hash.\n    \n\n### registrars(): `Vec<Option<PalletIdentityRegistrarInfo>>`[\u200b](#registrars-vecoptionpalletidentityregistrarinfo \"Direct link to registrars-vecoptionpalletidentityregistrarinfo\")\n\n*   **interface**: `api.query.identity.registrars`\n    \n*   **summary**: The set of registrars. Not expected to get very big as can only be added through a special origin (likely a council motion).\n    \n    The index into this can be cast to `RegistrarIndex` to get a valid value.\n    \n\n### subsOf(`AccountId32`): `(u128,Vec<AccountId32>)`[\u200b](#subsofaccountid32-u128vecaccountid32 \"Direct link to subsofaccountid32-u128vecaccountid32\")\n\n*   **interface**: `api.query.identity.subsOf`\n    \n*   **summary**: Alternative \"sub\" identities of this account.\n    \n    The first item is the deposit, the second is a vector of the accounts.\n    \n    TWOX-NOTE: OK \u2015 `AccountId` is a secure hash.\n    \n\n### superOf(`AccountId32`): `Option<(AccountId32,Data)>`[\u200b](#superofaccountid32-optionaccountid32data \"Direct link to superofaccountid32-optionaccountid32data\")\n\n*   **interface**: `api.query.identity.superOf`\n*   **summary**: The super-identity of an alternative \"sub\" identity together with its name, within that context. If the account is not some other account's sub-identity, then just `None`.\n\n* * *\n\nimOnline[\u200b](#imonline \"Direct link to imOnline\")\n\n-------------------------------------------------\n\n### authoredBlocks(`u32, AccountId32`): `u32`[\u200b](#authoredblocksu32-accountid32-u32 \"Direct link to authoredblocksu32-accountid32-u32\")\n\n*   **interface**: `api.query.imOnline.authoredBlocks`\n*   **summary**: For each session index, we keep a mapping of `ValidatorId<T>` to the number of blocks authored by the given authority.\n\n### heartbeatAfter(): `u32`[\u200b](#heartbeatafter-u32 \"Direct link to heartbeatafter-u32\")\n\n*   **interface**: `api.query.imOnline.heartbeatAfter`\n    \n*   **summary**: The block number after which it's ok to send heartbeats in the current session.\n    \n    At the beginning of each session we set this to a value that should fall roughly in the middle of the session duration. The idea is to first wait for the validators to produce a block in the current session, so that the heartbeat later on will not be necessary.\n    \n    This value will only be used as a fallback if we fail to get a proper session progress estimate from `NextSessionRotation`, as those estimates should be more accurate then the value we calculate for `HeartbeatAfter`.\n    \n\n### keys(): `Vec<PalletImOnlineSr25519AppSr25519Public>`[\u200b](#keys-vecpalletimonlinesr25519appsr25519public \"Direct link to keys-vecpalletimonlinesr25519appsr25519public\")\n\n*   **interface**: `api.query.imOnline.keys`\n*   **summary**: The current set of keys that may issue a heartbeat.\n\n### receivedHeartbeats(`u32, u32`): `Option<bool>`[\u200b](#receivedheartbeatsu32-u32-optionbool \"Direct link to receivedheartbeatsu32-u32-optionbool\")\n\n*   **interface**: `api.query.imOnline.receivedHeartbeats`\n*   **summary**: For each session index, we keep a mapping of `SessionIndex` and `AuthIndex`.\n\n* * *\n\nindices[\u200b](#indices \"Direct link to indices\")\n\n----------------------------------------------\n\n### accounts(`u32`): `Option<(AccountId32,u128,bool)>`[\u200b](#accountsu32-optionaccountid32u128bool \"Direct link to accountsu32-optionaccountid32u128bool\")\n\n*   **interface**: `api.query.indices.accounts`\n*   **summary**: The lookup from index to account.\n\n* * *\n\nlottery[\u200b](#lottery \"Direct link to lottery\")\n\n----------------------------------------------\n\n### callIndices(): `Vec<(u8,u8)>`[\u200b](#callindices-vecu8u8 \"Direct link to callindices-vecu8u8\")\n\n*   **interface**: `api.query.lottery.callIndices`\n*   **summary**: The calls stored in this pallet to be used in an active lottery if configured by `Config::ValidateCall`.\n\n### lottery(): `Option<PalletLotteryLotteryConfig>`[\u200b](#lottery-optionpalletlotterylotteryconfig \"Direct link to lottery-optionpalletlotterylotteryconfig\")\n\n*   **interface**: `api.query.lottery.lottery`\n*   **summary**: The configuration for the current lottery.\n\n### lotteryIndex(): `u32`[\u200b](#lotteryindex-u32 \"Direct link to lotteryindex-u32\")\n\n*   **interface**: `api.query.lottery.lotteryIndex`\n\n### participants(`AccountId32`): `(u32,Vec<(u8,u8)>)`[\u200b](#participantsaccountid32-u32vecu8u8 \"Direct link to participantsaccountid32-u32vecu8u8\")\n\n*   **interface**: `api.query.lottery.participants`\n*   **summary**: Users who have purchased a ticket. (Lottery Index, Tickets Purchased)\n\n### tickets(`u32`): `Option<AccountId32>`[\u200b](#ticketsu32-optionaccountid32 \"Direct link to ticketsu32-optionaccountid32\")\n\n*   **interface**: `api.query.lottery.tickets`\n    \n*   **summary**: Each ticket's owner.\n    \n    May have residual storage from previous lotteries. Use `TicketsCount` to see which ones are actually valid ticket mappings.\n    \n\n### ticketsCount(): `u32`[\u200b](#ticketscount-u32 \"Direct link to ticketscount-u32\")\n\n*   **interface**: `api.query.lottery.ticketsCount`\n*   **summary**: Total number of tickets sold.\n\n* * *\n\nmessageQueue[\u200b](#messagequeue \"Direct link to messageQueue\")\n\n-------------------------------------------------------------\n\n### bookStateFor(`u32`): `PalletMessageQueueBookState`[\u200b](#bookstateforu32-palletmessagequeuebookstate \"Direct link to bookstateforu32-palletmessagequeuebookstate\")\n\n*   **interface**: `api.query.messageQueue.bookStateFor`\n*   **summary**: The index of the first and last (non-empty) pages.\n\n### pages(`u32, u32`): `Option<PalletMessageQueuePage>`[\u200b](#pagesu32-u32-optionpalletmessagequeuepage \"Direct link to pagesu32-u32-optionpalletmessagequeuepage\")\n\n*   **interface**: `api.query.messageQueue.pages`\n*   **summary**: The map of page indices to pages.\n\n### serviceHead(): `Option<u32>`[\u200b](#servicehead-optionu32 \"Direct link to servicehead-optionu32\")\n\n*   **interface**: `api.query.messageQueue.serviceHead`\n*   **summary**: The origin at which we should begin servicing.\n\n* * *\n\nmixnet[\u200b](#mixnet \"Direct link to mixnet\")\n\n-------------------------------------------\n\n### currentSessionIndex(): `u32`[\u200b](#currentsessionindex-u32 \"Direct link to currentsessionindex-u32\")\n\n*   **interface**: `api.query.mixnet.currentSessionIndex`\n*   **summary**: Index of the current session. This may be offset relative to the session index tracked by eg `pallet_session`; mixnet session indices are independent.\n\n### currentSessionStartBlock(): `u32`[\u200b](#currentsessionstartblock-u32 \"Direct link to currentsessionstartblock-u32\")\n\n*   **interface**: `api.query.mixnet.currentSessionStartBlock`\n*   **summary**: Block in which the current session started.\n\n### mixnodes(`u32, u32`): `Option<PalletMixnetBoundedMixnode>`[\u200b](#mixnodesu32-u32-optionpalletmixnetboundedmixnode \"Direct link to mixnodesu32-u32-optionpalletmixnetboundedmixnode\")\n\n*   **interface**: `api.query.mixnet.mixnodes`\n    \n*   **summary**: Mixnode sets by session index. Only the mixnode sets for the previous, current, and next sessions are kept; older sets are discarded.\n    \n    The mixnodes in each set are keyed by authority index so we can easily check if an authority has registered a mixnode. The authority indices should only be used during registration; the authority indices for the very first session are made up.\n    \n\n### nextAuthorityIds(`u32`): `Option<SpMixnetAppPublic>`[\u200b](#nextauthorityidsu32-optionspmixnetapppublic \"Direct link to nextauthorityidsu32-optionspmixnetapppublic\")\n\n*   **interface**: `api.query.mixnet.nextAuthorityIds`\n*   **summary**: Authority list for the next session.\n\n* * *\n\nmmr[\u200b](#mmr \"Direct link to mmr\")\n\n----------------------------------\n\n### nodes(`u64`): `Option<H256>`[\u200b](#nodesu64-optionh256 \"Direct link to nodesu64-optionh256\")\n\n*   **interface**: `api.query.mmr.nodes`\n    \n*   **summary**: Hashes of the nodes in the MMR.\n    \n    Note this collection only contains MMR peaks, the inner nodes (and leaves) are pruned and only stored in the Offchain DB.\n    \n\n### numberOfLeaves(): `u64`[\u200b](#numberofleaves-u64 \"Direct link to numberofleaves-u64\")\n\n*   **interface**: `api.query.mmr.numberOfLeaves`\n*   **summary**: Current size of the MMR (number of leaves).\n\n### rootHash(): `H256`[\u200b](#roothash-h256 \"Direct link to roothash-h256\")\n\n*   **interface**: `api.query.mmr.rootHash`\n*   **summary**: Latest MMR Root hash.\n\n* * *\n\nmultisig[\u200b](#multisig \"Direct link to multisig\")\n\n-------------------------------------------------\n\n### multisigs(`AccountId32, [u8;32]`): `Option<PalletMultisigMultisig>`[\u200b](#multisigsaccountid32-u832-optionpalletmultisigmultisig \"Direct link to multisigsaccountid32-u832-optionpalletmultisigmultisig\")\n\n*   **interface**: `api.query.multisig.multisigs`\n*   **summary**: The set of open multisig operations.\n\n* * *\n\nnftFractionalization[\u200b](#nftfractionalization \"Direct link to nftFractionalization\")\n\n-------------------------------------------------------------------------------------\n\n### nftToAsset(`(u32,u32)`): `Option<PalletNftFractionalizationDetails>`[\u200b](#nfttoassetu32u32-optionpalletnftfractionalizationdetails \"Direct link to nfttoassetu32u32-optionpalletnftfractionalizationdetails\")\n\n*   **interface**: `api.query.nftFractionalization.nftToAsset`\n*   **summary**: Keeps track of the corresponding NFT ID, asset ID and amount minted.\n\n* * *\n\nnfts[\u200b](#nfts \"Direct link to nfts\")\n\n-------------------------------------\n\n### account(`AccountId32, u32, u32`): `Option<Null>`[\u200b](#accountaccountid32-u32-u32-optionnull \"Direct link to accountaccountid32-u32-u32-optionnull\")\n\n*   **interface**: `api.query.nfts.account`\n*   **summary**: The items held by any given account; set out this way so that items owned by a single account can be enumerated.\n\n### attribute(`u32, Option<u32>, PalletNftsAttributeNamespace, Bytes`): `Option<(Bytes,PalletNftsAttributeDeposit)>`[\u200b](#attributeu32-optionu32-palletnftsattributenamespace-bytes-optionbytespalletnftsattributedeposit \"Direct link to attributeu32-optionu32-palletnftsattributenamespace-bytes-optionbytespalletnftsattributedeposit\")\n\n*   **interface**: `api.query.nfts.attribute`\n*   **summary**: Attributes of a collection.\n\n### collection(`u32`): `Option<PalletNftsCollectionDetails>`[\u200b](#collectionu32-optionpalletnftscollectiondetails \"Direct link to collectionu32-optionpalletnftscollectiondetails\")\n\n*   **interface**: `api.query.nfts.collection`\n*   **summary**: Details of a collection.\n\n### collectionAccount(`AccountId32, u32`): `Option<Null>`[\u200b](#collectionaccountaccountid32-u32-optionnull \"Direct link to collectionaccountaccountid32-u32-optionnull\")\n\n*   **interface**: `api.query.nfts.collectionAccount`\n*   **summary**: The collections owned by any given account; set out this way so that collections owned by a single account can be enumerated.\n\n### collectionConfigOf(`u32`): `Option<PalletNftsCollectionConfig>`[\u200b](#collectionconfigofu32-optionpalletnftscollectionconfig \"Direct link to collectionconfigofu32-optionpalletnftscollectionconfig\")\n\n*   **interface**: `api.query.nfts.collectionConfigOf`\n*   **summary**: Config of a collection.\n\n### collectionMetadataOf(`u32`): `Option<PalletNftsCollectionMetadata>`[\u200b](#collectionmetadataofu32-optionpalletnftscollectionmetadata \"Direct link to collectionmetadataofu32-optionpalletnftscollectionmetadata\")\n\n*   **interface**: `api.query.nfts.collectionMetadataOf`\n*   **summary**: Metadata of a collection.\n\n### collectionRoleOf(`u32, AccountId32`): `Option<u8>`[\u200b](#collectionroleofu32-accountid32-optionu8 \"Direct link to collectionroleofu32-accountid32-optionu8\")\n\n*   **interface**: `api.query.nfts.collectionRoleOf`\n*   **summary**: The items in existence and their ownership details. Stores collection roles as per account.\n\n### item(`u32, u32`): `Option<PalletNftsItemDetails>`[\u200b](#itemu32-u32-optionpalletnftsitemdetails \"Direct link to itemu32-u32-optionpalletnftsitemdetails\")\n\n*   **interface**: `api.query.nfts.item`\n*   **summary**: The items in existence and their ownership details.\n\n### itemAttributesApprovalsOf(`u32, u32`): `BTreeSet<AccountId32>`[\u200b](#itemattributesapprovalsofu32-u32-btreesetaccountid32 \"Direct link to itemattributesapprovalsofu32-u32-btreesetaccountid32\")\n\n*   **interface**: `api.query.nfts.itemAttributesApprovalsOf`\n*   **summary**: Item attribute approvals.\n\n### itemConfigOf(`u32, u32`): `Option<PalletNftsItemConfig>`[\u200b](#itemconfigofu32-u32-optionpalletnftsitemconfig \"Direct link to itemconfigofu32-u32-optionpalletnftsitemconfig\")\n\n*   **interface**: `api.query.nfts.itemConfigOf`\n*   **summary**: Config of an item.\n\n### itemMetadataOf(`u32, u32`): `Option<PalletNftsItemMetadata>`[\u200b](#itemmetadataofu32-u32-optionpalletnftsitemmetadata \"Direct link to itemmetadataofu32-u32-optionpalletnftsitemmetadata\")\n\n*   **interface**: `api.query.nfts.itemMetadataOf`\n*   **summary**: Metadata of an item.\n\n### itemPriceOf(`u32, u32`): `Option<(u128,Option<AccountId32>)>`[\u200b](#itempriceofu32-u32-optionu128optionaccountid32 \"Direct link to itempriceofu32-u32-optionu128optionaccountid32\")\n\n*   **interface**: `api.query.nfts.itemPriceOf`\n*   **summary**: A price of an item.\n\n### nextCollectionId(): `Option<u32>`[\u200b](#nextcollectionid-optionu32 \"Direct link to nextcollectionid-optionu32\")\n\n*   **interface**: `api.query.nfts.nextCollectionId`\n*   **summary**: Stores the `CollectionId` that is going to be used for the next collection. This gets incremented whenever a new collection is created.\n\n### ownershipAcceptance(`AccountId32`): `Option<u32>`[\u200b](#ownershipacceptanceaccountid32-optionu32 \"Direct link to ownershipacceptanceaccountid32-optionu32\")\n\n*   **interface**: `api.query.nfts.ownershipAcceptance`\n*   **summary**: The collection, if any, of which an account is willing to take ownership.\n\n### pendingSwapOf(`u32, u32`): `Option<PalletNftsPendingSwap>`[\u200b](#pendingswapofu32-u32-optionpalletnftspendingswap \"Direct link to pendingswapofu32-u32-optionpalletnftspendingswap\")\n\n*   **interface**: `api.query.nfts.pendingSwapOf`\n*   **summary**: Handles all the pending swaps.\n\n* * *\n\nnis[\u200b](#nis \"Direct link to nis\")\n\n----------------------------------\n\n### queues(`u32`): `Vec<PalletNisBid>`[\u200b](#queuesu32-vecpalletnisbid \"Direct link to queuesu32-vecpalletnisbid\")\n\n*   **interface**: `api.query.nis.queues`\n*   **summary**: The queues of bids. Indexed by duration (in `Period`s).\n\n### queueTotals(): `Vec<(u32,u128)>`[\u200b](#queuetotals-vecu32u128 \"Direct link to queuetotals-vecu32u128\")\n\n*   **interface**: `api.query.nis.queueTotals`\n    \n*   **summary**: The totals of items and balances within each queue. Saves a lot of storage reads in the case of sparsely packed queues.\n    \n    The vector is indexed by duration in `Period`s, offset by one, so information on the queue whose duration is one `Period` would be storage `0`.\n    \n\n### receipts(`u32`): `Option<PalletNisReceiptRecord>`[\u200b](#receiptsu32-optionpalletnisreceiptrecord \"Direct link to receiptsu32-optionpalletnisreceiptrecord\")\n\n*   **interface**: `api.query.nis.receipts`\n*   **summary**: The currently outstanding receipts, indexed according to the order of creation.\n\n### summary(): `PalletNisSummaryRecord`[\u200b](#summary-palletnissummaryrecord \"Direct link to summary-palletnissummaryrecord\")\n\n*   **interface**: `api.query.nis.summary`\n*   **summary**: Summary information over the general state.\n\n* * *\n\nnominationPools[\u200b](#nominationpools \"Direct link to nominationPools\")\n\n----------------------------------------------------------------------\n\n### bondedPools(`u32`): `Option<PalletNominationPoolsBondedPoolInner>`[\u200b](#bondedpoolsu32-optionpalletnominationpoolsbondedpoolinner \"Direct link to bondedpoolsu32-optionpalletnominationpoolsbondedpoolinner\")\n\n*   **interface**: `api.query.nominationPools.bondedPools`\n*   **summary**: Storage for bonded pools.\n\n### claimPermissions(`AccountId32`): `PalletNominationPoolsClaimPermission`[\u200b](#claimpermissionsaccountid32-palletnominationpoolsclaimpermission \"Direct link to claimpermissionsaccountid32-palletnominationpoolsclaimpermission\")\n\n*   **interface**: `api.query.nominationPools.claimPermissions`\n*   **summary**: Map from a pool member account to their opted claim permission.\n\n### counterForBondedPools(): `u32`[\u200b](#counterforbondedpools-u32 \"Direct link to counterforbondedpools-u32\")\n\n*   **interface**: `api.query.nominationPools.counterForBondedPools`\n*   **summary**: Counter for the related counted storage map\n\n### counterForMetadata(): `u32`[\u200b](#counterformetadata-u32 \"Direct link to counterformetadata-u32\")\n\n*   **interface**: `api.query.nominationPools.counterForMetadata`\n*   **summary**: Counter for the related counted storage map\n\n### counterForPoolMembers(): `u32`[\u200b](#counterforpoolmembers-u32 \"Direct link to counterforpoolmembers-u32\")\n\n*   **interface**: `api.query.nominationPools.counterForPoolMembers`\n*   **summary**: Counter for the related counted storage map\n\n### counterForReversePoolIdLookup(): `u32`[\u200b](#counterforreversepoolidlookup-u32 \"Direct link to counterforreversepoolidlookup-u32\")\n\n*   **interface**: `api.query.nominationPools.counterForReversePoolIdLookup`\n*   **summary**: Counter for the related counted storage map\n\n### counterForRewardPools(): `u32`[\u200b](#counterforrewardpools-u32 \"Direct link to counterforrewardpools-u32\")\n\n*   **interface**: `api.query.nominationPools.counterForRewardPools`\n*   **summary**: Counter for the related counted storage map\n\n### counterForSubPoolsStorage(): `u32`[\u200b](#counterforsubpoolsstorage-u32 \"Direct link to counterforsubpoolsstorage-u32\")\n\n*   **interface**: `api.query.nominationPools.counterForSubPoolsStorage`\n*   **summary**: Counter for the related counted storage map\n\n### globalMaxCommission(): `Option<Perbill>`[\u200b](#globalmaxcommission-optionperbill \"Direct link to globalmaxcommission-optionperbill\")\n\n*   **interface**: `api.query.nominationPools.globalMaxCommission`\n*   **summary**: The maximum commission that can be charged by a pool. Used on commission payouts to bound pool commissions that are > `GlobalMaxCommission`, necessary if a future `GlobalMaxCommission` is lower than some current pool commissions.\n\n### lastPoolId(): `u32`[\u200b](#lastpoolid-u32 \"Direct link to lastpoolid-u32\")\n\n*   **interface**: `api.query.nominationPools.lastPoolId`\n*   **summary**: Ever increasing number of all pools created so far.\n\n### maxPoolMembers(): `Option<u32>`[\u200b](#maxpoolmembers-optionu32 \"Direct link to maxpoolmembers-optionu32\")\n\n*   **interface**: `api.query.nominationPools.maxPoolMembers`\n*   **summary**: Maximum number of members that can exist in the system. If `None`, then the count members are not bound on a system wide basis.\n\n### maxPoolMembersPerPool(): `Option<u32>`[\u200b](#maxpoolmembersperpool-optionu32 \"Direct link to maxpoolmembersperpool-optionu32\")\n\n*   **interface**: `api.query.nominationPools.maxPoolMembersPerPool`\n*   **summary**: Maximum number of members that may belong to pool. If `None`, then the count of members is not bound on a per pool basis.\n\n### maxPools(): `Option<u32>`[\u200b](#maxpools-optionu32 \"Direct link to maxpools-optionu32\")\n\n*   **interface**: `api.query.nominationPools.maxPools`\n*   **summary**: Maximum number of nomination pools that can exist. If `None`, then an unbounded number of pools can exist.\n\n### metadata(`u32`): `Bytes`[\u200b](#metadatau32-bytes \"Direct link to metadatau32-bytes\")\n\n*   **interface**: `api.query.nominationPools.metadata`\n*   **summary**: Metadata for the pool.\n\n### minCreateBond(): `u128`[\u200b](#mincreatebond-u128 \"Direct link to mincreatebond-u128\")\n\n*   **interface**: `api.query.nominationPools.minCreateBond`\n    \n*   **summary**: Minimum bond required to create a pool.\n    \n    This is the amount that the depositor must put as their initial stake in the pool, as an indication of \"skin in the game\".\n    \n    This is the value that will always exist in the staking ledger of the pool bonded account while all other accounts leave.\n    \n\n### minJoinBond(): `u128`[\u200b](#minjoinbond-u128 \"Direct link to minjoinbond-u128\")\n\n*   **interface**: `api.query.nominationPools.minJoinBond`\n*   **summary**: Minimum amount to bond to join a pool.\n\n### poolMembers(`AccountId32`): `Option<PalletNominationPoolsPoolMember>`[\u200b](#poolmembersaccountid32-optionpalletnominationpoolspoolmember \"Direct link to poolmembersaccountid32-optionpalletnominationpoolspoolmember\")\n\n*   **interface**: `api.query.nominationPools.poolMembers`\n    \n*   **summary**: Active members.\n    \n    TWOX-NOTE: SAFE since `AccountId` is a secure hash.\n    \n\n### reversePoolIdLookup(`AccountId32`): `Option<u32>`[\u200b](#reversepoolidlookupaccountid32-optionu32 \"Direct link to reversepoolidlookupaccountid32-optionu32\")\n\n*   **interface**: `api.query.nominationPools.reversePoolIdLookup`\n    \n*   **summary**: A reverse lookup from the pool's account id to its id.\n    \n    This is only used for slashing. In all other instances, the pool id is used, and the accounts are deterministically derived from it.\n    \n\n### rewardPools(`u32`): `Option<PalletNominationPoolsRewardPool>`[\u200b](#rewardpoolsu32-optionpalletnominationpoolsrewardpool \"Direct link to rewardpoolsu32-optionpalletnominationpoolsrewardpool\")\n\n*   **interface**: `api.query.nominationPools.rewardPools`\n*   **summary**: Reward pools. This is where there rewards for each pool accumulate. When a members payout is claimed, the balance comes out fo the reward pool. Keyed by the bonded pools account.\n\n### subPoolsStorage(`u32`): `Option<PalletNominationPoolsSubPools>`[\u200b](#subpoolsstorageu32-optionpalletnominationpoolssubpools \"Direct link to subpoolsstorageu32-optionpalletnominationpoolssubpools\")\n\n*   **interface**: `api.query.nominationPools.subPoolsStorage`\n*   **summary**: Groups of unbonding pools. Each group of unbonding pools belongs to a bonded pool, hence the name sub-pools. Keyed by the bonded pools account.\n\n### totalValueLocked(): `u128`[\u200b](#totalvaluelocked-u128 \"Direct link to totalvaluelocked-u128\")\n\n*   **interface**: `api.query.nominationPools.totalValueLocked`\n    \n*   **summary**: The sum of funds across all pools.\n    \n    This might be lower but never higher than the sum of `total_balance` of all \\[`PoolMembers`\\] because calling `pool_withdraw_unbonded` might decrease the total stake of the pool's `bonded_account` without adjusting the pallet-internal `UnbondingPool`'s.\n    \n\n* * *\n\noffences[\u200b](#offences \"Direct link to offences\")\n\n-------------------------------------------------\n\n### concurrentReportsIndex(`[u8;16], Bytes`): `Vec<H256>`[\u200b](#concurrentreportsindexu816-bytes-vech256 \"Direct link to concurrentreportsindexu816-bytes-vech256\")\n\n*   **interface**: `api.query.offences.concurrentReportsIndex`\n*   **summary**: A vector of reports of the same kind that happened at the same time slot.\n\n### reports(`H256`): `Option<SpStakingOffenceOffenceDetails>`[\u200b](#reportsh256-optionspstakingoffenceoffencedetails \"Direct link to reportsh256-optionspstakingoffenceoffencedetails\")\n\n*   **interface**: `api.query.offences.reports`\n*   **summary**: The primary structure that holds all offence records keyed by report identifiers.\n\n* * *\n\npoolAssets[\u200b](#poolassets \"Direct link to poolAssets\")\n\n-------------------------------------------------------\n\n### account(`u32, AccountId32`): `Option<PalletAssetsAssetAccount>`[\u200b](#accountu32-accountid32-optionpalletassetsassetaccount-1 \"Direct link to accountu32-accountid32-optionpalletassetsassetaccount-1\")\n\n*   **interface**: `api.query.poolAssets.account`\n*   **summary**: The holdings of a specific account for a specific asset.\n\n### approvals(`u32, AccountId32, AccountId32`): `Option<PalletAssetsApproval>`[\u200b](#approvalsu32-accountid32-accountid32-optionpalletassetsapproval-1 \"Direct link to approvalsu32-accountid32-accountid32-optionpalletassetsapproval-1\")\n\n*   **interface**: `api.query.poolAssets.approvals`\n*   **summary**: Approved balance transfers. First balance is the amount approved for transfer. Second is the amount of `T::Currency` reserved for storing this. First key is the asset ID, second key is the owner and third key is the delegate.\n\n### asset(`u32`): `Option<PalletAssetsAssetDetails>`[\u200b](#assetu32-optionpalletassetsassetdetails-1 \"Direct link to assetu32-optionpalletassetsassetdetails-1\")\n\n*   **interface**: `api.query.poolAssets.asset`\n*   **summary**: Details of an asset.\n\n### metadata(`u32`): `PalletAssetsAssetMetadata`[\u200b](#metadatau32-palletassetsassetmetadata-1 \"Direct link to metadatau32-palletassetsassetmetadata-1\")\n\n*   **interface**: `api.query.poolAssets.metadata`\n*   **summary**: Metadata of an asset.\n\n* * *\n\npov[\u200b](#pov \"Direct link to pov\")\n\n----------------------------------\n\n### boundedValue(): `Option<Bytes>`[\u200b](#boundedvalue-optionbytes \"Direct link to boundedvalue-optionbytes\")\n\n*   **interface**: `api.query.pov.boundedValue`\n*   **summary**: A value with a MEL bound of 32 byte.\n\n### doubleMap1M(`u32, u32`): `Option<u32>`[\u200b](#doublemap1mu32-u32-optionu32 \"Direct link to doublemap1mu32-u32-optionu32\")\n\n*   **interface**: `api.query.pov.doubleMap1M`\n\n### largeValue(): `Option<Bytes>`[\u200b](#largevalue-optionbytes \"Direct link to largevalue-optionbytes\")\n\n*   **interface**: `api.query.pov.largeValue`\n*   **summary**: 4MiB value.\n\n### largeValue2(): `Option<Bytes>`[\u200b](#largevalue2-optionbytes \"Direct link to largevalue2-optionbytes\")\n\n*   **interface**: `api.query.pov.largeValue2`\n\n### map16M(`u32`): `Option<u32>`[\u200b](#map16mu32-optionu32 \"Direct link to map16mu32-optionu32\")\n\n*   **interface**: `api.query.pov.map16M`\n*   **summary**: A map with a maximum of 16M entries.\n\n### map1M(`u32`): `Option<u32>`[\u200b](#map1mu32-optionu32 \"Direct link to map1mu32-optionu32\")\n\n*   **interface**: `api.query.pov.map1M`\n*   **summary**: A map with a maximum of 1M entries.\n\n### unboundedMap(`u32`): `Option<Vec<u32>>`[\u200b](#unboundedmapu32-optionvecu32 \"Direct link to unboundedmapu32-optionvecu32\")\n\n*   **interface**: `api.query.pov.unboundedMap`\n\n### unboundedMap2(`u32`): `Option<Vec<u32>>`[\u200b](#unboundedmap2u32-optionvecu32 \"Direct link to unboundedmap2u32-optionvecu32\")\n\n*   **interface**: `api.query.pov.unboundedMap2`\n\n### unboundedMapTwox(`u32`): `Option<Vec<u32>>`[\u200b](#unboundedmaptwoxu32-optionvecu32 \"Direct link to unboundedmaptwoxu32-optionvecu32\")\n\n*   **interface**: `api.query.pov.unboundedMapTwox`\n\n### unboundedValue(): `Option<Bytes>`[\u200b](#unboundedvalue-optionbytes \"Direct link to unboundedvalue-optionbytes\")\n\n*   **interface**: `api.query.pov.unboundedValue`\n*   **summary**: A value without a MEL bound.\n\n### value(): `Option<u32>`[\u200b](#value-optionu32 \"Direct link to value-optionu32\")\n\n*   **interface**: `api.query.pov.value`\n\n### value2(): `Option<u32>`[\u200b](#value2-optionu32 \"Direct link to value2-optionu32\")\n\n*   **interface**: `api.query.pov.value2`\n\n* * *\n\npreimage[\u200b](#preimage \"Direct link to preimage\")\n\n-------------------------------------------------\n\n### preimageFor(`(H256,u32)`): `Option<Bytes>`[\u200b](#preimageforh256u32-optionbytes \"Direct link to preimageforh256u32-optionbytes\")\n\n*   **interface**: `api.query.preimage.preimageFor`\n\n### requestStatusFor(`H256`): `Option<PalletPreimageRequestStatus>`[\u200b](#requeststatusforh256-optionpalletpreimagerequeststatus \"Direct link to requeststatusforh256-optionpalletpreimagerequeststatus\")\n\n*   **interface**: `api.query.preimage.requestStatusFor`\n*   **summary**: The request status of a given hash.\n\n### statusFor(`H256`): `Option<PalletPreimageOldRequestStatus>`[\u200b](#statusforh256-optionpalletpreimageoldrequeststatus \"Direct link to statusforh256-optionpalletpreimageoldrequeststatus\")\n\n*   **interface**: `api.query.preimage.statusFor`\n*   **summary**: The request status of a given hash.\n\n* * *\n\nproxy[\u200b](#proxy \"Direct link to proxy\")\n\n----------------------------------------\n\n### announcements(`AccountId32`): `(Vec<PalletProxyAnnouncement>,u128)`[\u200b](#announcementsaccountid32-vecpalletproxyannouncementu128 \"Direct link to announcementsaccountid32-vecpalletproxyannouncementu128\")\n\n*   **interface**: `api.query.proxy.announcements`\n*   **summary**: The announcements made by the proxy (key).\n\n### proxies(`AccountId32`): `(Vec<PalletProxyProxyDefinition>,u128)`[\u200b](#proxiesaccountid32-vecpalletproxyproxydefinitionu128 \"Direct link to proxiesaccountid32-vecpalletproxyproxydefinitionu128\")\n\n*   **interface**: `api.query.proxy.proxies`\n*   **summary**: The set of account proxies. Maps the account which has delegated to the accounts which are being delegated to, together with the amount held on deposit.\n\n* * *\n\nrandomnessCollectiveFlip[\u200b](#randomnesscollectiveflip \"Direct link to randomnessCollectiveFlip\")\n\n-------------------------------------------------------------------------------------------------\n\n### randomMaterial(): `Vec<H256>`[\u200b](#randommaterial-vech256 \"Direct link to randommaterial-vech256\")\n\n*   **interface**: `api.query.randomnessCollectiveFlip.randomMaterial`\n*   **summary**: Series of block headers from the last 81 blocks that acts as random seed material. This is arranged as a ring buffer with `block_number % 81` being the index into the `Vec` of the oldest hash.\n\n* * *\n\nrankedCollective[\u200b](#rankedcollective \"Direct link to rankedCollective\")\n\n-------------------------------------------------------------------------\n\n### idToIndex(`u16, AccountId32`): `Option<u32>`[\u200b](#idtoindexu16-accountid32-optionu32 \"Direct link to idtoindexu16-accountid32-optionu32\")\n\n*   **interface**: `api.query.rankedCollective.idToIndex`\n*   **summary**: The index of each ranks's member into the group of members who have at least that rank.\n\n### indexToId(`u16, u32`): `Option<AccountId32>`[\u200b](#indextoidu16-u32-optionaccountid32 \"Direct link to indextoidu16-u32-optionaccountid32\")\n\n*   **interface**: `api.query.rankedCollective.indexToId`\n*   **summary**: The members in the collective by index. All indices in the range `0..MemberCount` will return `Some`, however a member's index is not guaranteed to remain unchanged over time.\n\n### memberCount(`u16`): `u32`[\u200b](#membercountu16-u32 \"Direct link to membercountu16-u32\")\n\n*   **interface**: `api.query.rankedCollective.memberCount`\n*   **summary**: The number of members in the collective who have at least the rank according to the index of the vec.\n\n### members(`AccountId32`): `Option<PalletRankedCollectiveMemberRecord>`[\u200b](#membersaccountid32-optionpalletrankedcollectivememberrecord \"Direct link to membersaccountid32-optionpalletrankedcollectivememberrecord\")\n\n*   **interface**: `api.query.rankedCollective.members`\n*   **summary**: The current members of the collective.\n\n### voting(`u32, AccountId32`): `Option<PalletRankedCollectiveVoteRecord>`[\u200b](#votingu32-accountid32-optionpalletrankedcollectivevoterecord \"Direct link to votingu32-accountid32-optionpalletrankedcollectivevoterecord\")\n\n*   **interface**: `api.query.rankedCollective.voting`\n*   **summary**: Votes on a given proposal, if it is ongoing.\n\n### votingCleanup(`u32`): `Option<Bytes>`[\u200b](#votingcleanupu32-optionbytes \"Direct link to votingcleanupu32-optionbytes\")\n\n*   **interface**: `api.query.rankedCollective.votingCleanup`\n\n* * *\n\nrankedPolls[\u200b](#rankedpolls \"Direct link to rankedPolls\")\n\n----------------------------------------------------------\n\n### decidingCount(`u16`): `u32`[\u200b](#decidingcountu16-u32 \"Direct link to decidingcountu16-u32\")\n\n*   **interface**: `api.query.rankedPolls.decidingCount`\n*   **summary**: The number of referenda being decided currently.\n\n### metadataOf(`u32`): `Option<H256>`[\u200b](#metadataofu32-optionh256 \"Direct link to metadataofu32-optionh256\")\n\n*   **interface**: `api.query.rankedPolls.metadataOf`\n    \n*   **summary**: The metadata is a general information concerning the referendum. The `Hash` refers to the preimage of the `Preimages` provider which can be a JSON dump or IPFS hash of a JSON file.\n    \n    Consider a garbage collection for a metadata of finished referendums to `unrequest` (remove) large preimages.\n    \n\n### referendumCount(): `u32`[\u200b](#referendumcount-u32-1 \"Direct link to referendumcount-u32-1\")\n\n*   **interface**: `api.query.rankedPolls.referendumCount`\n*   **summary**: The next free referendum index, aka the number of referenda started so far.\n\n### referendumInfoFor(`u32`): `Option<PalletReferendaReferendumInfoRankedCollectiveTally>`[\u200b](#referenduminfoforu32-optionpalletreferendareferenduminforankedcollectivetally \"Direct link to referenduminfoforu32-optionpalletreferendareferenduminforankedcollectivetally\")\n\n*   **interface**: `api.query.rankedPolls.referendumInfoFor`\n*   **summary**: Information concerning any given referendum.\n\n### trackQueue(`u16`): `Vec<(u32,u32)>`[\u200b](#trackqueueu16-vecu32u32 \"Direct link to trackqueueu16-vecu32u32\")\n\n*   **interface**: `api.query.rankedPolls.trackQueue`\n    \n*   **summary**: The sorted list of referenda ready to be decided but not yet being decided, ordered by conviction-weighted approvals.\n    \n    This should be empty if `DecidingCount` is less than `TrackInfo::max_deciding`.\n    \n\n* * *\n\nrecovery[\u200b](#recovery \"Direct link to recovery\")\n\n-------------------------------------------------\n\n### activeRecoveries(`AccountId32, AccountId32`): `Option<PalletRecoveryActiveRecovery>`[\u200b](#activerecoveriesaccountid32-accountid32-optionpalletrecoveryactiverecovery \"Direct link to activerecoveriesaccountid32-accountid32-optionpalletrecoveryactiverecovery\")\n\n*   **interface**: `api.query.recovery.activeRecoveries`\n    \n*   **summary**: Active recovery attempts.\n    \n    First account is the account to be recovered, and the second account is the user trying to recover the account.\n    \n\n### proxy(`AccountId32`): `Option<AccountId32>`[\u200b](#proxyaccountid32-optionaccountid32 \"Direct link to proxyaccountid32-optionaccountid32\")\n\n*   **interface**: `api.query.recovery.proxy`\n    \n*   **summary**: The list of allowed proxy accounts.\n    \n    Map from the user who can access it to the recovered account.\n    \n\n### recoverable(`AccountId32`): `Option<PalletRecoveryRecoveryConfig>`[\u200b](#recoverableaccountid32-optionpalletrecoveryrecoveryconfig \"Direct link to recoverableaccountid32-optionpalletrecoveryrecoveryconfig\")\n\n*   **interface**: `api.query.recovery.recoverable`\n*   **summary**: The set of recoverable accounts and their recovery configuration.\n\n* * *\n\nreferenda[\u200b](#referenda \"Direct link to referenda\")\n\n----------------------------------------------------\n\n### decidingCount(`u16`): `u32`[\u200b](#decidingcountu16-u32-1 \"Direct link to decidingcountu16-u32-1\")\n\n*   **interface**: `api.query.referenda.decidingCount`\n*   **summary**: The number of referenda being decided currently.\n\n### metadataOf(`u32`): `Option<H256>`[\u200b](#metadataofu32-optionh256-1 \"Direct link to metadataofu32-optionh256-1\")\n\n*   **interface**: `api.query.referenda.metadataOf`\n    \n*   **summary**: The metadata is a general information concerning the referendum. The `Hash` refers to the preimage of the `Preimages` provider which can be a JSON dump or IPFS hash of a JSON file.\n    \n    Consider a garbage collection for a metadata of finished referendums to `unrequest` (remove) large preimages.\n    \n\n### referendumCount(): `u32`[\u200b](#referendumcount-u32-2 \"Direct link to referendumcount-u32-2\")\n\n*   **interface**: `api.query.referenda.referendumCount`\n*   **summary**: The next free referendum index, aka the number of referenda started so far.\n\n### referendumInfoFor(`u32`): `Option<PalletReferendaReferendumInfoConvictionVotingTally>`[\u200b](#referenduminfoforu32-optionpalletreferendareferenduminfoconvictionvotingtally \"Direct link to referenduminfoforu32-optionpalletreferendareferenduminfoconvictionvotingtally\")\n\n*   **interface**: `api.query.referenda.referendumInfoFor`\n*   **summary**: Information concerning any given referendum.\n\n### trackQueue(`u16`): `Vec<(u32,u128)>`[\u200b](#trackqueueu16-vecu32u128 \"Direct link to trackqueueu16-vecu32u128\")\n\n*   **interface**: `api.query.referenda.trackQueue`\n    \n*   **summary**: The sorted list of referenda ready to be decided but not yet being decided, ordered by conviction-weighted approvals.\n    \n    This should be empty if `DecidingCount` is less than `TrackInfo::max_deciding`.\n    \n\n* * *\n\nsafeMode[\u200b](#safemode \"Direct link to safeMode\")\n\n-------------------------------------------------\n\n### deposits(`AccountId32, u32`): `Option<u128>`[\u200b](#depositsaccountid32-u32-optionu128 \"Direct link to depositsaccountid32-u32-optionu128\")\n\n*   **interface**: `api.query.safeMode.deposits`\n    \n*   **summary**: Holds the reserve that was taken from an account at a specific block number.\n    \n    This helps governance to have an overview of outstanding deposits that should be returned or slashed.\n    \n\n### enteredUntil(): `Option<u32>`[\u200b](#entereduntil-optionu32 \"Direct link to entereduntil-optionu32\")\n\n*   **interface**: `api.query.safeMode.enteredUntil`\n    \n*   **summary**: Contains the last block number that the safe-mode will remain entered in.\n    \n    Set to `None` when safe-mode is exited.\n    \n    Safe-mode is automatically exited when the current block number exceeds this value.\n    \n\n* * *\n\nsalary[\u200b](#salary \"Direct link to salary\")\n\n-------------------------------------------\n\n### claimant(`AccountId32`): `Option<PalletSalaryClaimantStatus>`[\u200b](#claimantaccountid32-optionpalletsalaryclaimantstatus \"Direct link to claimantaccountid32-optionpalletsalaryclaimantstatus\")\n\n*   **interface**: `api.query.salary.claimant`\n*   **summary**: The status of a claimant.\n\n### status(): `Option<PalletSalaryStatusType>`[\u200b](#status-optionpalletsalarystatustype \"Direct link to status-optionpalletsalarystatustype\")\n\n*   **interface**: `api.query.salary.status`\n*   **summary**: The overall status of the system.\n\n* * *\n\nscheduler[\u200b](#scheduler \"Direct link to scheduler\")\n\n----------------------------------------------------\n\n### agenda(`u32`): `Vec<Option<PalletSchedulerScheduled>>`[\u200b](#agendau32-vecoptionpalletschedulerscheduled \"Direct link to agendau32-vecoptionpalletschedulerscheduled\")\n\n*   **interface**: `api.query.scheduler.agenda`\n*   **summary**: Items to be executed, indexed by the block number that they should be executed on.\n\n### incompleteSince(): `Option<u32>`[\u200b](#incompletesince-optionu32 \"Direct link to incompletesince-optionu32\")\n\n*   **interface**: `api.query.scheduler.incompleteSince`\n\n### lookup(`[u8;32]`): `Option<(u32,u32)>`[\u200b](#lookupu832-optionu32u32 \"Direct link to lookupu832-optionu32u32\")\n\n*   **interface**: `api.query.scheduler.lookup`\n    \n*   **summary**: Lookup from a name to the block number and index of the task.\n    \n    For v3 -> v4 the previously unbounded identities are Blake2-256 hashed to form the v4 identities.\n    \n\n* * *\n\nsession[\u200b](#session \"Direct link to session\")\n\n----------------------------------------------\n\n### currentIndex(): `u32`[\u200b](#currentindex-u32 \"Direct link to currentindex-u32\")\n\n*   **interface**: `api.query.session.currentIndex`\n*   **summary**: Current index of the session.\n\n### disabledValidators(): `Vec<u32>`[\u200b](#disabledvalidators-vecu32 \"Direct link to disabledvalidators-vecu32\")\n\n*   **interface**: `api.query.session.disabledValidators`\n    \n*   **summary**: Indices of disabled validators.\n    \n    The vec is always kept sorted so that we can find whether a given validator is disabled using binary search. It gets cleared when `on_session_ending` returns a new set of identities.\n    \n\n### keyOwner(`(SpCoreCryptoKeyTypeId,Bytes)`): `Option<AccountId32>`[\u200b](#keyownerspcorecryptokeytypeidbytes-optionaccountid32 \"Direct link to keyownerspcorecryptokeytypeidbytes-optionaccountid32\")\n\n*   **interface**: `api.query.session.keyOwner`\n*   **summary**: The owner of a key. The key is the `KeyTypeId` + the encoded key.\n\n### nextKeys(`AccountId32`): `Option<KitchensinkRuntimeSessionKeys>`[\u200b](#nextkeysaccountid32-optionkitchensinkruntimesessionkeys \"Direct link to nextkeysaccountid32-optionkitchensinkruntimesessionkeys\")\n\n*   **interface**: `api.query.session.nextKeys`\n*   **summary**: The next session keys for a validator.\n\n### queuedChanged(): `bool`[\u200b](#queuedchanged-bool \"Direct link to queuedchanged-bool\")\n\n*   **interface**: `api.query.session.queuedChanged`\n*   **summary**: True if the underlying economic identities or weighting behind the validators has changed in the queued validator set.\n\n### queuedKeys(): `Vec<(AccountId32,KitchensinkRuntimeSessionKeys)>`[\u200b](#queuedkeys-vecaccountid32kitchensinkruntimesessionkeys \"Direct link to queuedkeys-vecaccountid32kitchensinkruntimesessionkeys\")\n\n*   **interface**: `api.query.session.queuedKeys`\n*   **summary**: The queued keys for the next session. When the next session begins, these keys will be used to determine the validator's session keys.\n\n### validators(): `Vec<AccountId32>`[\u200b](#validators-vecaccountid32 \"Direct link to validators-vecaccountid32\")\n\n*   **interface**: `api.query.session.validators`\n*   **summary**: The current set of validators.\n\n* * *\n\nsociety[\u200b](#society \"Direct link to society\")\n\n----------------------------------------------\n\n### bids(): `Vec<PalletSocietyBid>`[\u200b](#bids-vecpalletsocietybid \"Direct link to bids-vecpalletsocietybid\")\n\n*   **interface**: `api.query.society.bids`\n*   **summary**: The current bids, stored ordered by the value of the bid.\n\n### candidates(`AccountId32`): `Option<PalletSocietyCandidacy>`[\u200b](#candidatesaccountid32-optionpalletsocietycandidacy \"Direct link to candidatesaccountid32-optionpalletsocietycandidacy\")\n\n*   **interface**: `api.query.society.candidates`\n\n### challengeRoundCount(): `u32`[\u200b](#challengeroundcount-u32 \"Direct link to challengeroundcount-u32\")\n\n*   **interface**: `api.query.society.challengeRoundCount`\n*   **summary**: The number of challenge rounds there have been. Used to identify stale DefenderVotes.\n\n### defenderVotes(`u32, AccountId32`): `Option<PalletSocietyVote>`[\u200b](#defendervotesu32-accountid32-optionpalletsocietyvote \"Direct link to defendervotesu32-accountid32-optionpalletsocietyvote\")\n\n*   **interface**: `api.query.society.defenderVotes`\n*   **summary**: Votes for the defender, keyed by challenge round.\n\n### defending(): `Option<(AccountId32,AccountId32,PalletSocietyTally)>`[\u200b](#defending-optionaccountid32accountid32palletsocietytally \"Direct link to defending-optionaccountid32accountid32palletsocietytally\")\n\n*   **interface**: `api.query.society.defending`\n*   **summary**: The defending member currently being challenged, along with a running tally of votes.\n\n### founder(): `Option<AccountId32>`[\u200b](#founder-optionaccountid32 \"Direct link to founder-optionaccountid32\")\n\n*   **interface**: `api.query.society.founder`\n*   **summary**: The first member.\n\n### head(): `Option<AccountId32>`[\u200b](#head-optionaccountid32 \"Direct link to head-optionaccountid32\")\n\n*   **interface**: `api.query.society.head`\n*   **summary**: The most primary from the most recently approved rank 0 members in the society.\n\n### memberByIndex(`u32`): `Option<AccountId32>`[\u200b](#memberbyindexu32-optionaccountid32 \"Direct link to memberbyindexu32-optionaccountid32\")\n\n*   **interface**: `api.query.society.memberByIndex`\n*   **summary**: The current items in `Members` keyed by their unique index. Keys are densely populated `0..MemberCount` (does not include `MemberCount`).\n\n### memberCount(): `u32`[\u200b](#membercount-u32 \"Direct link to membercount-u32\")\n\n*   **interface**: `api.query.society.memberCount`\n*   **summary**: The number of items in `Members` currently. (Doesn't include `SuspendedMembers`.)\n\n### members(`AccountId32`): `Option<PalletSocietyMemberRecord>`[\u200b](#membersaccountid32-optionpalletsocietymemberrecord \"Direct link to membersaccountid32-optionpalletsocietymemberrecord\")\n\n*   **interface**: `api.query.society.members`\n*   **summary**: The current members and their rank. Doesn't include `SuspendedMembers`.\n\n### nextHead(): `Option<PalletSocietyIntakeRecord>`[\u200b](#nexthead-optionpalletsocietyintakerecord \"Direct link to nexthead-optionpalletsocietyintakerecord\")\n\n*   **interface**: `api.query.society.nextHead`\n*   **summary**: At the end of the claim period, this contains the most recently approved members (along with their bid and round ID) who is from the most recent round with the lowest bid. They will become the new `Head`.\n\n### parameters(): `Option<PalletSocietyGroupParams>`[\u200b](#parameters-optionpalletsocietygroupparams \"Direct link to parameters-optionpalletsocietygroupparams\")\n\n*   **interface**: `api.query.society.parameters`\n*   **summary**: The max number of members for the society at one time.\n\n### payouts(`AccountId32`): `PalletSocietyPayoutRecord`[\u200b](#payoutsaccountid32-palletsocietypayoutrecord \"Direct link to payoutsaccountid32-palletsocietypayoutrecord\")\n\n*   **interface**: `api.query.society.payouts`\n*   **summary**: Information regarding rank-0 payouts, past and future.\n\n### pot(): `u128`[\u200b](#pot-u128 \"Direct link to pot-u128\")\n\n*   **interface**: `api.query.society.pot`\n*   **summary**: Amount of our account balance that is specifically for the next round's bid(s).\n\n### roundCount(): `u32`[\u200b](#roundcount-u32 \"Direct link to roundcount-u32\")\n\n*   **interface**: `api.query.society.roundCount`\n*   **summary**: The number of rounds which have passed.\n\n### rules(): `Option<H256>`[\u200b](#rules-optionh256 \"Direct link to rules-optionh256\")\n\n*   **interface**: `api.query.society.rules`\n*   **summary**: A hash of the rules of this society concerning membership. Can only be set once and only by the founder.\n\n### skeptic(): `Option<AccountId32>`[\u200b](#skeptic-optionaccountid32 \"Direct link to skeptic-optionaccountid32\")\n\n*   **interface**: `api.query.society.skeptic`\n*   **summary**: The current skeptic.\n\n### suspendedMembers(`AccountId32`): `Option<PalletSocietyMemberRecord>`[\u200b](#suspendedmembersaccountid32-optionpalletsocietymemberrecord \"Direct link to suspendedmembersaccountid32-optionpalletsocietymemberrecord\")\n\n*   **interface**: `api.query.society.suspendedMembers`\n*   **summary**: The set of suspended members, with their old membership record.\n\n### voteClearCursor(`AccountId32`): `Option<Bytes>`[\u200b](#voteclearcursoraccountid32-optionbytes \"Direct link to voteclearcursoraccountid32-optionbytes\")\n\n*   **interface**: `api.query.society.voteClearCursor`\n*   **summary**: Clear-cursor for Vote, map from Candidate -> (Maybe) Cursor.\n\n### votes(`AccountId32, AccountId32`): `Option<PalletSocietyVote>`[\u200b](#votesaccountid32-accountid32-optionpalletsocietyvote \"Direct link to votesaccountid32-accountid32-optionpalletsocietyvote\")\n\n*   **interface**: `api.query.society.votes`\n*   **summary**: Double map from Candidate -> Voter -> (Maybe) Vote.\n\n* * *\n\nstaking[\u200b](#staking \"Direct link to staking\")\n\n----------------------------------------------\n\n### activeEra(): `Option<PalletStakingActiveEraInfo>`[\u200b](#activeera-optionpalletstakingactiveerainfo \"Direct link to activeera-optionpalletstakingactiveerainfo\")\n\n*   **interface**: `api.query.staking.activeEra`\n    \n*   **summary**: The active era information, it holds index and start.\n    \n    The active era is the era being currently rewarded. Validator set of this era must be equal to \\[`SessionInterface::validators`\\].\n    \n\n### bonded(`AccountId32`): `Option<AccountId32>`[\u200b](#bondedaccountid32-optionaccountid32 \"Direct link to bondedaccountid32-optionaccountid32\")\n\n*   **interface**: `api.query.staking.bonded`\n    \n*   **summary**: Map from all locked \"stash\" accounts to the controller account.\n    \n    TWOX-NOTE: SAFE since `AccountId` is a secure hash.\n    \n\n### bondedEras(): `Vec<(u32,u32)>`[\u200b](#bondederas-vecu32u32 \"Direct link to bondederas-vecu32u32\")\n\n*   **interface**: `api.query.staking.bondedEras`\n    \n*   **summary**: A mapping from still-bonded eras to the first session index of that era.\n    \n    Must contains information for eras for the range: `[active_era - bounding_duration; active_era]`\n    \n\n### canceledSlashPayout(): `u128`[\u200b](#canceledslashpayout-u128 \"Direct link to canceledslashpayout-u128\")\n\n*   **interface**: `api.query.staking.canceledSlashPayout`\n*   **summary**: The amount of currency given to reporters of a slash event which was canceled by extraordinary circumstances (e.g. governance).\n\n### chillThreshold(): `Option<Percent>`[\u200b](#chillthreshold-optionpercent \"Direct link to chillthreshold-optionpercent\")\n\n*   **interface**: `api.query.staking.chillThreshold`\n*   **summary**: The threshold for when users can start calling `chill_other` for other validators / nominators. The threshold is compared to the actual number of validators / nominators (`CountFor*`) in the system compared to the configured max (`Max*Count`).\n\n### claimedRewards(`u32, AccountId32`): `Vec<u32>`[\u200b](#claimedrewardsu32-accountid32-vecu32 \"Direct link to claimedrewardsu32-accountid32-vecu32\")\n\n*   **interface**: `api.query.staking.claimedRewards`\n    \n*   **summary**: History of claimed paged rewards by era and validator.\n    \n    This is keyed by era and validator stash which maps to the set of page indexes which have been claimed.\n    \n    It is removed after \\[`Config::HistoryDepth`\\] eras.\n    \n\n### counterForNominators(): `u32`[\u200b](#counterfornominators-u32 \"Direct link to counterfornominators-u32\")\n\n*   **interface**: `api.query.staking.counterForNominators`\n*   **summary**: Counter for the related counted storage map\n\n### counterForValidators(): `u32`[\u200b](#counterforvalidators-u32 \"Direct link to counterforvalidators-u32\")\n\n*   **interface**: `api.query.staking.counterForValidators`\n*   **summary**: Counter for the related counted storage map\n\n### currentEra(): `Option<u32>`[\u200b](#currentera-optionu32 \"Direct link to currentera-optionu32\")\n\n*   **interface**: `api.query.staking.currentEra`\n    \n*   **summary**: The current era index.\n    \n    This is the latest planned era, depending on how the Session pallet queues the validator set, it might be active or not.\n    \n\n### currentPlannedSession(): `u32`[\u200b](#currentplannedsession-u32 \"Direct link to currentplannedsession-u32\")\n\n*   **interface**: `api.query.staking.currentPlannedSession`\n    \n*   **summary**: The last planned session scheduled by the session pallet.\n    \n    This is basically in sync with the call to \\[`pallet_session::SessionManager::new_session`\\].\n    \n\n### erasRewardPoints(`u32`): `PalletStakingEraRewardPoints`[\u200b](#erasrewardpointsu32-palletstakingerarewardpoints \"Direct link to erasrewardpointsu32-palletstakingerarewardpoints\")\n\n*   **interface**: `api.query.staking.erasRewardPoints`\n*   **summary**: Rewards for the last \\[`Config::HistoryDepth`\\] eras. If reward hasn't been set or has been removed then 0 reward is returned.\n\n### erasStakers(`u32, AccountId32`): `SpStakingExposure`[\u200b](#erasstakersu32-accountid32-spstakingexposure \"Direct link to erasstakersu32-accountid32-spstakingexposure\")\n\n*   **interface**: `api.query.staking.erasStakers`\n    \n*   **summary**: Exposure of validator at era.\n    \n    This is keyed first by the era index to allow bulk deletion and then the stash account.\n    \n    Is it removed after \\[`Config::HistoryDepth`\\] eras. If stakers hasn't been set or has been removed then empty exposure is returned.\n    \n    Note: Deprecated since v14. Use `EraInfo` instead to work with exposures.\n    \n\n### erasStakersClipped(`u32, AccountId32`): `SpStakingExposure`[\u200b](#erasstakersclippedu32-accountid32-spstakingexposure \"Direct link to erasstakersclippedu32-accountid32-spstakingexposure\")\n\n*   **interface**: `api.query.staking.erasStakersClipped`\n    \n*   **summary**: Clipped Exposure of validator at era.\n    \n    Note: This is deprecated, should be used as read-only and will be removed in the future. New `Exposure`s are stored in a paged manner in `ErasStakersPaged` instead.\n    \n    This is similar to \\[`ErasStakers`\\] but number of nominators exposed is reduced to the `T::MaxExposurePageSize` biggest stakers. (Note: the field `total` and `own` of the exposure remains unchanged). This is used to limit the i/o cost for the nominator payout.\n    \n    This is keyed fist by the era index to allow bulk deletion and then the stash account.\n    \n    It is removed after \\[`Config::HistoryDepth`\\] eras. If stakers hasn't been set or has been removed then empty exposure is returned.\n    \n    Note: Deprecated since v14. Use `EraInfo` instead to work with exposures.\n    \n\n### erasStakersOverview(`u32, AccountId32`): `Option<SpStakingPagedExposureMetadata>`[\u200b](#erasstakersoverviewu32-accountid32-optionspstakingpagedexposuremetadata \"Direct link to erasstakersoverviewu32-accountid32-optionspstakingpagedexposuremetadata\")\n\n*   **interface**: `api.query.staking.erasStakersOverview`\n    \n*   **summary**: Summary of validator exposure at a given era.\n    \n    This contains the total stake in support of the validator and their own stake. In addition, it can also be used to get the number of nominators backing this validator and the number of exposure pages they are divided into. The page count is useful to determine the number of pages of rewards that needs to be claimed.\n    \n    This is keyed first by the era index to allow bulk deletion and then the stash account. Should only be accessed through `EraInfo`.\n    \n    Is it removed after \\[`Config::HistoryDepth`\\] eras. If stakers hasn't been set or has been removed then empty overview is returned.\n    \n\n### erasStakersPaged(`u32, AccountId32, u32`): `Option<SpStakingExposurePage>`[\u200b](#erasstakerspagedu32-accountid32-u32-optionspstakingexposurepage \"Direct link to erasstakerspagedu32-accountid32-u32-optionspstakingexposurepage\")\n\n*   **interface**: `api.query.staking.erasStakersPaged`\n    \n*   **summary**: Paginated exposure of a validator at given era.\n    \n    This is keyed first by the era index to allow bulk deletion, then stash account and finally the page. Should only be accessed through `EraInfo`.\n    \n    This is cleared after \\[`Config::HistoryDepth`\\] eras.\n    \n\n### erasStartSessionIndex(`u32`): `Option<u32>`[\u200b](#erasstartsessionindexu32-optionu32 \"Direct link to erasstartsessionindexu32-optionu32\")\n\n*   **interface**: `api.query.staking.erasStartSessionIndex`\n    \n*   **summary**: The session index at which the era start for the last \\[`Config::HistoryDepth`\\] eras.\n    \n    Note: This tracks the starting session (i.e. session index when era start being active) for the eras in `[CurrentEra - HISTORY_DEPTH, CurrentEra]`.\n    \n\n### erasTotalStake(`u32`): `u128`[\u200b](#erastotalstakeu32-u128 \"Direct link to erastotalstakeu32-u128\")\n\n*   **interface**: `api.query.staking.erasTotalStake`\n*   **summary**: The total amount staked for the last \\[`Config::HistoryDepth`\\] eras. If total hasn't been set or has been removed then 0 stake is returned.\n\n### erasValidatorPrefs(`u32, AccountId32`): `PalletStakingValidatorPrefs`[\u200b](#erasvalidatorprefsu32-accountid32-palletstakingvalidatorprefs \"Direct link to erasvalidatorprefsu32-accountid32-palletstakingvalidatorprefs\")\n\n*   **interface**: `api.query.staking.erasValidatorPrefs`\n    \n*   **summary**: Similar to `ErasStakers`, this holds the preferences of validators.\n    \n    This is keyed first by the era index to allow bulk deletion and then the stash account.\n    \n    Is it removed after \\[`Config::HistoryDepth`\\] eras.\n    \n\n### erasValidatorReward(`u32`): `Option<u128>`[\u200b](#erasvalidatorrewardu32-optionu128 \"Direct link to erasvalidatorrewardu32-optionu128\")\n\n*   **interface**: `api.query.staking.erasValidatorReward`\n    \n*   **summary**: The total validator era payout for the last \\[`Config::HistoryDepth`\\] eras.\n    \n    Eras that haven't finished yet or has been removed doesn't have reward.\n    \n\n### forceEra(): `PalletStakingForcing`[\u200b](#forceera-palletstakingforcing \"Direct link to forceera-palletstakingforcing\")\n\n*   **interface**: `api.query.staking.forceEra`\n*   **summary**: Mode of era forcing.\n\n### invulnerables(): `Vec<AccountId32>`[\u200b](#invulnerables-vecaccountid32 \"Direct link to invulnerables-vecaccountid32\")\n\n*   **interface**: `api.query.staking.invulnerables`\n*   **summary**: Any validators that may never be slashed or forcibly kicked. It's a Vec since they're easy to initialize and the performance hit is minimal (we expect no more than four invulnerables) and restricted to testnets.\n\n### ledger(`AccountId32`): `Option<PalletStakingStakingLedger>`[\u200b](#ledgeraccountid32-optionpalletstakingstakingledger \"Direct link to ledgeraccountid32-optionpalletstakingstakingledger\")\n\n*   **interface**: `api.query.staking.ledger`\n    \n*   **summary**: Map from all (unlocked) \"controller\" accounts to the info regarding the staking.\n    \n    Note: All the reads and mutations to this storage _MUST_ be done through the methods exposed by \\[`StakingLedger`\\] to ensure data and lock consistency.\n    \n\n### maxNominatorsCount(): `Option<u32>`[\u200b](#maxnominatorscount-optionu32 \"Direct link to maxnominatorscount-optionu32\")\n\n*   **interface**: `api.query.staking.maxNominatorsCount`\n    \n*   **summary**: The maximum nominator count before we stop allowing new validators to join.\n    \n    When this value is not set, no limits are enforced.\n    \n\n### maxValidatorsCount(): `Option<u32>`[\u200b](#maxvalidatorscount-optionu32 \"Direct link to maxvalidatorscount-optionu32\")\n\n*   **interface**: `api.query.staking.maxValidatorsCount`\n    \n*   **summary**: The maximum validator count before we stop allowing new validators to join.\n    \n    When this value is not set, no limits are enforced.\n    \n\n### minCommission(): `Perbill`[\u200b](#mincommission-perbill \"Direct link to mincommission-perbill\")\n\n*   **interface**: `api.query.staking.minCommission`\n    \n*   **summary**: The minimum amount of commission that validators can set.\n    \n    If set to `0`, no limit exists.\n    \n\n### minimumActiveStake(): `u128`[\u200b](#minimumactivestake-u128 \"Direct link to minimumactivestake-u128\")\n\n*   **interface**: `api.query.staking.minimumActiveStake`\n*   **summary**: The minimum active nominator stake of the last successful election.\n\n### minimumValidatorCount(): `u32`[\u200b](#minimumvalidatorcount-u32 \"Direct link to minimumvalidatorcount-u32\")\n\n*   **interface**: `api.query.staking.minimumValidatorCount`\n*   **summary**: Minimum number of staking participants before emergency conditions are imposed.\n\n### minNominatorBond(): `u128`[\u200b](#minnominatorbond-u128 \"Direct link to minnominatorbond-u128\")\n\n*   **interface**: `api.query.staking.minNominatorBond`\n*   **summary**: The minimum active bond to become and maintain the role of a nominator.\n\n### minValidatorBond(): `u128`[\u200b](#minvalidatorbond-u128 \"Direct link to minvalidatorbond-u128\")\n\n*   **interface**: `api.query.staking.minValidatorBond`\n*   **summary**: The minimum active bond to become and maintain the role of a validator.\n\n### nominators(`AccountId32`): `Option<PalletStakingNominations>`[\u200b](#nominatorsaccountid32-optionpalletstakingnominations \"Direct link to nominatorsaccountid32-optionpalletstakingnominations\")\n\n*   **interface**: `api.query.staking.nominators`\n    \n*   **summary**: The map from nominator stash key to their nomination preferences, namely the validators that they wish to support.\n    \n    Note that the keys of this storage map might become non-decodable in case the account's \\[`NominationsQuota::MaxNominations`\\] configuration is decreased. In this rare case, these nominators are still existent in storage, their key is correct and retrievable (i.e. `contains_key` indicates that they exist), but their value cannot be decoded. Therefore, the non-decodable nominators will effectively not-exist, until they re-submit their preferences such that it is within the bounds of the newly set `Config::MaxNominations`.\n    \n    This implies that `::iter_keys().count()` and `::iter().count()` might return different values for this map. Moreover, the main `::count()` is aligned with the former, namely the number of keys that exist.\n    \n    Lastly, if any of the nominators become non-decodable, they can be chilled immediately via \\[`Call::chill_other`\\] dispatchable by anyone.\n    \n    TWOX-NOTE: SAFE since `AccountId` is a secure hash.\n    \n\n### nominatorSlashInEra(`u32, AccountId32`): `Option<u128>`[\u200b](#nominatorslashinerau32-accountid32-optionu128 \"Direct link to nominatorslashinerau32-accountid32-optionu128\")\n\n*   **interface**: `api.query.staking.nominatorSlashInEra`\n*   **summary**: All slashing events on nominators, mapped by era to the highest slash value of the era.\n\n### offendingValidators(): `Vec<(u32,bool)>`[\u200b](#offendingvalidators-vecu32bool \"Direct link to offendingvalidators-vecu32bool\")\n\n*   **interface**: `api.query.staking.offendingValidators`\n    \n*   **summary**: Indices of validators that have offended in the active era and whether they are currently disabled.\n    \n    This value should be a superset of disabled validators since not all offences lead to the validator being disabled (if there was no slash). This is needed to track the percentage of validators that have offended in the current era, ensuring a new era is forced if `OffendingValidatorsThreshold` is reached. The vec is always kept sorted so that we can find whether a given validator has previously offended using binary search. It gets cleared when the era ends.\n    \n\n### payee(`AccountId32`): `PalletStakingRewardDestination`[\u200b](#payeeaccountid32-palletstakingrewarddestination \"Direct link to payeeaccountid32-palletstakingrewarddestination\")\n\n*   **interface**: `api.query.staking.payee`\n    \n*   **summary**: Where the reward payment should be made. Keyed by stash.\n    \n    TWOX-NOTE: SAFE since `AccountId` is a secure hash.\n    \n\n### slashingSpans(`AccountId32`): `Option<PalletStakingSlashingSlashingSpans>`[\u200b](#slashingspansaccountid32-optionpalletstakingslashingslashingspans \"Direct link to slashingspansaccountid32-optionpalletstakingslashingslashingspans\")\n\n*   **interface**: `api.query.staking.slashingSpans`\n*   **summary**: Slashing spans for stash accounts.\n\n### slashRewardFraction(): `Perbill`[\u200b](#slashrewardfraction-perbill \"Direct link to slashrewardfraction-perbill\")\n\n*   **interface**: `api.query.staking.slashRewardFraction`\n    \n*   **summary**: The percentage of the slash that is distributed to reporters.\n    \n    The rest of the slashed value is handled by the `Slash`.\n    \n\n### spanSlash(`(AccountId32,u32)`): `PalletStakingSlashingSpanRecord`[\u200b](#spanslashaccountid32u32-palletstakingslashingspanrecord \"Direct link to spanslashaccountid32u32-palletstakingslashingspanrecord\")\n\n*   **interface**: `api.query.staking.spanSlash`\n*   **summary**: Records information about the maximum slash of a stash within a slashing span, as well as how much reward has been paid out.\n\n### unappliedSlashes(`u32`): `Vec<PalletStakingUnappliedSlash>`[\u200b](#unappliedslashesu32-vecpalletstakingunappliedslash \"Direct link to unappliedslashesu32-vecpalletstakingunappliedslash\")\n\n*   **interface**: `api.query.staking.unappliedSlashes`\n*   **summary**: All unapplied slashes that are queued for later.\n\n### validatorCount(): `u32`[\u200b](#validatorcount-u32 \"Direct link to validatorcount-u32\")\n\n*   **interface**: `api.query.staking.validatorCount`\n*   **summary**: The ideal number of active validators.\n\n### validators(`AccountId32`): `PalletStakingValidatorPrefs`[\u200b](#validatorsaccountid32-palletstakingvalidatorprefs \"Direct link to validatorsaccountid32-palletstakingvalidatorprefs\")\n\n*   **interface**: `api.query.staking.validators`\n    \n*   **summary**: The map from (wannabe) validator stash key to the preferences of that validator.\n    \n    TWOX-NOTE: SAFE since `AccountId` is a secure hash.\n    \n\n### validatorSlashInEra(`u32, AccountId32`): `Option<(Perbill,u128)>`[\u200b](#validatorslashinerau32-accountid32-optionperbillu128 \"Direct link to validatorslashinerau32-accountid32-optionperbillu128\")\n\n*   **interface**: `api.query.staking.validatorSlashInEra`\n*   **summary**: All slashing events on validators, mapped by era to the highest slash proportion and slash value of the era.\n\n* * *\n\nstateTrieMigration[\u200b](#statetriemigration \"Direct link to stateTrieMigration\")\n\n-------------------------------------------------------------------------------\n\n### autoLimits(): `Option<PalletStateTrieMigrationMigrationLimits>`[\u200b](#autolimits-optionpalletstatetriemigrationmigrationlimits \"Direct link to autolimits-optionpalletstatetriemigrationmigrationlimits\")\n\n*   **interface**: `api.query.stateTrieMigration.autoLimits`\n    \n*   **summary**: The limits that are imposed on automatic migrations.\n    \n    If set to None, then no automatic migration happens.\n    \n\n### migrationProcess(): `PalletStateTrieMigrationMigrationTask`[\u200b](#migrationprocess-palletstatetriemigrationmigrationtask \"Direct link to migrationprocess-palletstatetriemigrationmigrationtask\")\n\n*   **interface**: `api.query.stateTrieMigration.migrationProcess`\n    \n*   **summary**: Migration progress.\n    \n    This stores the snapshot of the last migrated keys. It can be set into motion and move forward by any of the means provided by this pallet.\n    \n\n### signedMigrationMaxLimits(): `Option<PalletStateTrieMigrationMigrationLimits>`[\u200b](#signedmigrationmaxlimits-optionpalletstatetriemigrationmigrationlimits \"Direct link to signedmigrationmaxlimits-optionpalletstatetriemigrationmigrationlimits\")\n\n*   **interface**: `api.query.stateTrieMigration.signedMigrationMaxLimits`\n    \n*   **summary**: The maximum limits that the signed migration could use.\n    \n    If not set, no signed submission is allowed.\n    \n\n* * *\n\nsubstrate[\u200b](#substrate \"Direct link to substrate\")\n\n----------------------------------------------------\n\n_These are well-known keys that are always available to the runtime implementation of any Substrate-based network._\n\n### changesTrieConfig(): `u32`[\u200b](#changestrieconfig-u32 \"Direct link to changestrieconfig-u32\")\n\n*   **interface**: `api.query.substrate.changesTrieConfig`\n*   **summary**: Changes trie configuration is stored under this key.\n\n### childStorageKeyPrefix(): `u32`[\u200b](#childstoragekeyprefix-u32 \"Direct link to childstoragekeyprefix-u32\")\n\n*   **interface**: `api.query.substrate.childStorageKeyPrefix`\n*   **summary**: Prefix of child storage keys.\n\n### code(): `Bytes`[\u200b](#code-bytes \"Direct link to code-bytes\")\n\n*   **interface**: `api.query.substrate.code`\n*   **summary**: Wasm code of the runtime.\n\n### extrinsicIndex(): `u32`[\u200b](#extrinsicindex-u32 \"Direct link to extrinsicindex-u32\")\n\n*   **interface**: `api.query.substrate.extrinsicIndex`\n*   **summary**: Current extrinsic index (u32) is stored under this key.\n\n### heapPages(): `u64`[\u200b](#heappages-u64 \"Direct link to heappages-u64\")\n\n*   **interface**: `api.query.substrate.heapPages`\n*   **summary**: Number of wasm linear memory pages required for execution of the runtime.\n\n### intrablockEntropy(): `[u8;32]`[\u200b](#intrablockentropy-u832 \"Direct link to intrablockentropy-u832\")\n\n*   **interface**: `api.query.substrate.intrablockEntropy`\n*   **summary**: Current intra-block entropy (a universally unique `[u8; 32]` value) is stored here.\n\n* * *\n\nsudo[\u200b](#sudo \"Direct link to sudo\")\n\n-------------------------------------\n\n### key(): `Option<AccountId32>`[\u200b](#key-optionaccountid32 \"Direct link to key-optionaccountid32\")\n\n*   **interface**: `api.query.sudo.key`\n*   **summary**: The `AccountId` of the sudo key.\n\n* * *\n\nsystem[\u200b](#system \"Direct link to system\")\n\n-------------------------------------------\n\n### account(`AccountId32`): `FrameSystemAccountInfo`[\u200b](#accountaccountid32-framesystemaccountinfo \"Direct link to accountaccountid32-framesystemaccountinfo\")\n\n*   **interface**: `api.query.system.account`\n*   **summary**: The full account information for a particular account ID.\n\n### allExtrinsicsLen(): `Option<u32>`[\u200b](#allextrinsicslen-optionu32 \"Direct link to allextrinsicslen-optionu32\")\n\n*   **interface**: `api.query.system.allExtrinsicsLen`\n*   **summary**: Total length (in bytes) for all extrinsics put together, for the current block.\n\n### blockHash(`u32`): `H256`[\u200b](#blockhashu32-h256 \"Direct link to blockhashu32-h256\")\n\n*   **interface**: `api.query.system.blockHash`\n*   **summary**: Map of block numbers to block hashes.\n\n### blockWeight(): `FrameSupportDispatchPerDispatchClassWeight`[\u200b](#blockweight-framesupportdispatchperdispatchclassweight \"Direct link to blockweight-framesupportdispatchperdispatchclassweight\")\n\n*   **interface**: `api.query.system.blockWeight`\n*   **summary**: The current weight for the block.\n\n### digest(): `SpRuntimeDigest`[\u200b](#digest-spruntimedigest \"Direct link to digest-spruntimedigest\")\n\n*   **interface**: `api.query.system.digest`\n*   **summary**: Digest of the current block, also part of the block header.\n\n### eventCount(): `u32`[\u200b](#eventcount-u32 \"Direct link to eventcount-u32\")\n\n*   **interface**: `api.query.system.eventCount`\n*   **summary**: The number of events in the `Events<T>` list.\n\n### events(): `Vec<FrameSystemEventRecord>`[\u200b](#events-vecframesystemeventrecord \"Direct link to events-vecframesystemeventrecord\")\n\n*   **interface**: `api.query.system.events`\n    \n*   **summary**: Events deposited for the current block.\n    \n    NOTE: The item is unbound and should therefore never be read on chain. It could otherwise inflate the PoV size of a block.\n    \n    Events have a large in-memory size. Box the events to not go out-of-memory just in case someone still reads them from within the runtime.\n    \n\n### eventTopics(`H256`): `Vec<(u32,u32)>`[\u200b](#eventtopicsh256-vecu32u32 \"Direct link to eventtopicsh256-vecu32u32\")\n\n*   **interface**: `api.query.system.eventTopics`\n    \n*   **summary**: Mapping between a topic (represented by T::Hash) and a vector of indexes of events in the `<Events<T>>` list.\n    \n    All topic vectors have deterministic storage locations depending on the topic. This allows light-clients to leverage the changes trie storage tracking mechanism and in case of changes fetch the list of events of interest.\n    \n    The value has the type `(BlockNumberFor<T>, EventIndex)` because if we used only just the `EventIndex` then in case if the topic has the same contents on the next block no notification will be triggered thus the event might be lost.\n    \n\n### executionPhase(): `Option<FrameSystemPhase>`[\u200b](#executionphase-optionframesystemphase \"Direct link to executionphase-optionframesystemphase\")\n\n*   **interface**: `api.query.system.executionPhase`\n*   **summary**: The execution phase of the block.\n\n### extrinsicCount(): `Option<u32>`[\u200b](#extrinsiccount-optionu32 \"Direct link to extrinsiccount-optionu32\")\n\n*   **interface**: `api.query.system.extrinsicCount`\n*   **summary**: Total extrinsics count for the current block.\n\n### extrinsicData(`u32`): `Bytes`[\u200b](#extrinsicdatau32-bytes \"Direct link to extrinsicdatau32-bytes\")\n\n*   **interface**: `api.query.system.extrinsicData`\n*   **summary**: Extrinsics data for the current block (maps an extrinsic's index to its data).\n\n### lastRuntimeUpgrade(): `Option<FrameSystemLastRuntimeUpgradeInfo>`[\u200b](#lastruntimeupgrade-optionframesystemlastruntimeupgradeinfo \"Direct link to lastruntimeupgrade-optionframesystemlastruntimeupgradeinfo\")\n\n*   **interface**: `api.query.system.lastRuntimeUpgrade`\n*   **summary**: Stores the `spec_version` and `spec_name` of when the last runtime upgrade happened.\n\n### number(): `u32`[\u200b](#number-u32 \"Direct link to number-u32\")\n\n*   **interface**: `api.query.system.number`\n*   **summary**: The current block number being processed. Set by `execute_block`.\n\n### parentHash(): `H256`[\u200b](#parenthash-h256 \"Direct link to parenthash-h256\")\n\n*   **interface**: `api.query.system.parentHash`\n*   **summary**: Hash of the previous block.\n\n### upgradedToTripleRefCount(): `bool`[\u200b](#upgradedtotriplerefcount-bool \"Direct link to upgradedtotriplerefcount-bool\")\n\n*   **interface**: `api.query.system.upgradedToTripleRefCount`\n*   **summary**: True if we have upgraded so that AccountInfo contains three types of `RefCount`. False (default) if not.\n\n### upgradedToU32RefCount(): `bool`[\u200b](#upgradedtou32refcount-bool \"Direct link to upgradedtou32refcount-bool\")\n\n*   **interface**: `api.query.system.upgradedToU32RefCount`\n*   **summary**: True if we have upgraded so that `type RefCount` is `u32`. False (default) if not.\n\n* * *\n\ntasksExample[\u200b](#tasksexample \"Direct link to tasksExample\")\n\n-------------------------------------------------------------\n\n### numbers(`u32`): `Option<u32>`[\u200b](#numbersu32-optionu32 \"Direct link to numbersu32-optionu32\")\n\n*   **interface**: `api.query.tasksExample.numbers`\n*   **summary**: Numbers to be added into the total.\n\n### total(): `(u32,u32)`[\u200b](#total-u32u32 \"Direct link to total-u32u32\")\n\n*   **interface**: `api.query.tasksExample.total`\n*   **summary**: Some running total.\n\n* * *\n\ntechnicalCommittee[\u200b](#technicalcommittee \"Direct link to technicalCommittee\")\n\n-------------------------------------------------------------------------------\n\n### members(): `Vec<AccountId32>`[\u200b](#members-vecaccountid32-2 \"Direct link to members-vecaccountid32-2\")\n\n*   **interface**: `api.query.technicalCommittee.members`\n*   **summary**: The current members of the collective. This is stored sorted (just by value).\n\n### prime(): `Option<AccountId32>`[\u200b](#prime-optionaccountid32-2 \"Direct link to prime-optionaccountid32-2\")\n\n*   **interface**: `api.query.technicalCommittee.prime`\n*   **summary**: The prime member that helps determine the default vote behavior in case of absentations.\n\n### proposalCount(): `u32`[\u200b](#proposalcount-u32-2 \"Direct link to proposalcount-u32-2\")\n\n*   **interface**: `api.query.technicalCommittee.proposalCount`\n*   **summary**: Proposals so far.\n\n### proposalOf(`H256`): `Option<Call>`[\u200b](#proposalofh256-optioncall-2 \"Direct link to proposalofh256-optioncall-2\")\n\n*   **interface**: `api.query.technicalCommittee.proposalOf`\n*   **summary**: Actual proposal for a given hash, if it's current.\n\n### proposals(): `Vec<H256>`[\u200b](#proposals-vech256-2 \"Direct link to proposals-vech256-2\")\n\n*   **interface**: `api.query.technicalCommittee.proposals`\n*   **summary**: The hashes of the active proposals.\n\n### voting(`H256`): `Option<PalletCollectiveVotes>`[\u200b](#votingh256-optionpalletcollectivevotes-2 \"Direct link to votingh256-optionpalletcollectivevotes-2\")\n\n*   **interface**: `api.query.technicalCommittee.voting`\n*   **summary**: Votes on a given proposal, if it is ongoing.\n\n* * *\n\ntechnicalMembership[\u200b](#technicalmembership \"Direct link to technicalMembership\")\n\n----------------------------------------------------------------------------------\n\n### members(): `Vec<AccountId32>`[\u200b](#members-vecaccountid32-3 \"Direct link to members-vecaccountid32-3\")\n\n*   **interface**: `api.query.technicalMembership.members`\n*   **summary**: The current membership, stored as an ordered Vec.\n\n### prime(): `Option<AccountId32>`[\u200b](#prime-optionaccountid32-3 \"Direct link to prime-optionaccountid32-3\")\n\n*   **interface**: `api.query.technicalMembership.prime`\n*   **summary**: The current prime member, if one exists.\n\n* * *\n\ntimestamp[\u200b](#timestamp \"Direct link to timestamp\")\n\n----------------------------------------------------\n\n### didUpdate(): `bool`[\u200b](#didupdate-bool \"Direct link to didupdate-bool\")\n\n*   **interface**: `api.query.timestamp.didUpdate`\n    \n*   **summary**: Whether the timestamp has been updated in this block.\n    \n    This value is updated to `true` upon successful submission of a timestamp by a node. It is then checked at the end of each block execution in the `on_finalize` hook.\n    \n\n### now(): `u64`[\u200b](#now-u64 \"Direct link to now-u64\")\n\n*   **interface**: `api.query.timestamp.now`\n*   **summary**: The current time for the current block.\n\n* * *\n\ntips[\u200b](#tips \"Direct link to tips\")\n\n-------------------------------------\n\n### reasons(`H256`): `Option<Bytes>`[\u200b](#reasonsh256-optionbytes \"Direct link to reasonsh256-optionbytes\")\n\n*   **interface**: `api.query.tips.reasons`\n*   **summary**: Simple preimage lookup from the reason's hash to the original data. Again, has an insecure enumerable hash since the key is guaranteed to be the result of a secure hash.\n\n### tips(`H256`): `Option<PalletTipsOpenTip>`[\u200b](#tipsh256-optionpallettipsopentip \"Direct link to tipsh256-optionpallettipsopentip\")\n\n*   **interface**: `api.query.tips.tips`\n*   **summary**: TipsMap that are not yet completed. Keyed by the hash of `(reason, who)` from the value. This has the insecure enumerable hash function since the key itself is already guaranteed to be a secure hash.\n\n* * *\n\ntransactionPayment[\u200b](#transactionpayment \"Direct link to transactionPayment\")\n\n-------------------------------------------------------------------------------\n\n### nextFeeMultiplier(): `u128`[\u200b](#nextfeemultiplier-u128 \"Direct link to nextfeemultiplier-u128\")\n\n*   **interface**: `api.query.transactionPayment.nextFeeMultiplier`\n\n### storageVersion(): `PalletTransactionPaymentReleases`[\u200b](#storageversion-pallettransactionpaymentreleases \"Direct link to storageversion-pallettransactionpaymentreleases\")\n\n*   **interface**: `api.query.transactionPayment.storageVersion`\n\n* * *\n\ntransactionStorage[\u200b](#transactionstorage \"Direct link to transactionStorage\")\n\n-------------------------------------------------------------------------------\n\n### blockTransactions(): `Vec<PalletTransactionStorageTransactionInfo>`[\u200b](#blocktransactions-vecpallettransactionstoragetransactioninfo \"Direct link to blocktransactions-vecpallettransactionstoragetransactioninfo\")\n\n*   **interface**: `api.query.transactionStorage.blockTransactions`\n\n### byteFee(): `Option<u128>`[\u200b](#bytefee-optionu128 \"Direct link to bytefee-optionu128\")\n\n*   **interface**: `api.query.transactionStorage.byteFee`\n*   **summary**: Storage fee per byte.\n\n### chunkCount(`u32`): `u32`[\u200b](#chunkcountu32-u32 \"Direct link to chunkcountu32-u32\")\n\n*   **interface**: `api.query.transactionStorage.chunkCount`\n*   **summary**: Count indexed chunks for each block.\n\n### entryFee(): `Option<u128>`[\u200b](#entryfee-optionu128 \"Direct link to entryfee-optionu128\")\n\n*   **interface**: `api.query.transactionStorage.entryFee`\n*   **summary**: Storage fee per transaction.\n\n### proofChecked(): `bool`[\u200b](#proofchecked-bool \"Direct link to proofchecked-bool\")\n\n*   **interface**: `api.query.transactionStorage.proofChecked`\n*   **summary**: Was the proof checked in this block?\n\n### storagePeriod(): `u32`[\u200b](#storageperiod-u32 \"Direct link to storageperiod-u32\")\n\n*   **interface**: `api.query.transactionStorage.storagePeriod`\n*   **summary**: Storage period for data in blocks. Should match `sp_storage_proof::DEFAULT_STORAGE_PERIOD` for block authoring.\n\n### transactions(`u32`): `Option<Vec<PalletTransactionStorageTransactionInfo>>`[\u200b](#transactionsu32-optionvecpallettransactionstoragetransactioninfo \"Direct link to transactionsu32-optionvecpallettransactionstoragetransactioninfo\")\n\n*   **interface**: `api.query.transactionStorage.transactions`\n*   **summary**: Collection of transaction metadata by block number.\n\n* * *\n\ntreasury[\u200b](#treasury \"Direct link to treasury\")\n\n-------------------------------------------------\n\n### approvals(): `Vec<u32>`[\u200b](#approvals-vecu32 \"Direct link to approvals-vecu32\")\n\n*   **interface**: `api.query.treasury.approvals`\n*   **summary**: Proposal indices that have been approved but not yet awarded.\n\n### deactivated(): `u128`[\u200b](#deactivated-u128 \"Direct link to deactivated-u128\")\n\n*   **interface**: `api.query.treasury.deactivated`\n*   **summary**: The amount which has been reported as inactive to Currency.\n\n### proposalCount(): `u32`[\u200b](#proposalcount-u32-3 \"Direct link to proposalcount-u32-3\")\n\n*   **interface**: `api.query.treasury.proposalCount`\n*   **summary**: Number of proposals that have been made.\n\n### proposals(`u32`): `Option<PalletTreasuryProposal>`[\u200b](#proposalsu32-optionpallettreasuryproposal \"Direct link to proposalsu32-optionpallettreasuryproposal\")\n\n*   **interface**: `api.query.treasury.proposals`\n*   **summary**: Proposals that have been made.\n\n### spendCount(): `u32`[\u200b](#spendcount-u32 \"Direct link to spendcount-u32\")\n\n*   **interface**: `api.query.treasury.spendCount`\n*   **summary**: The count of spends that have been made.\n\n### spends(`u32`): `Option<PalletTreasurySpendStatus>`[\u200b](#spendsu32-optionpallettreasuryspendstatus \"Direct link to spendsu32-optionpallettreasuryspendstatus\")\n\n*   **interface**: `api.query.treasury.spends`\n*   **summary**: Spends that have been approved and being processed.\n\n* * *\n\ntxPause[\u200b](#txpause \"Direct link to txPause\")\n\n----------------------------------------------\n\n### pausedCalls(`(Bytes,Bytes)`): `Option<Null>`[\u200b](#pausedcallsbytesbytes-optionnull \"Direct link to pausedcallsbytesbytes-optionnull\")\n\n*   **interface**: `api.query.txPause.pausedCalls`\n*   **summary**: The set of calls that are explicitly paused.\n\n* * *\n\nuniques[\u200b](#uniques \"Direct link to uniques\")\n\n----------------------------------------------\n\n### account(`AccountId32, u32, u32`): `Option<Null>`[\u200b](#accountaccountid32-u32-u32-optionnull-1 \"Direct link to accountaccountid32-u32-u32-optionnull-1\")\n\n*   **interface**: `api.query.uniques.account`\n*   **summary**: The items held by any given account; set out this way so that items owned by a single account can be enumerated.\n\n### asset(`u32, u32`): `Option<PalletUniquesItemDetails>`[\u200b](#assetu32-u32-optionpalletuniquesitemdetails \"Direct link to assetu32-u32-optionpalletuniquesitemdetails\")\n\n*   **interface**: `api.query.uniques.asset`\n*   **summary**: The items in existence and their ownership details.\n\n### attribute(`u32, Option<u32>, Bytes`): `Option<(Bytes,u128)>`[\u200b](#attributeu32-optionu32-bytes-optionbytesu128 \"Direct link to attributeu32-optionu32-bytes-optionbytesu128\")\n\n*   **interface**: `api.query.uniques.attribute`\n*   **summary**: Attributes of a collection.\n\n### class(`u32`): `Option<PalletUniquesCollectionDetails>`[\u200b](#classu32-optionpalletuniquescollectiondetails \"Direct link to classu32-optionpalletuniquescollectiondetails\")\n\n*   **interface**: `api.query.uniques.class`\n*   **summary**: Details of a collection.\n\n### classAccount(`AccountId32, u32`): `Option<Null>`[\u200b](#classaccountaccountid32-u32-optionnull \"Direct link to classaccountaccountid32-u32-optionnull\")\n\n*   **interface**: `api.query.uniques.classAccount`\n*   **summary**: The collections owned by any given account; set out this way so that collections owned by a single account can be enumerated.\n\n### classMetadataOf(`u32`): `Option<PalletUniquesCollectionMetadata>`[\u200b](#classmetadataofu32-optionpalletuniquescollectionmetadata \"Direct link to classmetadataofu32-optionpalletuniquescollectionmetadata\")\n\n*   **interface**: `api.query.uniques.classMetadataOf`\n*   **summary**: Metadata of a collection.\n\n### collectionMaxSupply(`u32`): `Option<u32>`[\u200b](#collectionmaxsupplyu32-optionu32 \"Direct link to collectionmaxsupplyu32-optionu32\")\n\n*   **interface**: `api.query.uniques.collectionMaxSupply`\n*   **summary**: Keeps track of the number of items a collection might have.\n\n### instanceMetadataOf(`u32, u32`): `Option<PalletUniquesItemMetadata>`[\u200b](#instancemetadataofu32-u32-optionpalletuniquesitemmetadata \"Direct link to instancemetadataofu32-u32-optionpalletuniquesitemmetadata\")\n\n*   **interface**: `api.query.uniques.instanceMetadataOf`\n*   **summary**: Metadata of an item.\n\n### itemPriceOf(`u32, u32`): `Option<(u128,Option<AccountId32>)>`[\u200b](#itempriceofu32-u32-optionu128optionaccountid32-1 \"Direct link to itempriceofu32-u32-optionu128optionaccountid32-1\")\n\n*   **interface**: `api.query.uniques.itemPriceOf`\n*   **summary**: Price of an asset instance.\n\n### ownershipAcceptance(`AccountId32`): `Option<u32>`[\u200b](#ownershipacceptanceaccountid32-optionu32-1 \"Direct link to ownershipacceptanceaccountid32-optionu32-1\")\n\n*   **interface**: `api.query.uniques.ownershipAcceptance`\n*   **summary**: The collection, if any, of which an account is willing to take ownership.\n\n* * *\n\nvesting[\u200b](#vesting \"Direct link to vesting\")\n\n----------------------------------------------\n\n### storageVersion(): `PalletVestingReleases`[\u200b](#storageversion-palletvestingreleases \"Direct link to storageversion-palletvestingreleases\")\n\n*   **interface**: `api.query.vesting.storageVersion`\n    \n*   **summary**: Storage version of the pallet.\n    \n    New networks start with latest version, as determined by the genesis build.\n    \n\n### vesting(`AccountId32`): `Option<Vec<PalletVestingVestingInfo>>`[\u200b](#vestingaccountid32-optionvecpalletvestingvestinginfo \"Direct link to vestingaccountid32-optionvecpalletvestingvestinginfo\")\n\n*   **interface**: `api.query.vesting.vesting`\n*   **summary**: Information regarding the vesting of a given account.\n\n* * *\n\nvoterList[\u200b](#voterlist \"Direct link to voterList\")\n\n----------------------------------------------------\n\n### counterForListNodes(): `u32`[\u200b](#counterforlistnodes-u32 \"Direct link to counterforlistnodes-u32\")\n\n*   **interface**: `api.query.voterList.counterForListNodes`\n*   **summary**: Counter for the related counted storage map\n\n### listBags(`u64`): `Option<PalletBagsListListBag>`[\u200b](#listbagsu64-optionpalletbagslistlistbag \"Direct link to listbagsu64-optionpalletbagslistlistbag\")\n\n*   **interface**: `api.query.voterList.listBags`\n    \n*   **summary**: A bag stored in storage.\n    \n    Stores a `Bag` struct, which stores head and tail pointers to itself.\n    \n\n### listNodes(`AccountId32`): `Option<PalletBagsListListNode>`[\u200b](#listnodesaccountid32-optionpalletbagslistlistnode \"Direct link to listnodesaccountid32-optionpalletbagslistlistnode\")\n\n*   **interface**: `api.query.voterList.listNodes`\n    \n*   **summary**: A single node, within some bag.\n    \n    Nodes store links forward and back within their respective bags.\n    \n\n* * *\n\nwhitelist[\u200b](#whitelist \"Direct link to whitelist\")\n\n----------------------------------------------------\n\n### whitelistedCall(`H256`): `Option<Null>`[\u200b](#whitelistedcallh256-optionnull \"Direct link to whitelistedcallh256-optionnull\")\n\n*   **interface**: `api.query.whitelist.whitelistedCall`\n\n[Edit this page](https://github.com/polkadot-js/docs/edit/master/docs/substrate/storage.md)\n\n[Previous\\\n\\\nConstants](/docs/substrate/constants)\n[Next\\\n\\\nExtrinsics](/docs/substrate/extrinsics)\n\n*   [alliance](#alliance)\n    *   [announcements(): `Vec<PalletAllianceCid>`](#announcements-vecpalletalliancecid)\n        \n    *   [depositOf(`AccountId32`): `Option<u128>`](#depositofaccountid32-optionu128)\n        \n    *   [members(`PalletAllianceMemberRole`): `Vec<AccountId32>`](#memberspalletalliancememberrole-vecaccountid32)\n        \n    *   [retiringMembers(`AccountId32`): `Option<u32>`](#retiringmembersaccountid32-optionu32)\n        \n    *   [rule(): `Option<PalletAllianceCid>`](#rule-optionpalletalliancecid)\n        \n    *   [unscrupulousAccounts(): `Vec<AccountId32>`](#unscrupulousaccounts-vecaccountid32)\n        \n    *   [unscrupulousWebsites(): `Vec<Bytes>`](#unscrupulouswebsites-vecbytes)\n        \n*   [allianceMotion](#alliancemotion)\n    *   [members(): `Vec<AccountId32>`](#members-vecaccountid32)\n        \n    *   [prime(): `Option<AccountId32>`](#prime-optionaccountid32)\n        \n    *   [proposalCount(): `u32`](#proposalcount-u32)\n        \n    *   [proposalOf(`H256`): `Option<Call>`](#proposalofh256-optioncall)\n        \n    *   [proposals(): `Vec<H256>`](#proposals-vech256)\n        \n    *   [voting(`H256`): `Option<PalletCollectiveVotes>`](#votingh256-optionpalletcollectivevotes)\n        \n*   [assetConversion](#assetconversion)\n    *   [nextPoolAssetId(): `Option<u32>`](#nextpoolassetid-optionu32)\n        \n    *   [pools(`(PalletAssetConversionNativeOrAssetId,PalletAssetConversionNativeOrAssetId)`): `Option<PalletAssetConversionPoolInfo>`](#poolspalletassetconversionnativeorassetidpalletassetconversionnativeorassetid-optionpalletassetconversionpoolinfo)\n        \n*   [assetRate](#assetrate)\n    *   [conversionRateToNative(`u32`): `Option<u128>`](#conversionratetonativeu32-optionu128)\n        \n*   [assets](#assets)\n    *   [account(`u32, AccountId32`): `Option<PalletAssetsAssetAccount>`](#accountu32-accountid32-optionpalletassetsassetaccount)\n        \n    *   [approvals(`u32, AccountId32, AccountId32`): `Option<PalletAssetsApproval>`](#approvalsu32-accountid32-accountid32-optionpalletassetsapproval)\n        \n    *   [asset(`u32`): `Option<PalletAssetsAssetDetails>`](#assetu32-optionpalletassetsassetdetails)\n        \n    *   [metadata(`u32`): `PalletAssetsAssetMetadata`](#metadatau32-palletassetsassetmetadata)\n        \n*   [authorityDiscovery](#authoritydiscovery)\n    *   [keys(): `Vec<SpAuthorityDiscoveryAppPublic>`](#keys-vecspauthoritydiscoveryapppublic)\n        \n    *   [nextKeys(): `Vec<SpAuthorityDiscoveryAppPublic>`](#nextkeys-vecspauthoritydiscoveryapppublic)\n        \n*   [authorship](#authorship)\n    *   [author(): `Option<AccountId32>`](#author-optionaccountid32)\n        \n*   [babe](#babe)\n    *   [authorities(): `Vec<(SpConsensusBabeAppPublic,u64)>`](#authorities-vecspconsensusbabeapppublicu64)\n        \n    *   [authorVrfRandomness(): `Option<[u8;32]>`](#authorvrfrandomness-optionu832)\n        \n    *   [currentSlot(): `u64`](#currentslot-u64)\n        \n    *   [epochConfig(): `Option<SpConsensusBabeBabeEpochConfiguration>`](#epochconfig-optionspconsensusbabebabeepochconfiguration)\n        \n    *   [epochIndex(): `u64`](#epochindex-u64)\n        \n    *   [epochStart(): `(u32,u32)`](#epochstart-u32u32)\n        \n    *   [genesisSlot(): `u64`](#genesisslot-u64)\n        \n    *   [initialized(): `Option<Option<SpConsensusBabeDigestsPreDigest>>`](#initialized-optionoptionspconsensusbabedigestspredigest)\n        \n    *   [lateness(): `u32`](#lateness-u32)\n        \n    *   [nextAuthorities(): `Vec<(SpConsensusBabeAppPublic,u64)>`](#nextauthorities-vecspconsensusbabeapppublicu64)\n        \n    *   [nextEpochConfig(): `Option<SpConsensusBabeBabeEpochConfiguration>`](#nextepochconfig-optionspconsensusbabebabeepochconfiguration)\n        \n    *   [nextRandomness(): `[u8;32]`](#nextrandomness-u832)\n        \n    *   [pendingEpochConfigChange(): `Option<SpConsensusBabeDigestsNextConfigDescriptor>`](#pendingepochconfigchange-optionspconsensusbabedigestsnextconfigdescriptor)\n        \n    *   [randomness(): `[u8;32]`](#randomness-u832)\n        \n    *   [segmentIndex(): `u32`](#segmentindex-u32)\n        \n    *   [skippedEpochs(): `Vec<(u64,u32)>`](#skippedepochs-vecu64u32)\n        \n    *   [underConstruction(`u32`): `Vec<[u8;32]>`](#underconstructionu32-vecu832)\n        \n*   [balances](#balances)\n    *   [account(`AccountId32`): `PalletBalancesAccountData`](#accountaccountid32-palletbalancesaccountdata)\n        \n    *   [freezes(`AccountId32`): `Vec<PalletBalancesIdAmountRuntimeFreezeReason>`](#freezesaccountid32-vecpalletbalancesidamountruntimefreezereason)\n        \n    *   [holds(`AccountId32`): `Vec<PalletBalancesIdAmountRuntimeHoldReason>`](#holdsaccountid32-vecpalletbalancesidamountruntimeholdreason)\n        \n    *   [inactiveIssuance(): `u128`](#inactiveissuance-u128)\n        \n    *   [locks(`AccountId32`): `Vec<PalletBalancesBalanceLock>`](#locksaccountid32-vecpalletbalancesbalancelock)\n        \n    *   [reserves(`AccountId32`): `Vec<PalletBalancesReserveData>`](#reservesaccountid32-vecpalletbalancesreservedata)\n        \n    *   [totalIssuance(): `u128`](#totalissuance-u128)\n        \n*   [bounties](#bounties)\n    *   [bounties(`u32`): `Option<PalletBountiesBounty>`](#bountiesu32-optionpalletbountiesbounty)\n        \n    *   [bountyApprovals(): `Vec<u32>`](#bountyapprovals-vecu32)\n        \n    *   [bountyCount(): `u32`](#bountycount-u32)\n        \n    *   [bountyDescriptions(`u32`): `Option<Bytes>`](#bountydescriptionsu32-optionbytes)\n        \n*   [broker](#broker)\n    *   [allowedRenewals(`PalletBrokerAllowedRenewalId`): `Option<PalletBrokerAllowedRenewalRecord>`](#allowedrenewalspalletbrokerallowedrenewalid-optionpalletbrokerallowedrenewalrecord)\n        \n    *   [configuration(): `Option<PalletBrokerConfigRecord>`](#configuration-optionpalletbrokerconfigrecord)\n        \n    *   [instaPoolContribution(`PalletBrokerRegionId`): `Option<PalletBrokerContributionRecord>`](#instapoolcontributionpalletbrokerregionid-optionpalletbrokercontributionrecord)\n        \n    *   [instaPoolHistory(`u32`): `Option<PalletBrokerInstaPoolHistoryRecord>`](#instapoolhistoryu32-optionpalletbrokerinstapoolhistoryrecord)\n        \n    *   [instaPoolIo(`u32`): `PalletBrokerPoolIoRecord`](#instapooliou32-palletbrokerpooliorecord)\n        \n    *   [leases(): `Vec<PalletBrokerLeaseRecordItem>`](#leases-vecpalletbrokerleaserecorditem)\n        \n    *   [regions(`PalletBrokerRegionId`): `Option<PalletBrokerRegionRecord>`](#regionspalletbrokerregionid-optionpalletbrokerregionrecord)\n        \n    *   [reservations(): `Vec<Vec<PalletBrokerScheduleItem>>`](#reservations-vecvecpalletbrokerscheduleitem)\n        \n    *   [saleInfo(): `Option<PalletBrokerSaleInfoRecord>`](#saleinfo-optionpalletbrokersaleinforecord)\n        \n    *   [status(): `Option<PalletBrokerStatusRecord>`](#status-optionpalletbrokerstatusrecord)\n        \n    *   [workload(`u16`): `Vec<PalletBrokerScheduleItem>`](#workloadu16-vecpalletbrokerscheduleitem)\n        \n    *   [workplan(`(u32,u16)`): `Option<Vec<PalletBrokerScheduleItem>>`](#workplanu32u16-optionvecpalletbrokerscheduleitem)\n        \n*   [childBounties](#childbounties)\n    *   [childBounties(`u32, u32`): `Option<PalletChildBountiesChildBounty>`](#childbountiesu32-u32-optionpalletchildbountieschildbounty)\n        \n    *   [childBountyCount(): `u32`](#childbountycount-u32)\n        \n    *   [childBountyDescriptions(`u32`): `Option<Bytes>`](#childbountydescriptionsu32-optionbytes)\n        \n    *   [childrenCuratorFees(`u32`): `u128`](#childrencuratorfeesu32-u128)\n        \n    *   [parentChildBounties(`u32`): `u32`](#parentchildbountiesu32-u32)\n        \n*   [contracts](#contracts)\n    *   [codeInfoOf(`H256`): `Option<PalletContractsWasmCodeInfo>`](#codeinfoofh256-optionpalletcontractswasmcodeinfo)\n        \n    *   [contractInfoOf(`AccountId32`): `Option<PalletContractsStorageContractInfo>`](#contractinfoofaccountid32-optionpalletcontractsstoragecontractinfo)\n        \n    *   [deletionQueue(`u32`): `Option<Bytes>`](#deletionqueueu32-optionbytes)\n        \n    *   [deletionQueueCounter(): `PalletContractsStorageDeletionQueueManager`](#deletionqueuecounter-palletcontractsstoragedeletionqueuemanager)\n        \n    *   [migrationInProgress(): `Option<Bytes>`](#migrationinprogress-optionbytes)\n        \n    *   [nonce(): `u64`](#nonce-u64)\n        \n    *   [pristineCode(`H256`): `Option<Bytes>`](#pristinecodeh256-optionbytes)\n        \n*   [convictionVoting](#convictionvoting)\n    *   [classLocksFor(`AccountId32`): `Vec<(u16,u128)>`](#classlocksforaccountid32-vecu16u128)\n        \n    *   [votingFor(`AccountId32, u16`): `PalletConvictionVotingVoteVoting`](#votingforaccountid32-u16-palletconvictionvotingvotevoting)\n        \n*   [coreFellowship](#corefellowship)\n    *   [member(`AccountId32`): `Option<PalletCoreFellowshipMemberStatus>`](#memberaccountid32-optionpalletcorefellowshipmemberstatus)\n        \n    *   [memberEvidence(`AccountId32`): `Option<(PalletCoreFellowshipWish,Bytes)>`](#memberevidenceaccountid32-optionpalletcorefellowshipwishbytes)\n        \n    *   [params(): `PalletCoreFellowshipParamsType`](#params-palletcorefellowshipparamstype)\n        \n*   [council](#council)\n    *   [members(): `Vec<AccountId32>`](#members-vecaccountid32-1)\n        \n    *   [prime(): `Option<AccountId32>`](#prime-optionaccountid32-1)\n        \n    *   [proposalCount(): `u32`](#proposalcount-u32-1)\n        \n    *   [proposalOf(`H256`): `Option<Call>`](#proposalofh256-optioncall-1)\n        \n    *   [proposals(): `Vec<H256>`](#proposals-vech256-1)\n        \n    *   [voting(`H256`): `Option<PalletCollectiveVotes>`](#votingh256-optionpalletcollectivevotes-1)\n        \n*   [democracy](#democracy)\n    *   [blacklist(`H256`): `Option<(u32,Vec<AccountId32>)>`](#blacklisth256-optionu32vecaccountid32)\n        \n    *   [cancellations(`H256`): `bool`](#cancellationsh256-bool)\n        \n    *   [depositOf(`u32`): `Option<(Vec<AccountId32>,u128)>`](#depositofu32-optionvecaccountid32u128)\n        \n    *   [lastTabledWasExternal(): `bool`](#lasttabledwasexternal-bool)\n        \n    *   [lowestUnbaked(): `u32`](#lowestunbaked-u32)\n        \n    *   [metadataOf(`PalletDemocracyMetadataOwner`): `Option<H256>`](#metadataofpalletdemocracymetadataowner-optionh256)\n        \n    *   [nextExternal(): `Option<(FrameSupportPreimagesBounded,PalletDemocracyVoteThreshold)>`](#nextexternal-optionframesupportpreimagesboundedpalletdemocracyvotethreshold)\n        \n    *   [publicPropCount(): `u32`](#publicpropcount-u32)\n        \n    *   [publicProps(): `Vec<(u32,FrameSupportPreimagesBounded,AccountId32)>`](#publicprops-vecu32framesupportpreimagesboundedaccountid32)\n        \n    *   [referendumCount(): `u32`](#referendumcount-u32)\n        \n    *   [referendumInfoOf(`u32`): `Option<PalletDemocracyReferendumInfo>`](#referenduminfoofu32-optionpalletdemocracyreferenduminfo)\n        \n    *   [votingOf(`AccountId32`): `PalletDemocracyVoteVoting`](#votingofaccountid32-palletdemocracyvotevoting)\n        \n*   [electionProviderMultiPhase](#electionprovidermultiphase)\n    *   [currentPhase(): `PalletElectionProviderMultiPhasePhase`](#currentphase-palletelectionprovidermultiphasephase)\n        \n    *   [desiredTargets(): `Option<u32>`](#desiredtargets-optionu32)\n        \n    *   [minimumUntrustedScore(): `Option<SpNposElectionsElectionScore>`](#minimumuntrustedscore-optionspnposelectionselectionscore)\n        \n    *   [queuedSolution(): `Option<PalletElectionProviderMultiPhaseReadySolution>`](#queuedsolution-optionpalletelectionprovidermultiphasereadysolution)\n        \n    *   [round(): `u32`](#round-u32)\n        \n    *   [signedSubmissionIndices(): `Vec<(SpNposElectionsElectionScore,u32,u32)>`](#signedsubmissionindices-vecspnposelectionselectionscoreu32u32)\n        \n    *   [signedSubmissionNextIndex(): `u32`](#signedsubmissionnextindex-u32)\n        \n    *   [signedSubmissionsMap(`u32`): `Option<PalletElectionProviderMultiPhaseSignedSignedSubmission>`](#signedsubmissionsmapu32-optionpalletelectionprovidermultiphasesignedsignedsubmission)\n        \n    *   [snapshot(): `Option<PalletElectionProviderMultiPhaseRoundSnapshot>`](#snapshot-optionpalletelectionprovidermultiphaseroundsnapshot)\n        \n    *   [snapshotMetadata(): `Option<PalletElectionProviderMultiPhaseSolutionOrSnapshotSize>`](#snapshotmetadata-optionpalletelectionprovidermultiphasesolutionorsnapshotsize)\n        \n*   [elections](#elections)\n    *   [candidates(): `Vec<(AccountId32,u128)>`](#candidates-vecaccountid32u128)\n        \n    *   [electionRounds(): `u32`](#electionrounds-u32)\n        \n    *   [members(): `Vec<PalletElectionsPhragmenSeatHolder>`](#members-vecpalletelectionsphragmenseatholder)\n        \n    *   [runnersUp(): `Vec<PalletElectionsPhragmenSeatHolder>`](#runnersup-vecpalletelectionsphragmenseatholder)\n        \n    *   [voting(`AccountId32`): `PalletElectionsPhragmenVoter`](#votingaccountid32-palletelectionsphragmenvoter)\n        \n*   [fastUnstake](#fastunstake)\n    *   [counterForQueue(): `u32`](#counterforqueue-u32)\n        \n    *   [erasToCheckPerBlock(): `u32`](#erastocheckperblock-u32)\n        \n    *   [head(): `Option<PalletFastUnstakeUnstakeRequest>`](#head-optionpalletfastunstakeunstakerequest)\n        \n    *   [queue(`AccountId32`): `Option<u128>`](#queueaccountid32-optionu128)\n        \n*   [glutton](#glutton)\n    *   [compute(): `u64`](#compute-u64)\n        \n    *   [storage(): `u64`](#storage-u64)\n        \n    *   [trashData(`u32`): `Option<[u8;1024]>`](#trashdatau32-optionu81024)\n        \n    *   [trashDataCount(): `u32`](#trashdatacount-u32)\n        \n*   [grandpa](#grandpa)\n    *   [authorities(): `Vec<(SpConsensusGrandpaAppPublic,u64)>`](#authorities-vecspconsensusgrandpaapppublicu64)\n        \n    *   [currentSetId(): `u64`](#currentsetid-u64)\n        \n    *   [nextForced(): `Option<u32>`](#nextforced-optionu32)\n        \n    *   [pendingChange(): `Option<PalletGrandpaStoredPendingChange>`](#pendingchange-optionpalletgrandpastoredpendingchange)\n        \n    *   [setIdSession(`u64`): `Option<u32>`](#setidsessionu64-optionu32)\n        \n    *   [stalled(): `Option<(u32,u32)>`](#stalled-optionu32u32)\n        \n    *   [state(): `PalletGrandpaStoredState`](#state-palletgrandpastoredstate)\n        \n*   [identity](#identity)\n    *   [identityOf(`AccountId32`): `Option<PalletIdentityRegistration>`](#identityofaccountid32-optionpalletidentityregistration)\n        \n    *   [registrars(): `Vec<Option<PalletIdentityRegistrarInfo>>`](#registrars-vecoptionpalletidentityregistrarinfo)\n        \n    *   [subsOf(`AccountId32`): `(u128,Vec<AccountId32>)`](#subsofaccountid32-u128vecaccountid32)\n        \n    *   [superOf(`AccountId32`): `Option<(AccountId32,Data)>`](#superofaccountid32-optionaccountid32data)\n        \n*   [imOnline](#imonline)\n    *   [authoredBlocks(`u32, AccountId32`): `u32`](#authoredblocksu32-accountid32-u32)\n        \n    *   [heartbeatAfter(): `u32`](#heartbeatafter-u32)\n        \n    *   [keys(): `Vec<PalletImOnlineSr25519AppSr25519Public>`](#keys-vecpalletimonlinesr25519appsr25519public)\n        \n    *   [receivedHeartbeats(`u32, u32`): `Option<bool>`](#receivedheartbeatsu32-u32-optionbool)\n        \n*   [indices](#indices)\n    *   [accounts(`u32`): `Option<(AccountId32,u128,bool)>`](#accountsu32-optionaccountid32u128bool)\n        \n*   [lottery](#lottery)\n    *   [callIndices(): `Vec<(u8,u8)>`](#callindices-vecu8u8)\n        \n    *   [lottery(): `Option<PalletLotteryLotteryConfig>`](#lottery-optionpalletlotterylotteryconfig)\n        \n    *   [lotteryIndex(): `u32`](#lotteryindex-u32)\n        \n    *   [participants(`AccountId32`): `(u32,Vec<(u8,u8)>)`](#participantsaccountid32-u32vecu8u8)\n        \n    *   [tickets(`u32`): `Option<AccountId32>`](#ticketsu32-optionaccountid32)\n        \n    *   [ticketsCount(): `u32`](#ticketscount-u32)\n        \n*   [messageQueue](#messagequeue)\n    *   [bookStateFor(`u32`): `PalletMessageQueueBookState`](#bookstateforu32-palletmessagequeuebookstate)\n        \n    *   [pages(`u32, u32`): `Option<PalletMessageQueuePage>`](#pagesu32-u32-optionpalletmessagequeuepage)\n        \n    *   [serviceHead(): `Option<u32>`](#servicehead-optionu32)\n        \n*   [mixnet](#mixnet)\n    *   [currentSessionIndex(): `u32`](#currentsessionindex-u32)\n        \n    *   [currentSessionStartBlock(): `u32`](#currentsessionstartblock-u32)\n        \n    *   [mixnodes(`u32, u32`): `Option<PalletMixnetBoundedMixnode>`](#mixnodesu32-u32-optionpalletmixnetboundedmixnode)\n        \n    *   [nextAuthorityIds(`u32`): `Option<SpMixnetAppPublic>`](#nextauthorityidsu32-optionspmixnetapppublic)\n        \n*   [mmr](#mmr)\n    *   [nodes(`u64`): `Option<H256>`](#nodesu64-optionh256)\n        \n    *   [numberOfLeaves(): `u64`](#numberofleaves-u64)\n        \n    *   [rootHash(): `H256`](#roothash-h256)\n        \n*   [multisig](#multisig)\n    *   [multisigs(`AccountId32, [u8;32]`): `Option<PalletMultisigMultisig>`](#multisigsaccountid32-u832-optionpalletmultisigmultisig)\n        \n*   [nftFractionalization](#nftfractionalization)\n    *   [nftToAsset(`(u32,u32)`): `Option<PalletNftFractionalizationDetails>`](#nfttoassetu32u32-optionpalletnftfractionalizationdetails)\n        \n*   [nfts](#nfts)\n    *   [account(`AccountId32, u32, u32`): `Option<Null>`](#accountaccountid32-u32-u32-optionnull)\n        \n    *   [attribute(`u32, Option<u32>, PalletNftsAttributeNamespace, Bytes`): `Option<(Bytes,PalletNftsAttributeDeposit)>`](#attributeu32-optionu32-palletnftsattributenamespace-bytes-optionbytespalletnftsattributedeposit)\n        \n    *   [collection(`u32`): `Option<PalletNftsCollectionDetails>`](#collectionu32-optionpalletnftscollectiondetails)\n        \n    *   [collectionAccount(`AccountId32, u32`): `Option<Null>`](#collectionaccountaccountid32-u32-optionnull)\n        \n    *   [collectionConfigOf(`u32`): `Option<PalletNftsCollectionConfig>`](#collectionconfigofu32-optionpalletnftscollectionconfig)\n        \n    *   [collectionMetadataOf(`u32`): `Option<PalletNftsCollectionMetadata>`](#collectionmetadataofu32-optionpalletnftscollectionmetadata)\n        \n    *   [collectionRoleOf(`u32, AccountId32`): `Option<u8>`](#collectionroleofu32-accountid32-optionu8)\n        \n    *   [item(`u32, u32`): `Option<PalletNftsItemDetails>`](#itemu32-u32-optionpalletnftsitemdetails)\n        \n    *   [itemAttributesApprovalsOf(`u32, u32`): `BTreeSet<AccountId32>`](#itemattributesapprovalsofu32-u32-btreesetaccountid32)\n        \n    *   [itemConfigOf(`u32, u32`): `Option<PalletNftsItemConfig>`](#itemconfigofu32-u32-optionpalletnftsitemconfig)\n        \n    *   [itemMetadataOf(`u32, u32`): `Option<PalletNftsItemMetadata>`](#itemmetadataofu32-u32-optionpalletnftsitemmetadata)\n        \n    *   [itemPriceOf(`u32, u32`): `Option<(u128,Option<AccountId32>)>`](#itempriceofu32-u32-optionu128optionaccountid32)\n        \n    *   [nextCollectionId(): `Option<u32>`](#nextcollectionid-optionu32)\n        \n    *   [ownershipAcceptance(`AccountId32`): `Option<u32>`](#ownershipacceptanceaccountid32-optionu32)\n        \n    *   [pendingSwapOf(`u32, u32`): `Option<PalletNftsPendingSwap>`](#pendingswapofu32-u32-optionpalletnftspendingswap)\n        \n*   [nis](#nis)\n    *   [queues(`u32`): `Vec<PalletNisBid>`](#queuesu32-vecpalletnisbid)\n        \n    *   [queueTotals(): `Vec<(u32,u128)>`](#queuetotals-vecu32u128)\n        \n    *   [receipts(`u32`): `Option<PalletNisReceiptRecord>`](#receiptsu32-optionpalletnisreceiptrecord)\n        \n    *   [summary(): `PalletNisSummaryRecord`](#summary-palletnissummaryrecord)\n        \n*   [nominationPools](#nominationpools)\n    *   [bondedPools(`u32`): `Option<PalletNominationPoolsBondedPoolInner>`](#bondedpoolsu32-optionpalletnominationpoolsbondedpoolinner)\n        \n    *   [claimPermissions(`AccountId32`): `PalletNominationPoolsClaimPermission`](#claimpermissionsaccountid32-palletnominationpoolsclaimpermission)\n        \n    *   [counterForBondedPools(): `u32`](#counterforbondedpools-u32)\n        \n    *   [counterForMetadata(): `u32`](#counterformetadata-u32)\n        \n    *   [counterForPoolMembers(): `u32`](#counterforpoolmembers-u32)\n        \n    *   [counterForReversePoolIdLookup(): `u32`](#counterforreversepoolidlookup-u32)\n        \n    *   [counterForRewardPools(): `u32`](#counterforrewardpools-u32)\n        \n    *   [counterForSubPoolsStorage(): `u32`](#counterforsubpoolsstorage-u32)\n        \n    *   [globalMaxCommission(): `Option<Perbill>`](#globalmaxcommission-optionperbill)\n        \n    *   [lastPoolId(): `u32`](#lastpoolid-u32)\n        \n    *   [maxPoolMembers(): `Option<u32>`](#maxpoolmembers-optionu32)\n        \n    *   [maxPoolMembersPerPool(): `Option<u32>`](#maxpoolmembersperpool-optionu32)\n        \n    *   [maxPools(): `Option<u32>`](#maxpools-optionu32)\n        \n    *   [metadata(`u32`): `Bytes`](#metadatau32-bytes)\n        \n    *   [minCreateBond(): `u128`](#mincreatebond-u128)\n        \n    *   [minJoinBond(): `u128`](#minjoinbond-u128)\n        \n    *   [poolMembers(`AccountId32`): `Option<PalletNominationPoolsPoolMember>`](#poolmembersaccountid32-optionpalletnominationpoolspoolmember)\n        \n    *   [reversePoolIdLookup(`AccountId32`): `Option<u32>`](#reversepoolidlookupaccountid32-optionu32)\n        \n    *   [rewardPools(`u32`): `Option<PalletNominationPoolsRewardPool>`](#rewardpoolsu32-optionpalletnominationpoolsrewardpool)\n        \n    *   [subPoolsStorage(`u32`): `Option<PalletNominationPoolsSubPools>`](#subpoolsstorageu32-optionpalletnominationpoolssubpools)\n        \n    *   [totalValueLocked(): `u128`](#totalvaluelocked-u128)\n        \n*   [offences](#offences)\n    *   [concurrentReportsIndex(`[u8;16], Bytes`): `Vec<H256>`](#concurrentreportsindexu816-bytes-vech256)\n        \n    *   [reports(`H256`): `Option<SpStakingOffenceOffenceDetails>`](#reportsh256-optionspstakingoffenceoffencedetails)\n        \n*   [poolAssets](#poolassets)\n    *   [account(`u32, AccountId32`): `Option<PalletAssetsAssetAccount>`](#accountu32-accountid32-optionpalletassetsassetaccount-1)\n        \n    *   [approvals(`u32, AccountId32, AccountId32`): `Option<PalletAssetsApproval>`](#approvalsu32-accountid32-accountid32-optionpalletassetsapproval-1)\n        \n    *   [asset(`u32`): `Option<PalletAssetsAssetDetails>`](#assetu32-optionpalletassetsassetdetails-1)\n        \n    *   [metadata(`u32`): `PalletAssetsAssetMetadata`](#metadatau32-palletassetsassetmetadata-1)\n        \n*   [pov](#pov)\n    *   [boundedValue(): `Option<Bytes>`](#boundedvalue-optionbytes)\n        \n    *   [doubleMap1M(`u32, u32`): `Option<u32>`](#doublemap1mu32-u32-optionu32)\n        \n    *   [largeValue(): `Option<Bytes>`](#largevalue-optionbytes)\n        \n    *   [largeValue2(): `Option<Bytes>`](#largevalue2-optionbytes)\n        \n    *   [map16M(`u32`): `Option<u32>`](#map16mu32-optionu32)\n        \n    *   [map1M(`u32`): `Option<u32>`](#map1mu32-optionu32)\n        \n    *   [unboundedMap(`u32`): `Option<Vec<u32>>`](#unboundedmapu32-optionvecu32)\n        \n    *   [unboundedMap2(`u32`): `Option<Vec<u32>>`](#unboundedmap2u32-optionvecu32)\n        \n    *   [unboundedMapTwox(`u32`): `Option<Vec<u32>>`](#unboundedmaptwoxu32-optionvecu32)\n        \n    *   [unboundedValue(): `Option<Bytes>`](#unboundedvalue-optionbytes)\n        \n    *   [value(): `Option<u32>`](#value-optionu32)\n        \n    *   [value2(): `Option<u32>`](#value2-optionu32)\n        \n*   [preimage](#preimage)\n    *   [preimageFor(`(H256,u32)`): `Option<Bytes>`](#preimageforh256u32-optionbytes)\n        \n    *   [requestStatusFor(`H256`): `Option<PalletPreimageRequestStatus>`](#requeststatusforh256-optionpalletpreimagerequeststatus)\n        \n    *   [statusFor(`H256`): `Option<PalletPreimageOldRequestStatus>`](#statusforh256-optionpalletpreimageoldrequeststatus)\n        \n*   [proxy](#proxy)\n    *   [announcements(`AccountId32`): `(Vec<PalletProxyAnnouncement>,u128)`](#announcementsaccountid32-vecpalletproxyannouncementu128)\n        \n    *   [proxies(`AccountId32`): `(Vec<PalletProxyProxyDefinition>,u128)`](#proxiesaccountid32-vecpalletproxyproxydefinitionu128)\n        \n*   [randomnessCollectiveFlip](#randomnesscollectiveflip)\n    *   [randomMaterial(): `Vec<H256>`](#randommaterial-vech256)\n        \n*   [rankedCollective](#rankedcollective)\n    *   [idToIndex(`u16, AccountId32`): `Option<u32>`](#idtoindexu16-accountid32-optionu32)\n        \n    *   [indexToId(`u16, u32`): `Option<AccountId32>`](#indextoidu16-u32-optionaccountid32)\n        \n    *   [memberCount(`u16`): `u32`](#membercountu16-u32)\n        \n    *   [members(`AccountId32`): `Option<PalletRankedCollectiveMemberRecord>`](#membersaccountid32-optionpalletrankedcollectivememberrecord)\n        \n    *   [voting(`u32, AccountId32`): `Option<PalletRankedCollectiveVoteRecord>`](#votingu32-accountid32-optionpalletrankedcollectivevoterecord)\n        \n    *   [votingCleanup(`u32`): `Option<Bytes>`](#votingcleanupu32-optionbytes)\n        \n*   [rankedPolls](#rankedpolls)\n    *   [decidingCount(`u16`): `u32`](#decidingcountu16-u32)\n        \n    *   [metadataOf(`u32`): `Option<H256>`](#metadataofu32-optionh256)\n        \n    *   [referendumCount(): `u32`](#referendumcount-u32-1)\n        \n    *   [referendumInfoFor(`u32`): `Option<PalletReferendaReferendumInfoRankedCollectiveTally>`](#referenduminfoforu32-optionpalletreferendareferenduminforankedcollectivetally)\n        \n    *   [trackQueue(`u16`): `Vec<(u32,u32)>`](#trackqueueu16-vecu32u32)\n        \n*   [recovery](#recovery)\n    *   [activeRecoveries(`AccountId32, AccountId32`): `Option<PalletRecoveryActiveRecovery>`](#activerecoveriesaccountid32-accountid32-optionpalletrecoveryactiverecovery)\n        \n    *   [proxy(`AccountId32`): `Option<AccountId32>`](#proxyaccountid32-optionaccountid32)\n        \n    *   [recoverable(`AccountId32`): `Option<PalletRecoveryRecoveryConfig>`](#recoverableaccountid32-optionpalletrecoveryrecoveryconfig)\n        \n*   [referenda](#referenda)\n    *   [decidingCount(`u16`): `u32`](#decidingcountu16-u32-1)\n        \n    *   [metadataOf(`u32`): `Option<H256>`](#metadataofu32-optionh256-1)\n        \n    *   [referendumCount(): `u32`](#referendumcount-u32-2)\n        \n    *   [referendumInfoFor(`u32`): `Option<PalletReferendaReferendumInfoConvictionVotingTally>`](#referenduminfoforu32-optionpalletreferendareferenduminfoconvictionvotingtally)\n        \n    *   [trackQueue(`u16`): `Vec<(u32,u128)>`](#trackqueueu16-vecu32u128)\n        \n*   [safeMode](#safemode)\n    *   [deposits(`AccountId32, u32`): `Option<u128>`](#depositsaccountid32-u32-optionu128)\n        \n    *   [enteredUntil(): `Option<u32>`](#entereduntil-optionu32)\n        \n*   [salary](#salary)\n    *   [claimant(`AccountId32`): `Option<PalletSalaryClaimantStatus>`](#claimantaccountid32-optionpalletsalaryclaimantstatus)\n        \n    *   [status(): `Option<PalletSalaryStatusType>`](#status-optionpalletsalarystatustype)\n        \n*   [scheduler](#scheduler)\n    *   [agenda(`u32`): `Vec<Option<PalletSchedulerScheduled>>`](#agendau32-vecoptionpalletschedulerscheduled)\n        \n    *   [incompleteSince(): `Option<u32>`](#incompletesince-optionu32)\n        \n    *   [lookup(`[u8;32]`): `Option<(u32,u32)>`](#lookupu832-optionu32u32)\n        \n*   [session](#session)\n    *   [currentIndex(): `u32`](#currentindex-u32)\n        \n    *   [disabledValidators(): `Vec<u32>`](#disabledvalidators-vecu32)\n        \n    *   [keyOwner(`(SpCoreCryptoKeyTypeId,Bytes)`): `Option<AccountId32>`](#keyownerspcorecryptokeytypeidbytes-optionaccountid32)\n        \n    *   [nextKeys(`AccountId32`): `Option<KitchensinkRuntimeSessionKeys>`](#nextkeysaccountid32-optionkitchensinkruntimesessionkeys)\n        \n    *   [queuedChanged(): `bool`](#queuedchanged-bool)\n        \n    *   [queuedKeys(): `Vec<(AccountId32,KitchensinkRuntimeSessionKeys)>`](#queuedkeys-vecaccountid32kitchensinkruntimesessionkeys)\n        \n    *   [validators(): `Vec<AccountId32>`](#validators-vecaccountid32)\n        \n*   [society](#society)\n    *   [bids(): `Vec<PalletSocietyBid>`](#bids-vecpalletsocietybid)\n        \n    *   [candidates(`AccountId32`): `Option<PalletSocietyCandidacy>`](#candidatesaccountid32-optionpalletsocietycandidacy)\n        \n    *   [challengeRoundCount(): `u32`](#challengeroundcount-u32)\n        \n    *   [defenderVotes(`u32, AccountId32`): `Option<PalletSocietyVote>`](#defendervotesu32-accountid32-optionpalletsocietyvote)\n        \n    *   [defending(): `Option<(AccountId32,AccountId32,PalletSocietyTally)>`](#defending-optionaccountid32accountid32palletsocietytally)\n        \n    *   [founder(): `Option<AccountId32>`](#founder-optionaccountid32)\n        \n    *   [head(): `Option<AccountId32>`](#head-optionaccountid32)\n        \n    *   [memberByIndex(`u32`): `Option<AccountId32>`](#memberbyindexu32-optionaccountid32)\n        \n    *   [memberCount(): `u32`](#membercount-u32)\n        \n    *   [members(`AccountId32`): `Option<PalletSocietyMemberRecord>`](#membersaccountid32-optionpalletsocietymemberrecord)\n        \n    *   [nextHead(): `Option<PalletSocietyIntakeRecord>`](#nexthead-optionpalletsocietyintakerecord)\n        \n    *   [parameters(): `Option<PalletSocietyGroupParams>`](#parameters-optionpalletsocietygroupparams)\n        \n    *   [payouts(`AccountId32`): `PalletSocietyPayoutRecord`](#payoutsaccountid32-palletsocietypayoutrecord)\n        \n    *   [pot(): `u128`](#pot-u128)\n        \n    *   [roundCount(): `u32`](#roundcount-u32)\n        \n    *   [rules(): `Option<H256>`](#rules-optionh256)\n        \n    *   [skeptic(): `Option<AccountId32>`](#skeptic-optionaccountid32)\n        \n    *   [suspendedMembers(`AccountId32`): `Option<PalletSocietyMemberRecord>`](#suspendedmembersaccountid32-optionpalletsocietymemberrecord)\n        \n    *   [voteClearCursor(`AccountId32`): `Option<Bytes>`](#voteclearcursoraccountid32-optionbytes)\n        \n    *   [votes(`AccountId32, AccountId32`): `Option<PalletSocietyVote>`](#votesaccountid32-accountid32-optionpalletsocietyvote)\n        \n*   [staking](#staking)\n    *   [activeEra(): `Option<PalletStakingActiveEraInfo>`](#activeera-optionpalletstakingactiveerainfo)\n        \n    *   [bonded(`AccountId32`): `Option<AccountId32>`](#bondedaccountid32-optionaccountid32)\n        \n    *   [bondedEras(): `Vec<(u32,u32)>`](#bondederas-vecu32u32)\n        \n    *   [canceledSlashPayout(): `u128`](#canceledslashpayout-u128)\n        \n    *   [chillThreshold(): `Option<Percent>`](#chillthreshold-optionpercent)\n        \n    *   [claimedRewards(`u32, AccountId32`): `Vec<u32>`](#claimedrewardsu32-accountid32-vecu32)\n        \n    *   [counterForNominators(): `u32`](#counterfornominators-u32)\n        \n    *   [counterForValidators(): `u32`](#counterforvalidators-u32)\n        \n    *   [currentEra(): `Option<u32>`](#currentera-optionu32)\n        \n    *   [currentPlannedSession(): `u32`](#currentplannedsession-u32)\n        \n    *   [erasRewardPoints(`u32`): `PalletStakingEraRewardPoints`](#erasrewardpointsu32-palletstakingerarewardpoints)\n        \n    *   [erasStakers(`u32, AccountId32`): `SpStakingExposure`](#erasstakersu32-accountid32-spstakingexposure)\n        \n    *   [erasStakersClipped(`u32, AccountId32`): `SpStakingExposure`](#erasstakersclippedu32-accountid32-spstakingexposure)\n        \n    *   [erasStakersOverview(`u32, AccountId32`): `Option<SpStakingPagedExposureMetadata>`](#erasstakersoverviewu32-accountid32-optionspstakingpagedexposuremetadata)\n        \n    *   [erasStakersPaged(`u32, AccountId32, u32`): `Option<SpStakingExposurePage>`](#erasstakerspagedu32-accountid32-u32-optionspstakingexposurepage)\n        \n    *   [erasStartSessionIndex(`u32`): `Option<u32>`](#erasstartsessionindexu32-optionu32)\n        \n    *   [erasTotalStake(`u32`): `u128`](#erastotalstakeu32-u128)\n        \n    *   [erasValidatorPrefs(`u32, AccountId32`): `PalletStakingValidatorPrefs`](#erasvalidatorprefsu32-accountid32-palletstakingvalidatorprefs)\n        \n    *   [erasValidatorReward(`u32`): `Option<u128>`](#erasvalidatorrewardu32-optionu128)\n        \n    *   [forceEra(): `PalletStakingForcing`](#forceera-palletstakingforcing)\n        \n    *   [invulnerables(): `Vec<AccountId32>`](#invulnerables-vecaccountid32)\n        \n    *   [ledger(`AccountId32`): `Option<PalletStakingStakingLedger>`](#ledgeraccountid32-optionpalletstakingstakingledger)\n        \n    *   [maxNominatorsCount(): `Option<u32>`](#maxnominatorscount-optionu32)\n        \n    *   [maxValidatorsCount(): `Option<u32>`](#maxvalidatorscount-optionu32)\n        \n    *   [minCommission(): `Perbill`](#mincommission-perbill)\n        \n    *   [minimumActiveStake(): `u128`](#minimumactivestake-u128)\n        \n    *   [minimumValidatorCount(): `u32`](#minimumvalidatorcount-u32)\n        \n    *   [minNominatorBond(): `u128`](#minnominatorbond-u128)\n        \n    *   [minValidatorBond(): `u128`](#minvalidatorbond-u128)\n        \n    *   [nominators(`AccountId32`): `Option<PalletStakingNominations>`](#nominatorsaccountid32-optionpalletstakingnominations)\n        \n    *   [nominatorSlashInEra(`u32, AccountId32`): `Option<u128>`](#nominatorslashinerau32-accountid32-optionu128)\n        \n    *   [offendingValidators(): `Vec<(u32,bool)>`](#offendingvalidators-vecu32bool)\n        \n    *   [payee(`AccountId32`): `PalletStakingRewardDestination`](#payeeaccountid32-palletstakingrewarddestination)\n        \n    *   [slashingSpans(`AccountId32`): `Option<PalletStakingSlashingSlashingSpans>`](#slashingspansaccountid32-optionpalletstakingslashingslashingspans)\n        \n    *   [slashRewardFraction(): `Perbill`](#slashrewardfraction-perbill)\n        \n    *   [spanSlash(`(AccountId32,u32)`): `PalletStakingSlashingSpanRecord`](#spanslashaccountid32u32-palletstakingslashingspanrecord)\n        \n    *   [unappliedSlashes(`u32`): `Vec<PalletStakingUnappliedSlash>`](#unappliedslashesu32-vecpalletstakingunappliedslash)\n        \n    *   [validatorCount(): `u32`](#validatorcount-u32)\n        \n    *   [validators(`AccountId32`): `PalletStakingValidatorPrefs`](#validatorsaccountid32-palletstakingvalidatorprefs)\n        \n    *   [validatorSlashInEra(`u32, AccountId32`): `Option<(Perbill,u128)>`](#validatorslashinerau32-accountid32-optionperbillu128)\n        \n*   [stateTrieMigration](#statetriemigration)\n    *   [autoLimits(): `Option<PalletStateTrieMigrationMigrationLimits>`](#autolimits-optionpalletstatetriemigrationmigrationlimits)\n        \n    *   [migrationProcess(): `PalletStateTrieMigrationMigrationTask`](#migrationprocess-palletstatetriemigrationmigrationtask)\n        \n    *   [signedMigrationMaxLimits(): `Option<PalletStateTrieMigrationMigrationLimits>`](#signedmigrationmaxlimits-optionpalletstatetriemigrationmigrationlimits)\n        \n*   [substrate](#substrate)\n    *   [changesTrieConfig(): `u32`](#changestrieconfig-u32)\n        \n    *   [childStorageKeyPrefix(): `u32`](#childstoragekeyprefix-u32)\n        \n    *   [code(): `Bytes`](#code-bytes)\n        \n    *   [extrinsicIndex(): `u32`](#extrinsicindex-u32)\n        \n    *   [heapPages(): `u64`](#heappages-u64)\n        \n    *   [intrablockEntropy(): `[u8;32]`](#intrablockentropy-u832)\n        \n*   [sudo](#sudo)\n    *   [key(): `Option<AccountId32>`](#key-optionaccountid32)\n        \n*   [system](#system)\n    *   [account(`AccountId32`): `FrameSystemAccountInfo`](#accountaccountid32-framesystemaccountinfo)\n        \n    *   [allExtrinsicsLen(): `Option<u32>`](#allextrinsicslen-optionu32)\n        \n    *   [blockHash(`u32`): `H256`](#blockhashu32-h256)\n        \n    *   [blockWeight(): `FrameSupportDispatchPerDispatchClassWeight`](#blockweight-framesupportdispatchperdispatchclassweight)\n        \n    *   [digest(): `SpRuntimeDigest`](#digest-spruntimedigest)\n        \n    *   [eventCount(): `u32`](#eventcount-u32)\n        \n    *   [events(): `Vec<FrameSystemEventRecord>`](#events-vecframesystemeventrecord)\n        \n    *   [eventTopics(`H256`): `Vec<(u32,u32)>`](#eventtopicsh256-vecu32u32)\n        \n    *   [executionPhase(): `Option<FrameSystemPhase>`](#executionphase-optionframesystemphase)\n        \n    *   [extrinsicCount(): `Option<u32>`](#extrinsiccount-optionu32)\n        \n    *   [extrinsicData(`u32`): `Bytes`](#extrinsicdatau32-bytes)\n        \n    *   [lastRuntimeUpgrade(): `Option<FrameSystemLastRuntimeUpgradeInfo>`](#lastruntimeupgrade-optionframesystemlastruntimeupgradeinfo)\n        \n    *   [number(): `u32`](#number-u32)\n        \n    *   [parentHash(): `H256`](#parenthash-h256)\n        \n    *   [upgradedToTripleRefCount(): `bool`](#upgradedtotriplerefcount-bool)\n        \n    *   [upgradedToU32RefCount(): `bool`](#upgradedtou32refcount-bool)\n        \n*   [tasksExample](#tasksexample)\n    *   [numbers(`u32`): `Option<u32>`](#numbersu32-optionu32)\n        \n    *   [total(): `(u32,u32)`](#total-u32u32)\n        \n*   [technicalCommittee](#technicalcommittee)\n    *   [members(): `Vec<AccountId32>`](#members-vecaccountid32-2)\n        \n    *   [prime(): `Option<AccountId32>`](#prime-optionaccountid32-2)\n        \n    *   [proposalCount(): `u32`](#proposalcount-u32-2)\n        \n    *   [proposalOf(`H256`): `Option<Call>`](#proposalofh256-optioncall-2)\n        \n    *   [proposals(): `Vec<H256>`](#proposals-vech256-2)\n        \n    *   [voting(`H256`): `Option<PalletCollectiveVotes>`](#votingh256-optionpalletcollectivevotes-2)\n        \n*   [technicalMembership](#technicalmembership)\n    *   [members(): `Vec<AccountId32>`](#members-vecaccountid32-3)\n        \n    *   [prime(): `Option<AccountId32>`](#prime-optionaccountid32-3)\n        \n*   [timestamp](#timestamp)\n    *   [didUpdate(): `bool`](#didupdate-bool)\n        \n    *   [now(): `u64`](#now-u64)\n        \n*   [tips](#tips)\n    *   [reasons(`H256`): `Option<Bytes>`](#reasonsh256-optionbytes)\n        \n    *   [tips(`H256`): `Option<PalletTipsOpenTip>`](#tipsh256-optionpallettipsopentip)\n        \n*   [transactionPayment](#transactionpayment)\n    *   [nextFeeMultiplier(): `u128`](#nextfeemultiplier-u128)\n        \n    *   [storageVersion(): `PalletTransactionPaymentReleases`](#storageversion-pallettransactionpaymentreleases)\n        \n*   [transactionStorage](#transactionstorage)\n    *   [blockTransactions(): `Vec<PalletTransactionStorageTransactionInfo>`](#blocktransactions-vecpallettransactionstoragetransactioninfo)\n        \n    *   [byteFee(): `Option<u128>`](#bytefee-optionu128)\n        \n    *   [chunkCount(`u32`): `u32`](#chunkcountu32-u32)\n        \n    *   [entryFee(): `Option<u128>`](#entryfee-optionu128)\n        \n    *   [proofChecked(): `bool`](#proofchecked-bool)\n        \n    *   [storagePeriod(): `u32`](#storageperiod-u32)\n        \n    *   [transactions(`u32`): `Option<Vec<PalletTransactionStorageTransactionInfo>>`](#transactionsu32-optionvecpallettransactionstoragetransactioninfo)\n        \n*   [treasury](#treasury)\n    *   [approvals(): `Vec<u32>`](#approvals-vecu32)\n        \n    *   [deactivated(): `u128`](#deactivated-u128)\n        \n    *   [proposalCount(): `u32`](#proposalcount-u32-3)\n        \n    *   [proposals(`u32`): `Option<PalletTreasuryProposal>`](#proposalsu32-optionpallettreasuryproposal)\n        \n    *   [spendCount(): `u32`](#spendcount-u32)\n        \n    *   [spends(`u32`): `Option<PalletTreasurySpendStatus>`](#spendsu32-optionpallettreasuryspendstatus)\n        \n*   [txPause](#txpause)\n    *   [pausedCalls(`(Bytes,Bytes)`): `Option<Null>`](#pausedcallsbytesbytes-optionnull)\n        \n*   [uniques](#uniques)\n    *   [account(`AccountId32, u32, u32`): `Option<Null>`](#accountaccountid32-u32-u32-optionnull-1)\n        \n    *   [asset(`u32, u32`): `Option<PalletUniquesItemDetails>`](#assetu32-u32-optionpalletuniquesitemdetails)\n        \n    *   [attribute(`u32, Option<u32>, Bytes`): `Option<(Bytes,u128)>`](#attributeu32-optionu32-bytes-optionbytesu128)\n        \n    *   [class(`u32`): `Option<PalletUniquesCollectionDetails>`](#classu32-optionpalletuniquescollectiondetails)\n        \n    *   [classAccount(`AccountId32, u32`): `Option<Null>`](#classaccountaccountid32-u32-optionnull)\n        \n    *   [classMetadataOf(`u32`): `Option<PalletUniquesCollectionMetadata>`](#classmetadataofu32-optionpalletuniquescollectionmetadata)\n        \n    *   [collectionMaxSupply(`u32`): `Option<u32>`](#collectionmaxsupplyu32-optionu32)\n        \n    *   [instanceMetadataOf(`u32, u32`): `Option<PalletUniquesItemMetadata>`](#instancemetadataofu32-u32-optionpalletuniquesitemmetadata)\n        \n    *   [itemPriceOf(`u32, u32`): `Option<(u128,Option<AccountId32>)>`](#itempriceofu32-u32-optionu128optionaccountid32-1)\n        \n    *   [ownershipAcceptance(`AccountId32`): `Option<u32>`](#ownershipacceptanceaccountid32-optionu32-1)\n        \n*   [vesting](#vesting)\n    *   [storageVersion(): `PalletVestingReleases`](#storageversion-palletvestingreleases)\n        \n    *   [vesting(`AccountId32`): `Option<Vec<PalletVestingVestingInfo>>`](#vestingaccountid32-optionvecpalletvestingvestinginfo)\n        \n*   [voterList](#voterlist)\n    *   [counterForListNodes(): `u32`](#counterforlistnodes-u32)\n        \n    *   [listBags(`u64`): `Option<PalletBagsListListBag>`](#listbagsu64-optionpalletbagslistlistbag)\n        \n    *   [listNodes(`AccountId32`): `Option<PalletBagsListListNode>`](#listnodesaccountid32-optionpalletbagslistlistnode)\n        \n*   [whitelist](#whitelist)\n    *   [whitelistedCall(`H256`): `Option<Null>`](#whitelistedcallh256-optionnull)"}, {"title": null, "description": null, "source_url": "https://polkadot.js.org/docs/ui-identicon", "markdown": "[Skip to main content](#__docusaurus_skipToContent_fallback)\n\n[![polkadot{.js}](https://polkadot.js.org/docs/img/logo.svg)\\\n\\\n**polkadot{.js}**](/docs/)\n\n[Apps UI (Wallet)](https://polkadot.js.org/apps/)\n[GitHub](https://github.com/polkadot-js/docs)\n\nSearch...\n\n*   [Introduction](#)\n    \n*   [API](#)\n    \n*   [Metadata](#)\n    \n*   [Keyring](#)\n    \n*   [Crypto Utilities](#)\n    \n*   [Contracts (API)](#)\n    \n*   [Identicon (UI)](#)\n    \n    *   [Overview](/docs/ui-identicon)\n        \n    *   [React](/docs/ui-identicon/react)\n        \n    *   [React Native](/docs/ui-identicon/react-native)\n        \n    *   [Vue](/docs/ui-identicon/vue)\n        \n*   [Keyring (UI)](#)\n    \n*   [Extension](#)\n    \n*   [Run, Bundle, Test](#)\n    \n\n*   [](/docs/)\n    \n*   Identicon (UI)\n*   Overview\n\nOverview\n========\n\nThe identity icon components allows you to display an address (or publicKey) as an unique icon, generated based on the contents and/or hash of the provided value. Additionally it allows for a variety of themes, either based on a Polkadot theme, Substrate theme or as a colored \"Beachball\". Additionally a custom renderer is also provided for, i.e. for cases where an app-specific icon is required.\n\nGeneration for all these are consistent and based on the underlying libraries are made available for a variety of platforms used for UI development: React, React Native and Vue. Doing this across platforms allows for consistency, the underlying generation is the same, however the display is optimized for the specific toolkit used.\n\n[Edit this page](https://github.com/polkadot-js/docs/edit/master/docs/ui-identicon/intro.md)\n\n[Previous\\\n\\\nFAQ](/docs/api-contract/FAQ)\n[Next\\\n\\\nReact](/docs/ui-identicon/react)"}, {"title": null, "description": null, "source_url": "https://polkadot.js.org/docs/ui-identicon/react", "markdown": "[Skip to main content](#__docusaurus_skipToContent_fallback)\n\n[![polkadot{.js}](https://polkadot.js.org/docs/img/logo.svg)\\\n\\\n**polkadot{.js}**](/docs/)\n\n[Apps UI (Wallet)](https://polkadot.js.org/apps/)\n[GitHub](https://github.com/polkadot-js/docs)\n\nSearch...\n\n*   [Introduction](#)\n    \n*   [API](#)\n    \n*   [Metadata](#)\n    \n*   [Keyring](#)\n    \n*   [Crypto Utilities](#)\n    \n*   [Contracts (API)](#)\n    \n*   [Identicon (UI)](#)\n    \n    *   [Overview](/docs/ui-identicon)\n        \n    *   [React](/docs/ui-identicon/react)\n        \n    *   [React Native](/docs/ui-identicon/react-native)\n        \n    *   [Vue](/docs/ui-identicon/vue)\n        \n*   [Keyring (UI)](#)\n    \n*   [Extension](#)\n    \n*   [Run, Bundle, Test](#)\n    \n\n*   [](/docs/)\n    \n*   Identicon (UI)\n*   React\n\nOn this page\n\nReact\n=====\n\nA generic identity icon that can render icons based on the theme, be it Substrate or Polkadot\n\nUsage Examples[\u200b](#usage-examples \"Direct link to Usage Examples\")\n\n-------------------------------------------------------------------\n\nTo install the component, do `yarn add @polkadot/react-identicon`\n\nInside a React component, you can now render any account with the associated icon -\n\n    import Identicon from '@polkadot/react-identicon';...render () {  // address is an ss58-encoded address or publicKey (hex string or Uint8Array)  const { address } = this.props;  // size (optional) is a number, indicating the size (in pixels, 64 as default)  const size = 32;  // theme (optional), depicts the type of icon, one of  // 'polkadot', 'substrate' (default), 'beachball' or 'jdenticon'  const theme = 'polkadot';  // standard className & style props are also available  return (    <Identicon      value={address}      size={size}      theme={theme}    />  );}...\n\n[Edit this page](https://github.com/polkadot-js/docs/edit/master/docs/ui-identicon/react.md)\n\n[Previous\\\n\\\nOverview](/docs/ui-identicon)\n[Next\\\n\\\nReact Native](/docs/ui-identicon/react-native)\n\n*   [Usage Examples](#usage-examples)"}, {"title": null, "description": null, "source_url": "https://polkadot.js.org/docs/ui-identicon/react-native", "markdown": "[Skip to main content](#__docusaurus_skipToContent_fallback)\n\n[![polkadot{.js}](https://polkadot.js.org/docs/img/logo.svg)\\\n\\\n**polkadot{.js}**](/docs/)\n\n[Apps UI (Wallet)](https://polkadot.js.org/apps/)\n[GitHub](https://github.com/polkadot-js/docs)\n\nSearch...\n\n*   [Introduction](#)\n    \n*   [API](#)\n    \n*   [Metadata](#)\n    \n*   [Keyring](#)\n    \n*   [Crypto Utilities](#)\n    \n*   [Contracts (API)](#)\n    \n*   [Identicon (UI)](#)\n    \n    *   [Overview](/docs/ui-identicon)\n        \n    *   [React](/docs/ui-identicon/react)\n        \n    *   [React Native](/docs/ui-identicon/react-native)\n        \n    *   [Vue](/docs/ui-identicon/vue)\n        \n*   [Keyring (UI)](#)\n    \n*   [Extension](#)\n    \n*   [Run, Bundle, Test](#)\n    \n\n*   [](/docs/)\n    \n*   Identicon (UI)\n*   React Native\n\nOn this page\n\nReact Native\n============\n\nA generic identity icon that can render icons based on an address.\n\nUsage Examples[\u200b](#usage-examples \"Direct link to Usage Examples\")\n\n-------------------------------------------------------------------\n\nTo install the component, do `yarn add @polkadot/reactnative-identicon`\n\nInside a React component, you can now render any account with the associated icon -\n\n    import Identicon from '@polkadot/reactnative-identicon';...render () {  // address is an ss58-encoded address or publicKey (hex string or Uint8Array)  const { address } = this.props;  // size (optional) is a number, indicating the size (in pixels, 64 as default)  const size = 32;  // standard className & style props are also available  return (    <Identicon      value={address}      size={size}    />  );}...\n\n[Edit this page](https://github.com/polkadot-js/docs/edit/master/docs/ui-identicon/react-native.md)\n\n[Previous\\\n\\\nReact](/docs/ui-identicon/react)\n[Next\\\n\\\nVue](/docs/ui-identicon/vue)\n\n*   [Usage Examples](#usage-examples)"}, {"title": null, "description": null, "source_url": "https://polkadot.js.org/docs/ui-identicon/vue", "markdown": "[Skip to main content](#__docusaurus_skipToContent_fallback)\n\n[![polkadot{.js}](https://polkadot.js.org/docs/img/logo.svg)\\\n\\\n**polkadot{.js}**](/docs/)\n\n[Apps UI (Wallet)](https://polkadot.js.org/apps/)\n[GitHub](https://github.com/polkadot-js/docs)\n\nSearch...\n\n*   [Introduction](#)\n    \n*   [API](#)\n    \n*   [Metadata](#)\n    \n*   [Keyring](#)\n    \n*   [Crypto Utilities](#)\n    \n*   [Contracts (API)](#)\n    \n*   [Identicon (UI)](#)\n    \n    *   [Overview](/docs/ui-identicon)\n        \n    *   [React](/docs/ui-identicon/react)\n        \n    *   [React Native](/docs/ui-identicon/react-native)\n        \n    *   [Vue](/docs/ui-identicon/vue)\n        \n*   [Keyring (UI)](#)\n    \n*   [Extension](#)\n    \n*   [Run, Bundle, Test](#)\n    \n\n*   [](/docs/)\n    \n*   Identicon (UI)\n*   Vue\n\nOn this page\n\nVue\n===\n\nA generic identity icon that can render icons based on an address.\n\nUsage Examples[\u200b](#usage-examples \"Direct link to Usage Examples\")\n\n-------------------------------------------------------------------\n\nTo install the component, do `yarn add @polkadot/vue-identicon`\n\nInside a Vue component, you can now render any account with the associated icon, with associated props -\n\n*   `value` - the address you wish to display\n*   `size` (optional, defaults to `64`) - the size in pixels\n*   `theme` (optional, defaults to `substrate`) - the theme to use, one of\n    *   `polkadot` or\n    *   `substrate` (equivalent to `jdenticon`) or\n    *   `beachball` or\n    *   `empty` (displays nothing)\n\n    <template>  <Identicon    :size=\"128\"    :theme=\"'polkadot'\"    :value=\"'5GrwvaEF5zXb26Fz9rcQpDWS57CtERHpNehXCPcNoHGKutQY'\"  /></template><script>  import Identicon from '@polkadot/vue-identicon';  export default {    ...    components: { Identicon }    ...  };</script>\n\n[Edit this page](https://github.com/polkadot-js/docs/edit/master/docs/ui-identicon/vue.md)\n\n[Previous\\\n\\\nReact Native](/docs/ui-identicon/react-native)\n[Next\\\n\\\nOverview](/docs/ui-keyring)\n\n*   [Usage Examples](#usage-examples)"}, {"title": null, "description": null, "source_url": "https://polkadot.js.org/docs/ui-keyring", "markdown": "[Skip to main content](#__docusaurus_skipToContent_fallback)\n\n[![polkadot{.js}](https://polkadot.js.org/docs/img/logo.svg)\\\n\\\n**polkadot{.js}**](/docs/)\n\n[Apps UI (Wallet)](https://polkadot.js.org/apps/)\n[GitHub](https://github.com/polkadot-js/docs)\n\nSearch...\n\n*   [Introduction](#)\n    \n*   [API](#)\n    \n*   [Metadata](#)\n    \n*   [Keyring](#)\n    \n*   [Crypto Utilities](#)\n    \n*   [Contracts (API)](#)\n    \n*   [Identicon (UI)](#)\n    \n*   [Keyring (UI)](#)\n    \n    *   [Overview](/docs/ui-keyring)\n        \n    *   [Getting started](#)\n        \n*   [Extension](#)\n    \n*   [Run, Bundle, Test](#)\n    \n\n*   [](/docs/)\n    \n*   Keyring (UI)\n*   Overview\n\nOverview\n========\n\nThe [@polkadot/ui-keyring](https://www.npmjs.com/package/@polkadot/ui-keyring)\n package provides a wrapper around the [@polkadot/keyring](https://www.npmjs.com/package/@polkadot/keyring)\n package, specifically for use in browser environments. The `ui-keyring` only extends the `keyring`, but does not replace it. All underlying account management functions are provided by the base keyring, the browser-specific extensions allows for transparent management of account state in storage.\n\nAdditionally where the base keyring is focussed on accounts, the `ui-keyring` extends this to cater for an address-book, contracts and allows for accounts to be tied to a specific chain. Since UIs are typically split into different parts, it also allows for subscriptions on accounts, so notifications are available when accounts are added or removed.\n\nTo get started, follow the [getting started](/docs/ui-keyring/start)\n journey for installation and use.\n\n[Edit this page](https://github.com/polkadot-js/docs/edit/master/docs/ui-keyring/intro.md)\n\n[Previous\\\n\\\nVue](/docs/ui-identicon/vue)\n[Next\\\n\\\nOverview](/docs/ui-keyring/start)"}, {"title": null, "description": null, "source_url": "https://polkadot.js.org/docs/ui-keyring/start", "markdown": "[Skip to main content](#__docusaurus_skipToContent_fallback)\n\n[![polkadot{.js}](https://polkadot.js.org/docs/img/logo.svg)\\\n\\\n**polkadot{.js}**](/docs/)\n\n[Apps UI (Wallet)](https://polkadot.js.org/apps/)\n[GitHub](https://github.com/polkadot-js/docs)\n\nSearch...\n\n*   [Introduction](#)\n    \n*   [API](#)\n    \n*   [Metadata](#)\n    \n*   [Keyring](#)\n    \n*   [Crypto Utilities](#)\n    \n*   [Contracts (API)](#)\n    \n*   [Identicon (UI)](#)\n    \n*   [Keyring (UI)](#)\n    \n    *   [Overview](/docs/ui-keyring)\n        \n    *   [Getting started](#)\n        \n        *   [Overview](/docs/ui-keyring/start)\n            \n        *   [Installation](/docs/ui-keyring/start/install)\n            \n        *   [Initialization](/docs/ui-keyring/start/init)\n            \n        *   [Accounts](/docs/ui-keyring/start/accounts)\n            \n        *   [Addresses](/docs/ui-keyring/start/addresses)\n            \n        *   [Loading saved pairs](/docs/ui-keyring/start/loading)\n            \n*   [Extension](#)\n    \n*   [Run, Bundle, Test](#)\n    \n\n*   [](/docs/)\n    \n*   Keyring (UI)\n*   Getting started\n*   Overview\n\nOn this page\n\nOverview\n========\n\nThese sections should provide you with all the information needed to install the UI Keyring, understand the structure of the interfaces and allow you to start using it.\n\nWhat this is not[\u200b](#what-this-is-not \"Direct link to What this is not\")\n\n-------------------------------------------------------------------------\n\nThis is not line-by-line documentation of all the existing function calls available, nor it is tied to a specific framework that you may end up using. We have users using frameworks such as Angular, Electron, React, React Native, Next.js and Vue and even support direct environments such as browser extensions, Electron apps in addition to the normal web applications you may be used to. There will be some things in the libraries that are probably not covered, which brings us to the next point...\n\nHelp us help others[\u200b](#help-us-help-others \"Direct link to Help us help others\")\n\n----------------------------------------------------------------------------------\n\nIf you spot gaps in the information provided, or are uncertain about any specific area, please do [log an issue](https://github.com/polkadot-js/docs/issues)\n or if you are that way inclined, make a pull-request. We really want to have good documentation in these areas and allow people to be productive right from the start.\n\nReady? Steady? Go![\u200b](https://polkadot.js.org/docs/ui-keyring/start#ready-steady-go%20%22Direct%20link%20to%20Ready?%20Steady?%20Go!%22)\n\n----------------------------------------------------------------------------\n\nWith all that said, let's get started and walk through the [installation & dependencies](/docs/ui-keyring/start/install)\n\n[Edit this page](https://github.com/polkadot-js/docs/edit/master/docs/ui-keyring/start/intro.md)\n\n[Previous\\\n\\\nOverview](/docs/ui-keyring)\n[Next\\\n\\\nInstallation](/docs/ui-keyring/start/install)\n\n*   [What this is not](#what-this-is-not)\n    \n*   [Help us help others](#help-us-help-others)\n    \n*   [Ready? Steady? Go!](#ready-steady-go)"}, {"title": null, "description": null, "source_url": "https://polkadot.js.org/docs/usage/FAQ", "markdown": "[Skip to main content](#__docusaurus_skipToContent_fallback)\n\n[![polkadot{.js}](https://polkadot.js.org/docs/img/logo.svg)\\\n\\\n**polkadot{.js}**](/docs/)\n\n[Apps UI (Wallet)](https://polkadot.js.org/apps/)\n[GitHub](https://github.com/polkadot-js/docs)\n\nSearch...\n\n*   [Introduction](#)\n    \n*   [API](#)\n    \n*   [Metadata](#)\n    \n*   [Keyring](#)\n    \n*   [Crypto Utilities](#)\n    \n*   [Contracts (API)](#)\n    \n*   [Identicon (UI)](#)\n    \n*   [Keyring (UI)](#)\n    \n*   [Extension](#)\n    \n*   [Run, Bundle, Test](#)\n    \n    *   [FAQ](/docs/usage/FAQ)\n        \n\n*   [](/docs/)\n    \n*   Run, Bundle, Test\n*   FAQ\n\nOn this page\n\nFAQ\n===\n\nThe list will be updated/expanded as questions come up, dealing with some common build questions that library users find.\n\nUnder TypeScript I have TS compilation errors[\u200b](#under-typescript-i-have-ts-compilation-errors \"Direct link to Under TypeScript I have TS compilation errors\")\n\n----------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nWhen running into TypeScript errors, ensure that you are on a recent version. The API (and common utilities) rely extensively on [template literals](https://www.typescriptlang.org/docs/handbook/2/template-literal-types.html)\n which were introduced in [Typescript version 4.1](https://www.typescriptlang.org/docs/handbook/release-notes/typescript-4-1.html)\n.\n\nAdditionally the [rxjs library](https://github.com/ReactiveX/rxjs/)\n (used internally by the API), requires at least a [TypeScript 4.2 version](https://github.com/ReactiveX/rxjs/blob/6bd1c5f3cf0e387973b44698c48bc933e8c528aa/package.json#L9)\n, without it the Observable types are not correctly resolved.\n\nThe API itself generally always uses the latest TypeScript versions under development, but the use of new of features are delayed to at least 2 major versions to not require immediate upgrades of the compilers.\n\nOn Webpack 4 I have a parse error on import.meta.url[\u200b](#on-webpack-4-i-have-a-parse-error-on-importmetaurl \"Direct link to On Webpack 4 I have a parse error on import.meta.url\")\n\n-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nUnder CJS environments `__dirname` is used to determine package locations, on ESM environments the `new URL('.', import.meta.url).pathname` form is used to yield the same results. This resolves a long-running issue where the functionality was not available under ESM environments.\n\nWebpack 4 doesn't support the `import.meta.url` syntax (the Webpack 5 betas added support, which was not backported), however there is a plugin available to add this functionality, specifically [https://www.npmjs.com/package/@open-wc/webpack-import-meta-loader](https://www.npmjs.com/package/@open-wc/webpack-import-meta-loader)\n.\n\nThe following config has been verified as working for old versions of Webpack -\n\n    module: {  rules: [    {      test: /\\.js$/,      loader: require.resolve('@open-wc/webpack-import-meta-loader'),    }  ]}\n\nUnder my babel build, I have a BigInt to number conversion error[\u200b](#under-my-babel-build-i-have-a-bigint-to-number-conversion-error \"Direct link to Under my babel build, I have a BigInt to number conversion error\")\n\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nThis is casued by a Babel config that transforms inputs such as `2 ** 32` to `Math.pow(2, 32)`. The `transform-exponentiation-operator` is not `BigInt` aware, which means that it also transforms `BigInt(2) ** BigInt(256)` into an invalid `Math.pow(BigInt(2), BigInt(256))` which then fails on execution.\n\nIt is not specific to the API or libraries, but rather the local build environment and a known issue [https://github.com/blockstack/stacks.js/issues/1096#issuecomment-946350299](https://github.com/blockstack/stacks.js/issues/1096#issuecomment-946350299)\n which can be fixed with 1 of two overrides as per the linked issue -\n\n*   exclude Babel `transform-exponentiation-operator`\n*   adjust browserslist to exclude old versions\n\nI would like to use browser bundles, bypassing the compile step[\u200b](#i-would-like-to-use-browser-bundles-bypassing-the-compile-step \"Direct link to I would like to use browser bundles, bypassing the compile step\")\n\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nAll libraries ship with UMD browser bundles as part of the npm packages. For instance for the `@polkadot/util` libraries, a `bundle-polkadot-util.js` is provided. Depending on usage, multiple bundles may be needed, for instance the API would depend on both the `util` and `util-crypto` libraries.\n\nFor sample usage, please see the test HTML bundles provides in each relevant repo -\n\n*   [https://github.com/polkadot-js/common/blob/master/test-bundle.html](https://github.com/polkadot-js/common/blob/master/test-bundle.html)\n    \n*   [https://github.com/polkadot-js/api/blob/master/test-bundle.html](https://github.com/polkadot-js/api/blob/master/test-bundle.html)\n    \n*   [https://github.com/polkadot-js/extension/blob/master/test-bundle.html](https://github.com/polkadot-js/extension/blob/master/test-bundle.html)\n    \n\nI am having trouble with Jest, ESM and the libraries[\u200b](#i-am-having-trouble-with-jest-esm-and-the-libraries \"Direct link to I am having trouble with Jest, ESM and the libraries\")\n\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nAll the polkadot-js also use Jest for tests. When using Jest refer to the specific configuration for your environment -\n\n*   Jest, [https://jestjs.io/docs/ecmascript-modules](https://jestjs.io/docs/ecmascript-modules)\n    \n*   TS-Jest, [https://kulshekhar.github.io/ts-jest/docs/guides/esm-support](https://kulshekhar.github.io/ts-jest/docs/guides/esm-support)\n    \n\nAlso bear in mind that packages expose `main`, `module` and `exports` fields in `package.json`. Under environments such as [Jest using browserify/resolve](https://github.com/browserify/resolve/issues/222)\n, it is advisable to import from the root, i.e. `import { ApiPromise } from '@polkadot/api'` as opposed to `import { ApiPromise } from '@polkadot/api/promise'`\n\nAdditionally the [polkadot-js Jest config](https://github.com/polkadot-js/dev/blob/master/packages/dev/config/jest.cjs)\n may prove to be useful as a template, specifically the `transformIgnorePatterns` which excludes certain folders (assuming transforms are not empty as per the linked suggestions above).\n\n[Edit this page](https://github.com/polkadot-js/docs/edit/master/docs/usage/FAQ.md)\n\n[Previous\\\n\\\nFAQ](/docs/extension/FAQ)\n\n*   [Under TypeScript I have TS compilation errors](#under-typescript-i-have-ts-compilation-errors)\n    \n*   [On Webpack 4 I have a parse error on import.meta.url](#on-webpack-4-i-have-a-parse-error-on-importmetaurl)\n    \n*   [Under my babel build, I have a BigInt to number conversion error](#under-my-babel-build-i-have-a-bigint-to-number-conversion-error)\n    \n*   [I would like to use browser bundles, bypassing the compile step](#i-would-like-to-use-browser-bundles-bypassing-the-compile-step)\n    \n*   [I am having trouble with Jest, ESM and the libraries](#i-am-having-trouble-with-jest-esm-and-the-libraries)"}, {"title": null, "description": null, "source_url": "https://polkadot.js.org/docs/util-crypto", "markdown": "[Skip to main content](#__docusaurus_skipToContent_fallback)\n\n[![polkadot{.js}](https://polkadot.js.org/docs/img/logo.svg)\\\n\\\n**polkadot{.js}**](/docs/)\n\n[Apps UI (Wallet)](https://polkadot.js.org/apps/)\n[GitHub](https://github.com/polkadot-js/docs)\n\nSearch...\n\n*   [Introduction](#)\n    \n*   [API](#)\n    \n*   [Metadata](#)\n    \n*   [Keyring](#)\n    \n*   [Crypto Utilities](#)\n    \n    *   [Overview](/docs/util-crypto)\n        \n    *   [Examples](#)\n        \n    *   [FAQ](/docs/util-crypto/FAQ)\n        \n*   [Contracts (API)](#)\n    \n*   [Identicon (UI)](#)\n    \n*   [Keyring (UI)](#)\n    \n*   [Extension](#)\n    \n*   [Run, Bundle, Test](#)\n    \n\n*   [](/docs/)\n    \n*   Crypto Utilities\n*   Overview\n\nOverview\n========\n\nFor oft-repeated questions, the [FAQ](/docs/util-crypto/FAQ)\n may have what you are looking for.\n\n[Edit this page](https://github.com/polkadot-js/docs/edit/master/docs/util-crypto/intro.md)\n\n[Previous\\\n\\\nFAQ](/docs/keyring/FAQ)\n[Next\\\n\\\nOverview](/docs/util-crypto/examples)"}, {"title": null, "description": null, "source_url": "https://polkadot.js.org/docs/util-crypto/examples", "markdown": "[Skip to main content](#__docusaurus_skipToContent_fallback)\n\n[![polkadot{.js}](https://polkadot.js.org/docs/img/logo.svg)\\\n\\\n**polkadot{.js}**](/docs/)\n\n[Apps UI (Wallet)](https://polkadot.js.org/apps/)\n[GitHub](https://github.com/polkadot-js/docs)\n\nSearch...\n\n*   [Introduction](#)\n    \n*   [API](#)\n    \n*   [Metadata](#)\n    \n*   [Keyring](#)\n    \n*   [Crypto Utilities](#)\n    \n    *   [Overview](/docs/util-crypto)\n        \n    *   [Examples](#)\n        \n        *   [Overview](/docs/util-crypto/examples)\n            \n        *   [Create Mnemonic](/docs/util-crypto/examples/create-mnemonic)\n            \n        *   [Validate Address](/docs/util-crypto/examples/validate-address)\n            \n        *   [Encrypt & Decrypt Messages](/docs/util-crypto/examples/encrypt-decrypt)\n            \n        *   [Generate a Multisig Account](/docs/util-crypto/examples/create-multisig)\n            \n        *   [Verify Signature](/docs/util-crypto/examples/verify-signature)\n            \n        *   [Hash Data](/docs/util-crypto/examples/hash-data)\n            \n    *   [FAQ](/docs/util-crypto/FAQ)\n        \n*   [Contracts (API)](#)\n    \n*   [Identicon (UI)](#)\n    \n*   [Keyring (UI)](#)\n    \n*   [Extension](#)\n    \n*   [Run, Bundle, Test](#)\n    \n\n*   [](/docs/)\n    \n*   Crypto Utilities\n*   Examples\n*   Overview\n\nOn this page\n\nOverview\n========\n\nHere you will find a list of examples that takes you through the basics of encrypting and decrypting messages using NaCl, signing a message with a seed and verifying it using NaCl, and generating and validating mnemonics for account seeds.\n\nRunning the examples[\u200b](#running-the-examples \"Direct link to Running the examples\")\n\n-------------------------------------------------------------------------------------\n\nFrom within each folder run the following to install required dependencies and to execute the example:\n\n    yarn;yarn start\n\n[Edit this page](https://github.com/polkadot-js/docs/edit/master/docs/util-crypto/examples/intro.md)\n\n[Previous\\\n\\\nOverview](/docs/util-crypto)\n[Next\\\n\\\nCreate Mnemonic](/docs/util-crypto/examples/create-mnemonic)\n\n*   [Running the examples](#running-the-examples)"}, {"title": null, "description": null, "source_url": "https://polkadot.js.org/docs/util-crypto/FAQ", "markdown": "[Skip to main content](#__docusaurus_skipToContent_fallback)\n\n[![polkadot{.js}](https://polkadot.js.org/docs/img/logo.svg)\\\n\\\n**polkadot{.js}**](/docs/)\n\n[Apps UI (Wallet)](https://polkadot.js.org/apps/)\n[GitHub](https://github.com/polkadot-js/docs)\n\nSearch...\n\n*   [Introduction](#)\n    \n*   [API](#)\n    \n*   [Metadata](#)\n    \n*   [Keyring](#)\n    \n*   [Crypto Utilities](#)\n    \n    *   [Overview](/docs/util-crypto)\n        \n    *   [Examples](#)\n        \n    *   [FAQ](/docs/util-crypto/FAQ)\n        \n*   [Contracts (API)](#)\n    \n*   [Identicon (UI)](#)\n    \n*   [Keyring (UI)](#)\n    \n*   [Extension](#)\n    \n*   [Run, Bundle, Test](#)\n    \n\n*   [](/docs/)\n    \n*   Crypto Utilities\n*   FAQ\n\nOn this page\n\nFAQ\n===\n\nThe list will be updated/expanded as questions come up, dealing with some common issues that util-crypto users find.\n\nI am having trouble initializing the wasm interface[\u200b](#i-am-having-trouble-initializing-the-wasm-interface \"Direct link to I am having trouble initializing the wasm interface\")\n\n----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nThe `@polkadot/util-crypto` libraries has a WASM backend but has JS fallbacks in place for most operations. This means that when the WASM has been initialized it will be used, alternatively the JS fallbacks will be utilized. Some interfaces, such as using sr25519 however are only available via WASM. When tyring to use these without a completed initialization and error such as \"The WASM interface has not been initialized. Ensure that you wait for the initialization Promise before attempting to use WASM-only interfaces.\" will be thrown.\n\nWhen using an import/require from the library the WASM async init will be automatically started. Due to the async nature of this process (which is also started automatically in the API) it may not have been completed before attempting to use. In these cases always use a `await cryptoWaitReady()` before attempting interfaces that required WASM.\n\nMy React Native build runs out of memory[\u200b](#my-react-native-build-runs-out-of-memory \"Direct link to My React Native build runs out of memory\")\n\n-------------------------------------------------------------------------------------------------------------------------------------------------\n\nWhen using the util-crypto packages with RN, due to a lack of support, an [asm.js fallback](https://github.com/polkadot-js/wasm/issues/19)\n is provided since (most) React Native implementations does not have a native WASM executor.\n\nWhile the fallback is fully tested and equivalent to the WASM version, it does add some memory load to the application build process. Additionally simnce the asm.js bundle is quite large, the build process is by no means fast. Ensure that you adjust your build flags to include `NODE_OPTIONS=--max_old_space_size=8192`, for instance doing `NODE_OPTIONS=--max_old_space_size=8192 yarn run ios`\n\nI don't have WASM available in my environment[\u200b](#i-dont-have-wasm-available-in-my-environment \"Direct link to I don't have WASM available in my environment\")\n\n---------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nThe `util-crypto` package relies on `wasm-crypto` to provide faster interfaces with JS fallbacks where WASM is not available. In some cases such as sr25519, only WASM interfaces are available, so it will not be operational without.\n\nFor some environments (Java -> JS bindings, React Native, etc.) WASM may not be available at all. To cater for these, an asm.js interface is also provided. Due to the size it adds to any bundler, it is not enabled by default, so does require specific initilization to be used.\n\nIf you are upgrading from `@polkadot/wasm-crypto` prior to 5.0.1 or `@polkadot/util-crypto` prior to 8.6.1 the above replaces any overrides and aliases that you may have added to your bundler. Additionally, for RN enviroments, this step is now required, where previously react-native defaulted to injecting asm.js.\n\nAnd example of initialization to use no WASM and only asm.js is provided here -\n\n    // important this needs to be done before any `@polkadot/util-crypto` operations, if not// applied, the environment will use the `initOnlyWasm` interface by defaultimport '@polkadot/wasm-crypto/initOnlyAsm';\n\nIn the same vein, if you would like to use WASM by default with an asm.js fallback, the following initialization option can be used -\n\n    // important this needs to be done before any `@polkadot/util-crypto` operationsimport '@polkadot/wasm-crypto/initWasmAsm';\n\n[Edit this page](https://github.com/polkadot-js/docs/edit/master/docs/util-crypto/FAQ.md)\n\n[Previous\\\n\\\nHash Data](/docs/util-crypto/examples/hash-data)\n[Next\\\n\\\nOverview](/docs/api-contract)\n\n*   [I am having trouble initializing the wasm interface](#i-am-having-trouble-initializing-the-wasm-interface)\n    \n*   [My React Native build runs out of memory](#my-react-native-build-runs-out-of-memory)\n    \n*   [I don't have WASM available in my environment](#i-dont-have-wasm-available-in-my-environment)"}]