import CodeViewer from "@/components/elements/CodeViewer";
import React, { useEffect, useState } from "react";

const ReadmeCode = () => {
	const [isClient, setIsClient] = useState(false);

	useEffect(() => {
		setIsClient(true);
	}, []);

	if (!isClient) {
		return null;
	}

	const readmeContent = `
# 📚 Readme.

このサイトは以下の技術スタックで構築されています。

## 技術スタック

- **Next.js** (SiNextdotjs): フロントエンドフレームワーク
- **Shiki** 🎨: シンタックスハイライト
- **Lit Element** 💻: Web Componentsの作成
- **TurboRepo** (SiTurborepo): モノレポ管理
- **Notion API** (SiNotion): ブログコンテンツ管理
- **Hono** 🔗: OGPとNotion APIの連携（BFF）
- **WebAssembly (Rust)** (SiWebassembly): Markdown to HTML パース
- **Dify** 🤖: AIChatの連携

## アーキテクチャ図

![サイトアーキテクチャ図](/images/arch.png)

*Generated by Eraser AI*

## 追加情報

このサイトは、開発していて楽しいWeb技術を活用して構築されています。Next.jsをベースに、Notion APIを利用したコンテンツ管理や、Rustで実装されたWebAssemblyによるMarkdownパースなどを取り入れています。
  `;

	const contentLines = readmeContent.split("\n");

	return (
		<div className="readme-code tw-max-w-4xl">
			<div className="code-container">
				<div className="line-numbers">
					{contentLines.map((line, index) => (
						<span key={line}>{index + 1}</span>
					))}
				</div>
				<CodeViewer content={readmeContent} language="markdown" />
			</div>
		</div>
	);
};

export default ReadmeCode;
